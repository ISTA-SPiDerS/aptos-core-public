<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2150" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2133.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="2133.00"> </text><svg id="frames" x="10" width="1180" total_samples="107368"><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (13 samples, 0.01%)</title><rect x="0.0000%" y="2069" width="0.0121%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="13"/><text x="0.2500%" y="2079.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (51 samples, 0.05%)</title><rect x="0.0158%" y="2053" width="0.0475%" height="15" fill="rgb(217,0,24)" fg:x="17" fg:w="51"/><text x="0.2658%" y="2063.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (73 samples, 0.07%)</title><rect x="0.0121%" y="2069" width="0.0680%" height="15" fill="rgb(221,193,54)" fg:x="13" fg:w="73"/><text x="0.2621%" y="2079.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (159 samples, 0.15%)</title><rect x="0.0801%" y="2053" width="0.1481%" height="15" fill="rgb(248,212,6)" fg:x="86" fg:w="159"/><text x="0.3301%" y="2063.50"></text></g><g><title>serde::de::SeqAccess::next_element (159 samples, 0.15%)</title><rect x="0.0801%" y="2037" width="0.1481%" height="15" fill="rgb(208,68,35)" fg:x="86" fg:w="159"/><text x="0.3301%" y="2047.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (159 samples, 0.15%)</title><rect x="0.0801%" y="2021" width="0.1481%" height="15" fill="rgb(232,128,0)" fg:x="86" fg:w="159"/><text x="0.3301%" y="2031.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (159 samples, 0.15%)</title><rect x="0.0801%" y="2005" width="0.1481%" height="15" fill="rgb(207,160,47)" fg:x="86" fg:w="159"/><text x="0.3301%" y="2015.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (159 samples, 0.15%)</title><rect x="0.0801%" y="1989" width="0.1481%" height="15" fill="rgb(228,23,34)" fg:x="86" fg:w="159"/><text x="0.3301%" y="1999.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (159 samples, 0.15%)</title><rect x="0.0801%" y="1973" width="0.1481%" height="15" fill="rgb(218,30,26)" fg:x="86" fg:w="159"/><text x="0.3301%" y="1983.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (159 samples, 0.15%)</title><rect x="0.0801%" y="1957" width="0.1481%" height="15" fill="rgb(220,122,19)" fg:x="86" fg:w="159"/><text x="0.3301%" y="1967.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (170 samples, 0.16%)</title><rect x="0.0801%" y="2069" width="0.1583%" height="15" fill="rgb(250,228,42)" fg:x="86" fg:w="170"/><text x="0.3301%" y="2079.50"></text></g><g><title>bcs::de::SeqDeserializer::new (11 samples, 0.01%)</title><rect x="0.2282%" y="2053" width="0.0102%" height="15" fill="rgb(240,193,28)" fg:x="245" fg:w="11"/><text x="0.4782%" y="2063.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (12 samples, 0.01%)</title><rect x="0.3176%" y="2069" width="0.0112%" height="15" fill="rgb(216,20,37)" fg:x="341" fg:w="12"/><text x="0.5676%" y="2079.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::update (11 samples, 0.01%)</title><rect x="0.3288%" y="1957" width="0.0102%" height="15" fill="rgb(206,188,39)" fg:x="353" fg:w="11"/><text x="0.5788%" y="1967.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (57 samples, 0.05%)</title><rect x="0.3288%" y="2069" width="0.0531%" height="15" fill="rgb(217,207,13)" fg:x="353" fg:w="57"/><text x="0.5788%" y="2079.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (57 samples, 0.05%)</title><rect x="0.3288%" y="2053" width="0.0531%" height="15" fill="rgb(231,73,38)" fg:x="353" fg:w="57"/><text x="0.5788%" y="2063.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (57 samples, 0.05%)</title><rect x="0.3288%" y="2037" width="0.0531%" height="15" fill="rgb(225,20,46)" fg:x="353" fg:w="57"/><text x="0.5788%" y="2047.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (57 samples, 0.05%)</title><rect x="0.3288%" y="2021" width="0.0531%" height="15" fill="rgb(210,31,41)" fg:x="353" fg:w="57"/><text x="0.5788%" y="2031.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (57 samples, 0.05%)</title><rect x="0.3288%" y="2005" width="0.0531%" height="15" fill="rgb(221,200,47)" fg:x="353" fg:w="57"/><text x="0.5788%" y="2015.50"></text></g><g><title>std::io::Write::write_all (57 samples, 0.05%)</title><rect x="0.3288%" y="1989" width="0.0531%" height="15" fill="rgb(226,26,5)" fg:x="353" fg:w="57"/><text x="0.5788%" y="1999.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (57 samples, 0.05%)</title><rect x="0.3288%" y="1973" width="0.0531%" height="15" fill="rgb(249,33,26)" fg:x="353" fg:w="57"/><text x="0.5788%" y="1983.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (46 samples, 0.04%)</title><rect x="0.3390%" y="1957" width="0.0428%" height="15" fill="rgb(235,183,28)" fg:x="364" fg:w="46"/><text x="0.5890%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.01%)</title><rect x="0.3875%" y="2053" width="0.0102%" height="15" fill="rgb(221,5,38)" fg:x="416" fg:w="11"/><text x="0.6375%" y="2063.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.01%)</title><rect x="0.3875%" y="2037" width="0.0102%" height="15" fill="rgb(247,18,42)" fg:x="416" fg:w="11"/><text x="0.6375%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.01%)</title><rect x="0.3875%" y="2069" width="0.0112%" height="15" fill="rgb(241,131,45)" fg:x="416" fg:w="12"/><text x="0.6375%" y="2079.50"></text></g><g><title>move_core_types::value::MoveStructLayout::fields (11 samples, 0.01%)</title><rect x="0.4266%" y="2037" width="0.0102%" height="15" fill="rgb(249,31,29)" fg:x="458" fg:w="11"/><text x="0.6766%" y="2047.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.02%)</title><rect x="0.4247%" y="2053" width="0.0168%" height="15" fill="rgb(225,111,53)" fg:x="456" fg:w="18"/><text x="0.6747%" y="2063.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.02%)</title><rect x="0.4247%" y="2069" width="0.0186%" height="15" fill="rgb(238,160,17)" fg:x="456" fg:w="20"/><text x="0.6747%" y="2079.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (20 samples, 0.02%)</title><rect x="0.4452%" y="2069" width="0.0186%" height="15" fill="rgb(214,148,48)" fg:x="478" fg:w="20"/><text x="0.6952%" y="2079.50"></text></g><g><title>[unknown] (59 samples, 0.05%)</title><rect x="0.5048%" y="2037" width="0.0550%" height="15" fill="rgb(232,36,49)" fg:x="542" fg:w="59"/><text x="0.7548%" y="2047.50"></text></g><g><title>[unknown] (49 samples, 0.05%)</title><rect x="0.5141%" y="2021" width="0.0456%" height="15" fill="rgb(209,103,24)" fg:x="552" fg:w="49"/><text x="0.7641%" y="2031.50"></text></g><g><title>[unknown] (45 samples, 0.04%)</title><rect x="0.5178%" y="2005" width="0.0419%" height="15" fill="rgb(229,88,8)" fg:x="556" fg:w="45"/><text x="0.7678%" y="2015.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="0.5290%" y="1989" width="0.0307%" height="15" fill="rgb(213,181,19)" fg:x="568" fg:w="33"/><text x="0.7790%" y="1999.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="0.5458%" y="1973" width="0.0140%" height="15" fill="rgb(254,191,54)" fg:x="586" fg:w="15"/><text x="0.7958%" y="1983.50"></text></g><g><title>__ctype_init (12 samples, 0.01%)</title><rect x="0.5598%" y="2037" width="0.0112%" height="15" fill="rgb(241,83,37)" fg:x="601" fg:w="12"/><text x="0.8098%" y="2047.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="0.6576%" y="1429" width="0.0177%" height="15" fill="rgb(233,36,39)" fg:x="706" fg:w="19"/><text x="0.9076%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="0.6576%" y="1413" width="0.0177%" height="15" fill="rgb(226,3,54)" fg:x="706" fg:w="19"/><text x="0.9076%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="0.6594%" y="1397" width="0.0158%" height="15" fill="rgb(245,192,40)" fg:x="708" fg:w="17"/><text x="0.9094%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="0.6641%" y="1381" width="0.0112%" height="15" fill="rgb(238,167,29)" fg:x="713" fg:w="12"/><text x="0.9141%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="0.6650%" y="1365" width="0.0102%" height="15" fill="rgb(232,182,51)" fg:x="714" fg:w="11"/><text x="0.9150%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.03%)</title><rect x="0.6520%" y="1509" width="0.0251%" height="15" fill="rgb(231,60,39)" fg:x="700" fg:w="27"/><text x="0.9020%" y="1519.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.02%)</title><rect x="0.6576%" y="1493" width="0.0196%" height="15" fill="rgb(208,69,12)" fg:x="706" fg:w="21"/><text x="0.9076%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.02%)</title><rect x="0.6576%" y="1477" width="0.0196%" height="15" fill="rgb(235,93,37)" fg:x="706" fg:w="21"/><text x="0.9076%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.02%)</title><rect x="0.6576%" y="1461" width="0.0196%" height="15" fill="rgb(213,116,39)" fg:x="706" fg:w="21"/><text x="0.9076%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.02%)</title><rect x="0.6576%" y="1445" width="0.0196%" height="15" fill="rgb(222,207,29)" fg:x="706" fg:w="21"/><text x="0.9076%" y="1455.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (63 samples, 0.06%)</title><rect x="0.6426%" y="1541" width="0.0587%" height="15" fill="rgb(206,96,30)" fg:x="690" fg:w="63"/><text x="0.8926%" y="1551.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (54 samples, 0.05%)</title><rect x="0.6510%" y="1525" width="0.0503%" height="15" fill="rgb(218,138,4)" fg:x="699" fg:w="54"/><text x="0.9010%" y="1535.50"></text></g><g><title>core::fmt::Formatter::pad_integral (26 samples, 0.02%)</title><rect x="0.6771%" y="1509" width="0.0242%" height="15" fill="rgb(250,191,14)" fg:x="727" fg:w="26"/><text x="0.9271%" y="1519.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (69 samples, 0.06%)</title><rect x="0.6389%" y="1557" width="0.0643%" height="15" fill="rgb(239,60,40)" fg:x="686" fg:w="69"/><text x="0.8889%" y="1567.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (13 samples, 0.01%)</title><rect x="0.7498%" y="1125" width="0.0121%" height="15" fill="rgb(206,27,48)" fg:x="805" fg:w="13"/><text x="0.9998%" y="1135.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (29 samples, 0.03%)</title><rect x="0.7367%" y="1173" width="0.0270%" height="15" fill="rgb(225,35,8)" fg:x="791" fg:w="29"/><text x="0.9867%" y="1183.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (29 samples, 0.03%)</title><rect x="0.7367%" y="1157" width="0.0270%" height="15" fill="rgb(250,213,24)" fg:x="791" fg:w="29"/><text x="0.9867%" y="1167.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (15 samples, 0.01%)</title><rect x="0.7498%" y="1141" width="0.0140%" height="15" fill="rgb(247,123,22)" fg:x="805" fg:w="15"/><text x="0.9998%" y="1151.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (44 samples, 0.04%)</title><rect x="0.7293%" y="1189" width="0.0410%" height="15" fill="rgb(231,138,38)" fg:x="783" fg:w="44"/><text x="0.9793%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (60 samples, 0.06%)</title><rect x="0.7255%" y="1237" width="0.0559%" height="15" fill="rgb(231,145,46)" fg:x="779" fg:w="60"/><text x="0.9755%" y="1247.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (60 samples, 0.06%)</title><rect x="0.7255%" y="1221" width="0.0559%" height="15" fill="rgb(251,118,11)" fg:x="779" fg:w="60"/><text x="0.9755%" y="1231.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (60 samples, 0.06%)</title><rect x="0.7255%" y="1205" width="0.0559%" height="15" fill="rgb(217,147,25)" fg:x="779" fg:w="60"/><text x="0.9755%" y="1215.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (12 samples, 0.01%)</title><rect x="0.7702%" y="1189" width="0.0112%" height="15" fill="rgb(247,81,37)" fg:x="827" fg:w="12"/><text x="1.0202%" y="1199.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (72 samples, 0.07%)</title><rect x="0.7200%" y="1333" width="0.0671%" height="15" fill="rgb(209,12,38)" fg:x="773" fg:w="72"/><text x="0.9700%" y="1343.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (69 samples, 0.06%)</title><rect x="0.7227%" y="1317" width="0.0643%" height="15" fill="rgb(227,1,9)" fg:x="776" fg:w="69"/><text x="0.9727%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (69 samples, 0.06%)</title><rect x="0.7227%" y="1301" width="0.0643%" height="15" fill="rgb(248,47,43)" fg:x="776" fg:w="69"/><text x="0.9727%" y="1311.50"></text></g><g><title>std::panicking::try (69 samples, 0.06%)</title><rect x="0.7227%" y="1285" width="0.0643%" height="15" fill="rgb(221,10,30)" fg:x="776" fg:w="69"/><text x="0.9727%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (69 samples, 0.06%)</title><rect x="0.7227%" y="1269" width="0.0643%" height="15" fill="rgb(210,229,1)" fg:x="776" fg:w="69"/><text x="0.9727%" y="1279.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (69 samples, 0.06%)</title><rect x="0.7227%" y="1253" width="0.0643%" height="15" fill="rgb(222,148,37)" fg:x="776" fg:w="69"/><text x="0.9727%" y="1263.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (87 samples, 0.08%)</title><rect x="0.7106%" y="1381" width="0.0810%" height="15" fill="rgb(234,67,33)" fg:x="763" fg:w="87"/><text x="0.9606%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (87 samples, 0.08%)</title><rect x="0.7106%" y="1365" width="0.0810%" height="15" fill="rgb(247,98,35)" fg:x="763" fg:w="87"/><text x="0.9606%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (87 samples, 0.08%)</title><rect x="0.7106%" y="1349" width="0.0810%" height="15" fill="rgb(247,138,52)" fg:x="763" fg:w="87"/><text x="0.9606%" y="1359.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (22 samples, 0.02%)</title><rect x="0.8112%" y="1269" width="0.0205%" height="15" fill="rgb(213,79,30)" fg:x="871" fg:w="22"/><text x="1.0612%" y="1279.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22 samples, 0.02%)</title><rect x="0.8112%" y="1253" width="0.0205%" height="15" fill="rgb(246,177,23)" fg:x="871" fg:w="22"/><text x="1.0612%" y="1263.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.02%)</title><rect x="0.8122%" y="1237" width="0.0196%" height="15" fill="rgb(230,62,27)" fg:x="872" fg:w="21"/><text x="1.0622%" y="1247.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.02%)</title><rect x="0.8122%" y="1221" width="0.0196%" height="15" fill="rgb(216,154,8)" fg:x="872" fg:w="21"/><text x="1.0622%" y="1231.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (20 samples, 0.02%)</title><rect x="0.8131%" y="1205" width="0.0186%" height="15" fill="rgb(244,35,45)" fg:x="873" fg:w="20"/><text x="1.0631%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (33 samples, 0.03%)</title><rect x="0.8094%" y="1285" width="0.0307%" height="15" fill="rgb(251,115,12)" fg:x="869" fg:w="33"/><text x="1.0594%" y="1295.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (56 samples, 0.05%)</title><rect x="0.7973%" y="1317" width="0.0522%" height="15" fill="rgb(240,54,50)" fg:x="856" fg:w="56"/><text x="1.0473%" y="1327.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (56 samples, 0.05%)</title><rect x="0.7973%" y="1301" width="0.0522%" height="15" fill="rgb(233,84,52)" fg:x="856" fg:w="56"/><text x="1.0473%" y="1311.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (69 samples, 0.06%)</title><rect x="0.7945%" y="1349" width="0.0643%" height="15" fill="rgb(207,117,47)" fg:x="853" fg:w="69"/><text x="1.0445%" y="1359.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (69 samples, 0.06%)</title><rect x="0.7945%" y="1333" width="0.0643%" height="15" fill="rgb(249,43,39)" fg:x="853" fg:w="69"/><text x="1.0445%" y="1343.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (13 samples, 0.01%)</title><rect x="0.8718%" y="1253" width="0.0121%" height="15" fill="rgb(209,38,44)" fg:x="936" fg:w="13"/><text x="1.1218%" y="1263.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="0.8727%" y="1237" width="0.0112%" height="15" fill="rgb(236,212,23)" fg:x="937" fg:w="12"/><text x="1.1227%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (12 samples, 0.01%)</title><rect x="0.8727%" y="1221" width="0.0112%" height="15" fill="rgb(242,79,21)" fg:x="937" fg:w="12"/><text x="1.1227%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (12 samples, 0.01%)</title><rect x="0.8727%" y="1205" width="0.0112%" height="15" fill="rgb(211,96,35)" fg:x="937" fg:w="12"/><text x="1.1227%" y="1215.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="0.8839%" y="1253" width="0.0112%" height="15" fill="rgb(253,215,40)" fg:x="949" fg:w="12"/><text x="1.1339%" y="1263.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="0.9081%" y="1157" width="0.0112%" height="15" fill="rgb(211,81,21)" fg:x="975" fg:w="12"/><text x="1.1581%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="0.9081%" y="1141" width="0.0112%" height="15" fill="rgb(208,190,38)" fg:x="975" fg:w="12"/><text x="1.1581%" y="1151.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (12 samples, 0.01%)</title><rect x="0.9081%" y="1125" width="0.0112%" height="15" fill="rgb(235,213,38)" fg:x="975" fg:w="12"/><text x="1.1581%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (12 samples, 0.01%)</title><rect x="0.9081%" y="1109" width="0.0112%" height="15" fill="rgb(237,122,38)" fg:x="975" fg:w="12"/><text x="1.1581%" y="1119.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (12 samples, 0.01%)</title><rect x="0.9081%" y="1093" width="0.0112%" height="15" fill="rgb(244,218,35)" fg:x="975" fg:w="12"/><text x="1.1581%" y="1103.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="0.9090%" y="1077" width="0.0102%" height="15" fill="rgb(240,68,47)" fg:x="976" fg:w="11"/><text x="1.1590%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (40 samples, 0.04%)</title><rect x="0.9053%" y="1237" width="0.0373%" height="15" fill="rgb(210,16,53)" fg:x="972" fg:w="40"/><text x="1.1553%" y="1247.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (39 samples, 0.04%)</title><rect x="0.9062%" y="1221" width="0.0363%" height="15" fill="rgb(235,124,12)" fg:x="973" fg:w="39"/><text x="1.1562%" y="1231.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (39 samples, 0.04%)</title><rect x="0.9062%" y="1205" width="0.0363%" height="15" fill="rgb(224,169,11)" fg:x="973" fg:w="39"/><text x="1.1562%" y="1215.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (39 samples, 0.04%)</title><rect x="0.9062%" y="1189" width="0.0363%" height="15" fill="rgb(250,166,2)" fg:x="973" fg:w="39"/><text x="1.1562%" y="1199.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (37 samples, 0.03%)</title><rect x="0.9081%" y="1173" width="0.0345%" height="15" fill="rgb(242,216,29)" fg:x="975" fg:w="37"/><text x="1.1581%" y="1183.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (25 samples, 0.02%)</title><rect x="0.9193%" y="1157" width="0.0233%" height="15" fill="rgb(230,116,27)" fg:x="987" fg:w="25"/><text x="1.1693%" y="1167.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="0.9304%" y="1141" width="0.0121%" height="15" fill="rgb(228,99,48)" fg:x="999" fg:w="13"/><text x="1.1804%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="0.9304%" y="1125" width="0.0121%" height="15" fill="rgb(253,11,6)" fg:x="999" fg:w="13"/><text x="1.1804%" y="1135.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (13 samples, 0.01%)</title><rect x="0.9304%" y="1109" width="0.0121%" height="15" fill="rgb(247,143,39)" fg:x="999" fg:w="13"/><text x="1.1804%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (13 samples, 0.01%)</title><rect x="0.9304%" y="1093" width="0.0121%" height="15" fill="rgb(236,97,10)" fg:x="999" fg:w="13"/><text x="1.1804%" y="1103.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (13 samples, 0.01%)</title><rect x="0.9304%" y="1077" width="0.0121%" height="15" fill="rgb(233,208,19)" fg:x="999" fg:w="13"/><text x="1.1804%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (45 samples, 0.04%)</title><rect x="0.9025%" y="1253" width="0.0419%" height="15" fill="rgb(216,164,2)" fg:x="969" fg:w="45"/><text x="1.1525%" y="1263.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (99 samples, 0.09%)</title><rect x="0.8699%" y="1285" width="0.0922%" height="15" fill="rgb(220,129,5)" fg:x="934" fg:w="99"/><text x="1.1199%" y="1295.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (99 samples, 0.09%)</title><rect x="0.8699%" y="1269" width="0.0922%" height="15" fill="rgb(242,17,10)" fg:x="934" fg:w="99"/><text x="1.1199%" y="1279.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_imported_functions (12 samples, 0.01%)</title><rect x="0.9621%" y="1285" width="0.0112%" height="15" fill="rgb(242,107,0)" fg:x="1033" fg:w="12"/><text x="1.2121%" y="1295.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (121 samples, 0.11%)</title><rect x="0.8625%" y="1317" width="0.1127%" height="15" fill="rgb(251,28,31)" fg:x="926" fg:w="121"/><text x="1.1125%" y="1327.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (121 samples, 0.11%)</title><rect x="0.8625%" y="1301" width="0.1127%" height="15" fill="rgb(233,223,10)" fg:x="926" fg:w="121"/><text x="1.1125%" y="1311.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (125 samples, 0.12%)</title><rect x="0.8597%" y="1333" width="0.1164%" height="15" fill="rgb(215,21,27)" fg:x="923" fg:w="125"/><text x="1.1097%" y="1343.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (24 samples, 0.02%)</title><rect x="0.9845%" y="1237" width="0.0224%" height="15" fill="rgb(232,23,21)" fg:x="1057" fg:w="24"/><text x="1.2345%" y="1247.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (23 samples, 0.02%)</title><rect x="0.9854%" y="1221" width="0.0214%" height="15" fill="rgb(244,5,23)" fg:x="1058" fg:w="23"/><text x="1.2354%" y="1231.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (26 samples, 0.02%)</title><rect x="1.0096%" y="1189" width="0.0242%" height="15" fill="rgb(226,81,46)" fg:x="1084" fg:w="26"/><text x="1.2596%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.02%)</title><rect x="1.0152%" y="1173" width="0.0186%" height="15" fill="rgb(247,70,30)" fg:x="1090" fg:w="20"/><text x="1.2652%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.02%)</title><rect x="1.0152%" y="1157" width="0.0186%" height="15" fill="rgb(212,68,19)" fg:x="1090" fg:w="20"/><text x="1.2652%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.01%)</title><rect x="1.0236%" y="1141" width="0.0102%" height="15" fill="rgb(240,187,13)" fg:x="1099" fg:w="11"/><text x="1.2736%" y="1151.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (15 samples, 0.01%)</title><rect x="1.0338%" y="1157" width="0.0140%" height="15" fill="rgb(223,113,26)" fg:x="1110" fg:w="15"/><text x="1.2838%" y="1167.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (17 samples, 0.02%)</title><rect x="1.0338%" y="1173" width="0.0158%" height="15" fill="rgb(206,192,2)" fg:x="1110" fg:w="17"/><text x="1.2838%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (23 samples, 0.02%)</title><rect x="1.0338%" y="1189" width="0.0214%" height="15" fill="rgb(241,108,4)" fg:x="1110" fg:w="23"/><text x="1.2838%" y="1199.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (15 samples, 0.01%)</title><rect x="1.0552%" y="1173" width="0.0140%" height="15" fill="rgb(247,173,49)" fg:x="1133" fg:w="15"/><text x="1.3052%" y="1183.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (15 samples, 0.01%)</title><rect x="1.0552%" y="1157" width="0.0140%" height="15" fill="rgb(224,114,35)" fg:x="1133" fg:w="15"/><text x="1.3052%" y="1167.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (73 samples, 0.07%)</title><rect x="1.0068%" y="1205" width="0.0680%" height="15" fill="rgb(245,159,27)" fg:x="1081" fg:w="73"/><text x="1.2568%" y="1215.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (21 samples, 0.02%)</title><rect x="1.0552%" y="1189" width="0.0196%" height="15" fill="rgb(245,172,44)" fg:x="1133" fg:w="21"/><text x="1.3052%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (75 samples, 0.07%)</title><rect x="1.0068%" y="1237" width="0.0699%" height="15" fill="rgb(236,23,11)" fg:x="1081" fg:w="75"/><text x="1.2568%" y="1247.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (75 samples, 0.07%)</title><rect x="1.0068%" y="1221" width="0.0699%" height="15" fill="rgb(205,117,38)" fg:x="1081" fg:w="75"/><text x="1.2568%" y="1231.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module (11 samples, 0.01%)</title><rect x="1.0841%" y="1237" width="0.0102%" height="15" fill="rgb(237,72,25)" fg:x="1164" fg:w="11"/><text x="1.3341%" y="1247.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module_impl (11 samples, 0.01%)</title><rect x="1.0841%" y="1221" width="0.0102%" height="15" fill="rgb(244,70,9)" fg:x="1164" fg:w="11"/><text x="1.3341%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (330 samples, 0.31%)</title><rect x="0.7926%" y="1365" width="0.3074%" height="15" fill="rgb(217,125,39)" fg:x="851" fg:w="330"/><text x="1.0426%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (259 samples, 0.24%)</title><rect x="0.8587%" y="1349" width="0.2412%" height="15" fill="rgb(235,36,10)" fg:x="922" fg:w="259"/><text x="1.1087%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (133 samples, 0.12%)</title><rect x="0.9761%" y="1333" width="0.1239%" height="15" fill="rgb(251,123,47)" fg:x="1048" fg:w="133"/><text x="1.2261%" y="1343.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (130 samples, 0.12%)</title><rect x="0.9789%" y="1317" width="0.1211%" height="15" fill="rgb(221,13,13)" fg:x="1051" fg:w="130"/><text x="1.2289%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (130 samples, 0.12%)</title><rect x="0.9789%" y="1301" width="0.1211%" height="15" fill="rgb(238,131,9)" fg:x="1051" fg:w="130"/><text x="1.2289%" y="1311.50"></text></g><g><title>std::panicking::try (130 samples, 0.12%)</title><rect x="0.9789%" y="1285" width="0.1211%" height="15" fill="rgb(211,50,8)" fg:x="1051" fg:w="130"/><text x="1.2289%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (130 samples, 0.12%)</title><rect x="0.9789%" y="1269" width="0.1211%" height="15" fill="rgb(245,182,24)" fg:x="1051" fg:w="130"/><text x="1.2289%" y="1279.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (130 samples, 0.12%)</title><rect x="0.9789%" y="1253" width="0.1211%" height="15" fill="rgb(242,14,37)" fg:x="1051" fg:w="130"/><text x="1.2289%" y="1263.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (14 samples, 0.01%)</title><rect x="1.1055%" y="1253" width="0.0130%" height="15" fill="rgb(246,228,12)" fg:x="1187" fg:w="14"/><text x="1.3555%" y="1263.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (18 samples, 0.02%)</title><rect x="1.1037%" y="1349" width="0.0168%" height="15" fill="rgb(213,55,15)" fg:x="1185" fg:w="18"/><text x="1.3537%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="1.1037%" y="1333" width="0.0168%" height="15" fill="rgb(209,9,3)" fg:x="1185" fg:w="18"/><text x="1.3537%" y="1343.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="1.1037%" y="1317" width="0.0168%" height="15" fill="rgb(230,59,30)" fg:x="1185" fg:w="18"/><text x="1.3537%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="1.1037%" y="1301" width="0.0168%" height="15" fill="rgb(209,121,21)" fg:x="1185" fg:w="18"/><text x="1.3537%" y="1311.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (18 samples, 0.02%)</title><rect x="1.1037%" y="1285" width="0.0168%" height="15" fill="rgb(220,109,13)" fg:x="1185" fg:w="18"/><text x="1.3537%" y="1295.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (16 samples, 0.01%)</title><rect x="1.1055%" y="1269" width="0.0149%" height="15" fill="rgb(232,18,1)" fg:x="1187" fg:w="16"/><text x="1.3555%" y="1279.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (36 samples, 0.03%)</title><rect x="1.1437%" y="1157" width="0.0335%" height="15" fill="rgb(215,41,42)" fg:x="1228" fg:w="36"/><text x="1.3937%" y="1167.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (17 samples, 0.02%)</title><rect x="1.1614%" y="1141" width="0.0158%" height="15" fill="rgb(224,123,36)" fg:x="1247" fg:w="17"/><text x="1.4114%" y="1151.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (50 samples, 0.05%)</title><rect x="1.1353%" y="1205" width="0.0466%" height="15" fill="rgb(240,125,3)" fg:x="1219" fg:w="50"/><text x="1.3853%" y="1215.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (50 samples, 0.05%)</title><rect x="1.1353%" y="1189" width="0.0466%" height="15" fill="rgb(205,98,50)" fg:x="1219" fg:w="50"/><text x="1.3853%" y="1199.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (41 samples, 0.04%)</title><rect x="1.1437%" y="1173" width="0.0382%" height="15" fill="rgb(205,185,37)" fg:x="1228" fg:w="41"/><text x="1.3937%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (64 samples, 0.06%)</title><rect x="1.1335%" y="1221" width="0.0596%" height="15" fill="rgb(238,207,15)" fg:x="1217" fg:w="64"/><text x="1.3835%" y="1231.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (12 samples, 0.01%)</title><rect x="1.1819%" y="1205" width="0.0112%" height="15" fill="rgb(213,199,42)" fg:x="1269" fg:w="12"/><text x="1.4319%" y="1215.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (78 samples, 0.07%)</title><rect x="1.1288%" y="1269" width="0.0726%" height="15" fill="rgb(235,201,11)" fg:x="1212" fg:w="78"/><text x="1.3788%" y="1279.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (78 samples, 0.07%)</title><rect x="1.1288%" y="1253" width="0.0726%" height="15" fill="rgb(207,46,11)" fg:x="1212" fg:w="78"/><text x="1.3788%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (78 samples, 0.07%)</title><rect x="1.1288%" y="1237" width="0.0726%" height="15" fill="rgb(241,35,35)" fg:x="1212" fg:w="78"/><text x="1.3788%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (116 samples, 0.11%)</title><rect x="1.1000%" y="1365" width="0.1080%" height="15" fill="rgb(243,32,47)" fg:x="1181" fg:w="116"/><text x="1.3500%" y="1375.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (94 samples, 0.09%)</title><rect x="1.1204%" y="1349" width="0.0875%" height="15" fill="rgb(247,202,23)" fg:x="1203" fg:w="94"/><text x="1.3704%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (94 samples, 0.09%)</title><rect x="1.1204%" y="1333" width="0.0875%" height="15" fill="rgb(219,102,11)" fg:x="1203" fg:w="94"/><text x="1.3704%" y="1343.50"></text></g><g><title>std::panicking::try (94 samples, 0.09%)</title><rect x="1.1204%" y="1317" width="0.0875%" height="15" fill="rgb(243,110,44)" fg:x="1203" fg:w="94"/><text x="1.3704%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (94 samples, 0.09%)</title><rect x="1.1204%" y="1301" width="0.0875%" height="15" fill="rgb(222,74,54)" fg:x="1203" fg:w="94"/><text x="1.3704%" y="1311.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (94 samples, 0.09%)</title><rect x="1.1204%" y="1285" width="0.0875%" height="15" fill="rgb(216,99,12)" fg:x="1203" fg:w="94"/><text x="1.3704%" y="1295.50"></text></g><g><title>move_vm_runtime::loader::Function::new (13 samples, 0.01%)</title><rect x="1.2117%" y="1333" width="0.0121%" height="15" fill="rgb(226,22,26)" fg:x="1301" fg:w="13"/><text x="1.4617%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (554 samples, 0.52%)</title><rect x="0.7088%" y="1413" width="0.5160%" height="15" fill="rgb(217,163,10)" fg:x="761" fg:w="554"/><text x="0.9588%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (553 samples, 0.52%)</title><rect x="0.7097%" y="1397" width="0.5151%" height="15" fill="rgb(213,25,53)" fg:x="762" fg:w="553"/><text x="0.9597%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (465 samples, 0.43%)</title><rect x="0.7917%" y="1381" width="0.4331%" height="15" fill="rgb(252,105,26)" fg:x="850" fg:w="465"/><text x="1.0417%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (18 samples, 0.02%)</title><rect x="1.2080%" y="1365" width="0.0168%" height="15" fill="rgb(220,39,43)" fg:x="1297" fg:w="18"/><text x="1.4580%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (15 samples, 0.01%)</title><rect x="1.2108%" y="1349" width="0.0140%" height="15" fill="rgb(229,68,48)" fg:x="1300" fg:w="15"/><text x="1.4608%" y="1359.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="1.2723%" y="1125" width="0.0102%" height="15" fill="rgb(252,8,32)" fg:x="1366" fg:w="11"/><text x="1.5223%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (34 samples, 0.03%)</title><rect x="1.2518%" y="1301" width="0.0317%" height="15" fill="rgb(223,20,43)" fg:x="1344" fg:w="34"/><text x="1.5018%" y="1311.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (33 samples, 0.03%)</title><rect x="1.2527%" y="1285" width="0.0307%" height="15" fill="rgb(229,81,49)" fg:x="1345" fg:w="33"/><text x="1.5027%" y="1295.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (32 samples, 0.03%)</title><rect x="1.2536%" y="1269" width="0.0298%" height="15" fill="rgb(236,28,36)" fg:x="1346" fg:w="32"/><text x="1.5036%" y="1279.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (32 samples, 0.03%)</title><rect x="1.2536%" y="1253" width="0.0298%" height="15" fill="rgb(249,185,26)" fg:x="1346" fg:w="32"/><text x="1.5036%" y="1263.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (31 samples, 0.03%)</title><rect x="1.2546%" y="1237" width="0.0289%" height="15" fill="rgb(249,174,33)" fg:x="1347" fg:w="31"/><text x="1.5046%" y="1247.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (20 samples, 0.02%)</title><rect x="1.2648%" y="1221" width="0.0186%" height="15" fill="rgb(233,201,37)" fg:x="1358" fg:w="20"/><text x="1.5148%" y="1231.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="1.2723%" y="1205" width="0.0112%" height="15" fill="rgb(221,78,26)" fg:x="1366" fg:w="12"/><text x="1.5223%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="1.2723%" y="1189" width="0.0112%" height="15" fill="rgb(250,127,30)" fg:x="1366" fg:w="12"/><text x="1.5223%" y="1199.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (12 samples, 0.01%)</title><rect x="1.2723%" y="1173" width="0.0112%" height="15" fill="rgb(230,49,44)" fg:x="1366" fg:w="12"/><text x="1.5223%" y="1183.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (12 samples, 0.01%)</title><rect x="1.2723%" y="1157" width="0.0112%" height="15" fill="rgb(229,67,23)" fg:x="1366" fg:w="12"/><text x="1.5223%" y="1167.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (12 samples, 0.01%)</title><rect x="1.2723%" y="1141" width="0.0112%" height="15" fill="rgb(249,83,47)" fg:x="1366" fg:w="12"/><text x="1.5223%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (12 samples, 0.01%)</title><rect x="1.2844%" y="1285" width="0.0112%" height="15" fill="rgb(215,43,3)" fg:x="1379" fg:w="12"/><text x="1.5344%" y="1295.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (50 samples, 0.05%)</title><rect x="1.2508%" y="1317" width="0.0466%" height="15" fill="rgb(238,154,13)" fg:x="1343" fg:w="50"/><text x="1.5008%" y="1327.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (15 samples, 0.01%)</title><rect x="1.2834%" y="1301" width="0.0140%" height="15" fill="rgb(219,56,2)" fg:x="1378" fg:w="15"/><text x="1.5334%" y="1311.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (80 samples, 0.07%)</title><rect x="1.2341%" y="1349" width="0.0745%" height="15" fill="rgb(233,0,4)" fg:x="1325" fg:w="80"/><text x="1.4841%" y="1359.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (80 samples, 0.07%)</title><rect x="1.2341%" y="1333" width="0.0745%" height="15" fill="rgb(235,30,7)" fg:x="1325" fg:w="80"/><text x="1.4841%" y="1343.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_imported_functions (11 samples, 0.01%)</title><rect x="1.3086%" y="1349" width="0.0102%" height="15" fill="rgb(250,79,13)" fg:x="1405" fg:w="11"/><text x="1.5586%" y="1359.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (100 samples, 0.09%)</title><rect x="1.2266%" y="1381" width="0.0931%" height="15" fill="rgb(211,146,34)" fg:x="1317" fg:w="100"/><text x="1.4766%" y="1391.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (100 samples, 0.09%)</title><rect x="1.2266%" y="1365" width="0.0931%" height="15" fill="rgb(228,22,38)" fg:x="1317" fg:w="100"/><text x="1.4766%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (26 samples, 0.02%)</title><rect x="1.3198%" y="1381" width="0.0242%" height="15" fill="rgb(235,168,5)" fg:x="1417" fg:w="26"/><text x="1.5698%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (16 samples, 0.01%)</title><rect x="1.3291%" y="1365" width="0.0149%" height="15" fill="rgb(221,155,16)" fg:x="1427" fg:w="16"/><text x="1.5791%" y="1375.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (14 samples, 0.01%)</title><rect x="1.3309%" y="1349" width="0.0130%" height="15" fill="rgb(215,215,53)" fg:x="1429" fg:w="14"/><text x="1.5809%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="1.3309%" y="1333" width="0.0130%" height="15" fill="rgb(223,4,10)" fg:x="1429" fg:w="14"/><text x="1.5809%" y="1343.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="1.3309%" y="1317" width="0.0130%" height="15" fill="rgb(234,103,6)" fg:x="1429" fg:w="14"/><text x="1.5809%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="1.3309%" y="1301" width="0.0130%" height="15" fill="rgb(227,97,0)" fg:x="1429" fg:w="14"/><text x="1.5809%" y="1311.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (14 samples, 0.01%)</title><rect x="1.3309%" y="1285" width="0.0130%" height="15" fill="rgb(234,150,53)" fg:x="1429" fg:w="14"/><text x="1.5809%" y="1295.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="1.3337%" y="1269" width="0.0102%" height="15" fill="rgb(228,201,54)" fg:x="1432" fg:w="11"/><text x="1.5837%" y="1279.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="1.3337%" y="1253" width="0.0102%" height="15" fill="rgb(222,22,37)" fg:x="1432" fg:w="11"/><text x="1.5837%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="1.3337%" y="1237" width="0.0102%" height="15" fill="rgb(237,53,32)" fg:x="1432" fg:w="11"/><text x="1.5837%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (129 samples, 0.12%)</title><rect x="1.2248%" y="1397" width="0.1201%" height="15" fill="rgb(233,25,53)" fg:x="1315" fg:w="129"/><text x="1.4748%" y="1407.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (20 samples, 0.02%)</title><rect x="1.3449%" y="1381" width="0.0186%" height="15" fill="rgb(210,40,34)" fg:x="1444" fg:w="20"/><text x="1.5949%" y="1391.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (20 samples, 0.02%)</title><rect x="1.3449%" y="1365" width="0.0186%" height="15" fill="rgb(241,220,44)" fg:x="1444" fg:w="20"/><text x="1.5949%" y="1375.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (20 samples, 0.02%)</title><rect x="1.3449%" y="1349" width="0.0186%" height="15" fill="rgb(235,28,35)" fg:x="1444" fg:w="20"/><text x="1.5949%" y="1359.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (20 samples, 0.02%)</title><rect x="1.3449%" y="1333" width="0.0186%" height="15" fill="rgb(210,56,17)" fg:x="1444" fg:w="20"/><text x="1.5949%" y="1343.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (20 samples, 0.02%)</title><rect x="1.3449%" y="1317" width="0.0186%" height="15" fill="rgb(224,130,29)" fg:x="1444" fg:w="20"/><text x="1.5949%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="1.3514%" y="1301" width="0.0121%" height="15" fill="rgb(235,212,8)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="1.3514%" y="1285" width="0.0121%" height="15" fill="rgb(223,33,50)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1295.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (13 samples, 0.01%)</title><rect x="1.3514%" y="1269" width="0.0121%" height="15" fill="rgb(219,149,13)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1279.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (13 samples, 0.01%)</title><rect x="1.3514%" y="1253" width="0.0121%" height="15" fill="rgb(250,156,29)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1263.50"></text></g><g><title>bcs::ser::serialize_into (13 samples, 0.01%)</title><rect x="1.3514%" y="1237" width="0.0121%" height="15" fill="rgb(216,193,19)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1247.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.01%)</title><rect x="1.3514%" y="1221" width="0.0121%" height="15" fill="rgb(216,135,14)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1231.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (13 samples, 0.01%)</title><rect x="1.3514%" y="1205" width="0.0121%" height="15" fill="rgb(241,47,5)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.01%)</title><rect x="1.3514%" y="1189" width="0.0121%" height="15" fill="rgb(233,42,35)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1199.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="1.3514%" y="1173" width="0.0121%" height="15" fill="rgb(231,13,6)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1183.50"></text></g><g><title>serde_bytes::serialize (13 samples, 0.01%)</title><rect x="1.3514%" y="1157" width="0.0121%" height="15" fill="rgb(207,181,40)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="1.3514%" y="1141" width="0.0121%" height="15" fill="rgb(254,173,49)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1151.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (13 samples, 0.01%)</title><rect x="1.3514%" y="1125" width="0.0121%" height="15" fill="rgb(221,1,38)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1135.50"></text></g><g><title>std::io::Write::write_all (13 samples, 0.01%)</title><rect x="1.3514%" y="1109" width="0.0121%" height="15" fill="rgb(206,124,46)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1119.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (13 samples, 0.01%)</title><rect x="1.3514%" y="1093" width="0.0121%" height="15" fill="rgb(249,21,11)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (13 samples, 0.01%)</title><rect x="1.3514%" y="1077" width="0.0121%" height="15" fill="rgb(222,201,40)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1087.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (13 samples, 0.01%)</title><rect x="1.3514%" y="1061" width="0.0121%" height="15" fill="rgb(235,61,29)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1071.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (13 samples, 0.01%)</title><rect x="1.3514%" y="1045" width="0.0121%" height="15" fill="rgb(219,207,3)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1055.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (13 samples, 0.01%)</title><rect x="1.3514%" y="1029" width="0.0121%" height="15" fill="rgb(222,56,46)" fg:x="1451" fg:w="13"/><text x="1.6014%" y="1039.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (19 samples, 0.02%)</title><rect x="1.3710%" y="1269" width="0.0177%" height="15" fill="rgb(239,76,54)" fg:x="1472" fg:w="19"/><text x="1.6210%" y="1279.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (12 samples, 0.01%)</title><rect x="1.3896%" y="1221" width="0.0112%" height="15" fill="rgb(231,124,27)" fg:x="1492" fg:w="12"/><text x="1.6396%" y="1231.50"></text></g><g><title>move_binary_format::deserializer::load_code (12 samples, 0.01%)</title><rect x="1.3896%" y="1205" width="0.0112%" height="15" fill="rgb(249,195,6)" fg:x="1492" fg:w="12"/><text x="1.6396%" y="1215.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (13 samples, 0.01%)</title><rect x="1.3896%" y="1253" width="0.0121%" height="15" fill="rgb(237,174,47)" fg:x="1492" fg:w="13"/><text x="1.6396%" y="1263.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (13 samples, 0.01%)</title><rect x="1.3896%" y="1237" width="0.0121%" height="15" fill="rgb(206,201,31)" fg:x="1492" fg:w="13"/><text x="1.6396%" y="1247.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (34 samples, 0.03%)</title><rect x="1.3710%" y="1285" width="0.0317%" height="15" fill="rgb(231,57,52)" fg:x="1472" fg:w="34"/><text x="1.6210%" y="1295.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (15 samples, 0.01%)</title><rect x="1.3887%" y="1269" width="0.0140%" height="15" fill="rgb(248,177,22)" fg:x="1491" fg:w="15"/><text x="1.6387%" y="1279.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (43 samples, 0.04%)</title><rect x="1.3635%" y="1381" width="0.0400%" height="15" fill="rgb(215,211,37)" fg:x="1464" fg:w="43"/><text x="1.6135%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (43 samples, 0.04%)</title><rect x="1.3635%" y="1365" width="0.0400%" height="15" fill="rgb(241,128,51)" fg:x="1464" fg:w="43"/><text x="1.6135%" y="1375.50"></text></g><g><title>std::panicking::try (43 samples, 0.04%)</title><rect x="1.3635%" y="1349" width="0.0400%" height="15" fill="rgb(227,165,31)" fg:x="1464" fg:w="43"/><text x="1.6135%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (43 samples, 0.04%)</title><rect x="1.3635%" y="1333" width="0.0400%" height="15" fill="rgb(228,167,24)" fg:x="1464" fg:w="43"/><text x="1.6135%" y="1343.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (43 samples, 0.04%)</title><rect x="1.3635%" y="1317" width="0.0400%" height="15" fill="rgb(228,143,12)" fg:x="1464" fg:w="43"/><text x="1.6135%" y="1327.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (35 samples, 0.03%)</title><rect x="1.3710%" y="1301" width="0.0326%" height="15" fill="rgb(249,149,8)" fg:x="1472" fg:w="35"/><text x="1.6210%" y="1311.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (20 samples, 0.02%)</title><rect x="1.4082%" y="1301" width="0.0186%" height="15" fill="rgb(243,35,44)" fg:x="1512" fg:w="20"/><text x="1.6582%" y="1311.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (20 samples, 0.02%)</title><rect x="1.4082%" y="1285" width="0.0186%" height="15" fill="rgb(246,89,9)" fg:x="1512" fg:w="20"/><text x="1.6582%" y="1295.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (16 samples, 0.01%)</title><rect x="1.4278%" y="1253" width="0.0149%" height="15" fill="rgb(233,213,13)" fg:x="1533" fg:w="16"/><text x="1.6778%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.01%)</title><rect x="1.4325%" y="1237" width="0.0102%" height="15" fill="rgb(233,141,41)" fg:x="1538" fg:w="11"/><text x="1.6825%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="1.4325%" y="1221" width="0.0102%" height="15" fill="rgb(239,167,4)" fg:x="1538" fg:w="11"/><text x="1.6825%" y="1231.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (19 samples, 0.02%)</title><rect x="1.4427%" y="1221" width="0.0177%" height="15" fill="rgb(209,217,16)" fg:x="1549" fg:w="19"/><text x="1.6927%" y="1231.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (23 samples, 0.02%)</title><rect x="1.4427%" y="1237" width="0.0214%" height="15" fill="rgb(219,88,35)" fg:x="1549" fg:w="23"/><text x="1.6927%" y="1247.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (18 samples, 0.02%)</title><rect x="1.4874%" y="1173" width="0.0168%" height="15" fill="rgb(220,193,23)" fg:x="1597" fg:w="18"/><text x="1.7374%" y="1183.50"></text></g><g><title>move_bytecode_verifier::reference_safety::call (13 samples, 0.01%)</title><rect x="1.5042%" y="1173" width="0.0121%" height="15" fill="rgb(230,90,52)" fg:x="1615" fg:w="13"/><text x="1.7542%" y="1183.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (72 samples, 0.07%)</title><rect x="1.4828%" y="1189" width="0.0671%" height="15" fill="rgb(252,106,19)" fg:x="1592" fg:w="72"/><text x="1.7328%" y="1199.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (36 samples, 0.03%)</title><rect x="1.5163%" y="1173" width="0.0335%" height="15" fill="rgb(206,74,20)" fg:x="1628" fg:w="36"/><text x="1.7663%" y="1183.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (97 samples, 0.09%)</title><rect x="1.4641%" y="1237" width="0.0903%" height="15" fill="rgb(230,138,44)" fg:x="1572" fg:w="97"/><text x="1.7141%" y="1247.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (97 samples, 0.09%)</title><rect x="1.4641%" y="1221" width="0.0903%" height="15" fill="rgb(235,182,43)" fg:x="1572" fg:w="97"/><text x="1.7141%" y="1231.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (77 samples, 0.07%)</title><rect x="1.4828%" y="1205" width="0.0717%" height="15" fill="rgb(242,16,51)" fg:x="1592" fg:w="77"/><text x="1.7328%" y="1215.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (156 samples, 0.15%)</title><rect x="1.4427%" y="1253" width="0.1453%" height="15" fill="rgb(248,9,4)" fg:x="1549" fg:w="156"/><text x="1.6927%" y="1263.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (30 samples, 0.03%)</title><rect x="1.5601%" y="1237" width="0.0279%" height="15" fill="rgb(210,31,22)" fg:x="1675" fg:w="30"/><text x="1.8101%" y="1247.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (17 samples, 0.02%)</title><rect x="1.5722%" y="1221" width="0.0158%" height="15" fill="rgb(239,54,39)" fg:x="1688" fg:w="17"/><text x="1.8222%" y="1231.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (15 samples, 0.01%)</title><rect x="1.5880%" y="1237" width="0.0140%" height="15" fill="rgb(230,99,41)" fg:x="1705" fg:w="15"/><text x="1.8380%" y="1247.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (15 samples, 0.01%)</title><rect x="1.5880%" y="1221" width="0.0140%" height="15" fill="rgb(253,106,12)" fg:x="1705" fg:w="15"/><text x="1.8380%" y="1231.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (197 samples, 0.18%)</title><rect x="1.4269%" y="1269" width="0.1835%" height="15" fill="rgb(213,46,41)" fg:x="1532" fg:w="197"/><text x="1.6769%" y="1279.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (24 samples, 0.02%)</title><rect x="1.5880%" y="1253" width="0.0224%" height="15" fill="rgb(215,133,35)" fg:x="1705" fg:w="24"/><text x="1.8380%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (198 samples, 0.18%)</title><rect x="1.4269%" y="1301" width="0.1844%" height="15" fill="rgb(213,28,5)" fg:x="1532" fg:w="198"/><text x="1.6769%" y="1311.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (198 samples, 0.18%)</title><rect x="1.4269%" y="1285" width="0.1844%" height="15" fill="rgb(215,77,49)" fg:x="1532" fg:w="198"/><text x="1.6769%" y="1295.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (307 samples, 0.29%)</title><rect x="1.3449%" y="1397" width="0.2859%" height="15" fill="rgb(248,100,22)" fg:x="1444" fg:w="307"/><text x="1.5949%" y="1407.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (244 samples, 0.23%)</title><rect x="1.4036%" y="1381" width="0.2273%" height="15" fill="rgb(208,67,9)" fg:x="1507" fg:w="244"/><text x="1.6536%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (244 samples, 0.23%)</title><rect x="1.4036%" y="1365" width="0.2273%" height="15" fill="rgb(219,133,21)" fg:x="1507" fg:w="244"/><text x="1.6536%" y="1375.50"></text></g><g><title>std::panicking::try (244 samples, 0.23%)</title><rect x="1.4036%" y="1349" width="0.2273%" height="15" fill="rgb(246,46,29)" fg:x="1507" fg:w="244"/><text x="1.6536%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (244 samples, 0.23%)</title><rect x="1.4036%" y="1333" width="0.2273%" height="15" fill="rgb(246,185,52)" fg:x="1507" fg:w="244"/><text x="1.6536%" y="1343.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (244 samples, 0.23%)</title><rect x="1.4036%" y="1317" width="0.2273%" height="15" fill="rgb(252,136,11)" fg:x="1507" fg:w="244"/><text x="1.6536%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (1,007 samples, 0.94%)</title><rect x="0.7088%" y="1445" width="0.9379%" height="15" fill="rgb(219,138,53)" fg:x="761" fg:w="1007"/><text x="0.9588%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (1,007 samples, 0.94%)</title><rect x="0.7088%" y="1429" width="0.9379%" height="15" fill="rgb(211,51,23)" fg:x="761" fg:w="1007"/><text x="0.9588%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (453 samples, 0.42%)</title><rect x="1.2248%" y="1413" width="0.4219%" height="15" fill="rgb(247,221,28)" fg:x="1315" fg:w="453"/><text x="1.4748%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (17 samples, 0.02%)</title><rect x="1.6308%" y="1397" width="0.0158%" height="15" fill="rgb(251,222,45)" fg:x="1751" fg:w="17"/><text x="1.8808%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (13 samples, 0.01%)</title><rect x="1.6346%" y="1381" width="0.0121%" height="15" fill="rgb(217,162,53)" fg:x="1755" fg:w="13"/><text x="1.8846%" y="1391.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (14 samples, 0.01%)</title><rect x="1.6495%" y="1381" width="0.0130%" height="15" fill="rgb(229,93,14)" fg:x="1771" fg:w="14"/><text x="1.8995%" y="1391.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (14 samples, 0.01%)</title><rect x="1.6495%" y="1365" width="0.0130%" height="15" fill="rgb(209,67,49)" fg:x="1771" fg:w="14"/><text x="1.8995%" y="1375.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (17 samples, 0.02%)</title><rect x="1.6495%" y="1413" width="0.0158%" height="15" fill="rgb(213,87,29)" fg:x="1771" fg:w="17"/><text x="1.8995%" y="1423.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (17 samples, 0.02%)</title><rect x="1.6495%" y="1397" width="0.0158%" height="15" fill="rgb(205,151,52)" fg:x="1771" fg:w="17"/><text x="1.8995%" y="1407.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (11 samples, 0.01%)</title><rect x="1.6672%" y="1381" width="0.0102%" height="15" fill="rgb(253,215,39)" fg:x="1790" fg:w="11"/><text x="1.9172%" y="1391.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (11 samples, 0.01%)</title><rect x="1.6672%" y="1365" width="0.0102%" height="15" fill="rgb(221,220,41)" fg:x="1790" fg:w="11"/><text x="1.9172%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (15 samples, 0.01%)</title><rect x="1.6672%" y="1397" width="0.0140%" height="15" fill="rgb(218,133,21)" fg:x="1790" fg:w="15"/><text x="1.9172%" y="1407.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (13 samples, 0.01%)</title><rect x="1.7119%" y="1221" width="0.0121%" height="15" fill="rgb(221,193,43)" fg:x="1838" fg:w="13"/><text x="1.9619%" y="1231.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (14 samples, 0.01%)</title><rect x="1.7119%" y="1237" width="0.0130%" height="15" fill="rgb(240,128,52)" fg:x="1838" fg:w="14"/><text x="1.9619%" y="1247.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (26 samples, 0.02%)</title><rect x="1.7081%" y="1253" width="0.0242%" height="15" fill="rgb(253,114,12)" fg:x="1834" fg:w="26"/><text x="1.9581%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (52 samples, 0.05%)</title><rect x="1.6960%" y="1301" width="0.0484%" height="15" fill="rgb(215,223,47)" fg:x="1821" fg:w="52"/><text x="1.9460%" y="1311.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (52 samples, 0.05%)</title><rect x="1.6960%" y="1285" width="0.0484%" height="15" fill="rgb(248,225,23)" fg:x="1821" fg:w="52"/><text x="1.9460%" y="1295.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (52 samples, 0.05%)</title><rect x="1.6960%" y="1269" width="0.0484%" height="15" fill="rgb(250,108,0)" fg:x="1821" fg:w="52"/><text x="1.9460%" y="1279.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (13 samples, 0.01%)</title><rect x="1.7324%" y="1253" width="0.0121%" height="15" fill="rgb(228,208,7)" fg:x="1860" fg:w="13"/><text x="1.9824%" y="1263.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (79 samples, 0.07%)</title><rect x="1.6811%" y="1397" width="0.0736%" height="15" fill="rgb(244,45,10)" fg:x="1805" fg:w="79"/><text x="1.9311%" y="1407.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (75 samples, 0.07%)</title><rect x="1.6849%" y="1381" width="0.0699%" height="15" fill="rgb(207,125,25)" fg:x="1809" fg:w="75"/><text x="1.9349%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (75 samples, 0.07%)</title><rect x="1.6849%" y="1365" width="0.0699%" height="15" fill="rgb(210,195,18)" fg:x="1809" fg:w="75"/><text x="1.9349%" y="1375.50"></text></g><g><title>std::panicking::try (75 samples, 0.07%)</title><rect x="1.6849%" y="1349" width="0.0699%" height="15" fill="rgb(249,80,12)" fg:x="1809" fg:w="75"/><text x="1.9349%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (75 samples, 0.07%)</title><rect x="1.6849%" y="1333" width="0.0699%" height="15" fill="rgb(221,65,9)" fg:x="1809" fg:w="75"/><text x="1.9349%" y="1343.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (75 samples, 0.07%)</title><rect x="1.6849%" y="1317" width="0.0699%" height="15" fill="rgb(235,49,36)" fg:x="1809" fg:w="75"/><text x="1.9349%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (128 samples, 0.12%)</title><rect x="1.6467%" y="1429" width="0.1192%" height="15" fill="rgb(225,32,20)" fg:x="1768" fg:w="128"/><text x="1.8967%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (108 samples, 0.10%)</title><rect x="1.6653%" y="1413" width="0.1006%" height="15" fill="rgb(215,141,46)" fg:x="1788" fg:w="108"/><text x="1.9153%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (12 samples, 0.01%)</title><rect x="1.7547%" y="1397" width="0.0112%" height="15" fill="rgb(250,160,47)" fg:x="1884" fg:w="12"/><text x="2.0047%" y="1407.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (12 samples, 0.01%)</title><rect x="1.7678%" y="1301" width="0.0112%" height="15" fill="rgb(216,222,40)" fg:x="1898" fg:w="12"/><text x="2.0178%" y="1311.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (18 samples, 0.02%)</title><rect x="1.7678%" y="1317" width="0.0168%" height="15" fill="rgb(234,217,39)" fg:x="1898" fg:w="18"/><text x="2.0178%" y="1327.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (19 samples, 0.02%)</title><rect x="1.7678%" y="1413" width="0.0177%" height="15" fill="rgb(207,178,40)" fg:x="1898" fg:w="19"/><text x="2.0178%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="1.7678%" y="1397" width="0.0177%" height="15" fill="rgb(221,136,13)" fg:x="1898" fg:w="19"/><text x="2.0178%" y="1407.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="1.7678%" y="1381" width="0.0177%" height="15" fill="rgb(249,199,10)" fg:x="1898" fg:w="19"/><text x="2.0178%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="1.7678%" y="1365" width="0.0177%" height="15" fill="rgb(249,222,13)" fg:x="1898" fg:w="19"/><text x="2.0178%" y="1375.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (19 samples, 0.02%)</title><rect x="1.7678%" y="1349" width="0.0177%" height="15" fill="rgb(244,185,38)" fg:x="1898" fg:w="19"/><text x="2.0178%" y="1359.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (19 samples, 0.02%)</title><rect x="1.7678%" y="1333" width="0.0177%" height="15" fill="rgb(236,202,9)" fg:x="1898" fg:w="19"/><text x="2.0178%" y="1343.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (12 samples, 0.01%)</title><rect x="1.8004%" y="1269" width="0.0112%" height="15" fill="rgb(250,229,37)" fg:x="1933" fg:w="12"/><text x="2.0504%" y="1279.50"></text></g><g><title>move_bytecode_verifier::reference_safety::call (11 samples, 0.01%)</title><rect x="1.8292%" y="1205" width="0.0102%" height="15" fill="rgb(206,174,23)" fg:x="1964" fg:w="11"/><text x="2.0792%" y="1215.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (34 samples, 0.03%)</title><rect x="1.8199%" y="1221" width="0.0317%" height="15" fill="rgb(211,33,43)" fg:x="1954" fg:w="34"/><text x="2.0699%" y="1231.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (13 samples, 0.01%)</title><rect x="1.8395%" y="1205" width="0.0121%" height="15" fill="rgb(245,58,50)" fg:x="1975" fg:w="13"/><text x="2.0895%" y="1215.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (47 samples, 0.04%)</title><rect x="1.8115%" y="1269" width="0.0438%" height="15" fill="rgb(244,68,36)" fg:x="1945" fg:w="47"/><text x="2.0615%" y="1279.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (47 samples, 0.04%)</title><rect x="1.8115%" y="1253" width="0.0438%" height="15" fill="rgb(232,229,15)" fg:x="1945" fg:w="47"/><text x="2.0615%" y="1263.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (38 samples, 0.04%)</title><rect x="1.8199%" y="1237" width="0.0354%" height="15" fill="rgb(254,30,23)" fg:x="1954" fg:w="38"/><text x="2.0699%" y="1247.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (67 samples, 0.06%)</title><rect x="1.8004%" y="1285" width="0.0624%" height="15" fill="rgb(235,160,14)" fg:x="1933" fg:w="67"/><text x="2.0504%" y="1295.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (88 samples, 0.08%)</title><rect x="1.7938%" y="1333" width="0.0820%" height="15" fill="rgb(212,155,44)" fg:x="1926" fg:w="88"/><text x="2.0438%" y="1343.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (88 samples, 0.08%)</title><rect x="1.7938%" y="1317" width="0.0820%" height="15" fill="rgb(226,2,50)" fg:x="1926" fg:w="88"/><text x="2.0438%" y="1327.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (88 samples, 0.08%)</title><rect x="1.7938%" y="1301" width="0.0820%" height="15" fill="rgb(234,177,6)" fg:x="1926" fg:w="88"/><text x="2.0438%" y="1311.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (14 samples, 0.01%)</title><rect x="1.8628%" y="1285" width="0.0130%" height="15" fill="rgb(217,24,9)" fg:x="2000" fg:w="14"/><text x="2.1128%" y="1295.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (129 samples, 0.12%)</title><rect x="1.7659%" y="1429" width="0.1201%" height="15" fill="rgb(220,13,46)" fg:x="1896" fg:w="129"/><text x="2.0159%" y="1439.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (108 samples, 0.10%)</title><rect x="1.7854%" y="1413" width="0.1006%" height="15" fill="rgb(239,221,27)" fg:x="1917" fg:w="108"/><text x="2.0354%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (108 samples, 0.10%)</title><rect x="1.7854%" y="1397" width="0.1006%" height="15" fill="rgb(222,198,25)" fg:x="1917" fg:w="108"/><text x="2.0354%" y="1407.50"></text></g><g><title>std::panicking::try (108 samples, 0.10%)</title><rect x="1.7854%" y="1381" width="0.1006%" height="15" fill="rgb(211,99,13)" fg:x="1917" fg:w="108"/><text x="2.0354%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (108 samples, 0.10%)</title><rect x="1.7854%" y="1365" width="0.1006%" height="15" fill="rgb(232,111,31)" fg:x="1917" fg:w="108"/><text x="2.0354%" y="1375.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (108 samples, 0.10%)</title><rect x="1.7854%" y="1349" width="0.1006%" height="15" fill="rgb(245,82,37)" fg:x="1917" fg:w="108"/><text x="2.0354%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (1,284 samples, 1.20%)</title><rect x="0.7088%" y="1461" width="1.1959%" height="15" fill="rgb(227,149,46)" fg:x="761" fg:w="1284"/><text x="0.9588%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (277 samples, 0.26%)</title><rect x="1.6467%" y="1445" width="0.2580%" height="15" fill="rgb(218,36,50)" fg:x="1768" fg:w="277"/><text x="1.8967%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (20 samples, 0.02%)</title><rect x="1.8860%" y="1429" width="0.0186%" height="15" fill="rgb(226,80,48)" fg:x="2025" fg:w="20"/><text x="2.1360%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (13 samples, 0.01%)</title><rect x="1.8926%" y="1413" width="0.0121%" height="15" fill="rgb(238,224,15)" fg:x="2032" fg:w="13"/><text x="2.1426%" y="1423.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (1,288 samples, 1.20%)</title><rect x="0.7088%" y="1557" width="1.1996%" height="15" fill="rgb(241,136,10)" fg:x="761" fg:w="1288"/><text x="0.9588%" y="1567.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (1,288 samples, 1.20%)</title><rect x="0.7088%" y="1541" width="1.1996%" height="15" fill="rgb(208,32,45)" fg:x="761" fg:w="1288"/><text x="0.9588%" y="1551.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (1,288 samples, 1.20%)</title><rect x="0.7088%" y="1525" width="1.1996%" height="15" fill="rgb(207,135,9)" fg:x="761" fg:w="1288"/><text x="0.9588%" y="1535.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (1,288 samples, 1.20%)</title><rect x="0.7088%" y="1509" width="1.1996%" height="15" fill="rgb(206,86,44)" fg:x="761" fg:w="1288"/><text x="0.9588%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (1,288 samples, 1.20%)</title><rect x="0.7088%" y="1493" width="1.1996%" height="15" fill="rgb(245,177,15)" fg:x="761" fg:w="1288"/><text x="0.9588%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (1,288 samples, 1.20%)</title><rect x="0.7088%" y="1477" width="1.1996%" height="15" fill="rgb(206,64,50)" fg:x="761" fg:w="1288"/><text x="0.9588%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (23 samples, 0.02%)</title><rect x="1.9084%" y="1509" width="0.0214%" height="15" fill="rgb(234,36,40)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.02%)</title><rect x="1.9084%" y="1493" width="0.0214%" height="15" fill="rgb(213,64,8)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="1.9084%" y="1477" width="0.0214%" height="15" fill="rgb(210,75,36)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="1.9084%" y="1461" width="0.0214%" height="15" fill="rgb(229,88,21)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="1.9084%" y="1445" width="0.0214%" height="15" fill="rgb(252,204,47)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="1.9084%" y="1429" width="0.0214%" height="15" fill="rgb(208,77,27)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="1.9084%" y="1413" width="0.0214%" height="15" fill="rgb(221,76,26)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="1.9084%" y="1397" width="0.0214%" height="15" fill="rgb(225,139,18)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="1.9084%" y="1381" width="0.0214%" height="15" fill="rgb(230,137,11)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="1.9084%" y="1365" width="0.0214%" height="15" fill="rgb(212,28,1)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="1.9084%" y="1349" width="0.0214%" height="15" fill="rgb(248,164,17)" fg:x="2049" fg:w="23"/><text x="2.1584%" y="1359.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="1.9168%" y="1333" width="0.0130%" height="15" fill="rgb(222,171,42)" fg:x="2058" fg:w="14"/><text x="2.1668%" y="1343.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (32 samples, 0.03%)</title><rect x="1.9084%" y="1557" width="0.0298%" height="15" fill="rgb(243,84,45)" fg:x="2049" fg:w="32"/><text x="2.1584%" y="1567.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (32 samples, 0.03%)</title><rect x="1.9084%" y="1541" width="0.0298%" height="15" fill="rgb(252,49,23)" fg:x="2049" fg:w="32"/><text x="2.1584%" y="1551.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (32 samples, 0.03%)</title><rect x="1.9084%" y="1525" width="0.0298%" height="15" fill="rgb(215,19,7)" fg:x="2049" fg:w="32"/><text x="2.1584%" y="1535.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (17 samples, 0.02%)</title><rect x="1.9568%" y="1493" width="0.0158%" height="15" fill="rgb(238,81,41)" fg:x="2101" fg:w="17"/><text x="2.2068%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.01%)</title><rect x="1.9596%" y="1477" width="0.0130%" height="15" fill="rgb(210,199,37)" fg:x="2104" fg:w="14"/><text x="2.2096%" y="1487.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.01%)</title><rect x="1.9596%" y="1461" width="0.0130%" height="15" fill="rgb(244,192,49)" fg:x="2104" fg:w="14"/><text x="2.2096%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="1.9596%" y="1445" width="0.0130%" height="15" fill="rgb(226,211,11)" fg:x="2104" fg:w="14"/><text x="2.2096%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.01%)</title><rect x="1.9596%" y="1429" width="0.0130%" height="15" fill="rgb(236,162,54)" fg:x="2104" fg:w="14"/><text x="2.2096%" y="1439.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="1.9605%" y="1413" width="0.0121%" height="15" fill="rgb(220,229,9)" fg:x="2105" fg:w="13"/><text x="2.2105%" y="1423.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (11 samples, 0.01%)</title><rect x="1.9624%" y="1397" width="0.0102%" height="15" fill="rgb(250,87,22)" fg:x="2107" fg:w="11"/><text x="2.2124%" y="1407.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.01%)</title><rect x="1.9624%" y="1381" width="0.0102%" height="15" fill="rgb(239,43,17)" fg:x="2107" fg:w="11"/><text x="2.2124%" y="1391.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="1.9624%" y="1365" width="0.0102%" height="15" fill="rgb(231,177,25)" fg:x="2107" fg:w="11"/><text x="2.2124%" y="1375.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 0.02%)</title><rect x="1.9792%" y="1461" width="0.0242%" height="15" fill="rgb(219,179,1)" fg:x="2125" fg:w="26"/><text x="2.2292%" y="1471.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (11 samples, 0.01%)</title><rect x="2.0034%" y="1461" width="0.0102%" height="15" fill="rgb(238,219,53)" fg:x="2151" fg:w="11"/><text x="2.2534%" y="1471.50"></text></g><g><title>alloc::fmt::format (99 samples, 0.09%)</title><rect x="1.9382%" y="1557" width="0.0922%" height="15" fill="rgb(232,167,36)" fg:x="2081" fg:w="99"/><text x="2.1882%" y="1567.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (99 samples, 0.09%)</title><rect x="1.9382%" y="1541" width="0.0922%" height="15" fill="rgb(244,19,51)" fg:x="2081" fg:w="99"/><text x="2.1882%" y="1551.50"></text></g><g><title>alloc::fmt::format::{{closure}} (99 samples, 0.09%)</title><rect x="1.9382%" y="1525" width="0.0922%" height="15" fill="rgb(224,6,22)" fg:x="2081" fg:w="99"/><text x="2.1882%" y="1535.50"></text></g><g><title>alloc::fmt::format::format_inner (99 samples, 0.09%)</title><rect x="1.9382%" y="1509" width="0.0922%" height="15" fill="rgb(224,145,5)" fg:x="2081" fg:w="99"/><text x="2.1882%" y="1519.50"></text></g><g><title>core::fmt::Write::write_fmt (62 samples, 0.06%)</title><rect x="1.9727%" y="1493" width="0.0577%" height="15" fill="rgb(234,130,49)" fg:x="2118" fg:w="62"/><text x="2.2227%" y="1503.50"></text></g><g><title>core::fmt::write (62 samples, 0.06%)</title><rect x="1.9727%" y="1477" width="0.0577%" height="15" fill="rgb(254,6,2)" fg:x="2118" fg:w="62"/><text x="2.2227%" y="1487.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (12 samples, 0.01%)</title><rect x="2.0192%" y="1461" width="0.0112%" height="15" fill="rgb(208,96,46)" fg:x="2168" fg:w="12"/><text x="2.2692%" y="1471.50"></text></g><g><title>core::fmt::Arguments::new_v1_formatted (13 samples, 0.01%)</title><rect x="2.1366%" y="1413" width="0.0121%" height="15" fill="rgb(239,3,39)" fg:x="2294" fg:w="13"/><text x="2.3866%" y="1423.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (15 samples, 0.01%)</title><rect x="2.2893%" y="1365" width="0.0140%" height="15" fill="rgb(233,210,1)" fg:x="2458" fg:w="15"/><text x="2.5393%" y="1375.50"></text></g><g><title>[libc.so.6] (32 samples, 0.03%)</title><rect x="2.3610%" y="1109" width="0.0298%" height="15" fill="rgb(244,137,37)" fg:x="2535" fg:w="32"/><text x="2.6110%" y="1119.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="2.3676%" y="1093" width="0.0233%" height="15" fill="rgb(240,136,2)" fg:x="2542" fg:w="25"/><text x="2.6176%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (49 samples, 0.05%)</title><rect x="2.3461%" y="1173" width="0.0456%" height="15" fill="rgb(239,18,37)" fg:x="2519" fg:w="49"/><text x="2.5961%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (49 samples, 0.05%)</title><rect x="2.3461%" y="1157" width="0.0456%" height="15" fill="rgb(218,185,22)" fg:x="2519" fg:w="49"/><text x="2.5961%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (49 samples, 0.05%)</title><rect x="2.3461%" y="1141" width="0.0456%" height="15" fill="rgb(225,218,4)" fg:x="2519" fg:w="49"/><text x="2.5961%" y="1151.50"></text></g><g><title>realloc (48 samples, 0.04%)</title><rect x="2.3471%" y="1125" width="0.0447%" height="15" fill="rgb(230,182,32)" fg:x="2520" fg:w="48"/><text x="2.5971%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (60 samples, 0.06%)</title><rect x="2.3405%" y="1189" width="0.0559%" height="15" fill="rgb(242,56,43)" fg:x="2513" fg:w="60"/><text x="2.5905%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (72 samples, 0.07%)</title><rect x="2.3303%" y="1253" width="0.0671%" height="15" fill="rgb(233,99,24)" fg:x="2502" fg:w="72"/><text x="2.5803%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (71 samples, 0.07%)</title><rect x="2.3312%" y="1237" width="0.0661%" height="15" fill="rgb(234,209,42)" fg:x="2503" fg:w="71"/><text x="2.5812%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.06%)</title><rect x="2.3359%" y="1221" width="0.0615%" height="15" fill="rgb(227,7,12)" fg:x="2508" fg:w="66"/><text x="2.5859%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (64 samples, 0.06%)</title><rect x="2.3378%" y="1205" width="0.0596%" height="15" fill="rgb(245,203,43)" fg:x="2510" fg:w="64"/><text x="2.5878%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.02%)</title><rect x="2.3974%" y="1253" width="0.0214%" height="15" fill="rgb(238,205,33)" fg:x="2574" fg:w="23"/><text x="2.6474%" y="1263.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="2.3974%" y="1237" width="0.0214%" height="15" fill="rgb(231,56,7)" fg:x="2574" fg:w="23"/><text x="2.6474%" y="1247.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (112 samples, 0.10%)</title><rect x="2.3191%" y="1333" width="0.1043%" height="15" fill="rgb(244,186,29)" fg:x="2490" fg:w="112"/><text x="2.5691%" y="1343.50"></text></g><g><title>alloc::string::String::push_str (102 samples, 0.10%)</title><rect x="2.3284%" y="1317" width="0.0950%" height="15" fill="rgb(234,111,31)" fg:x="2500" fg:w="102"/><text x="2.5784%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (102 samples, 0.10%)</title><rect x="2.3284%" y="1301" width="0.0950%" height="15" fill="rgb(241,149,10)" fg:x="2500" fg:w="102"/><text x="2.5784%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (102 samples, 0.10%)</title><rect x="2.3284%" y="1285" width="0.0950%" height="15" fill="rgb(249,206,44)" fg:x="2500" fg:w="102"/><text x="2.5784%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (102 samples, 0.10%)</title><rect x="2.3284%" y="1269" width="0.0950%" height="15" fill="rgb(251,153,30)" fg:x="2500" fg:w="102"/><text x="2.5784%" y="1279.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (15 samples, 0.01%)</title><rect x="2.4914%" y="1317" width="0.0140%" height="15" fill="rgb(239,152,38)" fg:x="2675" fg:w="15"/><text x="2.7414%" y="1327.50"></text></g><g><title>core::fmt::Formatter::padding (16 samples, 0.01%)</title><rect x="2.5054%" y="1317" width="0.0149%" height="15" fill="rgb(249,139,47)" fg:x="2690" fg:w="16"/><text x="2.7554%" y="1327.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (13 samples, 0.01%)</title><rect x="2.5082%" y="1301" width="0.0121%" height="15" fill="rgb(244,64,35)" fg:x="2693" fg:w="13"/><text x="2.7582%" y="1311.50"></text></g><g><title>core::fmt::Formatter::pad_integral (90 samples, 0.08%)</title><rect x="2.4374%" y="1333" width="0.0838%" height="15" fill="rgb(216,46,15)" fg:x="2617" fg:w="90"/><text x="2.6874%" y="1343.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (252 samples, 0.23%)</title><rect x="2.3052%" y="1365" width="0.2347%" height="15" fill="rgb(250,74,19)" fg:x="2475" fg:w="252"/><text x="2.5552%" y="1375.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (239 samples, 0.22%)</title><rect x="2.3173%" y="1349" width="0.2226%" height="15" fill="rgb(249,42,33)" fg:x="2488" fg:w="239"/><text x="2.5673%" y="1359.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (12 samples, 0.01%)</title><rect x="2.5287%" y="1333" width="0.0112%" height="15" fill="rgb(242,149,17)" fg:x="2715" fg:w="12"/><text x="2.7787%" y="1343.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.5287%" y="1317" width="0.0112%" height="15" fill="rgb(244,29,21)" fg:x="2715" fg:w="12"/><text x="2.7787%" y="1327.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="2.5287%" y="1301" width="0.0112%" height="15" fill="rgb(220,130,37)" fg:x="2715" fg:w="12"/><text x="2.7787%" y="1311.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.01%)</title><rect x="2.5287%" y="1285" width="0.0112%" height="15" fill="rgb(211,67,2)" fg:x="2715" fg:w="12"/><text x="2.7787%" y="1295.50"></text></g><g><title>core::fmt::run (293 samples, 0.27%)</title><rect x="2.2688%" y="1381" width="0.2729%" height="15" fill="rgb(235,68,52)" fg:x="2436" fg:w="293"/><text x="2.5188%" y="1391.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (456 samples, 0.42%)</title><rect x="2.1217%" y="1445" width="0.4247%" height="15" fill="rgb(246,142,3)" fg:x="2278" fg:w="456"/><text x="2.3717%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::LowerHex&gt;::fmt (446 samples, 0.42%)</title><rect x="2.1310%" y="1429" width="0.4154%" height="15" fill="rgb(241,25,7)" fg:x="2288" fg:w="446"/><text x="2.3810%" y="1439.50"></text></g><g><title>core::fmt::Formatter::write_fmt (421 samples, 0.39%)</title><rect x="2.1543%" y="1413" width="0.3921%" height="15" fill="rgb(242,119,39)" fg:x="2313" fg:w="421"/><text x="2.4043%" y="1423.50"></text></g><g><title>core::fmt::write (339 samples, 0.32%)</title><rect x="2.2306%" y="1397" width="0.3157%" height="15" fill="rgb(241,98,45)" fg:x="2395" fg:w="339"/><text x="2.4806%" y="1407.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (476 samples, 0.44%)</title><rect x="2.1096%" y="1509" width="0.4433%" height="15" fill="rgb(254,28,30)" fg:x="2265" fg:w="476"/><text x="2.3596%" y="1519.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::Debug&gt;::fmt (476 samples, 0.44%)</title><rect x="2.1096%" y="1493" width="0.4433%" height="15" fill="rgb(241,142,54)" fg:x="2265" fg:w="476"/><text x="2.3596%" y="1503.50"></text></g><g><title>core::fmt::Formatter::write_fmt (473 samples, 0.44%)</title><rect x="2.1124%" y="1477" width="0.4405%" height="15" fill="rgb(222,85,15)" fg:x="2268" fg:w="473"/><text x="2.3624%" y="1487.50"></text></g><g><title>core::fmt::write (469 samples, 0.44%)</title><rect x="2.1161%" y="1461" width="0.4368%" height="15" fill="rgb(210,85,47)" fg:x="2272" fg:w="469"/><text x="2.3661%" y="1471.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::sender (31 samples, 0.03%)</title><rect x="2.5790%" y="1509" width="0.0289%" height="15" fill="rgb(224,206,25)" fg:x="2769" fg:w="31"/><text x="2.8290%" y="1519.50"></text></g><g><title>aptos_types::transaction::TransactionOutput::status (15 samples, 0.01%)</title><rect x="2.6079%" y="1509" width="0.0140%" height="15" fill="rgb(243,201,19)" fg:x="2800" fg:w="15"/><text x="2.8579%" y="1519.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (20 samples, 0.02%)</title><rect x="2.6255%" y="1509" width="0.0186%" height="15" fill="rgb(236,59,4)" fg:x="2819" fg:w="20"/><text x="2.8755%" y="1519.50"></text></g><g><title>prometheus::histogram::Histogram::observe (24 samples, 0.02%)</title><rect x="2.6526%" y="1461" width="0.0224%" height="15" fill="rgb(254,179,45)" fg:x="2848" fg:w="24"/><text x="2.9026%" y="1471.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (24 samples, 0.02%)</title><rect x="2.6526%" y="1445" width="0.0224%" height="15" fill="rgb(226,14,10)" fg:x="2848" fg:w="24"/><text x="2.9026%" y="1455.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (34 samples, 0.03%)</title><rect x="2.6749%" y="1429" width="0.0317%" height="15" fill="rgb(244,27,41)" fg:x="2872" fg:w="34"/><text x="2.9249%" y="1439.50"></text></g><g><title>clock_gettime (30 samples, 0.03%)</title><rect x="2.6786%" y="1413" width="0.0279%" height="15" fill="rgb(235,35,32)" fg:x="2876" fg:w="30"/><text x="2.9286%" y="1423.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.01%)</title><rect x="2.6917%" y="1397" width="0.0149%" height="15" fill="rgb(218,68,31)" fg:x="2890" fg:w="16"/><text x="2.9417%" y="1407.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (47 samples, 0.04%)</title><rect x="2.6749%" y="1445" width="0.0438%" height="15" fill="rgb(207,120,37)" fg:x="2872" fg:w="47"/><text x="2.9249%" y="1455.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (88 samples, 0.08%)</title><rect x="2.6460%" y="1493" width="0.0820%" height="15" fill="rgb(227,98,0)" fg:x="2841" fg:w="88"/><text x="2.8960%" y="1503.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (81 samples, 0.08%)</title><rect x="2.6526%" y="1477" width="0.0754%" height="15" fill="rgb(207,7,3)" fg:x="2848" fg:w="81"/><text x="2.9026%" y="1487.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (57 samples, 0.05%)</title><rect x="2.6749%" y="1461" width="0.0531%" height="15" fill="rgb(206,98,19)" fg:x="2872" fg:w="57"/><text x="2.9249%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (90 samples, 0.08%)</title><rect x="2.6460%" y="1509" width="0.0838%" height="15" fill="rgb(217,5,26)" fg:x="2841" fg:w="90"/><text x="2.8960%" y="1519.50"></text></g><g><title>prometheus::counter::GenericCounter&lt;P&gt;::inc (12 samples, 0.01%)</title><rect x="2.7382%" y="1509" width="0.0112%" height="15" fill="rgb(235,190,38)" fg:x="2940" fg:w="12"/><text x="2.9882%" y="1519.50"></text></g><g><title>prometheus::value::Value&lt;P&gt;::inc (12 samples, 0.01%)</title><rect x="2.7382%" y="1493" width="0.0112%" height="15" fill="rgb(247,86,24)" fg:x="2940" fg:w="12"/><text x="2.9882%" y="1503.50"></text></g><g><title>prometheus::value::Value&lt;P&gt;::inc_by (12 samples, 0.01%)</title><rect x="2.7382%" y="1477" width="0.0112%" height="15" fill="rgb(205,101,16)" fg:x="2940" fg:w="12"/><text x="2.9882%" y="1487.50"></text></g><g><title>&lt;prometheus::atomic64::AtomicU64 as prometheus::atomic64::Atomic&gt;::inc_by (12 samples, 0.01%)</title><rect x="2.7382%" y="1461" width="0.0112%" height="15" fill="rgb(246,168,33)" fg:x="2940" fg:w="12"/><text x="2.9882%" y="1471.50"></text></g><g><title>prometheus::atomic64::AtomicU64::inc_by_with_ordering (12 samples, 0.01%)</title><rect x="2.7382%" y="1445" width="0.0112%" height="15" fill="rgb(231,114,1)" fg:x="2940" fg:w="12"/><text x="2.9882%" y="1455.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (17 samples, 0.02%)</title><rect x="2.7494%" y="1509" width="0.0158%" height="15" fill="rgb(207,184,53)" fg:x="2952" fg:w="17"/><text x="2.9994%" y="1519.50"></text></g><g><title>prometheus::histogram::HistogramTimer::new (11 samples, 0.01%)</title><rect x="2.7550%" y="1493" width="0.0102%" height="15" fill="rgb(224,95,51)" fg:x="2958" fg:w="11"/><text x="3.0050%" y="1503.50"></text></g><g><title>prometheus::histogram::Instant::now (11 samples, 0.01%)</title><rect x="2.7550%" y="1477" width="0.0102%" height="15" fill="rgb(212,188,45)" fg:x="2958" fg:w="11"/><text x="3.0050%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (11 samples, 0.01%)</title><rect x="2.7550%" y="1461" width="0.0102%" height="15" fill="rgb(223,154,38)" fg:x="2958" fg:w="11"/><text x="3.0050%" y="1471.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (16 samples, 0.01%)</title><rect x="2.7736%" y="1461" width="0.0149%" height="15" fill="rgb(251,22,52)" fg:x="2978" fg:w="16"/><text x="3.0236%" y="1471.50"></text></g><g><title>&lt;prometheus::counter::GenericCounter&lt;P&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="2.7736%" y="1445" width="0.0149%" height="15" fill="rgb(229,209,22)" fg:x="2978" fg:w="16"/><text x="3.0236%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="2.7736%" y="1429" width="0.0149%" height="15" fill="rgb(234,138,34)" fg:x="2978" fg:w="16"/><text x="3.0236%" y="1439.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (819 samples, 0.76%)</title><rect x="2.0583%" y="1525" width="0.7628%" height="15" fill="rgb(212,95,11)" fg:x="2210" fg:w="819"/><text x="2.3083%" y="1535.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (60 samples, 0.06%)</title><rect x="2.7653%" y="1509" width="0.0559%" height="15" fill="rgb(240,179,47)" fg:x="2969" fg:w="60"/><text x="3.0153%" y="1519.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (57 samples, 0.05%)</title><rect x="2.7681%" y="1493" width="0.0531%" height="15" fill="rgb(240,163,11)" fg:x="2972" fg:w="57"/><text x="3.0181%" y="1503.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (57 samples, 0.05%)</title><rect x="2.7681%" y="1477" width="0.0531%" height="15" fill="rgb(236,37,12)" fg:x="2972" fg:w="57"/><text x="3.0181%" y="1487.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (24 samples, 0.02%)</title><rect x="2.7988%" y="1461" width="0.0224%" height="15" fill="rgb(232,164,16)" fg:x="3005" fg:w="24"/><text x="3.0488%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (24 samples, 0.02%)</title><rect x="2.7988%" y="1445" width="0.0224%" height="15" fill="rgb(244,205,15)" fg:x="3005" fg:w="24"/><text x="3.0488%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 0.02%)</title><rect x="2.7988%" y="1429" width="0.0224%" height="15" fill="rgb(223,117,47)" fg:x="3005" fg:w="24"/><text x="3.0488%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.02%)</title><rect x="2.8044%" y="1413" width="0.0168%" height="15" fill="rgb(244,107,35)" fg:x="3011" fg:w="18"/><text x="3.0544%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.02%)</title><rect x="2.8044%" y="1397" width="0.0168%" height="15" fill="rgb(205,140,8)" fg:x="3011" fg:w="18"/><text x="3.0544%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.02%)</title><rect x="2.8044%" y="1381" width="0.0168%" height="15" fill="rgb(228,84,46)" fg:x="3011" fg:w="18"/><text x="3.0544%" y="1391.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.01%)</title><rect x="2.8100%" y="1365" width="0.0112%" height="15" fill="rgb(254,188,9)" fg:x="3017" fg:w="12"/><text x="3.0600%" y="1375.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.01%)</title><rect x="2.8100%" y="1349" width="0.0112%" height="15" fill="rgb(206,112,54)" fg:x="3017" fg:w="12"/><text x="3.0600%" y="1359.50"></text></g><g><title>aptos_types::on_chain_config::new_epoch_event_key (20 samples, 0.02%)</title><rect x="2.8314%" y="1509" width="0.0186%" height="15" fill="rgb(216,84,49)" fg:x="3040" fg:w="20"/><text x="3.0814%" y="1519.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::should_restart_execution (34 samples, 0.03%)</title><rect x="2.8211%" y="1525" width="0.0317%" height="15" fill="rgb(214,194,35)" fg:x="3029" fg:w="34"/><text x="3.0711%" y="1535.50"></text></g><g><title>aptos_vm::block_executor::AptosTransactionOutput::new (11 samples, 0.01%)</title><rect x="2.8752%" y="1525" width="0.0102%" height="15" fill="rgb(249,28,3)" fg:x="3087" fg:w="11"/><text x="3.1252%" y="1535.50"></text></g><g><title>aptos_vm::logging::AdapterLogSchema::new (14 samples, 0.01%)</title><rect x="2.8854%" y="1525" width="0.0130%" height="15" fill="rgb(222,56,52)" fg:x="3098" fg:w="14"/><text x="3.1354%" y="1535.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (924 samples, 0.86%)</title><rect x="2.0453%" y="1541" width="0.8606%" height="15" fill="rgb(245,217,50)" fg:x="2196" fg:w="924"/><text x="2.2953%" y="1551.50"></text></g><g><title>__rdl_alloc (13 samples, 0.01%)</title><rect x="2.9236%" y="1317" width="0.0121%" height="15" fill="rgb(213,201,24)" fg:x="3139" fg:w="13"/><text x="3.1736%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (45 samples, 0.04%)</title><rect x="2.9133%" y="1493" width="0.0419%" height="15" fill="rgb(248,116,28)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (45 samples, 0.04%)</title><rect x="2.9133%" y="1477" width="0.0419%" height="15" fill="rgb(219,72,43)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.04%)</title><rect x="2.9133%" y="1461" width="0.0419%" height="15" fill="rgb(209,138,14)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.04%)</title><rect x="2.9133%" y="1445" width="0.0419%" height="15" fill="rgb(222,18,33)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.04%)</title><rect x="2.9133%" y="1429" width="0.0419%" height="15" fill="rgb(213,199,7)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="2.9133%" y="1413" width="0.0419%" height="15" fill="rgb(250,110,10)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="2.9133%" y="1397" width="0.0419%" height="15" fill="rgb(248,123,6)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (45 samples, 0.04%)</title><rect x="2.9133%" y="1381" width="0.0419%" height="15" fill="rgb(206,91,31)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.04%)</title><rect x="2.9133%" y="1365" width="0.0419%" height="15" fill="rgb(211,154,13)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.04%)</title><rect x="2.9133%" y="1349" width="0.0419%" height="15" fill="rgb(225,148,7)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.04%)</title><rect x="2.9133%" y="1333" width="0.0419%" height="15" fill="rgb(220,160,43)" fg:x="3128" fg:w="45"/><text x="3.1633%" y="1343.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="2.9394%" y="1317" width="0.0158%" height="15" fill="rgb(213,52,39)" fg:x="3156" fg:w="17"/><text x="3.1894%" y="1327.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (48 samples, 0.04%)</title><rect x="2.9133%" y="1541" width="0.0447%" height="15" fill="rgb(243,137,7)" fg:x="3128" fg:w="48"/><text x="3.1633%" y="1551.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (48 samples, 0.04%)</title><rect x="2.9133%" y="1525" width="0.0447%" height="15" fill="rgb(230,79,13)" fg:x="3128" fg:w="48"/><text x="3.1633%" y="1535.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (48 samples, 0.04%)</title><rect x="2.9133%" y="1509" width="0.0447%" height="15" fill="rgb(247,105,23)" fg:x="3128" fg:w="48"/><text x="3.1633%" y="1519.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_deltas (31 samples, 0.03%)</title><rect x="2.9879%" y="1525" width="0.0289%" height="15" fill="rgb(223,179,41)" fg:x="3208" fg:w="31"/><text x="3.2379%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="3.0065%" y="1509" width="0.0102%" height="15" fill="rgb(218,9,34)" fg:x="3228" fg:w="11"/><text x="3.2565%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="3.0065%" y="1493" width="0.0102%" height="15" fill="rgb(222,106,8)" fg:x="3228" fg:w="11"/><text x="3.2565%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="3.0279%" y="1333" width="0.0112%" height="15" fill="rgb(211,220,0)" fg:x="3251" fg:w="12"/><text x="3.2779%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="3.0288%" y="1317" width="0.0102%" height="15" fill="rgb(229,52,16)" fg:x="3252" fg:w="11"/><text x="3.2788%" y="1327.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="3.0260%" y="1349" width="0.0140%" height="15" fill="rgb(212,155,18)" fg:x="3249" fg:w="15"/><text x="3.2760%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="3.0242%" y="1413" width="0.0168%" height="15" fill="rgb(242,21,14)" fg:x="3247" fg:w="18"/><text x="3.2742%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.02%)</title><rect x="3.0251%" y="1397" width="0.0158%" height="15" fill="rgb(222,19,48)" fg:x="3248" fg:w="17"/><text x="3.2751%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.01%)</title><rect x="3.0260%" y="1381" width="0.0149%" height="15" fill="rgb(232,45,27)" fg:x="3249" fg:w="16"/><text x="3.2760%" y="1391.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (16 samples, 0.01%)</title><rect x="3.0260%" y="1365" width="0.0149%" height="15" fill="rgb(249,103,42)" fg:x="3249" fg:w="16"/><text x="3.2760%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (27 samples, 0.03%)</title><rect x="3.0232%" y="1445" width="0.0251%" height="15" fill="rgb(246,81,33)" fg:x="3246" fg:w="27"/><text x="3.2732%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (26 samples, 0.02%)</title><rect x="3.0242%" y="1429" width="0.0242%" height="15" fill="rgb(252,33,42)" fg:x="3247" fg:w="26"/><text x="3.2742%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="3.0484%" y="1445" width="0.0307%" height="15" fill="rgb(209,212,41)" fg:x="3273" fg:w="33"/><text x="3.2984%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 0.02%)</title><rect x="3.0549%" y="1429" width="0.0242%" height="15" fill="rgb(207,154,6)" fg:x="3280" fg:w="26"/><text x="3.3049%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (22 samples, 0.02%)</title><rect x="3.0586%" y="1413" width="0.0205%" height="15" fill="rgb(223,64,47)" fg:x="3284" fg:w="22"/><text x="3.3086%" y="1423.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (17 samples, 0.02%)</title><rect x="3.0633%" y="1397" width="0.0158%" height="15" fill="rgb(211,161,38)" fg:x="3289" fg:w="17"/><text x="3.3133%" y="1407.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="3.0680%" y="1381" width="0.0112%" height="15" fill="rgb(219,138,40)" fg:x="3294" fg:w="12"/><text x="3.3180%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.01%)</title><rect x="3.0791%" y="1445" width="0.0130%" height="15" fill="rgb(241,228,46)" fg:x="3306" fg:w="14"/><text x="3.3291%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="3.0791%" y="1429" width="0.0130%" height="15" fill="rgb(223,209,38)" fg:x="3306" fg:w="14"/><text x="3.3291%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="3.0791%" y="1413" width="0.0130%" height="15" fill="rgb(236,164,45)" fg:x="3306" fg:w="14"/><text x="3.3291%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="3.0791%" y="1397" width="0.0130%" height="15" fill="rgb(231,15,5)" fg:x="3306" fg:w="14"/><text x="3.3291%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="3.0791%" y="1381" width="0.0130%" height="15" fill="rgb(252,35,15)" fg:x="3306" fg:w="14"/><text x="3.3291%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="3.0791%" y="1365" width="0.0130%" height="15" fill="rgb(248,181,18)" fg:x="3306" fg:w="14"/><text x="3.3291%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="3.0791%" y="1349" width="0.0130%" height="15" fill="rgb(233,39,42)" fg:x="3306" fg:w="14"/><text x="3.3291%" y="1359.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="3.0810%" y="1333" width="0.0112%" height="15" fill="rgb(238,110,33)" fg:x="3308" fg:w="12"/><text x="3.3310%" y="1343.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (83 samples, 0.08%)</title><rect x="3.0167%" y="1525" width="0.0773%" height="15" fill="rgb(233,195,10)" fg:x="3239" fg:w="83"/><text x="3.2667%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (78 samples, 0.07%)</title><rect x="3.0214%" y="1509" width="0.0726%" height="15" fill="rgb(254,105,3)" fg:x="3244" fg:w="78"/><text x="3.2714%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (78 samples, 0.07%)</title><rect x="3.0214%" y="1493" width="0.0726%" height="15" fill="rgb(221,225,9)" fg:x="3244" fg:w="78"/><text x="3.2714%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (77 samples, 0.07%)</title><rect x="3.0223%" y="1477" width="0.0717%" height="15" fill="rgb(224,227,45)" fg:x="3245" fg:w="77"/><text x="3.2723%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (76 samples, 0.07%)</title><rect x="3.0232%" y="1461" width="0.0708%" height="15" fill="rgb(229,198,43)" fg:x="3246" fg:w="76"/><text x="3.2732%" y="1471.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="3.1201%" y="1477" width="0.0121%" height="15" fill="rgb(206,209,35)" fg:x="3350" fg:w="13"/><text x="3.3701%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="3.1201%" y="1461" width="0.0121%" height="15" fill="rgb(245,195,53)" fg:x="3350" fg:w="13"/><text x="3.3701%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="3.1201%" y="1445" width="0.0121%" height="15" fill="rgb(240,92,26)" fg:x="3350" fg:w="13"/><text x="3.3701%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="3.1201%" y="1429" width="0.0121%" height="15" fill="rgb(207,40,23)" fg:x="3350" fg:w="13"/><text x="3.3701%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="3.1201%" y="1413" width="0.0121%" height="15" fill="rgb(223,111,35)" fg:x="3350" fg:w="13"/><text x="3.3701%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="3.1071%" y="1509" width="0.0279%" height="15" fill="rgb(229,147,28)" fg:x="3336" fg:w="30"/><text x="3.3571%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="3.1099%" y="1493" width="0.0251%" height="15" fill="rgb(211,29,28)" fg:x="3339" fg:w="27"/><text x="3.3599%" y="1503.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (38 samples, 0.04%)</title><rect x="3.1378%" y="1493" width="0.0354%" height="15" fill="rgb(228,72,33)" fg:x="3369" fg:w="38"/><text x="3.3878%" y="1503.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (37 samples, 0.03%)</title><rect x="3.1387%" y="1477" width="0.0345%" height="15" fill="rgb(205,214,31)" fg:x="3370" fg:w="37"/><text x="3.3887%" y="1487.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (33 samples, 0.03%)</title><rect x="3.1425%" y="1461" width="0.0307%" height="15" fill="rgb(224,111,15)" fg:x="3374" fg:w="33"/><text x="3.3925%" y="1471.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (33 samples, 0.03%)</title><rect x="3.1425%" y="1445" width="0.0307%" height="15" fill="rgb(253,21,26)" fg:x="3374" fg:w="33"/><text x="3.3925%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (29 samples, 0.03%)</title><rect x="3.1918%" y="1477" width="0.0270%" height="15" fill="rgb(245,139,43)" fg:x="3427" fg:w="29"/><text x="3.4418%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (16 samples, 0.01%)</title><rect x="3.2039%" y="1461" width="0.0149%" height="15" fill="rgb(252,170,7)" fg:x="3440" fg:w="16"/><text x="3.4539%" y="1471.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (195 samples, 0.18%)</title><rect x="3.1350%" y="1509" width="0.1816%" height="15" fill="rgb(231,118,14)" fg:x="3366" fg:w="195"/><text x="3.3850%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (145 samples, 0.14%)</title><rect x="3.1816%" y="1493" width="0.1350%" height="15" fill="rgb(238,83,0)" fg:x="3416" fg:w="145"/><text x="3.4316%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (105 samples, 0.10%)</title><rect x="3.2188%" y="1477" width="0.0978%" height="15" fill="rgb(221,39,39)" fg:x="3456" fg:w="105"/><text x="3.4688%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (105 samples, 0.10%)</title><rect x="3.2188%" y="1461" width="0.0978%" height="15" fill="rgb(222,119,46)" fg:x="3456" fg:w="105"/><text x="3.4688%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (104 samples, 0.10%)</title><rect x="3.2198%" y="1445" width="0.0969%" height="15" fill="rgb(222,165,49)" fg:x="3457" fg:w="104"/><text x="3.4698%" y="1455.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (103 samples, 0.10%)</title><rect x="3.2207%" y="1429" width="0.0959%" height="15" fill="rgb(219,113,52)" fg:x="3458" fg:w="103"/><text x="3.4707%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.10%)</title><rect x="3.2207%" y="1413" width="0.0959%" height="15" fill="rgb(214,7,15)" fg:x="3458" fg:w="103"/><text x="3.4707%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.10%)</title><rect x="3.2207%" y="1397" width="0.0959%" height="15" fill="rgb(235,32,4)" fg:x="3458" fg:w="103"/><text x="3.4707%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (103 samples, 0.10%)</title><rect x="3.2207%" y="1381" width="0.0959%" height="15" fill="rgb(238,90,54)" fg:x="3458" fg:w="103"/><text x="3.4707%" y="1391.50"></text></g><g><title>__rdl_alloc (101 samples, 0.09%)</title><rect x="3.2226%" y="1365" width="0.0941%" height="15" fill="rgb(213,208,19)" fg:x="3460" fg:w="101"/><text x="3.4726%" y="1375.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (100 samples, 0.09%)</title><rect x="3.2235%" y="1349" width="0.0931%" height="15" fill="rgb(233,156,4)" fg:x="3461" fg:w="100"/><text x="3.4735%" y="1359.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (100 samples, 0.09%)</title><rect x="3.2235%" y="1333" width="0.0931%" height="15" fill="rgb(207,194,5)" fg:x="3461" fg:w="100"/><text x="3.4735%" y="1343.50"></text></g><g><title>posix_memalign (99 samples, 0.09%)</title><rect x="3.2244%" y="1317" width="0.0922%" height="15" fill="rgb(206,111,30)" fg:x="3462" fg:w="99"/><text x="3.4744%" y="1327.50"></text></g><g><title>[libc.so.6] (93 samples, 0.09%)</title><rect x="3.2300%" y="1301" width="0.0866%" height="15" fill="rgb(243,70,54)" fg:x="3468" fg:w="93"/><text x="3.4800%" y="1311.50"></text></g><g><title>[libc.so.6] (86 samples, 0.08%)</title><rect x="3.2365%" y="1285" width="0.0801%" height="15" fill="rgb(242,28,8)" fg:x="3475" fg:w="86"/><text x="3.4865%" y="1295.50"></text></g><g><title>[libc.so.6] (77 samples, 0.07%)</title><rect x="3.2449%" y="1269" width="0.0717%" height="15" fill="rgb(219,106,18)" fg:x="3484" fg:w="77"/><text x="3.4949%" y="1279.50"></text></g><g><title>[libc.so.6] (39 samples, 0.04%)</title><rect x="3.2803%" y="1253" width="0.0363%" height="15" fill="rgb(244,222,10)" fg:x="3522" fg:w="39"/><text x="3.5303%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (13 samples, 0.01%)</title><rect x="3.3259%" y="1509" width="0.0121%" height="15" fill="rgb(236,179,52)" fg:x="3571" fg:w="13"/><text x="3.5759%" y="1519.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::add_write::{{closure}} (13 samples, 0.01%)</title><rect x="3.3259%" y="1493" width="0.0121%" height="15" fill="rgb(213,23,39)" fg:x="3571" fg:w="13"/><text x="3.5759%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="3.3259%" y="1477" width="0.0121%" height="15" fill="rgb(238,48,10)" fg:x="3571" fg:w="13"/><text x="3.5759%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt; (13 samples, 0.01%)</title><rect x="3.3259%" y="1461" width="0.0121%" height="15" fill="rgb(251,196,23)" fg:x="3571" fg:w="13"/><text x="3.5759%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::EntryCell&lt;aptos_types::write_set::WriteOp&gt;&gt; (13 samples, 0.01%)</title><rect x="3.3259%" y="1445" width="0.0121%" height="15" fill="rgb(250,152,24)" fg:x="3571" fg:w="13"/><text x="3.5759%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_types::write_set::WriteOp&gt;&gt; (13 samples, 0.01%)</title><rect x="3.3259%" y="1429" width="0.0121%" height="15" fill="rgb(209,150,17)" fg:x="3571" fg:w="13"/><text x="3.5759%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.3259%" y="1413" width="0.0121%" height="15" fill="rgb(234,202,34)" fg:x="3571" fg:w="13"/><text x="3.5759%" y="1423.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_write_shard (23 samples, 0.02%)</title><rect x="3.3539%" y="1477" width="0.0214%" height="15" fill="rgb(253,148,53)" fg:x="3601" fg:w="23"/><text x="3.6039%" y="1487.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (23 samples, 0.02%)</title><rect x="3.3539%" y="1461" width="0.0214%" height="15" fill="rgb(218,129,16)" fg:x="3601" fg:w="23"/><text x="3.6039%" y="1471.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (23 samples, 0.02%)</title><rect x="3.3539%" y="1445" width="0.0214%" height="15" fill="rgb(216,85,19)" fg:x="3601" fg:w="23"/><text x="3.6039%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="3.3790%" y="1461" width="0.0205%" height="15" fill="rgb(235,228,7)" fg:x="3628" fg:w="22"/><text x="3.6290%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="3.3800%" y="1445" width="0.0196%" height="15" fill="rgb(245,175,0)" fg:x="3629" fg:w="21"/><text x="3.6300%" y="1455.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (35 samples, 0.03%)</title><rect x="3.3790%" y="1477" width="0.0326%" height="15" fill="rgb(208,168,36)" fg:x="3628" fg:w="35"/><text x="3.6290%" y="1487.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.02%)</title><rect x="3.4154%" y="1445" width="0.0233%" height="15" fill="rgb(246,171,24)" fg:x="3667" fg:w="25"/><text x="3.6654%" y="1455.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.01%)</title><rect x="3.4414%" y="1381" width="0.0130%" height="15" fill="rgb(215,142,24)" fg:x="3695" fg:w="14"/><text x="3.6914%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="3.4414%" y="1365" width="0.0130%" height="15" fill="rgb(250,187,7)" fg:x="3695" fg:w="14"/><text x="3.6914%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="3.4414%" y="1349" width="0.0130%" height="15" fill="rgb(228,66,33)" fg:x="3695" fg:w="14"/><text x="3.6914%" y="1359.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="3.4414%" y="1333" width="0.0130%" height="15" fill="rgb(234,215,21)" fg:x="3695" fg:w="14"/><text x="3.6914%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.01%)</title><rect x="3.4414%" y="1397" width="0.0140%" height="15" fill="rgb(222,191,20)" fg:x="3695" fg:w="15"/><text x="3.6914%" y="1407.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::entry (126 samples, 0.12%)</title><rect x="3.3464%" y="1509" width="0.1174%" height="15" fill="rgb(245,79,54)" fg:x="3593" fg:w="126"/><text x="3.5964%" y="1519.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (120 samples, 0.11%)</title><rect x="3.3520%" y="1493" width="0.1118%" height="15" fill="rgb(240,10,37)" fg:x="3599" fg:w="120"/><text x="3.6020%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (56 samples, 0.05%)</title><rect x="3.4116%" y="1477" width="0.0522%" height="15" fill="rgb(214,192,32)" fg:x="3663" fg:w="56"/><text x="3.6616%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (54 samples, 0.05%)</title><rect x="3.4135%" y="1461" width="0.0503%" height="15" fill="rgb(209,36,54)" fg:x="3665" fg:w="54"/><text x="3.6635%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (27 samples, 0.03%)</title><rect x="3.4386%" y="1445" width="0.0251%" height="15" fill="rgb(220,10,11)" fg:x="3692" fg:w="27"/><text x="3.6886%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (27 samples, 0.03%)</title><rect x="3.4386%" y="1429" width="0.0251%" height="15" fill="rgb(221,106,17)" fg:x="3692" fg:w="27"/><text x="3.6886%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (27 samples, 0.03%)</title><rect x="3.4386%" y="1413" width="0.0251%" height="15" fill="rgb(251,142,44)" fg:x="3692" fg:w="27"/><text x="3.6886%" y="1423.50"></text></g><g><title>dashmap::mapref::entry::OccupiedEntry&lt;K,V,S&gt;::into_ref (12 samples, 0.01%)</title><rect x="3.4722%" y="1493" width="0.0112%" height="15" fill="rgb(238,13,15)" fg:x="3728" fg:w="12"/><text x="3.7222%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="3.4899%" y="1301" width="0.0168%" height="15" fill="rgb(208,107,27)" fg:x="3747" fg:w="18"/><text x="3.7399%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="3.4908%" y="1285" width="0.0158%" height="15" fill="rgb(205,136,37)" fg:x="3748" fg:w="17"/><text x="3.7408%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="3.4908%" y="1269" width="0.0158%" height="15" fill="rgb(250,205,27)" fg:x="3748" fg:w="17"/><text x="3.7408%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (19 samples, 0.02%)</title><rect x="3.4899%" y="1333" width="0.0177%" height="15" fill="rgb(210,80,43)" fg:x="3747" fg:w="19"/><text x="3.7399%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.02%)</title><rect x="3.4899%" y="1317" width="0.0177%" height="15" fill="rgb(247,160,36)" fg:x="3747" fg:w="19"/><text x="3.7399%" y="1327.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (42 samples, 0.04%)</title><rect x="3.4871%" y="1397" width="0.0391%" height="15" fill="rgb(234,13,49)" fg:x="3744" fg:w="42"/><text x="3.7371%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (39 samples, 0.04%)</title><rect x="3.4899%" y="1381" width="0.0363%" height="15" fill="rgb(234,122,0)" fg:x="3747" fg:w="39"/><text x="3.7399%" y="1391.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (39 samples, 0.04%)</title><rect x="3.4899%" y="1365" width="0.0363%" height="15" fill="rgb(207,146,38)" fg:x="3747" fg:w="39"/><text x="3.7399%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (39 samples, 0.04%)</title><rect x="3.4899%" y="1349" width="0.0363%" height="15" fill="rgb(207,177,25)" fg:x="3747" fg:w="39"/><text x="3.7399%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (20 samples, 0.02%)</title><rect x="3.5076%" y="1333" width="0.0186%" height="15" fill="rgb(211,178,42)" fg:x="3766" fg:w="20"/><text x="3.7576%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="3.5076%" y="1317" width="0.0186%" height="15" fill="rgb(230,69,54)" fg:x="3766" fg:w="20"/><text x="3.7576%" y="1327.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (62 samples, 0.06%)</title><rect x="3.4852%" y="1429" width="0.0577%" height="15" fill="rgb(214,135,41)" fg:x="3742" fg:w="62"/><text x="3.7352%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (60 samples, 0.06%)</title><rect x="3.4871%" y="1413" width="0.0559%" height="15" fill="rgb(237,67,25)" fg:x="3744" fg:w="60"/><text x="3.7371%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (15 samples, 0.01%)</title><rect x="3.5290%" y="1397" width="0.0140%" height="15" fill="rgb(222,189,50)" fg:x="3789" fg:w="15"/><text x="3.7790%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_isize (15 samples, 0.01%)</title><rect x="3.5290%" y="1381" width="0.0140%" height="15" fill="rgb(245,148,34)" fg:x="3789" fg:w="15"/><text x="3.7790%" y="1391.50"></text></g><g><title>core::hash::Hasher::write_usize (15 samples, 0.01%)</title><rect x="3.5290%" y="1365" width="0.0140%" height="15" fill="rgb(222,29,6)" fg:x="3789" fg:w="15"/><text x="3.7790%" y="1375.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="3.5290%" y="1349" width="0.0140%" height="15" fill="rgb(221,189,43)" fg:x="3789" fg:w="15"/><text x="3.7790%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="3.5299%" y="1333" width="0.0130%" height="15" fill="rgb(207,36,27)" fg:x="3790" fg:w="14"/><text x="3.7799%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="3.5299%" y="1317" width="0.0130%" height="15" fill="rgb(217,90,24)" fg:x="3790" fg:w="14"/><text x="3.7799%" y="1327.50"></text></g><g><title>hashbrown::map::make_hash (67 samples, 0.06%)</title><rect x="3.4852%" y="1445" width="0.0624%" height="15" fill="rgb(224,66,35)" fg:x="3742" fg:w="67"/><text x="3.7352%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (77 samples, 0.07%)</title><rect x="3.4833%" y="1477" width="0.0717%" height="15" fill="rgb(221,13,50)" fg:x="3740" fg:w="77"/><text x="3.7333%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (76 samples, 0.07%)</title><rect x="3.4843%" y="1461" width="0.0708%" height="15" fill="rgb(236,68,49)" fg:x="3741" fg:w="76"/><text x="3.7343%" y="1471.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.01%)</title><rect x="3.5588%" y="1461" width="0.0121%" height="15" fill="rgb(229,146,28)" fg:x="3821" fg:w="13"/><text x="3.8088%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::write (13 samples, 0.01%)</title><rect x="3.5737%" y="1445" width="0.0121%" height="15" fill="rgb(225,31,38)" fg:x="3837" fg:w="13"/><text x="3.8237%" y="1455.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (13 samples, 0.01%)</title><rect x="3.5737%" y="1429" width="0.0121%" height="15" fill="rgb(250,208,3)" fg:x="3837" fg:w="13"/><text x="3.8237%" y="1439.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="3.5737%" y="1413" width="0.0121%" height="15" fill="rgb(246,54,23)" fg:x="3837" fg:w="13"/><text x="3.8237%" y="1423.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="3.5737%" y="1397" width="0.0121%" height="15" fill="rgb(243,76,11)" fg:x="3837" fg:w="13"/><text x="3.8237%" y="1407.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="3.5951%" y="1301" width="0.0233%" height="15" fill="rgb(245,21,50)" fg:x="3860" fg:w="25"/><text x="3.8451%" y="1311.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (23 samples, 0.02%)</title><rect x="3.5970%" y="1285" width="0.0214%" height="15" fill="rgb(228,9,43)" fg:x="3862" fg:w="23"/><text x="3.8470%" y="1295.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (23 samples, 0.02%)</title><rect x="3.5970%" y="1269" width="0.0214%" height="15" fill="rgb(208,100,47)" fg:x="3862" fg:w="23"/><text x="3.8470%" y="1279.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (23 samples, 0.02%)</title><rect x="3.5970%" y="1253" width="0.0214%" height="15" fill="rgb(232,26,8)" fg:x="3862" fg:w="23"/><text x="3.8470%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="3.6044%" y="1237" width="0.0140%" height="15" fill="rgb(216,166,38)" fg:x="3870" fg:w="15"/><text x="3.8544%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="3.6044%" y="1221" width="0.0140%" height="15" fill="rgb(251,202,51)" fg:x="3870" fg:w="15"/><text x="3.8544%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="3.6203%" y="1253" width="0.0112%" height="15" fill="rgb(254,216,34)" fg:x="3887" fg:w="12"/><text x="3.8703%" y="1263.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (43 samples, 0.04%)</title><rect x="3.5942%" y="1333" width="0.0400%" height="15" fill="rgb(251,32,27)" fg:x="3859" fg:w="43"/><text x="3.8442%" y="1343.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (43 samples, 0.04%)</title><rect x="3.5942%" y="1317" width="0.0400%" height="15" fill="rgb(208,127,28)" fg:x="3859" fg:w="43"/><text x="3.8442%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (15 samples, 0.01%)</title><rect x="3.6203%" y="1301" width="0.0140%" height="15" fill="rgb(224,137,22)" fg:x="3887" fg:w="15"/><text x="3.8703%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_isize (15 samples, 0.01%)</title><rect x="3.6203%" y="1285" width="0.0140%" height="15" fill="rgb(254,70,32)" fg:x="3887" fg:w="15"/><text x="3.8703%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_usize (15 samples, 0.01%)</title><rect x="3.6203%" y="1269" width="0.0140%" height="15" fill="rgb(229,75,37)" fg:x="3887" fg:w="15"/><text x="3.8703%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48 samples, 0.04%)</title><rect x="3.6380%" y="1285" width="0.0447%" height="15" fill="rgb(252,64,23)" fg:x="3906" fg:w="48"/><text x="3.8880%" y="1295.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (99 samples, 0.09%)</title><rect x="3.5942%" y="1381" width="0.0922%" height="15" fill="rgb(232,162,48)" fg:x="3859" fg:w="99"/><text x="3.8442%" y="1391.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (99 samples, 0.09%)</title><rect x="3.5942%" y="1365" width="0.0922%" height="15" fill="rgb(246,160,12)" fg:x="3859" fg:w="99"/><text x="3.8442%" y="1375.50"></text></g><g><title>hashbrown::map::make_hash (99 samples, 0.09%)</title><rect x="3.5942%" y="1349" width="0.0922%" height="15" fill="rgb(247,166,0)" fg:x="3859" fg:w="99"/><text x="3.8442%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (53 samples, 0.05%)</title><rect x="3.6370%" y="1333" width="0.0494%" height="15" fill="rgb(249,219,21)" fg:x="3905" fg:w="53"/><text x="3.8870%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (53 samples, 0.05%)</title><rect x="3.6370%" y="1317" width="0.0494%" height="15" fill="rgb(205,209,3)" fg:x="3905" fg:w="53"/><text x="3.8870%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 samples, 0.05%)</title><rect x="3.6370%" y="1301" width="0.0494%" height="15" fill="rgb(243,44,1)" fg:x="3905" fg:w="53"/><text x="3.8870%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (125 samples, 0.12%)</title><rect x="3.5858%" y="1445" width="0.1164%" height="15" fill="rgb(206,159,16)" fg:x="3850" fg:w="125"/><text x="3.8358%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (125 samples, 0.12%)</title><rect x="3.5858%" y="1429" width="0.1164%" height="15" fill="rgb(244,77,30)" fg:x="3850" fg:w="125"/><text x="3.8358%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (124 samples, 0.12%)</title><rect x="3.5867%" y="1413" width="0.1155%" height="15" fill="rgb(218,69,12)" fg:x="3851" fg:w="124"/><text x="3.8367%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (124 samples, 0.12%)</title><rect x="3.5867%" y="1397" width="0.1155%" height="15" fill="rgb(212,87,7)" fg:x="3851" fg:w="124"/><text x="3.8367%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (13 samples, 0.01%)</title><rect x="3.6901%" y="1381" width="0.0121%" height="15" fill="rgb(245,114,25)" fg:x="3962" fg:w="13"/><text x="3.9401%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (13 samples, 0.01%)</title><rect x="3.6901%" y="1365" width="0.0121%" height="15" fill="rgb(210,61,42)" fg:x="3962" fg:w="13"/><text x="3.9401%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (12 samples, 0.01%)</title><rect x="3.6910%" y="1349" width="0.0112%" height="15" fill="rgb(211,52,33)" fg:x="3963" fg:w="12"/><text x="3.9410%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (12 samples, 0.01%)</title><rect x="3.6910%" y="1333" width="0.0112%" height="15" fill="rgb(234,58,33)" fg:x="3963" fg:w="12"/><text x="3.9410%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="3.6910%" y="1317" width="0.0112%" height="15" fill="rgb(220,115,36)" fg:x="3963" fg:w="12"/><text x="3.9410%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="3.6910%" y="1301" width="0.0112%" height="15" fill="rgb(243,153,54)" fg:x="3963" fg:w="12"/><text x="3.9410%" y="1311.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="3.6910%" y="1285" width="0.0112%" height="15" fill="rgb(251,47,18)" fg:x="3963" fg:w="12"/><text x="3.9410%" y="1295.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::add_write (656 samples, 0.61%)</title><rect x="3.0940%" y="1525" width="0.6110%" height="15" fill="rgb(242,102,42)" fg:x="3322" fg:w="656"/><text x="3.3440%" y="1535.50"></text></g><g><title>dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_default (259 samples, 0.24%)</title><rect x="3.4638%" y="1509" width="0.2412%" height="15" fill="rgb(234,31,38)" fg:x="3719" fg:w="259"/><text x="3.7138%" y="1519.50"></text></g><g><title>dashmap::mapref::entry::VacantEntry&lt;K,V,S&gt;::insert (238 samples, 0.22%)</title><rect x="3.4833%" y="1493" width="0.2217%" height="15" fill="rgb(221,117,51)" fg:x="3740" fg:w="238"/><text x="3.7333%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (161 samples, 0.15%)</title><rect x="3.5551%" y="1477" width="0.1500%" height="15" fill="rgb(212,20,18)" fg:x="3817" fg:w="161"/><text x="3.8051%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (143 samples, 0.13%)</title><rect x="3.5718%" y="1461" width="0.1332%" height="15" fill="rgb(245,133,36)" fg:x="3835" fg:w="143"/><text x="3.8218%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp)&gt;&gt; (15 samples, 0.01%)</title><rect x="3.7106%" y="1525" width="0.0140%" height="15" fill="rgb(212,6,19)" fg:x="3984" fg:w="15"/><text x="3.9606%" y="1535.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="3.7143%" y="1509" width="0.0102%" height="15" fill="rgb(218,1,36)" fg:x="3988" fg:w="11"/><text x="3.9643%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="3.7246%" y="1477" width="0.0112%" height="15" fill="rgb(246,84,54)" fg:x="3999" fg:w="12"/><text x="3.9746%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="3.7246%" y="1461" width="0.0112%" height="15" fill="rgb(242,110,6)" fg:x="3999" fg:w="12"/><text x="3.9746%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (13 samples, 0.01%)</title><rect x="3.7246%" y="1525" width="0.0121%" height="15" fill="rgb(214,47,5)" fg:x="3999" fg:w="13"/><text x="3.9746%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (13 samples, 0.01%)</title><rect x="3.7246%" y="1509" width="0.0121%" height="15" fill="rgb(218,159,25)" fg:x="3999" fg:w="13"/><text x="3.9746%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.7246%" y="1493" width="0.0121%" height="15" fill="rgb(215,211,28)" fg:x="3999" fg:w="13"/><text x="3.9746%" y="1503.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="3.7572%" y="1381" width="0.0140%" height="15" fill="rgb(238,59,32)" fg:x="4034" fg:w="15"/><text x="4.0072%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (29 samples, 0.03%)</title><rect x="3.7562%" y="1413" width="0.0270%" height="15" fill="rgb(226,82,3)" fg:x="4033" fg:w="29"/><text x="4.0062%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (29 samples, 0.03%)</title><rect x="3.7562%" y="1397" width="0.0270%" height="15" fill="rgb(240,164,32)" fg:x="4033" fg:w="29"/><text x="4.0062%" y="1407.50"></text></g><g><title>hashbrown::map::make_hash (48 samples, 0.04%)</title><rect x="3.7479%" y="1461" width="0.0447%" height="15" fill="rgb(232,46,7)" fg:x="4024" fg:w="48"/><text x="3.9979%" y="1471.50"></text></g><g><title>core::hash::BuildHasher::hash_one (48 samples, 0.04%)</title><rect x="3.7479%" y="1445" width="0.0447%" height="15" fill="rgb(229,129,53)" fg:x="4024" fg:w="48"/><text x="3.9979%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (39 samples, 0.04%)</title><rect x="3.7562%" y="1429" width="0.0363%" height="15" fill="rgb(234,188,29)" fg:x="4033" fg:w="39"/><text x="4.0062%" y="1439.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute::{{closure}} (896 samples, 0.83%)</title><rect x="2.9664%" y="1541" width="0.8345%" height="15" fill="rgb(246,141,4)" fg:x="3185" fg:w="896"/><text x="3.2164%" y="1551.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (69 samples, 0.06%)</title><rect x="3.7367%" y="1525" width="0.0643%" height="15" fill="rgb(229,23,39)" fg:x="4012" fg:w="69"/><text x="3.9867%" y="1535.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (69 samples, 0.06%)</title><rect x="3.7367%" y="1509" width="0.0643%" height="15" fill="rgb(206,12,3)" fg:x="4012" fg:w="69"/><text x="3.9867%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (69 samples, 0.06%)</title><rect x="3.7367%" y="1493" width="0.0643%" height="15" fill="rgb(252,226,20)" fg:x="4012" fg:w="69"/><text x="3.9867%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (57 samples, 0.05%)</title><rect x="3.7479%" y="1477" width="0.0531%" height="15" fill="rgb(216,123,35)" fg:x="4024" fg:w="57"/><text x="3.9979%" y="1487.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="3.8224%" y="1525" width="0.0577%" height="15" fill="rgb(212,68,40)" fg:x="4104" fg:w="62"/><text x="4.0724%" y="1535.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="3.8224%" y="1509" width="0.0577%" height="15" fill="rgb(254,125,32)" fg:x="4104" fg:w="62"/><text x="4.0724%" y="1519.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (53 samples, 0.05%)</title><rect x="3.8308%" y="1493" width="0.0494%" height="15" fill="rgb(253,97,22)" fg:x="4113" fg:w="53"/><text x="4.0808%" y="1503.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (53 samples, 0.05%)</title><rect x="3.8308%" y="1477" width="0.0494%" height="15" fill="rgb(241,101,14)" fg:x="4113" fg:w="53"/><text x="4.0808%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="3.8885%" y="1477" width="0.0186%" height="15" fill="rgb(238,103,29)" fg:x="4175" fg:w="20"/><text x="4.1385%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="3.8885%" y="1461" width="0.0186%" height="15" fill="rgb(233,195,47)" fg:x="4175" fg:w="20"/><text x="4.1385%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20 samples, 0.02%)</title><rect x="3.8885%" y="1445" width="0.0186%" height="15" fill="rgb(246,218,30)" fg:x="4175" fg:w="20"/><text x="4.1385%" y="1455.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_execution::{{closure}} (20 samples, 0.02%)</title><rect x="3.8885%" y="1429" width="0.0186%" height="15" fill="rgb(219,145,47)" fg:x="4175" fg:w="20"/><text x="4.1385%" y="1439.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::resume (17 samples, 0.02%)</title><rect x="3.8913%" y="1413" width="0.0158%" height="15" fill="rgb(243,12,26)" fg:x="4178" fg:w="17"/><text x="4.1413%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (30 samples, 0.03%)</title><rect x="3.8801%" y="1525" width="0.0279%" height="15" fill="rgb(214,87,16)" fg:x="4166" fg:w="30"/><text x="4.1301%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (30 samples, 0.03%)</title><rect x="3.8801%" y="1509" width="0.0279%" height="15" fill="rgb(208,99,42)" fg:x="4166" fg:w="30"/><text x="4.1301%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (30 samples, 0.03%)</title><rect x="3.8801%" y="1493" width="0.0279%" height="15" fill="rgb(253,99,2)" fg:x="4166" fg:w="30"/><text x="4.1301%" y="1503.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_execution (131 samples, 0.12%)</title><rect x="3.8009%" y="1541" width="0.1220%" height="15" fill="rgb(220,168,23)" fg:x="4081" fg:w="131"/><text x="4.0509%" y="1551.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (28 samples, 0.03%)</title><rect x="3.9332%" y="1525" width="0.0261%" height="15" fill="rgb(242,38,24)" fg:x="4223" fg:w="28"/><text x="4.1832%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.02%)</title><rect x="3.9379%" y="1509" width="0.0214%" height="15" fill="rgb(225,182,9)" fg:x="4228" fg:w="23"/><text x="4.1879%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="3.9379%" y="1493" width="0.0214%" height="15" fill="rgb(243,178,37)" fg:x="4228" fg:w="23"/><text x="4.1879%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="3.9379%" y="1477" width="0.0214%" height="15" fill="rgb(232,139,19)" fg:x="4228" fg:w="23"/><text x="4.1879%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (22 samples, 0.02%)</title><rect x="3.9388%" y="1461" width="0.0205%" height="15" fill="rgb(225,201,24)" fg:x="4229" fg:w="22"/><text x="4.1888%" y="1471.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (52 samples, 0.05%)</title><rect x="3.9611%" y="1445" width="0.0484%" height="15" fill="rgb(221,47,46)" fg:x="4253" fg:w="52"/><text x="4.2111%" y="1455.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (51 samples, 0.05%)</title><rect x="3.9621%" y="1429" width="0.0475%" height="15" fill="rgb(249,23,13)" fg:x="4254" fg:w="51"/><text x="4.2121%" y="1439.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::{{closure}} (57 samples, 0.05%)</title><rect x="3.9593%" y="1477" width="0.0531%" height="15" fill="rgb(219,9,5)" fg:x="4251" fg:w="57"/><text x="4.2093%" y="1487.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (55 samples, 0.05%)</title><rect x="3.9611%" y="1461" width="0.0512%" height="15" fill="rgb(254,171,16)" fg:x="4253" fg:w="55"/><text x="4.2111%" y="1471.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (63 samples, 0.06%)</title><rect x="3.9593%" y="1509" width="0.0587%" height="15" fill="rgb(230,171,20)" fg:x="4251" fg:w="63"/><text x="4.2093%" y="1519.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (63 samples, 0.06%)</title><rect x="3.9593%" y="1493" width="0.0587%" height="15" fill="rgb(210,71,41)" fg:x="4251" fg:w="63"/><text x="4.2093%" y="1503.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (65 samples, 0.06%)</title><rect x="3.9593%" y="1525" width="0.0605%" height="15" fill="rgb(206,173,20)" fg:x="4251" fg:w="65"/><text x="4.2093%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="4.0403%" y="1221" width="0.0102%" height="15" fill="rgb(233,88,34)" fg:x="4338" fg:w="11"/><text x="4.2903%" y="1231.50"></text></g><g><title>hashbrown::map::make_insert_hash (19 samples, 0.02%)</title><rect x="4.0366%" y="1269" width="0.0177%" height="15" fill="rgb(223,209,46)" fg:x="4334" fg:w="19"/><text x="4.2866%" y="1279.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.02%)</title><rect x="4.0375%" y="1253" width="0.0168%" height="15" fill="rgb(250,43,18)" fg:x="4335" fg:w="18"/><text x="4.2875%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.01%)</title><rect x="4.0403%" y="1237" width="0.0140%" height="15" fill="rgb(208,13,10)" fg:x="4338" fg:w="15"/><text x="4.2903%" y="1247.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (30 samples, 0.03%)</title><rect x="4.0338%" y="1365" width="0.0279%" height="15" fill="rgb(212,200,36)" fg:x="4331" fg:w="30"/><text x="4.2838%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (29 samples, 0.03%)</title><rect x="4.0347%" y="1349" width="0.0270%" height="15" fill="rgb(225,90,30)" fg:x="4332" fg:w="29"/><text x="4.2847%" y="1359.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (29 samples, 0.03%)</title><rect x="4.0347%" y="1333" width="0.0270%" height="15" fill="rgb(236,182,39)" fg:x="4332" fg:w="29"/><text x="4.2847%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (29 samples, 0.03%)</title><rect x="4.0347%" y="1317" width="0.0270%" height="15" fill="rgb(212,144,35)" fg:x="4332" fg:w="29"/><text x="4.2847%" y="1327.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (29 samples, 0.03%)</title><rect x="4.0347%" y="1301" width="0.0270%" height="15" fill="rgb(228,63,44)" fg:x="4332" fg:w="29"/><text x="4.2847%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.03%)</title><rect x="4.0357%" y="1285" width="0.0261%" height="15" fill="rgb(228,109,6)" fg:x="4333" fg:w="28"/><text x="4.2857%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (45 samples, 0.04%)</title><rect x="4.0254%" y="1445" width="0.0419%" height="15" fill="rgb(238,117,24)" fg:x="4322" fg:w="45"/><text x="4.2754%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.04%)</title><rect x="4.0254%" y="1429" width="0.0419%" height="15" fill="rgb(242,26,26)" fg:x="4322" fg:w="45"/><text x="4.2754%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44 samples, 0.04%)</title><rect x="4.0263%" y="1413" width="0.0410%" height="15" fill="rgb(221,92,48)" fg:x="4323" fg:w="44"/><text x="4.2763%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44 samples, 0.04%)</title><rect x="4.0263%" y="1397" width="0.0410%" height="15" fill="rgb(209,209,32)" fg:x="4323" fg:w="44"/><text x="4.2763%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (38 samples, 0.04%)</title><rect x="4.0319%" y="1381" width="0.0354%" height="15" fill="rgb(221,70,22)" fg:x="4329" fg:w="38"/><text x="4.2819%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.06%)</title><rect x="4.0198%" y="1525" width="0.0577%" height="15" fill="rgb(248,145,5)" fg:x="4316" fg:w="62"/><text x="4.2698%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (62 samples, 0.06%)</title><rect x="4.0198%" y="1509" width="0.0577%" height="15" fill="rgb(226,116,26)" fg:x="4316" fg:w="62"/><text x="4.2698%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (61 samples, 0.06%)</title><rect x="4.0208%" y="1493" width="0.0568%" height="15" fill="rgb(244,5,17)" fg:x="4317" fg:w="61"/><text x="4.2708%" y="1503.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (61 samples, 0.06%)</title><rect x="4.0208%" y="1477" width="0.0568%" height="15" fill="rgb(252,159,33)" fg:x="4317" fg:w="61"/><text x="4.2708%" y="1487.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (61 samples, 0.06%)</title><rect x="4.0208%" y="1461" width="0.0568%" height="15" fill="rgb(206,71,0)" fg:x="4317" fg:w="61"/><text x="4.2708%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (11 samples, 0.01%)</title><rect x="4.0673%" y="1445" width="0.0102%" height="15" fill="rgb(233,118,54)" fg:x="4367" fg:w="11"/><text x="4.3173%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="4.0673%" y="1429" width="0.0102%" height="15" fill="rgb(234,83,48)" fg:x="4367" fg:w="11"/><text x="4.3173%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.01%)</title><rect x="4.0673%" y="1413" width="0.0102%" height="15" fill="rgb(228,3,54)" fg:x="4367" fg:w="11"/><text x="4.3173%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (11 samples, 0.01%)</title><rect x="4.0673%" y="1397" width="0.0102%" height="15" fill="rgb(226,155,13)" fg:x="4367" fg:w="11"/><text x="4.3173%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (11 samples, 0.01%)</title><rect x="4.0673%" y="1381" width="0.0102%" height="15" fill="rgb(241,28,37)" fg:x="4367" fg:w="11"/><text x="4.3173%" y="1391.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (169 samples, 0.16%)</title><rect x="3.9230%" y="1541" width="0.1574%" height="15" fill="rgb(233,93,10)" fg:x="4212" fg:w="169"/><text x="4.1730%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (53 samples, 0.05%)</title><rect x="4.0850%" y="1525" width="0.0494%" height="15" fill="rgb(225,113,19)" fg:x="4386" fg:w="53"/><text x="4.3350%" y="1535.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (53 samples, 0.05%)</title><rect x="4.0850%" y="1509" width="0.0494%" height="15" fill="rgb(241,2,18)" fg:x="4386" fg:w="53"/><text x="4.3350%" y="1519.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (53 samples, 0.05%)</title><rect x="4.0850%" y="1493" width="0.0494%" height="15" fill="rgb(228,207,21)" fg:x="4386" fg:w="53"/><text x="4.3350%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="4.1465%" y="1413" width="0.0158%" height="15" fill="rgb(213,211,35)" fg:x="4452" fg:w="17"/><text x="4.3965%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.01%)</title><rect x="4.1474%" y="1397" width="0.0149%" height="15" fill="rgb(209,83,10)" fg:x="4453" fg:w="16"/><text x="4.3974%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (14 samples, 0.01%)</title><rect x="4.1493%" y="1381" width="0.0130%" height="15" fill="rgb(209,164,1)" fg:x="4455" fg:w="14"/><text x="4.3993%" y="1391.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (14 samples, 0.01%)</title><rect x="4.1493%" y="1365" width="0.0130%" height="15" fill="rgb(213,184,43)" fg:x="4455" fg:w="14"/><text x="4.3993%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.02%)</title><rect x="4.1446%" y="1445" width="0.0214%" height="15" fill="rgb(231,61,34)" fg:x="4450" fg:w="23"/><text x="4.3946%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (22 samples, 0.02%)</title><rect x="4.1456%" y="1429" width="0.0205%" height="15" fill="rgb(235,75,3)" fg:x="4451" fg:w="22"/><text x="4.3956%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="4.1660%" y="1445" width="0.0317%" height="15" fill="rgb(220,106,47)" fg:x="4473" fg:w="34"/><text x="4.4160%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.03%)</title><rect x="4.1716%" y="1429" width="0.0261%" height="15" fill="rgb(210,196,33)" fg:x="4479" fg:w="28"/><text x="4.4216%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.02%)</title><rect x="4.1782%" y="1413" width="0.0196%" height="15" fill="rgb(229,154,42)" fg:x="4486" fg:w="21"/><text x="4.4282%" y="1423.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (21 samples, 0.02%)</title><rect x="4.1782%" y="1397" width="0.0196%" height="15" fill="rgb(228,114,26)" fg:x="4486" fg:w="21"/><text x="4.4282%" y="1407.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="4.1847%" y="1381" width="0.0130%" height="15" fill="rgb(208,144,1)" fg:x="4493" fg:w="14"/><text x="4.4347%" y="1391.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (75 samples, 0.07%)</title><rect x="4.1344%" y="1525" width="0.0699%" height="15" fill="rgb(239,112,37)" fg:x="4439" fg:w="75"/><text x="4.3844%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (66 samples, 0.06%)</title><rect x="4.1428%" y="1509" width="0.0615%" height="15" fill="rgb(210,96,50)" fg:x="4448" fg:w="66"/><text x="4.3928%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (66 samples, 0.06%)</title><rect x="4.1428%" y="1493" width="0.0615%" height="15" fill="rgb(222,178,2)" fg:x="4448" fg:w="66"/><text x="4.3928%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 0.06%)</title><rect x="4.1428%" y="1477" width="0.0615%" height="15" fill="rgb(226,74,18)" fg:x="4448" fg:w="66"/><text x="4.3928%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (65 samples, 0.06%)</title><rect x="4.1437%" y="1461" width="0.0605%" height="15" fill="rgb(225,67,54)" fg:x="4449" fg:w="65"/><text x="4.3937%" y="1471.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="4.2042%" y="1525" width="0.0168%" height="15" fill="rgb(251,92,32)" fg:x="4514" fg:w="18"/><text x="4.4542%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="4.2061%" y="1509" width="0.0149%" height="15" fill="rgb(228,149,22)" fg:x="4516" fg:w="16"/><text x="4.4561%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="4.2070%" y="1493" width="0.0140%" height="15" fill="rgb(243,54,13)" fg:x="4517" fg:w="15"/><text x="4.4570%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="4.2070%" y="1477" width="0.0140%" height="15" fill="rgb(243,180,28)" fg:x="4517" fg:w="15"/><text x="4.4570%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="4.2070%" y="1461" width="0.0140%" height="15" fill="rgb(208,167,24)" fg:x="4517" fg:w="15"/><text x="4.4570%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="4.2070%" y="1445" width="0.0140%" height="15" fill="rgb(245,73,45)" fg:x="4517" fg:w="15"/><text x="4.4570%" y="1455.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="4.2098%" y="1429" width="0.0112%" height="15" fill="rgb(237,203,48)" fg:x="4520" fg:w="12"/><text x="4.4598%" y="1439.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::append_and_check (13 samples, 0.01%)</title><rect x="4.2210%" y="1525" width="0.0121%" height="15" fill="rgb(211,197,16)" fg:x="4532" fg:w="13"/><text x="4.4710%" y="1535.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.02%)</title><rect x="4.4818%" y="1333" width="0.0205%" height="15" fill="rgb(243,99,51)" fg:x="4812" fg:w="22"/><text x="4.7318%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="4.4818%" y="1317" width="0.0205%" height="15" fill="rgb(215,123,29)" fg:x="4812" fg:w="22"/><text x="4.7318%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.08%)</title><rect x="4.4715%" y="1365" width="0.0764%" height="15" fill="rgb(239,186,37)" fg:x="4801" fg:w="82"/><text x="4.7215%" y="1375.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (82 samples, 0.08%)</title><rect x="4.4715%" y="1349" width="0.0764%" height="15" fill="rgb(252,136,39)" fg:x="4801" fg:w="82"/><text x="4.7215%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (49 samples, 0.05%)</title><rect x="4.5023%" y="1333" width="0.0456%" height="15" fill="rgb(223,213,32)" fg:x="4834" fg:w="49"/><text x="4.7523%" y="1343.50"></text></g><g><title>arc_swap::debt::list::LocalNode::help (20 samples, 0.02%)</title><rect x="4.5516%" y="1365" width="0.0186%" height="15" fill="rgb(233,115,5)" fg:x="4887" fg:w="20"/><text x="4.8016%" y="1375.50"></text></g><g><title>arc_swap::debt::helping::Slots::help (20 samples, 0.02%)</title><rect x="4.5516%" y="1349" width="0.0186%" height="15" fill="rgb(207,226,44)" fg:x="4887" fg:w="20"/><text x="4.8016%" y="1359.50"></text></g><g><title>arc_swap::debt::list::Node::fast_slots (11 samples, 0.01%)</title><rect x="4.5703%" y="1365" width="0.0102%" height="15" fill="rgb(208,126,0)" fg:x="4907" fg:w="11"/><text x="4.8203%" y="1375.50"></text></g><g><title>arc_swap::debt::list::Node::helping_slot (15 samples, 0.01%)</title><rect x="4.5805%" y="1365" width="0.0140%" height="15" fill="rgb(244,66,21)" fg:x="4918" fg:w="15"/><text x="4.8305%" y="1375.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (129 samples, 0.12%)</title><rect x="4.5945%" y="1365" width="0.1201%" height="15" fill="rgb(222,97,12)" fg:x="4933" fg:w="129"/><text x="4.8445%" y="1375.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (535 samples, 0.50%)</title><rect x="4.2443%" y="1397" width="0.4983%" height="15" fill="rgb(219,213,19)" fg:x="4557" fg:w="535"/><text x="4.4943%" y="1407.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (533 samples, 0.50%)</title><rect x="4.2461%" y="1381" width="0.4964%" height="15" fill="rgb(252,169,30)" fg:x="4559" fg:w="533"/><text x="4.4961%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::debt::list::NodeReservation&gt; (30 samples, 0.03%)</title><rect x="4.7146%" y="1365" width="0.0279%" height="15" fill="rgb(206,32,51)" fg:x="5062" fg:w="30"/><text x="4.9646%" y="1375.50"></text></g><g><title>&lt;arc_swap::debt::list::NodeReservation as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="4.7146%" y="1349" width="0.0279%" height="15" fill="rgb(250,172,42)" fg:x="5062" fg:w="30"/><text x="4.9646%" y="1359.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (547 samples, 0.51%)</title><rect x="4.2378%" y="1413" width="0.5095%" height="15" fill="rgb(209,34,43)" fg:x="4550" fg:w="547"/><text x="4.4878%" y="1423.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (553 samples, 0.52%)</title><rect x="4.2331%" y="1493" width="0.5151%" height="15" fill="rgb(223,11,35)" fg:x="4545" fg:w="553"/><text x="4.4831%" y="1503.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (553 samples, 0.52%)</title><rect x="4.2331%" y="1477" width="0.5151%" height="15" fill="rgb(251,219,26)" fg:x="4545" fg:w="553"/><text x="4.4831%" y="1487.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (553 samples, 0.52%)</title><rect x="4.2331%" y="1461" width="0.5151%" height="15" fill="rgb(231,119,3)" fg:x="4545" fg:w="553"/><text x="4.4831%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (551 samples, 0.51%)</title><rect x="4.2350%" y="1445" width="0.5132%" height="15" fill="rgb(216,97,11)" fg:x="4547" fg:w="551"/><text x="4.4850%" y="1455.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (551 samples, 0.51%)</title><rect x="4.2350%" y="1429" width="0.5132%" height="15" fill="rgb(223,59,9)" fg:x="4547" fg:w="551"/><text x="4.4850%" y="1439.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (555 samples, 0.52%)</title><rect x="4.2331%" y="1509" width="0.5169%" height="15" fill="rgb(233,93,31)" fg:x="4545" fg:w="555"/><text x="4.4831%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="4.7528%" y="1317" width="0.0205%" height="15" fill="rgb(239,81,33)" fg:x="5103" fg:w="22"/><text x="5.0028%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="4.7528%" y="1301" width="0.0205%" height="15" fill="rgb(213,120,34)" fg:x="5103" fg:w="22"/><text x="5.0028%" y="1311.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="4.7547%" y="1285" width="0.0186%" height="15" fill="rgb(243,49,53)" fg:x="5105" fg:w="20"/><text x="5.0047%" y="1295.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="4.7631%" y="1269" width="0.0102%" height="15" fill="rgb(247,216,33)" fg:x="5114" fg:w="11"/><text x="5.0131%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="4.7510%" y="1413" width="0.0233%" height="15" fill="rgb(226,26,14)" fg:x="5101" fg:w="25"/><text x="5.0010%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;]&gt; (25 samples, 0.02%)</title><rect x="4.7510%" y="1397" width="0.0233%" height="15" fill="rgb(215,49,53)" fg:x="5101" fg:w="25"/><text x="5.0010%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt; (25 samples, 0.02%)</title><rect x="4.7510%" y="1381" width="0.0233%" height="15" fill="rgb(245,162,40)" fg:x="5101" fg:w="25"/><text x="5.0010%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (25 samples, 0.02%)</title><rect x="4.7510%" y="1365" width="0.0233%" height="15" fill="rgb(229,68,17)" fg:x="5101" fg:w="25"/><text x="5.0010%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (25 samples, 0.02%)</title><rect x="4.7510%" y="1349" width="0.0233%" height="15" fill="rgb(213,182,10)" fg:x="5101" fg:w="25"/><text x="5.0010%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="4.7528%" y="1333" width="0.0214%" height="15" fill="rgb(245,125,30)" fg:x="5103" fg:w="23"/><text x="5.0028%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (34 samples, 0.03%)</title><rect x="4.7500%" y="1445" width="0.0317%" height="15" fill="rgb(232,202,2)" fg:x="5100" fg:w="34"/><text x="5.0000%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt; (33 samples, 0.03%)</title><rect x="4.7510%" y="1429" width="0.0307%" height="15" fill="rgb(237,140,51)" fg:x="5101" fg:w="33"/><text x="5.0010%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt; (35 samples, 0.03%)</title><rect x="4.7500%" y="1493" width="0.0326%" height="15" fill="rgb(236,157,25)" fg:x="5100" fg:w="35"/><text x="5.0000%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt; (35 samples, 0.03%)</title><rect x="4.7500%" y="1477" width="0.0326%" height="15" fill="rgb(219,209,0)" fg:x="5100" fg:w="35"/><text x="5.0000%" y="1487.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="4.7500%" y="1461" width="0.0326%" height="15" fill="rgb(240,116,54)" fg:x="5100" fg:w="35"/><text x="5.0000%" y="1471.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 samples, 0.02%)</title><rect x="4.7919%" y="1269" width="0.0168%" height="15" fill="rgb(216,10,36)" fg:x="5145" fg:w="18"/><text x="5.0419%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionOutput&gt; (43 samples, 0.04%)</title><rect x="4.7845%" y="1413" width="0.0400%" height="15" fill="rgb(222,72,44)" fg:x="5137" fg:w="43"/><text x="5.0345%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (39 samples, 0.04%)</title><rect x="4.7882%" y="1397" width="0.0363%" height="15" fill="rgb(232,159,9)" fg:x="5141" fg:w="39"/><text x="5.0382%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (39 samples, 0.04%)</title><rect x="4.7882%" y="1381" width="0.0363%" height="15" fill="rgb(210,39,32)" fg:x="5141" fg:w="39"/><text x="5.0382%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (39 samples, 0.04%)</title><rect x="4.7882%" y="1365" width="0.0363%" height="15" fill="rgb(216,194,45)" fg:x="5141" fg:w="39"/><text x="5.0382%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (39 samples, 0.04%)</title><rect x="4.7882%" y="1349" width="0.0363%" height="15" fill="rgb(218,18,35)" fg:x="5141" fg:w="39"/><text x="5.0382%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="4.7882%" y="1333" width="0.0363%" height="15" fill="rgb(207,83,51)" fg:x="5141" fg:w="39"/><text x="5.0382%" y="1343.50"></text></g><g><title>core::mem::drop (35 samples, 0.03%)</title><rect x="4.7919%" y="1317" width="0.0326%" height="15" fill="rgb(225,63,43)" fg:x="5145" fg:w="35"/><text x="5.0419%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (35 samples, 0.03%)</title><rect x="4.7919%" y="1301" width="0.0326%" height="15" fill="rgb(207,57,36)" fg:x="5145" fg:w="35"/><text x="5.0419%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="4.7919%" y="1285" width="0.0326%" height="15" fill="rgb(216,99,33)" fg:x="5145" fg:w="35"/><text x="5.0419%" y="1295.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (17 samples, 0.02%)</title><rect x="4.8087%" y="1269" width="0.0158%" height="15" fill="rgb(225,42,16)" fg:x="5163" fg:w="17"/><text x="5.0587%" y="1279.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (17 samples, 0.02%)</title><rect x="4.8087%" y="1253" width="0.0158%" height="15" fill="rgb(220,201,45)" fg:x="5163" fg:w="17"/><text x="5.0587%" y="1263.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::store (638 samples, 0.59%)</title><rect x="4.2331%" y="1525" width="0.5942%" height="15" fill="rgb(225,33,4)" fg:x="4545" fg:w="638"/><text x="4.4831%" y="1535.50"></text></g><g><title>core::mem::drop (83 samples, 0.08%)</title><rect x="4.7500%" y="1509" width="0.0773%" height="15" fill="rgb(224,33,50)" fg:x="5100" fg:w="83"/><text x="5.0000%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt; (48 samples, 0.04%)</title><rect x="4.7826%" y="1493" width="0.0447%" height="15" fill="rgb(246,198,51)" fg:x="5135" fg:w="48"/><text x="5.0326%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt; (48 samples, 0.04%)</title><rect x="4.7826%" y="1477" width="0.0447%" height="15" fill="rgb(205,22,4)" fg:x="5135" fg:w="48"/><text x="5.0326%" y="1487.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="4.7826%" y="1461" width="0.0447%" height="15" fill="rgb(206,3,8)" fg:x="5135" fg:w="48"/><text x="5.0326%" y="1471.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (48 samples, 0.04%)</title><rect x="4.7826%" y="1445" width="0.0447%" height="15" fill="rgb(251,23,15)" fg:x="5135" fg:w="48"/><text x="5.0326%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt; (48 samples, 0.04%)</title><rect x="4.7826%" y="1429" width="0.0447%" height="15" fill="rgb(252,88,28)" fg:x="5135" fg:w="48"/><text x="5.0326%" y="1439.50"></text></g><g><title>bcs::de::Deserializer::next (17 samples, 0.02%)</title><rect x="4.9652%" y="1221" width="0.0158%" height="15" fill="rgb(212,127,14)" fg:x="5331" fg:w="17"/><text x="5.2152%" y="1231.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.01%)</title><rect x="4.9661%" y="1205" width="0.0149%" height="15" fill="rgb(247,145,37)" fg:x="5332" fg:w="16"/><text x="5.2161%" y="1215.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.01%)</title><rect x="4.9661%" y="1189" width="0.0149%" height="15" fill="rgb(209,117,53)" fg:x="5332" fg:w="16"/><text x="5.2161%" y="1199.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.01%)</title><rect x="4.9661%" y="1173" width="0.0149%" height="15" fill="rgb(212,90,42)" fg:x="5332" fg:w="16"/><text x="5.2161%" y="1183.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.01%)</title><rect x="4.9661%" y="1157" width="0.0149%" height="15" fill="rgb(218,164,37)" fg:x="5332" fg:w="16"/><text x="5.2161%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (16 samples, 0.01%)</title><rect x="4.9661%" y="1141" width="0.0149%" height="15" fill="rgb(246,65,34)" fg:x="5332" fg:w="16"/><text x="5.2161%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (16 samples, 0.01%)</title><rect x="4.9661%" y="1125" width="0.0149%" height="15" fill="rgb(231,100,33)" fg:x="5332" fg:w="16"/><text x="5.2161%" y="1135.50"></text></g><g><title>serde::de::EnumAccess::variant (40 samples, 0.04%)</title><rect x="4.9512%" y="1269" width="0.0373%" height="15" fill="rgb(228,126,14)" fg:x="5316" fg:w="40"/><text x="5.2012%" y="1279.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::EnumAccess&gt;::variant_seed (40 samples, 0.04%)</title><rect x="4.9512%" y="1253" width="0.0373%" height="15" fill="rgb(215,173,21)" fg:x="5316" fg:w="40"/><text x="5.2012%" y="1263.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (35 samples, 0.03%)</title><rect x="4.9559%" y="1237" width="0.0326%" height="15" fill="rgb(210,6,40)" fg:x="5321" fg:w="35"/><text x="5.2059%" y="1247.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::is_human_readable (11 samples, 0.01%)</title><rect x="5.0415%" y="1109" width="0.0102%" height="15" fill="rgb(212,48,18)" fg:x="5413" fg:w="11"/><text x="5.2915%" y="1119.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::convert::From&lt;[u8: _]&gt;&gt;::from (12 samples, 0.01%)</title><rect x="5.0536%" y="1109" width="0.0112%" height="15" fill="rgb(230,214,11)" fg:x="5426" fg:w="12"/><text x="5.3036%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.02%)</title><rect x="5.2036%" y="933" width="0.0186%" height="15" fill="rgb(254,105,39)" fg:x="5587" fg:w="20"/><text x="5.4536%" y="943.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (293 samples, 0.27%)</title><rect x="5.1105%" y="1029" width="0.2729%" height="15" fill="rgb(245,158,5)" fg:x="5487" fg:w="293"/><text x="5.3605%" y="1039.50"></text></g><g><title>serde::de::SeqAccess::next_element (206 samples, 0.19%)</title><rect x="5.1915%" y="1013" width="0.1919%" height="15" fill="rgb(249,208,11)" fg:x="5574" fg:w="206"/><text x="5.4415%" y="1023.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (206 samples, 0.19%)</title><rect x="5.1915%" y="997" width="0.1919%" height="15" fill="rgb(210,39,28)" fg:x="5574" fg:w="206"/><text x="5.4415%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (205 samples, 0.19%)</title><rect x="5.1924%" y="981" width="0.1909%" height="15" fill="rgb(211,56,53)" fg:x="5575" fg:w="205"/><text x="5.4424%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (205 samples, 0.19%)</title><rect x="5.1924%" y="965" width="0.1909%" height="15" fill="rgb(226,201,30)" fg:x="5575" fg:w="205"/><text x="5.4424%" y="975.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (205 samples, 0.19%)</title><rect x="5.1924%" y="949" width="0.1909%" height="15" fill="rgb(239,101,34)" fg:x="5575" fg:w="205"/><text x="5.4424%" y="959.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (173 samples, 0.16%)</title><rect x="5.2222%" y="933" width="0.1611%" height="15" fill="rgb(226,209,5)" fg:x="5607" fg:w="173"/><text x="5.4722%" y="943.50"></text></g><g><title>bcs::de::Deserializer::next (85 samples, 0.08%)</title><rect x="5.3042%" y="917" width="0.0792%" height="15" fill="rgb(250,105,47)" fg:x="5695" fg:w="85"/><text x="5.5542%" y="927.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (74 samples, 0.07%)</title><rect x="5.3144%" y="901" width="0.0689%" height="15" fill="rgb(230,72,3)" fg:x="5706" fg:w="74"/><text x="5.5644%" y="911.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (74 samples, 0.07%)</title><rect x="5.3144%" y="885" width="0.0689%" height="15" fill="rgb(232,218,39)" fg:x="5706" fg:w="74"/><text x="5.5644%" y="895.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (74 samples, 0.07%)</title><rect x="5.3144%" y="869" width="0.0689%" height="15" fill="rgb(248,166,6)" fg:x="5706" fg:w="74"/><text x="5.5644%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (74 samples, 0.07%)</title><rect x="5.3144%" y="853" width="0.0689%" height="15" fill="rgb(247,89,20)" fg:x="5706" fg:w="74"/><text x="5.5644%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (74 samples, 0.07%)</title><rect x="5.3144%" y="837" width="0.0689%" height="15" fill="rgb(248,130,54)" fg:x="5706" fg:w="74"/><text x="5.5644%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (74 samples, 0.07%)</title><rect x="5.3144%" y="821" width="0.0689%" height="15" fill="rgb(234,196,4)" fg:x="5706" fg:w="74"/><text x="5.5644%" y="831.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (322 samples, 0.30%)</title><rect x="5.0844%" y="1077" width="0.2999%" height="15" fill="rgb(250,143,31)" fg:x="5459" fg:w="322"/><text x="5.3344%" y="1087.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (303 samples, 0.28%)</title><rect x="5.1021%" y="1061" width="0.2822%" height="15" fill="rgb(211,110,34)" fg:x="5478" fg:w="303"/><text x="5.3521%" y="1071.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (303 samples, 0.28%)</title><rect x="5.1021%" y="1045" width="0.2822%" height="15" fill="rgb(215,124,48)" fg:x="5478" fg:w="303"/><text x="5.3521%" y="1055.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (404 samples, 0.38%)</title><rect x="5.0155%" y="1125" width="0.3763%" height="15" fill="rgb(216,46,13)" fg:x="5385" fg:w="404"/><text x="5.2655%" y="1135.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (351 samples, 0.33%)</title><rect x="5.0648%" y="1109" width="0.3269%" height="15" fill="rgb(205,184,25)" fg:x="5438" fg:w="351"/><text x="5.3148%" y="1119.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (351 samples, 0.33%)</title><rect x="5.0648%" y="1093" width="0.3269%" height="15" fill="rgb(228,1,10)" fg:x="5438" fg:w="351"/><text x="5.3148%" y="1103.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (19 samples, 0.02%)</title><rect x="5.4709%" y="1061" width="0.0177%" height="15" fill="rgb(213,116,27)" fg:x="5874" fg:w="19"/><text x="5.7209%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.02%)</title><rect x="5.4728%" y="1045" width="0.0158%" height="15" fill="rgb(241,95,50)" fg:x="5876" fg:w="17"/><text x="5.7228%" y="1055.50"></text></g><g><title>alloc::string::String::into_boxed_str (17 samples, 0.02%)</title><rect x="5.4728%" y="1029" width="0.0158%" height="15" fill="rgb(238,48,32)" fg:x="5876" fg:w="17"/><text x="5.7228%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (15 samples, 0.01%)</title><rect x="5.4746%" y="1013" width="0.0140%" height="15" fill="rgb(235,113,49)" fg:x="5878" fg:w="15"/><text x="5.7246%" y="1023.50"></text></g><g><title>bcs::de::Deserializer::parse_length (11 samples, 0.01%)</title><rect x="5.5054%" y="981" width="0.0102%" height="15" fill="rgb(205,127,43)" fg:x="5911" fg:w="11"/><text x="5.7554%" y="991.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (14 samples, 0.01%)</title><rect x="5.5035%" y="997" width="0.0130%" height="15" fill="rgb(250,162,2)" fg:x="5909" fg:w="14"/><text x="5.7535%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (41 samples, 0.04%)</title><rect x="5.5165%" y="997" width="0.0382%" height="15" fill="rgb(220,13,41)" fg:x="5923" fg:w="41"/><text x="5.7665%" y="1007.50"></text></g><g><title>bcs::de::Deserializer::parse_string (116 samples, 0.11%)</title><rect x="5.4942%" y="1013" width="0.1080%" height="15" fill="rgb(249,221,25)" fg:x="5899" fg:w="116"/><text x="5.7442%" y="1023.50"></text></g><g><title>core::str::converts::from_utf8 (51 samples, 0.05%)</title><rect x="5.5547%" y="997" width="0.0475%" height="15" fill="rgb(215,208,19)" fg:x="5964" fg:w="51"/><text x="5.8047%" y="1007.50"></text></g><g><title>core::str::validations::run_utf8_validation (41 samples, 0.04%)</title><rect x="5.5640%" y="981" width="0.0382%" height="15" fill="rgb(236,175,2)" fg:x="5974" fg:w="41"/><text x="5.8140%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="5.6022%" y="885" width="0.0298%" height="15" fill="rgb(241,52,2)" fg:x="6015" fg:w="32"/><text x="5.8522%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="5.6022%" y="869" width="0.0298%" height="15" fill="rgb(248,140,14)" fg:x="6015" fg:w="32"/><text x="5.8522%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.03%)</title><rect x="5.6022%" y="853" width="0.0298%" height="15" fill="rgb(253,22,42)" fg:x="6015" fg:w="32"/><text x="5.8522%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.03%)</title><rect x="5.6060%" y="837" width="0.0261%" height="15" fill="rgb(234,61,47)" fg:x="6019" fg:w="28"/><text x="5.8560%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.03%)</title><rect x="5.6060%" y="821" width="0.0261%" height="15" fill="rgb(208,226,15)" fg:x="6019" fg:w="28"/><text x="5.8560%" y="831.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.03%)</title><rect x="5.6060%" y="805" width="0.0261%" height="15" fill="rgb(217,221,4)" fg:x="6019" fg:w="28"/><text x="5.8560%" y="815.50"></text></g><g><title>malloc (23 samples, 0.02%)</title><rect x="5.6106%" y="789" width="0.0214%" height="15" fill="rgb(212,174,34)" fg:x="6024" fg:w="23"/><text x="5.8606%" y="799.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (243 samples, 0.23%)</title><rect x="5.4234%" y="1093" width="0.2263%" height="15" fill="rgb(253,83,4)" fg:x="5823" fg:w="243"/><text x="5.6734%" y="1103.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (209 samples, 0.19%)</title><rect x="5.4551%" y="1077" width="0.1947%" height="15" fill="rgb(250,195,49)" fg:x="5857" fg:w="209"/><text x="5.7051%" y="1087.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (173 samples, 0.16%)</title><rect x="5.4886%" y="1061" width="0.1611%" height="15" fill="rgb(241,192,25)" fg:x="5893" fg:w="173"/><text x="5.7386%" y="1071.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (173 samples, 0.16%)</title><rect x="5.4886%" y="1045" width="0.1611%" height="15" fill="rgb(208,124,10)" fg:x="5893" fg:w="173"/><text x="5.7386%" y="1055.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (173 samples, 0.16%)</title><rect x="5.4886%" y="1029" width="0.1611%" height="15" fill="rgb(222,33,0)" fg:x="5893" fg:w="173"/><text x="5.7386%" y="1039.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (51 samples, 0.05%)</title><rect x="5.6022%" y="1013" width="0.0475%" height="15" fill="rgb(234,209,28)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="1023.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (51 samples, 0.05%)</title><rect x="5.6022%" y="997" width="0.0475%" height="15" fill="rgb(224,11,23)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (51 samples, 0.05%)</title><rect x="5.6022%" y="981" width="0.0475%" height="15" fill="rgb(232,99,1)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (51 samples, 0.05%)</title><rect x="5.6022%" y="965" width="0.0475%" height="15" fill="rgb(237,95,45)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (51 samples, 0.05%)</title><rect x="5.6022%" y="949" width="0.0475%" height="15" fill="rgb(208,109,11)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51 samples, 0.05%)</title><rect x="5.6022%" y="933" width="0.0475%" height="15" fill="rgb(216,190,48)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (51 samples, 0.05%)</title><rect x="5.6022%" y="917" width="0.0475%" height="15" fill="rgb(251,171,36)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (51 samples, 0.05%)</title><rect x="5.6022%" y="901" width="0.0475%" height="15" fill="rgb(230,62,22)" fg:x="6015" fg:w="51"/><text x="5.8522%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.02%)</title><rect x="5.6320%" y="885" width="0.0177%" height="15" fill="rgb(225,114,35)" fg:x="6047" fg:w="19"/><text x="5.8820%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="5.6320%" y="869" width="0.0177%" height="15" fill="rgb(215,118,42)" fg:x="6047" fg:w="19"/><text x="5.8820%" y="879.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="5.6330%" y="853" width="0.0168%" height="15" fill="rgb(243,119,21)" fg:x="6048" fg:w="18"/><text x="5.8830%" y="863.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (289 samples, 0.27%)</title><rect x="5.3917%" y="1125" width="0.2692%" height="15" fill="rgb(252,177,53)" fg:x="5789" fg:w="289"/><text x="5.6417%" y="1135.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (289 samples, 0.27%)</title><rect x="5.3917%" y="1109" width="0.2692%" height="15" fill="rgb(237,209,29)" fg:x="5789" fg:w="289"/><text x="5.6417%" y="1119.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (54 samples, 0.05%)</title><rect x="5.7894%" y="741" width="0.0503%" height="15" fill="rgb(212,65,23)" fg:x="6216" fg:w="54"/><text x="6.0394%" y="751.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (50 samples, 0.05%)</title><rect x="5.7932%" y="725" width="0.0466%" height="15" fill="rgb(230,222,46)" fg:x="6220" fg:w="50"/><text x="6.0432%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (50 samples, 0.05%)</title><rect x="5.7932%" y="709" width="0.0466%" height="15" fill="rgb(215,135,32)" fg:x="6220" fg:w="50"/><text x="6.0432%" y="719.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (50 samples, 0.05%)</title><rect x="5.7932%" y="693" width="0.0466%" height="15" fill="rgb(246,101,22)" fg:x="6220" fg:w="50"/><text x="6.0432%" y="703.50"></text></g><g><title>serde::de::SeqAccess::next_element (34 samples, 0.03%)</title><rect x="5.8081%" y="677" width="0.0317%" height="15" fill="rgb(206,107,13)" fg:x="6236" fg:w="34"/><text x="6.0581%" y="687.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (34 samples, 0.03%)</title><rect x="5.8081%" y="661" width="0.0317%" height="15" fill="rgb(250,100,44)" fg:x="6236" fg:w="34"/><text x="6.0581%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (34 samples, 0.03%)</title><rect x="5.8081%" y="645" width="0.0317%" height="15" fill="rgb(231,147,38)" fg:x="6236" fg:w="34"/><text x="6.0581%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (34 samples, 0.03%)</title><rect x="5.8081%" y="629" width="0.0317%" height="15" fill="rgb(229,8,40)" fg:x="6236" fg:w="34"/><text x="6.0581%" y="639.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (34 samples, 0.03%)</title><rect x="5.8081%" y="613" width="0.0317%" height="15" fill="rgb(221,135,30)" fg:x="6236" fg:w="34"/><text x="6.0581%" y="623.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (28 samples, 0.03%)</title><rect x="5.8137%" y="597" width="0.0261%" height="15" fill="rgb(249,193,18)" fg:x="6242" fg:w="28"/><text x="6.0637%" y="607.50"></text></g><g><title>bcs::de::Deserializer::next (12 samples, 0.01%)</title><rect x="5.8286%" y="581" width="0.0112%" height="15" fill="rgb(209,133,39)" fg:x="6258" fg:w="12"/><text x="6.0786%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.01%)</title><rect x="5.8295%" y="565" width="0.0102%" height="15" fill="rgb(232,100,14)" fg:x="6259" fg:w="11"/><text x="6.0795%" y="575.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.01%)</title><rect x="5.8295%" y="549" width="0.0102%" height="15" fill="rgb(224,185,1)" fg:x="6259" fg:w="11"/><text x="6.0795%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="5.8295%" y="533" width="0.0102%" height="15" fill="rgb(223,139,8)" fg:x="6259" fg:w="11"/><text x="6.0795%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="5.8295%" y="517" width="0.0102%" height="15" fill="rgb(232,213,38)" fg:x="6259" fg:w="11"/><text x="6.0795%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.01%)</title><rect x="5.8295%" y="501" width="0.0102%" height="15" fill="rgb(207,94,22)" fg:x="6259" fg:w="11"/><text x="6.0795%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (11 samples, 0.01%)</title><rect x="5.8295%" y="485" width="0.0102%" height="15" fill="rgb(219,183,54)" fg:x="6259" fg:w="11"/><text x="6.0795%" y="495.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (75 samples, 0.07%)</title><rect x="5.7708%" y="789" width="0.0699%" height="15" fill="rgb(216,185,54)" fg:x="6196" fg:w="75"/><text x="6.0208%" y="799.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (57 samples, 0.05%)</title><rect x="5.7876%" y="773" width="0.0531%" height="15" fill="rgb(254,217,39)" fg:x="6214" fg:w="57"/><text x="6.0376%" y="783.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (57 samples, 0.05%)</title><rect x="5.7876%" y="757" width="0.0531%" height="15" fill="rgb(240,178,23)" fg:x="6214" fg:w="57"/><text x="6.0376%" y="767.50"></text></g><g><title>bcs::de::Deserializer::parse_string (12 samples, 0.01%)</title><rect x="5.8574%" y="677" width="0.0112%" height="15" fill="rgb(218,11,47)" fg:x="6289" fg:w="12"/><text x="6.1074%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="5.8686%" y="549" width="0.0140%" height="15" fill="rgb(218,51,51)" fg:x="6301" fg:w="15"/><text x="6.1186%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="5.8686%" y="533" width="0.0140%" height="15" fill="rgb(238,126,27)" fg:x="6301" fg:w="15"/><text x="6.1186%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="5.8686%" y="517" width="0.0140%" height="15" fill="rgb(249,202,22)" fg:x="6301" fg:w="15"/><text x="6.1186%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="5.8695%" y="501" width="0.0130%" height="15" fill="rgb(254,195,49)" fg:x="6302" fg:w="14"/><text x="6.1195%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="5.8695%" y="485" width="0.0130%" height="15" fill="rgb(208,123,14)" fg:x="6302" fg:w="14"/><text x="6.1195%" y="495.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="5.8695%" y="469" width="0.0130%" height="15" fill="rgb(224,200,8)" fg:x="6302" fg:w="14"/><text x="6.1195%" y="479.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="5.8705%" y="453" width="0.0121%" height="15" fill="rgb(217,61,36)" fg:x="6303" fg:w="13"/><text x="6.1205%" y="463.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (41 samples, 0.04%)</title><rect x="5.8462%" y="757" width="0.0382%" height="15" fill="rgb(206,35,45)" fg:x="6277" fg:w="41"/><text x="6.0962%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (34 samples, 0.03%)</title><rect x="5.8528%" y="741" width="0.0317%" height="15" fill="rgb(217,65,33)" fg:x="6284" fg:w="34"/><text x="6.1028%" y="751.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (30 samples, 0.03%)</title><rect x="5.8565%" y="725" width="0.0279%" height="15" fill="rgb(222,158,48)" fg:x="6288" fg:w="30"/><text x="6.1065%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (30 samples, 0.03%)</title><rect x="5.8565%" y="709" width="0.0279%" height="15" fill="rgb(254,2,54)" fg:x="6288" fg:w="30"/><text x="6.1065%" y="719.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (30 samples, 0.03%)</title><rect x="5.8565%" y="693" width="0.0279%" height="15" fill="rgb(250,143,38)" fg:x="6288" fg:w="30"/><text x="6.1065%" y="703.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (17 samples, 0.02%)</title><rect x="5.8686%" y="677" width="0.0158%" height="15" fill="rgb(248,25,0)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="687.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (17 samples, 0.02%)</title><rect x="5.8686%" y="661" width="0.0158%" height="15" fill="rgb(206,152,27)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="671.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (17 samples, 0.02%)</title><rect x="5.8686%" y="645" width="0.0158%" height="15" fill="rgb(240,77,30)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (17 samples, 0.02%)</title><rect x="5.8686%" y="629" width="0.0158%" height="15" fill="rgb(231,5,3)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="5.8686%" y="613" width="0.0158%" height="15" fill="rgb(207,226,32)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="5.8686%" y="597" width="0.0158%" height="15" fill="rgb(222,207,47)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="5.8686%" y="581" width="0.0158%" height="15" fill="rgb(229,115,45)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="5.8686%" y="565" width="0.0158%" height="15" fill="rgb(224,191,6)" fg:x="6301" fg:w="17"/><text x="6.1186%" y="575.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (48 samples, 0.04%)</title><rect x="5.8407%" y="789" width="0.0447%" height="15" fill="rgb(230,227,24)" fg:x="6271" fg:w="48"/><text x="6.0907%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (48 samples, 0.04%)</title><rect x="5.8407%" y="773" width="0.0447%" height="15" fill="rgb(228,80,19)" fg:x="6271" fg:w="48"/><text x="6.0907%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (134 samples, 0.12%)</title><rect x="5.7708%" y="805" width="0.1248%" height="15" fill="rgb(247,229,0)" fg:x="6196" fg:w="134"/><text x="6.0208%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (11 samples, 0.01%)</title><rect x="5.8854%" y="789" width="0.0102%" height="15" fill="rgb(237,194,15)" fg:x="6319" fg:w="11"/><text x="6.1354%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (11 samples, 0.01%)</title><rect x="5.8854%" y="773" width="0.0102%" height="15" fill="rgb(219,203,20)" fg:x="6319" fg:w="11"/><text x="6.1354%" y="783.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (141 samples, 0.13%)</title><rect x="5.7680%" y="853" width="0.1313%" height="15" fill="rgb(234,128,8)" fg:x="6193" fg:w="141"/><text x="6.0180%" y="863.50"></text></g><g><title>serde::de::SeqAccess::next_element (139 samples, 0.13%)</title><rect x="5.7699%" y="837" width="0.1295%" height="15" fill="rgb(248,202,8)" fg:x="6195" fg:w="139"/><text x="6.0199%" y="847.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (139 samples, 0.13%)</title><rect x="5.7699%" y="821" width="0.1295%" height="15" fill="rgb(206,104,37)" fg:x="6195" fg:w="139"/><text x="6.0199%" y="831.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (155 samples, 0.14%)</title><rect x="5.7568%" y="901" width="0.1444%" height="15" fill="rgb(223,8,27)" fg:x="6181" fg:w="155"/><text x="6.0068%" y="911.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (147 samples, 0.14%)</title><rect x="5.7643%" y="885" width="0.1369%" height="15" fill="rgb(216,217,28)" fg:x="6189" fg:w="147"/><text x="6.0143%" y="895.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (147 samples, 0.14%)</title><rect x="5.7643%" y="869" width="0.1369%" height="15" fill="rgb(249,199,1)" fg:x="6189" fg:w="147"/><text x="6.0143%" y="879.50"></text></g><g><title>move_core_types::safe_serialize::TYPE_TAG_DEPTH::__getit (16 samples, 0.01%)</title><rect x="5.9031%" y="869" width="0.0149%" height="15" fill="rgb(240,85,17)" fg:x="6338" fg:w="16"/><text x="6.1531%" y="879.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (209 samples, 0.19%)</title><rect x="5.7242%" y="997" width="0.1947%" height="15" fill="rgb(206,108,45)" fg:x="6146" fg:w="209"/><text x="5.9742%" y="1007.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (193 samples, 0.18%)</title><rect x="5.7391%" y="981" width="0.1798%" height="15" fill="rgb(245,210,41)" fg:x="6162" fg:w="193"/><text x="5.9891%" y="991.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (193 samples, 0.18%)</title><rect x="5.7391%" y="965" width="0.1798%" height="15" fill="rgb(206,13,37)" fg:x="6162" fg:w="193"/><text x="5.9891%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (193 samples, 0.18%)</title><rect x="5.7391%" y="949" width="0.1798%" height="15" fill="rgb(250,61,18)" fg:x="6162" fg:w="193"/><text x="5.9891%" y="959.50"></text></g><g><title>&lt;&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum::__DeserializeWith as serde::de::Deserialize&gt;::deserialize (193 samples, 0.18%)</title><rect x="5.7391%" y="933" width="0.1798%" height="15" fill="rgb(235,172,48)" fg:x="6162" fg:w="193"/><text x="5.9891%" y="943.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_deserialize (186 samples, 0.17%)</title><rect x="5.7457%" y="917" width="0.1732%" height="15" fill="rgb(249,201,17)" fg:x="6169" fg:w="186"/><text x="5.9957%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="5.9012%" y="901" width="0.0177%" height="15" fill="rgb(219,208,6)" fg:x="6336" fg:w="19"/><text x="6.1512%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="5.9021%" y="885" width="0.0168%" height="15" fill="rgb(248,31,23)" fg:x="6337" fg:w="18"/><text x="6.1521%" y="895.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (271 samples, 0.25%)</title><rect x="5.6758%" y="1093" width="0.2524%" height="15" fill="rgb(245,15,42)" fg:x="6094" fg:w="271"/><text x="5.9258%" y="1103.50"></text></g><g><title>serde::de::SeqAccess::next_element (230 samples, 0.21%)</title><rect x="5.7140%" y="1077" width="0.2142%" height="15" fill="rgb(222,217,39)" fg:x="6135" fg:w="230"/><text x="5.9640%" y="1087.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (230 samples, 0.21%)</title><rect x="5.7140%" y="1061" width="0.2142%" height="15" fill="rgb(210,219,27)" fg:x="6135" fg:w="230"/><text x="5.9640%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (220 samples, 0.20%)</title><rect x="5.7233%" y="1045" width="0.2049%" height="15" fill="rgb(252,166,36)" fg:x="6145" fg:w="220"/><text x="5.9733%" y="1055.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize (220 samples, 0.20%)</title><rect x="5.7233%" y="1029" width="0.2049%" height="15" fill="rgb(245,132,34)" fg:x="6145" fg:w="220"/><text x="5.9733%" y="1039.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (220 samples, 0.20%)</title><rect x="5.7233%" y="1013" width="0.2049%" height="15" fill="rgb(236,54,3)" fg:x="6145" fg:w="220"/><text x="5.9733%" y="1023.50"></text></g><g><title>bcs::de::Deserializer::parse_length (11 samples, 0.01%)</title><rect x="5.9282%" y="1093" width="0.0102%" height="15" fill="rgb(241,173,43)" fg:x="6365" fg:w="11"/><text x="6.1782%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (997 samples, 0.93%)</title><rect x="5.0145%" y="1141" width="0.9286%" height="15" fill="rgb(215,190,9)" fg:x="5384" fg:w="997"/><text x="5.2645%" y="1151.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (303 samples, 0.28%)</title><rect x="5.6609%" y="1125" width="0.2822%" height="15" fill="rgb(242,101,16)" fg:x="6078" fg:w="303"/><text x="5.9109%" y="1135.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (293 samples, 0.27%)</title><rect x="5.6702%" y="1109" width="0.2729%" height="15" fill="rgb(223,190,21)" fg:x="6088" fg:w="293"/><text x="5.9202%" y="1119.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,021 samples, 0.95%)</title><rect x="5.0052%" y="1189" width="0.9509%" height="15" fill="rgb(215,228,25)" fg:x="5374" fg:w="1021"/><text x="5.2552%" y="1199.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,011 samples, 0.94%)</title><rect x="5.0145%" y="1173" width="0.9416%" height="15" fill="rgb(225,36,22)" fg:x="5384" fg:w="1011"/><text x="5.2645%" y="1183.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1,011 samples, 0.94%)</title><rect x="5.0145%" y="1157" width="0.9416%" height="15" fill="rgb(251,106,46)" fg:x="5384" fg:w="1011"/><text x="5.2645%" y="1167.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (14 samples, 0.01%)</title><rect x="5.9431%" y="1141" width="0.0130%" height="15" fill="rgb(208,90,1)" fg:x="6381" fg:w="14"/><text x="6.1931%" y="1151.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1,106 samples, 1.03%)</title><rect x="4.9400%" y="1285" width="1.0301%" height="15" fill="rgb(243,10,4)" fg:x="5304" fg:w="1106"/><text x="5.1900%" y="1295.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (1,054 samples, 0.98%)</title><rect x="4.9885%" y="1269" width="0.9817%" height="15" fill="rgb(212,137,27)" fg:x="5356" fg:w="1054"/><text x="5.2385%" y="1279.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (1,054 samples, 0.98%)</title><rect x="4.9885%" y="1253" width="0.9817%" height="15" fill="rgb(231,220,49)" fg:x="5356" fg:w="1054"/><text x="5.2385%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,054 samples, 0.98%)</title><rect x="4.9885%" y="1237" width="0.9817%" height="15" fill="rgb(237,96,20)" fg:x="5356" fg:w="1054"/><text x="5.2385%" y="1247.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (1,054 samples, 0.98%)</title><rect x="4.9885%" y="1221" width="0.9817%" height="15" fill="rgb(239,229,30)" fg:x="5356" fg:w="1054"/><text x="5.2385%" y="1231.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1,054 samples, 0.98%)</title><rect x="4.9885%" y="1205" width="0.9817%" height="15" fill="rgb(219,65,33)" fg:x="5356" fg:w="1054"/><text x="5.2385%" y="1215.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize (1,139 samples, 1.06%)</title><rect x="4.9205%" y="1317" width="1.0608%" height="15" fill="rgb(243,134,7)" fg:x="5283" fg:w="1139"/><text x="5.1705%" y="1327.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (1,139 samples, 1.06%)</title><rect x="4.9205%" y="1301" width="1.0608%" height="15" fill="rgb(216,177,54)" fg:x="5283" fg:w="1139"/><text x="5.1705%" y="1311.50"></text></g><g><title>bcs::de::from_bytes (1,188 samples, 1.11%)</title><rect x="4.8925%" y="1333" width="1.1065%" height="15" fill="rgb(211,160,20)" fg:x="5253" fg:w="1188"/><text x="5.1425%" y="1343.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (1,199 samples, 1.12%)</title><rect x="4.8869%" y="1349" width="1.1167%" height="15" fill="rgb(239,85,39)" fg:x="5247" fg:w="1199"/><text x="5.1369%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (31 samples, 0.03%)</title><rect x="6.0139%" y="1317" width="0.0289%" height="15" fill="rgb(232,125,22)" fg:x="6457" fg:w="31"/><text x="6.2639%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="6.0158%" y="1301" width="0.0270%" height="15" fill="rgb(244,57,34)" fg:x="6459" fg:w="29"/><text x="6.2658%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (25 samples, 0.02%)</title><rect x="6.0195%" y="1285" width="0.0233%" height="15" fill="rgb(214,203,32)" fg:x="6463" fg:w="25"/><text x="6.2695%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (24 samples, 0.02%)</title><rect x="6.0204%" y="1269" width="0.0224%" height="15" fill="rgb(207,58,43)" fg:x="6464" fg:w="24"/><text x="6.2704%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (16 samples, 0.01%)</title><rect x="6.0279%" y="1253" width="0.0149%" height="15" fill="rgb(215,193,15)" fg:x="6472" fg:w="16"/><text x="6.2779%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (14 samples, 0.01%)</title><rect x="6.0297%" y="1237" width="0.0130%" height="15" fill="rgb(232,15,44)" fg:x="6474" fg:w="14"/><text x="6.2797%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (13 samples, 0.01%)</title><rect x="6.0307%" y="1221" width="0.0121%" height="15" fill="rgb(212,3,48)" fg:x="6475" fg:w="13"/><text x="6.2807%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (13 samples, 0.01%)</title><rect x="6.0307%" y="1205" width="0.0121%" height="15" fill="rgb(218,128,7)" fg:x="6475" fg:w="13"/><text x="6.2807%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="6.0307%" y="1189" width="0.0121%" height="15" fill="rgb(226,216,39)" fg:x="6475" fg:w="13"/><text x="6.2807%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="6.0307%" y="1173" width="0.0121%" height="15" fill="rgb(243,47,51)" fg:x="6475" fg:w="13"/><text x="6.2807%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="6.0307%" y="1157" width="0.0121%" height="15" fill="rgb(241,183,40)" fg:x="6475" fg:w="13"/><text x="6.2807%" y="1167.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="6.0316%" y="1141" width="0.0112%" height="15" fill="rgb(231,217,32)" fg:x="6476" fg:w="12"/><text x="6.2816%" y="1151.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (1,315 samples, 1.22%)</title><rect x="4.8683%" y="1365" width="1.2248%" height="15" fill="rgb(229,61,38)" fg:x="5227" fg:w="1315"/><text x="5.1183%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (89 samples, 0.08%)</title><rect x="6.0102%" y="1349" width="0.0829%" height="15" fill="rgb(225,210,5)" fg:x="6453" fg:w="89"/><text x="6.2602%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (85 samples, 0.08%)</title><rect x="6.0139%" y="1333" width="0.0792%" height="15" fill="rgb(231,79,45)" fg:x="6457" fg:w="85"/><text x="6.2639%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (54 samples, 0.05%)</title><rect x="6.0428%" y="1317" width="0.0503%" height="15" fill="rgb(224,100,7)" fg:x="6488" fg:w="54"/><text x="6.2928%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (54 samples, 0.05%)</title><rect x="6.0428%" y="1301" width="0.0503%" height="15" fill="rgb(241,198,18)" fg:x="6488" fg:w="54"/><text x="6.2928%" y="1311.50"></text></g><g><title>alloc::alloc::box_free (54 samples, 0.05%)</title><rect x="6.0428%" y="1285" width="0.0503%" height="15" fill="rgb(252,97,53)" fg:x="6488" fg:w="54"/><text x="6.2928%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.05%)</title><rect x="6.0428%" y="1269" width="0.0503%" height="15" fill="rgb(220,88,7)" fg:x="6488" fg:w="54"/><text x="6.2928%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 0.05%)</title><rect x="6.0428%" y="1253" width="0.0503%" height="15" fill="rgb(213,176,14)" fg:x="6488" fg:w="54"/><text x="6.2928%" y="1263.50"></text></g><g><title>cfree (48 samples, 0.04%)</title><rect x="6.0484%" y="1237" width="0.0447%" height="15" fill="rgb(246,73,7)" fg:x="6494" fg:w="48"/><text x="6.2984%" y="1247.50"></text></g><g><title>[libc.so.6] (31 samples, 0.03%)</title><rect x="6.0642%" y="1221" width="0.0289%" height="15" fill="rgb(245,64,36)" fg:x="6511" fg:w="31"/><text x="6.3142%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,362 samples, 1.27%)</title><rect x="4.8348%" y="1461" width="1.2685%" height="15" fill="rgb(245,80,10)" fg:x="5191" fg:w="1362"/><text x="5.0848%" y="1471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,362 samples, 1.27%)</title><rect x="4.8348%" y="1445" width="1.2685%" height="15" fill="rgb(232,107,50)" fg:x="5191" fg:w="1362"/><text x="5.0848%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,357 samples, 1.26%)</title><rect x="4.8394%" y="1429" width="1.2639%" height="15" fill="rgb(253,3,0)" fg:x="5196" fg:w="1357"/><text x="5.0894%" y="1439.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (1,357 samples, 1.26%)</title><rect x="4.8394%" y="1413" width="1.2639%" height="15" fill="rgb(212,99,53)" fg:x="5196" fg:w="1357"/><text x="5.0894%" y="1423.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;K&gt;::module_path (1,357 samples, 1.26%)</title><rect x="4.8394%" y="1397" width="1.2639%" height="15" fill="rgb(249,111,54)" fg:x="5196" fg:w="1357"/><text x="5.0894%" y="1407.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (1,354 samples, 1.26%)</title><rect x="4.8422%" y="1381" width="1.2611%" height="15" fill="rgb(249,55,30)" fg:x="5199" fg:w="1354"/><text x="5.0922%" y="1391.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::inner (11 samples, 0.01%)</title><rect x="6.0931%" y="1365" width="0.0102%" height="15" fill="rgb(237,47,42)" fg:x="6542" fg:w="11"/><text x="6.3431%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,371 samples, 1.28%)</title><rect x="4.8283%" y="1493" width="1.2769%" height="15" fill="rgb(211,20,18)" fg:x="5184" fg:w="1371"/><text x="5.0783%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,364 samples, 1.27%)</title><rect x="4.8348%" y="1477" width="1.2704%" height="15" fill="rgb(231,203,46)" fg:x="5191" fg:w="1364"/><text x="5.0848%" y="1487.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (25 samples, 0.02%)</title><rect x="6.1350%" y="1013" width="0.0233%" height="15" fill="rgb(237,142,3)" fg:x="6587" fg:w="25"/><text x="6.3850%" y="1023.50"></text></g><g><title>serde::de::SeqAccess::next_element (19 samples, 0.02%)</title><rect x="6.1406%" y="997" width="0.0177%" height="15" fill="rgb(241,107,1)" fg:x="6593" fg:w="19"/><text x="6.3906%" y="1007.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (19 samples, 0.02%)</title><rect x="6.1406%" y="981" width="0.0177%" height="15" fill="rgb(229,83,13)" fg:x="6593" fg:w="19"/><text x="6.3906%" y="991.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.02%)</title><rect x="6.1415%" y="965" width="0.0168%" height="15" fill="rgb(241,91,40)" fg:x="6594" fg:w="18"/><text x="6.3915%" y="975.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (18 samples, 0.02%)</title><rect x="6.1415%" y="949" width="0.0168%" height="15" fill="rgb(225,3,45)" fg:x="6594" fg:w="18"/><text x="6.3915%" y="959.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (18 samples, 0.02%)</title><rect x="6.1415%" y="933" width="0.0168%" height="15" fill="rgb(244,223,14)" fg:x="6594" fg:w="18"/><text x="6.3915%" y="943.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (15 samples, 0.01%)</title><rect x="6.1443%" y="917" width="0.0140%" height="15" fill="rgb(224,124,37)" fg:x="6597" fg:w="15"/><text x="6.3943%" y="927.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (27 samples, 0.03%)</title><rect x="6.1340%" y="1061" width="0.0251%" height="15" fill="rgb(251,171,30)" fg:x="6586" fg:w="27"/><text x="6.3840%" y="1071.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (26 samples, 0.02%)</title><rect x="6.1350%" y="1045" width="0.0242%" height="15" fill="rgb(236,46,54)" fg:x="6587" fg:w="26"/><text x="6.3850%" y="1055.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (26 samples, 0.02%)</title><rect x="6.1350%" y="1029" width="0.0242%" height="15" fill="rgb(245,213,5)" fg:x="6587" fg:w="26"/><text x="6.3850%" y="1039.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (32 samples, 0.03%)</title><rect x="6.1303%" y="1109" width="0.0298%" height="15" fill="rgb(230,144,27)" fg:x="6582" fg:w="32"/><text x="6.3803%" y="1119.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (28 samples, 0.03%)</title><rect x="6.1340%" y="1093" width="0.0261%" height="15" fill="rgb(220,86,6)" fg:x="6586" fg:w="28"/><text x="6.3840%" y="1103.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (28 samples, 0.03%)</title><rect x="6.1340%" y="1077" width="0.0261%" height="15" fill="rgb(240,20,13)" fg:x="6586" fg:w="28"/><text x="6.3840%" y="1087.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (31 samples, 0.03%)</title><rect x="6.1601%" y="1109" width="0.0289%" height="15" fill="rgb(217,89,34)" fg:x="6614" fg:w="31"/><text x="6.4101%" y="1119.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (31 samples, 0.03%)</title><rect x="6.1601%" y="1093" width="0.0289%" height="15" fill="rgb(229,13,5)" fg:x="6614" fg:w="31"/><text x="6.4101%" y="1103.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (24 samples, 0.02%)</title><rect x="6.1666%" y="1077" width="0.0224%" height="15" fill="rgb(244,67,35)" fg:x="6621" fg:w="24"/><text x="6.4166%" y="1087.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (16 samples, 0.01%)</title><rect x="6.1741%" y="1061" width="0.0149%" height="15" fill="rgb(221,40,2)" fg:x="6629" fg:w="16"/><text x="6.4241%" y="1071.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (13 samples, 0.01%)</title><rect x="6.1769%" y="1045" width="0.0121%" height="15" fill="rgb(237,157,21)" fg:x="6632" fg:w="13"/><text x="6.4269%" y="1055.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (13 samples, 0.01%)</title><rect x="6.1769%" y="1029" width="0.0121%" height="15" fill="rgb(222,94,11)" fg:x="6632" fg:w="13"/><text x="6.4269%" y="1039.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (13 samples, 0.01%)</title><rect x="6.1769%" y="1013" width="0.0121%" height="15" fill="rgb(249,113,6)" fg:x="6632" fg:w="13"/><text x="6.4269%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (68 samples, 0.06%)</title><rect x="6.1303%" y="1125" width="0.0633%" height="15" fill="rgb(238,137,36)" fg:x="6582" fg:w="68"/><text x="6.3803%" y="1135.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (70 samples, 0.07%)</title><rect x="6.1294%" y="1173" width="0.0652%" height="15" fill="rgb(210,102,26)" fg:x="6581" fg:w="70"/><text x="6.3794%" y="1183.50"></text></g><g><title>serde::de::SeqAccess::next_element (69 samples, 0.06%)</title><rect x="6.1303%" y="1157" width="0.0643%" height="15" fill="rgb(218,30,30)" fg:x="6582" fg:w="69"/><text x="6.3803%" y="1167.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (69 samples, 0.06%)</title><rect x="6.1303%" y="1141" width="0.0643%" height="15" fill="rgb(214,67,26)" fg:x="6582" fg:w="69"/><text x="6.3803%" y="1151.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize (79 samples, 0.07%)</title><rect x="6.1219%" y="1301" width="0.0736%" height="15" fill="rgb(251,9,53)" fg:x="6573" fg:w="79"/><text x="6.3719%" y="1311.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (79 samples, 0.07%)</title><rect x="6.1219%" y="1285" width="0.0736%" height="15" fill="rgb(228,204,25)" fg:x="6573" fg:w="79"/><text x="6.3719%" y="1295.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (76 samples, 0.07%)</title><rect x="6.1247%" y="1269" width="0.0708%" height="15" fill="rgb(207,153,8)" fg:x="6576" fg:w="76"/><text x="6.3747%" y="1279.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (74 samples, 0.07%)</title><rect x="6.1266%" y="1253" width="0.0689%" height="15" fill="rgb(242,9,16)" fg:x="6578" fg:w="74"/><text x="6.3766%" y="1263.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (74 samples, 0.07%)</title><rect x="6.1266%" y="1237" width="0.0689%" height="15" fill="rgb(217,211,10)" fg:x="6578" fg:w="74"/><text x="6.3766%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (74 samples, 0.07%)</title><rect x="6.1266%" y="1221" width="0.0689%" height="15" fill="rgb(219,228,52)" fg:x="6578" fg:w="74"/><text x="6.3766%" y="1231.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (74 samples, 0.07%)</title><rect x="6.1266%" y="1205" width="0.0689%" height="15" fill="rgb(231,92,29)" fg:x="6578" fg:w="74"/><text x="6.3766%" y="1215.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (74 samples, 0.07%)</title><rect x="6.1266%" y="1189" width="0.0689%" height="15" fill="rgb(232,8,23)" fg:x="6578" fg:w="74"/><text x="6.3766%" y="1199.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (84 samples, 0.08%)</title><rect x="6.1201%" y="1333" width="0.0782%" height="15" fill="rgb(216,211,34)" fg:x="6571" fg:w="84"/><text x="6.3701%" y="1343.50"></text></g><g><title>bcs::de::from_bytes (84 samples, 0.08%)</title><rect x="6.1201%" y="1317" width="0.0782%" height="15" fill="rgb(236,151,0)" fg:x="6571" fg:w="84"/><text x="6.3701%" y="1327.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (88 samples, 0.08%)</title><rect x="6.1201%" y="1349" width="0.0820%" height="15" fill="rgb(209,168,3)" fg:x="6571" fg:w="88"/><text x="6.3701%" y="1359.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (92 samples, 0.09%)</title><rect x="6.1173%" y="1365" width="0.0857%" height="15" fill="rgb(208,129,28)" fg:x="6568" fg:w="92"/><text x="6.3673%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 0.12%)</title><rect x="6.1070%" y="1461" width="0.1201%" height="15" fill="rgb(229,78,22)" fg:x="6557" fg:w="129"/><text x="6.3570%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (129 samples, 0.12%)</title><rect x="6.1070%" y="1445" width="0.1201%" height="15" fill="rgb(228,187,13)" fg:x="6557" fg:w="129"/><text x="6.3570%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (129 samples, 0.12%)</title><rect x="6.1070%" y="1429" width="0.1201%" height="15" fill="rgb(240,119,24)" fg:x="6557" fg:w="129"/><text x="6.3570%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (129 samples, 0.12%)</title><rect x="6.1070%" y="1413" width="0.1201%" height="15" fill="rgb(209,194,42)" fg:x="6557" fg:w="129"/><text x="6.3570%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (127 samples, 0.12%)</title><rect x="6.1089%" y="1397" width="0.1183%" height="15" fill="rgb(247,200,46)" fg:x="6559" fg:w="127"/><text x="6.3589%" y="1407.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (119 samples, 0.11%)</title><rect x="6.1163%" y="1381" width="0.1108%" height="15" fill="rgb(218,76,16)" fg:x="6567" fg:w="119"/><text x="6.3663%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (16 samples, 0.01%)</title><rect x="6.2123%" y="1365" width="0.0149%" height="15" fill="rgb(225,21,48)" fg:x="6670" fg:w="16"/><text x="6.4623%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="6.2123%" y="1349" width="0.0149%" height="15" fill="rgb(239,223,50)" fg:x="6670" fg:w="16"/><text x="6.4623%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="6.2132%" y="1333" width="0.0140%" height="15" fill="rgb(244,45,21)" fg:x="6671" fg:w="15"/><text x="6.4632%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="6.2132%" y="1317" width="0.0140%" height="15" fill="rgb(232,33,43)" fg:x="6671" fg:w="15"/><text x="6.4632%" y="1327.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="6.2160%" y="1301" width="0.0112%" height="15" fill="rgb(209,8,3)" fg:x="6674" fg:w="12"/><text x="6.4660%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,506 samples, 1.40%)</title><rect x="4.8273%" y="1525" width="1.4027%" height="15" fill="rgb(214,25,53)" fg:x="5183" fg:w="1506"/><text x="5.0773%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,506 samples, 1.40%)</title><rect x="4.8273%" y="1509" width="1.4027%" height="15" fill="rgb(254,186,54)" fg:x="5183" fg:w="1506"/><text x="5.0773%" y="1519.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (134 samples, 0.12%)</title><rect x="6.1052%" y="1493" width="0.1248%" height="15" fill="rgb(208,174,49)" fg:x="6555" fg:w="134"/><text x="6.3552%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (132 samples, 0.12%)</title><rect x="6.1070%" y="1477" width="0.1229%" height="15" fill="rgb(233,191,51)" fg:x="6557" fg:w="132"/><text x="6.3570%" y="1487.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record (2,313 samples, 2.15%)</title><rect x="4.0804%" y="1541" width="2.1543%" height="15" fill="rgb(222,134,10)" fg:x="4381" fg:w="2313"/><text x="4.3304%" y="1551.50">a..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="6.2551%" y="1525" width="0.0140%" height="15" fill="rgb(230,226,20)" fg:x="6716" fg:w="15"/><text x="6.5051%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="6.2570%" y="1509" width="0.0121%" height="15" fill="rgb(251,111,25)" fg:x="6718" fg:w="13"/><text x="6.5070%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="6.2570%" y="1493" width="0.0121%" height="15" fill="rgb(224,40,46)" fg:x="6718" fg:w="13"/><text x="6.5070%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="6.2570%" y="1477" width="0.0121%" height="15" fill="rgb(236,108,47)" fg:x="6718" fg:w="13"/><text x="6.5070%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="6.2570%" y="1461" width="0.0121%" height="15" fill="rgb(234,93,0)" fg:x="6718" fg:w="13"/><text x="6.5070%" y="1471.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Add&gt;::add (12 samples, 0.01%)</title><rect x="6.2691%" y="1525" width="0.0112%" height="15" fill="rgb(224,213,32)" fg:x="6731" fg:w="12"/><text x="6.5191%" y="1535.50"></text></g><g><title>core::time::Duration::checked_add (11 samples, 0.01%)</title><rect x="6.2700%" y="1509" width="0.0102%" height="15" fill="rgb(251,11,48)" fg:x="6732" fg:w="11"/><text x="6.5200%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="6.2896%" y="1445" width="0.0186%" height="15" fill="rgb(236,173,5)" fg:x="6753" fg:w="20"/><text x="6.5396%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="6.2896%" y="1429" width="0.0186%" height="15" fill="rgb(230,95,12)" fg:x="6753" fg:w="20"/><text x="6.5396%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="6.2896%" y="1413" width="0.0186%" height="15" fill="rgb(232,209,1)" fg:x="6753" fg:w="20"/><text x="6.5396%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="6.2952%" y="1397" width="0.0130%" height="15" fill="rgb(232,6,1)" fg:x="6759" fg:w="14"/><text x="6.5452%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.01%)</title><rect x="6.2970%" y="1381" width="0.0112%" height="15" fill="rgb(210,224,50)" fg:x="6761" fg:w="12"/><text x="6.5470%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.03%)</title><rect x="6.3157%" y="1349" width="0.0261%" height="15" fill="rgb(228,127,35)" fg:x="6781" fg:w="28"/><text x="6.5657%" y="1359.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.01%)</title><rect x="6.3315%" y="1333" width="0.0102%" height="15" fill="rgb(245,102,45)" fg:x="6798" fg:w="11"/><text x="6.5815%" y="1343.50"></text></g><g><title>hashbrown::map::make_hash (70 samples, 0.07%)</title><rect x="6.2859%" y="1477" width="0.0652%" height="15" fill="rgb(214,1,49)" fg:x="6749" fg:w="70"/><text x="6.5359%" y="1487.50"></text></g><g><title>core::hash::BuildHasher::hash_one (69 samples, 0.06%)</title><rect x="6.2868%" y="1461" width="0.0643%" height="15" fill="rgb(226,163,40)" fg:x="6750" fg:w="69"/><text x="6.5368%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (38 samples, 0.04%)</title><rect x="6.3157%" y="1445" width="0.0354%" height="15" fill="rgb(239,212,28)" fg:x="6781" fg:w="38"/><text x="6.5657%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (38 samples, 0.04%)</title><rect x="6.3157%" y="1429" width="0.0354%" height="15" fill="rgb(220,20,13)" fg:x="6781" fg:w="38"/><text x="6.5657%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (38 samples, 0.04%)</title><rect x="6.3157%" y="1413" width="0.0354%" height="15" fill="rgb(210,164,35)" fg:x="6781" fg:w="38"/><text x="6.5657%" y="1423.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (38 samples, 0.04%)</title><rect x="6.3157%" y="1397" width="0.0354%" height="15" fill="rgb(248,109,41)" fg:x="6781" fg:w="38"/><text x="6.5657%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (38 samples, 0.04%)</title><rect x="6.3157%" y="1381" width="0.0354%" height="15" fill="rgb(238,23,50)" fg:x="6781" fg:w="38"/><text x="6.5657%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (38 samples, 0.04%)</title><rect x="6.3157%" y="1365" width="0.0354%" height="15" fill="rgb(211,48,49)" fg:x="6781" fg:w="38"/><text x="6.5657%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (52 samples, 0.05%)</title><rect x="6.3576%" y="1429" width="0.0484%" height="15" fill="rgb(223,36,21)" fg:x="6826" fg:w="52"/><text x="6.6076%" y="1439.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (52 samples, 0.05%)</title><rect x="6.3576%" y="1413" width="0.0484%" height="15" fill="rgb(207,123,46)" fg:x="6826" fg:w="52"/><text x="6.6076%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (50 samples, 0.05%)</title><rect x="6.3594%" y="1397" width="0.0466%" height="15" fill="rgb(240,218,32)" fg:x="6828" fg:w="50"/><text x="6.6094%" y="1407.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (50 samples, 0.05%)</title><rect x="6.3594%" y="1381" width="0.0466%" height="15" fill="rgb(252,5,43)" fg:x="6828" fg:w="50"/><text x="6.6094%" y="1391.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (50 samples, 0.05%)</title><rect x="6.3594%" y="1365" width="0.0466%" height="15" fill="rgb(252,84,19)" fg:x="6828" fg:w="50"/><text x="6.6094%" y="1375.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (50 samples, 0.05%)</title><rect x="6.3594%" y="1349" width="0.0466%" height="15" fill="rgb(243,152,39)" fg:x="6828" fg:w="50"/><text x="6.6094%" y="1359.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (50 samples, 0.05%)</title><rect x="6.3594%" y="1333" width="0.0466%" height="15" fill="rgb(234,160,15)" fg:x="6828" fg:w="50"/><text x="6.6094%" y="1343.50"></text></g><g><title>[libc.so.6] (36 samples, 0.03%)</title><rect x="6.3725%" y="1317" width="0.0335%" height="15" fill="rgb(237,34,20)" fg:x="6842" fg:w="36"/><text x="6.6225%" y="1327.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (21 samples, 0.02%)</title><rect x="6.4097%" y="1429" width="0.0196%" height="15" fill="rgb(229,97,13)" fg:x="6882" fg:w="21"/><text x="6.6597%" y="1439.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (21 samples, 0.02%)</title><rect x="6.4097%" y="1413" width="0.0196%" height="15" fill="rgb(234,71,50)" fg:x="6882" fg:w="21"/><text x="6.6597%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="6.4097%" y="1397" width="0.0196%" height="15" fill="rgb(253,155,4)" fg:x="6882" fg:w="21"/><text x="6.6597%" y="1407.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (164 samples, 0.15%)</title><rect x="6.2803%" y="1525" width="0.1527%" height="15" fill="rgb(222,185,37)" fg:x="6743" fg:w="164"/><text x="6.5303%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (164 samples, 0.15%)</title><rect x="6.2803%" y="1509" width="0.1527%" height="15" fill="rgb(251,177,13)" fg:x="6743" fg:w="164"/><text x="6.5303%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (164 samples, 0.15%)</title><rect x="6.2803%" y="1493" width="0.1527%" height="15" fill="rgb(250,179,40)" fg:x="6743" fg:w="164"/><text x="6.5303%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (88 samples, 0.08%)</title><rect x="6.3511%" y="1477" width="0.0820%" height="15" fill="rgb(242,44,2)" fg:x="6819" fg:w="88"/><text x="6.6011%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (88 samples, 0.08%)</title><rect x="6.3511%" y="1461" width="0.0820%" height="15" fill="rgb(216,177,13)" fg:x="6819" fg:w="88"/><text x="6.6011%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (88 samples, 0.08%)</title><rect x="6.3511%" y="1445" width="0.0820%" height="15" fill="rgb(216,106,43)" fg:x="6819" fg:w="88"/><text x="6.6011%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (15 samples, 0.01%)</title><rect x="6.4377%" y="1493" width="0.0140%" height="15" fill="rgb(216,183,2)" fg:x="6912" fg:w="15"/><text x="6.6877%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="6.4377%" y="1477" width="0.0140%" height="15" fill="rgb(249,75,3)" fg:x="6912" fg:w="15"/><text x="6.6877%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="6.4377%" y="1461" width="0.0140%" height="15" fill="rgb(219,67,39)" fg:x="6912" fg:w="15"/><text x="6.6877%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="6.4377%" y="1445" width="0.0140%" height="15" fill="rgb(253,228,2)" fg:x="6912" fg:w="15"/><text x="6.6877%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="6.4377%" y="1429" width="0.0140%" height="15" fill="rgb(235,138,27)" fg:x="6912" fg:w="15"/><text x="6.6877%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="6.4377%" y="1413" width="0.0140%" height="15" fill="rgb(236,97,51)" fg:x="6912" fg:w="15"/><text x="6.6877%" y="1423.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="6.4395%" y="1397" width="0.0121%" height="15" fill="rgb(240,80,30)" fg:x="6914" fg:w="13"/><text x="6.6895%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="6.4516%" y="1461" width="0.0158%" height="15" fill="rgb(230,178,19)" fg:x="6927" fg:w="17"/><text x="6.7016%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="6.4516%" y="1445" width="0.0158%" height="15" fill="rgb(210,190,27)" fg:x="6927" fg:w="17"/><text x="6.7016%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="6.4516%" y="1429" width="0.0158%" height="15" fill="rgb(222,107,31)" fg:x="6927" fg:w="17"/><text x="6.7016%" y="1439.50"></text></g><g><title>hashbrown::map::make_insert_hash (36 samples, 0.03%)</title><rect x="6.4516%" y="1493" width="0.0335%" height="15" fill="rgb(216,127,34)" fg:x="6927" fg:w="36"/><text x="6.7016%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.03%)</title><rect x="6.4516%" y="1477" width="0.0335%" height="15" fill="rgb(234,116,52)" fg:x="6927" fg:w="36"/><text x="6.7016%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.02%)</title><rect x="6.4684%" y="1461" width="0.0168%" height="15" fill="rgb(222,124,15)" fg:x="6945" fg:w="18"/><text x="6.7184%" y="1471.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="6.4749%" y="1445" width="0.0102%" height="15" fill="rgb(231,179,28)" fg:x="6952" fg:w="11"/><text x="6.7249%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.01%)</title><rect x="6.4749%" y="1429" width="0.0102%" height="15" fill="rgb(226,93,45)" fg:x="6952" fg:w="11"/><text x="6.7249%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="6.4749%" y="1413" width="0.0102%" height="15" fill="rgb(215,8,51)" fg:x="6952" fg:w="11"/><text x="6.7249%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="6.4749%" y="1397" width="0.0102%" height="15" fill="rgb(223,106,5)" fg:x="6952" fg:w="11"/><text x="6.7249%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="6.4749%" y="1381" width="0.0102%" height="15" fill="rgb(250,191,5)" fg:x="6952" fg:w="11"/><text x="6.7249%" y="1391.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.01%)</title><rect x="6.4954%" y="1429" width="0.0149%" height="15" fill="rgb(242,132,44)" fg:x="6974" fg:w="16"/><text x="6.7454%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (16 samples, 0.01%)</title><rect x="6.4954%" y="1413" width="0.0149%" height="15" fill="rgb(251,152,29)" fg:x="6974" fg:w="16"/><text x="6.7454%" y="1423.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (16 samples, 0.01%)</title><rect x="6.4954%" y="1397" width="0.0149%" height="15" fill="rgb(218,179,5)" fg:x="6974" fg:w="16"/><text x="6.7454%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="6.4954%" y="1381" width="0.0149%" height="15" fill="rgb(227,67,19)" fg:x="6974" fg:w="16"/><text x="6.7454%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (16 samples, 0.01%)</title><rect x="6.4954%" y="1365" width="0.0149%" height="15" fill="rgb(233,119,31)" fg:x="6974" fg:w="16"/><text x="6.7454%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (16 samples, 0.01%)</title><rect x="6.4954%" y="1349" width="0.0149%" height="15" fill="rgb(241,120,22)" fg:x="6974" fg:w="16"/><text x="6.7454%" y="1359.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="6.4991%" y="1333" width="0.0112%" height="15" fill="rgb(224,102,30)" fg:x="6978" fg:w="12"/><text x="6.7491%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (17 samples, 0.02%)</title><rect x="6.4954%" y="1445" width="0.0158%" height="15" fill="rgb(210,164,37)" fg:x="6974" fg:w="17"/><text x="6.7454%" y="1455.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (90 samples, 0.08%)</title><rect x="6.4330%" y="1525" width="0.0838%" height="15" fill="rgb(226,191,16)" fg:x="6907" fg:w="90"/><text x="6.6830%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (90 samples, 0.08%)</title><rect x="6.4330%" y="1509" width="0.0838%" height="15" fill="rgb(214,40,45)" fg:x="6907" fg:w="90"/><text x="6.6830%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (34 samples, 0.03%)</title><rect x="6.4852%" y="1493" width="0.0317%" height="15" fill="rgb(244,29,26)" fg:x="6963" fg:w="34"/><text x="6.7352%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.03%)</title><rect x="6.4852%" y="1477" width="0.0317%" height="15" fill="rgb(216,16,5)" fg:x="6963" fg:w="34"/><text x="6.7352%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (34 samples, 0.03%)</title><rect x="6.4852%" y="1461" width="0.0317%" height="15" fill="rgb(249,76,35)" fg:x="6963" fg:w="34"/><text x="6.7352%" y="1471.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (13 samples, 0.01%)</title><rect x="6.5206%" y="1509" width="0.0121%" height="15" fill="rgb(207,11,44)" fg:x="7001" fg:w="13"/><text x="6.7706%" y="1519.50"></text></g><g><title>std::time::Instant::duration_since (13 samples, 0.01%)</title><rect x="6.5206%" y="1493" width="0.0121%" height="15" fill="rgb(228,190,49)" fg:x="7001" fg:w="13"/><text x="6.7706%" y="1503.50"></text></g><g><title>std::time::Instant::checked_duration_since (11 samples, 0.01%)</title><rect x="6.5224%" y="1477" width="0.0102%" height="15" fill="rgb(214,173,12)" fg:x="7003" fg:w="11"/><text x="6.7724%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (11 samples, 0.01%)</title><rect x="6.5224%" y="1461" width="0.0102%" height="15" fill="rgb(218,26,35)" fg:x="7003" fg:w="11"/><text x="6.7724%" y="1471.50"></text></g><g><title>clock_gettime (47 samples, 0.04%)</title><rect x="6.5355%" y="1461" width="0.0438%" height="15" fill="rgb(220,200,19)" fg:x="7017" fg:w="47"/><text x="6.7855%" y="1471.50"></text></g><g><title>__vdso_clock_gettime (41 samples, 0.04%)</title><rect x="6.5411%" y="1445" width="0.0382%" height="15" fill="rgb(239,95,49)" fg:x="7023" fg:w="41"/><text x="6.7911%" y="1455.50"></text></g><g><title>[[vdso]] (37 samples, 0.03%)</title><rect x="6.5448%" y="1429" width="0.0345%" height="15" fill="rgb(235,85,53)" fg:x="7027" fg:w="37"/><text x="6.7948%" y="1439.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (371 samples, 0.35%)</title><rect x="6.2346%" y="1541" width="0.3455%" height="15" fill="rgb(233,133,31)" fg:x="6694" fg:w="371"/><text x="6.4846%" y="1551.50"></text></g><g><title>std::time::Instant::elapsed (68 samples, 0.06%)</title><rect x="6.5168%" y="1525" width="0.0633%" height="15" fill="rgb(218,25,20)" fg:x="6997" fg:w="68"/><text x="6.7668%" y="1535.50"></text></g><g><title>std::time::Instant::now (51 samples, 0.05%)</title><rect x="6.5327%" y="1509" width="0.0475%" height="15" fill="rgb(252,210,38)" fg:x="7014" fg:w="51"/><text x="6.7827%" y="1519.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (51 samples, 0.05%)</title><rect x="6.5327%" y="1493" width="0.0475%" height="15" fill="rgb(242,134,21)" fg:x="7014" fg:w="51"/><text x="6.7827%" y="1503.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (51 samples, 0.05%)</title><rect x="6.5327%" y="1477" width="0.0475%" height="15" fill="rgb(213,28,48)" fg:x="7014" fg:w="51"/><text x="6.7827%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="6.6072%" y="1429" width="0.0102%" height="15" fill="rgb(250,196,2)" fg:x="7094" fg:w="11"/><text x="6.8572%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="6.6072%" y="1413" width="0.0102%" height="15" fill="rgb(227,5,17)" fg:x="7094" fg:w="11"/><text x="6.8572%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="6.6072%" y="1397" width="0.0102%" height="15" fill="rgb(221,226,24)" fg:x="7094" fg:w="11"/><text x="6.8572%" y="1407.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.02%)</title><rect x="6.6063%" y="1461" width="0.0214%" height="15" fill="rgb(211,5,48)" fg:x="7093" fg:w="23"/><text x="6.8563%" y="1471.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.02%)</title><rect x="6.6063%" y="1445" width="0.0214%" height="15" fill="rgb(219,150,6)" fg:x="7093" fg:w="23"/><text x="6.8563%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (40 samples, 0.04%)</title><rect x="6.6361%" y="1413" width="0.0373%" height="15" fill="rgb(251,46,16)" fg:x="7125" fg:w="40"/><text x="6.8861%" y="1423.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (40 samples, 0.04%)</title><rect x="6.6361%" y="1397" width="0.0373%" height="15" fill="rgb(220,204,40)" fg:x="7125" fg:w="40"/><text x="6.8861%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (38 samples, 0.04%)</title><rect x="6.6379%" y="1381" width="0.0354%" height="15" fill="rgb(211,85,2)" fg:x="7127" fg:w="38"/><text x="6.8879%" y="1391.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (38 samples, 0.04%)</title><rect x="6.6379%" y="1365" width="0.0354%" height="15" fill="rgb(229,17,7)" fg:x="7127" fg:w="38"/><text x="6.8879%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (38 samples, 0.04%)</title><rect x="6.6379%" y="1349" width="0.0354%" height="15" fill="rgb(239,72,28)" fg:x="7127" fg:w="38"/><text x="6.8879%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (38 samples, 0.04%)</title><rect x="6.6379%" y="1333" width="0.0354%" height="15" fill="rgb(230,47,54)" fg:x="7127" fg:w="38"/><text x="6.8879%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (38 samples, 0.04%)</title><rect x="6.6379%" y="1317" width="0.0354%" height="15" fill="rgb(214,50,8)" fg:x="7127" fg:w="38"/><text x="6.8879%" y="1327.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="6.6500%" y="1301" width="0.0233%" height="15" fill="rgb(216,198,43)" fg:x="7140" fg:w="25"/><text x="6.9000%" y="1311.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (87 samples, 0.08%)</title><rect x="6.6016%" y="1525" width="0.0810%" height="15" fill="rgb(234,20,35)" fg:x="7088" fg:w="87"/><text x="6.8516%" y="1535.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (87 samples, 0.08%)</title><rect x="6.6016%" y="1509" width="0.0810%" height="15" fill="rgb(254,45,19)" fg:x="7088" fg:w="87"/><text x="6.8516%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (87 samples, 0.08%)</title><rect x="6.6016%" y="1493" width="0.0810%" height="15" fill="rgb(219,14,44)" fg:x="7088" fg:w="87"/><text x="6.8516%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (87 samples, 0.08%)</title><rect x="6.6016%" y="1477" width="0.0810%" height="15" fill="rgb(217,220,26)" fg:x="7088" fg:w="87"/><text x="6.8516%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (59 samples, 0.05%)</title><rect x="6.6277%" y="1461" width="0.0550%" height="15" fill="rgb(213,158,28)" fg:x="7116" fg:w="59"/><text x="6.8777%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (59 samples, 0.05%)</title><rect x="6.6277%" y="1445" width="0.0550%" height="15" fill="rgb(252,51,52)" fg:x="7116" fg:w="59"/><text x="6.8777%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (59 samples, 0.05%)</title><rect x="6.6277%" y="1429" width="0.0550%" height="15" fill="rgb(246,89,16)" fg:x="7116" fg:w="59"/><text x="6.8777%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="6.6901%" y="1461" width="0.0112%" height="15" fill="rgb(216,158,49)" fg:x="7183" fg:w="12"/><text x="6.9401%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="6.6901%" y="1445" width="0.0112%" height="15" fill="rgb(236,107,19)" fg:x="7183" fg:w="12"/><text x="6.9401%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="6.6901%" y="1429" width="0.0112%" height="15" fill="rgb(228,185,30)" fg:x="7183" fg:w="12"/><text x="6.9401%" y="1439.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.02%)</title><rect x="6.6901%" y="1493" width="0.0158%" height="15" fill="rgb(246,134,8)" fg:x="7183" fg:w="17"/><text x="6.9401%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="6.6901%" y="1477" width="0.0158%" height="15" fill="rgb(214,143,50)" fg:x="7183" fg:w="17"/><text x="6.9401%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (29 samples, 0.03%)</title><rect x="6.7096%" y="1445" width="0.0270%" height="15" fill="rgb(228,75,8)" fg:x="7204" fg:w="29"/><text x="6.9596%" y="1455.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (29 samples, 0.03%)</title><rect x="6.7096%" y="1429" width="0.0270%" height="15" fill="rgb(207,175,4)" fg:x="7204" fg:w="29"/><text x="6.9596%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="6.7124%" y="1413" width="0.0242%" height="15" fill="rgb(205,108,24)" fg:x="7207" fg:w="26"/><text x="6.9624%" y="1423.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (26 samples, 0.02%)</title><rect x="6.7124%" y="1397" width="0.0242%" height="15" fill="rgb(244,120,49)" fg:x="7207" fg:w="26"/><text x="6.9624%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.02%)</title><rect x="6.7124%" y="1381" width="0.0242%" height="15" fill="rgb(223,47,38)" fg:x="7207" fg:w="26"/><text x="6.9624%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (26 samples, 0.02%)</title><rect x="6.7124%" y="1365" width="0.0242%" height="15" fill="rgb(229,179,11)" fg:x="7207" fg:w="26"/><text x="6.9624%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (26 samples, 0.02%)</title><rect x="6.7124%" y="1349" width="0.0242%" height="15" fill="rgb(231,122,1)" fg:x="7207" fg:w="26"/><text x="6.9624%" y="1359.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="6.7255%" y="1333" width="0.0112%" height="15" fill="rgb(245,119,9)" fg:x="7221" fg:w="12"/><text x="6.9755%" y="1343.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (66 samples, 0.06%)</title><rect x="6.6826%" y="1525" width="0.0615%" height="15" fill="rgb(241,163,25)" fg:x="7175" fg:w="66"/><text x="6.9326%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (66 samples, 0.06%)</title><rect x="6.6826%" y="1509" width="0.0615%" height="15" fill="rgb(217,214,3)" fg:x="7175" fg:w="66"/><text x="6.9326%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (41 samples, 0.04%)</title><rect x="6.7059%" y="1493" width="0.0382%" height="15" fill="rgb(240,86,28)" fg:x="7200" fg:w="41"/><text x="6.9559%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.04%)</title><rect x="6.7059%" y="1477" width="0.0382%" height="15" fill="rgb(215,47,9)" fg:x="7200" fg:w="41"/><text x="6.9559%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (41 samples, 0.04%)</title><rect x="6.7059%" y="1461" width="0.0382%" height="15" fill="rgb(252,25,45)" fg:x="7200" fg:w="41"/><text x="6.9559%" y="1471.50"></text></g><g><title>clock_gettime (32 samples, 0.03%)</title><rect x="6.7450%" y="1509" width="0.0298%" height="15" fill="rgb(251,164,9)" fg:x="7242" fg:w="32"/><text x="6.9950%" y="1519.50"></text></g><g><title>__vdso_clock_gettime (29 samples, 0.03%)</title><rect x="6.7478%" y="1493" width="0.0270%" height="15" fill="rgb(233,194,0)" fg:x="7245" fg:w="29"/><text x="6.9978%" y="1503.50"></text></g><g><title>[[vdso]] (23 samples, 0.02%)</title><rect x="6.7534%" y="1477" width="0.0214%" height="15" fill="rgb(249,111,24)" fg:x="7251" fg:w="23"/><text x="7.0034%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (34 samples, 0.03%)</title><rect x="6.7441%" y="1525" width="0.0317%" height="15" fill="rgb(250,223,3)" fg:x="7241" fg:w="34"/><text x="6.9941%" y="1535.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (212 samples, 0.20%)</title><rect x="6.5802%" y="1541" width="0.1975%" height="15" fill="rgb(236,178,37)" fg:x="7065" fg:w="212"/><text x="6.8302%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (26 samples, 0.02%)</title><rect x="6.7776%" y="1541" width="0.0242%" height="15" fill="rgb(241,158,50)" fg:x="7277" fg:w="26"/><text x="7.0276%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (26 samples, 0.02%)</title><rect x="6.7776%" y="1525" width="0.0242%" height="15" fill="rgb(213,121,41)" fg:x="7277" fg:w="26"/><text x="7.0276%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (26 samples, 0.02%)</title><rect x="6.7776%" y="1509" width="0.0242%" height="15" fill="rgb(240,92,3)" fg:x="7277" fg:w="26"/><text x="7.0276%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="6.7776%" y="1493" width="0.0242%" height="15" fill="rgb(205,123,3)" fg:x="7277" fg:w="26"/><text x="7.0276%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="6.7786%" y="1477" width="0.0233%" height="15" fill="rgb(205,97,47)" fg:x="7278" fg:w="25"/><text x="7.0286%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="6.7786%" y="1461" width="0.0233%" height="15" fill="rgb(247,152,14)" fg:x="7278" fg:w="25"/><text x="7.0286%" y="1471.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="6.7841%" y="1445" width="0.0177%" height="15" fill="rgb(248,195,53)" fg:x="7284" fg:w="19"/><text x="7.0341%" y="1455.50"></text></g><g><title>prometheus::histogram::Histogram::observe (12 samples, 0.01%)</title><rect x="6.8102%" y="1493" width="0.0112%" height="15" fill="rgb(226,201,16)" fg:x="7312" fg:w="12"/><text x="7.0602%" y="1503.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (12 samples, 0.01%)</title><rect x="6.8102%" y="1477" width="0.0112%" height="15" fill="rgb(205,98,0)" fg:x="7312" fg:w="12"/><text x="7.0602%" y="1487.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (12 samples, 0.01%)</title><rect x="6.8214%" y="1477" width="0.0112%" height="15" fill="rgb(214,191,48)" fg:x="7324" fg:w="12"/><text x="7.0714%" y="1487.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="6.8046%" y="1525" width="0.0363%" height="15" fill="rgb(237,112,39)" fg:x="7306" fg:w="39"/><text x="7.0546%" y="1535.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (33 samples, 0.03%)</title><rect x="6.8102%" y="1509" width="0.0307%" height="15" fill="rgb(247,203,27)" fg:x="7312" fg:w="33"/><text x="7.0602%" y="1519.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (21 samples, 0.02%)</title><rect x="6.8214%" y="1493" width="0.0196%" height="15" fill="rgb(235,124,28)" fg:x="7324" fg:w="21"/><text x="7.0714%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (42 samples, 0.04%)</title><rect x="6.8046%" y="1541" width="0.0391%" height="15" fill="rgb(208,207,46)" fg:x="7306" fg:w="42"/><text x="7.0546%" y="1551.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (17 samples, 0.02%)</title><rect x="6.8503%" y="1541" width="0.0158%" height="15" fill="rgb(234,176,4)" fg:x="7355" fg:w="17"/><text x="7.1003%" y="1551.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (5,197 samples, 4.84%)</title><rect x="2.0304%" y="1557" width="4.8404%" height="15" fill="rgb(230,133,28)" fg:x="2180" fg:w="5197"/><text x="2.2804%" y="1567.50">aptos_..</text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (18 samples, 0.02%)</title><rect x="6.9099%" y="1493" width="0.0168%" height="15" fill="rgb(211,137,40)" fg:x="7419" fg:w="18"/><text x="7.1599%" y="1503.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_back_checked (18 samples, 0.02%)</title><rect x="6.9099%" y="1477" width="0.0168%" height="15" fill="rgb(254,35,13)" fg:x="7419" fg:w="18"/><text x="7.1599%" y="1487.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_back_checked (18 samples, 0.02%)</title><rect x="6.9099%" y="1461" width="0.0168%" height="15" fill="rgb(225,49,51)" fg:x="7419" fg:w="18"/><text x="7.1599%" y="1471.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_lower_bound_edge (26 samples, 0.02%)</title><rect x="6.9453%" y="1445" width="0.0242%" height="15" fill="rgb(251,10,15)" fg:x="7457" fg:w="26"/><text x="7.1953%" y="1455.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (26 samples, 0.02%)</title><rect x="6.9453%" y="1429" width="0.0242%" height="15" fill="rgb(228,207,15)" fg:x="7457" fg:w="26"/><text x="7.1953%" y="1439.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.02%)</title><rect x="6.9453%" y="1413" width="0.0242%" height="15" fill="rgb(241,99,19)" fg:x="7457" fg:w="26"/><text x="7.1953%" y="1423.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (21 samples, 0.02%)</title><rect x="6.9695%" y="1445" width="0.0196%" height="15" fill="rgb(207,104,49)" fg:x="7483" fg:w="21"/><text x="7.2195%" y="1455.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (21 samples, 0.02%)</title><rect x="6.9695%" y="1429" width="0.0196%" height="15" fill="rgb(234,99,18)" fg:x="7483" fg:w="21"/><text x="7.2195%" y="1439.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.02%)</title><rect x="6.9704%" y="1413" width="0.0186%" height="15" fill="rgb(213,191,49)" fg:x="7484" fg:w="20"/><text x="7.2204%" y="1423.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (76 samples, 0.07%)</title><rect x="6.9266%" y="1493" width="0.0708%" height="15" fill="rgb(210,226,19)" fg:x="7437" fg:w="76"/><text x="7.1766%" y="1503.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (68 samples, 0.06%)</title><rect x="6.9341%" y="1477" width="0.0633%" height="15" fill="rgb(229,97,18)" fg:x="7445" fg:w="68"/><text x="7.1841%" y="1487.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (66 samples, 0.06%)</title><rect x="6.9360%" y="1461" width="0.0615%" height="15" fill="rgb(211,167,15)" fg:x="7447" fg:w="66"/><text x="7.1860%" y="1471.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (43 samples, 0.04%)</title><rect x="7.0272%" y="1397" width="0.0400%" height="15" fill="rgb(210,169,34)" fg:x="7545" fg:w="43"/><text x="7.2772%" y="1407.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (43 samples, 0.04%)</title><rect x="7.0272%" y="1381" width="0.0400%" height="15" fill="rgb(241,121,31)" fg:x="7545" fg:w="43"/><text x="7.2772%" y="1391.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (71 samples, 0.07%)</title><rect x="7.0049%" y="1461" width="0.0661%" height="15" fill="rgb(232,40,11)" fg:x="7521" fg:w="71"/><text x="7.2549%" y="1471.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (70 samples, 0.07%)</title><rect x="7.0058%" y="1445" width="0.0652%" height="15" fill="rgb(205,86,26)" fg:x="7522" fg:w="70"/><text x="7.2558%" y="1455.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (70 samples, 0.07%)</title><rect x="7.0058%" y="1429" width="0.0652%" height="15" fill="rgb(231,126,28)" fg:x="7522" fg:w="70"/><text x="7.2558%" y="1439.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (50 samples, 0.05%)</title><rect x="7.0244%" y="1413" width="0.0466%" height="15" fill="rgb(219,221,18)" fg:x="7542" fg:w="50"/><text x="7.2744%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.01%)</title><rect x="7.1008%" y="1381" width="0.0149%" height="15" fill="rgb(211,40,0)" fg:x="7624" fg:w="16"/><text x="7.3508%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (41 samples, 0.04%)</title><rect x="7.0822%" y="1445" width="0.0382%" height="15" fill="rgb(239,85,43)" fg:x="7604" fg:w="41"/><text x="7.3322%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (41 samples, 0.04%)</title><rect x="7.0822%" y="1429" width="0.0382%" height="15" fill="rgb(231,55,21)" fg:x="7604" fg:w="41"/><text x="7.3322%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (41 samples, 0.04%)</title><rect x="7.0822%" y="1413" width="0.0382%" height="15" fill="rgb(225,184,43)" fg:x="7604" fg:w="41"/><text x="7.3322%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.02%)</title><rect x="7.0980%" y="1397" width="0.0224%" height="15" fill="rgb(251,158,41)" fg:x="7621" fg:w="24"/><text x="7.3480%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="7.1297%" y="1381" width="0.0102%" height="15" fill="rgb(234,159,37)" fg:x="7655" fg:w="11"/><text x="7.3797%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="7.1297%" y="1365" width="0.0102%" height="15" fill="rgb(216,204,22)" fg:x="7655" fg:w="11"/><text x="7.3797%" y="1375.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.02%)</title><rect x="7.1632%" y="1253" width="0.0177%" height="15" fill="rgb(214,17,3)" fg:x="7691" fg:w="19"/><text x="7.4132%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (34 samples, 0.03%)</title><rect x="7.1548%" y="1269" width="0.0317%" height="15" fill="rgb(212,111,17)" fg:x="7682" fg:w="34"/><text x="7.4048%" y="1279.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (62 samples, 0.06%)</title><rect x="7.1297%" y="1397" width="0.0577%" height="15" fill="rgb(221,157,24)" fg:x="7655" fg:w="62"/><text x="7.3797%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (51 samples, 0.05%)</title><rect x="7.1399%" y="1381" width="0.0475%" height="15" fill="rgb(252,16,13)" fg:x="7666" fg:w="51"/><text x="7.3899%" y="1391.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (51 samples, 0.05%)</title><rect x="7.1399%" y="1365" width="0.0475%" height="15" fill="rgb(221,62,2)" fg:x="7666" fg:w="51"/><text x="7.3899%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (51 samples, 0.05%)</title><rect x="7.1399%" y="1349" width="0.0475%" height="15" fill="rgb(247,87,22)" fg:x="7666" fg:w="51"/><text x="7.3899%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (41 samples, 0.04%)</title><rect x="7.1492%" y="1333" width="0.0382%" height="15" fill="rgb(215,73,9)" fg:x="7676" fg:w="41"/><text x="7.3992%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (41 samples, 0.04%)</title><rect x="7.1492%" y="1317" width="0.0382%" height="15" fill="rgb(207,175,33)" fg:x="7676" fg:w="41"/><text x="7.3992%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (38 samples, 0.04%)</title><rect x="7.1520%" y="1301" width="0.0354%" height="15" fill="rgb(243,129,54)" fg:x="7679" fg:w="38"/><text x="7.4020%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38 samples, 0.04%)</title><rect x="7.1520%" y="1285" width="0.0354%" height="15" fill="rgb(227,119,45)" fg:x="7679" fg:w="38"/><text x="7.4020%" y="1295.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (92 samples, 0.09%)</title><rect x="7.1222%" y="1429" width="0.0857%" height="15" fill="rgb(205,109,36)" fg:x="7647" fg:w="92"/><text x="7.3722%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (87 samples, 0.08%)</title><rect x="7.1269%" y="1413" width="0.0810%" height="15" fill="rgb(205,6,39)" fg:x="7652" fg:w="87"/><text x="7.3769%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (17 samples, 0.02%)</title><rect x="7.1921%" y="1397" width="0.0158%" height="15" fill="rgb(221,32,16)" fg:x="7722" fg:w="17"/><text x="7.4421%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_isize (17 samples, 0.02%)</title><rect x="7.1921%" y="1381" width="0.0158%" height="15" fill="rgb(228,144,50)" fg:x="7722" fg:w="17"/><text x="7.4421%" y="1391.50"></text></g><g><title>core::hash::Hasher::write_usize (17 samples, 0.02%)</title><rect x="7.1921%" y="1365" width="0.0158%" height="15" fill="rgb(229,201,53)" fg:x="7722" fg:w="17"/><text x="7.4421%" y="1375.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (49 samples, 0.05%)</title><rect x="7.2694%" y="1365" width="0.0456%" height="15" fill="rgb(249,153,27)" fg:x="7805" fg:w="49"/><text x="7.5194%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (113 samples, 0.11%)</title><rect x="7.2154%" y="1381" width="0.1052%" height="15" fill="rgb(227,106,25)" fg:x="7747" fg:w="113"/><text x="7.4654%" y="1391.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (265 samples, 0.25%)</title><rect x="7.0803%" y="1461" width="0.2468%" height="15" fill="rgb(230,65,29)" fg:x="7602" fg:w="265"/><text x="7.3303%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (220 samples, 0.20%)</title><rect x="7.1222%" y="1445" width="0.2049%" height="15" fill="rgb(221,57,46)" fg:x="7647" fg:w="220"/><text x="7.3722%" y="1455.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (128 samples, 0.12%)</title><rect x="7.2079%" y="1429" width="0.1192%" height="15" fill="rgb(229,161,17)" fg:x="7739" fg:w="128"/><text x="7.4579%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (128 samples, 0.12%)</title><rect x="7.2079%" y="1413" width="0.1192%" height="15" fill="rgb(222,213,11)" fg:x="7739" fg:w="128"/><text x="7.4579%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (128 samples, 0.12%)</title><rect x="7.2079%" y="1397" width="0.1192%" height="15" fill="rgb(235,35,13)" fg:x="7739" fg:w="128"/><text x="7.4579%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (11 samples, 0.01%)</title><rect x="7.3355%" y="1333" width="0.0102%" height="15" fill="rgb(233,158,34)" fg:x="7876" fg:w="11"/><text x="7.5855%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.01%)</title><rect x="7.3355%" y="1317" width="0.0102%" height="15" fill="rgb(215,151,48)" fg:x="7876" fg:w="11"/><text x="7.5855%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="7.3355%" y="1365" width="0.0130%" height="15" fill="rgb(229,84,14)" fg:x="7876" fg:w="14"/><text x="7.5855%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.01%)</title><rect x="7.3355%" y="1349" width="0.0130%" height="15" fill="rgb(229,68,14)" fg:x="7876" fg:w="14"/><text x="7.5855%" y="1359.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (12 samples, 0.01%)</title><rect x="7.3486%" y="1317" width="0.0112%" height="15" fill="rgb(243,106,26)" fg:x="7890" fg:w="12"/><text x="7.5986%" y="1327.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.01%)</title><rect x="7.3486%" y="1301" width="0.0112%" height="15" fill="rgb(206,45,38)" fg:x="7890" fg:w="12"/><text x="7.5986%" y="1311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.02%)</title><rect x="7.3672%" y="1237" width="0.0205%" height="15" fill="rgb(226,6,15)" fg:x="7910" fg:w="22"/><text x="7.6172%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (29 samples, 0.03%)</title><rect x="7.3653%" y="1253" width="0.0270%" height="15" fill="rgb(232,22,54)" fg:x="7908" fg:w="29"/><text x="7.6153%" y="1263.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (62 samples, 0.06%)</title><rect x="7.3355%" y="1381" width="0.0577%" height="15" fill="rgb(229,222,32)" fg:x="7876" fg:w="62"/><text x="7.5855%" y="1391.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (48 samples, 0.04%)</title><rect x="7.3486%" y="1365" width="0.0447%" height="15" fill="rgb(228,62,29)" fg:x="7890" fg:w="48"/><text x="7.5986%" y="1375.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (48 samples, 0.04%)</title><rect x="7.3486%" y="1349" width="0.0447%" height="15" fill="rgb(251,103,34)" fg:x="7890" fg:w="48"/><text x="7.5986%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (48 samples, 0.04%)</title><rect x="7.3486%" y="1333" width="0.0447%" height="15" fill="rgb(233,12,30)" fg:x="7890" fg:w="48"/><text x="7.5986%" y="1343.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (36 samples, 0.03%)</title><rect x="7.3597%" y="1317" width="0.0335%" height="15" fill="rgb(238,52,0)" fg:x="7902" fg:w="36"/><text x="7.6097%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (35 samples, 0.03%)</title><rect x="7.3607%" y="1301" width="0.0326%" height="15" fill="rgb(223,98,5)" fg:x="7903" fg:w="35"/><text x="7.6107%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (33 samples, 0.03%)</title><rect x="7.3625%" y="1285" width="0.0307%" height="15" fill="rgb(228,75,37)" fg:x="7905" fg:w="33"/><text x="7.6125%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.03%)</title><rect x="7.3625%" y="1269" width="0.0307%" height="15" fill="rgb(205,115,49)" fg:x="7905" fg:w="33"/><text x="7.6125%" y="1279.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (84 samples, 0.08%)</title><rect x="7.3337%" y="1413" width="0.0782%" height="15" fill="rgb(250,154,43)" fg:x="7874" fg:w="84"/><text x="7.5837%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (83 samples, 0.08%)</title><rect x="7.3346%" y="1397" width="0.0773%" height="15" fill="rgb(226,43,29)" fg:x="7875" fg:w="83"/><text x="7.5846%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.02%)</title><rect x="7.4287%" y="1349" width="0.0177%" height="15" fill="rgb(249,228,39)" fg:x="7976" fg:w="19"/><text x="7.6787%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (40 samples, 0.04%)</title><rect x="7.4119%" y="1413" width="0.0373%" height="15" fill="rgb(216,79,43)" fg:x="7958" fg:w="40"/><text x="7.6619%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (40 samples, 0.04%)</title><rect x="7.4119%" y="1397" width="0.0373%" height="15" fill="rgb(228,95,12)" fg:x="7958" fg:w="40"/><text x="7.6619%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (40 samples, 0.04%)</title><rect x="7.4119%" y="1381" width="0.0373%" height="15" fill="rgb(249,221,15)" fg:x="7958" fg:w="40"/><text x="7.6619%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="7.4277%" y="1365" width="0.0214%" height="15" fill="rgb(233,34,13)" fg:x="7975" fg:w="23"/><text x="7.6777%" y="1375.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (50 samples, 0.05%)</title><rect x="7.4631%" y="1349" width="0.0466%" height="15" fill="rgb(214,103,39)" fg:x="8013" fg:w="50"/><text x="7.7131%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (62 samples, 0.06%)</title><rect x="7.4603%" y="1365" width="0.0577%" height="15" fill="rgb(251,126,39)" fg:x="8010" fg:w="62"/><text x="7.7103%" y="1375.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (77 samples, 0.07%)</title><rect x="7.4491%" y="1413" width="0.0717%" height="15" fill="rgb(214,216,36)" fg:x="7998" fg:w="77"/><text x="7.6991%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (75 samples, 0.07%)</title><rect x="7.4510%" y="1397" width="0.0699%" height="15" fill="rgb(220,221,8)" fg:x="8000" fg:w="75"/><text x="7.7010%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (75 samples, 0.07%)</title><rect x="7.4510%" y="1381" width="0.0699%" height="15" fill="rgb(240,216,3)" fg:x="8000" fg:w="75"/><text x="7.7010%" y="1391.50"></text></g><g><title>hashbrown::map::make_hash (210 samples, 0.20%)</title><rect x="7.3337%" y="1429" width="0.1956%" height="15" fill="rgb(232,218,17)" fg:x="7874" fg:w="210"/><text x="7.5837%" y="1439.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (40 samples, 0.04%)</title><rect x="7.5367%" y="1365" width="0.0373%" height="15" fill="rgb(229,163,45)" fg:x="8092" fg:w="40"/><text x="7.7867%" y="1375.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (40 samples, 0.04%)</title><rect x="7.5367%" y="1349" width="0.0373%" height="15" fill="rgb(231,110,42)" fg:x="8092" fg:w="40"/><text x="7.7867%" y="1359.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (35 samples, 0.03%)</title><rect x="7.5414%" y="1333" width="0.0326%" height="15" fill="rgb(208,170,48)" fg:x="8097" fg:w="35"/><text x="7.7914%" y="1343.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (35 samples, 0.03%)</title><rect x="7.5414%" y="1317" width="0.0326%" height="15" fill="rgb(239,116,25)" fg:x="8097" fg:w="35"/><text x="7.7914%" y="1327.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="7.5581%" y="1301" width="0.0158%" height="15" fill="rgb(219,200,50)" fg:x="8115" fg:w="17"/><text x="7.8081%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (41 samples, 0.04%)</title><rect x="7.5367%" y="1381" width="0.0382%" height="15" fill="rgb(245,200,0)" fg:x="8092" fg:w="41"/><text x="7.7867%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (40 samples, 0.04%)</title><rect x="7.5861%" y="1381" width="0.0373%" height="15" fill="rgb(245,119,33)" fg:x="8145" fg:w="40"/><text x="7.8361%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (40 samples, 0.04%)</title><rect x="7.5861%" y="1365" width="0.0373%" height="15" fill="rgb(231,125,12)" fg:x="8145" fg:w="40"/><text x="7.8361%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.04%)</title><rect x="7.5861%" y="1349" width="0.0373%" height="15" fill="rgb(216,96,41)" fg:x="8145" fg:w="40"/><text x="7.8361%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (811 samples, 0.76%)</title><rect x="6.8726%" y="1541" width="0.7553%" height="15" fill="rgb(248,43,45)" fg:x="7379" fg:w="811"/><text x="7.1226%" y="1551.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate::{{closure}} (807 samples, 0.75%)</title><rect x="6.8764%" y="1525" width="0.7516%" height="15" fill="rgb(217,222,7)" fg:x="7383" fg:w="807"/><text x="7.1264%" y="1535.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (799 samples, 0.74%)</title><rect x="6.8838%" y="1509" width="0.7442%" height="15" fill="rgb(233,28,6)" fg:x="7391" fg:w="799"/><text x="7.1338%" y="1519.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (677 samples, 0.63%)</title><rect x="6.9974%" y="1493" width="0.6305%" height="15" fill="rgb(231,218,15)" fg:x="7513" fg:w="677"/><text x="7.2474%" y="1503.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (670 samples, 0.62%)</title><rect x="7.0039%" y="1477" width="0.6240%" height="15" fill="rgb(226,171,48)" fg:x="7520" fg:w="670"/><text x="7.2539%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (323 samples, 0.30%)</title><rect x="7.3271%" y="1461" width="0.3008%" height="15" fill="rgb(235,201,9)" fg:x="7867" fg:w="323"/><text x="7.5771%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (323 samples, 0.30%)</title><rect x="7.3271%" y="1445" width="0.3008%" height="15" fill="rgb(217,80,15)" fg:x="7867" fg:w="323"/><text x="7.5771%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (106 samples, 0.10%)</title><rect x="7.5292%" y="1429" width="0.0987%" height="15" fill="rgb(219,152,8)" fg:x="8084" fg:w="106"/><text x="7.7792%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (106 samples, 0.10%)</title><rect x="7.5292%" y="1413" width="0.0987%" height="15" fill="rgb(243,107,38)" fg:x="8084" fg:w="106"/><text x="7.7792%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (106 samples, 0.10%)</title><rect x="7.5292%" y="1397" width="0.0987%" height="15" fill="rgb(231,17,5)" fg:x="8084" fg:w="106"/><text x="7.7792%" y="1407.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (29 samples, 0.03%)</title><rect x="7.6568%" y="1509" width="0.0270%" height="15" fill="rgb(209,25,54)" fg:x="8221" fg:w="29"/><text x="7.9068%" y="1519.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (15 samples, 0.01%)</title><rect x="7.6866%" y="1493" width="0.0140%" height="15" fill="rgb(219,0,2)" fg:x="8253" fg:w="15"/><text x="7.9366%" y="1503.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (15 samples, 0.01%)</title><rect x="7.6866%" y="1477" width="0.0140%" height="15" fill="rgb(246,9,5)" fg:x="8253" fg:w="15"/><text x="7.9366%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (15 samples, 0.01%)</title><rect x="7.6866%" y="1461" width="0.0140%" height="15" fill="rgb(226,159,4)" fg:x="8253" fg:w="15"/><text x="7.9366%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.01%)</title><rect x="7.6866%" y="1445" width="0.0140%" height="15" fill="rgb(219,175,34)" fg:x="8253" fg:w="15"/><text x="7.9366%" y="1455.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.01%)</title><rect x="7.7006%" y="1493" width="0.0102%" height="15" fill="rgb(236,10,46)" fg:x="8268" fg:w="11"/><text x="7.9506%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="7.7006%" y="1477" width="0.0102%" height="15" fill="rgb(240,211,16)" fg:x="8268" fg:w="11"/><text x="7.9506%" y="1487.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (34 samples, 0.03%)</title><rect x="7.6839%" y="1509" width="0.0317%" height="15" fill="rgb(205,3,43)" fg:x="8250" fg:w="34"/><text x="7.9339%" y="1519.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_incarnate (72 samples, 0.07%)</title><rect x="7.6531%" y="1525" width="0.0671%" height="15" fill="rgb(245,7,22)" fg:x="8217" fg:w="72"/><text x="7.9031%" y="1535.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_abort (83 samples, 0.08%)</title><rect x="7.6447%" y="1541" width="0.0773%" height="15" fill="rgb(239,132,32)" fg:x="8208" fg:w="83"/><text x="7.8947%" y="1551.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (22 samples, 0.02%)</title><rect x="7.7314%" y="1525" width="0.0205%" height="15" fill="rgb(228,202,34)" fg:x="8301" fg:w="22"/><text x="7.9814%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.02%)</title><rect x="7.7323%" y="1509" width="0.0196%" height="15" fill="rgb(254,200,22)" fg:x="8302" fg:w="21"/><text x="7.9823%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="7.7323%" y="1493" width="0.0196%" height="15" fill="rgb(219,10,39)" fg:x="8302" fg:w="21"/><text x="7.9823%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="7.7323%" y="1477" width="0.0196%" height="15" fill="rgb(226,210,39)" fg:x="8302" fg:w="21"/><text x="7.9823%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="7.7332%" y="1461" width="0.0186%" height="15" fill="rgb(208,219,16)" fg:x="8303" fg:w="20"/><text x="7.9832%" y="1471.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 0.02%)</title><rect x="7.7640%" y="1365" width="0.0196%" height="15" fill="rgb(216,158,51)" fg:x="8336" fg:w="21"/><text x="8.0140%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.02%)</title><rect x="7.7677%" y="1349" width="0.0158%" height="15" fill="rgb(233,14,44)" fg:x="8340" fg:w="17"/><text x="8.0177%" y="1359.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (17 samples, 0.02%)</title><rect x="7.7677%" y="1333" width="0.0158%" height="15" fill="rgb(237,97,39)" fg:x="8340" fg:w="17"/><text x="8.0177%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (17 samples, 0.02%)</title><rect x="7.7677%" y="1317" width="0.0158%" height="15" fill="rgb(218,198,43)" fg:x="8340" fg:w="17"/><text x="8.0177%" y="1327.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (17 samples, 0.02%)</title><rect x="7.7677%" y="1301" width="0.0158%" height="15" fill="rgb(231,104,20)" fg:x="8340" fg:w="17"/><text x="8.0177%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.01%)</title><rect x="7.7686%" y="1285" width="0.0149%" height="15" fill="rgb(254,36,13)" fg:x="8341" fg:w="16"/><text x="8.0186%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (33 samples, 0.03%)</title><rect x="7.7556%" y="1445" width="0.0307%" height="15" fill="rgb(248,14,50)" fg:x="8327" fg:w="33"/><text x="8.0056%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.03%)</title><rect x="7.7556%" y="1429" width="0.0307%" height="15" fill="rgb(217,107,29)" fg:x="8327" fg:w="33"/><text x="8.0056%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.03%)</title><rect x="7.7556%" y="1413" width="0.0307%" height="15" fill="rgb(251,169,33)" fg:x="8327" fg:w="33"/><text x="8.0056%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.03%)</title><rect x="7.7565%" y="1397" width="0.0298%" height="15" fill="rgb(217,108,32)" fg:x="8328" fg:w="32"/><text x="8.0065%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (27 samples, 0.03%)</title><rect x="7.7612%" y="1381" width="0.0251%" height="15" fill="rgb(219,66,42)" fg:x="8333" fg:w="27"/><text x="8.0112%" y="1391.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (74 samples, 0.07%)</title><rect x="7.7295%" y="1541" width="0.0689%" height="15" fill="rgb(206,180,7)" fg:x="8299" fg:w="74"/><text x="7.9795%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.04%)</title><rect x="7.7537%" y="1525" width="0.0447%" height="15" fill="rgb(208,226,31)" fg:x="8325" fg:w="48"/><text x="8.0037%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.04%)</title><rect x="7.7537%" y="1509" width="0.0447%" height="15" fill="rgb(218,26,49)" fg:x="8325" fg:w="48"/><text x="8.0037%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (47 samples, 0.04%)</title><rect x="7.7546%" y="1493" width="0.0438%" height="15" fill="rgb(233,197,48)" fg:x="8326" fg:w="47"/><text x="8.0046%" y="1503.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (47 samples, 0.04%)</title><rect x="7.7546%" y="1477" width="0.0438%" height="15" fill="rgb(252,181,51)" fg:x="8326" fg:w="47"/><text x="8.0046%" y="1487.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (47 samples, 0.04%)</title><rect x="7.7546%" y="1461" width="0.0438%" height="15" fill="rgb(253,90,19)" fg:x="8326" fg:w="47"/><text x="8.0046%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (13 samples, 0.01%)</title><rect x="7.7863%" y="1445" width="0.0121%" height="15" fill="rgb(215,171,30)" fg:x="8360" fg:w="13"/><text x="8.0363%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="7.7863%" y="1429" width="0.0121%" height="15" fill="rgb(214,222,9)" fg:x="8360" fg:w="13"/><text x="8.0363%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.01%)</title><rect x="7.7863%" y="1413" width="0.0121%" height="15" fill="rgb(223,3,22)" fg:x="8360" fg:w="13"/><text x="8.0363%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (11 samples, 0.01%)</title><rect x="7.7882%" y="1397" width="0.0102%" height="15" fill="rgb(225,196,46)" fg:x="8362" fg:w="11"/><text x="8.0382%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (11 samples, 0.01%)</title><rect x="7.7882%" y="1381" width="0.0102%" height="15" fill="rgb(209,110,37)" fg:x="8362" fg:w="11"/><text x="8.0382%" y="1391.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::read_set (11 samples, 0.01%)</title><rect x="7.7984%" y="1541" width="0.0102%" height="15" fill="rgb(249,89,12)" fg:x="8373" fg:w="11"/><text x="8.0484%" y="1551.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (11 samples, 0.01%)</title><rect x="7.7984%" y="1525" width="0.0102%" height="15" fill="rgb(226,27,33)" fg:x="8373" fg:w="11"/><text x="8.0484%" y="1535.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (13 samples, 0.01%)</title><rect x="7.8087%" y="1525" width="0.0121%" height="15" fill="rgb(213,82,22)" fg:x="8384" fg:w="13"/><text x="8.0587%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.01%)</title><rect x="7.8087%" y="1509" width="0.0121%" height="15" fill="rgb(248,140,0)" fg:x="8384" fg:w="13"/><text x="8.0587%" y="1519.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.01%)</title><rect x="7.8338%" y="1461" width="0.0102%" height="15" fill="rgb(228,106,3)" fg:x="8411" fg:w="11"/><text x="8.0838%" y="1471.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::mark_estimate (43 samples, 0.04%)</title><rect x="7.8087%" y="1541" width="0.0400%" height="15" fill="rgb(209,23,37)" fg:x="8384" fg:w="43"/><text x="8.0587%" y="1551.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (28 samples, 0.03%)</title><rect x="7.8226%" y="1525" width="0.0261%" height="15" fill="rgb(241,93,50)" fg:x="8399" fg:w="28"/><text x="8.0726%" y="1535.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (28 samples, 0.03%)</title><rect x="7.8226%" y="1509" width="0.0261%" height="15" fill="rgb(253,46,43)" fg:x="8399" fg:w="28"/><text x="8.0726%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (16 samples, 0.01%)</title><rect x="7.8338%" y="1493" width="0.0149%" height="15" fill="rgb(226,206,43)" fg:x="8411" fg:w="16"/><text x="8.0838%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.01%)</title><rect x="7.8338%" y="1477" width="0.0149%" height="15" fill="rgb(217,54,7)" fg:x="8411" fg:w="16"/><text x="8.0838%" y="1487.50"></text></g><g><title>prometheus::histogram::Histogram::observe (20 samples, 0.02%)</title><rect x="7.8617%" y="1493" width="0.0186%" height="15" fill="rgb(223,5,52)" fg:x="8441" fg:w="20"/><text x="8.1117%" y="1503.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (20 samples, 0.02%)</title><rect x="7.8617%" y="1477" width="0.0186%" height="15" fill="rgb(206,52,46)" fg:x="8441" fg:w="20"/><text x="8.1117%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (13 samples, 0.01%)</title><rect x="7.8813%" y="1461" width="0.0121%" height="15" fill="rgb(253,136,11)" fg:x="8462" fg:w="13"/><text x="8.1313%" y="1471.50"></text></g><g><title>clock_gettime (13 samples, 0.01%)</title><rect x="7.8813%" y="1445" width="0.0121%" height="15" fill="rgb(208,106,33)" fg:x="8462" fg:w="13"/><text x="8.1313%" y="1455.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.01%)</title><rect x="7.8832%" y="1429" width="0.0102%" height="15" fill="rgb(206,54,4)" fg:x="8464" fg:w="11"/><text x="8.1332%" y="1439.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (19 samples, 0.02%)</title><rect x="7.8804%" y="1477" width="0.0177%" height="15" fill="rgb(213,3,15)" fg:x="8461" fg:w="19"/><text x="8.1304%" y="1487.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="7.8562%" y="1525" width="0.0466%" height="15" fill="rgb(252,211,39)" fg:x="8435" fg:w="50"/><text x="8.1062%" y="1535.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (44 samples, 0.04%)</title><rect x="7.8617%" y="1509" width="0.0410%" height="15" fill="rgb(223,6,36)" fg:x="8441" fg:w="44"/><text x="8.1117%" y="1519.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (24 samples, 0.02%)</title><rect x="7.8804%" y="1493" width="0.0224%" height="15" fill="rgb(252,169,45)" fg:x="8461" fg:w="24"/><text x="8.1304%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (55 samples, 0.05%)</title><rect x="7.8543%" y="1541" width="0.0512%" height="15" fill="rgb(212,48,26)" fg:x="8433" fg:w="55"/><text x="8.1043%" y="1551.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (15 samples, 0.01%)</title><rect x="7.9269%" y="1493" width="0.0140%" height="15" fill="rgb(251,102,48)" fg:x="8511" fg:w="15"/><text x="8.1769%" y="1503.50"></text></g><g><title>clock_gettime (15 samples, 0.01%)</title><rect x="7.9269%" y="1477" width="0.0140%" height="15" fill="rgb(243,208,16)" fg:x="8511" fg:w="15"/><text x="8.1769%" y="1487.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.01%)</title><rect x="7.9269%" y="1461" width="0.0140%" height="15" fill="rgb(219,96,24)" fg:x="8511" fg:w="15"/><text x="8.1769%" y="1471.50"></text></g><g><title>[[vdso]] (13 samples, 0.01%)</title><rect x="7.9288%" y="1445" width="0.0121%" height="15" fill="rgb(219,33,29)" fg:x="8513" fg:w="13"/><text x="8.1788%" y="1455.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate (1,150 samples, 1.07%)</title><rect x="6.8708%" y="1557" width="1.0711%" height="15" fill="rgb(223,176,5)" fg:x="7377" fg:w="1150"/><text x="7.1208%" y="1567.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (25 samples, 0.02%)</title><rect x="7.9186%" y="1541" width="0.0233%" height="15" fill="rgb(228,140,14)" fg:x="8502" fg:w="25"/><text x="8.1686%" y="1551.50"></text></g><g><title>prometheus::histogram::HistogramTimer::new (16 samples, 0.01%)</title><rect x="7.9269%" y="1525" width="0.0149%" height="15" fill="rgb(217,179,31)" fg:x="8511" fg:w="16"/><text x="8.1769%" y="1535.50"></text></g><g><title>prometheus::histogram::Instant::now (16 samples, 0.01%)</title><rect x="7.9269%" y="1509" width="0.0149%" height="15" fill="rgb(230,9,30)" fg:x="8511" fg:w="16"/><text x="8.1769%" y="1519.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (23 samples, 0.02%)</title><rect x="7.9819%" y="1493" width="0.0214%" height="15" fill="rgb(230,136,20)" fg:x="8570" fg:w="23"/><text x="8.2319%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (23 samples, 0.02%)</title><rect x="7.9819%" y="1477" width="0.0214%" height="15" fill="rgb(215,210,22)" fg:x="8570" fg:w="23"/><text x="8.2319%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.02%)</title><rect x="7.9819%" y="1461" width="0.0214%" height="15" fill="rgb(218,43,5)" fg:x="8570" fg:w="23"/><text x="8.2319%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.01%)</title><rect x="7.9903%" y="1445" width="0.0130%" height="15" fill="rgb(216,11,5)" fg:x="8579" fg:w="14"/><text x="8.2403%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.01%)</title><rect x="7.9903%" y="1429" width="0.0130%" height="15" fill="rgb(209,82,29)" fg:x="8579" fg:w="14"/><text x="8.2403%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.01%)</title><rect x="7.9903%" y="1413" width="0.0130%" height="15" fill="rgb(244,115,12)" fg:x="8579" fg:w="14"/><text x="8.2403%" y="1423.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (18 samples, 0.02%)</title><rect x="8.0033%" y="1493" width="0.0168%" height="15" fill="rgb(222,82,18)" fg:x="8593" fg:w="18"/><text x="8.2533%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.02%)</title><rect x="8.0033%" y="1477" width="0.0168%" height="15" fill="rgb(249,227,8)" fg:x="8593" fg:w="18"/><text x="8.2533%" y="1487.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (63 samples, 0.06%)</title><rect x="7.9782%" y="1509" width="0.0587%" height="15" fill="rgb(253,141,45)" fg:x="8566" fg:w="63"/><text x="8.2282%" y="1519.50"></text></g><g><title>std::time::Instant::elapsed (18 samples, 0.02%)</title><rect x="8.0201%" y="1493" width="0.0168%" height="15" fill="rgb(234,184,4)" fg:x="8611" fg:w="18"/><text x="8.2701%" y="1503.50"></text></g><g><title>std::time::Instant::now (14 samples, 0.01%)</title><rect x="8.0238%" y="1477" width="0.0130%" height="15" fill="rgb(218,194,23)" fg:x="8615" fg:w="14"/><text x="8.2738%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (14 samples, 0.01%)</title><rect x="8.0238%" y="1461" width="0.0130%" height="15" fill="rgb(235,66,41)" fg:x="8615" fg:w="14"/><text x="8.2738%" y="1471.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (14 samples, 0.01%)</title><rect x="8.0238%" y="1445" width="0.0130%" height="15" fill="rgb(245,217,1)" fg:x="8615" fg:w="14"/><text x="8.2738%" y="1455.50"></text></g><g><title>clock_gettime (12 samples, 0.01%)</title><rect x="8.0257%" y="1429" width="0.0112%" height="15" fill="rgb(229,91,1)" fg:x="8617" fg:w="12"/><text x="8.2757%" y="1439.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.01%)</title><rect x="8.0257%" y="1413" width="0.0112%" height="15" fill="rgb(207,101,30)" fg:x="8617" fg:w="12"/><text x="8.2757%" y="1423.50"></text></g><g><title>[[vdso]] (12 samples, 0.01%)</title><rect x="8.0257%" y="1397" width="0.0112%" height="15" fill="rgb(223,82,49)" fg:x="8617" fg:w="12"/><text x="8.2757%" y="1407.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.01%)</title><rect x="8.0443%" y="1429" width="0.0112%" height="15" fill="rgb(218,167,17)" fg:x="8637" fg:w="12"/><text x="8.2943%" y="1439.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.01%)</title><rect x="8.0443%" y="1413" width="0.0112%" height="15" fill="rgb(208,103,14)" fg:x="8637" fg:w="12"/><text x="8.2943%" y="1423.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (22 samples, 0.02%)</title><rect x="8.0415%" y="1493" width="0.0205%" height="15" fill="rgb(238,20,8)" fg:x="8634" fg:w="22"/><text x="8.2915%" y="1503.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (22 samples, 0.02%)</title><rect x="8.0415%" y="1477" width="0.0205%" height="15" fill="rgb(218,80,54)" fg:x="8634" fg:w="22"/><text x="8.2915%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (22 samples, 0.02%)</title><rect x="8.0415%" y="1461" width="0.0205%" height="15" fill="rgb(240,144,17)" fg:x="8634" fg:w="22"/><text x="8.2915%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.02%)</title><rect x="8.0415%" y="1445" width="0.0205%" height="15" fill="rgb(245,27,50)" fg:x="8634" fg:w="22"/><text x="8.2915%" y="1455.50"></text></g><g><title>hashbrown::map::make_insert_hash (11 samples, 0.01%)</title><rect x="8.0657%" y="1461" width="0.0102%" height="15" fill="rgb(251,51,7)" fg:x="8660" fg:w="11"/><text x="8.3157%" y="1471.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="8.0657%" y="1445" width="0.0102%" height="15" fill="rgb(245,217,29)" fg:x="8660" fg:w="11"/><text x="8.3157%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.01%)</title><rect x="8.0778%" y="1413" width="0.0102%" height="15" fill="rgb(221,176,29)" fg:x="8673" fg:w="11"/><text x="8.3278%" y="1423.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (31 samples, 0.03%)</title><rect x="8.0620%" y="1493" width="0.0289%" height="15" fill="rgb(212,180,24)" fg:x="8656" fg:w="31"/><text x="8.3120%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.03%)</title><rect x="8.0629%" y="1477" width="0.0279%" height="15" fill="rgb(254,24,2)" fg:x="8657" fg:w="30"/><text x="8.3129%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (16 samples, 0.01%)</title><rect x="8.0760%" y="1461" width="0.0149%" height="15" fill="rgb(230,100,2)" fg:x="8671" fg:w="16"/><text x="8.3260%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.01%)</title><rect x="8.0760%" y="1445" width="0.0149%" height="15" fill="rgb(219,142,25)" fg:x="8671" fg:w="16"/><text x="8.3260%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.01%)</title><rect x="8.0760%" y="1429" width="0.0149%" height="15" fill="rgb(240,73,43)" fg:x="8671" fg:w="16"/><text x="8.3260%" y="1439.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (81 samples, 0.08%)</title><rect x="8.0368%" y="1509" width="0.0754%" height="15" fill="rgb(214,114,15)" fg:x="8629" fg:w="81"/><text x="8.2868%" y="1519.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (23 samples, 0.02%)</title><rect x="8.0909%" y="1493" width="0.0214%" height="15" fill="rgb(207,130,4)" fg:x="8687" fg:w="23"/><text x="8.3409%" y="1503.50"></text></g><g><title>clock_gettime (22 samples, 0.02%)</title><rect x="8.0918%" y="1477" width="0.0205%" height="15" fill="rgb(221,25,40)" fg:x="8688" fg:w="22"/><text x="8.3418%" y="1487.50"></text></g><g><title>__vdso_clock_gettime (20 samples, 0.02%)</title><rect x="8.0937%" y="1461" width="0.0186%" height="15" fill="rgb(241,184,7)" fg:x="8690" fg:w="20"/><text x="8.3437%" y="1471.50"></text></g><g><title>[[vdso]] (17 samples, 0.02%)</title><rect x="8.0965%" y="1445" width="0.0158%" height="15" fill="rgb(235,159,4)" fg:x="8693" fg:w="17"/><text x="8.3465%" y="1455.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_incarnate (192 samples, 0.18%)</title><rect x="7.9623%" y="1525" width="0.1788%" height="15" fill="rgb(214,87,48)" fg:x="8549" fg:w="192"/><text x="8.2123%" y="1535.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (20 samples, 0.02%)</title><rect x="8.1225%" y="1509" width="0.0186%" height="15" fill="rgb(246,198,24)" fg:x="8721" fg:w="20"/><text x="8.3725%" y="1519.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (20 samples, 0.02%)</title><rect x="8.1225%" y="1493" width="0.0186%" height="15" fill="rgb(209,66,40)" fg:x="8721" fg:w="20"/><text x="8.3725%" y="1503.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_execute_next_version (201 samples, 0.19%)</title><rect x="7.9567%" y="1541" width="0.1872%" height="15" fill="rgb(233,147,39)" fg:x="8543" fg:w="201"/><text x="8.2067%" y="1551.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::is_executed (12 samples, 0.01%)</title><rect x="8.1440%" y="1525" width="0.0112%" height="15" fill="rgb(231,145,52)" fg:x="8744" fg:w="12"/><text x="8.3940%" y="1535.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_validate_next_version (20 samples, 0.02%)</title><rect x="8.1440%" y="1541" width="0.0186%" height="15" fill="rgb(206,20,26)" fg:x="8744" fg:w="20"/><text x="8.3940%" y="1551.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::unpack_validation_idx (17 samples, 0.02%)</title><rect x="8.1626%" y="1541" width="0.0158%" height="15" fill="rgb(238,220,4)" fg:x="8764" fg:w="17"/><text x="8.4126%" y="1551.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::next_task (267 samples, 0.25%)</title><rect x="7.9418%" y="1557" width="0.2487%" height="15" fill="rgb(252,195,42)" fg:x="8527" fg:w="267"/><text x="8.1918%" y="1567.50"></text></g><g><title>core::hint::spin_loop (13 samples, 0.01%)</title><rect x="8.1784%" y="1541" width="0.0121%" height="15" fill="rgb(209,10,6)" fg:x="8781" fg:w="13"/><text x="8.4284%" y="1551.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13 samples, 0.01%)</title><rect x="8.1784%" y="1525" width="0.0121%" height="15" fill="rgb(229,3,52)" fg:x="8781" fg:w="13"/><text x="8.4284%" y="1535.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_commit (28 samples, 0.03%)</title><rect x="8.1905%" y="1557" width="0.0261%" height="15" fill="rgb(253,49,37)" fg:x="8794" fg:w="28"/><text x="8.4405%" y="1567.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.02%)</title><rect x="8.2241%" y="1461" width="0.0177%" height="15" fill="rgb(240,103,49)" fg:x="8830" fg:w="19"/><text x="8.4741%" y="1471.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.02%)</title><rect x="8.2250%" y="1445" width="0.0168%" height="15" fill="rgb(250,182,30)" fg:x="8831" fg:w="18"/><text x="8.4750%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (30 samples, 0.03%)</title><rect x="8.2417%" y="1413" width="0.0279%" height="15" fill="rgb(248,8,30)" fg:x="8849" fg:w="30"/><text x="8.4917%" y="1423.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (30 samples, 0.03%)</title><rect x="8.2417%" y="1397" width="0.0279%" height="15" fill="rgb(237,120,30)" fg:x="8849" fg:w="30"/><text x="8.4917%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (29 samples, 0.03%)</title><rect x="8.2427%" y="1381" width="0.0270%" height="15" fill="rgb(221,146,34)" fg:x="8850" fg:w="29"/><text x="8.4927%" y="1391.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (29 samples, 0.03%)</title><rect x="8.2427%" y="1365" width="0.0270%" height="15" fill="rgb(242,55,13)" fg:x="8850" fg:w="29"/><text x="8.4927%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.03%)</title><rect x="8.2427%" y="1349" width="0.0270%" height="15" fill="rgb(242,112,31)" fg:x="8850" fg:w="29"/><text x="8.4927%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (29 samples, 0.03%)</title><rect x="8.2427%" y="1333" width="0.0270%" height="15" fill="rgb(249,192,27)" fg:x="8850" fg:w="29"/><text x="8.4927%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (29 samples, 0.03%)</title><rect x="8.2427%" y="1317" width="0.0270%" height="15" fill="rgb(208,204,44)" fg:x="8850" fg:w="29"/><text x="8.4927%" y="1327.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="8.2520%" y="1301" width="0.0177%" height="15" fill="rgb(208,93,54)" fg:x="8860" fg:w="19"/><text x="8.5020%" y="1311.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_counter (59 samples, 0.05%)</title><rect x="8.2241%" y="1525" width="0.0550%" height="15" fill="rgb(242,1,31)" fg:x="8830" fg:w="59"/><text x="8.4741%" y="1535.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (59 samples, 0.05%)</title><rect x="8.2241%" y="1509" width="0.0550%" height="15" fill="rgb(241,83,25)" fg:x="8830" fg:w="59"/><text x="8.4741%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (59 samples, 0.05%)</title><rect x="8.2241%" y="1493" width="0.0550%" height="15" fill="rgb(205,169,50)" fg:x="8830" fg:w="59"/><text x="8.4741%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (59 samples, 0.05%)</title><rect x="8.2241%" y="1477" width="0.0550%" height="15" fill="rgb(239,186,37)" fg:x="8830" fg:w="59"/><text x="8.4741%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.04%)</title><rect x="8.2417%" y="1461" width="0.0373%" height="15" fill="rgb(205,221,10)" fg:x="8849" fg:w="40"/><text x="8.4917%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.04%)</title><rect x="8.2417%" y="1445" width="0.0373%" height="15" fill="rgb(218,196,15)" fg:x="8849" fg:w="40"/><text x="8.4917%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (40 samples, 0.04%)</title><rect x="8.2417%" y="1429" width="0.0373%" height="15" fill="rgb(218,196,35)" fg:x="8849" fg:w="40"/><text x="8.4917%" y="1439.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (29 samples, 0.03%)</title><rect x="8.2790%" y="1525" width="0.0270%" height="15" fill="rgb(233,63,24)" fg:x="8889" fg:w="29"/><text x="8.5290%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (29 samples, 0.03%)</title><rect x="8.2790%" y="1509" width="0.0270%" height="15" fill="rgb(225,8,4)" fg:x="8889" fg:w="29"/><text x="8.5290%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.03%)</title><rect x="8.2790%" y="1493" width="0.0270%" height="15" fill="rgb(234,105,35)" fg:x="8889" fg:w="29"/><text x="8.5290%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.02%)</title><rect x="8.2883%" y="1477" width="0.0177%" height="15" fill="rgb(236,21,32)" fg:x="8899" fg:w="19"/><text x="8.5383%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.02%)</title><rect x="8.2883%" y="1461" width="0.0177%" height="15" fill="rgb(228,109,6)" fg:x="8899" fg:w="19"/><text x="8.5383%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.02%)</title><rect x="8.2883%" y="1445" width="0.0177%" height="15" fill="rgb(229,215,31)" fg:x="8899" fg:w="19"/><text x="8.5383%" y="1455.50"></text></g><g><title>hashbrown::map::make_insert_hash (18 samples, 0.02%)</title><rect x="8.3163%" y="1493" width="0.0168%" height="15" fill="rgb(221,52,54)" fg:x="8929" fg:w="18"/><text x="8.5663%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.02%)</title><rect x="8.3163%" y="1477" width="0.0168%" height="15" fill="rgb(252,129,43)" fg:x="8929" fg:w="18"/><text x="8.5663%" y="1487.50"></text></g><g><title>aptos_types::transaction::Profiler::count_one (134 samples, 0.12%)</title><rect x="8.2175%" y="1557" width="0.1248%" height="15" fill="rgb(248,183,27)" fg:x="8823" fg:w="134"/><text x="8.4675%" y="1567.50"></text></g><g><title>aptos_types::transaction::Profiler::count (129 samples, 0.12%)</title><rect x="8.2222%" y="1541" width="0.1201%" height="15" fill="rgb(250,0,22)" fg:x="8828" fg:w="129"/><text x="8.4722%" y="1551.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (39 samples, 0.04%)</title><rect x="8.3060%" y="1525" width="0.0363%" height="15" fill="rgb(213,166,10)" fg:x="8918" fg:w="39"/><text x="8.5560%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (39 samples, 0.04%)</title><rect x="8.3060%" y="1509" width="0.0363%" height="15" fill="rgb(207,163,36)" fg:x="8918" fg:w="39"/><text x="8.5560%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="8.3693%" y="1365" width="0.0102%" height="15" fill="rgb(208,122,22)" fg:x="8986" fg:w="11"/><text x="8.6193%" y="1375.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.03%)</title><rect x="8.3572%" y="1493" width="0.0317%" height="15" fill="rgb(207,104,49)" fg:x="8973" fg:w="34"/><text x="8.6072%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34 samples, 0.03%)</title><rect x="8.3572%" y="1477" width="0.0317%" height="15" fill="rgb(248,211,50)" fg:x="8973" fg:w="34"/><text x="8.6072%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.02%)</title><rect x="8.3693%" y="1461" width="0.0196%" height="15" fill="rgb(217,13,45)" fg:x="8986" fg:w="21"/><text x="8.6193%" y="1471.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="8.3693%" y="1445" width="0.0196%" height="15" fill="rgb(211,216,49)" fg:x="8986" fg:w="21"/><text x="8.6193%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (21 samples, 0.02%)</title><rect x="8.3693%" y="1429" width="0.0196%" height="15" fill="rgb(221,58,53)" fg:x="8986" fg:w="21"/><text x="8.6193%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (21 samples, 0.02%)</title><rect x="8.3693%" y="1413" width="0.0196%" height="15" fill="rgb(220,112,41)" fg:x="8986" fg:w="21"/><text x="8.6193%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (21 samples, 0.02%)</title><rect x="8.3693%" y="1397" width="0.0196%" height="15" fill="rgb(236,38,28)" fg:x="8986" fg:w="21"/><text x="8.6193%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (21 samples, 0.02%)</title><rect x="8.3693%" y="1381" width="0.0196%" height="15" fill="rgb(227,195,22)" fg:x="8986" fg:w="21"/><text x="8.6193%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (41 samples, 0.04%)</title><rect x="8.3926%" y="1445" width="0.0382%" height="15" fill="rgb(214,55,33)" fg:x="9011" fg:w="41"/><text x="8.6426%" y="1455.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (41 samples, 0.04%)</title><rect x="8.3926%" y="1429" width="0.0382%" height="15" fill="rgb(248,80,13)" fg:x="9011" fg:w="41"/><text x="8.6426%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (40 samples, 0.04%)</title><rect x="8.3936%" y="1413" width="0.0373%" height="15" fill="rgb(238,52,6)" fg:x="9012" fg:w="40"/><text x="8.6436%" y="1423.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (40 samples, 0.04%)</title><rect x="8.3936%" y="1397" width="0.0373%" height="15" fill="rgb(224,198,47)" fg:x="9012" fg:w="40"/><text x="8.6436%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (40 samples, 0.04%)</title><rect x="8.3936%" y="1381" width="0.0373%" height="15" fill="rgb(233,171,20)" fg:x="9012" fg:w="40"/><text x="8.6436%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (40 samples, 0.04%)</title><rect x="8.3936%" y="1365" width="0.0373%" height="15" fill="rgb(241,30,25)" fg:x="9012" fg:w="40"/><text x="8.6436%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (40 samples, 0.04%)</title><rect x="8.3936%" y="1349" width="0.0373%" height="15" fill="rgb(207,171,38)" fg:x="9012" fg:w="40"/><text x="8.6436%" y="1359.50"></text></g><g><title>[libc.so.6] (30 samples, 0.03%)</title><rect x="8.4029%" y="1333" width="0.0279%" height="15" fill="rgb(234,70,1)" fg:x="9022" fg:w="30"/><text x="8.6529%" y="1343.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (85 samples, 0.08%)</title><rect x="8.3572%" y="1541" width="0.0792%" height="15" fill="rgb(232,178,18)" fg:x="8973" fg:w="85"/><text x="8.6072%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (85 samples, 0.08%)</title><rect x="8.3572%" y="1525" width="0.0792%" height="15" fill="rgb(241,78,40)" fg:x="8973" fg:w="85"/><text x="8.6072%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (85 samples, 0.08%)</title><rect x="8.3572%" y="1509" width="0.0792%" height="15" fill="rgb(222,35,25)" fg:x="8973" fg:w="85"/><text x="8.6072%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (51 samples, 0.05%)</title><rect x="8.3889%" y="1493" width="0.0475%" height="15" fill="rgb(207,92,16)" fg:x="9007" fg:w="51"/><text x="8.6389%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (51 samples, 0.05%)</title><rect x="8.3889%" y="1477" width="0.0475%" height="15" fill="rgb(216,59,51)" fg:x="9007" fg:w="51"/><text x="8.6389%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (51 samples, 0.05%)</title><rect x="8.3889%" y="1461" width="0.0475%" height="15" fill="rgb(213,80,28)" fg:x="9007" fg:w="51"/><text x="8.6389%" y="1471.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.02%)</title><rect x="8.4439%" y="1509" width="0.0158%" height="15" fill="rgb(220,93,7)" fg:x="9066" fg:w="17"/><text x="8.6939%" y="1519.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="8.4439%" y="1493" width="0.0158%" height="15" fill="rgb(225,24,44)" fg:x="9066" fg:w="17"/><text x="8.6939%" y="1503.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (40 samples, 0.04%)</title><rect x="8.4364%" y="1541" width="0.0373%" height="15" fill="rgb(243,74,40)" fg:x="9058" fg:w="40"/><text x="8.6864%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (40 samples, 0.04%)</title><rect x="8.4364%" y="1525" width="0.0373%" height="15" fill="rgb(228,39,7)" fg:x="9058" fg:w="40"/><text x="8.6864%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.01%)</title><rect x="8.4597%" y="1509" width="0.0140%" height="15" fill="rgb(227,79,8)" fg:x="9083" fg:w="15"/><text x="8.7097%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.01%)</title><rect x="8.4597%" y="1493" width="0.0140%" height="15" fill="rgb(236,58,11)" fg:x="9083" fg:w="15"/><text x="8.7097%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.01%)</title><rect x="8.4597%" y="1477" width="0.0140%" height="15" fill="rgb(249,63,35)" fg:x="9083" fg:w="15"/><text x="8.7097%" y="1487.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (12 samples, 0.01%)</title><rect x="8.4765%" y="1525" width="0.0112%" height="15" fill="rgb(252,114,16)" fg:x="9101" fg:w="12"/><text x="8.7265%" y="1535.50"></text></g><g><title>std::time::Instant::duration_since (12 samples, 0.01%)</title><rect x="8.4765%" y="1509" width="0.0112%" height="15" fill="rgb(254,151,24)" fg:x="9101" fg:w="12"/><text x="8.7265%" y="1519.50"></text></g><g><title>std::time::Instant::checked_duration_since (11 samples, 0.01%)</title><rect x="8.4774%" y="1493" width="0.0102%" height="15" fill="rgb(253,54,39)" fg:x="9102" fg:w="11"/><text x="8.7274%" y="1503.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (11 samples, 0.01%)</title><rect x="8.4774%" y="1477" width="0.0102%" height="15" fill="rgb(243,25,45)" fg:x="9102" fg:w="11"/><text x="8.7274%" y="1487.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (174 samples, 0.16%)</title><rect x="8.3423%" y="1557" width="0.1621%" height="15" fill="rgb(234,134,9)" fg:x="8957" fg:w="174"/><text x="8.5923%" y="1567.50"></text></g><g><title>std::time::Instant::elapsed (33 samples, 0.03%)</title><rect x="8.4737%" y="1541" width="0.0307%" height="15" fill="rgb(227,166,31)" fg:x="9098" fg:w="33"/><text x="8.7237%" y="1551.50"></text></g><g><title>std::time::Instant::now (18 samples, 0.02%)</title><rect x="8.4876%" y="1525" width="0.0168%" height="15" fill="rgb(245,143,41)" fg:x="9113" fg:w="18"/><text x="8.7376%" y="1535.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (18 samples, 0.02%)</title><rect x="8.4876%" y="1509" width="0.0168%" height="15" fill="rgb(238,181,32)" fg:x="9113" fg:w="18"/><text x="8.7376%" y="1519.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (18 samples, 0.02%)</title><rect x="8.4876%" y="1493" width="0.0168%" height="15" fill="rgb(224,113,18)" fg:x="9113" fg:w="18"/><text x="8.7376%" y="1503.50"></text></g><g><title>clock_gettime (18 samples, 0.02%)</title><rect x="8.4876%" y="1477" width="0.0168%" height="15" fill="rgb(240,229,28)" fg:x="9113" fg:w="18"/><text x="8.7376%" y="1487.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.02%)</title><rect x="8.4886%" y="1461" width="0.0158%" height="15" fill="rgb(250,185,3)" fg:x="9114" fg:w="17"/><text x="8.7386%" y="1471.50"></text></g><g><title>[[vdso]] (15 samples, 0.01%)</title><rect x="8.4904%" y="1445" width="0.0140%" height="15" fill="rgb(212,59,25)" fg:x="9116" fg:w="15"/><text x="8.7404%" y="1455.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="8.5156%" y="1477" width="0.0158%" height="15" fill="rgb(221,87,20)" fg:x="9143" fg:w="17"/><text x="8.7656%" y="1487.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="8.5156%" y="1461" width="0.0158%" height="15" fill="rgb(213,74,28)" fg:x="9143" fg:w="17"/><text x="8.7656%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (18 samples, 0.02%)</title><rect x="8.5323%" y="1429" width="0.0168%" height="15" fill="rgb(224,132,34)" fg:x="9161" fg:w="18"/><text x="8.7823%" y="1439.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (18 samples, 0.02%)</title><rect x="8.5323%" y="1413" width="0.0168%" height="15" fill="rgb(222,101,24)" fg:x="9161" fg:w="18"/><text x="8.7823%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="8.5323%" y="1397" width="0.0168%" height="15" fill="rgb(254,142,4)" fg:x="9161" fg:w="18"/><text x="8.7823%" y="1407.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (18 samples, 0.02%)</title><rect x="8.5323%" y="1381" width="0.0168%" height="15" fill="rgb(230,229,49)" fg:x="9161" fg:w="18"/><text x="8.7823%" y="1391.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.02%)</title><rect x="8.5323%" y="1365" width="0.0168%" height="15" fill="rgb(238,70,47)" fg:x="9161" fg:w="18"/><text x="8.7823%" y="1375.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (18 samples, 0.02%)</title><rect x="8.5323%" y="1349" width="0.0168%" height="15" fill="rgb(231,160,17)" fg:x="9161" fg:w="18"/><text x="8.7823%" y="1359.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18 samples, 0.02%)</title><rect x="8.5323%" y="1333" width="0.0168%" height="15" fill="rgb(218,68,53)" fg:x="9161" fg:w="18"/><text x="8.7823%" y="1343.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="8.5351%" y="1317" width="0.0140%" height="15" fill="rgb(236,111,10)" fg:x="9164" fg:w="15"/><text x="8.7851%" y="1327.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (39 samples, 0.04%)</title><rect x="8.5156%" y="1525" width="0.0363%" height="15" fill="rgb(224,34,41)" fg:x="9143" fg:w="39"/><text x="8.7656%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (39 samples, 0.04%)</title><rect x="8.5156%" y="1509" width="0.0363%" height="15" fill="rgb(241,118,19)" fg:x="9143" fg:w="39"/><text x="8.7656%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.04%)</title><rect x="8.5156%" y="1493" width="0.0363%" height="15" fill="rgb(238,129,25)" fg:x="9143" fg:w="39"/><text x="8.7656%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.02%)</title><rect x="8.5314%" y="1477" width="0.0205%" height="15" fill="rgb(238,22,31)" fg:x="9160" fg:w="22"/><text x="8.7814%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.02%)</title><rect x="8.5314%" y="1461" width="0.0205%" height="15" fill="rgb(222,174,48)" fg:x="9160" fg:w="22"/><text x="8.7814%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (22 samples, 0.02%)</title><rect x="8.5314%" y="1445" width="0.0205%" height="15" fill="rgb(206,152,40)" fg:x="9160" fg:w="22"/><text x="8.7814%" y="1455.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (40 samples, 0.04%)</title><rect x="8.5156%" y="1541" width="0.0373%" height="15" fill="rgb(218,99,54)" fg:x="9143" fg:w="40"/><text x="8.7656%" y="1551.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (21 samples, 0.02%)</title><rect x="8.5715%" y="1445" width="0.0196%" height="15" fill="rgb(220,174,26)" fg:x="9203" fg:w="21"/><text x="8.8215%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (20 samples, 0.02%)</title><rect x="8.5724%" y="1429" width="0.0186%" height="15" fill="rgb(245,116,9)" fg:x="9204" fg:w="20"/><text x="8.8224%" y="1439.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (20 samples, 0.02%)</title><rect x="8.5724%" y="1413" width="0.0186%" height="15" fill="rgb(209,72,35)" fg:x="9204" fg:w="20"/><text x="8.8224%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.02%)</title><rect x="8.5724%" y="1397" width="0.0186%" height="15" fill="rgb(226,126,21)" fg:x="9204" fg:w="20"/><text x="8.8224%" y="1407.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (20 samples, 0.02%)</title><rect x="8.5724%" y="1381" width="0.0186%" height="15" fill="rgb(227,192,1)" fg:x="9204" fg:w="20"/><text x="8.8224%" y="1391.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20 samples, 0.02%)</title><rect x="8.5724%" y="1365" width="0.0186%" height="15" fill="rgb(237,180,29)" fg:x="9204" fg:w="20"/><text x="8.8224%" y="1375.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="8.5780%" y="1349" width="0.0130%" height="15" fill="rgb(230,197,35)" fg:x="9210" fg:w="14"/><text x="8.8280%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.02%)</title><rect x="8.5715%" y="1461" width="0.0205%" height="15" fill="rgb(246,193,31)" fg:x="9203" fg:w="22"/><text x="8.8215%" y="1471.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (44 samples, 0.04%)</title><rect x="8.5528%" y="1541" width="0.0410%" height="15" fill="rgb(241,36,4)" fg:x="9183" fg:w="44"/><text x="8.8028%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (43 samples, 0.04%)</title><rect x="8.5538%" y="1525" width="0.0400%" height="15" fill="rgb(241,130,17)" fg:x="9184" fg:w="43"/><text x="8.8038%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (26 samples, 0.02%)</title><rect x="8.5696%" y="1509" width="0.0242%" height="15" fill="rgb(206,137,32)" fg:x="9201" fg:w="26"/><text x="8.8196%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.02%)</title><rect x="8.5696%" y="1493" width="0.0242%" height="15" fill="rgb(237,228,51)" fg:x="9201" fg:w="26"/><text x="8.8196%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (26 samples, 0.02%)</title><rect x="8.5696%" y="1477" width="0.0242%" height="15" fill="rgb(243,6,42)" fg:x="9201" fg:w="26"/><text x="8.8196%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (24 samples, 0.02%)</title><rect x="8.5938%" y="1541" width="0.0224%" height="15" fill="rgb(251,74,28)" fg:x="9227" fg:w="24"/><text x="8.8438%" y="1551.50"></text></g><g><title>clock_gettime (23 samples, 0.02%)</title><rect x="8.5947%" y="1525" width="0.0214%" height="15" fill="rgb(218,20,49)" fg:x="9228" fg:w="23"/><text x="8.8447%" y="1535.50"></text></g><g><title>__vdso_clock_gettime (23 samples, 0.02%)</title><rect x="8.5947%" y="1509" width="0.0214%" height="15" fill="rgb(238,28,14)" fg:x="9228" fg:w="23"/><text x="8.8447%" y="1519.50"></text></g><g><title>[[vdso]] (15 samples, 0.01%)</title><rect x="8.6022%" y="1493" width="0.0140%" height="15" fill="rgb(229,40,46)" fg:x="9236" fg:w="15"/><text x="8.8522%" y="1503.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (122 samples, 0.11%)</title><rect x="8.5044%" y="1557" width="0.1136%" height="15" fill="rgb(244,195,20)" fg:x="9131" fg:w="122"/><text x="8.7544%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.04%)</title><rect x="8.6190%" y="1493" width="0.0354%" height="15" fill="rgb(253,56,35)" fg:x="9254" fg:w="38"/><text x="8.8690%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.04%)</title><rect x="8.6190%" y="1477" width="0.0354%" height="15" fill="rgb(210,149,44)" fg:x="9254" fg:w="38"/><text x="8.8690%" y="1487.50"></text></g><g><title>cfree (28 samples, 0.03%)</title><rect x="8.6283%" y="1461" width="0.0261%" height="15" fill="rgb(240,135,12)" fg:x="9264" fg:w="28"/><text x="8.8783%" y="1471.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="8.6404%" y="1445" width="0.0140%" height="15" fill="rgb(251,24,50)" fg:x="9277" fg:w="15"/><text x="8.8904%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (47 samples, 0.04%)</title><rect x="8.6180%" y="1557" width="0.0438%" height="15" fill="rgb(243,200,47)" fg:x="9253" fg:w="47"/><text x="8.8680%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (47 samples, 0.04%)</title><rect x="8.6180%" y="1541" width="0.0438%" height="15" fill="rgb(224,166,26)" fg:x="9253" fg:w="47"/><text x="8.8680%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (47 samples, 0.04%)</title><rect x="8.6180%" y="1525" width="0.0438%" height="15" fill="rgb(233,0,47)" fg:x="9253" fg:w="47"/><text x="8.8680%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="8.6180%" y="1509" width="0.0438%" height="15" fill="rgb(253,80,5)" fg:x="9253" fg:w="47"/><text x="8.8680%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (36 samples, 0.03%)</title><rect x="8.6758%" y="1237" width="0.0335%" height="15" fill="rgb(214,133,25)" fg:x="9315" fg:w="36"/><text x="8.9258%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (36 samples, 0.03%)</title><rect x="8.6758%" y="1221" width="0.0335%" height="15" fill="rgb(209,27,14)" fg:x="9315" fg:w="36"/><text x="8.9258%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="8.6758%" y="1205" width="0.0335%" height="15" fill="rgb(219,102,51)" fg:x="9315" fg:w="36"/><text x="8.9258%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.03%)</title><rect x="8.6758%" y="1189" width="0.0335%" height="15" fill="rgb(237,18,16)" fg:x="9315" fg:w="36"/><text x="8.9258%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.03%)</title><rect x="8.6758%" y="1173" width="0.0335%" height="15" fill="rgb(241,85,17)" fg:x="9315" fg:w="36"/><text x="8.9258%" y="1183.50"></text></g><g><title>cfree (36 samples, 0.03%)</title><rect x="8.6758%" y="1157" width="0.0335%" height="15" fill="rgb(236,90,42)" fg:x="9315" fg:w="36"/><text x="8.9258%" y="1167.50"></text></g><g><title>[libc.so.6] (28 samples, 0.03%)</title><rect x="8.6832%" y="1141" width="0.0261%" height="15" fill="rgb(249,57,21)" fg:x="9323" fg:w="28"/><text x="8.9332%" y="1151.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="8.6953%" y="1125" width="0.0140%" height="15" fill="rgb(243,12,36)" fg:x="9336" fg:w="15"/><text x="8.9453%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="8.7093%" y="1221" width="0.0251%" height="15" fill="rgb(253,128,47)" fg:x="9351" fg:w="27"/><text x="8.9593%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (27 samples, 0.03%)</title><rect x="8.7093%" y="1205" width="0.0251%" height="15" fill="rgb(207,33,20)" fg:x="9351" fg:w="27"/><text x="8.9593%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (26 samples, 0.02%)</title><rect x="8.7102%" y="1189" width="0.0242%" height="15" fill="rgb(233,215,35)" fg:x="9352" fg:w="26"/><text x="8.9602%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (42 samples, 0.04%)</title><rect x="8.7093%" y="1237" width="0.0391%" height="15" fill="rgb(249,188,52)" fg:x="9351" fg:w="42"/><text x="8.9593%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.01%)</title><rect x="8.7344%" y="1221" width="0.0140%" height="15" fill="rgb(225,12,32)" fg:x="9378" fg:w="15"/><text x="8.9844%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="8.7344%" y="1205" width="0.0140%" height="15" fill="rgb(247,98,14)" fg:x="9378" fg:w="15"/><text x="8.9844%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="8.7344%" y="1189" width="0.0140%" height="15" fill="rgb(247,219,48)" fg:x="9378" fg:w="15"/><text x="8.9844%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="8.7344%" y="1173" width="0.0140%" height="15" fill="rgb(253,60,48)" fg:x="9378" fg:w="15"/><text x="8.9844%" y="1183.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="8.7344%" y="1157" width="0.0140%" height="15" fill="rgb(245,15,52)" fg:x="9378" fg:w="15"/><text x="8.9844%" y="1167.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="8.7354%" y="1141" width="0.0130%" height="15" fill="rgb(220,133,28)" fg:x="9379" fg:w="14"/><text x="8.9854%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="8.7484%" y="1205" width="0.0224%" height="15" fill="rgb(217,180,4)" fg:x="9393" fg:w="24"/><text x="8.9984%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (23 samples, 0.02%)</title><rect x="8.7493%" y="1189" width="0.0214%" height="15" fill="rgb(251,24,1)" fg:x="9394" fg:w="23"/><text x="8.9993%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (22 samples, 0.02%)</title><rect x="8.7503%" y="1173" width="0.0205%" height="15" fill="rgb(212,185,49)" fg:x="9395" fg:w="22"/><text x="9.0003%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (31 samples, 0.03%)</title><rect x="8.7484%" y="1237" width="0.0289%" height="15" fill="rgb(215,175,22)" fg:x="9393" fg:w="31"/><text x="8.9984%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (31 samples, 0.03%)</title><rect x="8.7484%" y="1221" width="0.0289%" height="15" fill="rgb(250,205,14)" fg:x="9393" fg:w="31"/><text x="8.9984%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (117 samples, 0.11%)</title><rect x="8.6739%" y="1269" width="0.1090%" height="15" fill="rgb(225,211,22)" fg:x="9313" fg:w="117"/><text x="8.9239%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (116 samples, 0.11%)</title><rect x="8.6748%" y="1253" width="0.1080%" height="15" fill="rgb(251,179,42)" fg:x="9314" fg:w="116"/><text x="8.9248%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (131 samples, 0.12%)</title><rect x="8.6627%" y="1349" width="0.1220%" height="15" fill="rgb(208,216,51)" fg:x="9301" fg:w="131"/><text x="8.9127%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.12%)</title><rect x="8.6627%" y="1333" width="0.1220%" height="15" fill="rgb(235,36,11)" fg:x="9301" fg:w="131"/><text x="8.9127%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (131 samples, 0.12%)</title><rect x="8.6627%" y="1317" width="0.1220%" height="15" fill="rgb(213,189,28)" fg:x="9301" fg:w="131"/><text x="8.9127%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (131 samples, 0.12%)</title><rect x="8.6627%" y="1301" width="0.1220%" height="15" fill="rgb(227,203,42)" fg:x="9301" fg:w="131"/><text x="8.9127%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.12%)</title><rect x="8.6627%" y="1285" width="0.1220%" height="15" fill="rgb(244,72,36)" fg:x="9301" fg:w="131"/><text x="8.9127%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="8.7847%" y="1349" width="0.0214%" height="15" fill="rgb(213,53,17)" fg:x="9432" fg:w="23"/><text x="9.0347%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="8.7847%" y="1333" width="0.0214%" height="15" fill="rgb(207,167,3)" fg:x="9432" fg:w="23"/><text x="9.0347%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;]&gt; (23 samples, 0.02%)</title><rect x="8.7847%" y="1317" width="0.0214%" height="15" fill="rgb(216,98,30)" fg:x="9432" fg:w="23"/><text x="9.0347%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;&gt; (23 samples, 0.02%)</title><rect x="8.7847%" y="1301" width="0.0214%" height="15" fill="rgb(236,123,15)" fg:x="9432" fg:w="23"/><text x="9.0347%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="8.7847%" y="1285" width="0.0214%" height="15" fill="rgb(248,81,50)" fg:x="9432" fg:w="23"/><text x="9.0347%" y="1295.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.02%)</title><rect x="8.7857%" y="1269" width="0.0205%" height="15" fill="rgb(214,120,4)" fg:x="9433" fg:w="22"/><text x="9.0357%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::StructType&gt; (22 samples, 0.02%)</title><rect x="8.7857%" y="1253" width="0.0205%" height="15" fill="rgb(208,179,34)" fg:x="9433" fg:w="22"/><text x="9.0357%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::FunctionDefinition&gt;&gt; (21 samples, 0.02%)</title><rect x="8.8145%" y="1157" width="0.0196%" height="15" fill="rgb(227,140,7)" fg:x="9464" fg:w="21"/><text x="9.0645%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="8.8145%" y="1141" width="0.0196%" height="15" fill="rgb(214,22,6)" fg:x="9464" fg:w="21"/><text x="9.0645%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::FunctionDefinition]&gt; (21 samples, 0.02%)</title><rect x="8.8145%" y="1125" width="0.0196%" height="15" fill="rgb(207,137,27)" fg:x="9464" fg:w="21"/><text x="9.0645%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::FunctionDefinition&gt; (21 samples, 0.02%)</title><rect x="8.8145%" y="1109" width="0.0196%" height="15" fill="rgb(210,8,46)" fg:x="9464" fg:w="21"/><text x="9.0645%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;move_binary_format::file_format::CodeUnit&gt;&gt; (18 samples, 0.02%)</title><rect x="8.8173%" y="1093" width="0.0168%" height="15" fill="rgb(240,16,54)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CodeUnit&gt; (18 samples, 0.02%)</title><rect x="8.8173%" y="1077" width="0.0168%" height="15" fill="rgb(211,209,29)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (18 samples, 0.02%)</title><rect x="8.8173%" y="1061" width="0.0168%" height="15" fill="rgb(226,228,24)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (18 samples, 0.02%)</title><rect x="8.8173%" y="1045" width="0.0168%" height="15" fill="rgb(222,84,9)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="8.8173%" y="1029" width="0.0168%" height="15" fill="rgb(234,203,30)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="8.8173%" y="1013" width="0.0168%" height="15" fill="rgb(238,109,14)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="8.8173%" y="997" width="0.0168%" height="15" fill="rgb(233,206,34)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="1007.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="8.8173%" y="981" width="0.0168%" height="15" fill="rgb(220,167,47)" fg:x="9467" fg:w="18"/><text x="9.0673%" y="991.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="8.8229%" y="965" width="0.0112%" height="15" fill="rgb(238,105,10)" fg:x="9473" fg:w="12"/><text x="9.0729%" y="975.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="8.8406%" y="1093" width="0.0130%" height="15" fill="rgb(213,227,17)" fg:x="9492" fg:w="14"/><text x="9.0906%" y="1103.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="8.8406%" y="1077" width="0.0130%" height="15" fill="rgb(217,132,38)" fg:x="9492" fg:w="14"/><text x="9.0906%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (11 samples, 0.01%)</title><rect x="8.8639%" y="1029" width="0.0102%" height="15" fill="rgb(242,146,4)" fg:x="9517" fg:w="11"/><text x="9.1139%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="8.8406%" y="1141" width="0.0354%" height="15" fill="rgb(212,61,9)" fg:x="9492" fg:w="38"/><text x="9.0906%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::Signature]&gt; (38 samples, 0.04%)</title><rect x="8.8406%" y="1125" width="0.0354%" height="15" fill="rgb(247,126,22)" fg:x="9492" fg:w="38"/><text x="9.0906%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (38 samples, 0.04%)</title><rect x="8.8406%" y="1109" width="0.0354%" height="15" fill="rgb(220,196,2)" fg:x="9492" fg:w="38"/><text x="9.0906%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (24 samples, 0.02%)</title><rect x="8.8537%" y="1093" width="0.0224%" height="15" fill="rgb(208,46,4)" fg:x="9506" fg:w="24"/><text x="9.1037%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="8.8537%" y="1077" width="0.0224%" height="15" fill="rgb(252,104,46)" fg:x="9506" fg:w="24"/><text x="9.1037%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (24 samples, 0.02%)</title><rect x="8.8537%" y="1061" width="0.0224%" height="15" fill="rgb(237,152,48)" fg:x="9506" fg:w="24"/><text x="9.1037%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (24 samples, 0.02%)</title><rect x="8.8537%" y="1045" width="0.0224%" height="15" fill="rgb(221,59,37)" fg:x="9506" fg:w="24"/><text x="9.1037%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Signature&gt;&gt; (39 samples, 0.04%)</title><rect x="8.8406%" y="1157" width="0.0363%" height="15" fill="rgb(209,202,51)" fg:x="9492" fg:w="39"/><text x="9.0906%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::identifier::Identifier&gt;&gt; (15 samples, 0.01%)</title><rect x="8.8816%" y="1157" width="0.0140%" height="15" fill="rgb(228,81,30)" fg:x="9536" fg:w="15"/><text x="9.1316%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="8.8816%" y="1141" width="0.0140%" height="15" fill="rgb(227,42,39)" fg:x="9536" fg:w="15"/><text x="9.1316%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::identifier::Identifier]&gt; (15 samples, 0.01%)</title><rect x="8.8816%" y="1125" width="0.0140%" height="15" fill="rgb(221,26,2)" fg:x="9536" fg:w="15"/><text x="9.1316%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (15 samples, 0.01%)</title><rect x="8.8816%" y="1109" width="0.0140%" height="15" fill="rgb(254,61,31)" fg:x="9536" fg:w="15"/><text x="9.1316%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (15 samples, 0.01%)</title><rect x="8.8816%" y="1093" width="0.0140%" height="15" fill="rgb(222,173,38)" fg:x="9536" fg:w="15"/><text x="9.1316%" y="1103.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="8.8816%" y="1077" width="0.0140%" height="15" fill="rgb(218,50,12)" fg:x="9536" fg:w="15"/><text x="9.1316%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="8.8816%" y="1061" width="0.0140%" height="15" fill="rgb(223,88,40)" fg:x="9536" fg:w="15"/><text x="9.1316%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="8.8844%" y="1045" width="0.0112%" height="15" fill="rgb(237,54,19)" fg:x="9539" fg:w="12"/><text x="9.1344%" y="1055.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="8.8844%" y="1029" width="0.0112%" height="15" fill="rgb(251,129,25)" fg:x="9539" fg:w="12"/><text x="9.1344%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (96 samples, 0.09%)</title><rect x="8.8099%" y="1189" width="0.0894%" height="15" fill="rgb(238,97,19)" fg:x="9459" fg:w="96"/><text x="9.0599%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (96 samples, 0.09%)</title><rect x="8.8099%" y="1173" width="0.0894%" height="15" fill="rgb(240,169,18)" fg:x="9459" fg:w="96"/><text x="9.0599%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_binary_format::file_format::CompiledModule&gt;&gt; (98 samples, 0.09%)</title><rect x="8.8090%" y="1221" width="0.0913%" height="15" fill="rgb(230,187,49)" fg:x="9458" fg:w="98"/><text x="9.0590%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.09%)</title><rect x="8.8090%" y="1205" width="0.0913%" height="15" fill="rgb(209,44,26)" fg:x="9458" fg:w="98"/><text x="9.0590%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (123 samples, 0.11%)</title><rect x="8.8062%" y="1333" width="0.1146%" height="15" fill="rgb(244,0,6)" fg:x="9455" fg:w="123"/><text x="9.0562%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.11%)</title><rect x="8.8062%" y="1317" width="0.1146%" height="15" fill="rgb(248,18,21)" fg:x="9455" fg:w="123"/><text x="9.0562%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (123 samples, 0.11%)</title><rect x="8.8062%" y="1301" width="0.1146%" height="15" fill="rgb(245,180,19)" fg:x="9455" fg:w="123"/><text x="9.0562%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (123 samples, 0.11%)</title><rect x="8.8062%" y="1285" width="0.1146%" height="15" fill="rgb(252,118,36)" fg:x="9455" fg:w="123"/><text x="9.0562%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.11%)</title><rect x="8.8062%" y="1269" width="0.1146%" height="15" fill="rgb(210,224,19)" fg:x="9455" fg:w="123"/><text x="9.0562%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (122 samples, 0.11%)</title><rect x="8.8071%" y="1253" width="0.1136%" height="15" fill="rgb(218,30,24)" fg:x="9456" fg:w="122"/><text x="9.0571%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (122 samples, 0.11%)</title><rect x="8.8071%" y="1237" width="0.1136%" height="15" fill="rgb(219,75,50)" fg:x="9456" fg:w="122"/><text x="9.0571%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;move_core_types::identifier::Identifier,usize&gt;&gt; (11 samples, 0.01%)</title><rect x="8.9105%" y="1221" width="0.0102%" height="15" fill="rgb(234,72,50)" fg:x="9567" fg:w="11"/><text x="9.1605%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;move_core_types::identifier::Identifier,usize,std::collections::hash::map::RandomState&gt;&gt; (11 samples, 0.01%)</title><rect x="8.9105%" y="1205" width="0.0102%" height="15" fill="rgb(219,100,48)" fg:x="9567" fg:w="11"/><text x="9.1605%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(move_core_types::identifier::Identifier,usize)&gt;&gt; (11 samples, 0.01%)</title><rect x="8.9105%" y="1189" width="0.0102%" height="15" fill="rgb(253,5,41)" fg:x="9567" fg:w="11"/><text x="9.1605%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (281 samples, 0.26%)</title><rect x="8.6627%" y="1397" width="0.2617%" height="15" fill="rgb(247,181,11)" fg:x="9301" fg:w="281"/><text x="8.9127%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (281 samples, 0.26%)</title><rect x="8.6627%" y="1381" width="0.2617%" height="15" fill="rgb(222,223,25)" fg:x="9301" fg:w="281"/><text x="8.9127%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (281 samples, 0.26%)</title><rect x="8.6627%" y="1365" width="0.2617%" height="15" fill="rgb(214,198,28)" fg:x="9301" fg:w="281"/><text x="8.9127%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (127 samples, 0.12%)</title><rect x="8.8062%" y="1349" width="0.1183%" height="15" fill="rgb(230,46,43)" fg:x="9455" fg:w="127"/><text x="9.0562%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1557" width="0.2682%" height="15" fill="rgb(233,65,53)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm::AptosVM&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1541" width="0.2682%" height="15" fill="rgb(221,121,27)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm_impl::AptosVMImpl&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1525" width="0.2682%" height="15" fill="rgb(247,70,47)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt;&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1509" width="0.2682%" height="15" fill="rgb(228,85,35)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1519.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (288 samples, 0.27%)</title><rect x="8.6618%" y="1493" width="0.2682%" height="15" fill="rgb(209,50,18)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1503.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (288 samples, 0.27%)</title><rect x="8.6618%" y="1477" width="0.2682%" height="15" fill="rgb(250,19,35)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1461" width="0.2682%" height="15" fill="rgb(253,107,29)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1445" width="0.2682%" height="15" fill="rgb(252,179,29)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1429" width="0.2682%" height="15" fill="rgb(238,194,6)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (288 samples, 0.27%)</title><rect x="8.6618%" y="1413" width="0.2682%" height="15" fill="rgb(238,164,29)" fg:x="9300" fg:w="288"/><text x="8.9118%" y="1423.50"></text></g><g><title>std::time::Instant::elapsed (13 samples, 0.01%)</title><rect x="8.9431%" y="1557" width="0.0121%" height="15" fill="rgb(224,25,9)" fg:x="9602" fg:w="13"/><text x="9.1931%" y="1567.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1733" width="8.4178%" height="15" fill="rgb(244,153,23)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1743.50">rayon_core::..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1717" width="8.4178%" height="15" fill="rgb(212,203,14)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1727.50">rayon_core::..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1701" width="8.4178%" height="15" fill="rgb(220,164,20)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1711.50">rayon_core::..</text></g><g><title>rayon_core::unwind::halt_unwinding (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1685" width="8.4178%" height="15" fill="rgb(222,203,48)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1695.50">rayon_core::..</text></g><g><title>std::panic::catch_unwind (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1669" width="8.4178%" height="15" fill="rgb(215,159,22)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1679.50">std::panic::..</text></g><g><title>std::panicking::try (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1653" width="8.4178%" height="15" fill="rgb(216,183,47)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1663.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1637" width="8.4178%" height="15" fill="rgb(229,195,25)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1647.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1621" width="8.4178%" height="15" fill="rgb(224,132,51)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1631.50">&lt;core::panic..</text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1605" width="8.4178%" height="15" fill="rgb(240,63,7)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1615.50">rayon_core::..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1589" width="8.4178%" height="15" fill="rgb(249,182,41)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1599.50">aptos_block_..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (9,038 samples, 8.42%)</title><rect x="0.5868%" y="1573" width="8.4178%" height="15" fill="rgb(243,47,26)" fg:x="630" fg:w="9038"/><text x="0.8368%" y="1583.50">aptos_block_..</text></g><g><title>syscall (53 samples, 0.05%)</title><rect x="8.9552%" y="1557" width="0.0494%" height="15" fill="rgb(233,48,2)" fg:x="9615" fg:w="53"/><text x="9.2052%" y="1567.50"></text></g><g><title>[unknown] (47 samples, 0.04%)</title><rect x="8.9608%" y="1541" width="0.0438%" height="15" fill="rgb(244,165,34)" fg:x="9621" fg:w="47"/><text x="9.2108%" y="1551.50"></text></g><g><title>[unknown] (44 samples, 0.04%)</title><rect x="8.9636%" y="1525" width="0.0410%" height="15" fill="rgb(207,89,7)" fg:x="9624" fg:w="44"/><text x="9.2136%" y="1535.50"></text></g><g><title>[unknown] (42 samples, 0.04%)</title><rect x="8.9654%" y="1509" width="0.0391%" height="15" fill="rgb(244,117,36)" fg:x="9626" fg:w="42"/><text x="9.2154%" y="1519.50"></text></g><g><title>[unknown] (37 samples, 0.03%)</title><rect x="8.9701%" y="1493" width="0.0345%" height="15" fill="rgb(226,144,34)" fg:x="9631" fg:w="37"/><text x="9.2201%" y="1503.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="8.9766%" y="1477" width="0.0279%" height="15" fill="rgb(213,23,19)" fg:x="9638" fg:w="30"/><text x="9.2266%" y="1487.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="8.9859%" y="1461" width="0.0186%" height="15" fill="rgb(217,75,12)" fg:x="9648" fg:w="20"/><text x="9.2359%" y="1471.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="9.0045%" y="1509" width="0.0242%" height="15" fill="rgb(224,159,17)" fg:x="9668" fg:w="26"/><text x="9.2545%" y="1519.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="9.0167%" y="1493" width="0.0121%" height="15" fill="rgb(217,118,1)" fg:x="9681" fg:w="13"/><text x="9.2667%" y="1503.50"></text></g><g><title>cfree (28 samples, 0.03%)</title><rect x="9.0045%" y="1525" width="0.0261%" height="15" fill="rgb(232,180,48)" fg:x="9668" fg:w="28"/><text x="9.2545%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="9.0362%" y="1317" width="0.0177%" height="15" fill="rgb(230,27,33)" fg:x="9702" fg:w="19"/><text x="9.2862%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="9.0362%" y="1301" width="0.0177%" height="15" fill="rgb(205,31,21)" fg:x="9702" fg:w="19"/><text x="9.2862%" y="1311.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="9.0362%" y="1285" width="0.0177%" height="15" fill="rgb(253,59,4)" fg:x="9702" fg:w="19"/><text x="9.2862%" y="1295.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="9.0427%" y="1269" width="0.0112%" height="15" fill="rgb(224,201,9)" fg:x="9709" fg:w="12"/><text x="9.2927%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="9.0334%" y="1413" width="0.0233%" height="15" fill="rgb(229,206,30)" fg:x="9699" fg:w="25"/><text x="9.2834%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="9.0334%" y="1397" width="0.0233%" height="15" fill="rgb(212,67,47)" fg:x="9699" fg:w="25"/><text x="9.2834%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (25 samples, 0.02%)</title><rect x="9.0334%" y="1381" width="0.0233%" height="15" fill="rgb(211,96,50)" fg:x="9699" fg:w="25"/><text x="9.2834%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="9.0362%" y="1365" width="0.0205%" height="15" fill="rgb(252,114,18)" fg:x="9702" fg:w="22"/><text x="9.2862%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="9.0362%" y="1349" width="0.0205%" height="15" fill="rgb(223,58,37)" fg:x="9702" fg:w="22"/><text x="9.2862%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="9.0362%" y="1333" width="0.0205%" height="15" fill="rgb(237,70,4)" fg:x="9702" fg:w="22"/><text x="9.2862%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (14 samples, 0.01%)</title><rect x="9.0604%" y="1413" width="0.0130%" height="15" fill="rgb(244,85,46)" fg:x="9728" fg:w="14"/><text x="9.3104%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.01%)</title><rect x="9.0604%" y="1397" width="0.0130%" height="15" fill="rgb(223,39,52)" fg:x="9728" fg:w="14"/><text x="9.3104%" y="1407.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="9.0604%" y="1381" width="0.0130%" height="15" fill="rgb(218,200,14)" fg:x="9728" fg:w="14"/><text x="9.3104%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="9.0604%" y="1365" width="0.0130%" height="15" fill="rgb(208,171,16)" fg:x="9728" fg:w="14"/><text x="9.3104%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (53 samples, 0.05%)</title><rect x="9.0334%" y="1461" width="0.0494%" height="15" fill="rgb(234,200,18)" fg:x="9699" fg:w="53"/><text x="9.2834%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (53 samples, 0.05%)</title><rect x="9.0334%" y="1445" width="0.0494%" height="15" fill="rgb(228,45,11)" fg:x="9699" fg:w="53"/><text x="9.2834%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (53 samples, 0.05%)</title><rect x="9.0334%" y="1429" width="0.0494%" height="15" fill="rgb(237,182,11)" fg:x="9699" fg:w="53"/><text x="9.2834%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.08%)</title><rect x="9.0045%" y="1557" width="0.0829%" height="15" fill="rgb(241,175,49)" fg:x="9668" fg:w="89"/><text x="9.2545%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_vm::adapter_common::PreprocessedTransaction]&gt; (89 samples, 0.08%)</title><rect x="9.0045%" y="1541" width="0.0829%" height="15" fill="rgb(247,38,35)" fg:x="9668" fg:w="89"/><text x="9.2545%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt; (61 samples, 0.06%)</title><rect x="9.0306%" y="1525" width="0.0568%" height="15" fill="rgb(228,39,49)" fg:x="9696" fg:w="61"/><text x="9.2806%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aptos_types::transaction::SignatureCheckedTransaction&gt;&gt; (61 samples, 0.06%)</title><rect x="9.0306%" y="1509" width="0.0568%" height="15" fill="rgb(226,101,26)" fg:x="9696" fg:w="61"/><text x="9.2806%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignatureCheckedTransaction&gt; (61 samples, 0.06%)</title><rect x="9.0306%" y="1493" width="0.0568%" height="15" fill="rgb(206,141,19)" fg:x="9696" fg:w="61"/><text x="9.2806%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (61 samples, 0.06%)</title><rect x="9.0306%" y="1477" width="0.0568%" height="15" fill="rgb(211,200,13)" fg:x="9696" fg:w="61"/><text x="9.2806%" y="1487.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_block::{{closure}} (116 samples, 0.11%)</title><rect x="9.0045%" y="1621" width="0.1080%" height="15" fill="rgb(241,121,6)" fg:x="9668" fg:w="116"/><text x="9.2545%" y="1631.50"></text></g><g><title>core::mem::drop (116 samples, 0.11%)</title><rect x="9.0045%" y="1605" width="0.1080%" height="15" fill="rgb(234,221,29)" fg:x="9668" fg:w="116"/><text x="9.2545%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (116 samples, 0.11%)</title><rect x="9.0045%" y="1589" width="0.1080%" height="15" fill="rgb(229,136,5)" fg:x="9668" fg:w="116"/><text x="9.2545%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (116 samples, 0.11%)</title><rect x="9.0045%" y="1573" width="0.1080%" height="15" fill="rgb(238,36,11)" fg:x="9668" fg:w="116"/><text x="9.2545%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (27 samples, 0.03%)</title><rect x="9.0874%" y="1557" width="0.0251%" height="15" fill="rgb(251,55,41)" fg:x="9757" fg:w="27"/><text x="9.3374%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="9.0874%" y="1541" width="0.0251%" height="15" fill="rgb(242,34,40)" fg:x="9757" fg:w="27"/><text x="9.3374%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.03%)</title><rect x="9.0874%" y="1525" width="0.0251%" height="15" fill="rgb(215,42,17)" fg:x="9757" fg:w="27"/><text x="9.3374%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.03%)</title><rect x="9.0874%" y="1509" width="0.0251%" height="15" fill="rgb(207,44,46)" fg:x="9757" fg:w="27"/><text x="9.3374%" y="1519.50"></text></g><g><title>cfree (27 samples, 0.03%)</title><rect x="9.0874%" y="1493" width="0.0251%" height="15" fill="rgb(211,206,28)" fg:x="9757" fg:w="27"/><text x="9.3374%" y="1503.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="9.0874%" y="1477" width="0.0251%" height="15" fill="rgb(237,167,16)" fg:x="9757" fg:w="27"/><text x="9.3374%" y="1487.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="9.0874%" y="1461" width="0.0251%" height="15" fill="rgb(233,66,6)" fg:x="9757" fg:w="27"/><text x="9.3374%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="9.1796%" y="1349" width="0.0158%" height="15" fill="rgb(246,123,29)" fg:x="9856" fg:w="17"/><text x="9.4296%" y="1359.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (17 samples, 0.02%)</title><rect x="9.1796%" y="1333" width="0.0158%" height="15" fill="rgb(209,62,40)" fg:x="9856" fg:w="17"/><text x="9.4296%" y="1343.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (16 samples, 0.01%)</title><rect x="9.2067%" y="1349" width="0.0149%" height="15" fill="rgb(218,4,25)" fg:x="9885" fg:w="16"/><text x="9.4567%" y="1359.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (107 samples, 0.10%)</title><rect x="9.1238%" y="1381" width="0.0997%" height="15" fill="rgb(253,91,49)" fg:x="9796" fg:w="107"/><text x="9.3738%" y="1391.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (107 samples, 0.10%)</title><rect x="9.1238%" y="1365" width="0.0997%" height="15" fill="rgb(228,155,29)" fg:x="9796" fg:w="107"/><text x="9.3738%" y="1375.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (15 samples, 0.01%)</title><rect x="9.2234%" y="1381" width="0.0140%" height="15" fill="rgb(243,57,37)" fg:x="9903" fg:w="15"/><text x="9.4734%" y="1391.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="9.2234%" y="1365" width="0.0140%" height="15" fill="rgb(244,167,17)" fg:x="9903" fg:w="15"/><text x="9.4734%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="9.2234%" y="1349" width="0.0140%" height="15" fill="rgb(207,181,38)" fg:x="9903" fg:w="15"/><text x="9.4734%" y="1359.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (126 samples, 0.12%)</title><rect x="9.1219%" y="1477" width="0.1174%" height="15" fill="rgb(211,8,23)" fg:x="9794" fg:w="126"/><text x="9.3719%" y="1487.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (126 samples, 0.12%)</title><rect x="9.1219%" y="1461" width="0.1174%" height="15" fill="rgb(235,11,44)" fg:x="9794" fg:w="126"/><text x="9.3719%" y="1471.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (126 samples, 0.12%)</title><rect x="9.1219%" y="1445" width="0.1174%" height="15" fill="rgb(248,18,52)" fg:x="9794" fg:w="126"/><text x="9.3719%" y="1455.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (126 samples, 0.12%)</title><rect x="9.1219%" y="1429" width="0.1174%" height="15" fill="rgb(208,4,7)" fg:x="9794" fg:w="126"/><text x="9.3719%" y="1439.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (126 samples, 0.12%)</title><rect x="9.1219%" y="1413" width="0.1174%" height="15" fill="rgb(240,17,39)" fg:x="9794" fg:w="126"/><text x="9.3719%" y="1423.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (125 samples, 0.12%)</title><rect x="9.1228%" y="1397" width="0.1164%" height="15" fill="rgb(207,170,3)" fg:x="9795" fg:w="125"/><text x="9.3728%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (200 samples, 0.19%)</title><rect x="9.2802%" y="1269" width="0.1863%" height="15" fill="rgb(236,100,52)" fg:x="9964" fg:w="200"/><text x="9.5302%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (200 samples, 0.19%)</title><rect x="9.2802%" y="1253" width="0.1863%" height="15" fill="rgb(246,78,51)" fg:x="9964" fg:w="200"/><text x="9.5302%" y="1263.50"></text></g><g><title>cfree (197 samples, 0.18%)</title><rect x="9.2830%" y="1237" width="0.1835%" height="15" fill="rgb(211,17,15)" fg:x="9967" fg:w="197"/><text x="9.5330%" y="1247.50"></text></g><g><title>[libc.so.6] (85 samples, 0.08%)</title><rect x="9.3873%" y="1221" width="0.0792%" height="15" fill="rgb(209,59,46)" fg:x="10079" fg:w="85"/><text x="9.6373%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (259 samples, 0.24%)</title><rect x="9.2393%" y="1365" width="0.2412%" height="15" fill="rgb(210,92,25)" fg:x="9920" fg:w="259"/><text x="9.4893%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;]&gt; (259 samples, 0.24%)</title><rect x="9.2393%" y="1349" width="0.2412%" height="15" fill="rgb(238,174,52)" fg:x="9920" fg:w="259"/><text x="9.4893%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt; (259 samples, 0.24%)</title><rect x="9.2393%" y="1333" width="0.2412%" height="15" fill="rgb(230,73,7)" fg:x="9920" fg:w="259"/><text x="9.4893%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (259 samples, 0.24%)</title><rect x="9.2393%" y="1317" width="0.2412%" height="15" fill="rgb(243,124,40)" fg:x="9920" fg:w="259"/><text x="9.4893%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (259 samples, 0.24%)</title><rect x="9.2393%" y="1301" width="0.2412%" height="15" fill="rgb(244,170,11)" fg:x="9920" fg:w="259"/><text x="9.4893%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 0.20%)</title><rect x="9.2802%" y="1285" width="0.2002%" height="15" fill="rgb(207,114,54)" fg:x="9964" fg:w="215"/><text x="9.5302%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="9.4665%" y="1269" width="0.0140%" height="15" fill="rgb(205,42,20)" fg:x="10164" fg:w="15"/><text x="9.7165%" y="1279.50"></text></g><g><title>[libc.so.6] (70 samples, 0.07%)</title><rect x="9.5103%" y="1269" width="0.0652%" height="15" fill="rgb(230,30,28)" fg:x="10211" fg:w="70"/><text x="9.7603%" y="1279.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="9.5615%" y="1253" width="0.0140%" height="15" fill="rgb(205,73,54)" fg:x="10266" fg:w="15"/><text x="9.8115%" y="1263.50"></text></g><g><title>[libc.so.6] (102 samples, 0.10%)</title><rect x="9.4814%" y="1285" width="0.0950%" height="15" fill="rgb(254,227,23)" fg:x="10180" fg:w="102"/><text x="9.7314%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (114 samples, 0.11%)</title><rect x="9.4805%" y="1333" width="0.1062%" height="15" fill="rgb(228,202,34)" fg:x="10179" fg:w="114"/><text x="9.7305%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (114 samples, 0.11%)</title><rect x="9.4805%" y="1317" width="0.1062%" height="15" fill="rgb(222,225,37)" fg:x="10179" fg:w="114"/><text x="9.7305%" y="1327.50"></text></g><g><title>cfree (114 samples, 0.11%)</title><rect x="9.4805%" y="1301" width="0.1062%" height="15" fill="rgb(221,14,54)" fg:x="10179" fg:w="114"/><text x="9.7305%" y="1311.50"></text></g><g><title>__lll_lock_wake_private (11 samples, 0.01%)</title><rect x="9.5764%" y="1285" width="0.0102%" height="15" fill="rgb(254,102,2)" fg:x="10282" fg:w="11"/><text x="9.8264%" y="1295.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="9.5764%" y="1269" width="0.0102%" height="15" fill="rgb(232,104,17)" fg:x="10282" fg:w="11"/><text x="9.8264%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (374 samples, 0.35%)</title><rect x="9.2393%" y="1397" width="0.3483%" height="15" fill="rgb(250,220,14)" fg:x="9920" fg:w="374"/><text x="9.4893%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt; (374 samples, 0.35%)</title><rect x="9.2393%" y="1381" width="0.3483%" height="15" fill="rgb(241,158,9)" fg:x="9920" fg:w="374"/><text x="9.4893%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt; (115 samples, 0.11%)</title><rect x="9.4805%" y="1365" width="0.1071%" height="15" fill="rgb(246,9,43)" fg:x="10179" fg:w="115"/><text x="9.7305%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.11%)</title><rect x="9.4805%" y="1349" width="0.1071%" height="15" fill="rgb(206,73,33)" fg:x="10179" fg:w="115"/><text x="9.7305%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (513 samples, 0.48%)</title><rect x="9.1172%" y="1557" width="0.4778%" height="15" fill="rgb(222,79,8)" fg:x="9789" fg:w="513"/><text x="9.3672%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt;]&gt; (513 samples, 0.48%)</title><rect x="9.1172%" y="1541" width="0.4778%" height="15" fill="rgb(234,8,54)" fg:x="9789" fg:w="513"/><text x="9.3672%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt;&gt; (512 samples, 0.48%)</title><rect x="9.1182%" y="1525" width="0.4769%" height="15" fill="rgb(209,134,38)" fg:x="9790" fg:w="512"/><text x="9.3682%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt; (512 samples, 0.48%)</title><rect x="9.1182%" y="1509" width="0.4769%" height="15" fill="rgb(230,127,29)" fg:x="9790" fg:w="512"/><text x="9.3682%" y="1519.50"></text></g><g><title>&lt;arc_swap::ArcSwapAny&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (512 samples, 0.48%)</title><rect x="9.1182%" y="1493" width="0.4769%" height="15" fill="rgb(242,44,41)" fg:x="9790" fg:w="512"/><text x="9.3682%" y="1503.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::dec (382 samples, 0.36%)</title><rect x="9.2393%" y="1477" width="0.3558%" height="15" fill="rgb(222,56,43)" fg:x="9920" fg:w="382"/><text x="9.4893%" y="1487.50"></text></g><g><title>core::mem::drop (382 samples, 0.36%)</title><rect x="9.2393%" y="1461" width="0.3558%" height="15" fill="rgb(238,39,47)" fg:x="9920" fg:w="382"/><text x="9.4893%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt; (382 samples, 0.36%)</title><rect x="9.2393%" y="1445" width="0.3558%" height="15" fill="rgb(226,79,43)" fg:x="9920" fg:w="382"/><text x="9.4893%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt; (382 samples, 0.36%)</title><rect x="9.2393%" y="1429" width="0.3558%" height="15" fill="rgb(242,105,53)" fg:x="9920" fg:w="382"/><text x="9.4893%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (382 samples, 0.36%)</title><rect x="9.2393%" y="1413" width="0.3558%" height="15" fill="rgb(251,132,46)" fg:x="9920" fg:w="382"/><text x="9.4893%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (516 samples, 0.48%)</title><rect x="9.1172%" y="1573" width="0.4806%" height="15" fill="rgb(231,77,14)" fg:x="9789" fg:w="516"/><text x="9.3672%" y="1583.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (11 samples, 0.01%)</title><rect x="9.6574%" y="1349" width="0.0102%" height="15" fill="rgb(240,135,9)" fg:x="10369" fg:w="11"/><text x="9.9074%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.08%)</title><rect x="9.5978%" y="1557" width="0.0773%" height="15" fill="rgb(248,109,14)" fg:x="10305" fg:w="83"/><text x="9.8478%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt;]&gt; (83 samples, 0.08%)</title><rect x="9.5978%" y="1541" width="0.0773%" height="15" fill="rgb(227,146,52)" fg:x="10305" fg:w="83"/><text x="9.8478%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt;&gt; (83 samples, 0.08%)</title><rect x="9.5978%" y="1525" width="0.0773%" height="15" fill="rgb(232,54,3)" fg:x="10305" fg:w="83"/><text x="9.8478%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt; (83 samples, 0.08%)</title><rect x="9.5978%" y="1509" width="0.0773%" height="15" fill="rgb(229,201,43)" fg:x="10305" fg:w="83"/><text x="9.8478%" y="1519.50"></text></g><g><title>&lt;arc_swap::ArcSwapAny&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.08%)</title><rect x="9.5978%" y="1493" width="0.0773%" height="15" fill="rgb(252,161,33)" fg:x="10305" fg:w="83"/><text x="9.8478%" y="1503.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (82 samples, 0.08%)</title><rect x="9.5988%" y="1477" width="0.0764%" height="15" fill="rgb(226,146,40)" fg:x="10306" fg:w="82"/><text x="9.8488%" y="1487.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (82 samples, 0.08%)</title><rect x="9.5988%" y="1461" width="0.0764%" height="15" fill="rgb(219,47,25)" fg:x="10306" fg:w="82"/><text x="9.8488%" y="1471.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (82 samples, 0.08%)</title><rect x="9.5988%" y="1445" width="0.0764%" height="15" fill="rgb(250,135,13)" fg:x="10306" fg:w="82"/><text x="9.8488%" y="1455.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (82 samples, 0.08%)</title><rect x="9.5988%" y="1429" width="0.0764%" height="15" fill="rgb(219,229,18)" fg:x="10306" fg:w="82"/><text x="9.8488%" y="1439.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (82 samples, 0.08%)</title><rect x="9.5988%" y="1413" width="0.0764%" height="15" fill="rgb(217,152,27)" fg:x="10306" fg:w="82"/><text x="9.8488%" y="1423.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (81 samples, 0.08%)</title><rect x="9.5997%" y="1397" width="0.0754%" height="15" fill="rgb(225,71,47)" fg:x="10307" fg:w="81"/><text x="9.8497%" y="1407.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (81 samples, 0.08%)</title><rect x="9.5997%" y="1381" width="0.0754%" height="15" fill="rgb(220,139,14)" fg:x="10307" fg:w="81"/><text x="9.8497%" y="1391.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (81 samples, 0.08%)</title><rect x="9.5997%" y="1365" width="0.0754%" height="15" fill="rgb(247,54,32)" fg:x="10307" fg:w="81"/><text x="9.8497%" y="1375.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}} (607 samples, 0.57%)</title><rect x="9.1126%" y="1621" width="0.5653%" height="15" fill="rgb(252,131,39)" fg:x="9784" fg:w="607"/><text x="9.3626%" y="1631.50"></text></g><g><title>core::mem::drop (607 samples, 0.57%)</title><rect x="9.1126%" y="1605" width="0.5653%" height="15" fill="rgb(210,108,39)" fg:x="9784" fg:w="607"/><text x="9.3626%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;aptos_types::state_store::state_key::StateKey,aptos_vm::block_executor::AptosTransactionOutput,move_core_types::vm_status::VMStatus&gt;&gt; (602 samples, 0.56%)</title><rect x="9.1172%" y="1589" width="0.5607%" height="15" fill="rgb(205,23,29)" fg:x="9789" fg:w="602"/><text x="9.3672%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (86 samples, 0.08%)</title><rect x="9.5978%" y="1573" width="0.0801%" height="15" fill="rgb(246,139,46)" fg:x="10305" fg:w="86"/><text x="9.8478%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.03%)</title><rect x="9.6835%" y="1317" width="0.0345%" height="15" fill="rgb(250,81,26)" fg:x="10397" fg:w="37"/><text x="9.9335%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.03%)</title><rect x="9.6835%" y="1301" width="0.0345%" height="15" fill="rgb(214,104,7)" fg:x="10397" fg:w="37"/><text x="9.9335%" y="1311.50"></text></g><g><title>cfree (36 samples, 0.03%)</title><rect x="9.6844%" y="1285" width="0.0335%" height="15" fill="rgb(233,189,8)" fg:x="10398" fg:w="36"/><text x="9.9344%" y="1295.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="9.7068%" y="1269" width="0.0112%" height="15" fill="rgb(228,141,17)" fg:x="10422" fg:w="12"/><text x="9.9568%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (46 samples, 0.04%)</title><rect x="9.6779%" y="1365" width="0.0428%" height="15" fill="rgb(247,157,1)" fg:x="10391" fg:w="46"/><text x="9.9279%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (46 samples, 0.04%)</title><rect x="9.6779%" y="1349" width="0.0428%" height="15" fill="rgb(249,225,5)" fg:x="10391" fg:w="46"/><text x="9.9279%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="9.6835%" y="1333" width="0.0373%" height="15" fill="rgb(242,55,13)" fg:x="10397" fg:w="40"/><text x="9.9335%" y="1343.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="9.7375%" y="1109" width="0.0121%" height="15" fill="rgb(230,49,50)" fg:x="10455" fg:w="13"/><text x="9.9875%" y="1119.50"></text></g><g><title>[libc.so.6] (30 samples, 0.03%)</title><rect x="9.7236%" y="1125" width="0.0279%" height="15" fill="rgb(241,111,38)" fg:x="10440" fg:w="30"/><text x="9.9736%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (33 samples, 0.03%)</title><rect x="9.7217%" y="1221" width="0.0307%" height="15" fill="rgb(252,155,4)" fg:x="10438" fg:w="33"/><text x="9.9717%" y="1231.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (33 samples, 0.03%)</title><rect x="9.7217%" y="1205" width="0.0307%" height="15" fill="rgb(212,69,32)" fg:x="10438" fg:w="33"/><text x="9.9717%" y="1215.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (33 samples, 0.03%)</title><rect x="9.7217%" y="1189" width="0.0307%" height="15" fill="rgb(243,107,47)" fg:x="10438" fg:w="33"/><text x="9.9717%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.03%)</title><rect x="9.7226%" y="1173" width="0.0298%" height="15" fill="rgb(247,130,12)" fg:x="10439" fg:w="32"/><text x="9.9726%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.03%)</title><rect x="9.7226%" y="1157" width="0.0298%" height="15" fill="rgb(233,74,16)" fg:x="10439" fg:w="32"/><text x="9.9726%" y="1167.50"></text></g><g><title>cfree (32 samples, 0.03%)</title><rect x="9.7226%" y="1141" width="0.0298%" height="15" fill="rgb(208,58,18)" fg:x="10439" fg:w="32"/><text x="9.9726%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (26 samples, 0.02%)</title><rect x="9.7534%" y="1141" width="0.0242%" height="15" fill="rgb(242,225,1)" fg:x="10472" fg:w="26"/><text x="10.0034%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (35 samples, 0.03%)</title><rect x="9.7524%" y="1205" width="0.0326%" height="15" fill="rgb(249,39,40)" fg:x="10471" fg:w="35"/><text x="10.0024%" y="1215.50"></text></g><g><title>alloc::collections::btree::mem::replace (34 samples, 0.03%)</title><rect x="9.7534%" y="1189" width="0.0317%" height="15" fill="rgb(207,72,44)" fg:x="10472" fg:w="34"/><text x="10.0034%" y="1199.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (34 samples, 0.03%)</title><rect x="9.7534%" y="1173" width="0.0317%" height="15" fill="rgb(215,193,12)" fg:x="10472" fg:w="34"/><text x="10.0034%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (34 samples, 0.03%)</title><rect x="9.7534%" y="1157" width="0.0317%" height="15" fill="rgb(248,41,39)" fg:x="10472" fg:w="34"/><text x="10.0034%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (70 samples, 0.07%)</title><rect x="9.7217%" y="1237" width="0.0652%" height="15" fill="rgb(253,85,4)" fg:x="10438" fg:w="70"/><text x="9.9717%" y="1247.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (37 samples, 0.03%)</title><rect x="9.7524%" y="1221" width="0.0345%" height="15" fill="rgb(243,70,31)" fg:x="10471" fg:w="37"/><text x="10.0024%" y="1231.50"></text></g><g><title>[libc.so.6] (74 samples, 0.07%)</title><rect x="9.9192%" y="1029" width="0.0689%" height="15" fill="rgb(253,195,26)" fg:x="10650" fg:w="74"/><text x="10.1692%" y="1039.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="9.9629%" y="1013" width="0.0251%" height="15" fill="rgb(243,42,11)" fg:x="10697" fg:w="27"/><text x="10.2129%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (143 samples, 0.13%)</title><rect x="9.8577%" y="1125" width="0.1332%" height="15" fill="rgb(239,66,17)" fg:x="10584" fg:w="143"/><text x="10.1077%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (139 samples, 0.13%)</title><rect x="9.8614%" y="1109" width="0.1295%" height="15" fill="rgb(217,132,21)" fg:x="10588" fg:w="139"/><text x="10.1114%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.13%)</title><rect x="9.8642%" y="1093" width="0.1267%" height="15" fill="rgb(252,202,21)" fg:x="10591" fg:w="136"/><text x="10.1142%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (136 samples, 0.13%)</title><rect x="9.8642%" y="1077" width="0.1267%" height="15" fill="rgb(233,98,36)" fg:x="10591" fg:w="136"/><text x="10.1142%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (136 samples, 0.13%)</title><rect x="9.8642%" y="1061" width="0.1267%" height="15" fill="rgb(216,153,54)" fg:x="10591" fg:w="136"/><text x="10.1142%" y="1071.50"></text></g><g><title>cfree (136 samples, 0.13%)</title><rect x="9.8642%" y="1045" width="0.1267%" height="15" fill="rgb(250,99,7)" fg:x="10591" fg:w="136"/><text x="10.1142%" y="1055.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::drop_elements (346 samples, 0.32%)</title><rect x="9.6779%" y="1429" width="0.3223%" height="15" fill="rgb(207,56,50)" fg:x="10391" fg:w="346"/><text x="9.9279%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::drop (346 samples, 0.32%)</title><rect x="9.6779%" y="1413" width="0.3223%" height="15" fill="rgb(244,61,34)" fg:x="10391" fg:w="346"/><text x="9.9279%" y="1423.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (346 samples, 0.32%)</title><rect x="9.6779%" y="1397" width="0.3223%" height="15" fill="rgb(241,50,38)" fg:x="10391" fg:w="346"/><text x="9.9279%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;)&gt; (346 samples, 0.32%)</title><rect x="9.6779%" y="1381" width="0.3223%" height="15" fill="rgb(212,166,30)" fg:x="10391" fg:w="346"/><text x="9.9279%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (300 samples, 0.28%)</title><rect x="9.7208%" y="1365" width="0.2794%" height="15" fill="rgb(249,127,32)" fg:x="10437" fg:w="300"/><text x="9.9708%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (300 samples, 0.28%)</title><rect x="9.7208%" y="1349" width="0.2794%" height="15" fill="rgb(209,103,0)" fg:x="10437" fg:w="300"/><text x="9.9708%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt; (300 samples, 0.28%)</title><rect x="9.7208%" y="1333" width="0.2794%" height="15" fill="rgb(238,209,51)" fg:x="10437" fg:w="300"/><text x="9.9708%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;usize,crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt;&gt; (300 samples, 0.28%)</title><rect x="9.7208%" y="1317" width="0.2794%" height="15" fill="rgb(237,56,23)" fg:x="10437" fg:w="300"/><text x="9.9708%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (300 samples, 0.28%)</title><rect x="9.7208%" y="1301" width="0.2794%" height="15" fill="rgb(215,153,46)" fg:x="10437" fg:w="300"/><text x="9.9708%" y="1311.50"></text></g><g><title>core::mem::drop (299 samples, 0.28%)</title><rect x="9.7217%" y="1285" width="0.2785%" height="15" fill="rgb(224,49,31)" fg:x="10438" fg:w="299"/><text x="9.9717%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;usize,crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt;&gt; (299 samples, 0.28%)</title><rect x="9.7217%" y="1269" width="0.2785%" height="15" fill="rgb(250,18,42)" fg:x="10438" fg:w="299"/><text x="9.9717%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (299 samples, 0.28%)</title><rect x="9.7217%" y="1253" width="0.2785%" height="15" fill="rgb(215,176,39)" fg:x="10438" fg:w="299"/><text x="9.9717%" y="1263.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (229 samples, 0.21%)</title><rect x="9.7869%" y="1237" width="0.2133%" height="15" fill="rgb(223,77,29)" fg:x="10508" fg:w="229"/><text x="10.0369%" y="1247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (229 samples, 0.21%)</title><rect x="9.7869%" y="1221" width="0.2133%" height="15" fill="rgb(234,94,52)" fg:x="10508" fg:w="229"/><text x="10.0369%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (229 samples, 0.21%)</title><rect x="9.7869%" y="1205" width="0.2133%" height="15" fill="rgb(220,154,50)" fg:x="10508" fg:w="229"/><text x="10.0369%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt; (229 samples, 0.21%)</title><rect x="9.7869%" y="1189" width="0.2133%" height="15" fill="rgb(212,11,10)" fg:x="10508" fg:w="229"/><text x="10.0369%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::EntryCell&lt;aptos_types::write_set::WriteOp&gt;&gt; (229 samples, 0.21%)</title><rect x="9.7869%" y="1173" width="0.2133%" height="15" fill="rgb(205,166,19)" fg:x="10508" fg:w="229"/><text x="10.0369%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_types::write_set::WriteOp&gt;&gt; (206 samples, 0.19%)</title><rect x="9.8083%" y="1157" width="0.1919%" height="15" fill="rgb(244,198,16)" fg:x="10531" fg:w="206"/><text x="10.0583%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 samples, 0.19%)</title><rect x="9.8083%" y="1141" width="0.1919%" height="15" fill="rgb(219,69,12)" fg:x="10531" fg:w="206"/><text x="10.0583%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (10,147 samples, 9.45%)</title><rect x="0.5868%" y="1749" width="9.4507%" height="15" fill="rgb(245,30,7)" fg:x="630" fg:w="10147"/><text x="0.8368%" y="1759.50">&lt;rayon_core::j..</text></g><g><title>rayon_core::spawn::spawn_job::{{closure}} (1,109 samples, 1.03%)</title><rect x="9.0045%" y="1733" width="1.0329%" height="15" fill="rgb(218,221,48)" fg:x="9668" fg:w="1109"/><text x="9.2545%" y="1743.50"></text></g><g><title>rayon_core::registry::Registry::catch_unwind (1,109 samples, 1.03%)</title><rect x="9.0045%" y="1717" width="1.0329%" height="15" fill="rgb(216,66,15)" fg:x="9668" fg:w="1109"/><text x="9.2545%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,109 samples, 1.03%)</title><rect x="9.0045%" y="1701" width="1.0329%" height="15" fill="rgb(226,122,50)" fg:x="9668" fg:w="1109"/><text x="9.2545%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (1,109 samples, 1.03%)</title><rect x="9.0045%" y="1685" width="1.0329%" height="15" fill="rgb(239,156,16)" fg:x="9668" fg:w="1109"/><text x="9.2545%" y="1695.50"></text></g><g><title>std::panicking::try (1,109 samples, 1.03%)</title><rect x="9.0045%" y="1669" width="1.0329%" height="15" fill="rgb(224,27,38)" fg:x="9668" fg:w="1109"/><text x="9.2545%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (1,109 samples, 1.03%)</title><rect x="9.0045%" y="1653" width="1.0329%" height="15" fill="rgb(224,39,27)" fg:x="9668" fg:w="1109"/><text x="9.2545%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,109 samples, 1.03%)</title><rect x="9.0045%" y="1637" width="1.0329%" height="15" fill="rgb(215,92,29)" fg:x="9668" fg:w="1109"/><text x="9.2545%" y="1647.50"></text></g><g><title>aptos_block_executor::output_delta_resolver::OutputDeltaResolver&lt;T&gt;::resolve::{{closure}} (386 samples, 0.36%)</title><rect x="9.6779%" y="1621" width="0.3595%" height="15" fill="rgb(207,159,16)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1631.50"></text></g><g><title>core::mem::drop (386 samples, 0.36%)</title><rect x="9.6779%" y="1605" width="0.3595%" height="15" fill="rgb(238,163,47)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::output_delta_resolver::OutputDeltaResolver&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1589" width="0.3595%" height="15" fill="rgb(219,91,49)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::MVHashMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1573" width="0.3595%" height="15" fill="rgb(227,167,31)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;dashmap::DashMap&lt;aptos_types::state_store::state_key::StateKey,aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1557" width="0.3595%" height="15" fill="rgb(234,80,54)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[lock_api::rwlock::RwLock&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;]&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1541" width="0.3595%" height="15" fill="rgb(212,114,2)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[lock_api::rwlock::RwLock&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;]&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1525" width="0.3595%" height="15" fill="rgb(234,50,24)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1509" width="0.3595%" height="15" fill="rgb(221,68,8)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1493" width="0.3595%" height="15" fill="rgb(254,180,31)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1477" width="0.3595%" height="15" fill="rgb(247,130,50)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;)&gt;&gt; (386 samples, 0.36%)</title><rect x="9.6779%" y="1461" width="0.3595%" height="15" fill="rgb(211,109,4)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1471.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (386 samples, 0.36%)</title><rect x="9.6779%" y="1445" width="0.3595%" height="15" fill="rgb(238,50,21)" fg:x="10391" fg:w="386"/><text x="9.9279%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::free_buckets (40 samples, 0.04%)</title><rect x="10.0002%" y="1429" width="0.0373%" height="15" fill="rgb(225,57,45)" fg:x="10737" fg:w="40"/><text x="10.2502%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (40 samples, 0.04%)</title><rect x="10.0002%" y="1413" width="0.0373%" height="15" fill="rgb(209,196,50)" fg:x="10737" fg:w="40"/><text x="10.2502%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (40 samples, 0.04%)</title><rect x="10.0002%" y="1397" width="0.0373%" height="15" fill="rgb(242,140,13)" fg:x="10737" fg:w="40"/><text x="10.2502%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (40 samples, 0.04%)</title><rect x="10.0002%" y="1381" width="0.0373%" height="15" fill="rgb(217,111,7)" fg:x="10737" fg:w="40"/><text x="10.2502%" y="1391.50"></text></g><g><title>cfree (40 samples, 0.04%)</title><rect x="10.0002%" y="1365" width="0.0373%" height="15" fill="rgb(253,193,51)" fg:x="10737" fg:w="40"/><text x="10.2502%" y="1375.50"></text></g><g><title>[libc.so.6] (40 samples, 0.04%)</title><rect x="10.0002%" y="1349" width="0.0373%" height="15" fill="rgb(252,70,29)" fg:x="10737" fg:w="40"/><text x="10.2502%" y="1359.50"></text></g><g><title>[libc.so.6] (40 samples, 0.04%)</title><rect x="10.0002%" y="1333" width="0.0373%" height="15" fill="rgb(232,127,12)" fg:x="10737" fg:w="40"/><text x="10.2502%" y="1343.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="10.0197%" y="1317" width="0.0177%" height="15" fill="rgb(211,180,21)" fg:x="10758" fg:w="19"/><text x="10.2697%" y="1327.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="10.0859%" y="1333" width="0.0149%" height="15" fill="rgb(229,72,13)" fg:x="10829" fg:w="16"/><text x="10.3359%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (28 samples, 0.03%)</title><rect x="10.0812%" y="1429" width="0.0261%" height="15" fill="rgb(240,211,49)" fg:x="10824" fg:w="28"/><text x="10.3312%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="10.0831%" y="1413" width="0.0242%" height="15" fill="rgb(219,149,40)" fg:x="10826" fg:w="26"/><text x="10.3331%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="10.0831%" y="1397" width="0.0242%" height="15" fill="rgb(210,127,46)" fg:x="10826" fg:w="26"/><text x="10.3331%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.02%)</title><rect x="10.0831%" y="1381" width="0.0242%" height="15" fill="rgb(220,106,7)" fg:x="10826" fg:w="26"/><text x="10.3331%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="10.0831%" y="1365" width="0.0242%" height="15" fill="rgb(249,31,22)" fg:x="10826" fg:w="26"/><text x="10.3331%" y="1375.50"></text></g><g><title>cfree (25 samples, 0.02%)</title><rect x="10.0840%" y="1349" width="0.0233%" height="15" fill="rgb(253,1,49)" fg:x="10827" fg:w="25"/><text x="10.3340%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="10.2591%" y="1285" width="0.0130%" height="15" fill="rgb(227,144,33)" fg:x="11015" fg:w="14"/><text x="10.5091%" y="1295.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (14 samples, 0.01%)</title><rect x="10.2591%" y="1269" width="0.0130%" height="15" fill="rgb(249,163,44)" fg:x="11015" fg:w="14"/><text x="10.5091%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (13 samples, 0.01%)</title><rect x="10.2600%" y="1253" width="0.0121%" height="15" fill="rgb(234,15,39)" fg:x="11016" fg:w="13"/><text x="10.5100%" y="1263.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (25 samples, 0.02%)</title><rect x="10.2759%" y="1285" width="0.0233%" height="15" fill="rgb(207,66,16)" fg:x="11033" fg:w="25"/><text x="10.5259%" y="1295.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (219 samples, 0.20%)</title><rect x="10.1101%" y="1317" width="0.2040%" height="15" fill="rgb(233,112,24)" fg:x="10855" fg:w="219"/><text x="10.3601%" y="1327.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (208 samples, 0.19%)</title><rect x="10.1203%" y="1301" width="0.1937%" height="15" fill="rgb(230,90,22)" fg:x="10866" fg:w="208"/><text x="10.3703%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::debt::list::NodeReservation&gt; (16 samples, 0.01%)</title><rect x="10.2992%" y="1285" width="0.0149%" height="15" fill="rgb(229,61,13)" fg:x="11058" fg:w="16"/><text x="10.5492%" y="1295.50"></text></g><g><title>&lt;arc_swap::debt::list::NodeReservation as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="10.2992%" y="1269" width="0.0149%" height="15" fill="rgb(225,57,24)" fg:x="11058" fg:w="16"/><text x="10.5492%" y="1279.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (232 samples, 0.22%)</title><rect x="10.1092%" y="1333" width="0.2161%" height="15" fill="rgb(208,169,48)" fg:x="10854" fg:w="232"/><text x="10.3592%" y="1343.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (12 samples, 0.01%)</title><rect x="10.3141%" y="1317" width="0.0112%" height="15" fill="rgb(244,218,51)" fg:x="11074" fg:w="12"/><text x="10.5641%" y="1327.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="10.3141%" y="1301" width="0.0112%" height="15" fill="rgb(214,148,10)" fg:x="11074" fg:w="12"/><text x="10.5641%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="10.3141%" y="1285" width="0.0112%" height="15" fill="rgb(225,174,27)" fg:x="11074" fg:w="12"/><text x="10.5641%" y="1295.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (235 samples, 0.22%)</title><rect x="10.1073%" y="1413" width="0.2189%" height="15" fill="rgb(230,96,26)" fg:x="10852" fg:w="235"/><text x="10.3573%" y="1423.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (235 samples, 0.22%)</title><rect x="10.1073%" y="1397" width="0.2189%" height="15" fill="rgb(232,10,30)" fg:x="10852" fg:w="235"/><text x="10.3573%" y="1407.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (235 samples, 0.22%)</title><rect x="10.1073%" y="1381" width="0.2189%" height="15" fill="rgb(222,8,50)" fg:x="10852" fg:w="235"/><text x="10.3573%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (235 samples, 0.22%)</title><rect x="10.1073%" y="1365" width="0.2189%" height="15" fill="rgb(213,81,27)" fg:x="10852" fg:w="235"/><text x="10.3573%" y="1375.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (235 samples, 0.22%)</title><rect x="10.1073%" y="1349" width="0.2189%" height="15" fill="rgb(245,50,10)" fg:x="10852" fg:w="235"/><text x="10.3573%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (280 samples, 0.26%)</title><rect x="10.0710%" y="1573" width="0.2608%" height="15" fill="rgb(216,100,18)" fg:x="10813" fg:w="280"/><text x="10.3210%" y="1583.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (280 samples, 0.26%)</title><rect x="10.0710%" y="1557" width="0.2608%" height="15" fill="rgb(236,147,54)" fg:x="10813" fg:w="280"/><text x="10.3210%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (279 samples, 0.26%)</title><rect x="10.0719%" y="1541" width="0.2599%" height="15" fill="rgb(205,143,26)" fg:x="10814" fg:w="279"/><text x="10.3219%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (277 samples, 0.26%)</title><rect x="10.0738%" y="1525" width="0.2580%" height="15" fill="rgb(236,26,9)" fg:x="10816" fg:w="277"/><text x="10.3238%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (277 samples, 0.26%)</title><rect x="10.0738%" y="1509" width="0.2580%" height="15" fill="rgb(221,165,53)" fg:x="10816" fg:w="277"/><text x="10.3238%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (277 samples, 0.26%)</title><rect x="10.0738%" y="1493" width="0.2580%" height="15" fill="rgb(214,110,17)" fg:x="10816" fg:w="277"/><text x="10.3238%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (277 samples, 0.26%)</title><rect x="10.0738%" y="1477" width="0.2580%" height="15" fill="rgb(237,197,12)" fg:x="10816" fg:w="277"/><text x="10.3238%" y="1487.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (277 samples, 0.26%)</title><rect x="10.0738%" y="1461" width="0.2580%" height="15" fill="rgb(205,84,17)" fg:x="10816" fg:w="277"/><text x="10.3238%" y="1471.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (269 samples, 0.25%)</title><rect x="10.0812%" y="1445" width="0.2505%" height="15" fill="rgb(237,18,45)" fg:x="10824" fg:w="269"/><text x="10.3312%" y="1455.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (241 samples, 0.22%)</title><rect x="10.1073%" y="1429" width="0.2245%" height="15" fill="rgb(221,87,14)" fg:x="10852" fg:w="241"/><text x="10.3573%" y="1439.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (51 samples, 0.05%)</title><rect x="10.3457%" y="1205" width="0.0475%" height="15" fill="rgb(238,186,15)" fg:x="11108" fg:w="51"/><text x="10.5957%" y="1215.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (49 samples, 0.05%)</title><rect x="10.3476%" y="1189" width="0.0456%" height="15" fill="rgb(208,115,11)" fg:x="11110" fg:w="49"/><text x="10.5976%" y="1199.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (56 samples, 0.05%)</title><rect x="10.3457%" y="1301" width="0.0522%" height="15" fill="rgb(254,175,0)" fg:x="11108" fg:w="56"/><text x="10.5957%" y="1311.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (56 samples, 0.05%)</title><rect x="10.3457%" y="1285" width="0.0522%" height="15" fill="rgb(227,24,42)" fg:x="11108" fg:w="56"/><text x="10.5957%" y="1295.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (56 samples, 0.05%)</title><rect x="10.3457%" y="1269" width="0.0522%" height="15" fill="rgb(223,211,37)" fg:x="11108" fg:w="56"/><text x="10.5957%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 0.05%)</title><rect x="10.3457%" y="1253" width="0.0522%" height="15" fill="rgb(235,49,27)" fg:x="11108" fg:w="56"/><text x="10.5957%" y="1263.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (56 samples, 0.05%)</title><rect x="10.3457%" y="1237" width="0.0522%" height="15" fill="rgb(254,97,51)" fg:x="11108" fg:w="56"/><text x="10.5957%" y="1247.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (56 samples, 0.05%)</title><rect x="10.3457%" y="1221" width="0.0522%" height="15" fill="rgb(249,51,40)" fg:x="11108" fg:w="56"/><text x="10.5957%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (60 samples, 0.06%)</title><rect x="10.3439%" y="1461" width="0.0559%" height="15" fill="rgb(210,128,45)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1471.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (60 samples, 0.06%)</title><rect x="10.3439%" y="1445" width="0.0559%" height="15" fill="rgb(224,137,50)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (60 samples, 0.06%)</title><rect x="10.3439%" y="1429" width="0.0559%" height="15" fill="rgb(242,15,9)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.06%)</title><rect x="10.3439%" y="1413" width="0.0559%" height="15" fill="rgb(233,187,41)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (60 samples, 0.06%)</title><rect x="10.3439%" y="1397" width="0.0559%" height="15" fill="rgb(227,2,29)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (60 samples, 0.06%)</title><rect x="10.3439%" y="1381" width="0.0559%" height="15" fill="rgb(222,70,3)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (60 samples, 0.06%)</title><rect x="10.3439%" y="1365" width="0.0559%" height="15" fill="rgb(213,11,42)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1375.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (60 samples, 0.06%)</title><rect x="10.3439%" y="1349" width="0.0559%" height="15" fill="rgb(225,150,9)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1359.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (60 samples, 0.06%)</title><rect x="10.3439%" y="1333" width="0.0559%" height="15" fill="rgb(230,162,45)" fg:x="11106" fg:w="60"/><text x="10.5939%" y="1343.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (58 samples, 0.05%)</title><rect x="10.3457%" y="1317" width="0.0540%" height="15" fill="rgb(222,14,52)" fg:x="11108" fg:w="58"/><text x="10.5957%" y="1327.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="10.4091%" y="1301" width="0.0102%" height="15" fill="rgb(254,198,14)" fg:x="11176" fg:w="11"/><text x="10.6591%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="10.4091%" y="1285" width="0.0102%" height="15" fill="rgb(220,217,30)" fg:x="11176" fg:w="11"/><text x="10.6591%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="10.4091%" y="1269" width="0.0102%" height="15" fill="rgb(215,146,41)" fg:x="11176" fg:w="11"/><text x="10.6591%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="10.4091%" y="1253" width="0.0102%" height="15" fill="rgb(217,27,36)" fg:x="11176" fg:w="11"/><text x="10.6591%" y="1263.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (30 samples, 0.03%)</title><rect x="10.4007%" y="1413" width="0.0279%" height="15" fill="rgb(219,218,39)" fg:x="11167" fg:w="30"/><text x="10.6507%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (30 samples, 0.03%)</title><rect x="10.4007%" y="1397" width="0.0279%" height="15" fill="rgb(219,4,42)" fg:x="11167" fg:w="30"/><text x="10.6507%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (30 samples, 0.03%)</title><rect x="10.4007%" y="1381" width="0.0279%" height="15" fill="rgb(249,119,36)" fg:x="11167" fg:w="30"/><text x="10.6507%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.03%)</title><rect x="10.4007%" y="1365" width="0.0279%" height="15" fill="rgb(209,23,33)" fg:x="11167" fg:w="30"/><text x="10.6507%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.02%)</title><rect x="10.4091%" y="1349" width="0.0196%" height="15" fill="rgb(211,10,0)" fg:x="11176" fg:w="21"/><text x="10.6591%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.02%)</title><rect x="10.4091%" y="1333" width="0.0196%" height="15" fill="rgb(208,99,37)" fg:x="11176" fg:w="21"/><text x="10.6591%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.02%)</title><rect x="10.4091%" y="1317" width="0.0196%" height="15" fill="rgb(213,132,31)" fg:x="11176" fg:w="21"/><text x="10.6591%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (19 samples, 0.02%)</title><rect x="10.4286%" y="1381" width="0.0177%" height="15" fill="rgb(243,129,40)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1391.50"></text></g><g><title>rayon_core::job::JobRef::execute (19 samples, 0.02%)</title><rect x="10.4286%" y="1365" width="0.0177%" height="15" fill="rgb(210,66,33)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (19 samples, 0.02%)</title><rect x="10.4286%" y="1349" width="0.0177%" height="15" fill="rgb(209,189,4)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1359.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (19 samples, 0.02%)</title><rect x="10.4286%" y="1333" width="0.0177%" height="15" fill="rgb(214,107,37)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.02%)</title><rect x="10.4286%" y="1317" width="0.0177%" height="15" fill="rgb(245,88,54)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="10.4286%" y="1301" width="0.0177%" height="15" fill="rgb(205,146,20)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1311.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="10.4286%" y="1285" width="0.0177%" height="15" fill="rgb(220,161,25)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="10.4286%" y="1269" width="0.0177%" height="15" fill="rgb(215,152,15)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="10.4286%" y="1253" width="0.0177%" height="15" fill="rgb(233,192,44)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1263.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (19 samples, 0.02%)</title><rect x="10.4286%" y="1237" width="0.0177%" height="15" fill="rgb(240,170,46)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (19 samples, 0.02%)</title><rect x="10.4286%" y="1221" width="0.0177%" height="15" fill="rgb(207,104,33)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.02%)</title><rect x="10.4286%" y="1205" width="0.0177%" height="15" fill="rgb(219,21,39)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="10.4286%" y="1189" width="0.0177%" height="15" fill="rgb(214,133,29)" fg:x="11197" fg:w="19"/><text x="10.6786%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="10.4296%" y="1173" width="0.0168%" height="15" fill="rgb(226,93,6)" fg:x="11198" fg:w="18"/><text x="10.6796%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="10.4296%" y="1157" width="0.0168%" height="15" fill="rgb(252,222,34)" fg:x="11198" fg:w="18"/><text x="10.6796%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="10.4296%" y="1141" width="0.0168%" height="15" fill="rgb(252,92,48)" fg:x="11198" fg:w="18"/><text x="10.6796%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 0.02%)</title><rect x="10.4286%" y="1413" width="0.0233%" height="15" fill="rgb(245,223,24)" fg:x="11197" fg:w="25"/><text x="10.6786%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.02%)</title><rect x="10.4286%" y="1397" width="0.0233%" height="15" fill="rgb(205,176,3)" fg:x="11197" fg:w="25"/><text x="10.6786%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (15 samples, 0.01%)</title><rect x="10.4584%" y="1285" width="0.0140%" height="15" fill="rgb(235,151,15)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1295.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (15 samples, 0.01%)</title><rect x="10.4584%" y="1269" width="0.0140%" height="15" fill="rgb(237,209,11)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (15 samples, 0.01%)</title><rect x="10.4584%" y="1253" width="0.0140%" height="15" fill="rgb(243,227,24)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="10.4584%" y="1237" width="0.0140%" height="15" fill="rgb(239,193,16)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.01%)</title><rect x="10.4584%" y="1221" width="0.0140%" height="15" fill="rgb(231,27,9)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15 samples, 0.01%)</title><rect x="10.4584%" y="1205" width="0.0140%" height="15" fill="rgb(219,169,10)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.01%)</title><rect x="10.4584%" y="1189" width="0.0140%" height="15" fill="rgb(244,229,43)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1199.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="10.4584%" y="1173" width="0.0140%" height="15" fill="rgb(254,38,20)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1183.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (15 samples, 0.01%)</title><rect x="10.4584%" y="1157" width="0.0140%" height="15" fill="rgb(250,47,30)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1167.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (15 samples, 0.01%)</title><rect x="10.4584%" y="1141" width="0.0140%" height="15" fill="rgb(224,124,36)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1151.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (15 samples, 0.01%)</title><rect x="10.4584%" y="1125" width="0.0140%" height="15" fill="rgb(246,68,51)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1135.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (15 samples, 0.01%)</title><rect x="10.4584%" y="1109" width="0.0140%" height="15" fill="rgb(253,43,49)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1119.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (15 samples, 0.01%)</title><rect x="10.4584%" y="1093" width="0.0140%" height="15" fill="rgb(219,54,36)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="10.4584%" y="1077" width="0.0140%" height="15" fill="rgb(227,133,34)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1087.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (15 samples, 0.01%)</title><rect x="10.4584%" y="1061" width="0.0140%" height="15" fill="rgb(247,227,15)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1071.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (15 samples, 0.01%)</title><rect x="10.4584%" y="1045" width="0.0140%" height="15" fill="rgb(229,96,14)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1055.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (15 samples, 0.01%)</title><rect x="10.4584%" y="1029" width="0.0140%" height="15" fill="rgb(220,79,17)" fg:x="11229" fg:w="15"/><text x="10.7084%" y="1039.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (14 samples, 0.01%)</title><rect x="10.4594%" y="1013" width="0.0130%" height="15" fill="rgb(205,131,53)" fg:x="11230" fg:w="14"/><text x="10.7094%" y="1023.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.01%)</title><rect x="10.4724%" y="1237" width="0.0130%" height="15" fill="rgb(209,50,29)" fg:x="11244" fg:w="14"/><text x="10.7224%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.01%)</title><rect x="10.4724%" y="1221" width="0.0130%" height="15" fill="rgb(245,86,46)" fg:x="11244" fg:w="14"/><text x="10.7224%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.01%)</title><rect x="10.4724%" y="1205" width="0.0130%" height="15" fill="rgb(235,66,46)" fg:x="11244" fg:w="14"/><text x="10.7224%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.01%)</title><rect x="10.4724%" y="1189" width="0.0130%" height="15" fill="rgb(232,148,31)" fg:x="11244" fg:w="14"/><text x="10.7224%" y="1199.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (162 samples, 0.15%)</title><rect x="10.3392%" y="1525" width="0.1509%" height="15" fill="rgb(217,149,8)" fg:x="11101" fg:w="162"/><text x="10.5892%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (162 samples, 0.15%)</title><rect x="10.3392%" y="1509" width="0.1509%" height="15" fill="rgb(209,183,11)" fg:x="11101" fg:w="162"/><text x="10.5892%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (162 samples, 0.15%)</title><rect x="10.3392%" y="1493" width="0.1509%" height="15" fill="rgb(208,55,20)" fg:x="11101" fg:w="162"/><text x="10.5892%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (162 samples, 0.15%)</title><rect x="10.3392%" y="1477" width="0.1509%" height="15" fill="rgb(218,39,14)" fg:x="11101" fg:w="162"/><text x="10.5892%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (97 samples, 0.09%)</title><rect x="10.3997%" y="1461" width="0.0903%" height="15" fill="rgb(216,169,33)" fg:x="11166" fg:w="97"/><text x="10.6497%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (97 samples, 0.09%)</title><rect x="10.3997%" y="1445" width="0.0903%" height="15" fill="rgb(233,80,24)" fg:x="11166" fg:w="97"/><text x="10.6497%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (97 samples, 0.09%)</title><rect x="10.3997%" y="1429" width="0.0903%" height="15" fill="rgb(213,179,31)" fg:x="11166" fg:w="97"/><text x="10.6497%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (41 samples, 0.04%)</title><rect x="10.4519%" y="1413" width="0.0382%" height="15" fill="rgb(209,19,5)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.04%)</title><rect x="10.4519%" y="1397" width="0.0382%" height="15" fill="rgb(219,18,35)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1407.50"></text></g><g><title>std::panicking::try (41 samples, 0.04%)</title><rect x="10.4519%" y="1381" width="0.0382%" height="15" fill="rgb(209,169,16)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.04%)</title><rect x="10.4519%" y="1365" width="0.0382%" height="15" fill="rgb(245,90,51)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.04%)</title><rect x="10.4519%" y="1349" width="0.0382%" height="15" fill="rgb(220,99,45)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (41 samples, 0.04%)</title><rect x="10.4519%" y="1333" width="0.0382%" height="15" fill="rgb(249,89,25)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (41 samples, 0.04%)</title><rect x="10.4519%" y="1317" width="0.0382%" height="15" fill="rgb(239,193,0)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.04%)</title><rect x="10.4519%" y="1301" width="0.0382%" height="15" fill="rgb(231,126,1)" fg:x="11222" fg:w="41"/><text x="10.7019%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.02%)</title><rect x="10.4724%" y="1285" width="0.0177%" height="15" fill="rgb(243,166,3)" fg:x="11244" fg:w="19"/><text x="10.7224%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="10.4724%" y="1269" width="0.0177%" height="15" fill="rgb(223,22,34)" fg:x="11244" fg:w="19"/><text x="10.7224%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.02%)</title><rect x="10.4724%" y="1253" width="0.0177%" height="15" fill="rgb(251,52,51)" fg:x="11244" fg:w="19"/><text x="10.7224%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (12 samples, 0.01%)</title><rect x="10.5078%" y="1141" width="0.0112%" height="15" fill="rgb(221,165,28)" fg:x="11282" fg:w="12"/><text x="10.7578%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="10.5078%" y="1125" width="0.0112%" height="15" fill="rgb(218,121,47)" fg:x="11282" fg:w="12"/><text x="10.7578%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="10.5078%" y="1109" width="0.0112%" height="15" fill="rgb(209,120,9)" fg:x="11282" fg:w="12"/><text x="10.7578%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="10.5078%" y="1093" width="0.0112%" height="15" fill="rgb(236,68,12)" fg:x="11282" fg:w="12"/><text x="10.7578%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="10.5078%" y="1077" width="0.0112%" height="15" fill="rgb(225,194,26)" fg:x="11282" fg:w="12"/><text x="10.7578%" y="1087.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="10.5078%" y="1061" width="0.0112%" height="15" fill="rgb(231,84,39)" fg:x="11282" fg:w="12"/><text x="10.7578%" y="1071.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (12 samples, 0.01%)</title><rect x="10.6112%" y="997" width="0.0112%" height="15" fill="rgb(210,11,45)" fg:x="11393" fg:w="12"/><text x="10.8612%" y="1007.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (112 samples, 0.10%)</title><rect x="10.5218%" y="1029" width="0.1043%" height="15" fill="rgb(224,54,52)" fg:x="11297" fg:w="112"/><text x="10.7718%" y="1039.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (105 samples, 0.10%)</title><rect x="10.5283%" y="1013" width="0.0978%" height="15" fill="rgb(238,102,14)" fg:x="11304" fg:w="105"/><text x="10.7783%" y="1023.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (120 samples, 0.11%)</title><rect x="10.5190%" y="1125" width="0.1118%" height="15" fill="rgb(243,160,52)" fg:x="11294" fg:w="120"/><text x="10.7690%" y="1135.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (120 samples, 0.11%)</title><rect x="10.5190%" y="1109" width="0.1118%" height="15" fill="rgb(216,114,19)" fg:x="11294" fg:w="120"/><text x="10.7690%" y="1119.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (120 samples, 0.11%)</title><rect x="10.5190%" y="1093" width="0.1118%" height="15" fill="rgb(244,166,37)" fg:x="11294" fg:w="120"/><text x="10.7690%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (119 samples, 0.11%)</title><rect x="10.5199%" y="1077" width="0.1108%" height="15" fill="rgb(246,29,44)" fg:x="11295" fg:w="119"/><text x="10.7699%" y="1087.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (119 samples, 0.11%)</title><rect x="10.5199%" y="1061" width="0.1108%" height="15" fill="rgb(215,56,53)" fg:x="11295" fg:w="119"/><text x="10.7699%" y="1071.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (118 samples, 0.11%)</title><rect x="10.5208%" y="1045" width="0.1099%" height="15" fill="rgb(217,60,2)" fg:x="11296" fg:w="118"/><text x="10.7708%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (133 samples, 0.12%)</title><rect x="10.5078%" y="1285" width="0.1239%" height="15" fill="rgb(207,26,24)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1295.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (133 samples, 0.12%)</title><rect x="10.5078%" y="1269" width="0.1239%" height="15" fill="rgb(252,210,15)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (133 samples, 0.12%)</title><rect x="10.5078%" y="1253" width="0.1239%" height="15" fill="rgb(253,209,26)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (133 samples, 0.12%)</title><rect x="10.5078%" y="1237" width="0.1239%" height="15" fill="rgb(238,170,14)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (133 samples, 0.12%)</title><rect x="10.5078%" y="1221" width="0.1239%" height="15" fill="rgb(216,178,15)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (133 samples, 0.12%)</title><rect x="10.5078%" y="1205" width="0.1239%" height="15" fill="rgb(250,197,2)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (133 samples, 0.12%)</title><rect x="10.5078%" y="1189" width="0.1239%" height="15" fill="rgb(212,70,42)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1199.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (133 samples, 0.12%)</title><rect x="10.5078%" y="1173" width="0.1239%" height="15" fill="rgb(227,213,9)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1183.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (133 samples, 0.12%)</title><rect x="10.5078%" y="1157" width="0.1239%" height="15" fill="rgb(245,99,25)" fg:x="11282" fg:w="133"/><text x="10.7578%" y="1167.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (121 samples, 0.11%)</title><rect x="10.5190%" y="1141" width="0.1127%" height="15" fill="rgb(250,82,29)" fg:x="11294" fg:w="121"/><text x="10.7690%" y="1151.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.02%)</title><rect x="10.6317%" y="1237" width="0.0158%" height="15" fill="rgb(241,226,54)" fg:x="11415" fg:w="17"/><text x="10.8817%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.02%)</title><rect x="10.6317%" y="1221" width="0.0158%" height="15" fill="rgb(221,99,41)" fg:x="11415" fg:w="17"/><text x="10.8817%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="10.6317%" y="1205" width="0.0158%" height="15" fill="rgb(213,90,21)" fg:x="11415" fg:w="17"/><text x="10.8817%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="10.6317%" y="1189" width="0.0158%" height="15" fill="rgb(205,208,24)" fg:x="11415" fg:w="17"/><text x="10.8817%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="10.6317%" y="1173" width="0.0158%" height="15" fill="rgb(246,31,12)" fg:x="11415" fg:w="17"/><text x="10.8817%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="10.6317%" y="1157" width="0.0158%" height="15" fill="rgb(213,154,6)" fg:x="11415" fg:w="17"/><text x="10.8817%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="10.6317%" y="1141" width="0.0158%" height="15" fill="rgb(222,163,29)" fg:x="11415" fg:w="17"/><text x="10.8817%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="10.6624%" y="469" width="0.0112%" height="15" fill="rgb(227,201,8)" fg:x="11448" fg:w="12"/><text x="10.9124%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="10.6624%" y="453" width="0.0112%" height="15" fill="rgb(233,9,32)" fg:x="11448" fg:w="12"/><text x="10.9124%" y="463.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (13 samples, 0.01%)</title><rect x="10.6624%" y="533" width="0.0121%" height="15" fill="rgb(217,54,24)" fg:x="11448" fg:w="13"/><text x="10.9124%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.01%)</title><rect x="10.6624%" y="517" width="0.0121%" height="15" fill="rgb(235,192,0)" fg:x="11448" fg:w="13"/><text x="10.9124%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.01%)</title><rect x="10.6624%" y="501" width="0.0121%" height="15" fill="rgb(235,45,9)" fg:x="11448" fg:w="13"/><text x="10.9124%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.01%)</title><rect x="10.6624%" y="485" width="0.0121%" height="15" fill="rgb(246,42,40)" fg:x="11448" fg:w="13"/><text x="10.9124%" y="495.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (17 samples, 0.02%)</title><rect x="10.6605%" y="917" width="0.0158%" height="15" fill="rgb(248,111,24)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="927.50"></text></g><g><title>rayon_core::job::JobRef::execute (17 samples, 0.02%)</title><rect x="10.6605%" y="901" width="0.0158%" height="15" fill="rgb(249,65,22)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="911.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (17 samples, 0.02%)</title><rect x="10.6605%" y="885" width="0.0158%" height="15" fill="rgb(238,111,51)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="895.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (17 samples, 0.02%)</title><rect x="10.6605%" y="869" width="0.0158%" height="15" fill="rgb(250,118,22)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="879.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="10.6605%" y="853" width="0.0158%" height="15" fill="rgb(234,84,26)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="863.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="10.6605%" y="837" width="0.0158%" height="15" fill="rgb(243,172,12)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="847.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="10.6605%" y="821" width="0.0158%" height="15" fill="rgb(236,150,49)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="831.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="10.6605%" y="805" width="0.0158%" height="15" fill="rgb(225,197,26)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="815.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="10.6605%" y="789" width="0.0158%" height="15" fill="rgb(214,17,42)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="799.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (17 samples, 0.02%)</title><rect x="10.6605%" y="773" width="0.0158%" height="15" fill="rgb(224,165,40)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.02%)</title><rect x="10.6605%" y="757" width="0.0158%" height="15" fill="rgb(246,100,4)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="10.6605%" y="741" width="0.0158%" height="15" fill="rgb(222,103,0)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="10.6605%" y="725" width="0.0158%" height="15" fill="rgb(227,189,26)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="735.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="10.6605%" y="709" width="0.0158%" height="15" fill="rgb(214,202,17)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="719.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="10.6605%" y="693" width="0.0158%" height="15" fill="rgb(229,111,3)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="703.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="10.6605%" y="677" width="0.0158%" height="15" fill="rgb(229,172,15)" fg:x="11446" fg:w="17"/><text x="10.9105%" y="687.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 0.01%)</title><rect x="10.6624%" y="661" width="0.0140%" height="15" fill="rgb(230,224,35)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="671.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.01%)</title><rect x="10.6624%" y="645" width="0.0140%" height="15" fill="rgb(251,141,6)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="655.50"></text></g><g><title>std::panicking::try (15 samples, 0.01%)</title><rect x="10.6624%" y="629" width="0.0140%" height="15" fill="rgb(225,208,6)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="639.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.01%)</title><rect x="10.6624%" y="613" width="0.0140%" height="15" fill="rgb(246,181,16)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="10.6624%" y="597" width="0.0140%" height="15" fill="rgb(227,129,36)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="607.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (15 samples, 0.01%)</title><rect x="10.6624%" y="581" width="0.0140%" height="15" fill="rgb(248,117,24)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.01%)</title><rect x="10.6624%" y="565" width="0.0140%" height="15" fill="rgb(214,185,35)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.01%)</title><rect x="10.6624%" y="549" width="0.0140%" height="15" fill="rgb(236,150,34)" fg:x="11448" fg:w="15"/><text x="10.9124%" y="559.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (19 samples, 0.02%)</title><rect x="10.6596%" y="949" width="0.0177%" height="15" fill="rgb(243,228,27)" fg:x="11445" fg:w="19"/><text x="10.9096%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.02%)</title><rect x="10.6596%" y="933" width="0.0177%" height="15" fill="rgb(245,77,44)" fg:x="11445" fg:w="19"/><text x="10.9096%" y="943.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.01%)</title><rect x="10.6782%" y="773" width="0.0130%" height="15" fill="rgb(235,214,42)" fg:x="11465" fg:w="14"/><text x="10.9282%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.01%)</title><rect x="10.6782%" y="757" width="0.0130%" height="15" fill="rgb(221,74,3)" fg:x="11465" fg:w="14"/><text x="10.9282%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.01%)</title><rect x="10.6782%" y="741" width="0.0130%" height="15" fill="rgb(206,121,29)" fg:x="11465" fg:w="14"/><text x="10.9282%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.01%)</title><rect x="10.6782%" y="725" width="0.0130%" height="15" fill="rgb(249,131,53)" fg:x="11465" fg:w="14"/><text x="10.9282%" y="735.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.01%)</title><rect x="10.6792%" y="709" width="0.0121%" height="15" fill="rgb(236,170,29)" fg:x="11466" fg:w="13"/><text x="10.9292%" y="719.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.01%)</title><rect x="10.6792%" y="693" width="0.0121%" height="15" fill="rgb(247,96,15)" fg:x="11466" fg:w="13"/><text x="10.9292%" y="703.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.01%)</title><rect x="10.6792%" y="677" width="0.0121%" height="15" fill="rgb(211,210,7)" fg:x="11466" fg:w="13"/><text x="10.9292%" y="687.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (12 samples, 0.01%)</title><rect x="10.6931%" y="469" width="0.0112%" height="15" fill="rgb(240,88,50)" fg:x="11481" fg:w="12"/><text x="10.9431%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (12 samples, 0.01%)</title><rect x="10.6931%" y="453" width="0.0112%" height="15" fill="rgb(209,229,26)" fg:x="11481" fg:w="12"/><text x="10.9431%" y="463.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.01%)</title><rect x="10.6931%" y="437" width="0.0112%" height="15" fill="rgb(210,68,23)" fg:x="11481" fg:w="12"/><text x="10.9431%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (12 samples, 0.01%)</title><rect x="10.6931%" y="421" width="0.0112%" height="15" fill="rgb(229,180,13)" fg:x="11481" fg:w="12"/><text x="10.9431%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (61 samples, 0.06%)</title><rect x="10.6484%" y="1205" width="0.0568%" height="15" fill="rgb(236,53,44)" fg:x="11433" fg:w="61"/><text x="10.8984%" y="1215.50"></text></g><g><title>rayon_core::job::JobRef::execute (61 samples, 0.06%)</title><rect x="10.6484%" y="1189" width="0.0568%" height="15" fill="rgb(244,214,29)" fg:x="11433" fg:w="61"/><text x="10.8984%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (61 samples, 0.06%)</title><rect x="10.6484%" y="1173" width="0.0568%" height="15" fill="rgb(220,75,29)" fg:x="11433" fg:w="61"/><text x="10.8984%" y="1183.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (60 samples, 0.06%)</title><rect x="10.6494%" y="1157" width="0.0559%" height="15" fill="rgb(214,183,37)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (60 samples, 0.06%)</title><rect x="10.6494%" y="1141" width="0.0559%" height="15" fill="rgb(239,117,29)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (60 samples, 0.06%)</title><rect x="10.6494%" y="1125" width="0.0559%" height="15" fill="rgb(237,171,35)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1135.50"></text></g><g><title>std::panicking::try (60 samples, 0.06%)</title><rect x="10.6494%" y="1109" width="0.0559%" height="15" fill="rgb(229,178,53)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (60 samples, 0.06%)</title><rect x="10.6494%" y="1093" width="0.0559%" height="15" fill="rgb(210,102,19)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60 samples, 0.06%)</title><rect x="10.6494%" y="1077" width="0.0559%" height="15" fill="rgb(235,127,22)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1087.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (60 samples, 0.06%)</title><rect x="10.6494%" y="1061" width="0.0559%" height="15" fill="rgb(244,31,31)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (60 samples, 0.06%)</title><rect x="10.6494%" y="1045" width="0.0559%" height="15" fill="rgb(231,43,21)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (60 samples, 0.06%)</title><rect x="10.6494%" y="1029" width="0.0559%" height="15" fill="rgb(217,131,35)" fg:x="11434" fg:w="60"/><text x="10.8994%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (59 samples, 0.05%)</title><rect x="10.6503%" y="1013" width="0.0550%" height="15" fill="rgb(221,149,4)" fg:x="11435" fg:w="59"/><text x="10.9003%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (57 samples, 0.05%)</title><rect x="10.6521%" y="997" width="0.0531%" height="15" fill="rgb(232,170,28)" fg:x="11437" fg:w="57"/><text x="10.9021%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (57 samples, 0.05%)</title><rect x="10.6521%" y="981" width="0.0531%" height="15" fill="rgb(238,56,10)" fg:x="11437" fg:w="57"/><text x="10.9021%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (57 samples, 0.05%)</title><rect x="10.6521%" y="965" width="0.0531%" height="15" fill="rgb(235,196,14)" fg:x="11437" fg:w="57"/><text x="10.9021%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (30 samples, 0.03%)</title><rect x="10.6773%" y="949" width="0.0279%" height="15" fill="rgb(216,45,48)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="959.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.03%)</title><rect x="10.6773%" y="933" width="0.0279%" height="15" fill="rgb(238,213,17)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="943.50"></text></g><g><title>std::panicking::try (30 samples, 0.03%)</title><rect x="10.6773%" y="917" width="0.0279%" height="15" fill="rgb(212,13,2)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="927.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.03%)</title><rect x="10.6773%" y="901" width="0.0279%" height="15" fill="rgb(240,114,20)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 0.03%)</title><rect x="10.6773%" y="885" width="0.0279%" height="15" fill="rgb(228,41,40)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (30 samples, 0.03%)</title><rect x="10.6773%" y="869" width="0.0279%" height="15" fill="rgb(244,132,35)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (30 samples, 0.03%)</title><rect x="10.6773%" y="853" width="0.0279%" height="15" fill="rgb(253,189,4)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.03%)</title><rect x="10.6773%" y="837" width="0.0279%" height="15" fill="rgb(224,37,19)" fg:x="11464" fg:w="30"/><text x="10.9273%" y="847.50"></text></g><g><title>rayon_core::join::join_context (29 samples, 0.03%)</title><rect x="10.6782%" y="821" width="0.0270%" height="15" fill="rgb(235,223,18)" fg:x="11465" fg:w="29"/><text x="10.9282%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (29 samples, 0.03%)</title><rect x="10.6782%" y="805" width="0.0270%" height="15" fill="rgb(235,163,25)" fg:x="11465" fg:w="29"/><text x="10.9282%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29 samples, 0.03%)</title><rect x="10.6782%" y="789" width="0.0270%" height="15" fill="rgb(217,145,28)" fg:x="11465" fg:w="29"/><text x="10.9282%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.01%)</title><rect x="10.6922%" y="773" width="0.0130%" height="15" fill="rgb(223,223,32)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="783.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="10.6922%" y="757" width="0.0130%" height="15" fill="rgb(227,189,39)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="767.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="10.6922%" y="741" width="0.0130%" height="15" fill="rgb(248,10,22)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="751.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="10.6922%" y="725" width="0.0130%" height="15" fill="rgb(248,46,39)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="10.6922%" y="709" width="0.0130%" height="15" fill="rgb(248,113,48)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.01%)</title><rect x="10.6922%" y="693" width="0.0130%" height="15" fill="rgb(245,16,25)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.01%)</title><rect x="10.6922%" y="677" width="0.0130%" height="15" fill="rgb(249,152,16)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.01%)</title><rect x="10.6922%" y="661" width="0.0130%" height="15" fill="rgb(250,16,1)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="671.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.01%)</title><rect x="10.6922%" y="645" width="0.0130%" height="15" fill="rgb(249,138,3)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.01%)</title><rect x="10.6922%" y="629" width="0.0130%" height="15" fill="rgb(227,71,41)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="639.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.01%)</title><rect x="10.6922%" y="613" width="0.0130%" height="15" fill="rgb(209,184,23)" fg:x="11480" fg:w="14"/><text x="10.9422%" y="623.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.01%)</title><rect x="10.6931%" y="597" width="0.0121%" height="15" fill="rgb(223,215,31)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="607.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="10.6931%" y="581" width="0.0121%" height="15" fill="rgb(210,146,28)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="591.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="10.6931%" y="565" width="0.0121%" height="15" fill="rgb(209,183,41)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="575.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="10.6931%" y="549" width="0.0121%" height="15" fill="rgb(209,224,45)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="559.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="10.6931%" y="533" width="0.0121%" height="15" fill="rgb(224,209,51)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.01%)</title><rect x="10.6931%" y="517" width="0.0121%" height="15" fill="rgb(223,17,39)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.01%)</title><rect x="10.6931%" y="501" width="0.0121%" height="15" fill="rgb(234,204,37)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.01%)</title><rect x="10.6931%" y="485" width="0.0121%" height="15" fill="rgb(236,120,5)" fg:x="11481" fg:w="13"/><text x="10.9431%" y="495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (68 samples, 0.06%)</title><rect x="10.6484%" y="1237" width="0.0633%" height="15" fill="rgb(248,97,27)" fg:x="11433" fg:w="68"/><text x="10.8984%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (68 samples, 0.06%)</title><rect x="10.6484%" y="1221" width="0.0633%" height="15" fill="rgb(240,66,17)" fg:x="11433" fg:w="68"/><text x="10.8984%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="10.7118%" y="1045" width="0.0168%" height="15" fill="rgb(210,79,3)" fg:x="11501" fg:w="18"/><text x="10.9618%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="10.7164%" y="1029" width="0.0121%" height="15" fill="rgb(214,176,27)" fg:x="11506" fg:w="13"/><text x="10.9664%" y="1039.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (19 samples, 0.02%)</title><rect x="10.7118%" y="1109" width="0.0177%" height="15" fill="rgb(235,185,3)" fg:x="11501" fg:w="19"/><text x="10.9618%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (19 samples, 0.02%)</title><rect x="10.7118%" y="1093" width="0.0177%" height="15" fill="rgb(227,24,12)" fg:x="11501" fg:w="19"/><text x="10.9618%" y="1103.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.02%)</title><rect x="10.7118%" y="1077" width="0.0177%" height="15" fill="rgb(252,169,48)" fg:x="11501" fg:w="19"/><text x="10.9618%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (19 samples, 0.02%)</title><rect x="10.7118%" y="1061" width="0.0177%" height="15" fill="rgb(212,65,1)" fg:x="11501" fg:w="19"/><text x="10.9618%" y="1071.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (52 samples, 0.05%)</title><rect x="10.7332%" y="853" width="0.0484%" height="15" fill="rgb(242,39,24)" fg:x="11524" fg:w="52"/><text x="10.9832%" y="863.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (49 samples, 0.05%)</title><rect x="10.7360%" y="837" width="0.0456%" height="15" fill="rgb(249,32,23)" fg:x="11527" fg:w="49"/><text x="10.9860%" y="847.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (55 samples, 0.05%)</title><rect x="10.7322%" y="949" width="0.0512%" height="15" fill="rgb(251,195,23)" fg:x="11523" fg:w="55"/><text x="10.9822%" y="959.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (55 samples, 0.05%)</title><rect x="10.7322%" y="933" width="0.0512%" height="15" fill="rgb(236,174,8)" fg:x="11523" fg:w="55"/><text x="10.9822%" y="943.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (55 samples, 0.05%)</title><rect x="10.7322%" y="917" width="0.0512%" height="15" fill="rgb(220,197,8)" fg:x="11523" fg:w="55"/><text x="10.9822%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.05%)</title><rect x="10.7332%" y="901" width="0.0503%" height="15" fill="rgb(240,108,37)" fg:x="11524" fg:w="54"/><text x="10.9832%" y="911.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (54 samples, 0.05%)</title><rect x="10.7332%" y="885" width="0.0503%" height="15" fill="rgb(232,176,24)" fg:x="11524" fg:w="54"/><text x="10.9832%" y="895.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (54 samples, 0.05%)</title><rect x="10.7332%" y="869" width="0.0503%" height="15" fill="rgb(243,35,29)" fg:x="11524" fg:w="54"/><text x="10.9832%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (59 samples, 0.05%)</title><rect x="10.7295%" y="1109" width="0.0550%" height="15" fill="rgb(210,37,18)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1119.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (59 samples, 0.05%)</title><rect x="10.7295%" y="1093" width="0.0550%" height="15" fill="rgb(224,184,40)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (59 samples, 0.05%)</title><rect x="10.7295%" y="1077" width="0.0550%" height="15" fill="rgb(236,39,29)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.05%)</title><rect x="10.7295%" y="1061" width="0.0550%" height="15" fill="rgb(232,48,39)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (59 samples, 0.05%)</title><rect x="10.7295%" y="1045" width="0.0550%" height="15" fill="rgb(236,34,42)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (59 samples, 0.05%)</title><rect x="10.7295%" y="1029" width="0.0550%" height="15" fill="rgb(243,106,37)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (59 samples, 0.05%)</title><rect x="10.7295%" y="1013" width="0.0550%" height="15" fill="rgb(218,96,6)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1023.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (59 samples, 0.05%)</title><rect x="10.7295%" y="997" width="0.0550%" height="15" fill="rgb(235,130,12)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="1007.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (59 samples, 0.05%)</title><rect x="10.7295%" y="981" width="0.0550%" height="15" fill="rgb(231,95,0)" fg:x="11520" fg:w="59"/><text x="10.9795%" y="991.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (56 samples, 0.05%)</title><rect x="10.7322%" y="965" width="0.0522%" height="15" fill="rgb(228,12,23)" fg:x="11523" fg:w="56"/><text x="10.9822%" y="975.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="10.7844%" y="949" width="0.0112%" height="15" fill="rgb(216,12,1)" fg:x="11579" fg:w="12"/><text x="11.0344%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (12 samples, 0.01%)</title><rect x="10.7844%" y="933" width="0.0112%" height="15" fill="rgb(219,59,3)" fg:x="11579" fg:w="12"/><text x="11.0344%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.01%)</title><rect x="10.7844%" y="917" width="0.0112%" height="15" fill="rgb(215,208,46)" fg:x="11579" fg:w="12"/><text x="11.0344%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="10.7844%" y="901" width="0.0112%" height="15" fill="rgb(254,224,29)" fg:x="11579" fg:w="12"/><text x="11.0344%" y="911.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.01%)</title><rect x="10.7844%" y="885" width="0.0112%" height="15" fill="rgb(232,14,29)" fg:x="11579" fg:w="12"/><text x="11.0344%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.01%)</title><rect x="10.7844%" y="869" width="0.0112%" height="15" fill="rgb(208,45,52)" fg:x="11579" fg:w="12"/><text x="11.0344%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.01%)</title><rect x="10.7844%" y="853" width="0.0112%" height="15" fill="rgb(234,191,28)" fg:x="11579" fg:w="12"/><text x="11.0344%" y="863.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (24 samples, 0.02%)</title><rect x="10.7844%" y="1061" width="0.0224%" height="15" fill="rgb(244,67,43)" fg:x="11579" fg:w="24"/><text x="11.0344%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (24 samples, 0.02%)</title><rect x="10.7844%" y="1045" width="0.0224%" height="15" fill="rgb(236,189,24)" fg:x="11579" fg:w="24"/><text x="11.0344%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (24 samples, 0.02%)</title><rect x="10.7844%" y="1029" width="0.0224%" height="15" fill="rgb(239,214,33)" fg:x="11579" fg:w="24"/><text x="11.0344%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.02%)</title><rect x="10.7844%" y="1013" width="0.0224%" height="15" fill="rgb(226,176,41)" fg:x="11579" fg:w="24"/><text x="11.0344%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 0.02%)</title><rect x="10.7844%" y="997" width="0.0224%" height="15" fill="rgb(248,47,8)" fg:x="11579" fg:w="24"/><text x="11.0344%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.02%)</title><rect x="10.7844%" y="981" width="0.0224%" height="15" fill="rgb(218,81,44)" fg:x="11579" fg:w="24"/><text x="11.0344%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.02%)</title><rect x="10.7844%" y="965" width="0.0224%" height="15" fill="rgb(213,98,6)" fg:x="11579" fg:w="24"/><text x="11.0344%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="10.7965%" y="949" width="0.0102%" height="15" fill="rgb(222,85,22)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="959.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="10.7965%" y="933" width="0.0102%" height="15" fill="rgb(239,46,39)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="943.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="10.7965%" y="917" width="0.0102%" height="15" fill="rgb(237,12,29)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="927.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="10.7965%" y="901" width="0.0102%" height="15" fill="rgb(214,77,8)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="10.7965%" y="885" width="0.0102%" height="15" fill="rgb(217,168,37)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="10.7965%" y="869" width="0.0102%" height="15" fill="rgb(221,217,23)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="10.7965%" y="853" width="0.0102%" height="15" fill="rgb(243,229,36)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="10.7965%" y="837" width="0.0102%" height="15" fill="rgb(251,163,40)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="847.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="10.7965%" y="821" width="0.0102%" height="15" fill="rgb(237,222,12)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="10.7965%" y="805" width="0.0102%" height="15" fill="rgb(248,132,6)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="10.7965%" y="789" width="0.0102%" height="15" fill="rgb(227,167,50)" fg:x="11592" fg:w="11"/><text x="11.0465%" y="799.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (15 samples, 0.01%)</title><rect x="10.8077%" y="1061" width="0.0140%" height="15" fill="rgb(242,84,37)" fg:x="11604" fg:w="15"/><text x="11.0577%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.01%)</title><rect x="10.8077%" y="1045" width="0.0140%" height="15" fill="rgb(212,4,50)" fg:x="11604" fg:w="15"/><text x="11.0577%" y="1055.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (23 samples, 0.02%)</title><rect x="10.8226%" y="885" width="0.0214%" height="15" fill="rgb(230,228,32)" fg:x="11620" fg:w="23"/><text x="11.0726%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (23 samples, 0.02%)</title><rect x="10.8226%" y="869" width="0.0214%" height="15" fill="rgb(248,217,23)" fg:x="11620" fg:w="23"/><text x="11.0726%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.02%)</title><rect x="10.8226%" y="853" width="0.0214%" height="15" fill="rgb(238,197,32)" fg:x="11620" fg:w="23"/><text x="11.0726%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.02%)</title><rect x="10.8226%" y="837" width="0.0214%" height="15" fill="rgb(236,106,1)" fg:x="11620" fg:w="23"/><text x="11.0726%" y="847.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.01%)</title><rect x="10.8300%" y="821" width="0.0140%" height="15" fill="rgb(219,228,13)" fg:x="11628" fg:w="15"/><text x="11.0800%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.01%)</title><rect x="10.8300%" y="805" width="0.0140%" height="15" fill="rgb(238,30,35)" fg:x="11628" fg:w="15"/><text x="11.0800%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.01%)</title><rect x="10.8300%" y="789" width="0.0140%" height="15" fill="rgb(236,70,23)" fg:x="11628" fg:w="15"/><text x="11.0800%" y="799.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (386 samples, 0.36%)</title><rect x="10.4985%" y="1493" width="0.3595%" height="15" fill="rgb(249,104,48)" fg:x="11272" fg:w="386"/><text x="10.7485%" y="1503.50"></text></g><g><title>rayon_core::job::JobRef::execute (386 samples, 0.36%)</title><rect x="10.4985%" y="1477" width="0.3595%" height="15" fill="rgb(254,117,50)" fg:x="11272" fg:w="386"/><text x="10.7485%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (386 samples, 0.36%)</title><rect x="10.4985%" y="1461" width="0.3595%" height="15" fill="rgb(223,152,4)" fg:x="11272" fg:w="386"/><text x="10.7485%" y="1471.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (385 samples, 0.36%)</title><rect x="10.4994%" y="1445" width="0.3586%" height="15" fill="rgb(245,6,2)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1455.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (385 samples, 0.36%)</title><rect x="10.4994%" y="1429" width="0.3586%" height="15" fill="rgb(249,150,24)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (385 samples, 0.36%)</title><rect x="10.4994%" y="1413" width="0.3586%" height="15" fill="rgb(228,185,42)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1423.50"></text></g><g><title>std::panicking::try (385 samples, 0.36%)</title><rect x="10.4994%" y="1397" width="0.3586%" height="15" fill="rgb(226,39,33)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (385 samples, 0.36%)</title><rect x="10.4994%" y="1381" width="0.3586%" height="15" fill="rgb(221,166,19)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (385 samples, 0.36%)</title><rect x="10.4994%" y="1365" width="0.3586%" height="15" fill="rgb(209,109,2)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1375.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (385 samples, 0.36%)</title><rect x="10.4994%" y="1349" width="0.3586%" height="15" fill="rgb(252,216,26)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (385 samples, 0.36%)</title><rect x="10.4994%" y="1333" width="0.3586%" height="15" fill="rgb(227,173,36)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (385 samples, 0.36%)</title><rect x="10.4994%" y="1317" width="0.3586%" height="15" fill="rgb(209,90,7)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (385 samples, 0.36%)</title><rect x="10.4994%" y="1301" width="0.3586%" height="15" fill="rgb(250,194,11)" fg:x="11273" fg:w="385"/><text x="10.7494%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (243 samples, 0.23%)</title><rect x="10.6317%" y="1285" width="0.2263%" height="15" fill="rgb(220,72,50)" fg:x="11415" fg:w="243"/><text x="10.8817%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (243 samples, 0.23%)</title><rect x="10.6317%" y="1269" width="0.2263%" height="15" fill="rgb(222,106,48)" fg:x="11415" fg:w="243"/><text x="10.8817%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (243 samples, 0.23%)</title><rect x="10.6317%" y="1253" width="0.2263%" height="15" fill="rgb(216,220,45)" fg:x="11415" fg:w="243"/><text x="10.8817%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (157 samples, 0.15%)</title><rect x="10.7118%" y="1237" width="0.1462%" height="15" fill="rgb(234,112,18)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (157 samples, 0.15%)</title><rect x="10.7118%" y="1221" width="0.1462%" height="15" fill="rgb(206,179,9)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1231.50"></text></g><g><title>std::panicking::try (157 samples, 0.15%)</title><rect x="10.7118%" y="1205" width="0.1462%" height="15" fill="rgb(215,115,40)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (157 samples, 0.15%)</title><rect x="10.7118%" y="1189" width="0.1462%" height="15" fill="rgb(222,69,34)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (157 samples, 0.15%)</title><rect x="10.7118%" y="1173" width="0.1462%" height="15" fill="rgb(209,161,10)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (157 samples, 0.15%)</title><rect x="10.7118%" y="1157" width="0.1462%" height="15" fill="rgb(217,6,38)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (157 samples, 0.15%)</title><rect x="10.7118%" y="1141" width="0.1462%" height="15" fill="rgb(229,229,48)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (157 samples, 0.15%)</title><rect x="10.7118%" y="1125" width="0.1462%" height="15" fill="rgb(225,21,28)" fg:x="11501" fg:w="157"/><text x="10.9618%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (79 samples, 0.07%)</title><rect x="10.7844%" y="1109" width="0.0736%" height="15" fill="rgb(206,33,13)" fg:x="11579" fg:w="79"/><text x="11.0344%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (79 samples, 0.07%)</title><rect x="10.7844%" y="1093" width="0.0736%" height="15" fill="rgb(242,178,17)" fg:x="11579" fg:w="79"/><text x="11.0344%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (79 samples, 0.07%)</title><rect x="10.7844%" y="1077" width="0.0736%" height="15" fill="rgb(220,162,5)" fg:x="11579" fg:w="79"/><text x="11.0344%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (39 samples, 0.04%)</title><rect x="10.8217%" y="1061" width="0.0363%" height="15" fill="rgb(210,33,43)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (39 samples, 0.04%)</title><rect x="10.8217%" y="1045" width="0.0363%" height="15" fill="rgb(216,116,54)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="1055.50"></text></g><g><title>std::panicking::try (39 samples, 0.04%)</title><rect x="10.8217%" y="1029" width="0.0363%" height="15" fill="rgb(249,92,24)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (39 samples, 0.04%)</title><rect x="10.8217%" y="1013" width="0.0363%" height="15" fill="rgb(231,189,14)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (39 samples, 0.04%)</title><rect x="10.8217%" y="997" width="0.0363%" height="15" fill="rgb(230,8,41)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (39 samples, 0.04%)</title><rect x="10.8217%" y="981" width="0.0363%" height="15" fill="rgb(249,7,27)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (39 samples, 0.04%)</title><rect x="10.8217%" y="965" width="0.0363%" height="15" fill="rgb(232,86,5)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.04%)</title><rect x="10.8217%" y="949" width="0.0363%" height="15" fill="rgb(224,175,18)" fg:x="11619" fg:w="39"/><text x="11.0717%" y="959.50"></text></g><g><title>rayon_core::join::join_context (38 samples, 0.04%)</title><rect x="10.8226%" y="933" width="0.0354%" height="15" fill="rgb(220,129,12)" fg:x="11620" fg:w="38"/><text x="11.0726%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (38 samples, 0.04%)</title><rect x="10.8226%" y="917" width="0.0354%" height="15" fill="rgb(210,19,36)" fg:x="11620" fg:w="38"/><text x="11.0726%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (38 samples, 0.04%)</title><rect x="10.8226%" y="901" width="0.0354%" height="15" fill="rgb(219,96,14)" fg:x="11620" fg:w="38"/><text x="11.0726%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.01%)</title><rect x="10.8449%" y="885" width="0.0130%" height="15" fill="rgb(249,106,1)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="895.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="10.8449%" y="869" width="0.0130%" height="15" fill="rgb(249,155,20)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="879.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="10.8449%" y="853" width="0.0130%" height="15" fill="rgb(244,168,9)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="863.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="10.8449%" y="837" width="0.0130%" height="15" fill="rgb(216,23,50)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="10.8449%" y="821" width="0.0130%" height="15" fill="rgb(224,219,20)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.01%)</title><rect x="10.8449%" y="805" width="0.0130%" height="15" fill="rgb(222,156,15)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.01%)</title><rect x="10.8449%" y="789" width="0.0130%" height="15" fill="rgb(231,97,17)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.01%)</title><rect x="10.8449%" y="773" width="0.0130%" height="15" fill="rgb(218,70,48)" fg:x="11644" fg:w="14"/><text x="11.0949%" y="783.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="10.8477%" y="757" width="0.0102%" height="15" fill="rgb(212,196,52)" fg:x="11647" fg:w="11"/><text x="11.0977%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="10.8477%" y="741" width="0.0102%" height="15" fill="rgb(243,203,18)" fg:x="11647" fg:w="11"/><text x="11.0977%" y="751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="10.8477%" y="725" width="0.0102%" height="15" fill="rgb(252,125,41)" fg:x="11647" fg:w="11"/><text x="11.0977%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (16 samples, 0.01%)</title><rect x="10.8580%" y="1477" width="0.0149%" height="15" fill="rgb(223,180,33)" fg:x="11658" fg:w="16"/><text x="11.1080%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (16 samples, 0.01%)</title><rect x="10.8580%" y="1461" width="0.0149%" height="15" fill="rgb(254,159,46)" fg:x="11658" fg:w="16"/><text x="11.1080%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (14 samples, 0.01%)</title><rect x="10.8598%" y="1445" width="0.0130%" height="15" fill="rgb(254,38,10)" fg:x="11660" fg:w="14"/><text x="11.1098%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14 samples, 0.01%)</title><rect x="10.8598%" y="1429" width="0.0130%" height="15" fill="rgb(208,217,32)" fg:x="11660" fg:w="14"/><text x="11.1098%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="10.8598%" y="1413" width="0.0130%" height="15" fill="rgb(221,120,13)" fg:x="11660" fg:w="14"/><text x="11.1098%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="10.8598%" y="1397" width="0.0130%" height="15" fill="rgb(246,54,52)" fg:x="11660" fg:w="14"/><text x="11.1098%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.01%)</title><rect x="10.8598%" y="1381" width="0.0130%" height="15" fill="rgb(242,34,25)" fg:x="11660" fg:w="14"/><text x="11.1098%" y="1391.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (20 samples, 0.02%)</title><rect x="10.8580%" y="1493" width="0.0186%" height="15" fill="rgb(247,209,9)" fg:x="11658" fg:w="20"/><text x="11.1080%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (426 samples, 0.40%)</title><rect x="10.4985%" y="1525" width="0.3968%" height="15" fill="rgb(228,71,26)" fg:x="11272" fg:w="426"/><text x="10.7485%" y="1535.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (426 samples, 0.40%)</title><rect x="10.4985%" y="1509" width="0.3968%" height="15" fill="rgb(222,145,49)" fg:x="11272" fg:w="426"/><text x="10.7485%" y="1519.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (12 samples, 0.01%)</title><rect x="10.8841%" y="1493" width="0.0112%" height="15" fill="rgb(218,121,17)" fg:x="11686" fg:w="12"/><text x="11.1341%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (64 samples, 0.06%)</title><rect x="10.9120%" y="1269" width="0.0596%" height="15" fill="rgb(244,50,7)" fg:x="11716" fg:w="64"/><text x="11.1620%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.06%)</title><rect x="10.9120%" y="1253" width="0.0596%" height="15" fill="rgb(246,229,37)" fg:x="11716" fg:w="64"/><text x="11.1620%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.06%)</title><rect x="10.9120%" y="1237" width="0.0596%" height="15" fill="rgb(225,18,5)" fg:x="11716" fg:w="64"/><text x="11.1620%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.06%)</title><rect x="10.9120%" y="1221" width="0.0596%" height="15" fill="rgb(213,204,8)" fg:x="11716" fg:w="64"/><text x="11.1620%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.06%)</title><rect x="10.9129%" y="1205" width="0.0587%" height="15" fill="rgb(238,103,6)" fg:x="11717" fg:w="63"/><text x="11.1629%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.06%)</title><rect x="10.9129%" y="1189" width="0.0587%" height="15" fill="rgb(222,25,35)" fg:x="11717" fg:w="63"/><text x="11.1629%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.06%)</title><rect x="10.9129%" y="1173" width="0.0587%" height="15" fill="rgb(213,203,35)" fg:x="11717" fg:w="63"/><text x="11.1629%" y="1183.50"></text></g><g><title>malloc (63 samples, 0.06%)</title><rect x="10.9129%" y="1157" width="0.0587%" height="15" fill="rgb(221,79,53)" fg:x="11717" fg:w="63"/><text x="11.1629%" y="1167.50"></text></g><g><title>[libc.so.6] (61 samples, 0.06%)</title><rect x="10.9148%" y="1141" width="0.0568%" height="15" fill="rgb(243,200,35)" fg:x="11719" fg:w="61"/><text x="11.1648%" y="1151.50"></text></g><g><title>[libc.so.6] (57 samples, 0.05%)</title><rect x="10.9185%" y="1125" width="0.0531%" height="15" fill="rgb(248,60,25)" fg:x="11723" fg:w="57"/><text x="11.1685%" y="1135.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="10.9548%" y="1109" width="0.0168%" height="15" fill="rgb(227,53,46)" fg:x="11762" fg:w="18"/><text x="11.2048%" y="1119.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="10.9819%" y="1157" width="0.0251%" height="15" fill="rgb(216,120,32)" fg:x="11791" fg:w="27"/><text x="11.2319%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (53 samples, 0.05%)</title><rect x="10.9744%" y="1253" width="0.0494%" height="15" fill="rgb(220,134,1)" fg:x="11783" fg:w="53"/><text x="11.2244%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt; (47 samples, 0.04%)</title><rect x="10.9800%" y="1237" width="0.0438%" height="15" fill="rgb(237,168,5)" fg:x="11789" fg:w="47"/><text x="11.2300%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="10.9800%" y="1221" width="0.0438%" height="15" fill="rgb(231,100,33)" fg:x="11789" fg:w="47"/><text x="11.2300%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.04%)</title><rect x="10.9800%" y="1205" width="0.0438%" height="15" fill="rgb(236,177,47)" fg:x="11789" fg:w="47"/><text x="11.2300%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.04%)</title><rect x="10.9800%" y="1189" width="0.0438%" height="15" fill="rgb(235,7,49)" fg:x="11789" fg:w="47"/><text x="11.2300%" y="1199.50"></text></g><g><title>cfree (47 samples, 0.04%)</title><rect x="10.9800%" y="1173" width="0.0438%" height="15" fill="rgb(232,119,22)" fg:x="11789" fg:w="47"/><text x="11.2300%" y="1183.50"></text></g><g><title>__lll_lock_wake_private (18 samples, 0.02%)</title><rect x="11.0070%" y="1157" width="0.0168%" height="15" fill="rgb(254,73,53)" fg:x="11818" fg:w="18"/><text x="11.2570%" y="1167.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="11.0070%" y="1141" width="0.0168%" height="15" fill="rgb(251,35,20)" fg:x="11818" fg:w="18"/><text x="11.2570%" y="1151.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="11.0070%" y="1125" width="0.0168%" height="15" fill="rgb(241,119,20)" fg:x="11818" fg:w="18"/><text x="11.2570%" y="1135.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="11.0079%" y="1109" width="0.0158%" height="15" fill="rgb(207,102,14)" fg:x="11819" fg:w="17"/><text x="11.2579%" y="1119.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="11.0098%" y="1093" width="0.0140%" height="15" fill="rgb(248,201,50)" fg:x="11821" fg:w="15"/><text x="11.2598%" y="1103.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="11.0107%" y="1077" width="0.0130%" height="15" fill="rgb(222,185,44)" fg:x="11822" fg:w="14"/><text x="11.2607%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="11.4606%" y="1077" width="0.0112%" height="15" fill="rgb(218,107,18)" fg:x="12305" fg:w="12"/><text x="11.7106%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="11.4606%" y="1061" width="0.0112%" height="15" fill="rgb(237,177,39)" fg:x="12305" fg:w="12"/><text x="11.7106%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="11.4587%" y="1109" width="0.0373%" height="15" fill="rgb(246,69,6)" fg:x="12303" fg:w="40"/><text x="11.7087%" y="1119.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (40 samples, 0.04%)</title><rect x="11.4587%" y="1093" width="0.0373%" height="15" fill="rgb(234,208,37)" fg:x="12303" fg:w="40"/><text x="11.7087%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (26 samples, 0.02%)</title><rect x="11.4718%" y="1077" width="0.0242%" height="15" fill="rgb(225,4,6)" fg:x="12317" fg:w="26"/><text x="11.7218%" y="1087.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (85 samples, 0.08%)</title><rect x="11.5053%" y="1109" width="0.0792%" height="15" fill="rgb(233,45,0)" fg:x="12353" fg:w="85"/><text x="11.7553%" y="1119.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (628 samples, 0.58%)</title><rect x="11.0368%" y="1141" width="0.5849%" height="15" fill="rgb(226,136,5)" fg:x="11850" fg:w="628"/><text x="11.2868%" y="1151.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (606 samples, 0.56%)</title><rect x="11.0573%" y="1125" width="0.5644%" height="15" fill="rgb(211,91,47)" fg:x="11872" fg:w="606"/><text x="11.3073%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::debt::list::NodeReservation&gt; (40 samples, 0.04%)</title><rect x="11.5845%" y="1109" width="0.0373%" height="15" fill="rgb(242,88,51)" fg:x="12438" fg:w="40"/><text x="11.8345%" y="1119.50"></text></g><g><title>&lt;arc_swap::debt::list::NodeReservation as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="11.5845%" y="1093" width="0.0373%" height="15" fill="rgb(230,91,28)" fg:x="12438" fg:w="40"/><text x="11.8345%" y="1103.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (45 samples, 0.04%)</title><rect x="11.6217%" y="1141" width="0.0419%" height="15" fill="rgb(254,186,29)" fg:x="12478" fg:w="45"/><text x="11.8717%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (45 samples, 0.04%)</title><rect x="11.6217%" y="1125" width="0.0419%" height="15" fill="rgb(238,6,4)" fg:x="12478" fg:w="45"/><text x="11.8717%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (45 samples, 0.04%)</title><rect x="11.6217%" y="1109" width="0.0419%" height="15" fill="rgb(221,151,16)" fg:x="12478" fg:w="45"/><text x="11.8717%" y="1119.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (677 samples, 0.63%)</title><rect x="11.0349%" y="1157" width="0.6305%" height="15" fill="rgb(251,143,52)" fg:x="11848" fg:w="677"/><text x="11.2849%" y="1167.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (684 samples, 0.64%)</title><rect x="11.0294%" y="1173" width="0.6371%" height="15" fill="rgb(206,90,15)" fg:x="11842" fg:w="684"/><text x="11.2794%" y="1183.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (694 samples, 0.65%)</title><rect x="11.0238%" y="1237" width="0.6464%" height="15" fill="rgb(218,35,8)" fg:x="11836" fg:w="694"/><text x="11.2738%" y="1247.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (694 samples, 0.65%)</title><rect x="11.0238%" y="1221" width="0.6464%" height="15" fill="rgb(239,215,6)" fg:x="11836" fg:w="694"/><text x="11.2738%" y="1231.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (694 samples, 0.65%)</title><rect x="11.0238%" y="1205" width="0.6464%" height="15" fill="rgb(245,116,39)" fg:x="11836" fg:w="694"/><text x="11.2738%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (688 samples, 0.64%)</title><rect x="11.0294%" y="1189" width="0.6408%" height="15" fill="rgb(242,65,28)" fg:x="11842" fg:w="688"/><text x="11.2794%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (840 samples, 0.78%)</title><rect x="10.9018%" y="1397" width="0.7824%" height="15" fill="rgb(252,132,53)" fg:x="11705" fg:w="840"/><text x="11.1518%" y="1407.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (840 samples, 0.78%)</title><rect x="10.9018%" y="1381" width="0.7824%" height="15" fill="rgb(224,159,50)" fg:x="11705" fg:w="840"/><text x="11.1518%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (838 samples, 0.78%)</title><rect x="10.9036%" y="1365" width="0.7805%" height="15" fill="rgb(224,93,4)" fg:x="11707" fg:w="838"/><text x="11.1536%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (838 samples, 0.78%)</title><rect x="10.9036%" y="1349" width="0.7805%" height="15" fill="rgb(208,81,34)" fg:x="11707" fg:w="838"/><text x="11.1536%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (838 samples, 0.78%)</title><rect x="10.9036%" y="1333" width="0.7805%" height="15" fill="rgb(233,92,54)" fg:x="11707" fg:w="838"/><text x="11.1536%" y="1343.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (837 samples, 0.78%)</title><rect x="10.9046%" y="1317" width="0.7796%" height="15" fill="rgb(237,21,14)" fg:x="11708" fg:w="837"/><text x="11.1546%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (837 samples, 0.78%)</title><rect x="10.9046%" y="1301" width="0.7796%" height="15" fill="rgb(249,128,51)" fg:x="11708" fg:w="837"/><text x="11.1546%" y="1311.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (837 samples, 0.78%)</title><rect x="10.9046%" y="1285" width="0.7796%" height="15" fill="rgb(223,129,24)" fg:x="11708" fg:w="837"/><text x="11.1546%" y="1295.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (765 samples, 0.71%)</title><rect x="10.9716%" y="1269" width="0.7125%" height="15" fill="rgb(231,168,25)" fg:x="11780" fg:w="765"/><text x="11.2216%" y="1279.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (709 samples, 0.66%)</title><rect x="11.0238%" y="1253" width="0.6603%" height="15" fill="rgb(224,39,20)" fg:x="11836" fg:w="709"/><text x="11.2738%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (15 samples, 0.01%)</title><rect x="11.6701%" y="1237" width="0.0140%" height="15" fill="rgb(225,152,53)" fg:x="12530" fg:w="15"/><text x="11.9201%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="11.6701%" y="1221" width="0.0140%" height="15" fill="rgb(252,17,24)" fg:x="12530" fg:w="15"/><text x="11.9201%" y="1231.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (25 samples, 0.02%)</title><rect x="11.6916%" y="1237" width="0.0233%" height="15" fill="rgb(250,114,30)" fg:x="12553" fg:w="25"/><text x="11.9416%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.02%)</title><rect x="11.6916%" y="1221" width="0.0233%" height="15" fill="rgb(229,5,4)" fg:x="12553" fg:w="25"/><text x="11.9416%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.02%)</title><rect x="11.6916%" y="1205" width="0.0233%" height="15" fill="rgb(225,176,49)" fg:x="12553" fg:w="25"/><text x="11.9416%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.02%)</title><rect x="11.6916%" y="1189" width="0.0233%" height="15" fill="rgb(224,221,49)" fg:x="12553" fg:w="25"/><text x="11.9416%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.02%)</title><rect x="11.6944%" y="1173" width="0.0205%" height="15" fill="rgb(253,169,27)" fg:x="12556" fg:w="22"/><text x="11.9444%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.02%)</title><rect x="11.6944%" y="1157" width="0.0205%" height="15" fill="rgb(211,206,16)" fg:x="12556" fg:w="22"/><text x="11.9444%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.02%)</title><rect x="11.6944%" y="1141" width="0.0205%" height="15" fill="rgb(244,87,35)" fg:x="12556" fg:w="22"/><text x="11.9444%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="11.7046%" y="1125" width="0.0102%" height="15" fill="rgb(246,28,10)" fg:x="12567" fg:w="11"/><text x="11.9546%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="11.7046%" y="1109" width="0.0102%" height="15" fill="rgb(229,12,44)" fg:x="12567" fg:w="11"/><text x="11.9546%" y="1119.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="11.7046%" y="1093" width="0.0102%" height="15" fill="rgb(210,145,37)" fg:x="12567" fg:w="11"/><text x="11.9546%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="11.7046%" y="1077" width="0.0102%" height="15" fill="rgb(227,112,52)" fg:x="12567" fg:w="11"/><text x="11.9546%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.02%)</title><rect x="11.7148%" y="1205" width="0.0168%" height="15" fill="rgb(238,155,34)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1215.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.02%)</title><rect x="11.7148%" y="1189" width="0.0168%" height="15" fill="rgb(239,226,36)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.02%)</title><rect x="11.7148%" y="1173" width="0.0168%" height="15" fill="rgb(230,16,23)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1183.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (18 samples, 0.02%)</title><rect x="11.7148%" y="1157" width="0.0168%" height="15" fill="rgb(236,171,36)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="11.7148%" y="1141" width="0.0168%" height="15" fill="rgb(221,22,14)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="11.7148%" y="1125" width="0.0168%" height="15" fill="rgb(242,43,11)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1135.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="11.7148%" y="1109" width="0.0168%" height="15" fill="rgb(232,69,23)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="11.7148%" y="1093" width="0.0168%" height="15" fill="rgb(216,180,54)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="11.7148%" y="1077" width="0.0168%" height="15" fill="rgb(216,5,24)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1087.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (18 samples, 0.02%)</title><rect x="11.7148%" y="1061" width="0.0168%" height="15" fill="rgb(225,89,9)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.02%)</title><rect x="11.7148%" y="1045" width="0.0168%" height="15" fill="rgb(243,75,33)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="11.7148%" y="1029" width="0.0168%" height="15" fill="rgb(247,141,45)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="11.7148%" y="1013" width="0.0168%" height="15" fill="rgb(232,177,36)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="11.7148%" y="997" width="0.0168%" height="15" fill="rgb(219,125,36)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="11.7148%" y="981" width="0.0168%" height="15" fill="rgb(227,94,9)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="11.7148%" y="965" width="0.0168%" height="15" fill="rgb(240,34,52)" fg:x="12578" fg:w="18"/><text x="11.9648%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="11.7214%" y="949" width="0.0102%" height="15" fill="rgb(216,45,12)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="959.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="11.7214%" y="933" width="0.0102%" height="15" fill="rgb(246,21,19)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="943.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="11.7214%" y="917" width="0.0102%" height="15" fill="rgb(213,98,42)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="927.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="11.7214%" y="901" width="0.0102%" height="15" fill="rgb(250,136,47)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="11.7214%" y="885" width="0.0102%" height="15" fill="rgb(251,124,27)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="11.7214%" y="869" width="0.0102%" height="15" fill="rgb(229,180,14)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="11.7214%" y="853" width="0.0102%" height="15" fill="rgb(245,216,25)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="11.7214%" y="837" width="0.0102%" height="15" fill="rgb(251,43,5)" fg:x="12585" fg:w="11"/><text x="11.9714%" y="847.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 0.02%)</title><rect x="11.7148%" y="1237" width="0.0233%" height="15" fill="rgb(250,128,24)" fg:x="12578" fg:w="25"/><text x="11.9648%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.02%)</title><rect x="11.7148%" y="1221" width="0.0233%" height="15" fill="rgb(217,117,27)" fg:x="12578" fg:w="25"/><text x="11.9648%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="11.7586%" y="757" width="0.0112%" height="15" fill="rgb(245,147,4)" fg:x="12625" fg:w="12"/><text x="12.0086%" y="767.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (13 samples, 0.01%)</title><rect x="11.7586%" y="821" width="0.0121%" height="15" fill="rgb(242,201,35)" fg:x="12625" fg:w="13"/><text x="12.0086%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.01%)</title><rect x="11.7586%" y="805" width="0.0121%" height="15" fill="rgb(218,181,1)" fg:x="12625" fg:w="13"/><text x="12.0086%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.01%)</title><rect x="11.7586%" y="789" width="0.0121%" height="15" fill="rgb(222,6,29)" fg:x="12625" fg:w="13"/><text x="12.0086%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.01%)</title><rect x="11.7586%" y="773" width="0.0121%" height="15" fill="rgb(208,186,3)" fg:x="12625" fg:w="13"/><text x="12.0086%" y="783.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (26 samples, 0.02%)</title><rect x="11.7502%" y="1061" width="0.0242%" height="15" fill="rgb(216,36,26)" fg:x="12616" fg:w="26"/><text x="12.0002%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.02%)</title><rect x="11.7502%" y="1045" width="0.0242%" height="15" fill="rgb(248,201,23)" fg:x="12616" fg:w="26"/><text x="12.0002%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.02%)</title><rect x="11.7512%" y="1029" width="0.0233%" height="15" fill="rgb(251,170,31)" fg:x="12617" fg:w="25"/><text x="12.0012%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.02%)</title><rect x="11.7512%" y="1013" width="0.0233%" height="15" fill="rgb(207,110,25)" fg:x="12617" fg:w="25"/><text x="12.0012%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.02%)</title><rect x="11.7530%" y="997" width="0.0214%" height="15" fill="rgb(250,54,15)" fg:x="12619" fg:w="23"/><text x="12.0030%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.02%)</title><rect x="11.7530%" y="981" width="0.0214%" height="15" fill="rgb(227,68,33)" fg:x="12619" fg:w="23"/><text x="12.0030%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.02%)</title><rect x="11.7530%" y="965" width="0.0214%" height="15" fill="rgb(238,34,41)" fg:x="12619" fg:w="23"/><text x="12.0030%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="11.7586%" y="949" width="0.0158%" height="15" fill="rgb(220,11,15)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="959.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="11.7586%" y="933" width="0.0158%" height="15" fill="rgb(246,111,35)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="943.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="11.7586%" y="917" width="0.0158%" height="15" fill="rgb(209,88,53)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="927.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="11.7586%" y="901" width="0.0158%" height="15" fill="rgb(231,185,47)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="11.7586%" y="885" width="0.0158%" height="15" fill="rgb(233,154,1)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="11.7586%" y="869" width="0.0158%" height="15" fill="rgb(225,15,46)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="11.7586%" y="853" width="0.0158%" height="15" fill="rgb(211,135,41)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="11.7586%" y="837" width="0.0158%" height="15" fill="rgb(208,54,0)" fg:x="12625" fg:w="17"/><text x="12.0086%" y="847.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (104 samples, 0.10%)</title><rect x="11.6888%" y="1349" width="0.0969%" height="15" fill="rgb(244,136,14)" fg:x="12550" fg:w="104"/><text x="11.9388%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (104 samples, 0.10%)</title><rect x="11.6888%" y="1333" width="0.0969%" height="15" fill="rgb(241,56,14)" fg:x="12550" fg:w="104"/><text x="11.9388%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (104 samples, 0.10%)</title><rect x="11.6888%" y="1317" width="0.0969%" height="15" fill="rgb(205,80,24)" fg:x="12550" fg:w="104"/><text x="11.9388%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (104 samples, 0.10%)</title><rect x="11.6888%" y="1301" width="0.0969%" height="15" fill="rgb(220,57,4)" fg:x="12550" fg:w="104"/><text x="11.9388%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (101 samples, 0.09%)</title><rect x="11.6916%" y="1285" width="0.0941%" height="15" fill="rgb(226,193,50)" fg:x="12553" fg:w="101"/><text x="11.9416%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (101 samples, 0.09%)</title><rect x="11.6916%" y="1269" width="0.0941%" height="15" fill="rgb(231,168,22)" fg:x="12553" fg:w="101"/><text x="11.9416%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (101 samples, 0.09%)</title><rect x="11.6916%" y="1253" width="0.0941%" height="15" fill="rgb(254,215,14)" fg:x="12553" fg:w="101"/><text x="11.9416%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (51 samples, 0.05%)</title><rect x="11.7381%" y="1237" width="0.0475%" height="15" fill="rgb(211,115,16)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.05%)</title><rect x="11.7381%" y="1221" width="0.0475%" height="15" fill="rgb(236,210,16)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1231.50"></text></g><g><title>std::panicking::try (51 samples, 0.05%)</title><rect x="11.7381%" y="1205" width="0.0475%" height="15" fill="rgb(221,94,12)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.05%)</title><rect x="11.7381%" y="1189" width="0.0475%" height="15" fill="rgb(235,218,49)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (51 samples, 0.05%)</title><rect x="11.7381%" y="1173" width="0.0475%" height="15" fill="rgb(217,114,14)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (51 samples, 0.05%)</title><rect x="11.7381%" y="1157" width="0.0475%" height="15" fill="rgb(216,145,22)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (51 samples, 0.05%)</title><rect x="11.7381%" y="1141" width="0.0475%" height="15" fill="rgb(217,112,39)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.05%)</title><rect x="11.7381%" y="1125" width="0.0475%" height="15" fill="rgb(225,85,32)" fg:x="12603" fg:w="51"/><text x="11.9881%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (38 samples, 0.04%)</title><rect x="11.7502%" y="1109" width="0.0354%" height="15" fill="rgb(245,209,47)" fg:x="12616" fg:w="38"/><text x="12.0002%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (38 samples, 0.04%)</title><rect x="11.7502%" y="1093" width="0.0354%" height="15" fill="rgb(218,220,15)" fg:x="12616" fg:w="38"/><text x="12.0002%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (38 samples, 0.04%)</title><rect x="11.7502%" y="1077" width="0.0354%" height="15" fill="rgb(222,202,31)" fg:x="12616" fg:w="38"/><text x="12.0002%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="11.7754%" y="1061" width="0.0102%" height="15" fill="rgb(243,203,4)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="11.7754%" y="1045" width="0.0102%" height="15" fill="rgb(237,92,17)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="1055.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="11.7754%" y="1029" width="0.0102%" height="15" fill="rgb(231,119,7)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="11.7754%" y="1013" width="0.0102%" height="15" fill="rgb(237,82,41)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="11.7754%" y="997" width="0.0102%" height="15" fill="rgb(226,81,48)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="11.7754%" y="981" width="0.0102%" height="15" fill="rgb(234,70,51)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="11.7754%" y="965" width="0.0102%" height="15" fill="rgb(251,86,4)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="11.7754%" y="949" width="0.0102%" height="15" fill="rgb(244,144,28)" fg:x="12643" fg:w="11"/><text x="12.0254%" y="959.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (31 samples, 0.03%)</title><rect x="11.7931%" y="853" width="0.0289%" height="15" fill="rgb(232,161,39)" fg:x="12662" fg:w="31"/><text x="12.0431%" y="863.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (30 samples, 0.03%)</title><rect x="11.7940%" y="837" width="0.0279%" height="15" fill="rgb(247,34,51)" fg:x="12663" fg:w="30"/><text x="12.0440%" y="847.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (39 samples, 0.04%)</title><rect x="11.7894%" y="1109" width="0.0363%" height="15" fill="rgb(225,132,2)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1119.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (39 samples, 0.04%)</title><rect x="11.7894%" y="1093" width="0.0363%" height="15" fill="rgb(209,159,44)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (39 samples, 0.04%)</title><rect x="11.7894%" y="1077" width="0.0363%" height="15" fill="rgb(251,214,1)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="11.7894%" y="1061" width="0.0363%" height="15" fill="rgb(247,84,47)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (39 samples, 0.04%)</title><rect x="11.7894%" y="1045" width="0.0363%" height="15" fill="rgb(240,111,43)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (39 samples, 0.04%)</title><rect x="11.7894%" y="1029" width="0.0363%" height="15" fill="rgb(215,214,35)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (39 samples, 0.04%)</title><rect x="11.7894%" y="1013" width="0.0363%" height="15" fill="rgb(248,207,23)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1023.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (39 samples, 0.04%)</title><rect x="11.7894%" y="997" width="0.0363%" height="15" fill="rgb(214,186,4)" fg:x="12658" fg:w="39"/><text x="12.0394%" y="1007.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (38 samples, 0.04%)</title><rect x="11.7903%" y="981" width="0.0354%" height="15" fill="rgb(220,133,22)" fg:x="12659" fg:w="38"/><text x="12.0403%" y="991.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (36 samples, 0.03%)</title><rect x="11.7922%" y="965" width="0.0335%" height="15" fill="rgb(239,134,19)" fg:x="12661" fg:w="36"/><text x="12.0422%" y="975.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (36 samples, 0.03%)</title><rect x="11.7922%" y="949" width="0.0335%" height="15" fill="rgb(250,140,9)" fg:x="12661" fg:w="36"/><text x="12.0422%" y="959.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (36 samples, 0.03%)</title><rect x="11.7922%" y="933" width="0.0335%" height="15" fill="rgb(225,59,14)" fg:x="12661" fg:w="36"/><text x="12.0422%" y="943.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (36 samples, 0.03%)</title><rect x="11.7922%" y="917" width="0.0335%" height="15" fill="rgb(214,152,51)" fg:x="12661" fg:w="36"/><text x="12.0422%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.03%)</title><rect x="11.7922%" y="901" width="0.0335%" height="15" fill="rgb(251,227,43)" fg:x="12661" fg:w="36"/><text x="12.0422%" y="911.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (36 samples, 0.03%)</title><rect x="11.7922%" y="885" width="0.0335%" height="15" fill="rgb(241,96,17)" fg:x="12661" fg:w="36"/><text x="12.0422%" y="895.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (35 samples, 0.03%)</title><rect x="11.7931%" y="869" width="0.0326%" height="15" fill="rgb(234,198,43)" fg:x="12662" fg:w="35"/><text x="12.0431%" y="879.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (12 samples, 0.01%)</title><rect x="11.8378%" y="677" width="0.0112%" height="15" fill="rgb(220,108,29)" fg:x="12710" fg:w="12"/><text x="12.0878%" y="687.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="11.8387%" y="661" width="0.0102%" height="15" fill="rgb(226,163,33)" fg:x="12711" fg:w="11"/><text x="12.0887%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.01%)</title><rect x="11.8378%" y="933" width="0.0121%" height="15" fill="rgb(205,194,45)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.01%)</title><rect x="11.8378%" y="917" width="0.0121%" height="15" fill="rgb(206,143,44)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="927.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.01%)</title><rect x="11.8378%" y="901" width="0.0121%" height="15" fill="rgb(236,136,36)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="11.8378%" y="885" width="0.0121%" height="15" fill="rgb(249,172,42)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="11.8378%" y="869" width="0.0121%" height="15" fill="rgb(216,139,23)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.01%)</title><rect x="11.8378%" y="853" width="0.0121%" height="15" fill="rgb(207,166,20)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.01%)</title><rect x="11.8378%" y="837" width="0.0121%" height="15" fill="rgb(210,209,22)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="847.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="11.8378%" y="821" width="0.0121%" height="15" fill="rgb(232,118,20)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="831.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (13 samples, 0.01%)</title><rect x="11.8378%" y="805" width="0.0121%" height="15" fill="rgb(238,113,42)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="815.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (13 samples, 0.01%)</title><rect x="11.8378%" y="789" width="0.0121%" height="15" fill="rgb(231,42,5)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="799.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (13 samples, 0.01%)</title><rect x="11.8378%" y="773" width="0.0121%" height="15" fill="rgb(243,166,24)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="783.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (13 samples, 0.01%)</title><rect x="11.8378%" y="757" width="0.0121%" height="15" fill="rgb(237,226,12)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="767.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (13 samples, 0.01%)</title><rect x="11.8378%" y="741" width="0.0121%" height="15" fill="rgb(229,133,24)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="11.8378%" y="725" width="0.0121%" height="15" fill="rgb(238,33,43)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="735.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (13 samples, 0.01%)</title><rect x="11.8378%" y="709" width="0.0121%" height="15" fill="rgb(227,59,38)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="719.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (13 samples, 0.01%)</title><rect x="11.8378%" y="693" width="0.0121%" height="15" fill="rgb(230,97,0)" fg:x="12710" fg:w="13"/><text x="12.0878%" y="703.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (86 samples, 0.08%)</title><rect x="11.7894%" y="1317" width="0.0801%" height="15" fill="rgb(250,173,50)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1327.50"></text></g><g><title>rayon_core::job::JobRef::execute (86 samples, 0.08%)</title><rect x="11.7894%" y="1301" width="0.0801%" height="15" fill="rgb(240,15,50)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1311.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (86 samples, 0.08%)</title><rect x="11.7894%" y="1285" width="0.0801%" height="15" fill="rgb(221,93,22)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1295.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (86 samples, 0.08%)</title><rect x="11.7894%" y="1269" width="0.0801%" height="15" fill="rgb(245,180,53)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1279.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (86 samples, 0.08%)</title><rect x="11.7894%" y="1253" width="0.0801%" height="15" fill="rgb(231,88,51)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (86 samples, 0.08%)</title><rect x="11.7894%" y="1237" width="0.0801%" height="15" fill="rgb(240,58,21)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1247.50"></text></g><g><title>std::panicking::try (86 samples, 0.08%)</title><rect x="11.7894%" y="1221" width="0.0801%" height="15" fill="rgb(237,21,10)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (86 samples, 0.08%)</title><rect x="11.7894%" y="1205" width="0.0801%" height="15" fill="rgb(218,43,11)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (86 samples, 0.08%)</title><rect x="11.7894%" y="1189" width="0.0801%" height="15" fill="rgb(218,221,29)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1199.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (86 samples, 0.08%)</title><rect x="11.7894%" y="1173" width="0.0801%" height="15" fill="rgb(214,118,42)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (86 samples, 0.08%)</title><rect x="11.7894%" y="1157" width="0.0801%" height="15" fill="rgb(251,200,26)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (86 samples, 0.08%)</title><rect x="11.7894%" y="1141" width="0.0801%" height="15" fill="rgb(237,101,39)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.08%)</title><rect x="11.7894%" y="1125" width="0.0801%" height="15" fill="rgb(251,117,11)" fg:x="12658" fg:w="86"/><text x="12.0394%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (47 samples, 0.04%)</title><rect x="11.8257%" y="1109" width="0.0438%" height="15" fill="rgb(216,223,23)" fg:x="12697" fg:w="47"/><text x="12.0757%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (47 samples, 0.04%)</title><rect x="11.8257%" y="1093" width="0.0438%" height="15" fill="rgb(251,54,12)" fg:x="12697" fg:w="47"/><text x="12.0757%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (47 samples, 0.04%)</title><rect x="11.8257%" y="1077" width="0.0438%" height="15" fill="rgb(254,176,54)" fg:x="12697" fg:w="47"/><text x="12.0757%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.03%)</title><rect x="11.8378%" y="1061" width="0.0317%" height="15" fill="rgb(210,32,8)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.03%)</title><rect x="11.8378%" y="1045" width="0.0317%" height="15" fill="rgb(235,52,38)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="1055.50"></text></g><g><title>std::panicking::try (34 samples, 0.03%)</title><rect x="11.8378%" y="1029" width="0.0317%" height="15" fill="rgb(231,4,44)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.03%)</title><rect x="11.8378%" y="1013" width="0.0317%" height="15" fill="rgb(249,2,32)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.03%)</title><rect x="11.8378%" y="997" width="0.0317%" height="15" fill="rgb(224,65,26)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (34 samples, 0.03%)</title><rect x="11.8378%" y="981" width="0.0317%" height="15" fill="rgb(250,73,40)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.03%)</title><rect x="11.8378%" y="965" width="0.0317%" height="15" fill="rgb(253,177,16)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.03%)</title><rect x="11.8378%" y="949" width="0.0317%" height="15" fill="rgb(217,32,34)" fg:x="12710" fg:w="34"/><text x="12.0878%" y="959.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.02%)</title><rect x="11.8499%" y="933" width="0.0196%" height="15" fill="rgb(212,7,10)" fg:x="12723" fg:w="21"/><text x="12.0999%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.02%)</title><rect x="11.8499%" y="917" width="0.0196%" height="15" fill="rgb(245,89,8)" fg:x="12723" fg:w="21"/><text x="12.0999%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.02%)</title><rect x="11.8499%" y="901" width="0.0196%" height="15" fill="rgb(237,16,53)" fg:x="12723" fg:w="21"/><text x="12.0999%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (93 samples, 0.09%)</title><rect x="11.7894%" y="1349" width="0.0866%" height="15" fill="rgb(250,204,30)" fg:x="12658" fg:w="93"/><text x="12.0394%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (93 samples, 0.09%)</title><rect x="11.7894%" y="1333" width="0.0866%" height="15" fill="rgb(208,77,27)" fg:x="12658" fg:w="93"/><text x="12.0394%" y="1343.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (13 samples, 0.01%)</title><rect x="11.8778%" y="1221" width="0.0121%" height="15" fill="rgb(250,204,28)" fg:x="12753" fg:w="13"/><text x="12.1278%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.01%)</title><rect x="11.8778%" y="1205" width="0.0121%" height="15" fill="rgb(244,63,21)" fg:x="12753" fg:w="13"/><text x="12.1278%" y="1215.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.01%)</title><rect x="11.8778%" y="1189" width="0.0121%" height="15" fill="rgb(236,85,44)" fg:x="12753" fg:w="13"/><text x="12.1278%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.01%)</title><rect x="11.8778%" y="1173" width="0.0121%" height="15" fill="rgb(215,98,4)" fg:x="12753" fg:w="13"/><text x="12.1278%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="11.8788%" y="1157" width="0.0112%" height="15" fill="rgb(235,38,11)" fg:x="12754" fg:w="12"/><text x="12.1288%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (35 samples, 0.03%)</title><rect x="11.8909%" y="1093" width="0.0326%" height="15" fill="rgb(254,186,25)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="11.8909%" y="1077" width="0.0326%" height="15" fill="rgb(225,55,31)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="11.8909%" y="1061" width="0.0326%" height="15" fill="rgb(211,15,21)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.03%)</title><rect x="11.8909%" y="1045" width="0.0326%" height="15" fill="rgb(215,187,41)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.03%)</title><rect x="11.8909%" y="1029" width="0.0326%" height="15" fill="rgb(248,69,32)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.03%)</title><rect x="11.8909%" y="1013" width="0.0326%" height="15" fill="rgb(252,102,52)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.03%)</title><rect x="11.8909%" y="997" width="0.0326%" height="15" fill="rgb(253,140,32)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="1007.50"></text></g><g><title>malloc (35 samples, 0.03%)</title><rect x="11.8909%" y="981" width="0.0326%" height="15" fill="rgb(216,56,42)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="991.50"></text></g><g><title>[libc.so.6] (35 samples, 0.03%)</title><rect x="11.8909%" y="965" width="0.0326%" height="15" fill="rgb(216,184,14)" fg:x="12767" fg:w="35"/><text x="12.1409%" y="975.50"></text></g><g><title>[libc.so.6] (34 samples, 0.03%)</title><rect x="11.8918%" y="949" width="0.0317%" height="15" fill="rgb(237,187,27)" fg:x="12768" fg:w="34"/><text x="12.1418%" y="959.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (20 samples, 0.02%)</title><rect x="12.0213%" y="933" width="0.0186%" height="15" fill="rgb(219,65,3)" fg:x="12907" fg:w="20"/><text x="12.2713%" y="943.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (120 samples, 0.11%)</title><rect x="11.9347%" y="965" width="0.1118%" height="15" fill="rgb(245,83,25)" fg:x="12814" fg:w="120"/><text x="12.1847%" y="975.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (120 samples, 0.11%)</title><rect x="11.9347%" y="949" width="0.1118%" height="15" fill="rgb(214,205,45)" fg:x="12814" fg:w="120"/><text x="12.1847%" y="959.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (134 samples, 0.12%)</title><rect x="11.9319%" y="1061" width="0.1248%" height="15" fill="rgb(241,20,18)" fg:x="12811" fg:w="134"/><text x="12.1819%" y="1071.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (134 samples, 0.12%)</title><rect x="11.9319%" y="1045" width="0.1248%" height="15" fill="rgb(232,163,23)" fg:x="12811" fg:w="134"/><text x="12.1819%" y="1055.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (134 samples, 0.12%)</title><rect x="11.9319%" y="1029" width="0.1248%" height="15" fill="rgb(214,5,46)" fg:x="12811" fg:w="134"/><text x="12.1819%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (133 samples, 0.12%)</title><rect x="11.9328%" y="1013" width="0.1239%" height="15" fill="rgb(229,78,17)" fg:x="12812" fg:w="133"/><text x="12.1828%" y="1023.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (133 samples, 0.12%)</title><rect x="11.9328%" y="997" width="0.1239%" height="15" fill="rgb(248,89,10)" fg:x="12812" fg:w="133"/><text x="12.1828%" y="1007.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (131 samples, 0.12%)</title><rect x="11.9347%" y="981" width="0.1220%" height="15" fill="rgb(248,54,15)" fg:x="12814" fg:w="131"/><text x="12.1847%" y="991.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (11 samples, 0.01%)</title><rect x="12.0464%" y="965" width="0.0102%" height="15" fill="rgb(223,116,6)" fg:x="12934" fg:w="11"/><text x="12.2964%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="12.0464%" y="949" width="0.0102%" height="15" fill="rgb(205,125,38)" fg:x="12934" fg:w="11"/><text x="12.2964%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="12.0464%" y="933" width="0.0102%" height="15" fill="rgb(251,78,38)" fg:x="12934" fg:w="11"/><text x="12.2964%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (184 samples, 0.17%)</title><rect x="11.8909%" y="1221" width="0.1714%" height="15" fill="rgb(253,78,28)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1231.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (184 samples, 0.17%)</title><rect x="11.8909%" y="1205" width="0.1714%" height="15" fill="rgb(209,120,3)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (184 samples, 0.17%)</title><rect x="11.8909%" y="1189" width="0.1714%" height="15" fill="rgb(238,229,9)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (184 samples, 0.17%)</title><rect x="11.8909%" y="1173" width="0.1714%" height="15" fill="rgb(253,159,18)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (184 samples, 0.17%)</title><rect x="11.8909%" y="1157" width="0.1714%" height="15" fill="rgb(244,42,34)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (184 samples, 0.17%)</title><rect x="11.8909%" y="1141" width="0.1714%" height="15" fill="rgb(224,8,7)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (184 samples, 0.17%)</title><rect x="11.8909%" y="1125" width="0.1714%" height="15" fill="rgb(210,201,45)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1135.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (184 samples, 0.17%)</title><rect x="11.8909%" y="1109" width="0.1714%" height="15" fill="rgb(252,185,21)" fg:x="12767" fg:w="184"/><text x="12.1409%" y="1119.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (149 samples, 0.14%)</title><rect x="11.9235%" y="1093" width="0.1388%" height="15" fill="rgb(223,131,1)" fg:x="12802" fg:w="149"/><text x="12.1735%" y="1103.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (140 samples, 0.13%)</title><rect x="11.9319%" y="1077" width="0.1304%" height="15" fill="rgb(245,141,16)" fg:x="12811" fg:w="140"/><text x="12.1819%" y="1087.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (33 samples, 0.03%)</title><rect x="12.0725%" y="1061" width="0.0307%" height="15" fill="rgb(229,55,45)" fg:x="12962" fg:w="33"/><text x="12.3225%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (33 samples, 0.03%)</title><rect x="12.0725%" y="1045" width="0.0307%" height="15" fill="rgb(208,92,15)" fg:x="12962" fg:w="33"/><text x="12.3225%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (33 samples, 0.03%)</title><rect x="12.0725%" y="1029" width="0.0307%" height="15" fill="rgb(234,185,47)" fg:x="12962" fg:w="33"/><text x="12.3225%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (33 samples, 0.03%)</title><rect x="12.0725%" y="1013" width="0.0307%" height="15" fill="rgb(253,104,50)" fg:x="12962" fg:w="33"/><text x="12.3225%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.02%)</title><rect x="12.0818%" y="997" width="0.0214%" height="15" fill="rgb(205,70,7)" fg:x="12972" fg:w="23"/><text x="12.3318%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.02%)</title><rect x="12.0818%" y="981" width="0.0214%" height="15" fill="rgb(240,178,43)" fg:x="12972" fg:w="23"/><text x="12.3318%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.02%)</title><rect x="12.0818%" y="965" width="0.0214%" height="15" fill="rgb(214,112,2)" fg:x="12972" fg:w="23"/><text x="12.3318%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.01%)</title><rect x="12.0911%" y="949" width="0.0121%" height="15" fill="rgb(206,46,17)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="959.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="12.0911%" y="933" width="0.0121%" height="15" fill="rgb(225,220,16)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="943.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="12.0911%" y="917" width="0.0121%" height="15" fill="rgb(238,65,40)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="927.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="12.0911%" y="901" width="0.0121%" height="15" fill="rgb(230,151,21)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="12.0911%" y="885" width="0.0121%" height="15" fill="rgb(218,58,49)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.01%)</title><rect x="12.0911%" y="869" width="0.0121%" height="15" fill="rgb(219,179,14)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.01%)</title><rect x="12.0911%" y="853" width="0.0121%" height="15" fill="rgb(223,72,1)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.01%)</title><rect x="12.0911%" y="837" width="0.0121%" height="15" fill="rgb(238,126,10)" fg:x="12982" fg:w="13"/><text x="12.3411%" y="847.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.01%)</title><rect x="12.1079%" y="885" width="0.0149%" height="15" fill="rgb(224,206,38)" fg:x="13000" fg:w="16"/><text x="12.3579%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (16 samples, 0.01%)</title><rect x="12.1079%" y="869" width="0.0149%" height="15" fill="rgb(212,201,54)" fg:x="13000" fg:w="16"/><text x="12.3579%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.01%)</title><rect x="12.1079%" y="853" width="0.0149%" height="15" fill="rgb(218,154,48)" fg:x="13000" fg:w="16"/><text x="12.3579%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.01%)</title><rect x="12.1079%" y="837" width="0.0149%" height="15" fill="rgb(232,93,24)" fg:x="13000" fg:w="16"/><text x="12.3579%" y="847.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.01%)</title><rect x="12.1088%" y="821" width="0.0140%" height="15" fill="rgb(245,30,21)" fg:x="13001" fg:w="15"/><text x="12.3588%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.01%)</title><rect x="12.1088%" y="805" width="0.0140%" height="15" fill="rgb(242,148,29)" fg:x="13001" fg:w="15"/><text x="12.3588%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.01%)</title><rect x="12.1088%" y="789" width="0.0140%" height="15" fill="rgb(244,153,54)" fg:x="13001" fg:w="15"/><text x="12.3588%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (79 samples, 0.07%)</title><rect x="12.0632%" y="1173" width="0.0736%" height="15" fill="rgb(252,87,22)" fg:x="12952" fg:w="79"/><text x="12.3132%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (79 samples, 0.07%)</title><rect x="12.0632%" y="1157" width="0.0736%" height="15" fill="rgb(210,51,29)" fg:x="12952" fg:w="79"/><text x="12.3132%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (79 samples, 0.07%)</title><rect x="12.0632%" y="1141" width="0.0736%" height="15" fill="rgb(242,136,47)" fg:x="12952" fg:w="79"/><text x="12.3132%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (79 samples, 0.07%)</title><rect x="12.0632%" y="1125" width="0.0736%" height="15" fill="rgb(238,68,4)" fg:x="12952" fg:w="79"/><text x="12.3132%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (69 samples, 0.06%)</title><rect x="12.0725%" y="1109" width="0.0643%" height="15" fill="rgb(242,161,30)" fg:x="12962" fg:w="69"/><text x="12.3225%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (69 samples, 0.06%)</title><rect x="12.0725%" y="1093" width="0.0643%" height="15" fill="rgb(218,58,44)" fg:x="12962" fg:w="69"/><text x="12.3225%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (69 samples, 0.06%)</title><rect x="12.0725%" y="1077" width="0.0643%" height="15" fill="rgb(252,125,32)" fg:x="12962" fg:w="69"/><text x="12.3225%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.03%)</title><rect x="12.1051%" y="1061" width="0.0317%" height="15" fill="rgb(219,178,0)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.03%)</title><rect x="12.1051%" y="1045" width="0.0317%" height="15" fill="rgb(213,152,7)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="1055.50"></text></g><g><title>std::panicking::try (34 samples, 0.03%)</title><rect x="12.1051%" y="1029" width="0.0317%" height="15" fill="rgb(249,109,34)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.03%)</title><rect x="12.1051%" y="1013" width="0.0317%" height="15" fill="rgb(232,96,21)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.03%)</title><rect x="12.1051%" y="997" width="0.0317%" height="15" fill="rgb(228,27,39)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (34 samples, 0.03%)</title><rect x="12.1051%" y="981" width="0.0317%" height="15" fill="rgb(211,182,52)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.03%)</title><rect x="12.1051%" y="965" width="0.0317%" height="15" fill="rgb(234,178,38)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.03%)</title><rect x="12.1051%" y="949" width="0.0317%" height="15" fill="rgb(221,111,3)" fg:x="12997" fg:w="34"/><text x="12.3551%" y="959.50"></text></g><g><title>rayon_core::join::join_context (31 samples, 0.03%)</title><rect x="12.1079%" y="933" width="0.0289%" height="15" fill="rgb(228,175,21)" fg:x="13000" fg:w="31"/><text x="12.3579%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (31 samples, 0.03%)</title><rect x="12.1079%" y="917" width="0.0289%" height="15" fill="rgb(228,174,43)" fg:x="13000" fg:w="31"/><text x="12.3579%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (31 samples, 0.03%)</title><rect x="12.1079%" y="901" width="0.0289%" height="15" fill="rgb(211,191,0)" fg:x="13000" fg:w="31"/><text x="12.3579%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 0.01%)</title><rect x="12.1228%" y="885" width="0.0140%" height="15" fill="rgb(253,117,3)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="895.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.01%)</title><rect x="12.1228%" y="869" width="0.0140%" height="15" fill="rgb(241,127,19)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="879.50"></text></g><g><title>std::panicking::try (15 samples, 0.01%)</title><rect x="12.1228%" y="853" width="0.0140%" height="15" fill="rgb(218,103,12)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="863.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.01%)</title><rect x="12.1228%" y="837" width="0.0140%" height="15" fill="rgb(236,214,43)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="12.1228%" y="821" width="0.0140%" height="15" fill="rgb(244,144,19)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (15 samples, 0.01%)</title><rect x="12.1228%" y="805" width="0.0140%" height="15" fill="rgb(246,188,10)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.01%)</title><rect x="12.1228%" y="789" width="0.0140%" height="15" fill="rgb(212,193,33)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.01%)</title><rect x="12.1228%" y="773" width="0.0140%" height="15" fill="rgb(241,51,29)" fg:x="13016" fg:w="15"/><text x="12.3728%" y="783.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.01%)</title><rect x="12.1424%" y="933" width="0.0121%" height="15" fill="rgb(211,58,19)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.01%)</title><rect x="12.1424%" y="917" width="0.0121%" height="15" fill="rgb(229,111,26)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="927.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.01%)</title><rect x="12.1424%" y="901" width="0.0121%" height="15" fill="rgb(213,115,40)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="12.1424%" y="885" width="0.0121%" height="15" fill="rgb(209,56,44)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="12.1424%" y="869" width="0.0121%" height="15" fill="rgb(230,108,32)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.01%)</title><rect x="12.1424%" y="853" width="0.0121%" height="15" fill="rgb(216,165,31)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.01%)</title><rect x="12.1424%" y="837" width="0.0121%" height="15" fill="rgb(218,122,21)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="847.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="12.1424%" y="821" width="0.0121%" height="15" fill="rgb(223,224,47)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="831.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (13 samples, 0.01%)</title><rect x="12.1424%" y="805" width="0.0121%" height="15" fill="rgb(238,102,44)" fg:x="13037" fg:w="13"/><text x="12.3924%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (16 samples, 0.01%)</title><rect x="12.1573%" y="757" width="0.0149%" height="15" fill="rgb(236,46,40)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="767.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (16 samples, 0.01%)</title><rect x="12.1573%" y="741" width="0.0149%" height="15" fill="rgb(247,202,50)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (16 samples, 0.01%)</title><rect x="12.1573%" y="725" width="0.0149%" height="15" fill="rgb(209,99,20)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="12.1573%" y="709" width="0.0149%" height="15" fill="rgb(252,27,34)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.01%)</title><rect x="12.1573%" y="693" width="0.0149%" height="15" fill="rgb(215,206,23)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.01%)</title><rect x="12.1573%" y="677" width="0.0149%" height="15" fill="rgb(212,135,36)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (16 samples, 0.01%)</title><rect x="12.1573%" y="661" width="0.0149%" height="15" fill="rgb(240,189,1)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="671.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="12.1573%" y="645" width="0.0149%" height="15" fill="rgb(242,56,20)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="655.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (16 samples, 0.01%)</title><rect x="12.1573%" y="629" width="0.0149%" height="15" fill="rgb(247,132,33)" fg:x="13053" fg:w="16"/><text x="12.4073%" y="639.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (12 samples, 0.01%)</title><rect x="12.1610%" y="613" width="0.0112%" height="15" fill="rgb(208,149,11)" fg:x="13057" fg:w="12"/><text x="12.4110%" y="623.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (33 samples, 0.03%)</title><rect x="12.1424%" y="1141" width="0.0307%" height="15" fill="rgb(211,33,11)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1151.50"></text></g><g><title>rayon_core::job::JobRef::execute (33 samples, 0.03%)</title><rect x="12.1424%" y="1125" width="0.0307%" height="15" fill="rgb(221,29,38)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (33 samples, 0.03%)</title><rect x="12.1424%" y="1109" width="0.0307%" height="15" fill="rgb(206,182,49)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1119.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (33 samples, 0.03%)</title><rect x="12.1424%" y="1093" width="0.0307%" height="15" fill="rgb(216,140,1)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (33 samples, 0.03%)</title><rect x="12.1424%" y="1077" width="0.0307%" height="15" fill="rgb(232,57,40)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.03%)</title><rect x="12.1424%" y="1061" width="0.0307%" height="15" fill="rgb(224,186,18)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1071.50"></text></g><g><title>std::panicking::try (33 samples, 0.03%)</title><rect x="12.1424%" y="1045" width="0.0307%" height="15" fill="rgb(215,121,11)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.03%)</title><rect x="12.1424%" y="1029" width="0.0307%" height="15" fill="rgb(245,147,10)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.03%)</title><rect x="12.1424%" y="1013" width="0.0307%" height="15" fill="rgb(238,153,13)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1023.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (33 samples, 0.03%)</title><rect x="12.1424%" y="997" width="0.0307%" height="15" fill="rgb(233,108,0)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (33 samples, 0.03%)</title><rect x="12.1424%" y="981" width="0.0307%" height="15" fill="rgb(212,157,17)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (33 samples, 0.03%)</title><rect x="12.1424%" y="965" width="0.0307%" height="15" fill="rgb(225,213,38)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (33 samples, 0.03%)</title><rect x="12.1424%" y="949" width="0.0307%" height="15" fill="rgb(248,16,11)" fg:x="13037" fg:w="33"/><text x="12.3924%" y="959.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.02%)</title><rect x="12.1545%" y="933" width="0.0186%" height="15" fill="rgb(241,33,4)" fg:x="13050" fg:w="20"/><text x="12.4045%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.02%)</title><rect x="12.1545%" y="917" width="0.0186%" height="15" fill="rgb(222,26,43)" fg:x="13050" fg:w="20"/><text x="12.4045%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.02%)</title><rect x="12.1545%" y="901" width="0.0186%" height="15" fill="rgb(243,29,36)" fg:x="13050" fg:w="20"/><text x="12.4045%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="12.1573%" y="885" width="0.0158%" height="15" fill="rgb(241,9,27)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="895.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="12.1573%" y="869" width="0.0158%" height="15" fill="rgb(205,117,26)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="879.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="12.1573%" y="853" width="0.0158%" height="15" fill="rgb(209,80,39)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="863.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="12.1573%" y="837" width="0.0158%" height="15" fill="rgb(239,155,6)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="12.1573%" y="821" width="0.0158%" height="15" fill="rgb(212,104,12)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="12.1573%" y="805" width="0.0158%" height="15" fill="rgb(234,204,3)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="12.1573%" y="789" width="0.0158%" height="15" fill="rgb(251,218,7)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.1573%" y="773" width="0.0158%" height="15" fill="rgb(221,81,32)" fg:x="13053" fg:w="17"/><text x="12.4073%" y="783.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (48 samples, 0.04%)</title><rect x="12.1424%" y="1173" width="0.0447%" height="15" fill="rgb(214,152,26)" fg:x="13037" fg:w="48"/><text x="12.3924%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (48 samples, 0.04%)</title><rect x="12.1424%" y="1157" width="0.0447%" height="15" fill="rgb(223,22,3)" fg:x="13037" fg:w="48"/><text x="12.3924%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="12.1908%" y="981" width="0.0140%" height="15" fill="rgb(207,174,7)" fg:x="13089" fg:w="15"/><text x="12.4408%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="12.1926%" y="965" width="0.0121%" height="15" fill="rgb(224,19,52)" fg:x="13091" fg:w="13"/><text x="12.4426%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.01%)</title><rect x="12.1926%" y="949" width="0.0121%" height="15" fill="rgb(228,24,14)" fg:x="13091" fg:w="13"/><text x="12.4426%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.01%)</title><rect x="12.1926%" y="933" width="0.0121%" height="15" fill="rgb(230,153,43)" fg:x="13091" fg:w="13"/><text x="12.4426%" y="943.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.01%)</title><rect x="12.1926%" y="917" width="0.0121%" height="15" fill="rgb(231,106,12)" fg:x="13091" fg:w="13"/><text x="12.4426%" y="927.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (13 samples, 0.01%)</title><rect x="12.1926%" y="901" width="0.0121%" height="15" fill="rgb(215,92,2)" fg:x="13091" fg:w="13"/><text x="12.4426%" y="911.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (21 samples, 0.02%)</title><rect x="12.1908%" y="1045" width="0.0196%" height="15" fill="rgb(249,143,25)" fg:x="13089" fg:w="21"/><text x="12.4408%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.02%)</title><rect x="12.1908%" y="1029" width="0.0196%" height="15" fill="rgb(252,7,35)" fg:x="13089" fg:w="21"/><text x="12.4408%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.02%)</title><rect x="12.1908%" y="1013" width="0.0196%" height="15" fill="rgb(216,69,40)" fg:x="13089" fg:w="21"/><text x="12.4408%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.02%)</title><rect x="12.1908%" y="997" width="0.0196%" height="15" fill="rgb(240,36,33)" fg:x="13089" fg:w="21"/><text x="12.4408%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 0.02%)</title><rect x="12.2122%" y="917" width="0.0158%" height="15" fill="rgb(231,128,14)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="12.2122%" y="901" width="0.0158%" height="15" fill="rgb(245,143,14)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="12.2122%" y="885" width="0.0158%" height="15" fill="rgb(222,130,28)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="12.2122%" y="869" width="0.0158%" height="15" fill="rgb(212,10,48)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="12.2122%" y="853" width="0.0158%" height="15" fill="rgb(254,118,45)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="12.2122%" y="837" width="0.0158%" height="15" fill="rgb(228,6,45)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="847.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="12.2122%" y="821" width="0.0158%" height="15" fill="rgb(241,18,35)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="831.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="12.2122%" y="805" width="0.0158%" height="15" fill="rgb(227,214,53)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="815.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="12.2122%" y="789" width="0.0158%" height="15" fill="rgb(224,107,51)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="799.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="12.2122%" y="773" width="0.0158%" height="15" fill="rgb(248,60,28)" fg:x="13112" fg:w="17"/><text x="12.4622%" y="783.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (48 samples, 0.04%)</title><rect x="12.2327%" y="789" width="0.0447%" height="15" fill="rgb(249,101,23)" fg:x="13134" fg:w="48"/><text x="12.4827%" y="799.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (46 samples, 0.04%)</title><rect x="12.2346%" y="773" width="0.0428%" height="15" fill="rgb(228,51,19)" fg:x="13136" fg:w="46"/><text x="12.4846%" y="783.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (54 samples, 0.05%)</title><rect x="12.2318%" y="885" width="0.0503%" height="15" fill="rgb(213,20,6)" fg:x="13133" fg:w="54"/><text x="12.4818%" y="895.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (54 samples, 0.05%)</title><rect x="12.2318%" y="869" width="0.0503%" height="15" fill="rgb(212,124,10)" fg:x="13133" fg:w="54"/><text x="12.4818%" y="879.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (54 samples, 0.05%)</title><rect x="12.2318%" y="853" width="0.0503%" height="15" fill="rgb(248,3,40)" fg:x="13133" fg:w="54"/><text x="12.4818%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.05%)</title><rect x="12.2318%" y="837" width="0.0503%" height="15" fill="rgb(223,178,23)" fg:x="13133" fg:w="54"/><text x="12.4818%" y="847.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (54 samples, 0.05%)</title><rect x="12.2318%" y="821" width="0.0503%" height="15" fill="rgb(240,132,45)" fg:x="13133" fg:w="54"/><text x="12.4818%" y="831.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (53 samples, 0.05%)</title><rect x="12.2327%" y="805" width="0.0494%" height="15" fill="rgb(245,164,36)" fg:x="13134" fg:w="53"/><text x="12.4827%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (77 samples, 0.07%)</title><rect x="12.2113%" y="1045" width="0.0717%" height="15" fill="rgb(231,188,53)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="1055.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (77 samples, 0.07%)</title><rect x="12.2113%" y="1029" width="0.0717%" height="15" fill="rgb(237,198,39)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (77 samples, 0.07%)</title><rect x="12.2113%" y="1013" width="0.0717%" height="15" fill="rgb(223,120,35)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.07%)</title><rect x="12.2113%" y="997" width="0.0717%" height="15" fill="rgb(253,107,49)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (77 samples, 0.07%)</title><rect x="12.2113%" y="981" width="0.0717%" height="15" fill="rgb(216,44,31)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (77 samples, 0.07%)</title><rect x="12.2113%" y="965" width="0.0717%" height="15" fill="rgb(253,87,21)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (77 samples, 0.07%)</title><rect x="12.2113%" y="949" width="0.0717%" height="15" fill="rgb(226,18,2)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="959.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (77 samples, 0.07%)</title><rect x="12.2113%" y="933" width="0.0717%" height="15" fill="rgb(216,8,46)" fg:x="13111" fg:w="77"/><text x="12.4613%" y="943.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (59 samples, 0.05%)</title><rect x="12.2280%" y="917" width="0.0550%" height="15" fill="rgb(226,140,39)" fg:x="13129" fg:w="59"/><text x="12.4780%" y="927.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (55 samples, 0.05%)</title><rect x="12.2318%" y="901" width="0.0512%" height="15" fill="rgb(221,194,54)" fg:x="13133" fg:w="55"/><text x="12.4818%" y="911.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (21 samples, 0.02%)</title><rect x="12.2849%" y="933" width="0.0196%" height="15" fill="rgb(213,92,11)" fg:x="13190" fg:w="21"/><text x="12.5349%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.02%)</title><rect x="12.2849%" y="917" width="0.0196%" height="15" fill="rgb(229,162,46)" fg:x="13190" fg:w="21"/><text x="12.5349%" y="927.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.02%)</title><rect x="12.2849%" y="901" width="0.0196%" height="15" fill="rgb(214,111,36)" fg:x="13190" fg:w="21"/><text x="12.5349%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.02%)</title><rect x="12.2849%" y="885" width="0.0196%" height="15" fill="rgb(207,6,21)" fg:x="13190" fg:w="21"/><text x="12.5349%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="12.2858%" y="869" width="0.0186%" height="15" fill="rgb(213,127,38)" fg:x="13191" fg:w="20"/><text x="12.5358%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.02%)</title><rect x="12.2886%" y="853" width="0.0158%" height="15" fill="rgb(238,118,32)" fg:x="13194" fg:w="17"/><text x="12.5386%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="12.2942%" y="837" width="0.0102%" height="15" fill="rgb(240,139,39)" fg:x="13200" fg:w="11"/><text x="12.5442%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.01%)</title><rect x="12.2942%" y="821" width="0.0102%" height="15" fill="rgb(235,10,37)" fg:x="13200" fg:w="11"/><text x="12.5442%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.01%)</title><rect x="12.2942%" y="805" width="0.0102%" height="15" fill="rgb(249,171,38)" fg:x="13200" fg:w="11"/><text x="12.5442%" y="815.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (11 samples, 0.01%)</title><rect x="12.2942%" y="789" width="0.0102%" height="15" fill="rgb(242,144,32)" fg:x="13200" fg:w="11"/><text x="12.5442%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.02%)</title><rect x="12.3044%" y="885" width="0.0158%" height="15" fill="rgb(217,117,21)" fg:x="13211" fg:w="17"/><text x="12.5544%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.02%)</title><rect x="12.3044%" y="869" width="0.0158%" height="15" fill="rgb(249,87,1)" fg:x="13211" fg:w="17"/><text x="12.5544%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="12.3044%" y="853" width="0.0158%" height="15" fill="rgb(248,196,48)" fg:x="13211" fg:w="17"/><text x="12.5544%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.3044%" y="837" width="0.0158%" height="15" fill="rgb(251,206,33)" fg:x="13211" fg:w="17"/><text x="12.5544%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="12.3314%" y="53" width="0.0102%" height="15" fill="rgb(232,141,28)" fg:x="13240" fg:w="11"/><text x="12.5814%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="12.3314%" y="37" width="0.0102%" height="15" fill="rgb(209,167,14)" fg:x="13240" fg:w="11"/><text x="12.5814%" y="47.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (19 samples, 0.02%)</title><rect x="12.3249%" y="885" width="0.0177%" height="15" fill="rgb(225,11,50)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.02%)</title><rect x="12.3249%" y="869" width="0.0177%" height="15" fill="rgb(209,50,20)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="879.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (19 samples, 0.02%)</title><rect x="12.3249%" y="853" width="0.0177%" height="15" fill="rgb(212,17,46)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="863.50"></text></g><g><title>rayon_core::job::JobRef::execute (19 samples, 0.02%)</title><rect x="12.3249%" y="837" width="0.0177%" height="15" fill="rgb(216,101,39)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="847.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (19 samples, 0.02%)</title><rect x="12.3249%" y="821" width="0.0177%" height="15" fill="rgb(212,228,48)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="831.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (19 samples, 0.02%)</title><rect x="12.3249%" y="805" width="0.0177%" height="15" fill="rgb(250,6,50)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="815.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.02%)</title><rect x="12.3249%" y="789" width="0.0177%" height="15" fill="rgb(250,160,48)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="799.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="12.3249%" y="773" width="0.0177%" height="15" fill="rgb(244,216,33)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="783.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="12.3249%" y="757" width="0.0177%" height="15" fill="rgb(207,157,5)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="767.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="12.3249%" y="741" width="0.0177%" height="15" fill="rgb(228,199,8)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="12.3249%" y="725" width="0.0177%" height="15" fill="rgb(227,80,20)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="735.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (19 samples, 0.02%)</title><rect x="12.3249%" y="709" width="0.0177%" height="15" fill="rgb(222,9,33)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (19 samples, 0.02%)</title><rect x="12.3249%" y="693" width="0.0177%" height="15" fill="rgb(239,44,28)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.02%)</title><rect x="12.3249%" y="677" width="0.0177%" height="15" fill="rgb(249,187,43)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="12.3249%" y="661" width="0.0177%" height="15" fill="rgb(216,141,28)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="671.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.02%)</title><rect x="12.3249%" y="645" width="0.0177%" height="15" fill="rgb(230,154,53)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="12.3249%" y="629" width="0.0177%" height="15" fill="rgb(227,82,4)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="639.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.02%)</title><rect x="12.3249%" y="613" width="0.0177%" height="15" fill="rgb(220,107,16)" fg:x="13233" fg:w="19"/><text x="12.5749%" y="623.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="12.3258%" y="597" width="0.0168%" height="15" fill="rgb(207,187,2)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="607.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="12.3258%" y="581" width="0.0168%" height="15" fill="rgb(210,162,52)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="591.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="12.3258%" y="565" width="0.0168%" height="15" fill="rgb(217,216,49)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="575.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="12.3258%" y="549" width="0.0168%" height="15" fill="rgb(218,146,49)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="559.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="12.3258%" y="533" width="0.0168%" height="15" fill="rgb(216,55,40)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (18 samples, 0.02%)</title><rect x="12.3258%" y="517" width="0.0168%" height="15" fill="rgb(208,196,21)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="12.3258%" y="501" width="0.0168%" height="15" fill="rgb(242,117,42)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="12.3258%" y="485" width="0.0168%" height="15" fill="rgb(210,11,23)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="495.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="12.3258%" y="469" width="0.0168%" height="15" fill="rgb(217,110,2)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="12.3258%" y="453" width="0.0168%" height="15" fill="rgb(229,77,54)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="463.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="12.3258%" y="437" width="0.0168%" height="15" fill="rgb(218,53,16)" fg:x="13234" fg:w="18"/><text x="12.5758%" y="447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.01%)</title><rect x="12.3314%" y="421" width="0.0112%" height="15" fill="rgb(215,38,13)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="431.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="12.3314%" y="405" width="0.0112%" height="15" fill="rgb(235,42,18)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="415.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="12.3314%" y="389" width="0.0112%" height="15" fill="rgb(219,66,54)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="399.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="12.3314%" y="373" width="0.0112%" height="15" fill="rgb(222,205,4)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="12.3314%" y="357" width="0.0112%" height="15" fill="rgb(227,213,46)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="367.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.01%)</title><rect x="12.3314%" y="341" width="0.0112%" height="15" fill="rgb(250,145,42)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.01%)</title><rect x="12.3314%" y="325" width="0.0112%" height="15" fill="rgb(219,15,2)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="12.3314%" y="309" width="0.0112%" height="15" fill="rgb(231,181,52)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="319.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.01%)</title><rect x="12.3314%" y="293" width="0.0112%" height="15" fill="rgb(235,1,42)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.01%)</title><rect x="12.3314%" y="277" width="0.0112%" height="15" fill="rgb(249,88,27)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.01%)</title><rect x="12.3314%" y="261" width="0.0112%" height="15" fill="rgb(235,145,16)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="271.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.01%)</title><rect x="12.3314%" y="245" width="0.0112%" height="15" fill="rgb(237,114,19)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="255.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="12.3314%" y="229" width="0.0112%" height="15" fill="rgb(238,51,50)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="239.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="12.3314%" y="213" width="0.0112%" height="15" fill="rgb(205,194,25)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="223.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="12.3314%" y="197" width="0.0112%" height="15" fill="rgb(215,203,17)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="207.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="12.3314%" y="181" width="0.0112%" height="15" fill="rgb(233,112,49)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="191.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.01%)</title><rect x="12.3314%" y="165" width="0.0112%" height="15" fill="rgb(241,130,26)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.01%)</title><rect x="12.3314%" y="149" width="0.0112%" height="15" fill="rgb(252,223,19)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="12.3314%" y="133" width="0.0112%" height="15" fill="rgb(211,95,25)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="143.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (12 samples, 0.01%)</title><rect x="12.3314%" y="117" width="0.0112%" height="15" fill="rgb(251,182,27)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="127.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (12 samples, 0.01%)</title><rect x="12.3314%" y="101" width="0.0112%" height="15" fill="rgb(238,24,4)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="111.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.01%)</title><rect x="12.3314%" y="85" width="0.0112%" height="15" fill="rgb(224,220,25)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="95.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (12 samples, 0.01%)</title><rect x="12.3314%" y="69" width="0.0112%" height="15" fill="rgb(239,133,26)" fg:x="13240" fg:w="12"/><text x="12.5814%" y="79.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (72 samples, 0.07%)</title><rect x="12.2849%" y="997" width="0.0671%" height="15" fill="rgb(211,94,48)" fg:x="13190" fg:w="72"/><text x="12.5349%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (72 samples, 0.07%)</title><rect x="12.2849%" y="981" width="0.0671%" height="15" fill="rgb(239,87,6)" fg:x="13190" fg:w="72"/><text x="12.5349%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (72 samples, 0.07%)</title><rect x="12.2849%" y="965" width="0.0671%" height="15" fill="rgb(227,62,0)" fg:x="13190" fg:w="72"/><text x="12.5349%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (72 samples, 0.07%)</title><rect x="12.2849%" y="949" width="0.0671%" height="15" fill="rgb(211,226,4)" fg:x="13190" fg:w="72"/><text x="12.5349%" y="959.50"></text></g><g><title>rayon_core::join::join_context (51 samples, 0.05%)</title><rect x="12.3044%" y="933" width="0.0475%" height="15" fill="rgb(253,38,52)" fg:x="13211" fg:w="51"/><text x="12.5544%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (51 samples, 0.05%)</title><rect x="12.3044%" y="917" width="0.0475%" height="15" fill="rgb(229,126,40)" fg:x="13211" fg:w="51"/><text x="12.5544%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (51 samples, 0.05%)</title><rect x="12.3044%" y="901" width="0.0475%" height="15" fill="rgb(229,165,44)" fg:x="13211" fg:w="51"/><text x="12.5544%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (11 samples, 0.01%)</title><rect x="12.3538%" y="997" width="0.0102%" height="15" fill="rgb(247,95,47)" fg:x="13264" fg:w="11"/><text x="12.6038%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="12.3538%" y="981" width="0.0102%" height="15" fill="rgb(216,140,30)" fg:x="13264" fg:w="11"/><text x="12.6038%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="12.3668%" y="805" width="0.0289%" height="15" fill="rgb(246,214,8)" fg:x="13278" fg:w="31"/><text x="12.6168%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.03%)</title><rect x="12.3687%" y="789" width="0.0270%" height="15" fill="rgb(227,224,15)" fg:x="13280" fg:w="29"/><text x="12.6187%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (26 samples, 0.02%)</title><rect x="12.3715%" y="773" width="0.0242%" height="15" fill="rgb(233,175,4)" fg:x="13283" fg:w="26"/><text x="12.6215%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (26 samples, 0.02%)</title><rect x="12.3715%" y="757" width="0.0242%" height="15" fill="rgb(221,66,45)" fg:x="13283" fg:w="26"/><text x="12.6215%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (26 samples, 0.02%)</title><rect x="12.3715%" y="741" width="0.0242%" height="15" fill="rgb(221,178,18)" fg:x="13283" fg:w="26"/><text x="12.6215%" y="751.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (26 samples, 0.02%)</title><rect x="12.3715%" y="725" width="0.0242%" height="15" fill="rgb(213,81,29)" fg:x="13283" fg:w="26"/><text x="12.6215%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="12.3752%" y="709" width="0.0205%" height="15" fill="rgb(220,89,49)" fg:x="13287" fg:w="22"/><text x="12.6252%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="12.3761%" y="693" width="0.0196%" height="15" fill="rgb(227,60,33)" fg:x="13288" fg:w="21"/><text x="12.6261%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="12.3761%" y="677" width="0.0196%" height="15" fill="rgb(205,113,12)" fg:x="13288" fg:w="21"/><text x="12.6261%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="12.3761%" y="661" width="0.0196%" height="15" fill="rgb(211,32,1)" fg:x="13288" fg:w="21"/><text x="12.6261%" y="671.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="12.3761%" y="645" width="0.0196%" height="15" fill="rgb(246,2,12)" fg:x="13288" fg:w="21"/><text x="12.6261%" y="655.50"></text></g><g><title>malloc (21 samples, 0.02%)</title><rect x="12.3761%" y="629" width="0.0196%" height="15" fill="rgb(243,37,27)" fg:x="13288" fg:w="21"/><text x="12.6261%" y="639.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="12.3780%" y="613" width="0.0177%" height="15" fill="rgb(248,211,31)" fg:x="13290" fg:w="19"/><text x="12.6280%" y="623.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (33 samples, 0.03%)</title><rect x="12.3668%" y="869" width="0.0307%" height="15" fill="rgb(242,146,47)" fg:x="13278" fg:w="33"/><text x="12.6168%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (33 samples, 0.03%)</title><rect x="12.3668%" y="853" width="0.0307%" height="15" fill="rgb(206,70,20)" fg:x="13278" fg:w="33"/><text x="12.6168%" y="863.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (33 samples, 0.03%)</title><rect x="12.3668%" y="837" width="0.0307%" height="15" fill="rgb(215,10,51)" fg:x="13278" fg:w="33"/><text x="12.6168%" y="847.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (33 samples, 0.03%)</title><rect x="12.3668%" y="821" width="0.0307%" height="15" fill="rgb(243,178,53)" fg:x="13278" fg:w="33"/><text x="12.6168%" y="831.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (20 samples, 0.02%)</title><rect x="12.4003%" y="821" width="0.0186%" height="15" fill="rgb(233,221,20)" fg:x="13314" fg:w="20"/><text x="12.6503%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (20 samples, 0.02%)</title><rect x="12.4003%" y="805" width="0.0186%" height="15" fill="rgb(218,95,35)" fg:x="13314" fg:w="20"/><text x="12.6503%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (20 samples, 0.02%)</title><rect x="12.4003%" y="789" width="0.0186%" height="15" fill="rgb(229,13,5)" fg:x="13314" fg:w="20"/><text x="12.6503%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="12.4003%" y="773" width="0.0186%" height="15" fill="rgb(252,164,30)" fg:x="13314" fg:w="20"/><text x="12.6503%" y="783.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="12.4022%" y="757" width="0.0168%" height="15" fill="rgb(232,68,36)" fg:x="13316" fg:w="18"/><text x="12.6522%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="12.4022%" y="741" width="0.0168%" height="15" fill="rgb(219,59,54)" fg:x="13316" fg:w="18"/><text x="12.6522%" y="751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="12.4022%" y="725" width="0.0168%" height="15" fill="rgb(250,92,33)" fg:x="13316" fg:w="18"/><text x="12.6522%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="12.4274%" y="629" width="0.0186%" height="15" fill="rgb(229,162,54)" fg:x="13343" fg:w="20"/><text x="12.6774%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="12.4292%" y="613" width="0.0168%" height="15" fill="rgb(244,114,52)" fg:x="13345" fg:w="18"/><text x="12.6792%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15 samples, 0.01%)</title><rect x="12.4320%" y="597" width="0.0140%" height="15" fill="rgb(212,211,43)" fg:x="13348" fg:w="15"/><text x="12.6820%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.01%)</title><rect x="12.4320%" y="581" width="0.0140%" height="15" fill="rgb(226,147,8)" fg:x="13348" fg:w="15"/><text x="12.6820%" y="591.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.01%)</title><rect x="12.4320%" y="565" width="0.0140%" height="15" fill="rgb(226,23,13)" fg:x="13348" fg:w="15"/><text x="12.6820%" y="575.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (15 samples, 0.01%)</title><rect x="12.4320%" y="549" width="0.0140%" height="15" fill="rgb(240,63,4)" fg:x="13348" fg:w="15"/><text x="12.6820%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="12.4320%" y="533" width="0.0140%" height="15" fill="rgb(221,1,32)" fg:x="13348" fg:w="15"/><text x="12.6820%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="12.4329%" y="517" width="0.0130%" height="15" fill="rgb(242,117,10)" fg:x="13349" fg:w="14"/><text x="12.6829%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="12.4329%" y="501" width="0.0130%" height="15" fill="rgb(249,172,44)" fg:x="13349" fg:w="14"/><text x="12.6829%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="12.4329%" y="485" width="0.0130%" height="15" fill="rgb(244,46,45)" fg:x="13349" fg:w="14"/><text x="12.6829%" y="495.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="12.4329%" y="469" width="0.0130%" height="15" fill="rgb(206,43,17)" fg:x="13349" fg:w="14"/><text x="12.6829%" y="479.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="12.4329%" y="453" width="0.0130%" height="15" fill="rgb(239,218,39)" fg:x="13349" fg:w="14"/><text x="12.6829%" y="463.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="12.4339%" y="437" width="0.0121%" height="15" fill="rgb(208,169,54)" fg:x="13350" fg:w="13"/><text x="12.6839%" y="447.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (21 samples, 0.02%)</title><rect x="12.4274%" y="693" width="0.0196%" height="15" fill="rgb(247,25,42)" fg:x="13343" fg:w="21"/><text x="12.6774%" y="703.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.02%)</title><rect x="12.4274%" y="677" width="0.0196%" height="15" fill="rgb(226,23,31)" fg:x="13343" fg:w="21"/><text x="12.6774%" y="687.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.02%)</title><rect x="12.4274%" y="661" width="0.0196%" height="15" fill="rgb(247,16,28)" fg:x="13343" fg:w="21"/><text x="12.6774%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.02%)</title><rect x="12.4274%" y="645" width="0.0196%" height="15" fill="rgb(231,147,38)" fg:x="13343" fg:w="21"/><text x="12.6774%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.04%)</title><rect x="12.4581%" y="453" width="0.0354%" height="15" fill="rgb(253,81,48)" fg:x="13376" fg:w="38"/><text x="12.7081%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (38 samples, 0.04%)</title><rect x="12.4581%" y="437" width="0.0354%" height="15" fill="rgb(249,222,43)" fg:x="13376" fg:w="38"/><text x="12.7081%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (38 samples, 0.04%)</title><rect x="12.4581%" y="421" width="0.0354%" height="15" fill="rgb(221,3,27)" fg:x="13376" fg:w="38"/><text x="12.7081%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (38 samples, 0.04%)</title><rect x="12.4581%" y="405" width="0.0354%" height="15" fill="rgb(228,180,5)" fg:x="13376" fg:w="38"/><text x="12.7081%" y="415.50"></text></g><g><title>core::ops::function::Fn::call (38 samples, 0.04%)</title><rect x="12.4581%" y="389" width="0.0354%" height="15" fill="rgb(227,131,42)" fg:x="13376" fg:w="38"/><text x="12.7081%" y="399.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (38 samples, 0.04%)</title><rect x="12.4581%" y="373" width="0.0354%" height="15" fill="rgb(212,3,39)" fg:x="13376" fg:w="38"/><text x="12.7081%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (37 samples, 0.03%)</title><rect x="12.4590%" y="357" width="0.0345%" height="15" fill="rgb(226,45,5)" fg:x="13377" fg:w="37"/><text x="12.7090%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.03%)</title><rect x="12.4590%" y="341" width="0.0345%" height="15" fill="rgb(215,167,45)" fg:x="13377" fg:w="37"/><text x="12.7090%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.03%)</title><rect x="12.4590%" y="325" width="0.0345%" height="15" fill="rgb(250,218,53)" fg:x="13377" fg:w="37"/><text x="12.7090%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.03%)</title><rect x="12.4590%" y="309" width="0.0345%" height="15" fill="rgb(207,140,0)" fg:x="13377" fg:w="37"/><text x="12.7090%" y="319.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.03%)</title><rect x="12.4590%" y="293" width="0.0345%" height="15" fill="rgb(238,133,51)" fg:x="13377" fg:w="37"/><text x="12.7090%" y="303.50"></text></g><g><title>malloc (37 samples, 0.03%)</title><rect x="12.4590%" y="277" width="0.0345%" height="15" fill="rgb(218,203,53)" fg:x="13377" fg:w="37"/><text x="12.7090%" y="287.50"></text></g><g><title>[libc.so.6] (35 samples, 0.03%)</title><rect x="12.4609%" y="261" width="0.0326%" height="15" fill="rgb(226,184,25)" fg:x="13379" fg:w="35"/><text x="12.7109%" y="271.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (39 samples, 0.04%)</title><rect x="12.4581%" y="517" width="0.0363%" height="15" fill="rgb(231,121,21)" fg:x="13376" fg:w="39"/><text x="12.7081%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (39 samples, 0.04%)</title><rect x="12.4581%" y="501" width="0.0363%" height="15" fill="rgb(251,14,34)" fg:x="13376" fg:w="39"/><text x="12.7081%" y="511.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (39 samples, 0.04%)</title><rect x="12.4581%" y="485" width="0.0363%" height="15" fill="rgb(249,193,11)" fg:x="13376" fg:w="39"/><text x="12.7081%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (39 samples, 0.04%)</title><rect x="12.4581%" y="469" width="0.0363%" height="15" fill="rgb(220,172,37)" fg:x="13376" fg:w="39"/><text x="12.7081%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2,636 samples, 2.46%)</title><rect x="10.0589%" y="1621" width="2.4551%" height="15" fill="rgb(231,229,43)" fg:x="10800" fg:w="2636"/><text x="10.3089%" y="1631.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,636 samples, 2.46%)</title><rect x="10.0589%" y="1605" width="2.4551%" height="15" fill="rgb(250,161,5)" fg:x="10800" fg:w="2636"/><text x="10.3089%" y="1615.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,633 samples, 2.45%)</title><rect x="10.0617%" y="1589" width="2.4523%" height="15" fill="rgb(218,225,18)" fg:x="10803" fg:w="2633"/><text x="10.3117%" y="1599.50">ra..</text></g><g><title>rayon_core::join::join_context (2,343 samples, 2.18%)</title><rect x="10.3318%" y="1573" width="2.1822%" height="15" fill="rgb(245,45,42)" fg:x="11093" fg:w="2343"/><text x="10.5818%" y="1583.50">r..</text></g><g><title>rayon_core::registry::in_worker (2,343 samples, 2.18%)</title><rect x="10.3318%" y="1557" width="2.1822%" height="15" fill="rgb(211,115,1)" fg:x="11093" fg:w="2343"/><text x="10.5818%" y="1567.50">r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (2,340 samples, 2.18%)</title><rect x="10.3346%" y="1541" width="2.1794%" height="15" fill="rgb(248,133,52)" fg:x="11096" fg:w="2340"/><text x="10.5846%" y="1551.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,738 samples, 1.62%)</title><rect x="10.8952%" y="1525" width="1.6187%" height="15" fill="rgb(238,100,21)" fg:x="11698" fg:w="1738"/><text x="11.1452%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (1,738 samples, 1.62%)</title><rect x="10.8952%" y="1509" width="1.6187%" height="15" fill="rgb(247,144,11)" fg:x="11698" fg:w="1738"/><text x="11.1452%" y="1519.50"></text></g><g><title>std::panicking::try (1,738 samples, 1.62%)</title><rect x="10.8952%" y="1493" width="1.6187%" height="15" fill="rgb(206,164,16)" fg:x="11698" fg:w="1738"/><text x="11.1452%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (1,738 samples, 1.62%)</title><rect x="10.8952%" y="1477" width="1.6187%" height="15" fill="rgb(222,34,3)" fg:x="11698" fg:w="1738"/><text x="11.1452%" y="1487.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,738 samples, 1.62%)</title><rect x="10.8952%" y="1461" width="1.6187%" height="15" fill="rgb(248,82,4)" fg:x="11698" fg:w="1738"/><text x="11.1452%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,738 samples, 1.62%)</title><rect x="10.8952%" y="1445" width="1.6187%" height="15" fill="rgb(228,81,46)" fg:x="11698" fg:w="1738"/><text x="11.1452%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,738 samples, 1.62%)</title><rect x="10.8952%" y="1429" width="1.6187%" height="15" fill="rgb(227,67,47)" fg:x="11698" fg:w="1738"/><text x="11.1452%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,737 samples, 1.62%)</title><rect x="10.8962%" y="1413" width="1.6178%" height="15" fill="rgb(215,93,53)" fg:x="11699" fg:w="1737"/><text x="11.1462%" y="1423.50"></text></g><g><title>rayon_core::join::join_context (891 samples, 0.83%)</title><rect x="11.6841%" y="1397" width="0.8299%" height="15" fill="rgb(248,194,39)" fg:x="12545" fg:w="891"/><text x="11.9341%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (890 samples, 0.83%)</title><rect x="11.6850%" y="1381" width="0.8289%" height="15" fill="rgb(215,5,19)" fg:x="12546" fg:w="890"/><text x="11.9350%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (888 samples, 0.83%)</title><rect x="11.6869%" y="1365" width="0.8271%" height="15" fill="rgb(226,215,51)" fg:x="12548" fg:w="888"/><text x="11.9369%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (685 samples, 0.64%)</title><rect x="11.8760%" y="1349" width="0.6380%" height="15" fill="rgb(225,56,26)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (685 samples, 0.64%)</title><rect x="11.8760%" y="1333" width="0.6380%" height="15" fill="rgb(222,75,29)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1343.50"></text></g><g><title>std::panicking::try (685 samples, 0.64%)</title><rect x="11.8760%" y="1317" width="0.6380%" height="15" fill="rgb(236,139,6)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (685 samples, 0.64%)</title><rect x="11.8760%" y="1301" width="0.6380%" height="15" fill="rgb(223,137,36)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (685 samples, 0.64%)</title><rect x="11.8760%" y="1285" width="0.6380%" height="15" fill="rgb(226,99,2)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (685 samples, 0.64%)</title><rect x="11.8760%" y="1269" width="0.6380%" height="15" fill="rgb(206,133,23)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (685 samples, 0.64%)</title><rect x="11.8760%" y="1253" width="0.6380%" height="15" fill="rgb(243,173,15)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (685 samples, 0.64%)</title><rect x="11.8760%" y="1237" width="0.6380%" height="15" fill="rgb(228,69,28)" fg:x="12751" fg:w="685"/><text x="12.1260%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (485 samples, 0.45%)</title><rect x="12.0623%" y="1221" width="0.4517%" height="15" fill="rgb(212,51,22)" fg:x="12951" fg:w="485"/><text x="12.3123%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (485 samples, 0.45%)</title><rect x="12.0623%" y="1205" width="0.4517%" height="15" fill="rgb(227,113,0)" fg:x="12951" fg:w="485"/><text x="12.3123%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (484 samples, 0.45%)</title><rect x="12.0632%" y="1189" width="0.4508%" height="15" fill="rgb(252,84,27)" fg:x="12952" fg:w="484"/><text x="12.3132%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (351 samples, 0.33%)</title><rect x="12.1871%" y="1173" width="0.3269%" height="15" fill="rgb(223,145,39)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (351 samples, 0.33%)</title><rect x="12.1871%" y="1157" width="0.3269%" height="15" fill="rgb(239,219,30)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1167.50"></text></g><g><title>std::panicking::try (351 samples, 0.33%)</title><rect x="12.1871%" y="1141" width="0.3269%" height="15" fill="rgb(224,196,39)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (351 samples, 0.33%)</title><rect x="12.1871%" y="1125" width="0.3269%" height="15" fill="rgb(205,35,43)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (351 samples, 0.33%)</title><rect x="12.1871%" y="1109" width="0.3269%" height="15" fill="rgb(228,201,21)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (351 samples, 0.33%)</title><rect x="12.1871%" y="1093" width="0.3269%" height="15" fill="rgb(237,118,16)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (351 samples, 0.33%)</title><rect x="12.1871%" y="1077" width="0.3269%" height="15" fill="rgb(241,17,19)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (351 samples, 0.33%)</title><rect x="12.1871%" y="1061" width="0.3269%" height="15" fill="rgb(214,10,25)" fg:x="13085" fg:w="351"/><text x="12.4371%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (248 samples, 0.23%)</title><rect x="12.2830%" y="1045" width="0.2310%" height="15" fill="rgb(238,37,29)" fg:x="13188" fg:w="248"/><text x="12.5330%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (248 samples, 0.23%)</title><rect x="12.2830%" y="1029" width="0.2310%" height="15" fill="rgb(253,83,25)" fg:x="13188" fg:w="248"/><text x="12.5330%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (246 samples, 0.23%)</title><rect x="12.2849%" y="1013" width="0.2291%" height="15" fill="rgb(234,192,12)" fg:x="13190" fg:w="246"/><text x="12.5349%" y="1023.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (161 samples, 0.15%)</title><rect x="12.3640%" y="997" width="0.1500%" height="15" fill="rgb(241,216,45)" fg:x="13275" fg:w="161"/><text x="12.6140%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (161 samples, 0.15%)</title><rect x="12.3640%" y="981" width="0.1500%" height="15" fill="rgb(242,22,33)" fg:x="13275" fg:w="161"/><text x="12.6140%" y="991.50"></text></g><g><title>std::panicking::try (161 samples, 0.15%)</title><rect x="12.3640%" y="965" width="0.1500%" height="15" fill="rgb(231,105,49)" fg:x="13275" fg:w="161"/><text x="12.6140%" y="975.50"></text></g><g><title>std::panicking::try::do_call (161 samples, 0.15%)</title><rect x="12.3640%" y="949" width="0.1500%" height="15" fill="rgb(218,204,15)" fg:x="13275" fg:w="161"/><text x="12.6140%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (161 samples, 0.15%)</title><rect x="12.3640%" y="933" width="0.1500%" height="15" fill="rgb(235,138,41)" fg:x="13275" fg:w="161"/><text x="12.6140%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (161 samples, 0.15%)</title><rect x="12.3640%" y="917" width="0.1500%" height="15" fill="rgb(246,0,9)" fg:x="13275" fg:w="161"/><text x="12.6140%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (161 samples, 0.15%)</title><rect x="12.3640%" y="901" width="0.1500%" height="15" fill="rgb(210,74,4)" fg:x="13275" fg:w="161"/><text x="12.6140%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (160 samples, 0.15%)</title><rect x="12.3650%" y="885" width="0.1490%" height="15" fill="rgb(250,60,41)" fg:x="13276" fg:w="160"/><text x="12.6150%" y="895.50"></text></g><g><title>rayon_core::join::join_context (125 samples, 0.12%)</title><rect x="12.3975%" y="869" width="0.1164%" height="15" fill="rgb(220,115,12)" fg:x="13311" fg:w="125"/><text x="12.6475%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (124 samples, 0.12%)</title><rect x="12.3985%" y="853" width="0.1155%" height="15" fill="rgb(237,100,13)" fg:x="13312" fg:w="124"/><text x="12.6485%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (122 samples, 0.11%)</title><rect x="12.4003%" y="837" width="0.1136%" height="15" fill="rgb(213,55,26)" fg:x="13314" fg:w="122"/><text x="12.6503%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (97 samples, 0.09%)</title><rect x="12.4236%" y="821" width="0.0903%" height="15" fill="rgb(216,17,4)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="831.50"></text></g><g><title>std::panic::catch_unwind (97 samples, 0.09%)</title><rect x="12.4236%" y="805" width="0.0903%" height="15" fill="rgb(220,153,47)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="815.50"></text></g><g><title>std::panicking::try (97 samples, 0.09%)</title><rect x="12.4236%" y="789" width="0.0903%" height="15" fill="rgb(215,131,9)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="799.50"></text></g><g><title>std::panicking::try::do_call (97 samples, 0.09%)</title><rect x="12.4236%" y="773" width="0.0903%" height="15" fill="rgb(233,46,42)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (97 samples, 0.09%)</title><rect x="12.4236%" y="757" width="0.0903%" height="15" fill="rgb(226,86,7)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (97 samples, 0.09%)</title><rect x="12.4236%" y="741" width="0.0903%" height="15" fill="rgb(239,226,21)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (97 samples, 0.09%)</title><rect x="12.4236%" y="725" width="0.0903%" height="15" fill="rgb(244,137,22)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (97 samples, 0.09%)</title><rect x="12.4236%" y="709" width="0.0903%" height="15" fill="rgb(211,139,35)" fg:x="13339" fg:w="97"/><text x="12.6736%" y="719.50"></text></g><g><title>rayon_core::join::join_context (72 samples, 0.07%)</title><rect x="12.4469%" y="693" width="0.0671%" height="15" fill="rgb(214,62,50)" fg:x="13364" fg:w="72"/><text x="12.6969%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (72 samples, 0.07%)</title><rect x="12.4469%" y="677" width="0.0671%" height="15" fill="rgb(212,113,44)" fg:x="13364" fg:w="72"/><text x="12.6969%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (70 samples, 0.07%)</title><rect x="12.4488%" y="661" width="0.0652%" height="15" fill="rgb(226,150,43)" fg:x="13366" fg:w="70"/><text x="12.6988%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (60 samples, 0.06%)</title><rect x="12.4581%" y="645" width="0.0559%" height="15" fill="rgb(250,71,37)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="655.50"></text></g><g><title>std::panic::catch_unwind (60 samples, 0.06%)</title><rect x="12.4581%" y="629" width="0.0559%" height="15" fill="rgb(219,76,19)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="639.50"></text></g><g><title>std::panicking::try (60 samples, 0.06%)</title><rect x="12.4581%" y="613" width="0.0559%" height="15" fill="rgb(250,39,11)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="623.50"></text></g><g><title>std::panicking::try::do_call (60 samples, 0.06%)</title><rect x="12.4581%" y="597" width="0.0559%" height="15" fill="rgb(230,64,31)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60 samples, 0.06%)</title><rect x="12.4581%" y="581" width="0.0559%" height="15" fill="rgb(208,222,23)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (60 samples, 0.06%)</title><rect x="12.4581%" y="565" width="0.0559%" height="15" fill="rgb(227,125,18)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (60 samples, 0.06%)</title><rect x="12.4581%" y="549" width="0.0559%" height="15" fill="rgb(234,210,9)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (60 samples, 0.06%)</title><rect x="12.4581%" y="533" width="0.0559%" height="15" fill="rgb(217,127,24)" fg:x="13376" fg:w="60"/><text x="12.7081%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.02%)</title><rect x="12.4944%" y="517" width="0.0196%" height="15" fill="rgb(239,141,48)" fg:x="13415" fg:w="21"/><text x="12.7444%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.02%)</title><rect x="12.4944%" y="501" width="0.0196%" height="15" fill="rgb(227,109,8)" fg:x="13415" fg:w="21"/><text x="12.7444%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.02%)</title><rect x="12.4944%" y="485" width="0.0196%" height="15" fill="rgb(235,184,23)" fg:x="13415" fg:w="21"/><text x="12.7444%" y="495.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="12.5028%" y="469" width="0.0112%" height="15" fill="rgb(227,226,48)" fg:x="13424" fg:w="12"/><text x="12.7528%" y="479.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.01%)</title><rect x="12.5140%" y="1605" width="0.0140%" height="15" fill="rgb(206,150,11)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 0.01%)</title><rect x="12.5140%" y="1589" width="0.0140%" height="15" fill="rgb(254,2,33)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.01%)</title><rect x="12.5140%" y="1573" width="0.0140%" height="15" fill="rgb(243,160,20)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1583.50"></text></g><g><title>std::panicking::try (15 samples, 0.01%)</title><rect x="12.5140%" y="1557" width="0.0140%" height="15" fill="rgb(218,208,30)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.01%)</title><rect x="12.5140%" y="1541" width="0.0140%" height="15" fill="rgb(224,120,49)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="12.5140%" y="1525" width="0.0140%" height="15" fill="rgb(246,12,2)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (15 samples, 0.01%)</title><rect x="12.5140%" y="1509" width="0.0140%" height="15" fill="rgb(236,117,3)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.01%)</title><rect x="12.5140%" y="1493" width="0.0140%" height="15" fill="rgb(216,128,52)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.01%)</title><rect x="12.5140%" y="1477" width="0.0140%" height="15" fill="rgb(246,145,19)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.01%)</title><rect x="12.5140%" y="1461" width="0.0140%" height="15" fill="rgb(222,11,46)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.01%)</title><rect x="12.5140%" y="1445" width="0.0140%" height="15" fill="rgb(245,82,36)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.01%)</title><rect x="12.5140%" y="1429" width="0.0140%" height="15" fill="rgb(250,73,51)" fg:x="13436" fg:w="15"/><text x="12.7640%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.01%)</title><rect x="12.5168%" y="1413" width="0.0112%" height="15" fill="rgb(221,189,23)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="12.5168%" y="1397" width="0.0112%" height="15" fill="rgb(210,33,7)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1407.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="12.5168%" y="1381" width="0.0112%" height="15" fill="rgb(210,107,22)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="12.5168%" y="1365" width="0.0112%" height="15" fill="rgb(222,116,37)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="12.5168%" y="1349" width="0.0112%" height="15" fill="rgb(254,17,48)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="1333" width="0.0112%" height="15" fill="rgb(224,36,32)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="1317" width="0.0112%" height="15" fill="rgb(232,90,46)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="12.5168%" y="1301" width="0.0112%" height="15" fill="rgb(241,66,40)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.01%)</title><rect x="12.5168%" y="1285" width="0.0112%" height="15" fill="rgb(249,184,29)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.01%)</title><rect x="12.5168%" y="1269" width="0.0112%" height="15" fill="rgb(231,181,1)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="1253" width="0.0112%" height="15" fill="rgb(224,94,2)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.01%)</title><rect x="12.5168%" y="1237" width="0.0112%" height="15" fill="rgb(229,170,15)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="12.5168%" y="1221" width="0.0112%" height="15" fill="rgb(240,127,35)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1231.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="12.5168%" y="1205" width="0.0112%" height="15" fill="rgb(248,196,34)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="12.5168%" y="1189" width="0.0112%" height="15" fill="rgb(236,137,7)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="12.5168%" y="1173" width="0.0112%" height="15" fill="rgb(235,127,16)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="1157" width="0.0112%" height="15" fill="rgb(250,192,54)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="1141" width="0.0112%" height="15" fill="rgb(218,98,20)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="12.5168%" y="1125" width="0.0112%" height="15" fill="rgb(230,176,47)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.01%)</title><rect x="12.5168%" y="1109" width="0.0112%" height="15" fill="rgb(244,2,33)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.01%)</title><rect x="12.5168%" y="1093" width="0.0112%" height="15" fill="rgb(231,100,17)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="1077" width="0.0112%" height="15" fill="rgb(245,23,12)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.01%)</title><rect x="12.5168%" y="1061" width="0.0112%" height="15" fill="rgb(249,55,22)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="12.5168%" y="1045" width="0.0112%" height="15" fill="rgb(207,134,9)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1055.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="12.5168%" y="1029" width="0.0112%" height="15" fill="rgb(218,134,0)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="12.5168%" y="1013" width="0.0112%" height="15" fill="rgb(213,212,33)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="12.5168%" y="997" width="0.0112%" height="15" fill="rgb(252,106,18)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="981" width="0.0112%" height="15" fill="rgb(208,126,42)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="965" width="0.0112%" height="15" fill="rgb(246,175,29)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="12.5168%" y="949" width="0.0112%" height="15" fill="rgb(215,13,50)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="959.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.01%)</title><rect x="12.5168%" y="933" width="0.0112%" height="15" fill="rgb(216,172,15)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.01%)</title><rect x="12.5168%" y="917" width="0.0112%" height="15" fill="rgb(212,103,13)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.01%)</title><rect x="12.5168%" y="901" width="0.0112%" height="15" fill="rgb(231,171,36)" fg:x="13439" fg:w="12"/><text x="12.7668%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (22 samples, 0.02%)</title><rect x="12.5382%" y="533" width="0.0205%" height="15" fill="rgb(250,123,20)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="543.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (22 samples, 0.02%)</title><rect x="12.5382%" y="517" width="0.0205%" height="15" fill="rgb(212,53,50)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (22 samples, 0.02%)</title><rect x="12.5382%" y="501" width="0.0205%" height="15" fill="rgb(243,54,12)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="12.5382%" y="485" width="0.0205%" height="15" fill="rgb(234,101,34)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="12.5382%" y="469" width="0.0205%" height="15" fill="rgb(254,67,22)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (22 samples, 0.02%)</title><rect x="12.5382%" y="453" width="0.0205%" height="15" fill="rgb(250,35,47)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (22 samples, 0.02%)</title><rect x="12.5382%" y="437" width="0.0205%" height="15" fill="rgb(226,126,38)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="447.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (22 samples, 0.02%)</title><rect x="12.5382%" y="421" width="0.0205%" height="15" fill="rgb(216,138,53)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="431.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (22 samples, 0.02%)</title><rect x="12.5382%" y="405" width="0.0205%" height="15" fill="rgb(246,199,43)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="415.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (22 samples, 0.02%)</title><rect x="12.5382%" y="389" width="0.0205%" height="15" fill="rgb(232,125,11)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="399.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (22 samples, 0.02%)</title><rect x="12.5382%" y="373" width="0.0205%" height="15" fill="rgb(218,219,45)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="383.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (22 samples, 0.02%)</title><rect x="12.5382%" y="357" width="0.0205%" height="15" fill="rgb(216,102,54)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="367.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (22 samples, 0.02%)</title><rect x="12.5382%" y="341" width="0.0205%" height="15" fill="rgb(250,228,7)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="12.5382%" y="325" width="0.0205%" height="15" fill="rgb(226,125,25)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="335.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (22 samples, 0.02%)</title><rect x="12.5382%" y="309" width="0.0205%" height="15" fill="rgb(224,165,27)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="319.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (22 samples, 0.02%)</title><rect x="12.5382%" y="293" width="0.0205%" height="15" fill="rgb(233,86,3)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="303.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (22 samples, 0.02%)</title><rect x="12.5382%" y="277" width="0.0205%" height="15" fill="rgb(228,116,20)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="287.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (22 samples, 0.02%)</title><rect x="12.5382%" y="261" width="0.0205%" height="15" fill="rgb(209,192,17)" fg:x="13462" fg:w="22"/><text x="12.7882%" y="271.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (11 samples, 0.01%)</title><rect x="12.5596%" y="197" width="0.0102%" height="15" fill="rgb(224,88,34)" fg:x="13485" fg:w="11"/><text x="12.8096%" y="207.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (11 samples, 0.01%)</title><rect x="12.5596%" y="181" width="0.0102%" height="15" fill="rgb(233,38,6)" fg:x="13485" fg:w="11"/><text x="12.8096%" y="191.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (11 samples, 0.01%)</title><rect x="12.5596%" y="165" width="0.0102%" height="15" fill="rgb(212,59,30)" fg:x="13485" fg:w="11"/><text x="12.8096%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="12.5596%" y="149" width="0.0102%" height="15" fill="rgb(213,80,3)" fg:x="13485" fg:w="11"/><text x="12.8096%" y="159.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (11 samples, 0.01%)</title><rect x="12.5596%" y="133" width="0.0102%" height="15" fill="rgb(251,178,7)" fg:x="13485" fg:w="11"/><text x="12.8096%" y="143.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (35 samples, 0.03%)</title><rect x="12.5382%" y="773" width="0.0326%" height="15" fill="rgb(213,154,26)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="783.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (35 samples, 0.03%)</title><rect x="12.5382%" y="757" width="0.0326%" height="15" fill="rgb(238,165,49)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="767.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (35 samples, 0.03%)</title><rect x="12.5382%" y="741" width="0.0326%" height="15" fill="rgb(248,91,46)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="751.50"></text></g><g><title>rayon_core::job::JobRef::execute (35 samples, 0.03%)</title><rect x="12.5382%" y="725" width="0.0326%" height="15" fill="rgb(244,21,52)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="735.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (35 samples, 0.03%)</title><rect x="12.5382%" y="709" width="0.0326%" height="15" fill="rgb(247,122,20)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="719.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (35 samples, 0.03%)</title><rect x="12.5382%" y="693" width="0.0326%" height="15" fill="rgb(218,27,9)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (35 samples, 0.03%)</title><rect x="12.5382%" y="677" width="0.0326%" height="15" fill="rgb(246,7,6)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="687.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.03%)</title><rect x="12.5382%" y="661" width="0.0326%" height="15" fill="rgb(227,135,54)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="671.50"></text></g><g><title>std::panicking::try (35 samples, 0.03%)</title><rect x="12.5382%" y="645" width="0.0326%" height="15" fill="rgb(247,14,11)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="655.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.03%)</title><rect x="12.5382%" y="629" width="0.0326%" height="15" fill="rgb(206,149,34)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.03%)</title><rect x="12.5382%" y="613" width="0.0326%" height="15" fill="rgb(227,228,4)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="623.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (35 samples, 0.03%)</title><rect x="12.5382%" y="597" width="0.0326%" height="15" fill="rgb(238,218,28)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="607.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (35 samples, 0.03%)</title><rect x="12.5382%" y="581" width="0.0326%" height="15" fill="rgb(252,86,40)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 0.03%)</title><rect x="12.5382%" y="565" width="0.0326%" height="15" fill="rgb(251,225,11)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.03%)</title><rect x="12.5382%" y="549" width="0.0326%" height="15" fill="rgb(206,46,49)" fg:x="13462" fg:w="35"/><text x="12.7882%" y="559.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.01%)</title><rect x="12.5587%" y="533" width="0.0121%" height="15" fill="rgb(245,128,24)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.01%)</title><rect x="12.5587%" y="517" width="0.0121%" height="15" fill="rgb(219,177,34)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="527.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.01%)</title><rect x="12.5587%" y="501" width="0.0121%" height="15" fill="rgb(218,60,48)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="511.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.01%)</title><rect x="12.5587%" y="485" width="0.0121%" height="15" fill="rgb(221,11,5)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="495.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="12.5587%" y="469" width="0.0121%" height="15" fill="rgb(220,148,13)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="479.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="12.5587%" y="453" width="0.0121%" height="15" fill="rgb(210,16,3)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="463.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="12.5587%" y="437" width="0.0121%" height="15" fill="rgb(236,80,2)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="447.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="12.5587%" y="421" width="0.0121%" height="15" fill="rgb(239,129,19)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="431.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.01%)</title><rect x="12.5587%" y="405" width="0.0121%" height="15" fill="rgb(220,106,35)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.01%)</title><rect x="12.5587%" y="389" width="0.0121%" height="15" fill="rgb(252,139,45)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.01%)</title><rect x="12.5587%" y="373" width="0.0121%" height="15" fill="rgb(229,8,36)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="383.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.01%)</title><rect x="12.5587%" y="357" width="0.0121%" height="15" fill="rgb(230,126,33)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="367.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.01%)</title><rect x="12.5587%" y="341" width="0.0121%" height="15" fill="rgb(239,140,21)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="351.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.01%)</title><rect x="12.5587%" y="325" width="0.0121%" height="15" fill="rgb(254,104,9)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="12.5587%" y="309" width="0.0121%" height="15" fill="rgb(239,52,14)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="12.5587%" y="293" width="0.0121%" height="15" fill="rgb(208,227,44)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.01%)</title><rect x="12.5587%" y="277" width="0.0121%" height="15" fill="rgb(246,18,19)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.01%)</title><rect x="12.5587%" y="261" width="0.0121%" height="15" fill="rgb(235,228,25)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="271.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="12.5587%" y="245" width="0.0121%" height="15" fill="rgb(240,156,20)" fg:x="13484" fg:w="13"/><text x="12.8087%" y="255.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (12 samples, 0.01%)</title><rect x="12.5596%" y="229" width="0.0112%" height="15" fill="rgb(224,8,20)" fg:x="13485" fg:w="12"/><text x="12.8096%" y="239.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (12 samples, 0.01%)</title><rect x="12.5596%" y="213" width="0.0112%" height="15" fill="rgb(214,12,52)" fg:x="13485" fg:w="12"/><text x="12.8096%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_unwrap (14 samples, 0.01%)</title><rect x="12.5717%" y="501" width="0.0130%" height="15" fill="rgb(211,220,47)" fg:x="13498" fg:w="14"/><text x="12.8217%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="12.5726%" y="485" width="0.0121%" height="15" fill="rgb(250,173,5)" fg:x="13499" fg:w="13"/><text x="12.8226%" y="495.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="12.5726%" y="469" width="0.0121%" height="15" fill="rgb(250,125,52)" fg:x="13499" fg:w="13"/><text x="12.8226%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="12.5726%" y="453" width="0.0121%" height="15" fill="rgb(209,133,18)" fg:x="13499" fg:w="13"/><text x="12.8226%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="12.5726%" y="437" width="0.0121%" height="15" fill="rgb(216,173,22)" fg:x="13499" fg:w="13"/><text x="12.8226%" y="447.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="12.5726%" y="421" width="0.0121%" height="15" fill="rgb(205,3,22)" fg:x="13499" fg:w="13"/><text x="12.8226%" y="431.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (51 samples, 0.05%)</title><rect x="12.5857%" y="389" width="0.0475%" height="15" fill="rgb(248,22,20)" fg:x="13513" fg:w="51"/><text x="12.8357%" y="399.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (47 samples, 0.04%)</title><rect x="12.5894%" y="373" width="0.0438%" height="15" fill="rgb(233,6,29)" fg:x="13517" fg:w="47"/><text x="12.8394%" y="383.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (59 samples, 0.05%)</title><rect x="12.5848%" y="485" width="0.0550%" height="15" fill="rgb(240,22,54)" fg:x="13512" fg:w="59"/><text x="12.8348%" y="495.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (59 samples, 0.05%)</title><rect x="12.5848%" y="469" width="0.0550%" height="15" fill="rgb(231,133,32)" fg:x="13512" fg:w="59"/><text x="12.8348%" y="479.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (59 samples, 0.05%)</title><rect x="12.5848%" y="453" width="0.0550%" height="15" fill="rgb(248,193,4)" fg:x="13512" fg:w="59"/><text x="12.8348%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (59 samples, 0.05%)</title><rect x="12.5848%" y="437" width="0.0550%" height="15" fill="rgb(211,178,46)" fg:x="13512" fg:w="59"/><text x="12.8348%" y="447.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (59 samples, 0.05%)</title><rect x="12.5848%" y="421" width="0.0550%" height="15" fill="rgb(224,5,42)" fg:x="13512" fg:w="59"/><text x="12.8348%" y="431.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (59 samples, 0.05%)</title><rect x="12.5848%" y="405" width="0.0550%" height="15" fill="rgb(239,176,25)" fg:x="13512" fg:w="59"/><text x="12.8348%" y="415.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}} (123 samples, 0.11%)</title><rect x="12.5279%" y="1589" width="0.1146%" height="15" fill="rgb(245,187,50)" fg:x="13451" fg:w="123"/><text x="12.7779%" y="1599.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (113 samples, 0.11%)</title><rect x="12.5373%" y="1573" width="0.1052%" height="15" fill="rgb(248,24,15)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1583.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (113 samples, 0.11%)</title><rect x="12.5373%" y="1557" width="0.1052%" height="15" fill="rgb(205,166,13)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1567.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (113 samples, 0.11%)</title><rect x="12.5373%" y="1541" width="0.1052%" height="15" fill="rgb(208,114,23)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1551.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (113 samples, 0.11%)</title><rect x="12.5373%" y="1525" width="0.1052%" height="15" fill="rgb(239,127,18)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1535.50"></text></g><g><title>rayon::iter::collect::special_extend (113 samples, 0.11%)</title><rect x="12.5373%" y="1509" width="0.1052%" height="15" fill="rgb(219,154,28)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1519.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (113 samples, 0.11%)</title><rect x="12.5373%" y="1493" width="0.1052%" height="15" fill="rgb(225,157,23)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1503.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (113 samples, 0.11%)</title><rect x="12.5373%" y="1477" width="0.1052%" height="15" fill="rgb(219,8,6)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1487.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (113 samples, 0.11%)</title><rect x="12.5373%" y="1461" width="0.1052%" height="15" fill="rgb(212,47,6)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1471.50"></text></g><g><title>&lt;rayon::slice::chunks::Chunks&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (113 samples, 0.11%)</title><rect x="12.5373%" y="1445" width="0.1052%" height="15" fill="rgb(224,190,4)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge (113 samples, 0.11%)</title><rect x="12.5373%" y="1429" width="0.1052%" height="15" fill="rgb(239,183,29)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1439.50"></text></g><g><title>&lt;rayon::slice::chunks::Chunks&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (113 samples, 0.11%)</title><rect x="12.5373%" y="1413" width="0.1052%" height="15" fill="rgb(213,57,7)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1423.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (113 samples, 0.11%)</title><rect x="12.5373%" y="1397" width="0.1052%" height="15" fill="rgb(216,148,1)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (113 samples, 0.11%)</title><rect x="12.5373%" y="1381" width="0.1052%" height="15" fill="rgb(236,182,29)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (113 samples, 0.11%)</title><rect x="12.5373%" y="1365" width="0.1052%" height="15" fill="rgb(244,120,48)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (113 samples, 0.11%)</title><rect x="12.5373%" y="1349" width="0.1052%" height="15" fill="rgb(206,71,34)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (113 samples, 0.11%)</title><rect x="12.5373%" y="1333" width="0.1052%" height="15" fill="rgb(242,32,6)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (113 samples, 0.11%)</title><rect x="12.5373%" y="1317" width="0.1052%" height="15" fill="rgb(241,35,3)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (113 samples, 0.11%)</title><rect x="12.5373%" y="1301" width="0.1052%" height="15" fill="rgb(222,62,19)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (113 samples, 0.11%)</title><rect x="12.5373%" y="1285" width="0.1052%" height="15" fill="rgb(223,110,41)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1295.50"></text></g><g><title>std::panicking::try (113 samples, 0.11%)</title><rect x="12.5373%" y="1269" width="0.1052%" height="15" fill="rgb(208,224,4)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (113 samples, 0.11%)</title><rect x="12.5373%" y="1253" width="0.1052%" height="15" fill="rgb(241,137,19)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1263.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (113 samples, 0.11%)</title><rect x="12.5373%" y="1237" width="0.1052%" height="15" fill="rgb(244,24,17)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (113 samples, 0.11%)</title><rect x="12.5373%" y="1221" width="0.1052%" height="15" fill="rgb(245,178,49)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (113 samples, 0.11%)</title><rect x="12.5373%" y="1205" width="0.1052%" height="15" fill="rgb(219,160,38)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (113 samples, 0.11%)</title><rect x="12.5373%" y="1189" width="0.1052%" height="15" fill="rgb(228,137,14)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (113 samples, 0.11%)</title><rect x="12.5373%" y="1173" width="0.1052%" height="15" fill="rgb(237,134,11)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (113 samples, 0.11%)</title><rect x="12.5373%" y="1157" width="0.1052%" height="15" fill="rgb(211,126,44)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (113 samples, 0.11%)</title><rect x="12.5373%" y="1141" width="0.1052%" height="15" fill="rgb(226,171,33)" fg:x="13461" fg:w="113"/><text x="12.7873%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (112 samples, 0.10%)</title><rect x="12.5382%" y="1125" width="0.1043%" height="15" fill="rgb(253,99,13)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (112 samples, 0.10%)</title><rect x="12.5382%" y="1109" width="0.1043%" height="15" fill="rgb(244,48,7)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1119.50"></text></g><g><title>std::panicking::try (112 samples, 0.10%)</title><rect x="12.5382%" y="1093" width="0.1043%" height="15" fill="rgb(244,217,54)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (112 samples, 0.10%)</title><rect x="12.5382%" y="1077" width="0.1043%" height="15" fill="rgb(224,15,18)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (112 samples, 0.10%)</title><rect x="12.5382%" y="1061" width="0.1043%" height="15" fill="rgb(244,99,12)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (112 samples, 0.10%)</title><rect x="12.5382%" y="1045" width="0.1043%" height="15" fill="rgb(233,226,8)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (112 samples, 0.10%)</title><rect x="12.5382%" y="1029" width="0.1043%" height="15" fill="rgb(229,211,3)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (112 samples, 0.10%)</title><rect x="12.5382%" y="1013" width="0.1043%" height="15" fill="rgb(216,140,21)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (112 samples, 0.10%)</title><rect x="12.5382%" y="997" width="0.1043%" height="15" fill="rgb(234,122,30)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (112 samples, 0.10%)</title><rect x="12.5382%" y="981" width="0.1043%" height="15" fill="rgb(236,25,46)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (112 samples, 0.10%)</title><rect x="12.5382%" y="965" width="0.1043%" height="15" fill="rgb(217,52,54)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (112 samples, 0.10%)</title><rect x="12.5382%" y="949" width="0.1043%" height="15" fill="rgb(222,29,26)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="959.50"></text></g><g><title>std::panic::catch_unwind (112 samples, 0.10%)</title><rect x="12.5382%" y="933" width="0.1043%" height="15" fill="rgb(216,177,29)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="943.50"></text></g><g><title>std::panicking::try (112 samples, 0.10%)</title><rect x="12.5382%" y="917" width="0.1043%" height="15" fill="rgb(247,136,51)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="927.50"></text></g><g><title>std::panicking::try::do_call (112 samples, 0.10%)</title><rect x="12.5382%" y="901" width="0.1043%" height="15" fill="rgb(231,47,47)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (112 samples, 0.10%)</title><rect x="12.5382%" y="885" width="0.1043%" height="15" fill="rgb(211,192,36)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (112 samples, 0.10%)</title><rect x="12.5382%" y="869" width="0.1043%" height="15" fill="rgb(229,156,32)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (112 samples, 0.10%)</title><rect x="12.5382%" y="853" width="0.1043%" height="15" fill="rgb(248,213,20)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (112 samples, 0.10%)</title><rect x="12.5382%" y="837" width="0.1043%" height="15" fill="rgb(217,64,7)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="847.50"></text></g><g><title>rayon_core::join::join_context (112 samples, 0.10%)</title><rect x="12.5382%" y="821" width="0.1043%" height="15" fill="rgb(232,142,8)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (112 samples, 0.10%)</title><rect x="12.5382%" y="805" width="0.1043%" height="15" fill="rgb(224,92,44)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (112 samples, 0.10%)</title><rect x="12.5382%" y="789" width="0.1043%" height="15" fill="rgb(214,169,17)" fg:x="13462" fg:w="112"/><text x="12.7882%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (77 samples, 0.07%)</title><rect x="12.5708%" y="773" width="0.0717%" height="15" fill="rgb(210,59,37)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="783.50"></text></g><g><title>std::panic::catch_unwind (77 samples, 0.07%)</title><rect x="12.5708%" y="757" width="0.0717%" height="15" fill="rgb(214,116,48)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="767.50"></text></g><g><title>std::panicking::try (77 samples, 0.07%)</title><rect x="12.5708%" y="741" width="0.0717%" height="15" fill="rgb(244,191,6)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="751.50"></text></g><g><title>std::panicking::try::do_call (77 samples, 0.07%)</title><rect x="12.5708%" y="725" width="0.0717%" height="15" fill="rgb(241,50,52)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (77 samples, 0.07%)</title><rect x="12.5708%" y="709" width="0.0717%" height="15" fill="rgb(236,75,39)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (77 samples, 0.07%)</title><rect x="12.5708%" y="693" width="0.0717%" height="15" fill="rgb(236,99,0)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (77 samples, 0.07%)</title><rect x="12.5708%" y="677" width="0.0717%" height="15" fill="rgb(207,202,15)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (77 samples, 0.07%)</title><rect x="12.5708%" y="661" width="0.0717%" height="15" fill="rgb(233,207,14)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (77 samples, 0.07%)</title><rect x="12.5708%" y="645" width="0.0717%" height="15" fill="rgb(226,27,51)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="655.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (77 samples, 0.07%)</title><rect x="12.5708%" y="629" width="0.0717%" height="15" fill="rgb(206,104,42)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (77 samples, 0.07%)</title><rect x="12.5708%" y="613" width="0.0717%" height="15" fill="rgb(212,225,4)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.07%)</title><rect x="12.5708%" y="597" width="0.0717%" height="15" fill="rgb(233,96,42)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (77 samples, 0.07%)</title><rect x="12.5708%" y="581" width="0.0717%" height="15" fill="rgb(229,21,32)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (77 samples, 0.07%)</title><rect x="12.5708%" y="565" width="0.0717%" height="15" fill="rgb(226,216,24)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (77 samples, 0.07%)</title><rect x="12.5708%" y="549" width="0.0717%" height="15" fill="rgb(221,163,17)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="559.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (77 samples, 0.07%)</title><rect x="12.5708%" y="533" width="0.0717%" height="15" fill="rgb(216,216,42)" fg:x="13497" fg:w="77"/><text x="12.8208%" y="543.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (76 samples, 0.07%)</title><rect x="12.5717%" y="517" width="0.0708%" height="15" fill="rgb(240,118,7)" fg:x="13498" fg:w="76"/><text x="12.8217%" y="527.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (62 samples, 0.06%)</title><rect x="12.5848%" y="501" width="0.0577%" height="15" fill="rgb(221,67,37)" fg:x="13512" fg:w="62"/><text x="12.8348%" y="511.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="12.6425%" y="1589" width="0.0102%" height="15" fill="rgb(241,32,44)" fg:x="13574" fg:w="11"/><text x="12.8925%" y="1599.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (11 samples, 0.01%)</title><rect x="12.6425%" y="1573" width="0.0102%" height="15" fill="rgb(235,204,43)" fg:x="13574" fg:w="11"/><text x="12.8925%" y="1583.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (11 samples, 0.01%)</title><rect x="12.6425%" y="1557" width="0.0102%" height="15" fill="rgb(213,116,10)" fg:x="13574" fg:w="11"/><text x="12.8925%" y="1567.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (11 samples, 0.01%)</title><rect x="12.6425%" y="1541" width="0.0102%" height="15" fill="rgb(239,15,48)" fg:x="13574" fg:w="11"/><text x="12.8925%" y="1551.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (11 samples, 0.01%)</title><rect x="12.6425%" y="1525" width="0.0102%" height="15" fill="rgb(207,123,36)" fg:x="13574" fg:w="11"/><text x="12.8925%" y="1535.50"></text></g><g><title>rayon::iter::collect::special_extend (11 samples, 0.01%)</title><rect x="12.6425%" y="1509" width="0.0102%" height="15" fill="rgb(209,103,30)" fg:x="13574" fg:w="11"/><text x="12.8925%" y="1519.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (11 samples, 0.01%)</title><rect x="12.6425%" y="1493" width="0.0102%" height="15" fill="rgb(238,100,19)" fg:x="13574" fg:w="11"/><text x="12.8925%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="12.6565%" y="1365" width="0.0140%" height="15" fill="rgb(244,30,14)" fg:x="13589" fg:w="15"/><text x="12.9065%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="12.6593%" y="1349" width="0.0112%" height="15" fill="rgb(249,174,6)" fg:x="13592" fg:w="12"/><text x="12.9093%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="12.6593%" y="1333" width="0.0112%" height="15" fill="rgb(235,213,41)" fg:x="13592" fg:w="12"/><text x="12.9093%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="12.6593%" y="1317" width="0.0112%" height="15" fill="rgb(213,118,6)" fg:x="13592" fg:w="12"/><text x="12.9093%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="12.6555%" y="1429" width="0.0168%" height="15" fill="rgb(235,44,51)" fg:x="13588" fg:w="18"/><text x="12.9055%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="12.6565%" y="1413" width="0.0158%" height="15" fill="rgb(217,9,53)" fg:x="13589" fg:w="17"/><text x="12.9065%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="12.6565%" y="1397" width="0.0158%" height="15" fill="rgb(237,172,34)" fg:x="13589" fg:w="17"/><text x="12.9065%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="12.6565%" y="1381" width="0.0158%" height="15" fill="rgb(206,206,11)" fg:x="13589" fg:w="17"/><text x="12.9065%" y="1391.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="12.6537%" y="1477" width="0.0307%" height="15" fill="rgb(214,149,29)" fg:x="13586" fg:w="33"/><text x="12.9037%" y="1487.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="12.6537%" y="1461" width="0.0307%" height="15" fill="rgb(208,123,3)" fg:x="13586" fg:w="33"/><text x="12.9037%" y="1471.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="12.6546%" y="1445" width="0.0298%" height="15" fill="rgb(229,126,4)" fg:x="13587" fg:w="32"/><text x="12.9046%" y="1455.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="12.6537%" y="1493" width="0.0363%" height="15" fill="rgb(222,92,36)" fg:x="13586" fg:w="39"/><text x="12.9037%" y="1503.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="12.6527%" y="1509" width="0.0391%" height="15" fill="rgb(216,39,41)" fg:x="13585" fg:w="42"/><text x="12.9027%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="12.6928%" y="1509" width="0.0158%" height="15" fill="rgb(253,127,28)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="12.6928%" y="1493" width="0.0158%" height="15" fill="rgb(249,152,51)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="12.6928%" y="1477" width="0.0158%" height="15" fill="rgb(209,123,42)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="12.6928%" y="1461" width="0.0158%" height="15" fill="rgb(241,118,22)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="12.6928%" y="1445" width="0.0158%" height="15" fill="rgb(208,25,7)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="12.6928%" y="1429" width="0.0158%" height="15" fill="rgb(243,144,39)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1439.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="12.6928%" y="1413" width="0.0158%" height="15" fill="rgb(250,50,5)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1423.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="12.6928%" y="1397" width="0.0158%" height="15" fill="rgb(207,67,11)" fg:x="13628" fg:w="17"/><text x="12.9428%" y="1407.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="12.6965%" y="1381" width="0.0121%" height="15" fill="rgb(245,204,40)" fg:x="13632" fg:w="13"/><text x="12.9465%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (63 samples, 0.06%)</title><rect x="12.6527%" y="1573" width="0.0587%" height="15" fill="rgb(238,228,24)" fg:x="13585" fg:w="63"/><text x="12.9027%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.06%)</title><rect x="12.6527%" y="1557" width="0.0587%" height="15" fill="rgb(217,116,22)" fg:x="13585" fg:w="63"/><text x="12.9027%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.06%)</title><rect x="12.6527%" y="1541" width="0.0587%" height="15" fill="rgb(234,98,12)" fg:x="13585" fg:w="63"/><text x="12.9027%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.06%)</title><rect x="12.6527%" y="1525" width="0.0587%" height="15" fill="rgb(242,170,50)" fg:x="13585" fg:w="63"/><text x="12.9027%" y="1535.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (11 samples, 0.01%)</title><rect x="12.7217%" y="549" width="0.0102%" height="15" fill="rgb(235,7,5)" fg:x="13659" fg:w="11"/><text x="12.9717%" y="559.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="12.7217%" y="533" width="0.0102%" height="15" fill="rgb(241,114,28)" fg:x="13659" fg:w="11"/><text x="12.9717%" y="543.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block::{{closure}} (91 samples, 0.08%)</title><rect x="12.6527%" y="1589" width="0.0848%" height="15" fill="rgb(246,112,42)" fg:x="13585" fg:w="91"/><text x="12.9027%" y="1599.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (28 samples, 0.03%)</title><rect x="12.7114%" y="1573" width="0.0261%" height="15" fill="rgb(248,228,14)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1583.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (28 samples, 0.03%)</title><rect x="12.7114%" y="1557" width="0.0261%" height="15" fill="rgb(208,133,18)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1567.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (28 samples, 0.03%)</title><rect x="12.7114%" y="1541" width="0.0261%" height="15" fill="rgb(207,35,49)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1551.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (28 samples, 0.03%)</title><rect x="12.7114%" y="1525" width="0.0261%" height="15" fill="rgb(205,68,36)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1535.50"></text></g><g><title>rayon::iter::collect::special_extend (28 samples, 0.03%)</title><rect x="12.7114%" y="1509" width="0.0261%" height="15" fill="rgb(245,62,40)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1519.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (28 samples, 0.03%)</title><rect x="12.7114%" y="1493" width="0.0261%" height="15" fill="rgb(228,27,24)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1503.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (28 samples, 0.03%)</title><rect x="12.7114%" y="1477" width="0.0261%" height="15" fill="rgb(253,19,12)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1487.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (28 samples, 0.03%)</title><rect x="12.7114%" y="1461" width="0.0261%" height="15" fill="rgb(232,28,20)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1471.50"></text></g><g><title>&lt;rayon::iter::len::MinLen&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (28 samples, 0.03%)</title><rect x="12.7114%" y="1445" width="0.0261%" height="15" fill="rgb(218,35,51)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge (28 samples, 0.03%)</title><rect x="12.7114%" y="1429" width="0.0261%" height="15" fill="rgb(212,90,40)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1439.50"></text></g><g><title>&lt;rayon::iter::len::MinLen&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (28 samples, 0.03%)</title><rect x="12.7114%" y="1413" width="0.0261%" height="15" fill="rgb(220,172,12)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1423.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (28 samples, 0.03%)</title><rect x="12.7114%" y="1397" width="0.0261%" height="15" fill="rgb(226,159,20)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1407.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (28 samples, 0.03%)</title><rect x="12.7114%" y="1381" width="0.0261%" height="15" fill="rgb(234,205,16)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1391.50"></text></g><g><title>&lt;&lt;rayon::iter::len::MinLen&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer::Callback&lt;CB&gt; as rayon::iter::plumbing::ProducerCallback&lt;T&gt;&gt;::callback (28 samples, 0.03%)</title><rect x="12.7114%" y="1365" width="0.0261%" height="15" fill="rgb(207,9,39)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1375.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (28 samples, 0.03%)</title><rect x="12.7114%" y="1349" width="0.0261%" height="15" fill="rgb(249,143,15)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (28 samples, 0.03%)</title><rect x="12.7114%" y="1333" width="0.0261%" height="15" fill="rgb(253,133,29)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.03%)</title><rect x="12.7114%" y="1317" width="0.0261%" height="15" fill="rgb(221,187,0)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1327.50"></text></g><g><title>rayon_core::join::join_context (28 samples, 0.03%)</title><rect x="12.7114%" y="1301" width="0.0261%" height="15" fill="rgb(205,204,26)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1311.50"></text></g><g><title>rayon_core::registry::in_worker (28 samples, 0.03%)</title><rect x="12.7114%" y="1285" width="0.0261%" height="15" fill="rgb(224,68,54)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (28 samples, 0.03%)</title><rect x="12.7114%" y="1269" width="0.0261%" height="15" fill="rgb(209,67,4)" fg:x="13648" fg:w="28"/><text x="12.9614%" y="1279.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.02%)</title><rect x="12.7133%" y="1253" width="0.0242%" height="15" fill="rgb(228,229,18)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.02%)</title><rect x="12.7133%" y="1237" width="0.0242%" height="15" fill="rgb(231,89,13)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1247.50"></text></g><g><title>std::panicking::try (26 samples, 0.02%)</title><rect x="12.7133%" y="1221" width="0.0242%" height="15" fill="rgb(210,182,18)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.02%)</title><rect x="12.7133%" y="1205" width="0.0242%" height="15" fill="rgb(240,105,2)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.02%)</title><rect x="12.7133%" y="1189" width="0.0242%" height="15" fill="rgb(207,170,50)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.02%)</title><rect x="12.7133%" y="1173" width="0.0242%" height="15" fill="rgb(232,133,24)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.02%)</title><rect x="12.7133%" y="1157" width="0.0242%" height="15" fill="rgb(235,166,27)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.02%)</title><rect x="12.7133%" y="1141" width="0.0242%" height="15" fill="rgb(209,19,13)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1151.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.02%)</title><rect x="12.7133%" y="1125" width="0.0242%" height="15" fill="rgb(226,79,39)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.02%)</title><rect x="12.7133%" y="1109" width="0.0242%" height="15" fill="rgb(222,163,10)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.02%)</title><rect x="12.7133%" y="1093" width="0.0242%" height="15" fill="rgb(214,44,19)" fg:x="13650" fg:w="26"/><text x="12.9633%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.02%)</title><rect x="12.7142%" y="1077" width="0.0233%" height="15" fill="rgb(210,217,13)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.02%)</title><rect x="12.7142%" y="1061" width="0.0233%" height="15" fill="rgb(237,61,54)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="1071.50"></text></g><g><title>std::panicking::try (25 samples, 0.02%)</title><rect x="12.7142%" y="1045" width="0.0233%" height="15" fill="rgb(226,184,24)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.02%)</title><rect x="12.7142%" y="1029" width="0.0233%" height="15" fill="rgb(223,226,4)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="12.7142%" y="1013" width="0.0233%" height="15" fill="rgb(210,26,41)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (25 samples, 0.02%)</title><rect x="12.7142%" y="997" width="0.0233%" height="15" fill="rgb(220,221,6)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.02%)</title><rect x="12.7142%" y="981" width="0.0233%" height="15" fill="rgb(225,89,49)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.02%)</title><rect x="12.7142%" y="965" width="0.0233%" height="15" fill="rgb(218,70,45)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="975.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.02%)</title><rect x="12.7142%" y="949" width="0.0233%" height="15" fill="rgb(238,166,21)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.02%)</title><rect x="12.7142%" y="933" width="0.0233%" height="15" fill="rgb(224,141,44)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.02%)</title><rect x="12.7142%" y="917" width="0.0233%" height="15" fill="rgb(230,12,49)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.02%)</title><rect x="12.7142%" y="901" width="0.0233%" height="15" fill="rgb(212,174,12)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="911.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.02%)</title><rect x="12.7142%" y="885" width="0.0233%" height="15" fill="rgb(246,67,9)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="895.50"></text></g><g><title>std::panicking::try (25 samples, 0.02%)</title><rect x="12.7142%" y="869" width="0.0233%" height="15" fill="rgb(239,35,23)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="879.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.02%)</title><rect x="12.7142%" y="853" width="0.0233%" height="15" fill="rgb(211,167,0)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="12.7142%" y="837" width="0.0233%" height="15" fill="rgb(225,119,45)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (25 samples, 0.02%)</title><rect x="12.7142%" y="821" width="0.0233%" height="15" fill="rgb(210,162,6)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.02%)</title><rect x="12.7142%" y="805" width="0.0233%" height="15" fill="rgb(208,118,35)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.02%)</title><rect x="12.7142%" y="789" width="0.0233%" height="15" fill="rgb(239,4,53)" fg:x="13651" fg:w="25"/><text x="12.9642%" y="799.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 0.02%)</title><rect x="12.7151%" y="773" width="0.0224%" height="15" fill="rgb(213,130,21)" fg:x="13652" fg:w="24"/><text x="12.9651%" y="783.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.02%)</title><rect x="12.7151%" y="757" width="0.0224%" height="15" fill="rgb(235,148,0)" fg:x="13652" fg:w="24"/><text x="12.9651%" y="767.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.02%)</title><rect x="12.7151%" y="741" width="0.0224%" height="15" fill="rgb(244,224,18)" fg:x="13652" fg:w="24"/><text x="12.9651%" y="751.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="12.7207%" y="725" width="0.0168%" height="15" fill="rgb(211,214,4)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="735.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="12.7207%" y="709" width="0.0168%" height="15" fill="rgb(206,119,25)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="719.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="12.7207%" y="693" width="0.0168%" height="15" fill="rgb(243,93,47)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="703.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="12.7207%" y="677" width="0.0168%" height="15" fill="rgb(224,194,6)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="12.7207%" y="661" width="0.0168%" height="15" fill="rgb(243,229,6)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (18 samples, 0.02%)</title><rect x="12.7207%" y="645" width="0.0168%" height="15" fill="rgb(207,23,50)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="12.7207%" y="629" width="0.0168%" height="15" fill="rgb(253,192,32)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="12.7207%" y="613" width="0.0168%" height="15" fill="rgb(213,21,6)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="623.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="12.7207%" y="597" width="0.0168%" height="15" fill="rgb(243,151,13)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="607.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="12.7207%" y="581" width="0.0168%" height="15" fill="rgb(233,165,41)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="591.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="12.7207%" y="565" width="0.0168%" height="15" fill="rgb(246,176,45)" fg:x="13658" fg:w="18"/><text x="12.9707%" y="575.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (13 samples, 0.01%)</title><rect x="12.7450%" y="1269" width="0.0121%" height="15" fill="rgb(217,170,52)" fg:x="13684" fg:w="13"/><text x="12.9950%" y="1279.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (13 samples, 0.01%)</title><rect x="12.7450%" y="1253" width="0.0121%" height="15" fill="rgb(214,203,54)" fg:x="13684" fg:w="13"/><text x="12.9950%" y="1263.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (12 samples, 0.01%)</title><rect x="12.7580%" y="1093" width="0.0112%" height="15" fill="rgb(248,215,49)" fg:x="13698" fg:w="12"/><text x="13.0080%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (12 samples, 0.01%)</title><rect x="12.7580%" y="1077" width="0.0112%" height="15" fill="rgb(208,46,10)" fg:x="13698" fg:w="12"/><text x="13.0080%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (12 samples, 0.01%)</title><rect x="12.7580%" y="1061" width="0.0112%" height="15" fill="rgb(254,5,31)" fg:x="13698" fg:w="12"/><text x="13.0080%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (25 samples, 0.02%)</title><rect x="12.7692%" y="1077" width="0.0233%" height="15" fill="rgb(222,104,33)" fg:x="13710" fg:w="25"/><text x="13.0192%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (16 samples, 0.01%)</title><rect x="12.7776%" y="1061" width="0.0149%" height="15" fill="rgb(248,49,16)" fg:x="13719" fg:w="16"/><text x="13.0276%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (14 samples, 0.01%)</title><rect x="12.7925%" y="1077" width="0.0130%" height="15" fill="rgb(232,198,41)" fg:x="13735" fg:w="14"/><text x="13.0425%" y="1087.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (12 samples, 0.01%)</title><rect x="12.7943%" y="1061" width="0.0112%" height="15" fill="rgb(214,125,3)" fg:x="13737" fg:w="12"/><text x="13.0443%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="12.7943%" y="1045" width="0.0112%" height="15" fill="rgb(229,220,28)" fg:x="13737" fg:w="12"/><text x="13.0443%" y="1055.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="12.7943%" y="1029" width="0.0112%" height="15" fill="rgb(222,64,37)" fg:x="13737" fg:w="12"/><text x="13.0443%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="12.7943%" y="1013" width="0.0112%" height="15" fill="rgb(249,184,13)" fg:x="13737" fg:w="12"/><text x="13.0443%" y="1023.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (12 samples, 0.01%)</title><rect x="12.7943%" y="997" width="0.0112%" height="15" fill="rgb(252,176,6)" fg:x="13737" fg:w="12"/><text x="13.0443%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="12.7952%" y="981" width="0.0102%" height="15" fill="rgb(228,153,7)" fg:x="13738" fg:w="11"/><text x="13.0452%" y="991.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="12.7952%" y="965" width="0.0102%" height="15" fill="rgb(242,193,5)" fg:x="13738" fg:w="11"/><text x="13.0452%" y="975.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="12.7952%" y="949" width="0.0102%" height="15" fill="rgb(232,140,9)" fg:x="13738" fg:w="11"/><text x="13.0452%" y="959.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (55 samples, 0.05%)</title><rect x="12.7580%" y="1125" width="0.0512%" height="15" fill="rgb(213,222,16)" fg:x="13698" fg:w="55"/><text x="13.0080%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (55 samples, 0.05%)</title><rect x="12.7580%" y="1109" width="0.0512%" height="15" fill="rgb(222,75,50)" fg:x="13698" fg:w="55"/><text x="13.0080%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (43 samples, 0.04%)</title><rect x="12.7692%" y="1093" width="0.0400%" height="15" fill="rgb(205,180,2)" fg:x="13710" fg:w="43"/><text x="13.0192%" y="1103.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (15 samples, 0.01%)</title><rect x="12.8120%" y="1061" width="0.0140%" height="15" fill="rgb(216,34,7)" fg:x="13756" fg:w="15"/><text x="13.0620%" y="1071.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (15 samples, 0.01%)</title><rect x="12.8120%" y="1045" width="0.0140%" height="15" fill="rgb(253,16,32)" fg:x="13756" fg:w="15"/><text x="13.0620%" y="1055.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (20 samples, 0.02%)</title><rect x="12.8092%" y="1093" width="0.0186%" height="15" fill="rgb(208,97,28)" fg:x="13753" fg:w="20"/><text x="13.0592%" y="1103.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (20 samples, 0.02%)</title><rect x="12.8092%" y="1077" width="0.0186%" height="15" fill="rgb(225,92,11)" fg:x="13753" fg:w="20"/><text x="13.0592%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (22 samples, 0.02%)</title><rect x="12.8092%" y="1109" width="0.0205%" height="15" fill="rgb(243,38,12)" fg:x="13753" fg:w="22"/><text x="13.0592%" y="1119.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (12 samples, 0.01%)</title><rect x="12.8521%" y="949" width="0.0112%" height="15" fill="rgb(208,139,16)" fg:x="13799" fg:w="12"/><text x="13.1021%" y="959.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (12 samples, 0.01%)</title><rect x="12.8521%" y="933" width="0.0112%" height="15" fill="rgb(227,24,9)" fg:x="13799" fg:w="12"/><text x="13.1021%" y="943.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (23 samples, 0.02%)</title><rect x="12.8446%" y="965" width="0.0214%" height="15" fill="rgb(206,62,11)" fg:x="13791" fg:w="23"/><text x="13.0946%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (41 samples, 0.04%)</title><rect x="12.8297%" y="1109" width="0.0382%" height="15" fill="rgb(228,134,27)" fg:x="13775" fg:w="41"/><text x="13.0797%" y="1119.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (30 samples, 0.03%)</title><rect x="12.8400%" y="1093" width="0.0279%" height="15" fill="rgb(205,55,33)" fg:x="13786" fg:w="30"/><text x="13.0900%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.03%)</title><rect x="12.8400%" y="1077" width="0.0279%" height="15" fill="rgb(243,75,43)" fg:x="13786" fg:w="30"/><text x="13.0900%" y="1087.50"></text></g><g><title>std::panicking::try (30 samples, 0.03%)</title><rect x="12.8400%" y="1061" width="0.0279%" height="15" fill="rgb(223,27,42)" fg:x="13786" fg:w="30"/><text x="13.0900%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.03%)</title><rect x="12.8400%" y="1045" width="0.0279%" height="15" fill="rgb(232,189,33)" fg:x="13786" fg:w="30"/><text x="13.0900%" y="1055.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (30 samples, 0.03%)</title><rect x="12.8400%" y="1029" width="0.0279%" height="15" fill="rgb(210,9,39)" fg:x="13786" fg:w="30"/><text x="13.0900%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (28 samples, 0.03%)</title><rect x="12.8418%" y="1013" width="0.0261%" height="15" fill="rgb(242,85,26)" fg:x="13788" fg:w="28"/><text x="13.0918%" y="1023.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (28 samples, 0.03%)</title><rect x="12.8418%" y="997" width="0.0261%" height="15" fill="rgb(248,44,4)" fg:x="13788" fg:w="28"/><text x="13.0918%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (28 samples, 0.03%)</title><rect x="12.8418%" y="981" width="0.0261%" height="15" fill="rgb(250,96,46)" fg:x="13788" fg:w="28"/><text x="13.0918%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (120 samples, 0.11%)</title><rect x="12.7580%" y="1157" width="0.1118%" height="15" fill="rgb(229,116,26)" fg:x="13698" fg:w="120"/><text x="13.0080%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (120 samples, 0.11%)</title><rect x="12.7580%" y="1141" width="0.1118%" height="15" fill="rgb(246,94,34)" fg:x="13698" fg:w="120"/><text x="13.0080%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (65 samples, 0.06%)</title><rect x="12.8092%" y="1125" width="0.0605%" height="15" fill="rgb(251,73,21)" fg:x="13753" fg:w="65"/><text x="13.0592%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (18 samples, 0.02%)</title><rect x="12.8698%" y="1141" width="0.0168%" height="15" fill="rgb(254,121,25)" fg:x="13818" fg:w="18"/><text x="13.1198%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (15 samples, 0.01%)</title><rect x="12.8726%" y="1125" width="0.0140%" height="15" fill="rgb(215,161,49)" fg:x="13821" fg:w="15"/><text x="13.1226%" y="1135.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (13 samples, 0.01%)</title><rect x="12.8930%" y="997" width="0.0121%" height="15" fill="rgb(221,43,13)" fg:x="13843" fg:w="13"/><text x="13.1430%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (21 samples, 0.02%)</title><rect x="12.8865%" y="1141" width="0.0196%" height="15" fill="rgb(249,5,37)" fg:x="13836" fg:w="21"/><text x="13.1365%" y="1151.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (17 samples, 0.02%)</title><rect x="12.8902%" y="1125" width="0.0158%" height="15" fill="rgb(226,25,44)" fg:x="13840" fg:w="17"/><text x="13.1402%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="12.8902%" y="1109" width="0.0158%" height="15" fill="rgb(238,189,16)" fg:x="13840" fg:w="17"/><text x="13.1402%" y="1119.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="12.8902%" y="1093" width="0.0158%" height="15" fill="rgb(251,186,8)" fg:x="13840" fg:w="17"/><text x="13.1402%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="12.8902%" y="1077" width="0.0158%" height="15" fill="rgb(254,34,31)" fg:x="13840" fg:w="17"/><text x="13.1402%" y="1087.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (17 samples, 0.02%)</title><rect x="12.8902%" y="1061" width="0.0158%" height="15" fill="rgb(225,215,27)" fg:x="13840" fg:w="17"/><text x="13.1402%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (15 samples, 0.01%)</title><rect x="12.8921%" y="1045" width="0.0140%" height="15" fill="rgb(221,192,48)" fg:x="13842" fg:w="15"/><text x="13.1421%" y="1055.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (15 samples, 0.01%)</title><rect x="12.8921%" y="1029" width="0.0140%" height="15" fill="rgb(219,137,20)" fg:x="13842" fg:w="15"/><text x="13.1421%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (15 samples, 0.01%)</title><rect x="12.8921%" y="1013" width="0.0140%" height="15" fill="rgb(219,84,11)" fg:x="13842" fg:w="15"/><text x="13.1421%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (161 samples, 0.15%)</title><rect x="12.7580%" y="1173" width="0.1500%" height="15" fill="rgb(224,10,23)" fg:x="13698" fg:w="161"/><text x="13.0080%" y="1183.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (41 samples, 0.04%)</title><rect x="12.8698%" y="1157" width="0.0382%" height="15" fill="rgb(248,22,39)" fg:x="13818" fg:w="41"/><text x="13.1198%" y="1167.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (162 samples, 0.15%)</title><rect x="12.7580%" y="1269" width="0.1509%" height="15" fill="rgb(212,154,20)" fg:x="13698" fg:w="162"/><text x="13.0080%" y="1279.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (162 samples, 0.15%)</title><rect x="12.7580%" y="1253" width="0.1509%" height="15" fill="rgb(236,199,50)" fg:x="13698" fg:w="162"/><text x="13.0080%" y="1263.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (162 samples, 0.15%)</title><rect x="12.7580%" y="1237" width="0.1509%" height="15" fill="rgb(211,9,17)" fg:x="13698" fg:w="162"/><text x="13.0080%" y="1247.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (162 samples, 0.15%)</title><rect x="12.7580%" y="1221" width="0.1509%" height="15" fill="rgb(243,216,36)" fg:x="13698" fg:w="162"/><text x="13.0080%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (162 samples, 0.15%)</title><rect x="12.7580%" y="1205" width="0.1509%" height="15" fill="rgb(250,2,10)" fg:x="13698" fg:w="162"/><text x="13.0080%" y="1215.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (162 samples, 0.15%)</title><rect x="12.7580%" y="1189" width="0.1509%" height="15" fill="rgb(226,50,48)" fg:x="13698" fg:w="162"/><text x="13.0080%" y="1199.50"></text></g><g><title>alloc::fmt::format (18 samples, 0.02%)</title><rect x="12.9107%" y="1269" width="0.0168%" height="15" fill="rgb(243,81,16)" fg:x="13862" fg:w="18"/><text x="13.1607%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (18 samples, 0.02%)</title><rect x="12.9107%" y="1253" width="0.0168%" height="15" fill="rgb(250,14,2)" fg:x="13862" fg:w="18"/><text x="13.1607%" y="1263.50"></text></g><g><title>alloc::fmt::format::{{closure}} (18 samples, 0.02%)</title><rect x="12.9107%" y="1237" width="0.0168%" height="15" fill="rgb(233,135,29)" fg:x="13862" fg:w="18"/><text x="13.1607%" y="1247.50"></text></g><g><title>alloc::fmt::format::format_inner (17 samples, 0.02%)</title><rect x="12.9117%" y="1221" width="0.0158%" height="15" fill="rgb(224,64,43)" fg:x="13863" fg:w="17"/><text x="13.1617%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.01%)</title><rect x="12.9852%" y="885" width="0.0130%" height="15" fill="rgb(238,84,13)" fg:x="13942" fg:w="14"/><text x="13.2352%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.01%)</title><rect x="12.9852%" y="869" width="0.0130%" height="15" fill="rgb(253,48,26)" fg:x="13942" fg:w="14"/><text x="13.2352%" y="879.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.01%)</title><rect x="12.9862%" y="853" width="0.0121%" height="15" fill="rgb(205,223,31)" fg:x="13943" fg:w="13"/><text x="13.2362%" y="863.50"></text></g><g><title>realloc (12 samples, 0.01%)</title><rect x="12.9871%" y="837" width="0.0112%" height="15" fill="rgb(221,41,32)" fg:x="13944" fg:w="12"/><text x="13.2371%" y="847.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="12.9880%" y="821" width="0.0102%" height="15" fill="rgb(213,158,31)" fg:x="13945" fg:w="11"/><text x="13.2380%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="12.9825%" y="965" width="0.0168%" height="15" fill="rgb(245,126,43)" fg:x="13939" fg:w="18"/><text x="13.2325%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="12.9825%" y="949" width="0.0168%" height="15" fill="rgb(227,7,22)" fg:x="13939" fg:w="18"/><text x="13.2325%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="12.9834%" y="933" width="0.0158%" height="15" fill="rgb(252,90,44)" fg:x="13940" fg:w="17"/><text x="13.2334%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="12.9834%" y="917" width="0.0158%" height="15" fill="rgb(253,91,0)" fg:x="13940" fg:w="17"/><text x="13.2334%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="12.9834%" y="901" width="0.0158%" height="15" fill="rgb(252,175,49)" fg:x="13940" fg:w="17"/><text x="13.2334%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.02%)</title><rect x="12.9815%" y="1045" width="0.0224%" height="15" fill="rgb(246,150,1)" fg:x="13938" fg:w="24"/><text x="13.2315%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (23 samples, 0.02%)</title><rect x="12.9825%" y="1029" width="0.0214%" height="15" fill="rgb(241,192,25)" fg:x="13939" fg:w="23"/><text x="13.2325%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.02%)</title><rect x="12.9825%" y="1013" width="0.0214%" height="15" fill="rgb(239,187,11)" fg:x="13939" fg:w="23"/><text x="13.2325%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.02%)</title><rect x="12.9825%" y="997" width="0.0214%" height="15" fill="rgb(218,202,51)" fg:x="13939" fg:w="23"/><text x="13.2325%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.02%)</title><rect x="12.9825%" y="981" width="0.0214%" height="15" fill="rgb(225,176,8)" fg:x="13939" fg:w="23"/><text x="13.2325%" y="991.50"></text></g><g><title>core::fmt::Formatter::pad_integral (15 samples, 0.01%)</title><rect x="13.0057%" y="1045" width="0.0140%" height="15" fill="rgb(219,122,41)" fg:x="13964" fg:w="15"/><text x="13.2557%" y="1055.50"></text></g><g><title>core::fmt::run (52 samples, 0.05%)</title><rect x="12.9722%" y="1093" width="0.0484%" height="15" fill="rgb(248,140,20)" fg:x="13928" fg:w="52"/><text x="13.2222%" y="1103.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (44 samples, 0.04%)</title><rect x="12.9797%" y="1077" width="0.0410%" height="15" fill="rgb(245,41,37)" fg:x="13936" fg:w="44"/><text x="13.2297%" y="1087.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (42 samples, 0.04%)</title><rect x="12.9815%" y="1061" width="0.0391%" height="15" fill="rgb(235,82,39)" fg:x="13938" fg:w="42"/><text x="13.2315%" y="1071.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (80 samples, 0.07%)</title><rect x="12.9471%" y="1157" width="0.0745%" height="15" fill="rgb(230,108,42)" fg:x="13901" fg:w="80"/><text x="13.1971%" y="1167.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::LowerHex&gt;::fmt (79 samples, 0.07%)</title><rect x="12.9480%" y="1141" width="0.0736%" height="15" fill="rgb(215,150,50)" fg:x="13902" fg:w="79"/><text x="13.1980%" y="1151.50"></text></g><g><title>core::fmt::Formatter::write_fmt (71 samples, 0.07%)</title><rect x="12.9554%" y="1125" width="0.0661%" height="15" fill="rgb(233,212,5)" fg:x="13910" fg:w="71"/><text x="13.2054%" y="1135.50"></text></g><g><title>core::fmt::write (62 samples, 0.06%)</title><rect x="12.9638%" y="1109" width="0.0577%" height="15" fill="rgb(245,80,22)" fg:x="13919" fg:w="62"/><text x="13.2138%" y="1119.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (84 samples, 0.08%)</title><rect x="12.9452%" y="1221" width="0.0782%" height="15" fill="rgb(238,129,16)" fg:x="13899" fg:w="84"/><text x="13.1952%" y="1231.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::Debug&gt;::fmt (84 samples, 0.08%)</title><rect x="12.9452%" y="1205" width="0.0782%" height="15" fill="rgb(240,19,0)" fg:x="13899" fg:w="84"/><text x="13.1952%" y="1215.50"></text></g><g><title>core::fmt::Formatter::write_fmt (84 samples, 0.08%)</title><rect x="12.9452%" y="1189" width="0.0782%" height="15" fill="rgb(232,42,35)" fg:x="13899" fg:w="84"/><text x="13.1952%" y="1199.50"></text></g><g><title>core::fmt::write (82 samples, 0.08%)</title><rect x="12.9471%" y="1173" width="0.0764%" height="15" fill="rgb(223,130,24)" fg:x="13901" fg:w="82"/><text x="13.1971%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (17 samples, 0.02%)</title><rect x="13.0365%" y="1221" width="0.0158%" height="15" fill="rgb(237,16,22)" fg:x="13997" fg:w="17"/><text x="13.2865%" y="1231.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="13.0365%" y="1205" width="0.0158%" height="15" fill="rgb(248,192,20)" fg:x="13997" fg:w="17"/><text x="13.2865%" y="1215.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (15 samples, 0.01%)</title><rect x="13.0383%" y="1189" width="0.0140%" height="15" fill="rgb(233,167,2)" fg:x="13999" fg:w="15"/><text x="13.2883%" y="1199.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (12 samples, 0.01%)</title><rect x="13.0411%" y="1173" width="0.0112%" height="15" fill="rgb(252,71,44)" fg:x="14002" fg:w="12"/><text x="13.2911%" y="1183.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (141 samples, 0.13%)</title><rect x="12.9331%" y="1237" width="0.1313%" height="15" fill="rgb(238,37,47)" fg:x="13886" fg:w="141"/><text x="13.1831%" y="1247.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (161 samples, 0.15%)</title><rect x="12.9303%" y="1253" width="0.1500%" height="15" fill="rgb(214,202,54)" fg:x="13883" fg:w="161"/><text x="13.1803%" y="1263.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (20 samples, 0.02%)</title><rect x="13.0970%" y="1237" width="0.0186%" height="15" fill="rgb(254,165,40)" fg:x="14062" fg:w="20"/><text x="13.3470%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.01%)</title><rect x="13.1017%" y="1221" width="0.0140%" height="15" fill="rgb(246,173,38)" fg:x="14067" fg:w="15"/><text x="13.3517%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="13.1017%" y="1205" width="0.0140%" height="15" fill="rgb(215,3,27)" fg:x="14067" fg:w="15"/><text x="13.3517%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="13.1026%" y="1189" width="0.0130%" height="15" fill="rgb(239,169,51)" fg:x="14068" fg:w="14"/><text x="13.3526%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="13.1026%" y="1173" width="0.0130%" height="15" fill="rgb(212,5,25)" fg:x="14068" fg:w="14"/><text x="13.3526%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.02%)</title><rect x="13.1203%" y="1221" width="0.0205%" height="15" fill="rgb(243,45,17)" fg:x="14087" fg:w="22"/><text x="13.3703%" y="1231.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (16 samples, 0.01%)</title><rect x="13.1259%" y="1205" width="0.0149%" height="15" fill="rgb(242,97,9)" fg:x="14093" fg:w="16"/><text x="13.3759%" y="1215.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::entry (18 samples, 0.02%)</title><rect x="13.1426%" y="1221" width="0.0168%" height="15" fill="rgb(228,71,31)" fg:x="14111" fg:w="18"/><text x="13.3926%" y="1231.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (16 samples, 0.01%)</title><rect x="13.1445%" y="1205" width="0.0149%" height="15" fill="rgb(252,184,16)" fg:x="14113" fg:w="16"/><text x="13.3945%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (13 samples, 0.01%)</title><rect x="13.1641%" y="1189" width="0.0121%" height="15" fill="rgb(236,169,46)" fg:x="14134" fg:w="13"/><text x="13.4141%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.01%)</title><rect x="13.1641%" y="1173" width="0.0121%" height="15" fill="rgb(207,17,47)" fg:x="14134" fg:w="13"/><text x="13.4141%" y="1183.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="13.1818%" y="1045" width="0.0121%" height="15" fill="rgb(206,201,28)" fg:x="14153" fg:w="13"/><text x="13.4318%" y="1055.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="13.1818%" y="1029" width="0.0121%" height="15" fill="rgb(224,184,23)" fg:x="14153" fg:w="13"/><text x="13.4318%" y="1039.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (23 samples, 0.02%)</title><rect x="13.1818%" y="1093" width="0.0214%" height="15" fill="rgb(208,139,48)" fg:x="14153" fg:w="23"/><text x="13.4318%" y="1103.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (23 samples, 0.02%)</title><rect x="13.1818%" y="1077" width="0.0214%" height="15" fill="rgb(208,130,10)" fg:x="14153" fg:w="23"/><text x="13.4318%" y="1087.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.02%)</title><rect x="13.1818%" y="1061" width="0.0214%" height="15" fill="rgb(211,213,45)" fg:x="14153" fg:w="23"/><text x="13.4318%" y="1071.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (25 samples, 0.02%)</title><rect x="13.1808%" y="1157" width="0.0233%" height="15" fill="rgb(235,100,30)" fg:x="14152" fg:w="25"/><text x="13.4308%" y="1167.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (25 samples, 0.02%)</title><rect x="13.1808%" y="1141" width="0.0233%" height="15" fill="rgb(206,144,31)" fg:x="14152" fg:w="25"/><text x="13.4308%" y="1151.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (25 samples, 0.02%)</title><rect x="13.1808%" y="1125" width="0.0233%" height="15" fill="rgb(224,200,26)" fg:x="14152" fg:w="25"/><text x="13.4308%" y="1135.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (25 samples, 0.02%)</title><rect x="13.1808%" y="1109" width="0.0233%" height="15" fill="rgb(247,104,53)" fg:x="14152" fg:w="25"/><text x="13.4308%" y="1119.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::add_write (97 samples, 0.09%)</title><rect x="13.1156%" y="1237" width="0.0903%" height="15" fill="rgb(220,14,17)" fg:x="14082" fg:w="97"/><text x="13.3656%" y="1247.50"></text></g><g><title>dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_default (50 samples, 0.05%)</title><rect x="13.1594%" y="1221" width="0.0466%" height="15" fill="rgb(230,140,40)" fg:x="14129" fg:w="50"/><text x="13.4094%" y="1231.50"></text></g><g><title>dashmap::mapref::entry::VacantEntry&lt;K,V,S&gt;::insert (45 samples, 0.04%)</title><rect x="13.1641%" y="1205" width="0.0419%" height="15" fill="rgb(229,2,41)" fg:x="14134" fg:w="45"/><text x="13.4141%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.03%)</title><rect x="13.1762%" y="1189" width="0.0298%" height="15" fill="rgb(232,89,16)" fg:x="14147" fg:w="32"/><text x="13.4262%" y="1199.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (28 samples, 0.03%)</title><rect x="13.1799%" y="1173" width="0.0261%" height="15" fill="rgb(247,59,52)" fg:x="14151" fg:w="28"/><text x="13.4299%" y="1183.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute::{{closure}} (145 samples, 0.14%)</title><rect x="13.0868%" y="1253" width="0.1350%" height="15" fill="rgb(226,110,21)" fg:x="14051" fg:w="145"/><text x="13.3368%" y="1263.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (12 samples, 0.01%)</title><rect x="13.2106%" y="1237" width="0.0112%" height="15" fill="rgb(224,176,43)" fg:x="14184" fg:w="12"/><text x="13.4606%" y="1247.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (12 samples, 0.01%)</title><rect x="13.2106%" y="1221" width="0.0112%" height="15" fill="rgb(221,73,6)" fg:x="14184" fg:w="12"/><text x="13.4606%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (11 samples, 0.01%)</title><rect x="13.2116%" y="1205" width="0.0102%" height="15" fill="rgb(232,78,19)" fg:x="14185" fg:w="11"/><text x="13.4616%" y="1215.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_execution (21 samples, 0.02%)</title><rect x="13.2218%" y="1253" width="0.0196%" height="15" fill="rgb(233,112,48)" fg:x="14196" fg:w="21"/><text x="13.4718%" y="1263.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (26 samples, 0.02%)</title><rect x="13.2414%" y="1253" width="0.0242%" height="15" fill="rgb(243,131,47)" fg:x="14217" fg:w="26"/><text x="13.4914%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="13.2544%" y="1237" width="0.0112%" height="15" fill="rgb(226,51,1)" fg:x="14231" fg:w="12"/><text x="13.5044%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="13.2544%" y="1221" width="0.0112%" height="15" fill="rgb(247,58,7)" fg:x="14231" fg:w="12"/><text x="13.5044%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.01%)</title><rect x="13.2544%" y="1205" width="0.0112%" height="15" fill="rgb(209,7,32)" fg:x="14231" fg:w="12"/><text x="13.5044%" y="1215.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.01%)</title><rect x="13.2544%" y="1189" width="0.0112%" height="15" fill="rgb(209,39,41)" fg:x="14231" fg:w="12"/><text x="13.5044%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.01%)</title><rect x="13.2544%" y="1173" width="0.0112%" height="15" fill="rgb(226,182,46)" fg:x="14231" fg:w="12"/><text x="13.5044%" y="1183.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (13 samples, 0.01%)</title><rect x="13.2721%" y="1237" width="0.0121%" height="15" fill="rgb(230,219,10)" fg:x="14250" fg:w="13"/><text x="13.5221%" y="1247.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (18 samples, 0.02%)</title><rect x="13.3336%" y="1077" width="0.0168%" height="15" fill="rgb(227,175,30)" fg:x="14316" fg:w="18"/><text x="13.5836%" y="1087.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (75 samples, 0.07%)</title><rect x="13.2879%" y="1221" width="0.0699%" height="15" fill="rgb(217,2,50)" fg:x="14267" fg:w="75"/><text x="13.5379%" y="1231.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (75 samples, 0.07%)</title><rect x="13.2879%" y="1205" width="0.0699%" height="15" fill="rgb(229,160,0)" fg:x="14267" fg:w="75"/><text x="13.5379%" y="1215.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (75 samples, 0.07%)</title><rect x="13.2879%" y="1189" width="0.0699%" height="15" fill="rgb(207,78,37)" fg:x="14267" fg:w="75"/><text x="13.5379%" y="1199.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (75 samples, 0.07%)</title><rect x="13.2879%" y="1173" width="0.0699%" height="15" fill="rgb(225,57,0)" fg:x="14267" fg:w="75"/><text x="13.5379%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (75 samples, 0.07%)</title><rect x="13.2879%" y="1157" width="0.0699%" height="15" fill="rgb(232,154,2)" fg:x="14267" fg:w="75"/><text x="13.5379%" y="1167.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (75 samples, 0.07%)</title><rect x="13.2879%" y="1141" width="0.0699%" height="15" fill="rgb(241,212,25)" fg:x="14267" fg:w="75"/><text x="13.5379%" y="1151.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (73 samples, 0.07%)</title><rect x="13.2898%" y="1125" width="0.0680%" height="15" fill="rgb(226,69,20)" fg:x="14269" fg:w="73"/><text x="13.5398%" y="1135.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (71 samples, 0.07%)</title><rect x="13.2917%" y="1109" width="0.0661%" height="15" fill="rgb(247,184,54)" fg:x="14271" fg:w="71"/><text x="13.5417%" y="1119.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (71 samples, 0.07%)</title><rect x="13.2917%" y="1093" width="0.0661%" height="15" fill="rgb(210,145,0)" fg:x="14271" fg:w="71"/><text x="13.5417%" y="1103.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::store (93 samples, 0.09%)</title><rect x="13.2879%" y="1237" width="0.0866%" height="15" fill="rgb(253,82,12)" fg:x="14267" fg:w="93"/><text x="13.5379%" y="1247.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="13.3578%" y="1221" width="0.0168%" height="15" fill="rgb(245,42,11)" fg:x="14342" fg:w="18"/><text x="13.6078%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="13.3643%" y="1205" width="0.0102%" height="15" fill="rgb(219,147,32)" fg:x="14349" fg:w="11"/><text x="13.6143%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="13.3643%" y="1189" width="0.0102%" height="15" fill="rgb(246,12,7)" fg:x="14349" fg:w="11"/><text x="13.6143%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="13.3643%" y="1173" width="0.0102%" height="15" fill="rgb(243,50,9)" fg:x="14349" fg:w="11"/><text x="13.6143%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.01%)</title><rect x="13.3643%" y="1157" width="0.0102%" height="15" fill="rgb(219,149,6)" fg:x="14349" fg:w="11"/><text x="13.6143%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="13.3643%" y="1141" width="0.0102%" height="15" fill="rgb(241,51,42)" fg:x="14349" fg:w="11"/><text x="13.6143%" y="1151.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (49 samples, 0.05%)</title><rect x="13.4183%" y="741" width="0.0456%" height="15" fill="rgb(226,128,27)" fg:x="14407" fg:w="49"/><text x="13.6683%" y="751.50"></text></g><g><title>serde::de::SeqAccess::next_element (37 samples, 0.03%)</title><rect x="13.4295%" y="725" width="0.0345%" height="15" fill="rgb(244,144,4)" fg:x="14419" fg:w="37"/><text x="13.6795%" y="735.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.03%)</title><rect x="13.4295%" y="709" width="0.0345%" height="15" fill="rgb(221,4,13)" fg:x="14419" fg:w="37"/><text x="13.6795%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.03%)</title><rect x="13.4295%" y="693" width="0.0345%" height="15" fill="rgb(208,170,28)" fg:x="14419" fg:w="37"/><text x="13.6795%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (37 samples, 0.03%)</title><rect x="13.4295%" y="677" width="0.0345%" height="15" fill="rgb(226,131,13)" fg:x="14419" fg:w="37"/><text x="13.6795%" y="687.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (37 samples, 0.03%)</title><rect x="13.4295%" y="661" width="0.0345%" height="15" fill="rgb(215,72,41)" fg:x="14419" fg:w="37"/><text x="13.6795%" y="671.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (32 samples, 0.03%)</title><rect x="13.4342%" y="645" width="0.0298%" height="15" fill="rgb(243,108,20)" fg:x="14424" fg:w="32"/><text x="13.6842%" y="655.50"></text></g><g><title>bcs::de::Deserializer::next (13 samples, 0.01%)</title><rect x="13.4519%" y="629" width="0.0121%" height="15" fill="rgb(230,189,17)" fg:x="14443" fg:w="13"/><text x="13.7019%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.01%)</title><rect x="13.4528%" y="613" width="0.0112%" height="15" fill="rgb(220,50,17)" fg:x="14444" fg:w="12"/><text x="13.7028%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.01%)</title><rect x="13.4528%" y="597" width="0.0112%" height="15" fill="rgb(248,152,48)" fg:x="14444" fg:w="12"/><text x="13.7028%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="13.4528%" y="581" width="0.0112%" height="15" fill="rgb(244,91,11)" fg:x="14444" fg:w="12"/><text x="13.7028%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="13.4528%" y="565" width="0.0112%" height="15" fill="rgb(220,157,5)" fg:x="14444" fg:w="12"/><text x="13.7028%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.01%)</title><rect x="13.4528%" y="549" width="0.0112%" height="15" fill="rgb(253,137,8)" fg:x="14444" fg:w="12"/><text x="13.7028%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="13.4528%" y="533" width="0.0112%" height="15" fill="rgb(217,137,51)" fg:x="14444" fg:w="12"/><text x="13.7028%" y="543.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (56 samples, 0.05%)</title><rect x="13.4137%" y="789" width="0.0522%" height="15" fill="rgb(218,209,53)" fg:x="14402" fg:w="56"/><text x="13.6637%" y="799.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (52 samples, 0.05%)</title><rect x="13.4174%" y="773" width="0.0484%" height="15" fill="rgb(249,137,25)" fg:x="14406" fg:w="52"/><text x="13.6674%" y="783.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (52 samples, 0.05%)</title><rect x="13.4174%" y="757" width="0.0484%" height="15" fill="rgb(239,155,26)" fg:x="14406" fg:w="52"/><text x="13.6674%" y="767.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (68 samples, 0.06%)</title><rect x="13.4034%" y="837" width="0.0633%" height="15" fill="rgb(227,85,46)" fg:x="14391" fg:w="68"/><text x="13.6534%" y="847.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (60 samples, 0.06%)</title><rect x="13.4109%" y="821" width="0.0559%" height="15" fill="rgb(251,107,43)" fg:x="14399" fg:w="60"/><text x="13.6609%" y="831.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (60 samples, 0.06%)</title><rect x="13.4109%" y="805" width="0.0559%" height="15" fill="rgb(234,170,33)" fg:x="14399" fg:w="60"/><text x="13.6609%" y="815.50"></text></g><g><title>bcs::de::Deserializer::parse_string (13 samples, 0.01%)</title><rect x="13.4928%" y="725" width="0.0121%" height="15" fill="rgb(206,29,35)" fg:x="14487" fg:w="13"/><text x="13.7428%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="13.5050%" y="597" width="0.0102%" height="15" fill="rgb(227,138,25)" fg:x="14500" fg:w="11"/><text x="13.7550%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="13.5050%" y="581" width="0.0102%" height="15" fill="rgb(249,131,35)" fg:x="14500" fg:w="11"/><text x="13.7550%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="13.5050%" y="565" width="0.0102%" height="15" fill="rgb(239,6,40)" fg:x="14500" fg:w="11"/><text x="13.7550%" y="575.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (49 samples, 0.05%)</title><rect x="13.4733%" y="805" width="0.0456%" height="15" fill="rgb(246,136,47)" fg:x="14466" fg:w="49"/><text x="13.7233%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (42 samples, 0.04%)</title><rect x="13.4798%" y="789" width="0.0391%" height="15" fill="rgb(253,58,26)" fg:x="14473" fg:w="42"/><text x="13.7298%" y="799.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (32 samples, 0.03%)</title><rect x="13.4891%" y="773" width="0.0298%" height="15" fill="rgb(237,141,10)" fg:x="14483" fg:w="32"/><text x="13.7391%" y="783.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (32 samples, 0.03%)</title><rect x="13.4891%" y="757" width="0.0298%" height="15" fill="rgb(234,156,12)" fg:x="14483" fg:w="32"/><text x="13.7391%" y="767.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (32 samples, 0.03%)</title><rect x="13.4891%" y="741" width="0.0298%" height="15" fill="rgb(243,224,36)" fg:x="14483" fg:w="32"/><text x="13.7391%" y="751.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (15 samples, 0.01%)</title><rect x="13.5050%" y="725" width="0.0140%" height="15" fill="rgb(205,229,51)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="735.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (15 samples, 0.01%)</title><rect x="13.5050%" y="709" width="0.0140%" height="15" fill="rgb(223,189,4)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="719.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (15 samples, 0.01%)</title><rect x="13.5050%" y="693" width="0.0140%" height="15" fill="rgb(249,167,54)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (15 samples, 0.01%)</title><rect x="13.5050%" y="677" width="0.0140%" height="15" fill="rgb(218,34,28)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.01%)</title><rect x="13.5050%" y="661" width="0.0140%" height="15" fill="rgb(232,109,42)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="13.5050%" y="645" width="0.0140%" height="15" fill="rgb(248,214,46)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="13.5050%" y="629" width="0.0140%" height="15" fill="rgb(244,216,40)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="13.5050%" y="613" width="0.0140%" height="15" fill="rgb(231,226,31)" fg:x="14500" fg:w="15"/><text x="13.7550%" y="623.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (57 samples, 0.05%)</title><rect x="13.4668%" y="837" width="0.0531%" height="15" fill="rgb(238,38,43)" fg:x="14459" fg:w="57"/><text x="13.7168%" y="847.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (57 samples, 0.05%)</title><rect x="13.4668%" y="821" width="0.0531%" height="15" fill="rgb(208,88,43)" fg:x="14459" fg:w="57"/><text x="13.7168%" y="831.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (13 samples, 0.01%)</title><rect x="13.5310%" y="501" width="0.0121%" height="15" fill="rgb(205,136,37)" fg:x="14528" fg:w="13"/><text x="13.7810%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (12 samples, 0.01%)</title><rect x="13.5320%" y="485" width="0.0112%" height="15" fill="rgb(237,34,14)" fg:x="14529" fg:w="12"/><text x="13.7820%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (12 samples, 0.01%)</title><rect x="13.5320%" y="469" width="0.0112%" height="15" fill="rgb(236,193,44)" fg:x="14529" fg:w="12"/><text x="13.7820%" y="479.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (12 samples, 0.01%)</title><rect x="13.5320%" y="453" width="0.0112%" height="15" fill="rgb(231,48,10)" fg:x="14529" fg:w="12"/><text x="13.7820%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (11 samples, 0.01%)</title><rect x="13.5329%" y="437" width="0.0102%" height="15" fill="rgb(213,141,34)" fg:x="14530" fg:w="11"/><text x="13.7829%" y="447.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (11 samples, 0.01%)</title><rect x="13.5329%" y="421" width="0.0102%" height="15" fill="rgb(249,130,34)" fg:x="14530" fg:w="11"/><text x="13.7829%" y="431.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (11 samples, 0.01%)</title><rect x="13.5329%" y="405" width="0.0102%" height="15" fill="rgb(219,42,41)" fg:x="14530" fg:w="11"/><text x="13.7829%" y="415.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (27 samples, 0.03%)</title><rect x="13.5273%" y="613" width="0.0251%" height="15" fill="rgb(224,100,54)" fg:x="14524" fg:w="27"/><text x="13.7773%" y="623.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (26 samples, 0.02%)</title><rect x="13.5282%" y="597" width="0.0242%" height="15" fill="rgb(229,200,27)" fg:x="14525" fg:w="26"/><text x="13.7782%" y="607.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (26 samples, 0.02%)</title><rect x="13.5282%" y="581" width="0.0242%" height="15" fill="rgb(217,118,10)" fg:x="14525" fg:w="26"/><text x="13.7782%" y="591.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (24 samples, 0.02%)</title><rect x="13.5301%" y="565" width="0.0224%" height="15" fill="rgb(206,22,3)" fg:x="14527" fg:w="24"/><text x="13.7801%" y="575.50"></text></g><g><title>serde::de::SeqAccess::next_element (23 samples, 0.02%)</title><rect x="13.5310%" y="549" width="0.0214%" height="15" fill="rgb(232,163,46)" fg:x="14528" fg:w="23"/><text x="13.7810%" y="559.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (23 samples, 0.02%)</title><rect x="13.5310%" y="533" width="0.0214%" height="15" fill="rgb(206,95,13)" fg:x="14528" fg:w="23"/><text x="13.7810%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 0.02%)</title><rect x="13.5310%" y="517" width="0.0214%" height="15" fill="rgb(253,154,18)" fg:x="14528" fg:w="23"/><text x="13.7810%" y="527.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (33 samples, 0.03%)</title><rect x="13.5245%" y="709" width="0.0307%" height="15" fill="rgb(219,32,23)" fg:x="14521" fg:w="33"/><text x="13.7745%" y="719.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (33 samples, 0.03%)</title><rect x="13.5245%" y="693" width="0.0307%" height="15" fill="rgb(230,191,45)" fg:x="14521" fg:w="33"/><text x="13.7745%" y="703.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (33 samples, 0.03%)</title><rect x="13.5245%" y="677" width="0.0307%" height="15" fill="rgb(229,64,36)" fg:x="14521" fg:w="33"/><text x="13.7745%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (33 samples, 0.03%)</title><rect x="13.5245%" y="661" width="0.0307%" height="15" fill="rgb(205,129,25)" fg:x="14521" fg:w="33"/><text x="13.7745%" y="671.50"></text></g><g><title>&lt;&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum::__DeserializeWith as serde::de::Deserialize&gt;::deserialize (33 samples, 0.03%)</title><rect x="13.5245%" y="645" width="0.0307%" height="15" fill="rgb(254,112,7)" fg:x="14521" fg:w="33"/><text x="13.7745%" y="655.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_deserialize (32 samples, 0.03%)</title><rect x="13.5254%" y="629" width="0.0298%" height="15" fill="rgb(226,53,48)" fg:x="14522" fg:w="32"/><text x="13.7754%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (39 samples, 0.04%)</title><rect x="13.5199%" y="805" width="0.0363%" height="15" fill="rgb(214,153,38)" fg:x="14516" fg:w="39"/><text x="13.7699%" y="815.50"></text></g><g><title>serde::de::SeqAccess::next_element (35 samples, 0.03%)</title><rect x="13.5236%" y="789" width="0.0326%" height="15" fill="rgb(243,101,7)" fg:x="14520" fg:w="35"/><text x="13.7736%" y="799.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (35 samples, 0.03%)</title><rect x="13.5236%" y="773" width="0.0326%" height="15" fill="rgb(240,140,22)" fg:x="14520" fg:w="35"/><text x="13.7736%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (34 samples, 0.03%)</title><rect x="13.5245%" y="757" width="0.0317%" height="15" fill="rgb(235,114,2)" fg:x="14521" fg:w="34"/><text x="13.7745%" y="767.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize (34 samples, 0.03%)</title><rect x="13.5245%" y="741" width="0.0317%" height="15" fill="rgb(242,59,12)" fg:x="14521" fg:w="34"/><text x="13.7745%" y="751.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (34 samples, 0.03%)</title><rect x="13.5245%" y="725" width="0.0317%" height="15" fill="rgb(252,134,9)" fg:x="14521" fg:w="34"/><text x="13.7745%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (170 samples, 0.16%)</title><rect x="13.4016%" y="901" width="0.1583%" height="15" fill="rgb(236,4,44)" fg:x="14389" fg:w="170"/><text x="13.6516%" y="911.50"></text></g><g><title>serde::de::SeqAccess::next_element (169 samples, 0.16%)</title><rect x="13.4025%" y="885" width="0.1574%" height="15" fill="rgb(254,172,41)" fg:x="14390" fg:w="169"/><text x="13.6525%" y="895.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (169 samples, 0.16%)</title><rect x="13.4025%" y="869" width="0.1574%" height="15" fill="rgb(244,63,20)" fg:x="14390" fg:w="169"/><text x="13.6525%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (169 samples, 0.16%)</title><rect x="13.4025%" y="853" width="0.1574%" height="15" fill="rgb(250,73,31)" fg:x="14390" fg:w="169"/><text x="13.6525%" y="863.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (43 samples, 0.04%)</title><rect x="13.5199%" y="837" width="0.0400%" height="15" fill="rgb(241,38,36)" fg:x="14516" fg:w="43"/><text x="13.7699%" y="847.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (43 samples, 0.04%)</title><rect x="13.5199%" y="821" width="0.0400%" height="15" fill="rgb(245,211,2)" fg:x="14516" fg:w="43"/><text x="13.7699%" y="831.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (189 samples, 0.18%)</title><rect x="13.3885%" y="997" width="0.1760%" height="15" fill="rgb(206,120,28)" fg:x="14375" fg:w="189"/><text x="13.6385%" y="1007.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (182 samples, 0.17%)</title><rect x="13.3951%" y="981" width="0.1695%" height="15" fill="rgb(211,59,34)" fg:x="14382" fg:w="182"/><text x="13.6451%" y="991.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (182 samples, 0.17%)</title><rect x="13.3951%" y="965" width="0.1695%" height="15" fill="rgb(233,168,5)" fg:x="14382" fg:w="182"/><text x="13.6451%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (182 samples, 0.17%)</title><rect x="13.3951%" y="949" width="0.1695%" height="15" fill="rgb(234,33,13)" fg:x="14382" fg:w="182"/><text x="13.6451%" y="959.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (182 samples, 0.17%)</title><rect x="13.3951%" y="933" width="0.1695%" height="15" fill="rgb(231,150,26)" fg:x="14382" fg:w="182"/><text x="13.6451%" y="943.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (181 samples, 0.17%)</title><rect x="13.3960%" y="917" width="0.1686%" height="15" fill="rgb(217,191,4)" fg:x="14383" fg:w="181"/><text x="13.6460%" y="927.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize (194 samples, 0.18%)</title><rect x="13.3867%" y="1029" width="0.1807%" height="15" fill="rgb(246,198,38)" fg:x="14373" fg:w="194"/><text x="13.6367%" y="1039.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (194 samples, 0.18%)</title><rect x="13.3867%" y="1013" width="0.1807%" height="15" fill="rgb(245,64,37)" fg:x="14373" fg:w="194"/><text x="13.6367%" y="1023.50"></text></g><g><title>bcs::de::from_bytes (202 samples, 0.19%)</title><rect x="13.3829%" y="1045" width="0.1881%" height="15" fill="rgb(250,30,36)" fg:x="14369" fg:w="202"/><text x="13.6329%" y="1055.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (204 samples, 0.19%)</title><rect x="13.3820%" y="1061" width="0.1900%" height="15" fill="rgb(217,86,53)" fg:x="14368" fg:w="204"/><text x="13.6320%" y="1071.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (218 samples, 0.20%)</title><rect x="13.3811%" y="1077" width="0.2030%" height="15" fill="rgb(228,157,16)" fg:x="14367" fg:w="218"/><text x="13.6311%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (13 samples, 0.01%)</title><rect x="13.5720%" y="1061" width="0.0121%" height="15" fill="rgb(217,59,31)" fg:x="14572" fg:w="13"/><text x="13.8220%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (13 samples, 0.01%)</title><rect x="13.5720%" y="1045" width="0.0121%" height="15" fill="rgb(237,138,41)" fg:x="14572" fg:w="13"/><text x="13.8220%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (227 samples, 0.21%)</title><rect x="13.3746%" y="1205" width="0.2114%" height="15" fill="rgb(227,91,49)" fg:x="14360" fg:w="227"/><text x="13.6246%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (224 samples, 0.21%)</title><rect x="13.3774%" y="1189" width="0.2086%" height="15" fill="rgb(247,21,44)" fg:x="14363" fg:w="224"/><text x="13.6274%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 0.21%)</title><rect x="13.3774%" y="1173" width="0.2086%" height="15" fill="rgb(219,210,51)" fg:x="14363" fg:w="224"/><text x="13.6274%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (224 samples, 0.21%)</title><rect x="13.3774%" y="1157" width="0.2086%" height="15" fill="rgb(209,140,6)" fg:x="14363" fg:w="224"/><text x="13.6274%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (224 samples, 0.21%)</title><rect x="13.3774%" y="1141" width="0.2086%" height="15" fill="rgb(221,188,24)" fg:x="14363" fg:w="224"/><text x="13.6274%" y="1151.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (224 samples, 0.21%)</title><rect x="13.3774%" y="1125" width="0.2086%" height="15" fill="rgb(232,154,20)" fg:x="14363" fg:w="224"/><text x="13.6274%" y="1135.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;K&gt;::module_path (224 samples, 0.21%)</title><rect x="13.3774%" y="1109" width="0.2086%" height="15" fill="rgb(244,137,50)" fg:x="14363" fg:w="224"/><text x="13.6274%" y="1119.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (223 samples, 0.21%)</title><rect x="13.3783%" y="1093" width="0.2077%" height="15" fill="rgb(225,185,43)" fg:x="14364" fg:w="223"/><text x="13.6283%" y="1103.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (15 samples, 0.01%)</title><rect x="13.5869%" y="1077" width="0.0140%" height="15" fill="rgb(213,205,38)" fg:x="14588" fg:w="15"/><text x="13.8369%" y="1087.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (15 samples, 0.01%)</title><rect x="13.5869%" y="1061" width="0.0140%" height="15" fill="rgb(236,73,12)" fg:x="14588" fg:w="15"/><text x="13.8369%" y="1071.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (15 samples, 0.01%)</title><rect x="13.5869%" y="1045" width="0.0140%" height="15" fill="rgb(235,219,13)" fg:x="14588" fg:w="15"/><text x="13.8369%" y="1055.50"></text></g><g><title>bcs::de::from_bytes (15 samples, 0.01%)</title><rect x="13.5869%" y="1029" width="0.0140%" height="15" fill="rgb(218,59,36)" fg:x="14588" fg:w="15"/><text x="13.8369%" y="1039.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize (13 samples, 0.01%)</title><rect x="13.5888%" y="1013" width="0.0121%" height="15" fill="rgb(205,110,39)" fg:x="14590" fg:w="13"/><text x="13.8388%" y="1023.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (13 samples, 0.01%)</title><rect x="13.5888%" y="997" width="0.0121%" height="15" fill="rgb(218,206,42)" fg:x="14590" fg:w="13"/><text x="13.8388%" y="1007.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (13 samples, 0.01%)</title><rect x="13.5888%" y="981" width="0.0121%" height="15" fill="rgb(248,125,24)" fg:x="14590" fg:w="13"/><text x="13.8388%" y="991.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (12 samples, 0.01%)</title><rect x="13.5897%" y="965" width="0.0112%" height="15" fill="rgb(242,28,27)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="975.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (12 samples, 0.01%)</title><rect x="13.5897%" y="949" width="0.0112%" height="15" fill="rgb(216,228,15)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.01%)</title><rect x="13.5897%" y="933" width="0.0112%" height="15" fill="rgb(235,116,46)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="943.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (12 samples, 0.01%)</title><rect x="13.5897%" y="917" width="0.0112%" height="15" fill="rgb(224,18,32)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="927.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (12 samples, 0.01%)</title><rect x="13.5897%" y="901" width="0.0112%" height="15" fill="rgb(252,5,12)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="911.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (12 samples, 0.01%)</title><rect x="13.5897%" y="885" width="0.0112%" height="15" fill="rgb(251,36,5)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="895.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.01%)</title><rect x="13.5897%" y="869" width="0.0112%" height="15" fill="rgb(217,53,14)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="879.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.01%)</title><rect x="13.5897%" y="853" width="0.0112%" height="15" fill="rgb(215,86,45)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.01%)</title><rect x="13.5897%" y="837" width="0.0112%" height="15" fill="rgb(242,169,11)" fg:x="14591" fg:w="12"/><text x="13.8397%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (245 samples, 0.23%)</title><rect x="13.3746%" y="1237" width="0.2282%" height="15" fill="rgb(211,213,45)" fg:x="14360" fg:w="245"/><text x="13.6246%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (245 samples, 0.23%)</title><rect x="13.3746%" y="1221" width="0.2282%" height="15" fill="rgb(205,88,11)" fg:x="14360" fg:w="245"/><text x="13.6246%" y="1231.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="13.5860%" y="1205" width="0.0168%" height="15" fill="rgb(252,69,26)" fg:x="14587" fg:w="18"/><text x="13.8360%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="13.5860%" y="1189" width="0.0168%" height="15" fill="rgb(246,123,37)" fg:x="14587" fg:w="18"/><text x="13.8360%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="13.5860%" y="1173" width="0.0168%" height="15" fill="rgb(212,205,5)" fg:x="14587" fg:w="18"/><text x="13.8360%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (18 samples, 0.02%)</title><rect x="13.5860%" y="1157" width="0.0168%" height="15" fill="rgb(253,148,0)" fg:x="14587" fg:w="18"/><text x="13.8360%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="13.5860%" y="1141" width="0.0168%" height="15" fill="rgb(239,22,4)" fg:x="14587" fg:w="18"/><text x="13.8360%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (18 samples, 0.02%)</title><rect x="13.5860%" y="1125" width="0.0168%" height="15" fill="rgb(226,26,53)" fg:x="14587" fg:w="18"/><text x="13.8360%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.02%)</title><rect x="13.5869%" y="1109" width="0.0158%" height="15" fill="rgb(225,229,45)" fg:x="14588" fg:w="17"/><text x="13.8369%" y="1119.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (17 samples, 0.02%)</title><rect x="13.5869%" y="1093" width="0.0158%" height="15" fill="rgb(220,60,37)" fg:x="14588" fg:w="17"/><text x="13.8369%" y="1103.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record (363 samples, 0.34%)</title><rect x="13.2656%" y="1253" width="0.3381%" height="15" fill="rgb(217,180,35)" fg:x="14243" fg:w="363"/><text x="13.5156%" y="1263.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.01%)</title><rect x="13.6177%" y="1189" width="0.0130%" height="15" fill="rgb(229,7,53)" fg:x="14621" fg:w="14"/><text x="13.8677%" y="1199.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.01%)</title><rect x="13.6186%" y="1173" width="0.0121%" height="15" fill="rgb(254,137,3)" fg:x="14622" fg:w="13"/><text x="13.8686%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (29 samples, 0.03%)</title><rect x="13.6149%" y="1237" width="0.0270%" height="15" fill="rgb(215,140,41)" fg:x="14618" fg:w="29"/><text x="13.8649%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (29 samples, 0.03%)</title><rect x="13.6149%" y="1221" width="0.0270%" height="15" fill="rgb(250,80,15)" fg:x="14618" fg:w="29"/><text x="13.8649%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.03%)</title><rect x="13.6149%" y="1205" width="0.0270%" height="15" fill="rgb(252,191,6)" fg:x="14618" fg:w="29"/><text x="13.8649%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.01%)</title><rect x="13.6307%" y="1189" width="0.0112%" height="15" fill="rgb(246,217,18)" fg:x="14635" fg:w="12"/><text x="13.8807%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.01%)</title><rect x="13.6307%" y="1173" width="0.0112%" height="15" fill="rgb(223,93,7)" fg:x="14635" fg:w="12"/><text x="13.8807%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.01%)</title><rect x="13.6307%" y="1157" width="0.0112%" height="15" fill="rgb(225,55,52)" fg:x="14635" fg:w="12"/><text x="13.8807%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.01%)</title><rect x="13.6419%" y="1237" width="0.0130%" height="15" fill="rgb(240,31,24)" fg:x="14647" fg:w="14"/><text x="13.8919%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.01%)</title><rect x="13.6419%" y="1221" width="0.0130%" height="15" fill="rgb(205,56,52)" fg:x="14647" fg:w="14"/><text x="13.8919%" y="1231.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (61 samples, 0.06%)</title><rect x="13.6046%" y="1253" width="0.0568%" height="15" fill="rgb(246,146,12)" fg:x="14607" fg:w="61"/><text x="13.8546%" y="1263.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (11 samples, 0.01%)</title><rect x="13.6661%" y="1237" width="0.0102%" height="15" fill="rgb(239,84,36)" fg:x="14673" fg:w="11"/><text x="13.9161%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (11 samples, 0.01%)</title><rect x="13.6661%" y="1221" width="0.0102%" height="15" fill="rgb(207,41,40)" fg:x="14673" fg:w="11"/><text x="13.9161%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.01%)</title><rect x="13.6661%" y="1205" width="0.0102%" height="15" fill="rgb(241,179,25)" fg:x="14673" fg:w="11"/><text x="13.9161%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="13.6661%" y="1189" width="0.0102%" height="15" fill="rgb(210,0,34)" fg:x="14673" fg:w="11"/><text x="13.9161%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.01%)</title><rect x="13.6763%" y="1237" width="0.0140%" height="15" fill="rgb(225,217,29)" fg:x="14684" fg:w="15"/><text x="13.9263%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.01%)</title><rect x="13.6763%" y="1221" width="0.0140%" height="15" fill="rgb(216,191,38)" fg:x="14684" fg:w="15"/><text x="13.9263%" y="1231.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (39 samples, 0.04%)</title><rect x="13.6614%" y="1253" width="0.0363%" height="15" fill="rgb(232,140,52)" fg:x="14668" fg:w="39"/><text x="13.9114%" y="1263.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (836 samples, 0.78%)</title><rect x="12.9275%" y="1269" width="0.7786%" height="15" fill="rgb(223,158,51)" fg:x="13880" fg:w="836"/><text x="13.1775%" y="1279.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (17 samples, 0.02%)</title><rect x="13.7220%" y="1173" width="0.0158%" height="15" fill="rgb(235,29,51)" fg:x="14733" fg:w="17"/><text x="13.9720%" y="1183.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (17 samples, 0.02%)</title><rect x="13.7220%" y="1157" width="0.0158%" height="15" fill="rgb(215,181,18)" fg:x="14733" fg:w="17"/><text x="13.9720%" y="1167.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (17 samples, 0.02%)</title><rect x="13.7220%" y="1141" width="0.0158%" height="15" fill="rgb(227,125,34)" fg:x="14733" fg:w="17"/><text x="13.9720%" y="1151.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (12 samples, 0.01%)</title><rect x="13.7266%" y="1125" width="0.0112%" height="15" fill="rgb(230,197,49)" fg:x="14738" fg:w="12"/><text x="13.9766%" y="1135.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="13.7425%" y="1109" width="0.0112%" height="15" fill="rgb(239,141,16)" fg:x="14755" fg:w="12"/><text x="13.9925%" y="1119.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="13.7415%" y="1141" width="0.0196%" height="15" fill="rgb(225,105,43)" fg:x="14754" fg:w="21"/><text x="13.9915%" y="1151.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="13.7415%" y="1125" width="0.0196%" height="15" fill="rgb(214,131,14)" fg:x="14754" fg:w="21"/><text x="13.9915%" y="1135.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (40 samples, 0.04%)</title><rect x="13.7378%" y="1173" width="0.0373%" height="15" fill="rgb(229,177,11)" fg:x="14750" fg:w="40"/><text x="13.9878%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.03%)</title><rect x="13.7415%" y="1157" width="0.0335%" height="15" fill="rgb(231,180,14)" fg:x="14754" fg:w="36"/><text x="13.9915%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="13.7611%" y="1141" width="0.0140%" height="15" fill="rgb(232,88,2)" fg:x="14775" fg:w="15"/><text x="14.0111%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="13.7611%" y="1125" width="0.0140%" height="15" fill="rgb(205,220,8)" fg:x="14775" fg:w="15"/><text x="14.0111%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="13.7611%" y="1109" width="0.0140%" height="15" fill="rgb(225,23,53)" fg:x="14775" fg:w="15"/><text x="14.0111%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="13.7629%" y="1093" width="0.0121%" height="15" fill="rgb(213,62,29)" fg:x="14777" fg:w="13"/><text x="14.0129%" y="1103.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="13.7778%" y="1125" width="0.0130%" height="15" fill="rgb(227,75,7)" fg:x="14793" fg:w="14"/><text x="14.0278%" y="1135.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="13.7778%" y="1109" width="0.0130%" height="15" fill="rgb(207,105,14)" fg:x="14793" fg:w="14"/><text x="14.0278%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.03%)</title><rect x="13.7769%" y="1141" width="0.0261%" height="15" fill="rgb(245,62,29)" fg:x="14792" fg:w="28"/><text x="14.0269%" y="1151.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (116 samples, 0.11%)</title><rect x="13.7061%" y="1221" width="0.1080%" height="15" fill="rgb(236,202,4)" fg:x="14716" fg:w="116"/><text x="13.9561%" y="1231.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (99 samples, 0.09%)</title><rect x="13.7220%" y="1205" width="0.0922%" height="15" fill="rgb(250,67,1)" fg:x="14733" fg:w="99"/><text x="13.9720%" y="1215.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (99 samples, 0.09%)</title><rect x="13.7220%" y="1189" width="0.0922%" height="15" fill="rgb(253,115,44)" fg:x="14733" fg:w="99"/><text x="13.9720%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (42 samples, 0.04%)</title><rect x="13.7751%" y="1173" width="0.0391%" height="15" fill="rgb(251,139,18)" fg:x="14790" fg:w="42"/><text x="14.0251%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (40 samples, 0.04%)</title><rect x="13.7769%" y="1157" width="0.0373%" height="15" fill="rgb(218,22,32)" fg:x="14792" fg:w="40"/><text x="14.0269%" y="1167.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (12 samples, 0.01%)</title><rect x="13.8030%" y="1141" width="0.0112%" height="15" fill="rgb(243,53,5)" fg:x="14820" fg:w="12"/><text x="14.0530%" y="1151.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (12 samples, 0.01%)</title><rect x="13.8030%" y="1125" width="0.0112%" height="15" fill="rgb(227,56,16)" fg:x="14820" fg:w="12"/><text x="14.0530%" y="1135.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.01%)</title><rect x="13.8030%" y="1109" width="0.0112%" height="15" fill="rgb(245,53,0)" fg:x="14820" fg:w="12"/><text x="14.0530%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (117 samples, 0.11%)</title><rect x="13.7061%" y="1253" width="0.1090%" height="15" fill="rgb(216,170,35)" fg:x="14716" fg:w="117"/><text x="13.9561%" y="1263.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate::{{closure}} (117 samples, 0.11%)</title><rect x="13.7061%" y="1237" width="0.1090%" height="15" fill="rgb(211,200,8)" fg:x="14716" fg:w="117"/><text x="13.9561%" y="1247.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_abort (16 samples, 0.01%)</title><rect x="13.8160%" y="1253" width="0.0149%" height="15" fill="rgb(228,204,44)" fg:x="14834" fg:w="16"/><text x="14.0660%" y="1263.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_incarnate (14 samples, 0.01%)</title><rect x="13.8179%" y="1237" width="0.0130%" height="15" fill="rgb(214,121,17)" fg:x="14836" fg:w="14"/><text x="14.0679%" y="1247.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (15 samples, 0.01%)</title><rect x="13.8328%" y="1253" width="0.0140%" height="15" fill="rgb(233,64,38)" fg:x="14852" fg:w="15"/><text x="14.0828%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="13.8347%" y="1237" width="0.0121%" height="15" fill="rgb(253,54,19)" fg:x="14854" fg:w="13"/><text x="14.0847%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="13.8347%" y="1221" width="0.0121%" height="15" fill="rgb(253,94,18)" fg:x="14854" fg:w="13"/><text x="14.0847%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="13.8347%" y="1205" width="0.0121%" height="15" fill="rgb(227,57,52)" fg:x="14854" fg:w="13"/><text x="14.0847%" y="1215.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="13.8347%" y="1189" width="0.0121%" height="15" fill="rgb(230,228,50)" fg:x="14854" fg:w="13"/><text x="14.0847%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="13.8347%" y="1173" width="0.0121%" height="15" fill="rgb(217,205,27)" fg:x="14854" fg:w="13"/><text x="14.0847%" y="1183.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate (171 samples, 0.16%)</title><rect x="13.7061%" y="1269" width="0.1593%" height="15" fill="rgb(252,71,50)" fg:x="14716" fg:w="171"/><text x="13.9561%" y="1279.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (12 samples, 0.01%)</title><rect x="13.8691%" y="1221" width="0.0112%" height="15" fill="rgb(209,86,4)" fg:x="14891" fg:w="12"/><text x="14.1191%" y="1231.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_execute_next_version (30 samples, 0.03%)</title><rect x="13.8663%" y="1253" width="0.0279%" height="15" fill="rgb(229,94,0)" fg:x="14888" fg:w="30"/><text x="14.1163%" y="1263.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_incarnate (30 samples, 0.03%)</title><rect x="13.8663%" y="1237" width="0.0279%" height="15" fill="rgb(252,223,21)" fg:x="14888" fg:w="30"/><text x="14.1163%" y="1247.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::next_task (36 samples, 0.03%)</title><rect x="13.8654%" y="1269" width="0.0335%" height="15" fill="rgb(230,210,4)" fg:x="14887" fg:w="36"/><text x="14.1154%" y="1279.50"></text></g><g><title>aptos_types::transaction::Profiler::count_one (11 samples, 0.01%)</title><rect x="13.9008%" y="1269" width="0.0102%" height="15" fill="rgb(240,149,38)" fg:x="14925" fg:w="11"/><text x="14.1508%" y="1279.50"></text></g><g><title>aptos_types::transaction::Profiler::count (11 samples, 0.01%)</title><rect x="13.9008%" y="1253" width="0.0102%" height="15" fill="rgb(254,105,20)" fg:x="14925" fg:w="11"/><text x="14.1508%" y="1263.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (17 samples, 0.02%)</title><rect x="13.9110%" y="1269" width="0.0158%" height="15" fill="rgb(253,87,46)" fg:x="14936" fg:w="17"/><text x="14.1610%" y="1279.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (15 samples, 0.01%)</title><rect x="13.9269%" y="1269" width="0.0140%" height="15" fill="rgb(253,116,33)" fg:x="14953" fg:w="15"/><text x="14.1769%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (14 samples, 0.01%)</title><rect x="13.9446%" y="981" width="0.0130%" height="15" fill="rgb(229,198,5)" fg:x="14972" fg:w="14"/><text x="14.1946%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (14 samples, 0.01%)</title><rect x="13.9446%" y="965" width="0.0130%" height="15" fill="rgb(242,38,37)" fg:x="14972" fg:w="14"/><text x="14.1946%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="13.9436%" y="1061" width="0.0149%" height="15" fill="rgb(242,69,53)" fg:x="14971" fg:w="16"/><text x="14.1936%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="13.9436%" y="1045" width="0.0149%" height="15" fill="rgb(249,80,16)" fg:x="14971" fg:w="16"/><text x="14.1936%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (16 samples, 0.01%)</title><rect x="13.9436%" y="1029" width="0.0149%" height="15" fill="rgb(206,128,11)" fg:x="14971" fg:w="16"/><text x="14.1936%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (16 samples, 0.01%)</title><rect x="13.9436%" y="1013" width="0.0149%" height="15" fill="rgb(212,35,20)" fg:x="14971" fg:w="16"/><text x="14.1936%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="13.9436%" y="997" width="0.0149%" height="15" fill="rgb(236,79,13)" fg:x="14971" fg:w="16"/><text x="14.1936%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_binary_format::file_format::CompiledModule&gt;&gt; (18 samples, 0.02%)</title><rect x="13.9613%" y="933" width="0.0168%" height="15" fill="rgb(233,123,3)" fg:x="14990" fg:w="18"/><text x="14.2113%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="13.9613%" y="917" width="0.0168%" height="15" fill="rgb(214,93,52)" fg:x="14990" fg:w="18"/><text x="14.2113%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (18 samples, 0.02%)</title><rect x="13.9613%" y="901" width="0.0168%" height="15" fill="rgb(251,37,40)" fg:x="14990" fg:w="18"/><text x="14.2113%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (18 samples, 0.02%)</title><rect x="13.9613%" y="885" width="0.0168%" height="15" fill="rgb(227,80,54)" fg:x="14990" fg:w="18"/><text x="14.2113%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (41 samples, 0.04%)</title><rect x="13.9436%" y="1109" width="0.0382%" height="15" fill="rgb(254,48,11)" fg:x="14971" fg:w="41"/><text x="14.1936%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (41 samples, 0.04%)</title><rect x="13.9436%" y="1093" width="0.0382%" height="15" fill="rgb(235,193,26)" fg:x="14971" fg:w="41"/><text x="14.1936%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (41 samples, 0.04%)</title><rect x="13.9436%" y="1077" width="0.0382%" height="15" fill="rgb(229,99,21)" fg:x="14971" fg:w="41"/><text x="14.1936%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (22 samples, 0.02%)</title><rect x="13.9613%" y="1061" width="0.0205%" height="15" fill="rgb(211,140,41)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="13.9613%" y="1045" width="0.0205%" height="15" fill="rgb(240,227,30)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="13.9613%" y="1029" width="0.0205%" height="15" fill="rgb(215,224,45)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (22 samples, 0.02%)</title><rect x="13.9613%" y="1013" width="0.0205%" height="15" fill="rgb(206,123,31)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (22 samples, 0.02%)</title><rect x="13.9613%" y="997" width="0.0205%" height="15" fill="rgb(210,138,16)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="13.9613%" y="981" width="0.0205%" height="15" fill="rgb(228,57,28)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.02%)</title><rect x="13.9613%" y="965" width="0.0205%" height="15" fill="rgb(242,170,10)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (22 samples, 0.02%)</title><rect x="13.9613%" y="949" width="0.0205%" height="15" fill="rgb(228,214,39)" fg:x="14990" fg:w="22"/><text x="14.2113%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1269" width="0.0419%" height="15" fill="rgb(218,179,33)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm::AptosVM&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1253" width="0.0419%" height="15" fill="rgb(235,193,39)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm_impl::AptosVMImpl&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1237" width="0.0419%" height="15" fill="rgb(219,221,36)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt;&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1221" width="0.0419%" height="15" fill="rgb(248,218,19)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="13.9436%" y="1205" width="0.0419%" height="15" fill="rgb(205,50,9)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1215.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (45 samples, 0.04%)</title><rect x="13.9436%" y="1189" width="0.0419%" height="15" fill="rgb(238,81,28)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1173" width="0.0419%" height="15" fill="rgb(235,110,19)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1157" width="0.0419%" height="15" fill="rgb(214,7,14)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1141" width="0.0419%" height="15" fill="rgb(211,77,3)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (45 samples, 0.04%)</title><rect x="13.9436%" y="1125" width="0.0419%" height="15" fill="rgb(229,5,9)" fg:x="14971" fg:w="45"/><text x="14.1936%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1509" width="1.2555%" height="15" fill="rgb(225,90,11)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1493" width="1.2555%" height="15" fill="rgb(242,56,8)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1503.50"></text></g><g><title>rayon_core::job::JobRef::execute (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1477" width="1.2555%" height="15" fill="rgb(249,212,39)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1461" width="1.2555%" height="15" fill="rgb(236,90,9)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1471.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1445" width="1.2555%" height="15" fill="rgb(206,88,35)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1455.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1429" width="1.2555%" height="15" fill="rgb(205,126,30)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1439.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1413" width="1.2555%" height="15" fill="rgb(230,176,12)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1397" width="1.2555%" height="15" fill="rgb(243,19,9)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1381" width="1.2555%" height="15" fill="rgb(245,171,17)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1391.50"></text></g><g><title>std::panicking::try (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1365" width="1.2555%" height="15" fill="rgb(227,52,21)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1349" width="1.2555%" height="15" fill="rgb(238,69,14)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1333" width="1.2555%" height="15" fill="rgb(241,156,39)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1343.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1317" width="1.2555%" height="15" fill="rgb(212,227,28)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1327.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1301" width="1.2555%" height="15" fill="rgb(209,118,27)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1311.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (1,348 samples, 1.26%)</title><rect x="12.7375%" y="1285" width="1.2555%" height="15" fill="rgb(226,102,5)" fg:x="13676" fg:w="1348"/><text x="12.9875%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (14,395 samples, 13.41%)</title><rect x="0.5868%" y="1781" width="13.4072%" height="15" fill="rgb(223,34,3)" fg:x="630" fg:w="14395"/><text x="0.8368%" y="1791.50">rayon_core::registry..</text></g><g><title>rayon_core::job::JobRef::execute (14,395 samples, 13.41%)</title><rect x="0.5868%" y="1765" width="13.4072%" height="15" fill="rgb(221,81,38)" fg:x="630" fg:w="14395"/><text x="0.8368%" y="1775.50">rayon_core::job::Job..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,248 samples, 3.96%)</title><rect x="10.0374%" y="1749" width="3.9565%" height="15" fill="rgb(236,219,28)" fg:x="10777" fg:w="4248"/><text x="10.2874%" y="1759.50">&lt;ray..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4,227 samples, 3.94%)</title><rect x="10.0570%" y="1733" width="3.9369%" height="15" fill="rgb(213,200,14)" fg:x="10798" fg:w="4227"/><text x="10.3070%" y="1743.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (4,227 samples, 3.94%)</title><rect x="10.0570%" y="1717" width="3.9369%" height="15" fill="rgb(240,33,19)" fg:x="10798" fg:w="4227"/><text x="10.3070%" y="1727.50">rayo..</text></g><g><title>std::panic::catch_unwind (4,227 samples, 3.94%)</title><rect x="10.0570%" y="1701" width="3.9369%" height="15" fill="rgb(233,113,27)" fg:x="10798" fg:w="4227"/><text x="10.3070%" y="1711.50">std:..</text></g><g><title>std::panicking::try (4,227 samples, 3.94%)</title><rect x="10.0570%" y="1685" width="3.9369%" height="15" fill="rgb(220,221,18)" fg:x="10798" fg:w="4227"/><text x="10.3070%" y="1695.50">std:..</text></g><g><title>std::panicking::try::do_call (4,227 samples, 3.94%)</title><rect x="10.0570%" y="1669" width="3.9369%" height="15" fill="rgb(238,92,8)" fg:x="10798" fg:w="4227"/><text x="10.3070%" y="1679.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,226 samples, 3.94%)</title><rect x="10.0579%" y="1653" width="3.9360%" height="15" fill="rgb(222,164,16)" fg:x="10799" fg:w="4226"/><text x="10.3079%" y="1663.50">&lt;cor..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4,225 samples, 3.94%)</title><rect x="10.0589%" y="1637" width="3.9351%" height="15" fill="rgb(241,119,3)" fg:x="10800" fg:w="4225"/><text x="10.3089%" y="1647.50">rayo..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (1,589 samples, 1.48%)</title><rect x="12.5140%" y="1621" width="1.4800%" height="15" fill="rgb(241,44,8)" fg:x="13436" fg:w="1589"/><text x="12.7640%" y="1631.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (1,574 samples, 1.47%)</title><rect x="12.5279%" y="1605" width="1.4660%" height="15" fill="rgb(230,36,40)" fg:x="13451" fg:w="1574"/><text x="12.7779%" y="1615.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (1,349 samples, 1.26%)</title><rect x="12.7375%" y="1589" width="1.2564%" height="15" fill="rgb(243,16,36)" fg:x="13676" fg:w="1349"/><text x="12.9875%" y="1599.50"></text></g><g><title>rayon_core::scope::scope (1,349 samples, 1.26%)</title><rect x="12.7375%" y="1573" width="1.2564%" height="15" fill="rgb(231,4,26)" fg:x="13676" fg:w="1349"/><text x="12.9875%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (1,349 samples, 1.26%)</title><rect x="12.7375%" y="1557" width="1.2564%" height="15" fill="rgb(240,9,31)" fg:x="13676" fg:w="1349"/><text x="12.9875%" y="1567.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (1,349 samples, 1.26%)</title><rect x="12.7375%" y="1541" width="1.2564%" height="15" fill="rgb(207,173,15)" fg:x="13676" fg:w="1349"/><text x="12.9875%" y="1551.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (1,349 samples, 1.26%)</title><rect x="12.7375%" y="1525" width="1.2564%" height="15" fill="rgb(224,192,53)" fg:x="13676" fg:w="1349"/><text x="12.9875%" y="1535.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (18 samples, 0.02%)</title><rect x="13.9958%" y="1733" width="0.0168%" height="15" fill="rgb(223,67,28)" fg:x="15027" fg:w="18"/><text x="14.2458%" y="1743.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (18 samples, 0.02%)</title><rect x="13.9958%" y="1717" width="0.0168%" height="15" fill="rgb(211,20,47)" fg:x="15027" fg:w="18"/><text x="14.2458%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="14.0014%" y="1701" width="0.0112%" height="15" fill="rgb(240,228,2)" fg:x="15033" fg:w="12"/><text x="14.2514%" y="1711.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="14.0014%" y="1685" width="0.0112%" height="15" fill="rgb(248,151,12)" fg:x="15033" fg:w="12"/><text x="14.2514%" y="1695.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (15 samples, 0.01%)</title><rect x="14.0340%" y="1589" width="0.0140%" height="15" fill="rgb(244,8,39)" fg:x="15068" fg:w="15"/><text x="14.2840%" y="1599.50"></text></g><g><title>crossbeam_epoch::default::with_handle (15 samples, 0.01%)</title><rect x="14.0340%" y="1573" width="0.0140%" height="15" fill="rgb(222,26,8)" fg:x="15068" fg:w="15"/><text x="14.2840%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="14.0340%" y="1557" width="0.0140%" height="15" fill="rgb(213,106,44)" fg:x="15068" fg:w="15"/><text x="14.2840%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (15 samples, 0.01%)</title><rect x="14.0340%" y="1541" width="0.0140%" height="15" fill="rgb(214,129,20)" fg:x="15068" fg:w="15"/><text x="14.2840%" y="1551.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="14.0340%" y="1525" width="0.0140%" height="15" fill="rgb(212,32,13)" fg:x="15068" fg:w="15"/><text x="14.2840%" y="1535.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="14.0340%" y="1509" width="0.0140%" height="15" fill="rgb(208,168,33)" fg:x="15068" fg:w="15"/><text x="14.2840%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="14.0340%" y="1493" width="0.0140%" height="15" fill="rgb(231,207,8)" fg:x="15068" fg:w="15"/><text x="14.2840%" y="1503.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (11 samples, 0.01%)</title><rect x="14.0563%" y="1461" width="0.0102%" height="15" fill="rgb(235,219,23)" fg:x="15092" fg:w="11"/><text x="14.3063%" y="1471.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="14.0563%" y="1445" width="0.0102%" height="15" fill="rgb(226,216,26)" fg:x="15092" fg:w="11"/><text x="14.3063%" y="1455.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (11 samples, 0.01%)</title><rect x="14.0563%" y="1429" width="0.0102%" height="15" fill="rgb(239,137,16)" fg:x="15092" fg:w="11"/><text x="14.3063%" y="1439.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (11 samples, 0.01%)</title><rect x="14.0563%" y="1413" width="0.0102%" height="15" fill="rgb(207,12,36)" fg:x="15092" fg:w="11"/><text x="14.3063%" y="1423.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (44 samples, 0.04%)</title><rect x="14.0275%" y="1653" width="0.0410%" height="15" fill="rgb(210,214,24)" fg:x="15061" fg:w="44"/><text x="14.2775%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (43 samples, 0.04%)</title><rect x="14.0284%" y="1637" width="0.0400%" height="15" fill="rgb(206,56,30)" fg:x="15062" fg:w="43"/><text x="14.2784%" y="1647.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (43 samples, 0.04%)</title><rect x="14.0284%" y="1621" width="0.0400%" height="15" fill="rgb(228,143,26)" fg:x="15062" fg:w="43"/><text x="14.2784%" y="1631.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (42 samples, 0.04%)</title><rect x="14.0293%" y="1605" width="0.0391%" height="15" fill="rgb(216,218,46)" fg:x="15063" fg:w="42"/><text x="14.2793%" y="1615.50"></text></g><g><title>crossbeam_epoch::default::pin (22 samples, 0.02%)</title><rect x="14.0479%" y="1589" width="0.0205%" height="15" fill="rgb(206,6,19)" fg:x="15083" fg:w="22"/><text x="14.2979%" y="1599.50"></text></g><g><title>crossbeam_epoch::default::with_handle (22 samples, 0.02%)</title><rect x="14.0479%" y="1573" width="0.0205%" height="15" fill="rgb(239,177,51)" fg:x="15083" fg:w="22"/><text x="14.2979%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="14.0479%" y="1557" width="0.0205%" height="15" fill="rgb(216,55,25)" fg:x="15083" fg:w="22"/><text x="14.2979%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (18 samples, 0.02%)</title><rect x="14.0517%" y="1541" width="0.0168%" height="15" fill="rgb(231,163,29)" fg:x="15087" fg:w="18"/><text x="14.3017%" y="1551.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (18 samples, 0.02%)</title><rect x="14.0517%" y="1525" width="0.0168%" height="15" fill="rgb(232,149,50)" fg:x="15087" fg:w="18"/><text x="14.3017%" y="1535.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (18 samples, 0.02%)</title><rect x="14.0517%" y="1509" width="0.0168%" height="15" fill="rgb(223,142,48)" fg:x="15087" fg:w="18"/><text x="14.3017%" y="1519.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (18 samples, 0.02%)</title><rect x="14.0517%" y="1493" width="0.0168%" height="15" fill="rgb(245,83,23)" fg:x="15087" fg:w="18"/><text x="14.3017%" y="1503.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (14 samples, 0.01%)</title><rect x="14.0554%" y="1477" width="0.0130%" height="15" fill="rgb(224,63,2)" fg:x="15091" fg:w="14"/><text x="14.3054%" y="1487.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (33 samples, 0.03%)</title><rect x="14.0889%" y="1573" width="0.0307%" height="15" fill="rgb(218,65,53)" fg:x="15127" fg:w="33"/><text x="14.3389%" y="1583.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (24 samples, 0.02%)</title><rect x="14.0973%" y="1557" width="0.0224%" height="15" fill="rgb(221,84,29)" fg:x="15136" fg:w="24"/><text x="14.3473%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (31 samples, 0.03%)</title><rect x="14.1234%" y="1573" width="0.0289%" height="15" fill="rgb(234,0,32)" fg:x="15164" fg:w="31"/><text x="14.3734%" y="1583.50"></text></g><g><title>crossbeam_epoch::default::with_handle (31 samples, 0.03%)</title><rect x="14.1234%" y="1557" width="0.0289%" height="15" fill="rgb(206,20,16)" fg:x="15164" fg:w="31"/><text x="14.3734%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.03%)</title><rect x="14.1253%" y="1541" width="0.0270%" height="15" fill="rgb(244,172,18)" fg:x="15166" fg:w="29"/><text x="14.3753%" y="1551.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (29 samples, 0.03%)</title><rect x="14.1253%" y="1525" width="0.0270%" height="15" fill="rgb(254,133,1)" fg:x="15166" fg:w="29"/><text x="14.3753%" y="1535.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (29 samples, 0.03%)</title><rect x="14.1253%" y="1509" width="0.0270%" height="15" fill="rgb(222,206,41)" fg:x="15166" fg:w="29"/><text x="14.3753%" y="1519.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (29 samples, 0.03%)</title><rect x="14.1253%" y="1493" width="0.0270%" height="15" fill="rgb(212,3,42)" fg:x="15166" fg:w="29"/><text x="14.3753%" y="1503.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (29 samples, 0.03%)</title><rect x="14.1253%" y="1477" width="0.0270%" height="15" fill="rgb(241,11,4)" fg:x="15166" fg:w="29"/><text x="14.3753%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (112 samples, 0.10%)</title><rect x="14.0731%" y="1621" width="0.1043%" height="15" fill="rgb(205,19,26)" fg:x="15110" fg:w="112"/><text x="14.3231%" y="1631.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (112 samples, 0.10%)</title><rect x="14.0731%" y="1605" width="0.1043%" height="15" fill="rgb(210,179,32)" fg:x="15110" fg:w="112"/><text x="14.3231%" y="1615.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (111 samples, 0.10%)</title><rect x="14.0740%" y="1589" width="0.1034%" height="15" fill="rgb(227,116,49)" fg:x="15111" fg:w="111"/><text x="14.3240%" y="1599.50"></text></g><g><title>crossbeam_epoch::default::pin (27 samples, 0.03%)</title><rect x="14.1523%" y="1573" width="0.0251%" height="15" fill="rgb(211,146,6)" fg:x="15195" fg:w="27"/><text x="14.4023%" y="1583.50"></text></g><g><title>crossbeam_epoch::default::with_handle (27 samples, 0.03%)</title><rect x="14.1523%" y="1557" width="0.0251%" height="15" fill="rgb(219,44,39)" fg:x="15195" fg:w="27"/><text x="14.4023%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.02%)</title><rect x="14.1616%" y="1541" width="0.0158%" height="15" fill="rgb(234,128,11)" fg:x="15205" fg:w="17"/><text x="14.4116%" y="1551.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (14 samples, 0.01%)</title><rect x="14.1644%" y="1525" width="0.0130%" height="15" fill="rgb(220,183,53)" fg:x="15208" fg:w="14"/><text x="14.4144%" y="1535.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (14 samples, 0.01%)</title><rect x="14.1644%" y="1509" width="0.0130%" height="15" fill="rgb(213,219,32)" fg:x="15208" fg:w="14"/><text x="14.4144%" y="1519.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (14 samples, 0.01%)</title><rect x="14.1644%" y="1493" width="0.0130%" height="15" fill="rgb(232,156,16)" fg:x="15208" fg:w="14"/><text x="14.4144%" y="1503.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (14 samples, 0.01%)</title><rect x="14.1644%" y="1477" width="0.0130%" height="15" fill="rgb(246,135,34)" fg:x="15208" fg:w="14"/><text x="14.4144%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (170 samples, 0.16%)</title><rect x="14.0200%" y="1701" width="0.1583%" height="15" fill="rgb(241,99,0)" fg:x="15053" fg:w="170"/><text x="14.2700%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (170 samples, 0.16%)</title><rect x="14.0200%" y="1685" width="0.1583%" height="15" fill="rgb(222,103,45)" fg:x="15053" fg:w="170"/><text x="14.2700%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (165 samples, 0.15%)</title><rect x="14.0247%" y="1669" width="0.1537%" height="15" fill="rgb(212,57,4)" fg:x="15058" fg:w="165"/><text x="14.2747%" y="1679.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (115 samples, 0.11%)</title><rect x="14.0712%" y="1653" width="0.1071%" height="15" fill="rgb(215,68,47)" fg:x="15108" fg:w="115"/><text x="14.3212%" y="1663.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (115 samples, 0.11%)</title><rect x="14.0712%" y="1637" width="0.1071%" height="15" fill="rgb(230,84,2)" fg:x="15108" fg:w="115"/><text x="14.3212%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (197 samples, 0.18%)</title><rect x="13.9958%" y="1765" width="0.1835%" height="15" fill="rgb(220,102,14)" fg:x="15027" fg:w="197"/><text x="14.2458%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (197 samples, 0.18%)</title><rect x="13.9958%" y="1749" width="0.1835%" height="15" fill="rgb(240,10,32)" fg:x="15027" fg:w="197"/><text x="14.2458%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (179 samples, 0.17%)</title><rect x="14.0126%" y="1733" width="0.1667%" height="15" fill="rgb(215,47,27)" fg:x="15045" fg:w="179"/><text x="14.2626%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (171 samples, 0.16%)</title><rect x="14.0200%" y="1717" width="0.1593%" height="15" fill="rgb(233,188,43)" fg:x="15053" fg:w="171"/><text x="14.2700%" y="1727.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (66 samples, 0.06%)</title><rect x="14.1849%" y="1733" width="0.0615%" height="15" fill="rgb(253,190,1)" fg:x="15230" fg:w="66"/><text x="14.4349%" y="1743.50"></text></g><g><title>crossbeam_epoch::default::with_handle (66 samples, 0.06%)</title><rect x="14.1849%" y="1717" width="0.0615%" height="15" fill="rgb(206,114,52)" fg:x="15230" fg:w="66"/><text x="14.4349%" y="1727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.04%)</title><rect x="14.2081%" y="1701" width="0.0382%" height="15" fill="rgb(233,120,37)" fg:x="15255" fg:w="41"/><text x="14.4581%" y="1711.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (40 samples, 0.04%)</title><rect x="14.2091%" y="1685" width="0.0373%" height="15" fill="rgb(214,52,39)" fg:x="15256" fg:w="40"/><text x="14.4591%" y="1695.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (40 samples, 0.04%)</title><rect x="14.2091%" y="1669" width="0.0373%" height="15" fill="rgb(223,80,29)" fg:x="15256" fg:w="40"/><text x="14.4591%" y="1679.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (38 samples, 0.04%)</title><rect x="14.2109%" y="1653" width="0.0354%" height="15" fill="rgb(230,101,40)" fg:x="15258" fg:w="38"/><text x="14.4609%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (38 samples, 0.04%)</title><rect x="14.2109%" y="1637" width="0.0354%" height="15" fill="rgb(219,211,8)" fg:x="15258" fg:w="38"/><text x="14.4609%" y="1647.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (12 samples, 0.01%)</title><rect x="14.2584%" y="1621" width="0.0112%" height="15" fill="rgb(252,126,28)" fg:x="15309" fg:w="12"/><text x="14.5084%" y="1631.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (105 samples, 0.10%)</title><rect x="14.1811%" y="1749" width="0.0978%" height="15" fill="rgb(215,56,38)" fg:x="15226" fg:w="105"/><text x="14.4311%" y="1759.50"></text></g><g><title>crossbeam_epoch::default::pin (35 samples, 0.03%)</title><rect x="14.2463%" y="1733" width="0.0326%" height="15" fill="rgb(249,55,44)" fg:x="15296" fg:w="35"/><text x="14.4963%" y="1743.50"></text></g><g><title>crossbeam_epoch::default::with_handle (35 samples, 0.03%)</title><rect x="14.2463%" y="1717" width="0.0326%" height="15" fill="rgb(220,221,32)" fg:x="15296" fg:w="35"/><text x="14.4963%" y="1727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="14.2501%" y="1701" width="0.0289%" height="15" fill="rgb(212,216,41)" fg:x="15300" fg:w="31"/><text x="14.5001%" y="1711.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (31 samples, 0.03%)</title><rect x="14.2501%" y="1685" width="0.0289%" height="15" fill="rgb(228,213,43)" fg:x="15300" fg:w="31"/><text x="14.5001%" y="1695.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (31 samples, 0.03%)</title><rect x="14.2501%" y="1669" width="0.0289%" height="15" fill="rgb(211,31,26)" fg:x="15300" fg:w="31"/><text x="14.5001%" y="1679.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (31 samples, 0.03%)</title><rect x="14.2501%" y="1653" width="0.0289%" height="15" fill="rgb(229,202,19)" fg:x="15300" fg:w="31"/><text x="14.5001%" y="1663.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (31 samples, 0.03%)</title><rect x="14.2501%" y="1637" width="0.0289%" height="15" fill="rgb(229,105,46)" fg:x="15300" fg:w="31"/><text x="14.5001%" y="1647.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (332 samples, 0.31%)</title><rect x="13.9939%" y="1781" width="0.3092%" height="15" fill="rgb(235,108,1)" fg:x="15025" fg:w="332"/><text x="14.2439%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (133 samples, 0.12%)</title><rect x="14.1793%" y="1765" width="0.1239%" height="15" fill="rgb(245,111,35)" fg:x="15224" fg:w="133"/><text x="14.4293%" y="1775.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (26 samples, 0.02%)</title><rect x="14.2789%" y="1749" width="0.0242%" height="15" fill="rgb(219,185,31)" fg:x="15331" fg:w="26"/><text x="14.5289%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (21 samples, 0.02%)</title><rect x="14.2836%" y="1733" width="0.0196%" height="15" fill="rgb(214,4,43)" fg:x="15336" fg:w="21"/><text x="14.5336%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="14.2836%" y="1717" width="0.0196%" height="15" fill="rgb(235,227,40)" fg:x="15336" fg:w="21"/><text x="14.5336%" y="1727.50"></text></g><g><title>__sched_yield (72 samples, 0.07%)</title><rect x="14.3031%" y="1765" width="0.0671%" height="15" fill="rgb(230,88,30)" fg:x="15357" fg:w="72"/><text x="14.5531%" y="1775.50"></text></g><g><title>[unknown] (67 samples, 0.06%)</title><rect x="14.3078%" y="1749" width="0.0624%" height="15" fill="rgb(216,217,1)" fg:x="15362" fg:w="67"/><text x="14.5578%" y="1759.50"></text></g><g><title>[unknown] (63 samples, 0.06%)</title><rect x="14.3115%" y="1733" width="0.0587%" height="15" fill="rgb(248,139,50)" fg:x="15366" fg:w="63"/><text x="14.5615%" y="1743.50"></text></g><g><title>[unknown] (62 samples, 0.06%)</title><rect x="14.3125%" y="1717" width="0.0577%" height="15" fill="rgb(233,1,21)" fg:x="15367" fg:w="62"/><text x="14.5625%" y="1727.50"></text></g><g><title>[unknown] (59 samples, 0.05%)</title><rect x="14.3153%" y="1701" width="0.0550%" height="15" fill="rgb(215,183,12)" fg:x="15370" fg:w="59"/><text x="14.5653%" y="1711.50"></text></g><g><title>[unknown] (51 samples, 0.05%)</title><rect x="14.3227%" y="1685" width="0.0475%" height="15" fill="rgb(229,104,42)" fg:x="15378" fg:w="51"/><text x="14.5727%" y="1695.50"></text></g><g><title>[unknown] (43 samples, 0.04%)</title><rect x="14.3302%" y="1669" width="0.0400%" height="15" fill="rgb(243,34,48)" fg:x="15386" fg:w="43"/><text x="14.5802%" y="1679.50"></text></g><g><title>[unknown] (35 samples, 0.03%)</title><rect x="14.3376%" y="1653" width="0.0326%" height="15" fill="rgb(239,11,44)" fg:x="15394" fg:w="35"/><text x="14.5876%" y="1663.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="14.3488%" y="1637" width="0.0214%" height="15" fill="rgb(231,98,35)" fg:x="15406" fg:w="23"/><text x="14.5988%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (14 samples, 0.01%)</title><rect x="14.3767%" y="1749" width="0.0130%" height="15" fill="rgb(233,28,25)" fg:x="15436" fg:w="14"/><text x="14.6267%" y="1759.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="14.3767%" y="1733" width="0.0130%" height="15" fill="rgb(234,123,11)" fg:x="15436" fg:w="14"/><text x="14.6267%" y="1743.50"></text></g><g><title>std::sync::poison::Flag::done (14 samples, 0.01%)</title><rect x="14.3767%" y="1717" width="0.0130%" height="15" fill="rgb(220,69,3)" fg:x="15436" fg:w="14"/><text x="14.6267%" y="1727.50"></text></g><g><title>rayon_core::latch::CoreLatch::wake_up (16 samples, 0.01%)</title><rect x="14.3898%" y="1749" width="0.0149%" height="15" fill="rgb(214,64,36)" fg:x="15450" fg:w="16"/><text x="14.6398%" y="1759.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (16 samples, 0.01%)</title><rect x="14.3898%" y="1733" width="0.0149%" height="15" fill="rgb(211,138,32)" fg:x="15450" fg:w="16"/><text x="14.6398%" y="1743.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (28 samples, 0.03%)</title><rect x="14.4335%" y="1669" width="0.0261%" height="15" fill="rgb(213,118,47)" fg:x="15497" fg:w="28"/><text x="14.6835%" y="1679.50"></text></g><g><title>std::sys::unix::futex::futex_wait (51 samples, 0.05%)</title><rect x="14.4158%" y="1685" width="0.0475%" height="15" fill="rgb(243,124,49)" fg:x="15478" fg:w="51"/><text x="14.6658%" y="1695.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (112 samples, 0.10%)</title><rect x="14.3730%" y="1765" width="0.1043%" height="15" fill="rgb(221,30,28)" fg:x="15432" fg:w="112"/><text x="14.6230%" y="1775.50"></text></g><g><title>std::sync::condvar::Condvar::wait (74 samples, 0.07%)</title><rect x="14.4084%" y="1749" width="0.0689%" height="15" fill="rgb(246,37,13)" fg:x="15470" fg:w="74"/><text x="14.6584%" y="1759.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (71 samples, 0.07%)</title><rect x="14.4112%" y="1733" width="0.0661%" height="15" fill="rgb(249,66,14)" fg:x="15473" fg:w="71"/><text x="14.6612%" y="1743.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (71 samples, 0.07%)</title><rect x="14.4112%" y="1717" width="0.0661%" height="15" fill="rgb(213,166,5)" fg:x="15473" fg:w="71"/><text x="14.6612%" y="1727.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (66 samples, 0.06%)</title><rect x="14.4158%" y="1701" width="0.0615%" height="15" fill="rgb(221,66,24)" fg:x="15478" fg:w="66"/><text x="14.6658%" y="1711.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="14.4633%" y="1685" width="0.0140%" height="15" fill="rgb(210,132,17)" fg:x="15529" fg:w="15"/><text x="14.7133%" y="1695.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (195 samples, 0.18%)</title><rect x="14.3031%" y="1781" width="0.1816%" height="15" fill="rgb(243,202,5)" fg:x="15357" fg:w="195"/><text x="14.5531%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (12 samples, 0.01%)</title><rect x="14.4885%" y="1733" width="0.0112%" height="15" fill="rgb(233,70,48)" fg:x="15556" fg:w="12"/><text x="14.7385%" y="1743.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="14.4885%" y="1717" width="0.0112%" height="15" fill="rgb(238,41,26)" fg:x="15556" fg:w="12"/><text x="14.7385%" y="1727.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="14.4885%" y="1701" width="0.0112%" height="15" fill="rgb(241,19,31)" fg:x="15556" fg:w="12"/><text x="14.7385%" y="1711.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="14.4885%" y="1685" width="0.0112%" height="15" fill="rgb(214,76,10)" fg:x="15556" fg:w="12"/><text x="14.7385%" y="1695.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (14,969 samples, 13.94%)</title><rect x="0.5775%" y="1861" width="13.9418%" height="15" fill="rgb(254,202,22)" fg:x="620" fg:w="14969"/><text x="0.8275%" y="1871.50">&lt;rayon_core::registry..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (14,969 samples, 13.94%)</title><rect x="0.5775%" y="1845" width="13.9418%" height="15" fill="rgb(214,72,24)" fg:x="620" fg:w="14969"/><text x="0.8275%" y="1855.50">rayon_core::registry:..</text></g><g><title>rayon_core::registry::main_loop (14,969 samples, 13.94%)</title><rect x="0.5775%" y="1829" width="13.9418%" height="15" fill="rgb(221,92,46)" fg:x="620" fg:w="14969"/><text x="0.8275%" y="1839.50">rayon_core::registry:..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (14,969 samples, 13.94%)</title><rect x="0.5775%" y="1813" width="13.9418%" height="15" fill="rgb(246,13,50)" fg:x="620" fg:w="14969"/><text x="0.8275%" y="1823.50">rayon_core::registry:..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (14,969 samples, 13.94%)</title><rect x="0.5775%" y="1797" width="13.9418%" height="15" fill="rgb(240,165,38)" fg:x="620" fg:w="14969"/><text x="0.8275%" y="1807.50">rayon_core::registry:..</text></g><g><title>rayon_core::sleep::Sleep::work_found (37 samples, 0.03%)</title><rect x="14.4848%" y="1781" width="0.0345%" height="15" fill="rgb(241,24,51)" fg:x="15552" fg:w="37"/><text x="14.7348%" y="1791.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (34 samples, 0.03%)</title><rect x="14.4876%" y="1765" width="0.0317%" height="15" fill="rgb(227,51,44)" fg:x="15555" fg:w="34"/><text x="14.7376%" y="1775.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (34 samples, 0.03%)</title><rect x="14.4876%" y="1749" width="0.0317%" height="15" fill="rgb(231,121,3)" fg:x="15555" fg:w="34"/><text x="14.7376%" y="1759.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="14.4997%" y="1733" width="0.0196%" height="15" fill="rgb(245,3,41)" fg:x="15568" fg:w="21"/><text x="14.7497%" y="1743.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="14.5062%" y="1717" width="0.0130%" height="15" fill="rgb(214,13,26)" fg:x="15575" fg:w="14"/><text x="14.7562%" y="1727.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="14.5062%" y="1701" width="0.0130%" height="15" fill="rgb(252,75,11)" fg:x="15575" fg:w="14"/><text x="14.7562%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (14,973 samples, 13.95%)</title><rect x="0.5775%" y="1957" width="13.9455%" height="15" fill="rgb(218,226,17)" fg:x="620" fg:w="14973"/><text x="0.8275%" y="1967.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (14,973 samples, 13.95%)</title><rect x="0.5775%" y="1941" width="13.9455%" height="15" fill="rgb(248,89,38)" fg:x="620" fg:w="14973"/><text x="0.8275%" y="1951.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,973 samples, 13.95%)</title><rect x="0.5775%" y="1925" width="13.9455%" height="15" fill="rgb(237,73,46)" fg:x="620" fg:w="14973"/><text x="0.8275%" y="1935.50">std::panicking::try::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,973 samples, 13.95%)</title><rect x="0.5775%" y="1909" width="13.9455%" height="15" fill="rgb(242,78,33)" fg:x="620" fg:w="14973"/><text x="0.8275%" y="1919.50">&lt;core::panic::unwind_..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (14,973 samples, 13.95%)</title><rect x="0.5775%" y="1893" width="13.9455%" height="15" fill="rgb(235,60,3)" fg:x="620" fg:w="14973"/><text x="0.8275%" y="1903.50">std::thread::Builder:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14,973 samples, 13.95%)</title><rect x="0.5775%" y="1877" width="13.9455%" height="15" fill="rgb(216,172,19)" fg:x="620" fg:w="14973"/><text x="0.8275%" y="1887.50">std::sys_common::back..</text></g><g><title>std::sys::unix::thread::guard::current (14 samples, 0.01%)</title><rect x="14.5229%" y="1957" width="0.0130%" height="15" fill="rgb(227,6,42)" fg:x="15593" fg:w="14"/><text x="14.7729%" y="1967.50"></text></g><g><title>pthread_getattr_np (14 samples, 0.01%)</title><rect x="14.5229%" y="1941" width="0.0130%" height="15" fill="rgb(223,207,42)" fg:x="15593" fg:w="14"/><text x="14.7729%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,993 samples, 13.96%)</title><rect x="0.5765%" y="2021" width="13.9641%" height="15" fill="rgb(246,138,30)" fg:x="619" fg:w="14993"/><text x="0.8265%" y="2031.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,993 samples, 13.96%)</title><rect x="0.5765%" y="2005" width="13.9641%" height="15" fill="rgb(251,199,47)" fg:x="619" fg:w="14993"/><text x="0.8265%" y="2015.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14,993 samples, 13.96%)</title><rect x="0.5765%" y="1989" width="13.9641%" height="15" fill="rgb(228,218,44)" fg:x="619" fg:w="14993"/><text x="0.8265%" y="1999.50">core::ops::function::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (14,993 samples, 13.96%)</title><rect x="0.5765%" y="1973" width="13.9641%" height="15" fill="rgb(220,68,6)" fg:x="619" fg:w="14993"/><text x="0.8265%" y="1983.50">std::thread::Builder:..</text></g><g><title>sigaltstack (15 samples, 0.01%)</title><rect x="14.5406%" y="1989" width="0.0140%" height="15" fill="rgb(240,60,26)" fg:x="15612" fg:w="15"/><text x="14.7906%" y="1999.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="14.5416%" y="1973" width="0.0130%" height="15" fill="rgb(211,200,19)" fg:x="15613" fg:w="14"/><text x="14.7916%" y="1983.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="14.5416%" y="1957" width="0.0130%" height="15" fill="rgb(242,145,30)" fg:x="15613" fg:w="14"/><text x="14.7916%" y="1967.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="14.5444%" y="1941" width="0.0102%" height="15" fill="rgb(225,64,13)" fg:x="15616" fg:w="11"/><text x="14.7944%" y="1951.50"></text></g><g><title>[libc.so.6] (15,127 samples, 14.09%)</title><rect x="0.4880%" y="2053" width="14.0889%" height="15" fill="rgb(218,103,35)" fg:x="524" fg:w="15127"/><text x="0.7380%" y="2063.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15,034 samples, 14.00%)</title><rect x="0.5747%" y="2037" width="14.0023%" height="15" fill="rgb(216,93,46)" fg:x="617" fg:w="15034"/><text x="0.8247%" y="2047.50">std::sys::unix::threa..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (39 samples, 0.04%)</title><rect x="14.5406%" y="2021" width="0.0363%" height="15" fill="rgb(225,159,27)" fg:x="15612" fg:w="39"/><text x="14.7906%" y="2031.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (39 samples, 0.04%)</title><rect x="14.5406%" y="2005" width="0.0363%" height="15" fill="rgb(225,204,11)" fg:x="15612" fg:w="39"/><text x="14.7906%" y="2015.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (24 samples, 0.02%)</title><rect x="14.5546%" y="1989" width="0.0224%" height="15" fill="rgb(205,56,4)" fg:x="15627" fg:w="24"/><text x="14.8046%" y="1999.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (24 samples, 0.02%)</title><rect x="14.5546%" y="1973" width="0.0224%" height="15" fill="rgb(206,6,35)" fg:x="15627" fg:w="24"/><text x="14.8046%" y="1983.50"></text></g><g><title>std::sys::unix::os::page_size (11 samples, 0.01%)</title><rect x="14.5667%" y="1957" width="0.0102%" height="15" fill="rgb(247,73,52)" fg:x="15640" fg:w="11"/><text x="14.8167%" y="1967.50"></text></g><g><title>__sysconf (11 samples, 0.01%)</title><rect x="14.5667%" y="1941" width="0.0102%" height="15" fill="rgb(246,97,4)" fg:x="15640" fg:w="11"/><text x="14.8167%" y="1951.50"></text></g><g><title>[libc.so.6] (15,135 samples, 14.10%)</title><rect x="0.4852%" y="2069" width="14.0964%" height="15" fill="rgb(212,37,15)" fg:x="521" fg:w="15135"/><text x="0.7352%" y="2079.50">[libc.so.6]</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.01%)</title><rect x="14.6245%" y="2037" width="0.0121%" height="15" fill="rgb(208,130,40)" fg:x="15702" fg:w="13"/><text x="14.8745%" y="2047.50"></text></g><g><title>core::clone::Clone::clone (13 samples, 0.01%)</title><rect x="14.6245%" y="2021" width="0.0121%" height="15" fill="rgb(236,55,29)" fg:x="15702" fg:w="13"/><text x="14.8745%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (21 samples, 0.02%)</title><rect x="14.6245%" y="2053" width="0.0196%" height="15" fill="rgb(209,156,45)" fg:x="15702" fg:w="21"/><text x="14.8745%" y="2063.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map::{{closure}} (22 samples, 0.02%)</title><rect x="14.6505%" y="1941" width="0.0205%" height="15" fill="rgb(249,107,4)" fg:x="15730" fg:w="22"/><text x="14.9005%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="14.6505%" y="2053" width="0.0251%" height="15" fill="rgb(227,7,13)" fg:x="15730" fg:w="27"/><text x="14.9005%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="14.6505%" y="2037" width="0.0251%" height="15" fill="rgb(250,129,14)" fg:x="15730" fg:w="27"/><text x="14.9005%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (27 samples, 0.03%)</title><rect x="14.6505%" y="2021" width="0.0251%" height="15" fill="rgb(229,92,13)" fg:x="15730" fg:w="27"/><text x="14.9005%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (27 samples, 0.03%)</title><rect x="14.6505%" y="2005" width="0.0251%" height="15" fill="rgb(245,98,39)" fg:x="15730" fg:w="27"/><text x="14.9005%" y="2015.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="14.6505%" y="1989" width="0.0251%" height="15" fill="rgb(234,135,48)" fg:x="15730" fg:w="27"/><text x="14.9005%" y="1999.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27 samples, 0.03%)</title><rect x="14.6505%" y="1973" width="0.0251%" height="15" fill="rgb(230,98,28)" fg:x="15730" fg:w="27"/><text x="14.9005%" y="1983.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (27 samples, 0.03%)</title><rect x="14.6505%" y="1957" width="0.0251%" height="15" fill="rgb(223,121,0)" fg:x="15730" fg:w="27"/><text x="14.9005%" y="1967.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (324 samples, 0.30%)</title><rect x="14.6906%" y="1525" width="0.3018%" height="15" fill="rgb(234,173,33)" fg:x="15773" fg:w="324"/><text x="14.9406%" y="1535.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (324 samples, 0.30%)</title><rect x="14.6906%" y="1509" width="0.3018%" height="15" fill="rgb(245,47,8)" fg:x="15773" fg:w="324"/><text x="14.9406%" y="1519.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (324 samples, 0.30%)</title><rect x="14.6906%" y="1493" width="0.3018%" height="15" fill="rgb(205,17,20)" fg:x="15773" fg:w="324"/><text x="14.9406%" y="1503.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (323 samples, 0.30%)</title><rect x="14.6915%" y="1477" width="0.3008%" height="15" fill="rgb(232,151,16)" fg:x="15774" fg:w="323"/><text x="14.9415%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (56 samples, 0.05%)</title><rect x="14.9402%" y="1461" width="0.0522%" height="15" fill="rgb(208,30,32)" fg:x="16041" fg:w="56"/><text x="15.1902%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (344 samples, 0.32%)</title><rect x="14.6766%" y="1605" width="0.3204%" height="15" fill="rgb(254,26,3)" fg:x="15758" fg:w="344"/><text x="14.9266%" y="1615.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (344 samples, 0.32%)</title><rect x="14.6766%" y="1589" width="0.3204%" height="15" fill="rgb(240,177,30)" fg:x="15758" fg:w="344"/><text x="14.9266%" y="1599.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (342 samples, 0.32%)</title><rect x="14.6785%" y="1573" width="0.3185%" height="15" fill="rgb(248,76,44)" fg:x="15760" fg:w="342"/><text x="14.9285%" y="1583.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (337 samples, 0.31%)</title><rect x="14.6831%" y="1557" width="0.3139%" height="15" fill="rgb(241,186,54)" fg:x="15765" fg:w="337"/><text x="14.9331%" y="1567.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (333 samples, 0.31%)</title><rect x="14.6869%" y="1541" width="0.3101%" height="15" fill="rgb(249,171,29)" fg:x="15769" fg:w="333"/><text x="14.9369%" y="1551.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (355 samples, 0.33%)</title><rect x="14.6766%" y="1845" width="0.3306%" height="15" fill="rgb(237,151,44)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (355 samples, 0.33%)</title><rect x="14.6766%" y="1829" width="0.3306%" height="15" fill="rgb(228,174,30)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1839.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (355 samples, 0.33%)</title><rect x="14.6766%" y="1813" width="0.3306%" height="15" fill="rgb(252,14,37)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1823.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (355 samples, 0.33%)</title><rect x="14.6766%" y="1797" width="0.3306%" height="15" fill="rgb(207,111,40)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1807.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (355 samples, 0.33%)</title><rect x="14.6766%" y="1781" width="0.3306%" height="15" fill="rgb(248,171,54)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1791.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (355 samples, 0.33%)</title><rect x="14.6766%" y="1765" width="0.3306%" height="15" fill="rgb(211,127,2)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (355 samples, 0.33%)</title><rect x="14.6766%" y="1749" width="0.3306%" height="15" fill="rgb(236,87,47)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1759.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (355 samples, 0.33%)</title><rect x="14.6766%" y="1733" width="0.3306%" height="15" fill="rgb(223,190,45)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1743.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (355 samples, 0.33%)</title><rect x="14.6766%" y="1717" width="0.3306%" height="15" fill="rgb(215,5,16)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1727.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (355 samples, 0.33%)</title><rect x="14.6766%" y="1701" width="0.3306%" height="15" fill="rgb(252,82,33)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1711.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (355 samples, 0.33%)</title><rect x="14.6766%" y="1685" width="0.3306%" height="15" fill="rgb(247,213,44)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (355 samples, 0.33%)</title><rect x="14.6766%" y="1669" width="0.3306%" height="15" fill="rgb(205,196,44)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1679.50"></text></g><g><title>core::ops::function::FnOnce::call_once (355 samples, 0.33%)</title><rect x="14.6766%" y="1653" width="0.3306%" height="15" fill="rgb(237,96,54)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1663.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (355 samples, 0.33%)</title><rect x="14.6766%" y="1637" width="0.3306%" height="15" fill="rgb(230,113,34)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1647.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (355 samples, 0.33%)</title><rect x="14.6766%" y="1621" width="0.3306%" height="15" fill="rgb(221,224,12)" fg:x="15758" fg:w="355"/><text x="14.9266%" y="1631.50"></text></g><g><title>bcs::ser::serialize_into (11 samples, 0.01%)</title><rect x="14.9970%" y="1605" width="0.0102%" height="15" fill="rgb(219,112,44)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.01%)</title><rect x="14.9970%" y="1589" width="0.0102%" height="15" fill="rgb(210,31,13)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (11 samples, 0.01%)</title><rect x="14.9970%" y="1573" width="0.0102%" height="15" fill="rgb(230,25,16)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (11 samples, 0.01%)</title><rect x="14.9970%" y="1557" width="0.0102%" height="15" fill="rgb(246,108,53)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (11 samples, 0.01%)</title><rect x="14.9970%" y="1541" width="0.0102%" height="15" fill="rgb(241,172,50)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1551.50"></text></g><g><title>serde_bytes::serialize (11 samples, 0.01%)</title><rect x="14.9970%" y="1525" width="0.0102%" height="15" fill="rgb(235,141,10)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (11 samples, 0.01%)</title><rect x="14.9970%" y="1509" width="0.0102%" height="15" fill="rgb(220,174,43)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (11 samples, 0.01%)</title><rect x="14.9970%" y="1493" width="0.0102%" height="15" fill="rgb(215,181,40)" fg:x="16102" fg:w="11"/><text x="15.2470%" y="1503.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (312 samples, 0.29%)</title><rect x="15.0212%" y="1525" width="0.2906%" height="15" fill="rgb(230,97,2)" fg:x="16128" fg:w="312"/><text x="15.2712%" y="1535.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (310 samples, 0.29%)</title><rect x="15.0231%" y="1509" width="0.2887%" height="15" fill="rgb(211,25,27)" fg:x="16130" fg:w="310"/><text x="15.2731%" y="1519.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (310 samples, 0.29%)</title><rect x="15.0231%" y="1493" width="0.2887%" height="15" fill="rgb(230,87,26)" fg:x="16130" fg:w="310"/><text x="15.2731%" y="1503.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (308 samples, 0.29%)</title><rect x="15.0250%" y="1477" width="0.2869%" height="15" fill="rgb(227,160,17)" fg:x="16132" fg:w="308"/><text x="15.2750%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (54 samples, 0.05%)</title><rect x="15.2615%" y="1461" width="0.0503%" height="15" fill="rgb(244,85,34)" fg:x="16386" fg:w="54"/><text x="15.5115%" y="1471.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (330 samples, 0.31%)</title><rect x="15.0073%" y="1573" width="0.3074%" height="15" fill="rgb(207,70,0)" fg:x="16113" fg:w="330"/><text x="15.2573%" y="1583.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (327 samples, 0.30%)</title><rect x="15.0101%" y="1557" width="0.3046%" height="15" fill="rgb(223,129,7)" fg:x="16116" fg:w="327"/><text x="15.2601%" y="1567.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (324 samples, 0.30%)</title><rect x="15.0129%" y="1541" width="0.3018%" height="15" fill="rgb(246,105,7)" fg:x="16119" fg:w="324"/><text x="15.2629%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (332 samples, 0.31%)</title><rect x="15.0073%" y="1605" width="0.3092%" height="15" fill="rgb(215,154,42)" fg:x="16113" fg:w="332"/><text x="15.2573%" y="1615.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (332 samples, 0.31%)</title><rect x="15.0073%" y="1589" width="0.3092%" height="15" fill="rgb(220,215,30)" fg:x="16113" fg:w="332"/><text x="15.2573%" y="1599.50"></text></g><g><title>tiny_keccak::Buffer::xorin (20 samples, 0.02%)</title><rect x="15.3230%" y="1429" width="0.0186%" height="15" fill="rgb(228,81,51)" fg:x="16452" fg:w="20"/><text x="15.5730%" y="1439.50"></text></g><g><title>tiny_keccak::Buffer::execute (20 samples, 0.02%)</title><rect x="15.3230%" y="1413" width="0.0186%" height="15" fill="rgb(247,71,54)" fg:x="16452" fg:w="20"/><text x="15.5730%" y="1423.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (18 samples, 0.02%)</title><rect x="15.3249%" y="1397" width="0.0168%" height="15" fill="rgb(234,176,34)" fg:x="16454" fg:w="18"/><text x="15.5749%" y="1407.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (658 samples, 0.61%)</title><rect x="15.0073%" y="1797" width="0.6128%" height="15" fill="rgb(241,103,54)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1807.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (658 samples, 0.61%)</title><rect x="15.0073%" y="1781" width="0.6128%" height="15" fill="rgb(228,22,34)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1791.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (658 samples, 0.61%)</title><rect x="15.0073%" y="1765" width="0.6128%" height="15" fill="rgb(241,179,48)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (658 samples, 0.61%)</title><rect x="15.0073%" y="1749" width="0.6128%" height="15" fill="rgb(235,167,37)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1759.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (658 samples, 0.61%)</title><rect x="15.0073%" y="1733" width="0.6128%" height="15" fill="rgb(213,109,30)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1743.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (658 samples, 0.61%)</title><rect x="15.0073%" y="1717" width="0.6128%" height="15" fill="rgb(222,172,16)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1727.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (658 samples, 0.61%)</title><rect x="15.0073%" y="1701" width="0.6128%" height="15" fill="rgb(233,192,5)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1711.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (658 samples, 0.61%)</title><rect x="15.0073%" y="1685" width="0.6128%" height="15" fill="rgb(247,189,41)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (658 samples, 0.61%)</title><rect x="15.0073%" y="1669" width="0.6128%" height="15" fill="rgb(218,134,47)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1679.50"></text></g><g><title>core::ops::function::FnOnce::call_once (658 samples, 0.61%)</title><rect x="15.0073%" y="1653" width="0.6128%" height="15" fill="rgb(216,29,3)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1663.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (658 samples, 0.61%)</title><rect x="15.0073%" y="1637" width="0.6128%" height="15" fill="rgb(246,140,12)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1647.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (658 samples, 0.61%)</title><rect x="15.0073%" y="1621" width="0.6128%" height="15" fill="rgb(230,136,11)" fg:x="16113" fg:w="658"/><text x="15.2573%" y="1631.50"></text></g><g><title>bcs::ser::serialize_into (326 samples, 0.30%)</title><rect x="15.3165%" y="1605" width="0.3036%" height="15" fill="rgb(247,22,47)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (326 samples, 0.30%)</title><rect x="15.3165%" y="1589" width="0.3036%" height="15" fill="rgb(218,84,22)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (326 samples, 0.30%)</title><rect x="15.3165%" y="1573" width="0.3036%" height="15" fill="rgb(216,87,39)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (326 samples, 0.30%)</title><rect x="15.3165%" y="1557" width="0.3036%" height="15" fill="rgb(221,178,8)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (326 samples, 0.30%)</title><rect x="15.3165%" y="1541" width="0.3036%" height="15" fill="rgb(230,42,11)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1551.50"></text></g><g><title>serde_bytes::serialize (326 samples, 0.30%)</title><rect x="15.3165%" y="1525" width="0.3036%" height="15" fill="rgb(237,229,4)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (326 samples, 0.30%)</title><rect x="15.3165%" y="1509" width="0.3036%" height="15" fill="rgb(222,31,33)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (326 samples, 0.30%)</title><rect x="15.3165%" y="1493" width="0.3036%" height="15" fill="rgb(210,17,39)" fg:x="16445" fg:w="326"/><text x="15.5665%" y="1503.50"></text></g><g><title>std::io::Write::write_all (324 samples, 0.30%)</title><rect x="15.3183%" y="1477" width="0.3018%" height="15" fill="rgb(244,93,20)" fg:x="16447" fg:w="324"/><text x="15.5683%" y="1487.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (324 samples, 0.30%)</title><rect x="15.3183%" y="1461" width="0.3018%" height="15" fill="rgb(210,40,47)" fg:x="16447" fg:w="324"/><text x="15.5683%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (324 samples, 0.30%)</title><rect x="15.3183%" y="1445" width="0.3018%" height="15" fill="rgb(239,211,47)" fg:x="16447" fg:w="324"/><text x="15.5683%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (299 samples, 0.28%)</title><rect x="15.3416%" y="1429" width="0.2785%" height="15" fill="rgb(251,223,49)" fg:x="16472" fg:w="299"/><text x="15.5916%" y="1439.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (299 samples, 0.28%)</title><rect x="15.3416%" y="1413" width="0.2785%" height="15" fill="rgb(221,149,5)" fg:x="16472" fg:w="299"/><text x="15.5916%" y="1423.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (299 samples, 0.28%)</title><rect x="15.3416%" y="1397" width="0.2785%" height="15" fill="rgb(219,224,51)" fg:x="16472" fg:w="299"/><text x="15.5916%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (52 samples, 0.05%)</title><rect x="15.5717%" y="1381" width="0.0484%" height="15" fill="rgb(223,7,8)" fg:x="16719" fg:w="52"/><text x="15.8217%" y="1391.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="15.6397%" y="1461" width="0.0177%" height="15" fill="rgb(241,217,22)" fg:x="16792" fg:w="19"/><text x="15.8897%" y="1471.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="15.6648%" y="1381" width="0.0233%" height="15" fill="rgb(248,209,0)" fg:x="16819" fg:w="25"/><text x="15.9148%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (49 samples, 0.05%)</title><rect x="15.6881%" y="1381" width="0.0456%" height="15" fill="rgb(217,205,4)" fg:x="16844" fg:w="49"/><text x="15.9381%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.04%)</title><rect x="15.6890%" y="1365" width="0.0447%" height="15" fill="rgb(228,124,39)" fg:x="16845" fg:w="48"/><text x="15.9390%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.04%)</title><rect x="15.6890%" y="1349" width="0.0447%" height="15" fill="rgb(250,116,42)" fg:x="16845" fg:w="48"/><text x="15.9390%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.04%)</title><rect x="15.6909%" y="1333" width="0.0428%" height="15" fill="rgb(223,202,9)" fg:x="16847" fg:w="46"/><text x="15.9409%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.04%)</title><rect x="15.6909%" y="1317" width="0.0428%" height="15" fill="rgb(242,222,40)" fg:x="16847" fg:w="46"/><text x="15.9409%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 0.04%)</title><rect x="15.6909%" y="1301" width="0.0428%" height="15" fill="rgb(229,99,46)" fg:x="16847" fg:w="46"/><text x="15.9409%" y="1311.50"></text></g><g><title>malloc (42 samples, 0.04%)</title><rect x="15.6946%" y="1285" width="0.0391%" height="15" fill="rgb(225,56,46)" fg:x="16851" fg:w="42"/><text x="15.9446%" y="1295.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="15.7151%" y="1269" width="0.0186%" height="15" fill="rgb(227,94,5)" fg:x="16873" fg:w="20"/><text x="15.9651%" y="1279.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1749" width="0.1378%" height="15" fill="rgb(205,112,38)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1733" width="0.1378%" height="15" fill="rgb(231,133,46)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (148 samples, 0.14%)</title><rect x="15.6201%" y="1717" width="0.1378%" height="15" fill="rgb(217,16,9)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (148 samples, 0.14%)</title><rect x="15.6201%" y="1701" width="0.1378%" height="15" fill="rgb(249,173,9)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (148 samples, 0.14%)</title><rect x="15.6201%" y="1685" width="0.1378%" height="15" fill="rgb(205,163,53)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1695.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1669" width="0.1378%" height="15" fill="rgb(217,54,41)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1653" width="0.1378%" height="15" fill="rgb(228,216,12)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1637" width="0.1378%" height="15" fill="rgb(244,228,15)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (148 samples, 0.14%)</title><rect x="15.6201%" y="1621" width="0.1378%" height="15" fill="rgb(221,176,53)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (148 samples, 0.14%)</title><rect x="15.6201%" y="1605" width="0.1378%" height="15" fill="rgb(205,94,34)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (148 samples, 0.14%)</title><rect x="15.6201%" y="1589" width="0.1378%" height="15" fill="rgb(213,110,48)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1599.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1573" width="0.1378%" height="15" fill="rgb(236,142,28)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1583.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1557" width="0.1378%" height="15" fill="rgb(225,135,29)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1541" width="0.1378%" height="15" fill="rgb(252,45,31)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (148 samples, 0.14%)</title><rect x="15.6201%" y="1525" width="0.1378%" height="15" fill="rgb(211,187,50)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (148 samples, 0.14%)</title><rect x="15.6201%" y="1509" width="0.1378%" height="15" fill="rgb(229,109,7)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (148 samples, 0.14%)</title><rect x="15.6201%" y="1493" width="0.1378%" height="15" fill="rgb(251,131,51)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1503.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="15.6201%" y="1477" width="0.1378%" height="15" fill="rgb(251,180,35)" fg:x="16771" fg:w="148"/><text x="15.8701%" y="1487.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (108 samples, 0.10%)</title><rect x="15.6574%" y="1461" width="0.1006%" height="15" fill="rgb(211,46,32)" fg:x="16811" fg:w="108"/><text x="15.9074%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (105 samples, 0.10%)</title><rect x="15.6602%" y="1445" width="0.0978%" height="15" fill="rgb(248,123,17)" fg:x="16814" fg:w="105"/><text x="15.9102%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 0.09%)</title><rect x="15.6639%" y="1429" width="0.0941%" height="15" fill="rgb(227,141,18)" fg:x="16818" fg:w="101"/><text x="15.9139%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (101 samples, 0.09%)</title><rect x="15.6639%" y="1413" width="0.0941%" height="15" fill="rgb(216,102,9)" fg:x="16818" fg:w="101"/><text x="15.9139%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 0.09%)</title><rect x="15.6639%" y="1397" width="0.0941%" height="15" fill="rgb(253,47,13)" fg:x="16818" fg:w="101"/><text x="15.9139%" y="1407.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (26 samples, 0.02%)</title><rect x="15.7337%" y="1381" width="0.0242%" height="15" fill="rgb(226,93,23)" fg:x="16893" fg:w="26"/><text x="15.9837%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (149 samples, 0.14%)</title><rect x="15.6201%" y="1797" width="0.1388%" height="15" fill="rgb(247,104,17)" fg:x="16771" fg:w="149"/><text x="15.8701%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (149 samples, 0.14%)</title><rect x="15.6201%" y="1781" width="0.1388%" height="15" fill="rgb(233,203,26)" fg:x="16771" fg:w="149"/><text x="15.8701%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (149 samples, 0.14%)</title><rect x="15.6201%" y="1765" width="0.1388%" height="15" fill="rgb(244,98,49)" fg:x="16771" fg:w="149"/><text x="15.8701%" y="1775.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (58 samples, 0.05%)</title><rect x="15.7589%" y="1333" width="0.0540%" height="15" fill="rgb(235,134,22)" fg:x="16920" fg:w="58"/><text x="16.0089%" y="1343.50"></text></g><g><title>serde::de::SeqAccess::next_element (58 samples, 0.05%)</title><rect x="15.7589%" y="1317" width="0.0540%" height="15" fill="rgb(221,70,32)" fg:x="16920" fg:w="58"/><text x="16.0089%" y="1327.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (58 samples, 0.05%)</title><rect x="15.7589%" y="1301" width="0.0540%" height="15" fill="rgb(238,15,50)" fg:x="16920" fg:w="58"/><text x="16.0089%" y="1311.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (58 samples, 0.05%)</title><rect x="15.7589%" y="1285" width="0.0540%" height="15" fill="rgb(215,221,48)" fg:x="16920" fg:w="58"/><text x="16.0089%" y="1295.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (58 samples, 0.05%)</title><rect x="15.7589%" y="1269" width="0.0540%" height="15" fill="rgb(236,73,3)" fg:x="16920" fg:w="58"/><text x="16.0089%" y="1279.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (58 samples, 0.05%)</title><rect x="15.7589%" y="1253" width="0.0540%" height="15" fill="rgb(250,107,11)" fg:x="16920" fg:w="58"/><text x="16.0089%" y="1263.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (58 samples, 0.05%)</title><rect x="15.7589%" y="1237" width="0.0540%" height="15" fill="rgb(242,39,14)" fg:x="16920" fg:w="58"/><text x="16.0089%" y="1247.50"></text></g><g><title>bcs::de::Deserializer::next (32 samples, 0.03%)</title><rect x="15.7831%" y="1221" width="0.0298%" height="15" fill="rgb(248,164,37)" fg:x="16946" fg:w="32"/><text x="16.0331%" y="1231.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (30 samples, 0.03%)</title><rect x="15.7850%" y="1205" width="0.0279%" height="15" fill="rgb(217,60,12)" fg:x="16948" fg:w="30"/><text x="16.0350%" y="1215.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (30 samples, 0.03%)</title><rect x="15.7850%" y="1189" width="0.0279%" height="15" fill="rgb(240,125,29)" fg:x="16948" fg:w="30"/><text x="16.0350%" y="1199.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (30 samples, 0.03%)</title><rect x="15.7850%" y="1173" width="0.0279%" height="15" fill="rgb(208,207,28)" fg:x="16948" fg:w="30"/><text x="16.0350%" y="1183.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (30 samples, 0.03%)</title><rect x="15.7850%" y="1157" width="0.0279%" height="15" fill="rgb(209,159,27)" fg:x="16948" fg:w="30"/><text x="16.0350%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (30 samples, 0.03%)</title><rect x="15.7850%" y="1141" width="0.0279%" height="15" fill="rgb(251,176,53)" fg:x="16948" fg:w="30"/><text x="16.0350%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (30 samples, 0.03%)</title><rect x="15.7850%" y="1125" width="0.0279%" height="15" fill="rgb(211,85,7)" fg:x="16948" fg:w="30"/><text x="16.0350%" y="1135.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (1,221 samples, 1.14%)</title><rect x="14.6766%" y="2021" width="1.1372%" height="15" fill="rgb(216,64,54)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="2031.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (1,221 samples, 1.14%)</title><rect x="14.6766%" y="2005" width="1.1372%" height="15" fill="rgb(217,54,24)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="2015.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1989" width="1.1372%" height="15" fill="rgb(208,206,53)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1999.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1973" width="1.1372%" height="15" fill="rgb(251,74,39)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1983.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1957" width="1.1372%" height="15" fill="rgb(226,47,5)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1967.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1941" width="1.1372%" height="15" fill="rgb(234,111,33)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1951.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1925" width="1.1372%" height="15" fill="rgb(251,14,10)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1935.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1909" width="1.1372%" height="15" fill="rgb(232,43,0)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1919.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1893" width="1.1372%" height="15" fill="rgb(222,68,43)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1903.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1877" width="1.1372%" height="15" fill="rgb(217,24,23)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1887.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (1,221 samples, 1.14%)</title><rect x="14.6766%" y="1861" width="1.1372%" height="15" fill="rgb(229,209,14)" fg:x="15758" fg:w="1221"/><text x="14.9266%" y="1871.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (866 samples, 0.81%)</title><rect x="15.0073%" y="1845" width="0.8066%" height="15" fill="rgb(250,149,48)" fg:x="16113" fg:w="866"/><text x="15.2573%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (866 samples, 0.81%)</title><rect x="15.0073%" y="1829" width="0.8066%" height="15" fill="rgb(210,120,37)" fg:x="16113" fg:w="866"/><text x="15.2573%" y="1839.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (866 samples, 0.81%)</title><rect x="15.0073%" y="1813" width="0.8066%" height="15" fill="rgb(210,21,8)" fg:x="16113" fg:w="866"/><text x="15.2573%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1797" width="0.0550%" height="15" fill="rgb(243,145,7)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1807.50"></text></g><g><title>bcs::de::from_bytes_seed (59 samples, 0.05%)</title><rect x="15.7589%" y="1781" width="0.0550%" height="15" fill="rgb(238,178,32)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1765" width="0.0550%" height="15" fill="rgb(222,4,10)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1749" width="0.0550%" height="15" fill="rgb(239,7,37)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1759.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (59 samples, 0.05%)</title><rect x="15.7589%" y="1733" width="0.0550%" height="15" fill="rgb(215,31,37)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (59 samples, 0.05%)</title><rect x="15.7589%" y="1717" width="0.0550%" height="15" fill="rgb(224,83,33)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1727.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (59 samples, 0.05%)</title><rect x="15.7589%" y="1701" width="0.0550%" height="15" fill="rgb(239,55,3)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1685" width="0.0550%" height="15" fill="rgb(247,92,11)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1669" width="0.0550%" height="15" fill="rgb(239,200,7)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (59 samples, 0.05%)</title><rect x="15.7589%" y="1653" width="0.0550%" height="15" fill="rgb(227,115,8)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (59 samples, 0.05%)</title><rect x="15.7589%" y="1637" width="0.0550%" height="15" fill="rgb(215,189,27)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1647.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (59 samples, 0.05%)</title><rect x="15.7589%" y="1621" width="0.0550%" height="15" fill="rgb(251,216,39)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1605" width="0.0550%" height="15" fill="rgb(207,29,47)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1589" width="0.0550%" height="15" fill="rgb(210,71,34)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (59 samples, 0.05%)</title><rect x="15.7589%" y="1573" width="0.0550%" height="15" fill="rgb(253,217,51)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1583.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (59 samples, 0.05%)</title><rect x="15.7589%" y="1557" width="0.0550%" height="15" fill="rgb(222,117,46)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1567.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (59 samples, 0.05%)</title><rect x="15.7589%" y="1541" width="0.0550%" height="15" fill="rgb(226,132,6)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1525" width="0.0550%" height="15" fill="rgb(254,145,51)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1535.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1509" width="0.0550%" height="15" fill="rgb(231,199,27)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (59 samples, 0.05%)</title><rect x="15.7589%" y="1493" width="0.0550%" height="15" fill="rgb(245,158,14)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (59 samples, 0.05%)</title><rect x="15.7589%" y="1477" width="0.0550%" height="15" fill="rgb(240,113,14)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1487.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (59 samples, 0.05%)</title><rect x="15.7589%" y="1461" width="0.0550%" height="15" fill="rgb(210,20,13)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1445" width="0.0550%" height="15" fill="rgb(241,144,13)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1429" width="0.0550%" height="15" fill="rgb(235,43,34)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1439.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1413" width="0.0550%" height="15" fill="rgb(208,36,20)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1423.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (59 samples, 0.05%)</title><rect x="15.7589%" y="1397" width="0.0550%" height="15" fill="rgb(239,204,10)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1407.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (59 samples, 0.05%)</title><rect x="15.7589%" y="1381" width="0.0550%" height="15" fill="rgb(217,84,43)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1391.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (59 samples, 0.05%)</title><rect x="15.7589%" y="1365" width="0.0550%" height="15" fill="rgb(241,170,50)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (59 samples, 0.05%)</title><rect x="15.7589%" y="1349" width="0.0550%" height="15" fill="rgb(226,205,29)" fg:x="16920" fg:w="59"/><text x="16.0089%" y="1359.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (38 samples, 0.04%)</title><rect x="15.8427%" y="1525" width="0.0354%" height="15" fill="rgb(233,113,1)" fg:x="17010" fg:w="38"/><text x="16.0927%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (26 samples, 0.02%)</title><rect x="15.8539%" y="1509" width="0.0242%" height="15" fill="rgb(253,98,13)" fg:x="17022" fg:w="26"/><text x="16.1039%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (23 samples, 0.02%)</title><rect x="15.8567%" y="1493" width="0.0214%" height="15" fill="rgb(211,115,12)" fg:x="17025" fg:w="23"/><text x="16.1067%" y="1503.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (84 samples, 0.08%)</title><rect x="15.8138%" y="1781" width="0.0782%" height="15" fill="rgb(208,12,16)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1791.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (84 samples, 0.08%)</title><rect x="15.8138%" y="1765" width="0.0782%" height="15" fill="rgb(237,193,54)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1775.50"></text></g><g><title>bcs::de::from_bytes (84 samples, 0.08%)</title><rect x="15.8138%" y="1749" width="0.0782%" height="15" fill="rgb(243,22,42)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1759.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (84 samples, 0.08%)</title><rect x="15.8138%" y="1733" width="0.0782%" height="15" fill="rgb(233,151,36)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1743.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (84 samples, 0.08%)</title><rect x="15.8138%" y="1717" width="0.0782%" height="15" fill="rgb(237,57,45)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1727.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (84 samples, 0.08%)</title><rect x="15.8138%" y="1701" width="0.0782%" height="15" fill="rgb(221,88,17)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1711.50"></text></g><g><title>serde::de::SeqAccess::next_element (84 samples, 0.08%)</title><rect x="15.8138%" y="1685" width="0.0782%" height="15" fill="rgb(230,79,15)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1695.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (84 samples, 0.08%)</title><rect x="15.8138%" y="1669" width="0.0782%" height="15" fill="rgb(213,57,13)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (84 samples, 0.08%)</title><rect x="15.8138%" y="1653" width="0.0782%" height="15" fill="rgb(222,116,39)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1663.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (84 samples, 0.08%)</title><rect x="15.8138%" y="1637" width="0.0782%" height="15" fill="rgb(245,107,2)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (84 samples, 0.08%)</title><rect x="15.8138%" y="1621" width="0.0782%" height="15" fill="rgb(238,1,10)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1631.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (84 samples, 0.08%)</title><rect x="15.8138%" y="1605" width="0.0782%" height="15" fill="rgb(249,4,48)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (84 samples, 0.08%)</title><rect x="15.8138%" y="1589" width="0.0782%" height="15" fill="rgb(223,151,18)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1599.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (84 samples, 0.08%)</title><rect x="15.8138%" y="1573" width="0.0782%" height="15" fill="rgb(227,65,43)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (84 samples, 0.08%)</title><rect x="15.8138%" y="1557" width="0.0782%" height="15" fill="rgb(218,40,45)" fg:x="16979" fg:w="84"/><text x="16.0638%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (54 samples, 0.05%)</title><rect x="15.8418%" y="1541" width="0.0503%" height="15" fill="rgb(252,121,31)" fg:x="17009" fg:w="54"/><text x="16.0918%" y="1551.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (322 samples, 0.30%)</title><rect x="15.9079%" y="1461" width="0.2999%" height="15" fill="rgb(219,158,43)" fg:x="17080" fg:w="322"/><text x="16.1579%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (322 samples, 0.30%)</title><rect x="15.9079%" y="1445" width="0.2999%" height="15" fill="rgb(231,162,42)" fg:x="17080" fg:w="322"/><text x="16.1579%" y="1455.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (322 samples, 0.30%)</title><rect x="15.9079%" y="1429" width="0.2999%" height="15" fill="rgb(217,179,25)" fg:x="17080" fg:w="322"/><text x="16.1579%" y="1439.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (319 samples, 0.30%)</title><rect x="15.9107%" y="1413" width="0.2971%" height="15" fill="rgb(206,212,31)" fg:x="17083" fg:w="319"/><text x="16.1607%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (62 samples, 0.06%)</title><rect x="16.1501%" y="1397" width="0.0577%" height="15" fill="rgb(235,144,12)" fg:x="17340" fg:w="62"/><text x="16.4001%" y="1407.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (335 samples, 0.31%)</title><rect x="15.8977%" y="1509" width="0.3120%" height="15" fill="rgb(213,51,10)" fg:x="17069" fg:w="335"/><text x="16.1477%" y="1519.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (332 samples, 0.31%)</title><rect x="15.9005%" y="1493" width="0.3092%" height="15" fill="rgb(231,145,14)" fg:x="17072" fg:w="332"/><text x="16.1505%" y="1503.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (329 samples, 0.31%)</title><rect x="15.9032%" y="1477" width="0.3064%" height="15" fill="rgb(235,15,28)" fg:x="17075" fg:w="329"/><text x="16.1532%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (342 samples, 0.32%)</title><rect x="15.8921%" y="1541" width="0.3185%" height="15" fill="rgb(237,206,10)" fg:x="17063" fg:w="342"/><text x="16.1421%" y="1551.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (341 samples, 0.32%)</title><rect x="15.8930%" y="1525" width="0.3176%" height="15" fill="rgb(236,227,27)" fg:x="17064" fg:w="341"/><text x="16.1430%" y="1535.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (16 samples, 0.01%)</title><rect x="16.2153%" y="1413" width="0.0149%" height="15" fill="rgb(246,83,35)" fg:x="17410" fg:w="16"/><text x="16.4653%" y="1423.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (16 samples, 0.01%)</title><rect x="16.2153%" y="1397" width="0.0149%" height="15" fill="rgb(220,136,24)" fg:x="17410" fg:w="16"/><text x="16.4653%" y="1407.50"></text></g><g><title>std::io::Write::write_all (14 samples, 0.01%)</title><rect x="16.2171%" y="1381" width="0.0130%" height="15" fill="rgb(217,3,25)" fg:x="17412" fg:w="14"/><text x="16.4671%" y="1391.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (14 samples, 0.01%)</title><rect x="16.2171%" y="1365" width="0.0130%" height="15" fill="rgb(239,24,14)" fg:x="17412" fg:w="14"/><text x="16.4671%" y="1375.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (13 samples, 0.01%)</title><rect x="16.2181%" y="1349" width="0.0121%" height="15" fill="rgb(244,16,53)" fg:x="17413" fg:w="13"/><text x="16.4681%" y="1359.50"></text></g><g><title>tiny_keccak::Buffer::xorin (13 samples, 0.01%)</title><rect x="16.2339%" y="1365" width="0.0121%" height="15" fill="rgb(208,175,44)" fg:x="17430" fg:w="13"/><text x="16.4839%" y="1375.50"></text></g><g><title>tiny_keccak::Buffer::execute (13 samples, 0.01%)</title><rect x="16.2339%" y="1349" width="0.0121%" height="15" fill="rgb(252,18,48)" fg:x="17430" fg:w="13"/><text x="16.4839%" y="1359.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (11 samples, 0.01%)</title><rect x="16.2357%" y="1333" width="0.0102%" height="15" fill="rgb(234,199,32)" fg:x="17432" fg:w="11"/><text x="16.4857%" y="1343.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (185 samples, 0.17%)</title><rect x="16.2125%" y="1477" width="0.1723%" height="15" fill="rgb(225,77,54)" fg:x="17407" fg:w="185"/><text x="16.4625%" y="1487.50"></text></g><g><title>serde_bytes::serialize (185 samples, 0.17%)</title><rect x="16.2125%" y="1461" width="0.1723%" height="15" fill="rgb(225,42,25)" fg:x="17407" fg:w="185"/><text x="16.4625%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (185 samples, 0.17%)</title><rect x="16.2125%" y="1445" width="0.1723%" height="15" fill="rgb(242,227,46)" fg:x="17407" fg:w="185"/><text x="16.4625%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (185 samples, 0.17%)</title><rect x="16.2125%" y="1429" width="0.1723%" height="15" fill="rgb(246,197,35)" fg:x="17407" fg:w="185"/><text x="16.4625%" y="1439.50"></text></g><g><title>std::io::Write::write_all (166 samples, 0.15%)</title><rect x="16.2302%" y="1413" width="0.1546%" height="15" fill="rgb(215,159,26)" fg:x="17426" fg:w="166"/><text x="16.4802%" y="1423.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (166 samples, 0.15%)</title><rect x="16.2302%" y="1397" width="0.1546%" height="15" fill="rgb(212,194,50)" fg:x="17426" fg:w="166"/><text x="16.4802%" y="1407.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (166 samples, 0.15%)</title><rect x="16.2302%" y="1381" width="0.1546%" height="15" fill="rgb(246,132,1)" fg:x="17426" fg:w="166"/><text x="16.4802%" y="1391.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (149 samples, 0.14%)</title><rect x="16.2460%" y="1365" width="0.1388%" height="15" fill="rgb(217,71,7)" fg:x="17443" fg:w="149"/><text x="16.4960%" y="1375.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (149 samples, 0.14%)</title><rect x="16.2460%" y="1349" width="0.1388%" height="15" fill="rgb(252,59,32)" fg:x="17443" fg:w="149"/><text x="16.4960%" y="1359.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (149 samples, 0.14%)</title><rect x="16.2460%" y="1333" width="0.1388%" height="15" fill="rgb(253,204,25)" fg:x="17443" fg:w="149"/><text x="16.4960%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (34 samples, 0.03%)</title><rect x="16.3531%" y="1317" width="0.0317%" height="15" fill="rgb(232,21,16)" fg:x="17558" fg:w="34"/><text x="16.6031%" y="1327.50"></text></g><g><title>bcs::ser::serialize_into (188 samples, 0.18%)</title><rect x="16.2125%" y="1541" width="0.1751%" height="15" fill="rgb(248,90,29)" fg:x="17407" fg:w="188"/><text x="16.4625%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (188 samples, 0.18%)</title><rect x="16.2125%" y="1525" width="0.1751%" height="15" fill="rgb(249,223,7)" fg:x="17407" fg:w="188"/><text x="16.4625%" y="1535.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (188 samples, 0.18%)</title><rect x="16.2125%" y="1509" width="0.1751%" height="15" fill="rgb(231,119,42)" fg:x="17407" fg:w="188"/><text x="16.4625%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (188 samples, 0.18%)</title><rect x="16.2125%" y="1493" width="0.1751%" height="15" fill="rgb(215,41,35)" fg:x="17407" fg:w="188"/><text x="16.4625%" y="1503.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (534 samples, 0.50%)</title><rect x="15.8921%" y="1621" width="0.4974%" height="15" fill="rgb(220,44,45)" fg:x="17063" fg:w="534"/><text x="16.1421%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (534 samples, 0.50%)</title><rect x="15.8921%" y="1605" width="0.4974%" height="15" fill="rgb(253,197,36)" fg:x="17063" fg:w="534"/><text x="16.1421%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (534 samples, 0.50%)</title><rect x="15.8921%" y="1589" width="0.4974%" height="15" fill="rgb(245,225,54)" fg:x="17063" fg:w="534"/><text x="16.1421%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (534 samples, 0.50%)</title><rect x="15.8921%" y="1573" width="0.4974%" height="15" fill="rgb(239,94,37)" fg:x="17063" fg:w="534"/><text x="16.1421%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (534 samples, 0.50%)</title><rect x="15.8921%" y="1557" width="0.4974%" height="15" fill="rgb(242,217,10)" fg:x="17063" fg:w="534"/><text x="16.1421%" y="1567.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="16.3913%" y="1493" width="0.0233%" height="15" fill="rgb(250,193,7)" fg:x="17599" fg:w="25"/><text x="16.6413%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="16.3959%" y="1477" width="0.0186%" height="15" fill="rgb(230,104,19)" fg:x="17604" fg:w="20"/><text x="16.6459%" y="1487.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (20 samples, 0.02%)</title><rect x="16.3959%" y="1461" width="0.0186%" height="15" fill="rgb(230,181,4)" fg:x="17604" fg:w="20"/><text x="16.6459%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (20 samples, 0.02%)</title><rect x="16.3959%" y="1445" width="0.0186%" height="15" fill="rgb(216,219,49)" fg:x="17604" fg:w="20"/><text x="16.6459%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="16.4015%" y="1429" width="0.0130%" height="15" fill="rgb(254,144,0)" fg:x="17610" fg:w="14"/><text x="16.6515%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="16.4015%" y="1413" width="0.0130%" height="15" fill="rgb(205,209,38)" fg:x="17610" fg:w="14"/><text x="16.6515%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="16.4015%" y="1397" width="0.0130%" height="15" fill="rgb(240,21,42)" fg:x="17610" fg:w="14"/><text x="16.6515%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="16.4015%" y="1381" width="0.0130%" height="15" fill="rgb(241,132,3)" fg:x="17610" fg:w="14"/><text x="16.6515%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="16.4043%" y="1365" width="0.0102%" height="15" fill="rgb(225,14,2)" fg:x="17613" fg:w="11"/><text x="16.6543%" y="1375.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (33 samples, 0.03%)</title><rect x="16.3904%" y="1557" width="0.0307%" height="15" fill="rgb(210,141,35)" fg:x="17598" fg:w="33"/><text x="16.6404%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.03%)</title><rect x="16.3904%" y="1541" width="0.0307%" height="15" fill="rgb(251,14,44)" fg:x="17598" fg:w="33"/><text x="16.6404%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="16.3904%" y="1525" width="0.0307%" height="15" fill="rgb(247,48,18)" fg:x="17598" fg:w="33"/><text x="16.6404%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (32 samples, 0.03%)</title><rect x="16.3913%" y="1509" width="0.0298%" height="15" fill="rgb(225,0,40)" fg:x="17599" fg:w="32"/><text x="16.6413%" y="1519.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="16.4248%" y="1477" width="0.0140%" height="15" fill="rgb(221,31,33)" fg:x="17635" fg:w="15"/><text x="16.6748%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="16.4276%" y="1461" width="0.0112%" height="15" fill="rgb(237,42,40)" fg:x="17638" fg:w="12"/><text x="16.6776%" y="1471.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.01%)</title><rect x="16.4276%" y="1445" width="0.0112%" height="15" fill="rgb(233,51,29)" fg:x="17638" fg:w="12"/><text x="16.6776%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.01%)</title><rect x="16.4276%" y="1429" width="0.0112%" height="15" fill="rgb(226,58,20)" fg:x="17638" fg:w="12"/><text x="16.6776%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (16 samples, 0.01%)</title><rect x="16.4248%" y="1509" width="0.0149%" height="15" fill="rgb(208,98,7)" fg:x="17635" fg:w="16"/><text x="16.6748%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (16 samples, 0.01%)</title><rect x="16.4248%" y="1493" width="0.0149%" height="15" fill="rgb(228,143,44)" fg:x="17635" fg:w="16"/><text x="16.6748%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (38 samples, 0.04%)</title><rect x="16.4248%" y="1525" width="0.0354%" height="15" fill="rgb(246,55,38)" fg:x="17635" fg:w="38"/><text x="16.6748%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="16.4472%" y="1509" width="0.0130%" height="15" fill="rgb(247,87,16)" fg:x="17659" fg:w="14"/><text x="16.6972%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="16.4472%" y="1493" width="0.0130%" height="15" fill="rgb(234,129,42)" fg:x="17659" fg:w="14"/><text x="16.6972%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="16.4472%" y="1477" width="0.0130%" height="15" fill="rgb(220,82,16)" fg:x="17659" fg:w="14"/><text x="16.6972%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (17 samples, 0.02%)</title><rect x="16.4686%" y="1477" width="0.0158%" height="15" fill="rgb(211,88,4)" fg:x="17682" fg:w="17"/><text x="16.7186%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (17 samples, 0.02%)</title><rect x="16.4686%" y="1461" width="0.0158%" height="15" fill="rgb(248,151,21)" fg:x="17682" fg:w="17"/><text x="16.7186%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="16.4686%" y="1445" width="0.0158%" height="15" fill="rgb(238,163,6)" fg:x="17682" fg:w="17"/><text x="16.7186%" y="1455.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (721 samples, 0.67%)</title><rect x="15.8138%" y="1813" width="0.6715%" height="15" fill="rgb(209,183,11)" fg:x="16979" fg:w="721"/><text x="16.0638%" y="1823.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (721 samples, 0.67%)</title><rect x="15.8138%" y="1797" width="0.6715%" height="15" fill="rgb(219,37,20)" fg:x="16979" fg:w="721"/><text x="16.0638%" y="1807.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (637 samples, 0.59%)</title><rect x="15.8921%" y="1781" width="0.5933%" height="15" fill="rgb(210,158,4)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1791.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (637 samples, 0.59%)</title><rect x="15.8921%" y="1765" width="0.5933%" height="15" fill="rgb(221,167,53)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (637 samples, 0.59%)</title><rect x="15.8921%" y="1749" width="0.5933%" height="15" fill="rgb(237,151,45)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1759.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (637 samples, 0.59%)</title><rect x="15.8921%" y="1733" width="0.5933%" height="15" fill="rgb(231,39,3)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1743.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (637 samples, 0.59%)</title><rect x="15.8921%" y="1717" width="0.5933%" height="15" fill="rgb(212,167,28)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1727.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (637 samples, 0.59%)</title><rect x="15.8921%" y="1701" width="0.5933%" height="15" fill="rgb(232,178,8)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1711.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (637 samples, 0.59%)</title><rect x="15.8921%" y="1685" width="0.5933%" height="15" fill="rgb(225,151,20)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1695.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (637 samples, 0.59%)</title><rect x="15.8921%" y="1669" width="0.5933%" height="15" fill="rgb(238,3,37)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1679.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (637 samples, 0.59%)</title><rect x="15.8921%" y="1653" width="0.5933%" height="15" fill="rgb(251,147,42)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1663.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (637 samples, 0.59%)</title><rect x="15.8921%" y="1637" width="0.5933%" height="15" fill="rgb(208,173,10)" fg:x="17063" fg:w="637"/><text x="16.1421%" y="1647.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (103 samples, 0.10%)</title><rect x="16.3894%" y="1621" width="0.0959%" height="15" fill="rgb(246,225,4)" fg:x="17597" fg:w="103"/><text x="16.6394%" y="1631.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (103 samples, 0.10%)</title><rect x="16.3894%" y="1605" width="0.0959%" height="15" fill="rgb(248,102,6)" fg:x="17597" fg:w="103"/><text x="16.6394%" y="1615.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (103 samples, 0.10%)</title><rect x="16.3894%" y="1589" width="0.0959%" height="15" fill="rgb(232,6,21)" fg:x="17597" fg:w="103"/><text x="16.6394%" y="1599.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (103 samples, 0.10%)</title><rect x="16.3894%" y="1573" width="0.0959%" height="15" fill="rgb(221,179,22)" fg:x="17597" fg:w="103"/><text x="16.6394%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (69 samples, 0.06%)</title><rect x="16.4211%" y="1557" width="0.0643%" height="15" fill="rgb(252,50,20)" fg:x="17631" fg:w="69"/><text x="16.6711%" y="1567.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (67 samples, 0.06%)</title><rect x="16.4230%" y="1541" width="0.0624%" height="15" fill="rgb(222,56,38)" fg:x="17633" fg:w="67"/><text x="16.6730%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (27 samples, 0.03%)</title><rect x="16.4602%" y="1525" width="0.0251%" height="15" fill="rgb(206,193,29)" fg:x="17673" fg:w="27"/><text x="16.7102%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (27 samples, 0.03%)</title><rect x="16.4602%" y="1509" width="0.0251%" height="15" fill="rgb(239,192,45)" fg:x="17673" fg:w="27"/><text x="16.7102%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (27 samples, 0.03%)</title><rect x="16.4602%" y="1493" width="0.0251%" height="15" fill="rgb(254,18,36)" fg:x="17673" fg:w="27"/><text x="16.7102%" y="1503.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="16.5701%" y="1445" width="0.0242%" height="15" fill="rgb(221,127,11)" fg:x="17791" fg:w="26"/><text x="16.8201%" y="1455.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (35 samples, 0.03%)</title><rect x="16.5701%" y="1461" width="0.0326%" height="15" fill="rgb(234,146,35)" fg:x="17791" fg:w="35"/><text x="16.8201%" y="1471.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.06%)</title><rect x="16.5701%" y="1477" width="0.0605%" height="15" fill="rgb(254,201,37)" fg:x="17791" fg:w="65"/><text x="16.8201%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (30 samples, 0.03%)</title><rect x="16.6027%" y="1461" width="0.0279%" height="15" fill="rgb(211,202,23)" fg:x="17826" fg:w="30"/><text x="16.8527%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (30 samples, 0.03%)</title><rect x="16.6027%" y="1445" width="0.0279%" height="15" fill="rgb(237,91,2)" fg:x="17826" fg:w="30"/><text x="16.8527%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="16.6027%" y="1429" width="0.0279%" height="15" fill="rgb(226,228,36)" fg:x="17826" fg:w="30"/><text x="16.8527%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.03%)</title><rect x="16.6027%" y="1413" width="0.0279%" height="15" fill="rgb(213,63,50)" fg:x="17826" fg:w="30"/><text x="16.8527%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.03%)</title><rect x="16.6027%" y="1397" width="0.0279%" height="15" fill="rgb(235,194,19)" fg:x="17826" fg:w="30"/><text x="16.8527%" y="1407.50"></text></g><g><title>malloc (26 samples, 0.02%)</title><rect x="16.6064%" y="1381" width="0.0242%" height="15" fill="rgb(207,204,18)" fg:x="17830" fg:w="26"/><text x="16.8564%" y="1391.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="16.6130%" y="1365" width="0.0177%" height="15" fill="rgb(248,8,7)" fg:x="17837" fg:w="19"/><text x="16.8630%" y="1375.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="16.6353%" y="1397" width="0.0158%" height="15" fill="rgb(223,145,47)" fg:x="17861" fg:w="17"/><text x="16.8853%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="16.6511%" y="1397" width="0.0140%" height="15" fill="rgb(228,84,11)" fg:x="17878" fg:w="15"/><text x="16.9011%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="16.6511%" y="1381" width="0.0140%" height="15" fill="rgb(218,76,45)" fg:x="17878" fg:w="15"/><text x="16.9011%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="16.6511%" y="1365" width="0.0140%" height="15" fill="rgb(223,80,15)" fg:x="17878" fg:w="15"/><text x="16.9011%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="16.6521%" y="1349" width="0.0130%" height="15" fill="rgb(219,218,33)" fg:x="17879" fg:w="14"/><text x="16.9021%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="16.6521%" y="1333" width="0.0130%" height="15" fill="rgb(208,51,11)" fg:x="17879" fg:w="14"/><text x="16.9021%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="16.6521%" y="1317" width="0.0130%" height="15" fill="rgb(229,165,39)" fg:x="17879" fg:w="14"/><text x="16.9021%" y="1327.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="16.6539%" y="1301" width="0.0112%" height="15" fill="rgb(241,100,24)" fg:x="17881" fg:w="12"/><text x="16.9039%" y="1311.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (154 samples, 0.14%)</title><rect x="16.5301%" y="1493" width="0.1434%" height="15" fill="rgb(228,14,23)" fg:x="17748" fg:w="154"/><text x="16.7801%" y="1503.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="16.6307%" y="1477" width="0.0428%" height="15" fill="rgb(247,116,52)" fg:x="17856" fg:w="46"/><text x="16.8807%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="16.6334%" y="1461" width="0.0400%" height="15" fill="rgb(216,149,33)" fg:x="17859" fg:w="43"/><text x="16.8834%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.04%)</title><rect x="16.6344%" y="1445" width="0.0391%" height="15" fill="rgb(238,142,29)" fg:x="17860" fg:w="42"/><text x="16.8844%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.04%)</title><rect x="16.6344%" y="1429" width="0.0391%" height="15" fill="rgb(224,83,40)" fg:x="17860" fg:w="42"/><text x="16.8844%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.04%)</title><rect x="16.6344%" y="1413" width="0.0391%" height="15" fill="rgb(234,165,11)" fg:x="17860" fg:w="42"/><text x="16.8844%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.05%)</title><rect x="16.6735%" y="1493" width="0.0540%" height="15" fill="rgb(215,96,23)" fg:x="17902" fg:w="58"/><text x="16.9235%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 0.05%)</title><rect x="16.6735%" y="1477" width="0.0540%" height="15" fill="rgb(233,179,26)" fg:x="17902" fg:w="58"/><text x="16.9235%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.05%)</title><rect x="16.6735%" y="1461" width="0.0540%" height="15" fill="rgb(225,129,33)" fg:x="17902" fg:w="58"/><text x="16.9235%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.05%)</title><rect x="16.6772%" y="1445" width="0.0503%" height="15" fill="rgb(237,49,13)" fg:x="17906" fg:w="54"/><text x="16.9272%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.05%)</title><rect x="16.6772%" y="1429" width="0.0503%" height="15" fill="rgb(211,3,31)" fg:x="17906" fg:w="54"/><text x="16.9272%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.05%)</title><rect x="16.6772%" y="1413" width="0.0503%" height="15" fill="rgb(216,152,19)" fg:x="17906" fg:w="54"/><text x="16.9272%" y="1423.50"></text></g><g><title>malloc (53 samples, 0.05%)</title><rect x="16.6782%" y="1397" width="0.0494%" height="15" fill="rgb(251,121,35)" fg:x="17907" fg:w="53"/><text x="16.9282%" y="1407.50"></text></g><g><title>[libc.so.6] (36 samples, 0.03%)</title><rect x="16.6940%" y="1381" width="0.0335%" height="15" fill="rgb(210,217,47)" fg:x="17924" fg:w="36"/><text x="16.9440%" y="1391.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (272 samples, 0.25%)</title><rect x="16.4854%" y="1765" width="0.2533%" height="15" fill="rgb(244,116,22)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (272 samples, 0.25%)</title><rect x="16.4854%" y="1749" width="0.2533%" height="15" fill="rgb(228,17,21)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (272 samples, 0.25%)</title><rect x="16.4854%" y="1733" width="0.2533%" height="15" fill="rgb(240,149,34)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (272 samples, 0.25%)</title><rect x="16.4854%" y="1717" width="0.2533%" height="15" fill="rgb(208,125,47)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (272 samples, 0.25%)</title><rect x="16.4854%" y="1701" width="0.2533%" height="15" fill="rgb(249,186,39)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1711.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (272 samples, 0.25%)</title><rect x="16.4854%" y="1685" width="0.2533%" height="15" fill="rgb(240,220,33)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1695.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (272 samples, 0.25%)</title><rect x="16.4854%" y="1669" width="0.2533%" height="15" fill="rgb(243,110,23)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (272 samples, 0.25%)</title><rect x="16.4854%" y="1653" width="0.2533%" height="15" fill="rgb(219,163,46)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (272 samples, 0.25%)</title><rect x="16.4854%" y="1637" width="0.2533%" height="15" fill="rgb(216,126,30)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (272 samples, 0.25%)</title><rect x="16.4854%" y="1621" width="0.2533%" height="15" fill="rgb(208,139,11)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (272 samples, 0.25%)</title><rect x="16.4854%" y="1605" width="0.2533%" height="15" fill="rgb(213,118,36)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1615.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (272 samples, 0.25%)</title><rect x="16.4854%" y="1589" width="0.2533%" height="15" fill="rgb(226,43,17)" fg:x="17700" fg:w="272"/><text x="16.7354%" y="1599.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (236 samples, 0.22%)</title><rect x="16.5189%" y="1573" width="0.2198%" height="15" fill="rgb(254,217,4)" fg:x="17736" fg:w="236"/><text x="16.7689%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (228 samples, 0.21%)</title><rect x="16.5263%" y="1557" width="0.2124%" height="15" fill="rgb(210,134,47)" fg:x="17744" fg:w="228"/><text x="16.7763%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (224 samples, 0.21%)</title><rect x="16.5301%" y="1541" width="0.2086%" height="15" fill="rgb(237,24,49)" fg:x="17748" fg:w="224"/><text x="16.7801%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (224 samples, 0.21%)</title><rect x="16.5301%" y="1525" width="0.2086%" height="15" fill="rgb(251,39,46)" fg:x="17748" fg:w="224"/><text x="16.7801%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (224 samples, 0.21%)</title><rect x="16.5301%" y="1509" width="0.2086%" height="15" fill="rgb(251,220,3)" fg:x="17748" fg:w="224"/><text x="16.7801%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.01%)</title><rect x="16.7275%" y="1493" width="0.0112%" height="15" fill="rgb(228,105,12)" fg:x="17960" fg:w="12"/><text x="16.9775%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (273 samples, 0.25%)</title><rect x="16.4854%" y="1813" width="0.2543%" height="15" fill="rgb(215,196,1)" fg:x="17700" fg:w="273"/><text x="16.7354%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (273 samples, 0.25%)</title><rect x="16.4854%" y="1797" width="0.2543%" height="15" fill="rgb(214,33,39)" fg:x="17700" fg:w="273"/><text x="16.7354%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (273 samples, 0.25%)</title><rect x="16.4854%" y="1781" width="0.2543%" height="15" fill="rgb(220,19,52)" fg:x="17700" fg:w="273"/><text x="16.7354%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="16.7834%" y="1253" width="0.0102%" height="15" fill="rgb(221,78,38)" fg:x="18020" fg:w="11"/><text x="17.0334%" y="1263.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (71 samples, 0.07%)</title><rect x="16.7685%" y="1349" width="0.0661%" height="15" fill="rgb(253,30,16)" fg:x="18004" fg:w="71"/><text x="17.0185%" y="1359.50"></text></g><g><title>serde::de::SeqAccess::next_element (57 samples, 0.05%)</title><rect x="16.7815%" y="1333" width="0.0531%" height="15" fill="rgb(242,65,0)" fg:x="18018" fg:w="57"/><text x="17.0315%" y="1343.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (57 samples, 0.05%)</title><rect x="16.7815%" y="1317" width="0.0531%" height="15" fill="rgb(235,201,12)" fg:x="18018" fg:w="57"/><text x="17.0315%" y="1327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (57 samples, 0.05%)</title><rect x="16.7815%" y="1301" width="0.0531%" height="15" fill="rgb(233,161,9)" fg:x="18018" fg:w="57"/><text x="17.0315%" y="1311.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (57 samples, 0.05%)</title><rect x="16.7815%" y="1285" width="0.0531%" height="15" fill="rgb(241,207,41)" fg:x="18018" fg:w="57"/><text x="17.0315%" y="1295.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (57 samples, 0.05%)</title><rect x="16.7815%" y="1269" width="0.0531%" height="15" fill="rgb(212,69,46)" fg:x="18018" fg:w="57"/><text x="17.0315%" y="1279.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (44 samples, 0.04%)</title><rect x="16.7936%" y="1253" width="0.0410%" height="15" fill="rgb(239,69,45)" fg:x="18031" fg:w="44"/><text x="17.0436%" y="1263.50"></text></g><g><title>bcs::de::Deserializer::next (17 samples, 0.02%)</title><rect x="16.8188%" y="1237" width="0.0158%" height="15" fill="rgb(242,117,48)" fg:x="18058" fg:w="17"/><text x="17.0688%" y="1247.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.01%)</title><rect x="16.8225%" y="1221" width="0.0121%" height="15" fill="rgb(228,41,36)" fg:x="18062" fg:w="13"/><text x="17.0725%" y="1231.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.01%)</title><rect x="16.8225%" y="1205" width="0.0121%" height="15" fill="rgb(212,3,32)" fg:x="18062" fg:w="13"/><text x="17.0725%" y="1215.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="16.8225%" y="1189" width="0.0121%" height="15" fill="rgb(233,41,49)" fg:x="18062" fg:w="13"/><text x="17.0725%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="16.8225%" y="1173" width="0.0121%" height="15" fill="rgb(252,170,49)" fg:x="18062" fg:w="13"/><text x="17.0725%" y="1183.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (13 samples, 0.01%)</title><rect x="16.8225%" y="1157" width="0.0121%" height="15" fill="rgb(229,53,26)" fg:x="18062" fg:w="13"/><text x="17.0725%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (13 samples, 0.01%)</title><rect x="16.8225%" y="1141" width="0.0121%" height="15" fill="rgb(217,157,12)" fg:x="18062" fg:w="13"/><text x="17.0725%" y="1151.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (94 samples, 0.09%)</title><rect x="16.7480%" y="1445" width="0.0875%" height="15" fill="rgb(227,17,9)" fg:x="17982" fg:w="94"/><text x="16.9980%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (81 samples, 0.08%)</title><rect x="16.7601%" y="1429" width="0.0754%" height="15" fill="rgb(218,84,12)" fg:x="17995" fg:w="81"/><text x="17.0101%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (81 samples, 0.08%)</title><rect x="16.7601%" y="1413" width="0.0754%" height="15" fill="rgb(212,79,24)" fg:x="17995" fg:w="81"/><text x="17.0101%" y="1423.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (76 samples, 0.07%)</title><rect x="16.7648%" y="1397" width="0.0708%" height="15" fill="rgb(217,222,37)" fg:x="18000" fg:w="76"/><text x="17.0148%" y="1407.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (73 samples, 0.07%)</title><rect x="16.7676%" y="1381" width="0.0680%" height="15" fill="rgb(246,208,8)" fg:x="18003" fg:w="73"/><text x="17.0176%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (73 samples, 0.07%)</title><rect x="16.7676%" y="1365" width="0.0680%" height="15" fill="rgb(244,133,10)" fg:x="18003" fg:w="73"/><text x="17.0176%" y="1375.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (110 samples, 0.10%)</title><rect x="16.7396%" y="1477" width="0.1025%" height="15" fill="rgb(209,219,41)" fg:x="17973" fg:w="110"/><text x="16.9896%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (110 samples, 0.10%)</title><rect x="16.7396%" y="1461" width="0.1025%" height="15" fill="rgb(253,175,45)" fg:x="17973" fg:w="110"/><text x="16.9896%" y="1471.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (1,135 samples, 1.06%)</title><rect x="15.8138%" y="1861" width="1.0571%" height="15" fill="rgb(235,100,37)" fg:x="16979" fg:w="1135"/><text x="16.0638%" y="1871.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,135 samples, 1.06%)</title><rect x="15.8138%" y="1845" width="1.0571%" height="15" fill="rgb(225,87,19)" fg:x="16979" fg:w="1135"/><text x="16.0638%" y="1855.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,135 samples, 1.06%)</title><rect x="15.8138%" y="1829" width="1.0571%" height="15" fill="rgb(217,152,17)" fg:x="16979" fg:w="1135"/><text x="16.0638%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1813" width="0.1313%" height="15" fill="rgb(235,72,13)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1823.50"></text></g><g><title>bcs::de::from_bytes_seed (141 samples, 0.13%)</title><rect x="16.7396%" y="1797" width="0.1313%" height="15" fill="rgb(233,140,18)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1781" width="0.1313%" height="15" fill="rgb(207,212,28)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1765" width="0.1313%" height="15" fill="rgb(220,130,25)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1775.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (141 samples, 0.13%)</title><rect x="16.7396%" y="1749" width="0.1313%" height="15" fill="rgb(205,55,34)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (141 samples, 0.13%)</title><rect x="16.7396%" y="1733" width="0.1313%" height="15" fill="rgb(237,54,35)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1743.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (141 samples, 0.13%)</title><rect x="16.7396%" y="1717" width="0.1313%" height="15" fill="rgb(208,67,23)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1701" width="0.1313%" height="15" fill="rgb(206,207,50)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1685" width="0.1313%" height="15" fill="rgb(213,211,42)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (141 samples, 0.13%)</title><rect x="16.7396%" y="1669" width="0.1313%" height="15" fill="rgb(252,197,50)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (141 samples, 0.13%)</title><rect x="16.7396%" y="1653" width="0.1313%" height="15" fill="rgb(251,211,41)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1663.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (141 samples, 0.13%)</title><rect x="16.7396%" y="1637" width="0.1313%" height="15" fill="rgb(229,211,5)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1621" width="0.1313%" height="15" fill="rgb(239,36,31)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1605" width="0.1313%" height="15" fill="rgb(248,67,31)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1615.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (141 samples, 0.13%)</title><rect x="16.7396%" y="1589" width="0.1313%" height="15" fill="rgb(249,55,44)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (141 samples, 0.13%)</title><rect x="16.7396%" y="1573" width="0.1313%" height="15" fill="rgb(216,82,12)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1583.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (141 samples, 0.13%)</title><rect x="16.7396%" y="1557" width="0.1313%" height="15" fill="rgb(242,174,1)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1541" width="0.1313%" height="15" fill="rgb(208,120,29)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="16.7396%" y="1525" width="0.1313%" height="15" fill="rgb(221,105,43)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (141 samples, 0.13%)</title><rect x="16.7396%" y="1509" width="0.1313%" height="15" fill="rgb(234,124,22)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (141 samples, 0.13%)</title><rect x="16.7396%" y="1493" width="0.1313%" height="15" fill="rgb(212,23,30)" fg:x="17973" fg:w="141"/><text x="16.9896%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.03%)</title><rect x="16.8421%" y="1477" width="0.0289%" height="15" fill="rgb(219,122,53)" fg:x="18083" fg:w="31"/><text x="17.0921%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (31 samples, 0.03%)</title><rect x="16.8421%" y="1461" width="0.0289%" height="15" fill="rgb(248,84,24)" fg:x="18083" fg:w="31"/><text x="17.0921%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.03%)</title><rect x="16.8421%" y="1445" width="0.0289%" height="15" fill="rgb(245,115,18)" fg:x="18083" fg:w="31"/><text x="17.0921%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.03%)</title><rect x="16.8421%" y="1429" width="0.0289%" height="15" fill="rgb(227,176,51)" fg:x="18083" fg:w="31"/><text x="17.0921%" y="1439.50"></text></g><g><title>malloc (30 samples, 0.03%)</title><rect x="16.8430%" y="1413" width="0.0279%" height="15" fill="rgb(229,63,42)" fg:x="18084" fg:w="30"/><text x="17.0930%" y="1423.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="16.8514%" y="1397" width="0.0196%" height="15" fill="rgb(247,202,24)" fg:x="18093" fg:w="21"/><text x="17.1014%" y="1407.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="16.9008%" y="1493" width="0.0102%" height="15" fill="rgb(244,173,20)" fg:x="18146" fg:w="11"/><text x="17.1508%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (17 samples, 0.02%)</title><rect x="16.8961%" y="1525" width="0.0158%" height="15" fill="rgb(242,81,47)" fg:x="18141" fg:w="17"/><text x="17.1461%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (12 samples, 0.01%)</title><rect x="16.9008%" y="1509" width="0.0112%" height="15" fill="rgb(231,185,54)" fg:x="18146" fg:w="12"/><text x="17.1508%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (14 samples, 0.01%)</title><rect x="16.9119%" y="1525" width="0.0130%" height="15" fill="rgb(243,55,32)" fg:x="18158" fg:w="14"/><text x="17.1619%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (62 samples, 0.06%)</title><rect x="16.8719%" y="1557" width="0.0577%" height="15" fill="rgb(208,167,19)" fg:x="18115" fg:w="62"/><text x="17.1219%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (37 samples, 0.03%)</title><rect x="16.8952%" y="1541" width="0.0345%" height="15" fill="rgb(231,72,35)" fg:x="18140" fg:w="37"/><text x="17.1452%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (79 samples, 0.07%)</title><rect x="16.8709%" y="1589" width="0.0736%" height="15" fill="rgb(250,173,51)" fg:x="18114" fg:w="79"/><text x="17.1209%" y="1599.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (79 samples, 0.07%)</title><rect x="16.8709%" y="1573" width="0.0736%" height="15" fill="rgb(209,5,22)" fg:x="18114" fg:w="79"/><text x="17.1209%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (16 samples, 0.01%)</title><rect x="16.9296%" y="1557" width="0.0149%" height="15" fill="rgb(250,174,19)" fg:x="18177" fg:w="16"/><text x="17.1796%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (16 samples, 0.01%)</title><rect x="16.9296%" y="1541" width="0.0149%" height="15" fill="rgb(217,3,49)" fg:x="18177" fg:w="16"/><text x="17.1796%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (16 samples, 0.01%)</title><rect x="16.9296%" y="1525" width="0.0149%" height="15" fill="rgb(218,225,5)" fg:x="18177" fg:w="16"/><text x="17.1796%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (16 samples, 0.01%)</title><rect x="16.9296%" y="1509" width="0.0149%" height="15" fill="rgb(236,89,11)" fg:x="18177" fg:w="16"/><text x="17.1796%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="16.9296%" y="1493" width="0.0149%" height="15" fill="rgb(206,33,28)" fg:x="18177" fg:w="16"/><text x="17.1796%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="16.9296%" y="1477" width="0.0149%" height="15" fill="rgb(241,56,42)" fg:x="18177" fg:w="16"/><text x="17.1796%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="16.9296%" y="1461" width="0.0149%" height="15" fill="rgb(222,44,11)" fg:x="18177" fg:w="16"/><text x="17.1796%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (13 samples, 0.01%)</title><rect x="16.9483%" y="1333" width="0.0121%" height="15" fill="rgb(234,111,20)" fg:x="18197" fg:w="13"/><text x="17.1983%" y="1343.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (13 samples, 0.01%)</title><rect x="16.9483%" y="1317" width="0.0121%" height="15" fill="rgb(237,77,6)" fg:x="18197" fg:w="13"/><text x="17.1983%" y="1327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.01%)</title><rect x="16.9483%" y="1349" width="0.0149%" height="15" fill="rgb(235,111,23)" fg:x="18197" fg:w="16"/><text x="17.1983%" y="1359.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (19 samples, 0.02%)</title><rect x="16.9464%" y="1397" width="0.0177%" height="15" fill="rgb(251,135,29)" fg:x="18195" fg:w="19"/><text x="17.1964%" y="1407.50"></text></g><g><title>serde::de::SeqAccess::next_element (17 samples, 0.02%)</title><rect x="16.9483%" y="1381" width="0.0158%" height="15" fill="rgb(217,57,1)" fg:x="18197" fg:w="17"/><text x="17.1983%" y="1391.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (17 samples, 0.02%)</title><rect x="16.9483%" y="1365" width="0.0158%" height="15" fill="rgb(249,119,31)" fg:x="18197" fg:w="17"/><text x="17.1983%" y="1375.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (105 samples, 0.10%)</title><rect x="16.8709%" y="1781" width="0.0978%" height="15" fill="rgb(233,164,33)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1791.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (105 samples, 0.10%)</title><rect x="16.8709%" y="1765" width="0.0978%" height="15" fill="rgb(250,217,43)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1775.50"></text></g><g><title>bcs::de::from_bytes (105 samples, 0.10%)</title><rect x="16.8709%" y="1749" width="0.0978%" height="15" fill="rgb(232,154,50)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1759.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (105 samples, 0.10%)</title><rect x="16.8709%" y="1733" width="0.0978%" height="15" fill="rgb(227,190,8)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1743.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (105 samples, 0.10%)</title><rect x="16.8709%" y="1717" width="0.0978%" height="15" fill="rgb(209,217,32)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1727.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (105 samples, 0.10%)</title><rect x="16.8709%" y="1701" width="0.0978%" height="15" fill="rgb(243,203,50)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1711.50"></text></g><g><title>serde::de::SeqAccess::next_element (105 samples, 0.10%)</title><rect x="16.8709%" y="1685" width="0.0978%" height="15" fill="rgb(232,152,27)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1695.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (105 samples, 0.10%)</title><rect x="16.8709%" y="1669" width="0.0978%" height="15" fill="rgb(240,34,29)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (105 samples, 0.10%)</title><rect x="16.8709%" y="1653" width="0.0978%" height="15" fill="rgb(215,185,52)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1663.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (105 samples, 0.10%)</title><rect x="16.8709%" y="1637" width="0.0978%" height="15" fill="rgb(240,89,49)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (105 samples, 0.10%)</title><rect x="16.8709%" y="1621" width="0.0978%" height="15" fill="rgb(225,12,52)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1631.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (105 samples, 0.10%)</title><rect x="16.8709%" y="1605" width="0.0978%" height="15" fill="rgb(239,128,45)" fg:x="18114" fg:w="105"/><text x="17.1209%" y="1615.50"></text></g><g><title>serde::de::MapAccess::next_entry (26 samples, 0.02%)</title><rect x="16.9445%" y="1589" width="0.0242%" height="15" fill="rgb(211,78,47)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1599.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (26 samples, 0.02%)</title><rect x="16.9445%" y="1573" width="0.0242%" height="15" fill="rgb(232,31,21)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1583.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (26 samples, 0.02%)</title><rect x="16.9445%" y="1557" width="0.0242%" height="15" fill="rgb(222,168,14)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (26 samples, 0.02%)</title><rect x="16.9445%" y="1541" width="0.0242%" height="15" fill="rgb(209,128,24)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1551.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (26 samples, 0.02%)</title><rect x="16.9445%" y="1525" width="0.0242%" height="15" fill="rgb(249,35,13)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (26 samples, 0.02%)</title><rect x="16.9445%" y="1509" width="0.0242%" height="15" fill="rgb(218,7,2)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1519.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (26 samples, 0.02%)</title><rect x="16.9445%" y="1493" width="0.0242%" height="15" fill="rgb(238,107,27)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1503.50"></text></g><g><title>serde::de::SeqAccess::next_element (26 samples, 0.02%)</title><rect x="16.9445%" y="1477" width="0.0242%" height="15" fill="rgb(217,88,38)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1487.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (26 samples, 0.02%)</title><rect x="16.9445%" y="1461" width="0.0242%" height="15" fill="rgb(230,207,0)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (26 samples, 0.02%)</title><rect x="16.9445%" y="1445" width="0.0242%" height="15" fill="rgb(249,64,54)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1455.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize (26 samples, 0.02%)</title><rect x="16.9445%" y="1429" width="0.0242%" height="15" fill="rgb(231,7,11)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (26 samples, 0.02%)</title><rect x="16.9445%" y="1413" width="0.0242%" height="15" fill="rgb(205,149,21)" fg:x="18193" fg:w="26"/><text x="17.1945%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (362 samples, 0.34%)</title><rect x="16.9697%" y="1541" width="0.3372%" height="15" fill="rgb(215,126,34)" fg:x="18220" fg:w="362"/><text x="17.2197%" y="1551.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (355 samples, 0.33%)</title><rect x="16.9762%" y="1525" width="0.3306%" height="15" fill="rgb(241,132,45)" fg:x="18227" fg:w="355"/><text x="17.2262%" y="1535.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (351 samples, 0.33%)</title><rect x="16.9799%" y="1509" width="0.3269%" height="15" fill="rgb(252,69,32)" fg:x="18231" fg:w="351"/><text x="17.2299%" y="1519.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (345 samples, 0.32%)</title><rect x="16.9855%" y="1493" width="0.3213%" height="15" fill="rgb(232,204,19)" fg:x="18237" fg:w="345"/><text x="17.2355%" y="1503.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (344 samples, 0.32%)</title><rect x="16.9864%" y="1477" width="0.3204%" height="15" fill="rgb(249,15,47)" fg:x="18238" fg:w="344"/><text x="17.2364%" y="1487.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (338 samples, 0.31%)</title><rect x="16.9920%" y="1461" width="0.3148%" height="15" fill="rgb(209,227,23)" fg:x="18244" fg:w="338"/><text x="17.2420%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (338 samples, 0.31%)</title><rect x="16.9920%" y="1445" width="0.3148%" height="15" fill="rgb(248,92,24)" fg:x="18244" fg:w="338"/><text x="17.2420%" y="1455.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (338 samples, 0.31%)</title><rect x="16.9920%" y="1429" width="0.3148%" height="15" fill="rgb(247,59,2)" fg:x="18244" fg:w="338"/><text x="17.2420%" y="1439.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (338 samples, 0.31%)</title><rect x="16.9920%" y="1413" width="0.3148%" height="15" fill="rgb(221,30,5)" fg:x="18244" fg:w="338"/><text x="17.2420%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (73 samples, 0.07%)</title><rect x="17.2388%" y="1397" width="0.0680%" height="15" fill="rgb(208,108,53)" fg:x="18509" fg:w="73"/><text x="17.4888%" y="1407.50"></text></g><g><title>tiny_keccak::Buffer::xorin (13 samples, 0.01%)</title><rect x="17.3236%" y="1365" width="0.0121%" height="15" fill="rgb(211,183,26)" fg:x="18600" fg:w="13"/><text x="17.5736%" y="1375.50"></text></g><g><title>tiny_keccak::Buffer::execute (13 samples, 0.01%)</title><rect x="17.3236%" y="1349" width="0.0121%" height="15" fill="rgb(232,132,4)" fg:x="18600" fg:w="13"/><text x="17.5736%" y="1359.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (204 samples, 0.19%)</title><rect x="17.3124%" y="1477" width="0.1900%" height="15" fill="rgb(253,128,37)" fg:x="18588" fg:w="204"/><text x="17.5624%" y="1487.50"></text></g><g><title>serde_bytes::serialize (204 samples, 0.19%)</title><rect x="17.3124%" y="1461" width="0.1900%" height="15" fill="rgb(221,58,24)" fg:x="18588" fg:w="204"/><text x="17.5624%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (204 samples, 0.19%)</title><rect x="17.3124%" y="1445" width="0.1900%" height="15" fill="rgb(230,54,45)" fg:x="18588" fg:w="204"/><text x="17.5624%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (203 samples, 0.19%)</title><rect x="17.3134%" y="1429" width="0.1891%" height="15" fill="rgb(254,21,18)" fg:x="18589" fg:w="203"/><text x="17.5634%" y="1439.50"></text></g><g><title>std::io::Write::write_all (194 samples, 0.18%)</title><rect x="17.3217%" y="1413" width="0.1807%" height="15" fill="rgb(221,108,0)" fg:x="18598" fg:w="194"/><text x="17.5717%" y="1423.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (194 samples, 0.18%)</title><rect x="17.3217%" y="1397" width="0.1807%" height="15" fill="rgb(206,95,1)" fg:x="18598" fg:w="194"/><text x="17.5717%" y="1407.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (193 samples, 0.18%)</title><rect x="17.3227%" y="1381" width="0.1798%" height="15" fill="rgb(237,52,5)" fg:x="18599" fg:w="193"/><text x="17.5727%" y="1391.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (179 samples, 0.17%)</title><rect x="17.3357%" y="1365" width="0.1667%" height="15" fill="rgb(218,150,34)" fg:x="18613" fg:w="179"/><text x="17.5857%" y="1375.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (179 samples, 0.17%)</title><rect x="17.3357%" y="1349" width="0.1667%" height="15" fill="rgb(235,194,28)" fg:x="18613" fg:w="179"/><text x="17.5857%" y="1359.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (179 samples, 0.17%)</title><rect x="17.3357%" y="1333" width="0.1667%" height="15" fill="rgb(245,92,18)" fg:x="18613" fg:w="179"/><text x="17.5857%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (36 samples, 0.03%)</title><rect x="17.4689%" y="1317" width="0.0335%" height="15" fill="rgb(253,203,53)" fg:x="18756" fg:w="36"/><text x="17.7189%" y="1327.50"></text></g><g><title>bcs::ser::serialize_into (211 samples, 0.20%)</title><rect x="17.3124%" y="1541" width="0.1965%" height="15" fill="rgb(249,185,47)" fg:x="18588" fg:w="211"/><text x="17.5624%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (211 samples, 0.20%)</title><rect x="17.3124%" y="1525" width="0.1965%" height="15" fill="rgb(252,194,52)" fg:x="18588" fg:w="211"/><text x="17.5624%" y="1535.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (211 samples, 0.20%)</title><rect x="17.3124%" y="1509" width="0.1965%" height="15" fill="rgb(210,53,36)" fg:x="18588" fg:w="211"/><text x="17.5624%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (211 samples, 0.20%)</title><rect x="17.3124%" y="1493" width="0.1965%" height="15" fill="rgb(237,37,25)" fg:x="18588" fg:w="211"/><text x="17.5624%" y="1503.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (581 samples, 0.54%)</title><rect x="16.9687%" y="1621" width="0.5411%" height="15" fill="rgb(242,116,27)" fg:x="18219" fg:w="581"/><text x="17.2187%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (581 samples, 0.54%)</title><rect x="16.9687%" y="1605" width="0.5411%" height="15" fill="rgb(213,185,26)" fg:x="18219" fg:w="581"/><text x="17.2187%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (581 samples, 0.54%)</title><rect x="16.9687%" y="1589" width="0.5411%" height="15" fill="rgb(225,204,8)" fg:x="18219" fg:w="581"/><text x="17.2187%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (581 samples, 0.54%)</title><rect x="16.9687%" y="1573" width="0.5411%" height="15" fill="rgb(254,111,37)" fg:x="18219" fg:w="581"/><text x="17.2187%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (581 samples, 0.54%)</title><rect x="16.9687%" y="1557" width="0.5411%" height="15" fill="rgb(242,35,9)" fg:x="18219" fg:w="581"/><text x="17.2187%" y="1567.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (30 samples, 0.03%)</title><rect x="17.5099%" y="1493" width="0.0279%" height="15" fill="rgb(232,138,49)" fg:x="18800" fg:w="30"/><text x="17.7599%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="17.5192%" y="1477" width="0.0186%" height="15" fill="rgb(247,56,4)" fg:x="18810" fg:w="20"/><text x="17.7692%" y="1487.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (20 samples, 0.02%)</title><rect x="17.5192%" y="1461" width="0.0186%" height="15" fill="rgb(226,179,17)" fg:x="18810" fg:w="20"/><text x="17.7692%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (20 samples, 0.02%)</title><rect x="17.5192%" y="1445" width="0.0186%" height="15" fill="rgb(216,163,45)" fg:x="18810" fg:w="20"/><text x="17.7692%" y="1455.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (37 samples, 0.03%)</title><rect x="17.5099%" y="1557" width="0.0345%" height="15" fill="rgb(211,157,3)" fg:x="18800" fg:w="37"/><text x="17.7599%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (37 samples, 0.03%)</title><rect x="17.5099%" y="1541" width="0.0345%" height="15" fill="rgb(234,44,20)" fg:x="18800" fg:w="37"/><text x="17.7599%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (37 samples, 0.03%)</title><rect x="17.5099%" y="1525" width="0.0345%" height="15" fill="rgb(254,138,23)" fg:x="18800" fg:w="37"/><text x="17.7599%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (37 samples, 0.03%)</title><rect x="17.5099%" y="1509" width="0.0345%" height="15" fill="rgb(206,119,39)" fg:x="18800" fg:w="37"/><text x="17.7599%" y="1519.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="17.5481%" y="1477" width="0.0121%" height="15" fill="rgb(231,105,52)" fg:x="18841" fg:w="13"/><text x="17.7981%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="17.5453%" y="1509" width="0.0177%" height="15" fill="rgb(250,20,5)" fg:x="18838" fg:w="19"/><text x="17.7953%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (16 samples, 0.01%)</title><rect x="17.5481%" y="1493" width="0.0149%" height="15" fill="rgb(215,198,30)" fg:x="18841" fg:w="16"/><text x="17.7981%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="17.5751%" y="1461" width="0.0130%" height="15" fill="rgb(246,142,8)" fg:x="18870" fg:w="14"/><text x="17.8251%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="17.5723%" y="1509" width="0.0168%" height="15" fill="rgb(243,26,38)" fg:x="18867" fg:w="18"/><text x="17.8223%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="17.5732%" y="1493" width="0.0158%" height="15" fill="rgb(205,133,28)" fg:x="18868" fg:w="17"/><text x="17.8232%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="17.5732%" y="1477" width="0.0158%" height="15" fill="rgb(212,34,0)" fg:x="18868" fg:w="17"/><text x="17.8232%" y="1487.50"></text></g><g><title>hashbrown::map::make_hash (49 samples, 0.05%)</title><rect x="17.5453%" y="1525" width="0.0456%" height="15" fill="rgb(251,226,22)" fg:x="18838" fg:w="49"/><text x="17.7953%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (15 samples, 0.01%)</title><rect x="17.5928%" y="1477" width="0.0140%" height="15" fill="rgb(252,119,9)" fg:x="18889" fg:w="15"/><text x="17.8428%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.01%)</title><rect x="17.5928%" y="1461" width="0.0140%" height="15" fill="rgb(213,150,50)" fg:x="18889" fg:w="15"/><text x="17.8428%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="17.5928%" y="1445" width="0.0140%" height="15" fill="rgb(212,24,39)" fg:x="18889" fg:w="15"/><text x="17.8428%" y="1455.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (794 samples, 0.74%)</title><rect x="16.8709%" y="1813" width="0.7395%" height="15" fill="rgb(213,46,39)" fg:x="18114" fg:w="794"/><text x="17.1209%" y="1823.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (794 samples, 0.74%)</title><rect x="16.8709%" y="1797" width="0.7395%" height="15" fill="rgb(239,106,12)" fg:x="18114" fg:w="794"/><text x="17.1209%" y="1807.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (689 samples, 0.64%)</title><rect x="16.9687%" y="1781" width="0.6417%" height="15" fill="rgb(249,229,21)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1791.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (689 samples, 0.64%)</title><rect x="16.9687%" y="1765" width="0.6417%" height="15" fill="rgb(212,158,3)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (689 samples, 0.64%)</title><rect x="16.9687%" y="1749" width="0.6417%" height="15" fill="rgb(253,26,48)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1759.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (689 samples, 0.64%)</title><rect x="16.9687%" y="1733" width="0.6417%" height="15" fill="rgb(238,178,20)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1743.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (689 samples, 0.64%)</title><rect x="16.9687%" y="1717" width="0.6417%" height="15" fill="rgb(208,86,15)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1727.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (689 samples, 0.64%)</title><rect x="16.9687%" y="1701" width="0.6417%" height="15" fill="rgb(239,42,53)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1711.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (689 samples, 0.64%)</title><rect x="16.9687%" y="1685" width="0.6417%" height="15" fill="rgb(245,226,8)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1695.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (689 samples, 0.64%)</title><rect x="16.9687%" y="1669" width="0.6417%" height="15" fill="rgb(216,176,32)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1679.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (689 samples, 0.64%)</title><rect x="16.9687%" y="1653" width="0.6417%" height="15" fill="rgb(231,186,21)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1663.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (689 samples, 0.64%)</title><rect x="16.9687%" y="1637" width="0.6417%" height="15" fill="rgb(205,95,49)" fg:x="18219" fg:w="689"/><text x="17.2187%" y="1647.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (108 samples, 0.10%)</title><rect x="17.5099%" y="1621" width="0.1006%" height="15" fill="rgb(217,145,8)" fg:x="18800" fg:w="108"/><text x="17.7599%" y="1631.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (108 samples, 0.10%)</title><rect x="17.5099%" y="1605" width="0.1006%" height="15" fill="rgb(239,144,48)" fg:x="18800" fg:w="108"/><text x="17.7599%" y="1615.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (108 samples, 0.10%)</title><rect x="17.5099%" y="1589" width="0.1006%" height="15" fill="rgb(214,189,23)" fg:x="18800" fg:w="108"/><text x="17.7599%" y="1599.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (108 samples, 0.10%)</title><rect x="17.5099%" y="1573" width="0.1006%" height="15" fill="rgb(229,157,17)" fg:x="18800" fg:w="108"/><text x="17.7599%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (71 samples, 0.07%)</title><rect x="17.5443%" y="1557" width="0.0661%" height="15" fill="rgb(230,5,48)" fg:x="18837" fg:w="71"/><text x="17.7943%" y="1567.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (71 samples, 0.07%)</title><rect x="17.5443%" y="1541" width="0.0661%" height="15" fill="rgb(224,156,48)" fg:x="18837" fg:w="71"/><text x="17.7943%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (21 samples, 0.02%)</title><rect x="17.5909%" y="1525" width="0.0196%" height="15" fill="rgb(223,14,29)" fg:x="18887" fg:w="21"/><text x="17.8409%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (21 samples, 0.02%)</title><rect x="17.5909%" y="1509" width="0.0196%" height="15" fill="rgb(229,96,36)" fg:x="18887" fg:w="21"/><text x="17.8409%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.02%)</title><rect x="17.5909%" y="1493" width="0.0196%" height="15" fill="rgb(231,102,53)" fg:x="18887" fg:w="21"/><text x="17.8409%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="17.6580%" y="1349" width="0.0186%" height="15" fill="rgb(210,77,38)" fg:x="18959" fg:w="20"/><text x="17.9080%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="17.6580%" y="1333" width="0.0186%" height="15" fill="rgb(235,131,6)" fg:x="18959" fg:w="20"/><text x="17.9080%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="17.6580%" y="1317" width="0.0186%" height="15" fill="rgb(252,55,38)" fg:x="18959" fg:w="20"/><text x="17.9080%" y="1327.50"></text></g><g><title>malloc (18 samples, 0.02%)</title><rect x="17.6598%" y="1301" width="0.0168%" height="15" fill="rgb(246,38,14)" fg:x="18961" fg:w="18"/><text x="17.9098%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="17.6561%" y="1397" width="0.0214%" height="15" fill="rgb(242,27,5)" fg:x="18957" fg:w="23"/><text x="17.9061%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="17.6561%" y="1381" width="0.0214%" height="15" fill="rgb(228,65,35)" fg:x="18957" fg:w="23"/><text x="17.9061%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="17.6561%" y="1365" width="0.0214%" height="15" fill="rgb(245,93,11)" fg:x="18957" fg:w="23"/><text x="17.9061%" y="1375.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="17.6291%" y="1493" width="0.0550%" height="15" fill="rgb(213,1,31)" fg:x="18928" fg:w="59"/><text x="17.8791%" y="1503.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (47 samples, 0.04%)</title><rect x="17.6403%" y="1477" width="0.0438%" height="15" fill="rgb(237,205,14)" fg:x="18940" fg:w="47"/><text x="17.8903%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.04%)</title><rect x="17.6421%" y="1461" width="0.0419%" height="15" fill="rgb(232,118,45)" fg:x="18942" fg:w="45"/><text x="17.8921%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.04%)</title><rect x="17.6477%" y="1445" width="0.0363%" height="15" fill="rgb(218,5,6)" fg:x="18948" fg:w="39"/><text x="17.8977%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.04%)</title><rect x="17.6477%" y="1429" width="0.0363%" height="15" fill="rgb(251,87,51)" fg:x="18948" fg:w="39"/><text x="17.8977%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.04%)</title><rect x="17.6477%" y="1413" width="0.0363%" height="15" fill="rgb(207,225,20)" fg:x="18948" fg:w="39"/><text x="17.8977%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="17.6840%" y="1493" width="0.0102%" height="15" fill="rgb(222,78,54)" fg:x="18987" fg:w="11"/><text x="17.9340%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (96 samples, 0.09%)</title><rect x="17.6105%" y="1813" width="0.0894%" height="15" fill="rgb(232,85,16)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (96 samples, 0.09%)</title><rect x="17.6105%" y="1797" width="0.0894%" height="15" fill="rgb(244,25,33)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (96 samples, 0.09%)</title><rect x="17.6105%" y="1781" width="0.0894%" height="15" fill="rgb(233,24,36)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1791.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="17.6105%" y="1765" width="0.0894%" height="15" fill="rgb(253,49,54)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="17.6105%" y="1749" width="0.0894%" height="15" fill="rgb(245,12,22)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96 samples, 0.09%)</title><rect x="17.6105%" y="1733" width="0.0894%" height="15" fill="rgb(253,141,28)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (96 samples, 0.09%)</title><rect x="17.6105%" y="1717" width="0.0894%" height="15" fill="rgb(225,207,27)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96 samples, 0.09%)</title><rect x="17.6105%" y="1701" width="0.0894%" height="15" fill="rgb(220,84,2)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1711.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="17.6105%" y="1685" width="0.0894%" height="15" fill="rgb(224,37,37)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1695.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="17.6105%" y="1669" width="0.0894%" height="15" fill="rgb(220,143,18)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="17.6105%" y="1653" width="0.0894%" height="15" fill="rgb(210,88,33)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96 samples, 0.09%)</title><rect x="17.6105%" y="1637" width="0.0894%" height="15" fill="rgb(219,87,51)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (96 samples, 0.09%)</title><rect x="17.6105%" y="1621" width="0.0894%" height="15" fill="rgb(211,7,35)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96 samples, 0.09%)</title><rect x="17.6105%" y="1605" width="0.0894%" height="15" fill="rgb(232,77,2)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1615.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="17.6105%" y="1589" width="0.0894%" height="15" fill="rgb(249,94,25)" fg:x="18908" fg:w="96"/><text x="17.8605%" y="1599.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (81 samples, 0.08%)</title><rect x="17.6244%" y="1573" width="0.0754%" height="15" fill="rgb(215,112,2)" fg:x="18923" fg:w="81"/><text x="17.8744%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79 samples, 0.07%)</title><rect x="17.6263%" y="1557" width="0.0736%" height="15" fill="rgb(226,115,48)" fg:x="18925" fg:w="79"/><text x="17.8763%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76 samples, 0.07%)</title><rect x="17.6291%" y="1541" width="0.0708%" height="15" fill="rgb(249,196,10)" fg:x="18928" fg:w="76"/><text x="17.8791%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (76 samples, 0.07%)</title><rect x="17.6291%" y="1525" width="0.0708%" height="15" fill="rgb(237,109,14)" fg:x="18928" fg:w="76"/><text x="17.8791%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (76 samples, 0.07%)</title><rect x="17.6291%" y="1509" width="0.0708%" height="15" fill="rgb(217,103,53)" fg:x="18928" fg:w="76"/><text x="17.8791%" y="1519.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (99 samples, 0.09%)</title><rect x="17.7241%" y="1397" width="0.0922%" height="15" fill="rgb(244,137,9)" fg:x="19030" fg:w="99"/><text x="17.9741%" y="1407.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (92 samples, 0.09%)</title><rect x="17.7306%" y="1381" width="0.0857%" height="15" fill="rgb(227,201,3)" fg:x="19037" fg:w="92"/><text x="17.9806%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (92 samples, 0.09%)</title><rect x="17.7306%" y="1365" width="0.0857%" height="15" fill="rgb(243,94,6)" fg:x="19037" fg:w="92"/><text x="17.9806%" y="1375.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (92 samples, 0.09%)</title><rect x="17.7306%" y="1349" width="0.0857%" height="15" fill="rgb(235,118,5)" fg:x="19037" fg:w="92"/><text x="17.9806%" y="1359.50"></text></g><g><title>serde::de::SeqAccess::next_element (69 samples, 0.06%)</title><rect x="17.7520%" y="1333" width="0.0643%" height="15" fill="rgb(247,10,30)" fg:x="19060" fg:w="69"/><text x="18.0020%" y="1343.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (69 samples, 0.06%)</title><rect x="17.7520%" y="1317" width="0.0643%" height="15" fill="rgb(205,26,28)" fg:x="19060" fg:w="69"/><text x="18.0020%" y="1327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (68 samples, 0.06%)</title><rect x="17.7530%" y="1301" width="0.0633%" height="15" fill="rgb(206,99,35)" fg:x="19061" fg:w="68"/><text x="18.0030%" y="1311.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (68 samples, 0.06%)</title><rect x="17.7530%" y="1285" width="0.0633%" height="15" fill="rgb(238,130,40)" fg:x="19061" fg:w="68"/><text x="18.0030%" y="1295.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (68 samples, 0.06%)</title><rect x="17.7530%" y="1269" width="0.0633%" height="15" fill="rgb(224,126,31)" fg:x="19061" fg:w="68"/><text x="18.0030%" y="1279.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (54 samples, 0.05%)</title><rect x="17.7660%" y="1253" width="0.0503%" height="15" fill="rgb(254,105,17)" fg:x="19075" fg:w="54"/><text x="18.0160%" y="1263.50"></text></g><g><title>bcs::de::Deserializer::next (23 samples, 0.02%)</title><rect x="17.7949%" y="1237" width="0.0214%" height="15" fill="rgb(216,87,36)" fg:x="19106" fg:w="23"/><text x="18.0449%" y="1247.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.02%)</title><rect x="17.8005%" y="1221" width="0.0158%" height="15" fill="rgb(240,21,12)" fg:x="19112" fg:w="17"/><text x="18.0505%" y="1231.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.02%)</title><rect x="17.8005%" y="1205" width="0.0158%" height="15" fill="rgb(245,192,34)" fg:x="19112" fg:w="17"/><text x="18.0505%" y="1215.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="17.8005%" y="1189" width="0.0158%" height="15" fill="rgb(226,100,49)" fg:x="19112" fg:w="17"/><text x="18.0505%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="17.8005%" y="1173" width="0.0158%" height="15" fill="rgb(245,188,27)" fg:x="19112" fg:w="17"/><text x="18.0505%" y="1183.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (17 samples, 0.02%)</title><rect x="17.8005%" y="1157" width="0.0158%" height="15" fill="rgb(212,170,8)" fg:x="19112" fg:w="17"/><text x="18.0505%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (17 samples, 0.02%)</title><rect x="17.8005%" y="1141" width="0.0158%" height="15" fill="rgb(217,113,29)" fg:x="19112" fg:w="17"/><text x="18.0505%" y="1151.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (127 samples, 0.12%)</title><rect x="17.7017%" y="1445" width="0.1183%" height="15" fill="rgb(237,30,3)" fg:x="19006" fg:w="127"/><text x="17.9517%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (110 samples, 0.10%)</title><rect x="17.7176%" y="1429" width="0.1025%" height="15" fill="rgb(227,19,28)" fg:x="19023" fg:w="110"/><text x="17.9676%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (110 samples, 0.10%)</title><rect x="17.7176%" y="1413" width="0.1025%" height="15" fill="rgb(239,172,45)" fg:x="19023" fg:w="110"/><text x="17.9676%" y="1423.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (137 samples, 0.13%)</title><rect x="17.6999%" y="1477" width="0.1276%" height="15" fill="rgb(254,55,39)" fg:x="19004" fg:w="137"/><text x="17.9499%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (137 samples, 0.13%)</title><rect x="17.6999%" y="1461" width="0.1276%" height="15" fill="rgb(249,208,12)" fg:x="19004" fg:w="137"/><text x="17.9499%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="17.8284%" y="1429" width="0.0233%" height="15" fill="rgb(240,52,13)" fg:x="19142" fg:w="25"/><text x="18.0784%" y="1439.50"></text></g><g><title>malloc (20 samples, 0.02%)</title><rect x="17.8331%" y="1413" width="0.0186%" height="15" fill="rgb(252,149,13)" fg:x="19147" fg:w="20"/><text x="18.0831%" y="1423.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="17.8349%" y="1397" width="0.0168%" height="15" fill="rgb(232,81,48)" fg:x="19149" fg:w="18"/><text x="18.0849%" y="1407.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (3,410 samples, 3.18%)</title><rect x="14.6766%" y="2053" width="3.1760%" height="15" fill="rgb(222,144,2)" fg:x="15758" fg:w="3410"/><text x="14.9266%" y="2063.50">&lt;ap..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (3,410 samples, 3.18%)</title><rect x="14.6766%" y="2037" width="3.1760%" height="15" fill="rgb(216,81,32)" fg:x="15758" fg:w="3410"/><text x="14.9266%" y="2047.50">apt..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (2,189 samples, 2.04%)</title><rect x="15.8138%" y="2021" width="2.0388%" height="15" fill="rgb(244,78,51)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="2031.50">a..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::success_transaction_cleanup (2,189 samples, 2.04%)</title><rect x="15.8138%" y="2005" width="2.0388%" height="15" fill="rgb(217,66,21)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="2015.50">a..</text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1989" width="2.0388%" height="15" fill="rgb(247,101,42)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1999.50">a..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1973" width="2.0388%" height="15" fill="rgb(227,81,39)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1983.50">m..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1957" width="2.0388%" height="15" fill="rgb(220,223,44)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1967.50">m..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1941" width="2.0388%" height="15" fill="rgb(205,218,2)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1951.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1925" width="2.0388%" height="15" fill="rgb(212,207,28)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1935.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1909" width="2.0388%" height="15" fill="rgb(224,12,41)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1919.50">m..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1893" width="2.0388%" height="15" fill="rgb(216,118,12)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1903.50">m..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (2,189 samples, 2.04%)</title><rect x="15.8138%" y="1877" width="2.0388%" height="15" fill="rgb(252,97,46)" fg:x="16979" fg:w="2189"/><text x="16.0638%" y="1887.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (1,054 samples, 0.98%)</title><rect x="16.8709%" y="1861" width="0.9817%" height="15" fill="rgb(244,206,19)" fg:x="18114" fg:w="1054"/><text x="17.1209%" y="1871.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,054 samples, 0.98%)</title><rect x="16.8709%" y="1845" width="0.9817%" height="15" fill="rgb(231,84,31)" fg:x="18114" fg:w="1054"/><text x="17.1209%" y="1855.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,054 samples, 0.98%)</title><rect x="16.8709%" y="1829" width="0.9817%" height="15" fill="rgb(244,133,0)" fg:x="18114" fg:w="1054"/><text x="17.1209%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1813" width="0.1527%" height="15" fill="rgb(223,15,50)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1823.50"></text></g><g><title>bcs::de::from_bytes_seed (164 samples, 0.15%)</title><rect x="17.6999%" y="1797" width="0.1527%" height="15" fill="rgb(250,118,49)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1781" width="0.1527%" height="15" fill="rgb(248,25,38)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1765" width="0.1527%" height="15" fill="rgb(215,70,14)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1775.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (164 samples, 0.15%)</title><rect x="17.6999%" y="1749" width="0.1527%" height="15" fill="rgb(215,28,15)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (164 samples, 0.15%)</title><rect x="17.6999%" y="1733" width="0.1527%" height="15" fill="rgb(243,6,28)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1743.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (164 samples, 0.15%)</title><rect x="17.6999%" y="1717" width="0.1527%" height="15" fill="rgb(222,130,1)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1701" width="0.1527%" height="15" fill="rgb(236,166,44)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1685" width="0.1527%" height="15" fill="rgb(221,108,14)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (164 samples, 0.15%)</title><rect x="17.6999%" y="1669" width="0.1527%" height="15" fill="rgb(252,3,45)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (164 samples, 0.15%)</title><rect x="17.6999%" y="1653" width="0.1527%" height="15" fill="rgb(237,68,30)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1663.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (164 samples, 0.15%)</title><rect x="17.6999%" y="1637" width="0.1527%" height="15" fill="rgb(211,79,22)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1621" width="0.1527%" height="15" fill="rgb(252,185,21)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1605" width="0.1527%" height="15" fill="rgb(225,189,26)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1615.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (164 samples, 0.15%)</title><rect x="17.6999%" y="1589" width="0.1527%" height="15" fill="rgb(241,30,40)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (164 samples, 0.15%)</title><rect x="17.6999%" y="1573" width="0.1527%" height="15" fill="rgb(235,215,44)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1583.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (164 samples, 0.15%)</title><rect x="17.6999%" y="1557" width="0.1527%" height="15" fill="rgb(205,8,29)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1541" width="0.1527%" height="15" fill="rgb(241,137,42)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 0.15%)</title><rect x="17.6999%" y="1525" width="0.1527%" height="15" fill="rgb(237,155,2)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (164 samples, 0.15%)</title><rect x="17.6999%" y="1509" width="0.1527%" height="15" fill="rgb(245,29,42)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (164 samples, 0.15%)</title><rect x="17.6999%" y="1493" width="0.1527%" height="15" fill="rgb(234,101,35)" fg:x="19004" fg:w="164"/><text x="17.9499%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (27 samples, 0.03%)</title><rect x="17.8275%" y="1477" width="0.0251%" height="15" fill="rgb(228,64,37)" fg:x="19141" fg:w="27"/><text x="18.0775%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (27 samples, 0.03%)</title><rect x="17.8275%" y="1461" width="0.0251%" height="15" fill="rgb(217,214,36)" fg:x="19141" fg:w="27"/><text x="18.0775%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.03%)</title><rect x="17.8275%" y="1445" width="0.0251%" height="15" fill="rgb(243,70,3)" fg:x="19141" fg:w="27"/><text x="18.0775%" y="1455.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (26 samples, 0.02%)</title><rect x="17.8601%" y="1557" width="0.0242%" height="15" fill="rgb(253,158,52)" fg:x="19176" fg:w="26"/><text x="18.1101%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (22 samples, 0.02%)</title><rect x="17.8638%" y="1541" width="0.0205%" height="15" fill="rgb(234,111,54)" fg:x="19180" fg:w="22"/><text x="18.1138%" y="1551.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.01%)</title><rect x="17.8899%" y="1509" width="0.0140%" height="15" fill="rgb(217,70,32)" fg:x="19208" fg:w="15"/><text x="18.1399%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (15 samples, 0.01%)</title><rect x="17.8899%" y="1493" width="0.0140%" height="15" fill="rgb(234,18,33)" fg:x="19208" fg:w="15"/><text x="18.1399%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (15 samples, 0.01%)</title><rect x="17.8899%" y="1477" width="0.0140%" height="15" fill="rgb(234,12,49)" fg:x="19208" fg:w="15"/><text x="18.1399%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (13 samples, 0.01%)</title><rect x="17.8917%" y="1461" width="0.0121%" height="15" fill="rgb(236,10,21)" fg:x="19210" fg:w="13"/><text x="18.1417%" y="1471.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (21 samples, 0.02%)</title><rect x="17.8871%" y="1525" width="0.0196%" height="15" fill="rgb(248,182,45)" fg:x="19205" fg:w="21"/><text x="18.1371%" y="1535.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (11 samples, 0.01%)</title><rect x="17.9215%" y="1333" width="0.0102%" height="15" fill="rgb(217,95,36)" fg:x="19242" fg:w="11"/><text x="18.1715%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::parse_length (11 samples, 0.01%)</title><rect x="17.9215%" y="1317" width="0.0102%" height="15" fill="rgb(212,110,31)" fg:x="19242" fg:w="11"/><text x="18.1715%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::parse_string (66 samples, 0.06%)</title><rect x="17.9169%" y="1349" width="0.0615%" height="15" fill="rgb(206,32,53)" fg:x="19237" fg:w="66"/><text x="18.1669%" y="1359.50"></text></g><g><title>core::str::converts::from_utf8 (41 samples, 0.04%)</title><rect x="17.9402%" y="1333" width="0.0382%" height="15" fill="rgb(246,141,37)" fg:x="19262" fg:w="41"/><text x="18.1902%" y="1343.50"></text></g><g><title>core::str::validations::run_utf8_validation (33 samples, 0.03%)</title><rect x="17.9476%" y="1317" width="0.0307%" height="15" fill="rgb(219,16,7)" fg:x="19270" fg:w="33"/><text x="18.1976%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.02%)</title><rect x="17.9784%" y="1221" width="0.0242%" height="15" fill="rgb(230,205,45)" fg:x="19303" fg:w="26"/><text x="18.2284%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.02%)</title><rect x="17.9784%" y="1205" width="0.0242%" height="15" fill="rgb(231,43,49)" fg:x="19303" fg:w="26"/><text x="18.2284%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.02%)</title><rect x="17.9784%" y="1189" width="0.0242%" height="15" fill="rgb(212,106,34)" fg:x="19303" fg:w="26"/><text x="18.2284%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="17.9811%" y="1173" width="0.0214%" height="15" fill="rgb(206,83,17)" fg:x="19306" fg:w="23"/><text x="18.2311%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="17.9811%" y="1157" width="0.0214%" height="15" fill="rgb(244,154,49)" fg:x="19306" fg:w="23"/><text x="18.2311%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="17.9811%" y="1141" width="0.0214%" height="15" fill="rgb(244,149,49)" fg:x="19306" fg:w="23"/><text x="18.2311%" y="1151.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="17.9849%" y="1125" width="0.0177%" height="15" fill="rgb(227,134,18)" fg:x="19310" fg:w="19"/><text x="18.2349%" y="1135.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (96 samples, 0.09%)</title><rect x="17.9160%" y="1461" width="0.0894%" height="15" fill="rgb(237,116,36)" fg:x="19236" fg:w="96"/><text x="18.1660%" y="1471.50"></text></g><g><title>serde::de::SeqAccess::next_element (96 samples, 0.09%)</title><rect x="17.9160%" y="1445" width="0.0894%" height="15" fill="rgb(205,129,40)" fg:x="19236" fg:w="96"/><text x="18.1660%" y="1455.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (96 samples, 0.09%)</title><rect x="17.9160%" y="1429" width="0.0894%" height="15" fill="rgb(236,178,4)" fg:x="19236" fg:w="96"/><text x="18.1660%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (96 samples, 0.09%)</title><rect x="17.9160%" y="1413" width="0.0894%" height="15" fill="rgb(251,76,53)" fg:x="19236" fg:w="96"/><text x="18.1660%" y="1423.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (96 samples, 0.09%)</title><rect x="17.9160%" y="1397" width="0.0894%" height="15" fill="rgb(242,92,40)" fg:x="19236" fg:w="96"/><text x="18.1660%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (96 samples, 0.09%)</title><rect x="17.9160%" y="1381" width="0.0894%" height="15" fill="rgb(209,45,30)" fg:x="19236" fg:w="96"/><text x="18.1660%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (96 samples, 0.09%)</title><rect x="17.9160%" y="1365" width="0.0894%" height="15" fill="rgb(218,157,36)" fg:x="19236" fg:w="96"/><text x="18.1660%" y="1375.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (29 samples, 0.03%)</title><rect x="17.9784%" y="1349" width="0.0270%" height="15" fill="rgb(222,186,16)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1359.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (29 samples, 0.03%)</title><rect x="17.9784%" y="1333" width="0.0270%" height="15" fill="rgb(254,72,35)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1343.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (29 samples, 0.03%)</title><rect x="17.9784%" y="1317" width="0.0270%" height="15" fill="rgb(224,25,35)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (29 samples, 0.03%)</title><rect x="17.9784%" y="1301" width="0.0270%" height="15" fill="rgb(206,135,52)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 0.03%)</title><rect x="17.9784%" y="1285" width="0.0270%" height="15" fill="rgb(229,174,47)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.03%)</title><rect x="17.9784%" y="1269" width="0.0270%" height="15" fill="rgb(242,184,21)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.03%)</title><rect x="17.9784%" y="1253" width="0.0270%" height="15" fill="rgb(213,22,45)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.03%)</title><rect x="17.9784%" y="1237" width="0.0270%" height="15" fill="rgb(237,81,54)" fg:x="19303" fg:w="29"/><text x="18.2284%" y="1247.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (162 samples, 0.15%)</title><rect x="17.8563%" y="1573" width="0.1509%" height="15" fill="rgb(248,177,18)" fg:x="19172" fg:w="162"/><text x="18.1063%" y="1583.50"></text></g><g><title>serde::de::MapAccess::next_entry (132 samples, 0.12%)</title><rect x="17.8843%" y="1557" width="0.1229%" height="15" fill="rgb(254,31,16)" fg:x="19202" fg:w="132"/><text x="18.1343%" y="1567.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (132 samples, 0.12%)</title><rect x="17.8843%" y="1541" width="0.1229%" height="15" fill="rgb(235,20,31)" fg:x="19202" fg:w="132"/><text x="18.1343%" y="1551.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (108 samples, 0.10%)</title><rect x="17.9066%" y="1525" width="0.1006%" height="15" fill="rgb(240,56,43)" fg:x="19226" fg:w="108"/><text x="18.1566%" y="1535.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.10%)</title><rect x="17.9066%" y="1509" width="0.1006%" height="15" fill="rgb(237,197,51)" fg:x="19226" fg:w="108"/><text x="18.1566%" y="1519.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (108 samples, 0.10%)</title><rect x="17.9066%" y="1493" width="0.1006%" height="15" fill="rgb(241,162,44)" fg:x="19226" fg:w="108"/><text x="18.1566%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (108 samples, 0.10%)</title><rect x="17.9066%" y="1477" width="0.1006%" height="15" fill="rgb(224,23,20)" fg:x="19226" fg:w="108"/><text x="18.1566%" y="1487.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (176 samples, 0.16%)</title><rect x="17.8526%" y="1749" width="0.1639%" height="15" fill="rgb(250,109,34)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1759.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (176 samples, 0.16%)</title><rect x="17.8526%" y="1733" width="0.1639%" height="15" fill="rgb(214,175,50)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1743.50"></text></g><g><title>bcs::de::from_bytes (176 samples, 0.16%)</title><rect x="17.8526%" y="1717" width="0.1639%" height="15" fill="rgb(213,182,5)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1727.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (176 samples, 0.16%)</title><rect x="17.8526%" y="1701" width="0.1639%" height="15" fill="rgb(209,199,19)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (176 samples, 0.16%)</title><rect x="17.8526%" y="1685" width="0.1639%" height="15" fill="rgb(236,224,42)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1695.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (176 samples, 0.16%)</title><rect x="17.8526%" y="1669" width="0.1639%" height="15" fill="rgb(246,226,29)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1679.50"></text></g><g><title>serde::de::SeqAccess::next_element (176 samples, 0.16%)</title><rect x="17.8526%" y="1653" width="0.1639%" height="15" fill="rgb(227,223,11)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1663.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (176 samples, 0.16%)</title><rect x="17.8526%" y="1637" width="0.1639%" height="15" fill="rgb(219,7,51)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1647.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (176 samples, 0.16%)</title><rect x="17.8526%" y="1621" width="0.1639%" height="15" fill="rgb(245,167,10)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1631.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (176 samples, 0.16%)</title><rect x="17.8526%" y="1605" width="0.1639%" height="15" fill="rgb(237,224,16)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1615.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (176 samples, 0.16%)</title><rect x="17.8526%" y="1589" width="0.1639%" height="15" fill="rgb(226,132,13)" fg:x="19168" fg:w="176"/><text x="18.1026%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (88 samples, 0.08%)</title><rect x="18.0165%" y="1605" width="0.0820%" height="15" fill="rgb(214,140,3)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (88 samples, 0.08%)</title><rect x="18.0165%" y="1589" width="0.0820%" height="15" fill="rgb(221,177,4)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (88 samples, 0.08%)</title><rect x="18.0165%" y="1573" width="0.0820%" height="15" fill="rgb(238,139,3)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (88 samples, 0.08%)</title><rect x="18.0165%" y="1557" width="0.0820%" height="15" fill="rgb(216,17,39)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (88 samples, 0.08%)</title><rect x="18.0165%" y="1541" width="0.0820%" height="15" fill="rgb(238,120,9)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (88 samples, 0.08%)</title><rect x="18.0165%" y="1525" width="0.0820%" height="15" fill="rgb(244,92,53)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (88 samples, 0.08%)</title><rect x="18.0165%" y="1509" width="0.0820%" height="15" fill="rgb(224,148,33)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (88 samples, 0.08%)</title><rect x="18.0165%" y="1493" width="0.0820%" height="15" fill="rgb(243,6,36)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (88 samples, 0.08%)</title><rect x="18.0165%" y="1477" width="0.0820%" height="15" fill="rgb(230,102,11)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (88 samples, 0.08%)</title><rect x="18.0165%" y="1461" width="0.0820%" height="15" fill="rgb(234,148,36)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (88 samples, 0.08%)</title><rect x="18.0165%" y="1445" width="0.0820%" height="15" fill="rgb(251,153,25)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (88 samples, 0.08%)</title><rect x="18.0165%" y="1429" width="0.0820%" height="15" fill="rgb(215,129,8)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (88 samples, 0.08%)</title><rect x="18.0165%" y="1413" width="0.0820%" height="15" fill="rgb(224,128,35)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (88 samples, 0.08%)</title><rect x="18.0165%" y="1397" width="0.0820%" height="15" fill="rgb(237,56,52)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (88 samples, 0.08%)</title><rect x="18.0165%" y="1381" width="0.0820%" height="15" fill="rgb(234,213,19)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (88 samples, 0.08%)</title><rect x="18.0165%" y="1365" width="0.0820%" height="15" fill="rgb(252,82,23)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (88 samples, 0.08%)</title><rect x="18.0165%" y="1349" width="0.0820%" height="15" fill="rgb(254,201,21)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (88 samples, 0.08%)</title><rect x="18.0165%" y="1333" width="0.0820%" height="15" fill="rgb(250,186,11)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1343.50"></text></g><g><title>realloc (88 samples, 0.08%)</title><rect x="18.0165%" y="1317" width="0.0820%" height="15" fill="rgb(211,174,5)" fg:x="19344" fg:w="88"/><text x="18.2665%" y="1327.50"></text></g><g><title>[libc.so.6] (56 samples, 0.05%)</title><rect x="18.0463%" y="1301" width="0.0522%" height="15" fill="rgb(214,121,10)" fg:x="19376" fg:w="56"/><text x="18.2963%" y="1311.50"></text></g><g><title>[libc.so.6] (46 samples, 0.04%)</title><rect x="18.0557%" y="1285" width="0.0428%" height="15" fill="rgb(241,66,2)" fg:x="19386" fg:w="46"/><text x="18.3057%" y="1295.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (120 samples, 0.11%)</title><rect x="18.0165%" y="1717" width="0.1118%" height="15" fill="rgb(220,167,19)" fg:x="19344" fg:w="120"/><text x="18.2665%" y="1727.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (120 samples, 0.11%)</title><rect x="18.0165%" y="1701" width="0.1118%" height="15" fill="rgb(231,54,50)" fg:x="19344" fg:w="120"/><text x="18.2665%" y="1711.50"></text></g><g><title>bcs::ser::to_bytes (120 samples, 0.11%)</title><rect x="18.0165%" y="1685" width="0.1118%" height="15" fill="rgb(239,217,53)" fg:x="19344" fg:w="120"/><text x="18.2665%" y="1695.50"></text></g><g><title>bcs::ser::serialize_into (120 samples, 0.11%)</title><rect x="18.0165%" y="1669" width="0.1118%" height="15" fill="rgb(248,8,0)" fg:x="19344" fg:w="120"/><text x="18.2665%" y="1679.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (120 samples, 0.11%)</title><rect x="18.0165%" y="1653" width="0.1118%" height="15" fill="rgb(229,118,37)" fg:x="19344" fg:w="120"/><text x="18.2665%" y="1663.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (120 samples, 0.11%)</title><rect x="18.0165%" y="1637" width="0.1118%" height="15" fill="rgb(253,223,43)" fg:x="19344" fg:w="120"/><text x="18.2665%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (120 samples, 0.11%)</title><rect x="18.0165%" y="1621" width="0.1118%" height="15" fill="rgb(211,77,36)" fg:x="19344" fg:w="120"/><text x="18.2665%" y="1631.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (32 samples, 0.03%)</title><rect x="18.0985%" y="1605" width="0.0298%" height="15" fill="rgb(219,3,53)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (32 samples, 0.03%)</title><rect x="18.0985%" y="1589" width="0.0298%" height="15" fill="rgb(244,45,42)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (32 samples, 0.03%)</title><rect x="18.0985%" y="1573" width="0.0298%" height="15" fill="rgb(225,95,27)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (32 samples, 0.03%)</title><rect x="18.0985%" y="1557" width="0.0298%" height="15" fill="rgb(207,74,8)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (32 samples, 0.03%)</title><rect x="18.0985%" y="1541" width="0.0298%" height="15" fill="rgb(243,63,36)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (32 samples, 0.03%)</title><rect x="18.0985%" y="1525" width="0.0298%" height="15" fill="rgb(211,180,12)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (32 samples, 0.03%)</title><rect x="18.0985%" y="1509" width="0.0298%" height="15" fill="rgb(254,166,49)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 0.03%)</title><rect x="18.0985%" y="1493" width="0.0298%" height="15" fill="rgb(205,19,0)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.03%)</title><rect x="18.0985%" y="1477" width="0.0298%" height="15" fill="rgb(224,172,32)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 0.03%)</title><rect x="18.0985%" y="1461" width="0.0298%" height="15" fill="rgb(254,136,30)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="18.0985%" y="1445" width="0.0298%" height="15" fill="rgb(246,19,35)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="18.0985%" y="1429" width="0.0298%" height="15" fill="rgb(219,24,36)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.03%)</title><rect x="18.0985%" y="1413" width="0.0298%" height="15" fill="rgb(251,55,1)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.03%)</title><rect x="18.0985%" y="1397" width="0.0298%" height="15" fill="rgb(218,117,39)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="18.0985%" y="1381" width="0.0298%" height="15" fill="rgb(248,169,11)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (32 samples, 0.03%)</title><rect x="18.0985%" y="1365" width="0.0298%" height="15" fill="rgb(244,40,44)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.03%)</title><rect x="18.0985%" y="1349" width="0.0298%" height="15" fill="rgb(234,62,37)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (32 samples, 0.03%)</title><rect x="18.0985%" y="1333" width="0.0298%" height="15" fill="rgb(207,117,42)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1343.50"></text></g><g><title>realloc (32 samples, 0.03%)</title><rect x="18.0985%" y="1317" width="0.0298%" height="15" fill="rgb(213,43,2)" fg:x="19432" fg:w="32"/><text x="18.3485%" y="1327.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="18.1032%" y="1301" width="0.0251%" height="15" fill="rgb(244,202,51)" fg:x="19437" fg:w="27"/><text x="18.3532%" y="1311.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="18.1106%" y="1285" width="0.0177%" height="15" fill="rgb(253,174,46)" fg:x="19445" fg:w="19"/><text x="18.3606%" y="1295.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (12 samples, 0.01%)</title><rect x="18.1609%" y="1589" width="0.0112%" height="15" fill="rgb(251,23,1)" fg:x="19499" fg:w="12"/><text x="18.4109%" y="1599.50"></text></g><g><title>bcs::ser::serialize_into (15 samples, 0.01%)</title><rect x="18.1777%" y="1589" width="0.0140%" height="15" fill="rgb(253,26,1)" fg:x="19517" fg:w="15"/><text x="18.4277%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 0.01%)</title><rect x="18.1777%" y="1573" width="0.0140%" height="15" fill="rgb(216,89,31)" fg:x="19517" fg:w="15"/><text x="18.4277%" y="1583.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (15 samples, 0.01%)</title><rect x="18.1777%" y="1557" width="0.0140%" height="15" fill="rgb(209,109,5)" fg:x="19517" fg:w="15"/><text x="18.4277%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (15 samples, 0.01%)</title><rect x="18.1777%" y="1541" width="0.0140%" height="15" fill="rgb(229,63,13)" fg:x="19517" fg:w="15"/><text x="18.4277%" y="1551.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.04%)</title><rect x="18.1507%" y="1653" width="0.0419%" height="15" fill="rgb(238,137,54)" fg:x="19488" fg:w="45"/><text x="18.4007%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (43 samples, 0.04%)</title><rect x="18.1525%" y="1637" width="0.0400%" height="15" fill="rgb(228,1,9)" fg:x="19490" fg:w="43"/><text x="18.4025%" y="1647.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (43 samples, 0.04%)</title><rect x="18.1525%" y="1621" width="0.0400%" height="15" fill="rgb(249,120,48)" fg:x="19490" fg:w="43"/><text x="18.4025%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (37 samples, 0.03%)</title><rect x="18.1581%" y="1605" width="0.0345%" height="15" fill="rgb(209,72,36)" fg:x="19496" fg:w="37"/><text x="18.4081%" y="1615.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="18.2047%" y="1525" width="0.0224%" height="15" fill="rgb(247,98,49)" fg:x="19546" fg:w="24"/><text x="18.4547%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="18.2103%" y="1509" width="0.0168%" height="15" fill="rgb(233,75,36)" fg:x="19552" fg:w="18"/><text x="18.4603%" y="1519.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (18 samples, 0.02%)</title><rect x="18.2103%" y="1493" width="0.0168%" height="15" fill="rgb(225,14,24)" fg:x="19552" fg:w="18"/><text x="18.4603%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (18 samples, 0.02%)</title><rect x="18.2103%" y="1477" width="0.0168%" height="15" fill="rgb(237,193,20)" fg:x="19552" fg:w="18"/><text x="18.4603%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="18.2140%" y="1461" width="0.0130%" height="15" fill="rgb(239,122,19)" fg:x="19556" fg:w="14"/><text x="18.4640%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="18.2140%" y="1445" width="0.0130%" height="15" fill="rgb(231,220,10)" fg:x="19556" fg:w="14"/><text x="18.4640%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="18.2140%" y="1429" width="0.0130%" height="15" fill="rgb(220,66,15)" fg:x="19556" fg:w="14"/><text x="18.4640%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="18.2140%" y="1413" width="0.0130%" height="15" fill="rgb(215,171,52)" fg:x="19556" fg:w="14"/><text x="18.4640%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (29 samples, 0.03%)</title><rect x="18.2037%" y="1557" width="0.0270%" height="15" fill="rgb(241,169,50)" fg:x="19545" fg:w="29"/><text x="18.4537%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (28 samples, 0.03%)</title><rect x="18.2047%" y="1541" width="0.0261%" height="15" fill="rgb(236,189,0)" fg:x="19546" fg:w="28"/><text x="18.4547%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (50 samples, 0.05%)</title><rect x="18.1954%" y="1605" width="0.0466%" height="15" fill="rgb(217,147,20)" fg:x="19536" fg:w="50"/><text x="18.4454%" y="1615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (50 samples, 0.05%)</title><rect x="18.1954%" y="1589" width="0.0466%" height="15" fill="rgb(206,188,39)" fg:x="19536" fg:w="50"/><text x="18.4454%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.04%)</title><rect x="18.2037%" y="1573" width="0.0382%" height="15" fill="rgb(227,118,25)" fg:x="19545" fg:w="41"/><text x="18.4537%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="18.2308%" y="1557" width="0.0112%" height="15" fill="rgb(248,171,40)" fg:x="19574" fg:w="12"/><text x="18.4808%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="18.2308%" y="1541" width="0.0112%" height="15" fill="rgb(251,90,54)" fg:x="19574" fg:w="12"/><text x="18.4808%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="18.2308%" y="1525" width="0.0112%" height="15" fill="rgb(234,11,46)" fg:x="19574" fg:w="12"/><text x="18.4808%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.01%)</title><rect x="18.2308%" y="1509" width="0.0112%" height="15" fill="rgb(229,134,13)" fg:x="19574" fg:w="12"/><text x="18.4808%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (43 samples, 0.04%)</title><rect x="18.2447%" y="1557" width="0.0400%" height="15" fill="rgb(223,129,3)" fg:x="19589" fg:w="43"/><text x="18.4947%" y="1567.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (43 samples, 0.04%)</title><rect x="18.2447%" y="1541" width="0.0400%" height="15" fill="rgb(221,124,13)" fg:x="19589" fg:w="43"/><text x="18.4947%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (43 samples, 0.04%)</title><rect x="18.2447%" y="1525" width="0.0400%" height="15" fill="rgb(234,3,18)" fg:x="19589" fg:w="43"/><text x="18.4947%" y="1535.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (41 samples, 0.04%)</title><rect x="18.2466%" y="1509" width="0.0382%" height="15" fill="rgb(249,199,20)" fg:x="19591" fg:w="41"/><text x="18.4966%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (41 samples, 0.04%)</title><rect x="18.2466%" y="1493" width="0.0382%" height="15" fill="rgb(224,134,6)" fg:x="19591" fg:w="41"/><text x="18.4966%" y="1503.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="18.2643%" y="1477" width="0.0205%" height="15" fill="rgb(254,83,26)" fg:x="19610" fg:w="22"/><text x="18.5143%" y="1487.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (16 samples, 0.01%)</title><rect x="18.2866%" y="1557" width="0.0149%" height="15" fill="rgb(217,88,9)" fg:x="19634" fg:w="16"/><text x="18.5366%" y="1567.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (16 samples, 0.01%)</title><rect x="18.2866%" y="1541" width="0.0149%" height="15" fill="rgb(225,73,2)" fg:x="19634" fg:w="16"/><text x="18.5366%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="18.2866%" y="1525" width="0.0149%" height="15" fill="rgb(226,44,39)" fg:x="19634" fg:w="16"/><text x="18.5366%" y="1535.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (176 samples, 0.16%)</title><rect x="18.1386%" y="1669" width="0.1639%" height="15" fill="rgb(228,53,17)" fg:x="19475" fg:w="176"/><text x="18.3886%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (118 samples, 0.11%)</title><rect x="18.1926%" y="1653" width="0.1099%" height="15" fill="rgb(212,27,27)" fg:x="19533" fg:w="118"/><text x="18.4426%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (118 samples, 0.11%)</title><rect x="18.1926%" y="1637" width="0.1099%" height="15" fill="rgb(241,50,6)" fg:x="19533" fg:w="118"/><text x="18.4426%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (118 samples, 0.11%)</title><rect x="18.1926%" y="1621" width="0.1099%" height="15" fill="rgb(225,28,51)" fg:x="19533" fg:w="118"/><text x="18.4426%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (65 samples, 0.06%)</title><rect x="18.2419%" y="1605" width="0.0605%" height="15" fill="rgb(215,33,16)" fg:x="19586" fg:w="65"/><text x="18.4919%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (65 samples, 0.06%)</title><rect x="18.2419%" y="1589" width="0.0605%" height="15" fill="rgb(243,40,39)" fg:x="19586" fg:w="65"/><text x="18.4919%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (65 samples, 0.06%)</title><rect x="18.2419%" y="1573" width="0.0605%" height="15" fill="rgb(225,11,42)" fg:x="19586" fg:w="65"/><text x="18.4919%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="18.3099%" y="1653" width="0.0130%" height="15" fill="rgb(241,220,38)" fg:x="19659" fg:w="14"/><text x="18.5599%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="18.3286%" y="1605" width="0.0102%" height="15" fill="rgb(244,52,35)" fg:x="19679" fg:w="11"/><text x="18.5786%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="18.3239%" y="1637" width="0.0158%" height="15" fill="rgb(246,42,46)" fg:x="19674" fg:w="17"/><text x="18.5739%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="18.3267%" y="1621" width="0.0130%" height="15" fill="rgb(205,184,13)" fg:x="19677" fg:w="14"/><text x="18.5767%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.02%)</title><rect x="18.3230%" y="1653" width="0.0196%" height="15" fill="rgb(209,48,36)" fg:x="19673" fg:w="21"/><text x="18.5730%" y="1663.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (26 samples, 0.02%)</title><rect x="18.3593%" y="1541" width="0.0242%" height="15" fill="rgb(244,34,51)" fg:x="19712" fg:w="26"/><text x="18.6093%" y="1551.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (26 samples, 0.02%)</title><rect x="18.3593%" y="1525" width="0.0242%" height="15" fill="rgb(221,107,33)" fg:x="19712" fg:w="26"/><text x="18.6093%" y="1535.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (34 samples, 0.03%)</title><rect x="18.3528%" y="1605" width="0.0317%" height="15" fill="rgb(224,203,12)" fg:x="19705" fg:w="34"/><text x="18.6028%" y="1615.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (33 samples, 0.03%)</title><rect x="18.3537%" y="1589" width="0.0307%" height="15" fill="rgb(230,215,18)" fg:x="19706" fg:w="33"/><text x="18.6037%" y="1599.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (33 samples, 0.03%)</title><rect x="18.3537%" y="1573" width="0.0307%" height="15" fill="rgb(206,185,35)" fg:x="19706" fg:w="33"/><text x="18.6037%" y="1583.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (27 samples, 0.03%)</title><rect x="18.3593%" y="1557" width="0.0251%" height="15" fill="rgb(228,140,34)" fg:x="19712" fg:w="27"/><text x="18.6093%" y="1567.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (23 samples, 0.02%)</title><rect x="18.3919%" y="1541" width="0.0214%" height="15" fill="rgb(208,93,13)" fg:x="19747" fg:w="23"/><text x="18.6419%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="18.3965%" y="1525" width="0.0168%" height="15" fill="rgb(221,193,39)" fg:x="19752" fg:w="18"/><text x="18.6465%" y="1535.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (18 samples, 0.02%)</title><rect x="18.3965%" y="1509" width="0.0168%" height="15" fill="rgb(241,132,34)" fg:x="19752" fg:w="18"/><text x="18.6465%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (18 samples, 0.02%)</title><rect x="18.3965%" y="1493" width="0.0168%" height="15" fill="rgb(221,141,10)" fg:x="19752" fg:w="18"/><text x="18.6465%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (28 samples, 0.03%)</title><rect x="18.3919%" y="1573" width="0.0261%" height="15" fill="rgb(226,90,31)" fg:x="19747" fg:w="28"/><text x="18.6419%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (28 samples, 0.03%)</title><rect x="18.3919%" y="1557" width="0.0261%" height="15" fill="rgb(243,75,5)" fg:x="19747" fg:w="28"/><text x="18.6419%" y="1567.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (44 samples, 0.04%)</title><rect x="18.3882%" y="1605" width="0.0410%" height="15" fill="rgb(227,156,21)" fg:x="19743" fg:w="44"/><text x="18.6382%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.04%)</title><rect x="18.3919%" y="1589" width="0.0373%" height="15" fill="rgb(250,195,8)" fg:x="19747" fg:w="40"/><text x="18.6419%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="18.4180%" y="1573" width="0.0112%" height="15" fill="rgb(220,134,5)" fg:x="19775" fg:w="12"/><text x="18.6680%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="18.4180%" y="1557" width="0.0112%" height="15" fill="rgb(246,106,34)" fg:x="19775" fg:w="12"/><text x="18.6680%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="18.4180%" y="1541" width="0.0112%" height="15" fill="rgb(205,1,4)" fg:x="19775" fg:w="12"/><text x="18.6680%" y="1551.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="18.4329%" y="1525" width="0.0158%" height="15" fill="rgb(224,151,29)" fg:x="19791" fg:w="17"/><text x="18.6829%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="18.4375%" y="1509" width="0.0112%" height="15" fill="rgb(251,196,0)" fg:x="19796" fg:w="12"/><text x="18.6875%" y="1519.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.01%)</title><rect x="18.4375%" y="1493" width="0.0112%" height="15" fill="rgb(212,127,0)" fg:x="19796" fg:w="12"/><text x="18.6875%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.01%)</title><rect x="18.4375%" y="1477" width="0.0112%" height="15" fill="rgb(236,71,53)" fg:x="19796" fg:w="12"/><text x="18.6875%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="18.4319%" y="1557" width="0.0196%" height="15" fill="rgb(227,99,0)" fg:x="19790" fg:w="21"/><text x="18.6819%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="18.4329%" y="1541" width="0.0186%" height="15" fill="rgb(239,89,21)" fg:x="19791" fg:w="20"/><text x="18.6829%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.03%)</title><rect x="18.4319%" y="1573" width="0.0317%" height="15" fill="rgb(243,122,19)" fg:x="19790" fg:w="34"/><text x="18.6819%" y="1583.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (131 samples, 0.12%)</title><rect x="18.3500%" y="1653" width="0.1220%" height="15" fill="rgb(229,192,45)" fg:x="19702" fg:w="131"/><text x="18.6000%" y="1663.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (129 samples, 0.12%)</title><rect x="18.3518%" y="1637" width="0.1201%" height="15" fill="rgb(235,165,35)" fg:x="19704" fg:w="129"/><text x="18.6018%" y="1647.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (129 samples, 0.12%)</title><rect x="18.3518%" y="1621" width="0.1201%" height="15" fill="rgb(253,202,0)" fg:x="19704" fg:w="129"/><text x="18.6018%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (46 samples, 0.04%)</title><rect x="18.4291%" y="1605" width="0.0428%" height="15" fill="rgb(235,51,20)" fg:x="19787" fg:w="46"/><text x="18.6791%" y="1615.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.04%)</title><rect x="18.4301%" y="1589" width="0.0419%" height="15" fill="rgb(218,95,46)" fg:x="19788" fg:w="45"/><text x="18.6801%" y="1599.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (666 samples, 0.62%)</title><rect x="17.8526%" y="1781" width="0.6203%" height="15" fill="rgb(212,81,10)" fg:x="19168" fg:w="666"/><text x="18.1026%" y="1791.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (666 samples, 0.62%)</title><rect x="17.8526%" y="1765" width="0.6203%" height="15" fill="rgb(240,59,0)" fg:x="19168" fg:w="666"/><text x="18.1026%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (490 samples, 0.46%)</title><rect x="18.0165%" y="1749" width="0.4564%" height="15" fill="rgb(212,191,42)" fg:x="19344" fg:w="490"/><text x="18.2665%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (490 samples, 0.46%)</title><rect x="18.0165%" y="1733" width="0.4564%" height="15" fill="rgb(233,140,3)" fg:x="19344" fg:w="490"/><text x="18.2665%" y="1743.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (370 samples, 0.34%)</title><rect x="18.1283%" y="1717" width="0.3446%" height="15" fill="rgb(215,69,23)" fg:x="19464" fg:w="370"/><text x="18.3783%" y="1727.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (370 samples, 0.34%)</title><rect x="18.1283%" y="1701" width="0.3446%" height="15" fill="rgb(240,202,20)" fg:x="19464" fg:w="370"/><text x="18.3783%" y="1711.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (370 samples, 0.34%)</title><rect x="18.1283%" y="1685" width="0.3446%" height="15" fill="rgb(209,146,50)" fg:x="19464" fg:w="370"/><text x="18.3783%" y="1695.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (183 samples, 0.17%)</title><rect x="18.3025%" y="1669" width="0.1704%" height="15" fill="rgb(253,102,54)" fg:x="19651" fg:w="183"/><text x="18.5525%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.01%)</title><rect x="18.4729%" y="1781" width="0.0121%" height="15" fill="rgb(250,173,47)" fg:x="19834" fg:w="13"/><text x="18.7229%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (13 samples, 0.01%)</title><rect x="18.4729%" y="1765" width="0.0121%" height="15" fill="rgb(232,142,7)" fg:x="19834" fg:w="13"/><text x="18.7229%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (13 samples, 0.01%)</title><rect x="18.4729%" y="1749" width="0.0121%" height="15" fill="rgb(230,157,47)" fg:x="19834" fg:w="13"/><text x="18.7229%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (12 samples, 0.01%)</title><rect x="18.4738%" y="1733" width="0.0112%" height="15" fill="rgb(214,177,35)" fg:x="19835" fg:w="12"/><text x="18.7238%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (12 samples, 0.01%)</title><rect x="18.4738%" y="1717" width="0.0112%" height="15" fill="rgb(234,119,46)" fg:x="19835" fg:w="12"/><text x="18.7238%" y="1727.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="18.4850%" y="1733" width="0.0261%" height="15" fill="rgb(241,180,50)" fg:x="19847" fg:w="28"/><text x="18.7350%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="18.4850%" y="1717" width="0.0261%" height="15" fill="rgb(221,54,25)" fg:x="19847" fg:w="28"/><text x="18.7350%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.03%)</title><rect x="18.4850%" y="1701" width="0.0261%" height="15" fill="rgb(209,157,44)" fg:x="19847" fg:w="28"/><text x="18.7350%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.03%)</title><rect x="18.4850%" y="1685" width="0.0261%" height="15" fill="rgb(246,115,41)" fg:x="19847" fg:w="28"/><text x="18.7350%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.03%)</title><rect x="18.4850%" y="1669" width="0.0261%" height="15" fill="rgb(229,86,1)" fg:x="19847" fg:w="28"/><text x="18.7350%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="18.4850%" y="1653" width="0.0261%" height="15" fill="rgb(240,108,53)" fg:x="19847" fg:w="28"/><text x="18.7350%" y="1663.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (708 samples, 0.66%)</title><rect x="17.8526%" y="1829" width="0.6594%" height="15" fill="rgb(227,134,2)" fg:x="19168" fg:w="708"/><text x="18.1026%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (708 samples, 0.66%)</title><rect x="17.8526%" y="1813" width="0.6594%" height="15" fill="rgb(213,129,25)" fg:x="19168" fg:w="708"/><text x="18.1026%" y="1823.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (708 samples, 0.66%)</title><rect x="17.8526%" y="1797" width="0.6594%" height="15" fill="rgb(226,35,21)" fg:x="19168" fg:w="708"/><text x="18.1026%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (29 samples, 0.03%)</title><rect x="18.4850%" y="1781" width="0.0270%" height="15" fill="rgb(208,129,26)" fg:x="19847" fg:w="29"/><text x="18.7350%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (29 samples, 0.03%)</title><rect x="18.4850%" y="1765" width="0.0270%" height="15" fill="rgb(224,83,6)" fg:x="19847" fg:w="29"/><text x="18.7350%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (29 samples, 0.03%)</title><rect x="18.4850%" y="1749" width="0.0270%" height="15" fill="rgb(227,52,39)" fg:x="19847" fg:w="29"/><text x="18.7350%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (24 samples, 0.02%)</title><rect x="18.5484%" y="1541" width="0.0224%" height="15" fill="rgb(241,30,17)" fg:x="19915" fg:w="24"/><text x="18.7984%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (24 samples, 0.02%)</title><rect x="18.5484%" y="1525" width="0.0224%" height="15" fill="rgb(246,186,42)" fg:x="19915" fg:w="24"/><text x="18.7984%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.02%)</title><rect x="18.5502%" y="1509" width="0.0205%" height="15" fill="rgb(221,169,15)" fg:x="19917" fg:w="22"/><text x="18.8002%" y="1519.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.02%)</title><rect x="18.5502%" y="1493" width="0.0205%" height="15" fill="rgb(235,108,21)" fg:x="19917" fg:w="22"/><text x="18.8002%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (14 samples, 0.01%)</title><rect x="18.5577%" y="1477" width="0.0130%" height="15" fill="rgb(219,148,30)" fg:x="19925" fg:w="14"/><text x="18.8077%" y="1487.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (22 samples, 0.02%)</title><rect x="18.7188%" y="1461" width="0.0205%" height="15" fill="rgb(220,109,5)" fg:x="20098" fg:w="22"/><text x="18.9688%" y="1471.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (38 samples, 0.04%)</title><rect x="18.7048%" y="1493" width="0.0354%" height="15" fill="rgb(213,203,48)" fg:x="20083" fg:w="38"/><text x="18.9548%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (26 samples, 0.02%)</title><rect x="18.7160%" y="1477" width="0.0242%" height="15" fill="rgb(244,71,33)" fg:x="20095" fg:w="26"/><text x="18.9660%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (11 samples, 0.01%)</title><rect x="18.7402%" y="1477" width="0.0102%" height="15" fill="rgb(209,23,2)" fg:x="20121" fg:w="11"/><text x="18.9902%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (22 samples, 0.02%)</title><rect x="18.7402%" y="1493" width="0.0205%" height="15" fill="rgb(219,97,7)" fg:x="20121" fg:w="22"/><text x="18.9902%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (11 samples, 0.01%)</title><rect x="18.7505%" y="1477" width="0.0102%" height="15" fill="rgb(216,161,23)" fg:x="20132" fg:w="11"/><text x="19.0005%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="18.7505%" y="1461" width="0.0102%" height="15" fill="rgb(207,45,42)" fg:x="20132" fg:w="11"/><text x="19.0005%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.01%)</title><rect x="18.7505%" y="1445" width="0.0102%" height="15" fill="rgb(241,61,4)" fg:x="20132" fg:w="11"/><text x="19.0005%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="18.7505%" y="1429" width="0.0102%" height="15" fill="rgb(236,170,1)" fg:x="20132" fg:w="11"/><text x="19.0005%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="18.7505%" y="1413" width="0.0102%" height="15" fill="rgb(239,72,5)" fg:x="20132" fg:w="11"/><text x="19.0005%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="18.7505%" y="1397" width="0.0102%" height="15" fill="rgb(214,13,50)" fg:x="20132" fg:w="11"/><text x="19.0005%" y="1407.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="18.7505%" y="1381" width="0.0102%" height="15" fill="rgb(224,88,9)" fg:x="20132" fg:w="11"/><text x="19.0005%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (121 samples, 0.11%)</title><rect x="18.6573%" y="1525" width="0.1127%" height="15" fill="rgb(238,192,34)" fg:x="20032" fg:w="121"/><text x="18.9073%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (70 samples, 0.07%)</title><rect x="18.7048%" y="1509" width="0.0652%" height="15" fill="rgb(217,203,50)" fg:x="20083" fg:w="70"/><text x="18.9548%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (17 samples, 0.02%)</title><rect x="18.7728%" y="1525" width="0.0158%" height="15" fill="rgb(241,123,32)" fg:x="20156" fg:w="17"/><text x="19.0228%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (17 samples, 0.02%)</title><rect x="18.7728%" y="1509" width="0.0158%" height="15" fill="rgb(248,151,39)" fg:x="20156" fg:w="17"/><text x="19.0228%" y="1519.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.02%)</title><rect x="18.7728%" y="1493" width="0.0158%" height="15" fill="rgb(208,89,6)" fg:x="20156" fg:w="17"/><text x="19.0228%" y="1503.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (17 samples, 0.02%)</title><rect x="18.7728%" y="1477" width="0.0158%" height="15" fill="rgb(254,43,26)" fg:x="20156" fg:w="17"/><text x="19.0228%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="18.7728%" y="1461" width="0.0158%" height="15" fill="rgb(216,158,13)" fg:x="20156" fg:w="17"/><text x="19.0228%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="18.7728%" y="1445" width="0.0158%" height="15" fill="rgb(212,47,37)" fg:x="20156" fg:w="17"/><text x="19.0228%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="18.7728%" y="1429" width="0.0158%" height="15" fill="rgb(254,16,10)" fg:x="20156" fg:w="17"/><text x="19.0228%" y="1439.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="18.7775%" y="1413" width="0.0112%" height="15" fill="rgb(223,228,16)" fg:x="20161" fg:w="12"/><text x="19.0275%" y="1423.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (283 samples, 0.26%)</title><rect x="18.5279%" y="1557" width="0.2636%" height="15" fill="rgb(249,108,50)" fg:x="19893" fg:w="283"/><text x="18.7779%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (237 samples, 0.22%)</title><rect x="18.5707%" y="1541" width="0.2207%" height="15" fill="rgb(208,220,5)" fg:x="19939" fg:w="237"/><text x="18.8207%" y="1551.50"></text></g><g><title>bcs::de::Deserializer::parse_string (11 samples, 0.01%)</title><rect x="18.8715%" y="1445" width="0.0102%" height="15" fill="rgb(217,89,48)" fg:x="20262" fg:w="11"/><text x="19.1215%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="18.8818%" y="1317" width="0.0102%" height="15" fill="rgb(212,113,41)" fg:x="20273" fg:w="11"/><text x="19.1318%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="18.8818%" y="1301" width="0.0102%" height="15" fill="rgb(231,127,5)" fg:x="20273" fg:w="11"/><text x="19.1318%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="18.8818%" y="1285" width="0.0102%" height="15" fill="rgb(217,141,17)" fg:x="20273" fg:w="11"/><text x="19.1318%" y="1295.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (24 samples, 0.02%)</title><rect x="18.8706%" y="1493" width="0.0224%" height="15" fill="rgb(245,125,54)" fg:x="20261" fg:w="24"/><text x="19.1206%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (24 samples, 0.02%)</title><rect x="18.8706%" y="1477" width="0.0224%" height="15" fill="rgb(248,125,3)" fg:x="20261" fg:w="24"/><text x="19.1206%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (24 samples, 0.02%)</title><rect x="18.8706%" y="1461" width="0.0224%" height="15" fill="rgb(236,119,51)" fg:x="20261" fg:w="24"/><text x="19.1206%" y="1471.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (12 samples, 0.01%)</title><rect x="18.8818%" y="1445" width="0.0112%" height="15" fill="rgb(239,99,8)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1455.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (12 samples, 0.01%)</title><rect x="18.8818%" y="1429" width="0.0112%" height="15" fill="rgb(224,228,4)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1439.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (12 samples, 0.01%)</title><rect x="18.8818%" y="1413" width="0.0112%" height="15" fill="rgb(220,131,45)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.01%)</title><rect x="18.8818%" y="1397" width="0.0112%" height="15" fill="rgb(215,62,5)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="18.8818%" y="1381" width="0.0112%" height="15" fill="rgb(253,12,24)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="18.8818%" y="1365" width="0.0112%" height="15" fill="rgb(248,120,50)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="18.8818%" y="1349" width="0.0112%" height="15" fill="rgb(245,194,10)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="18.8818%" y="1333" width="0.0112%" height="15" fill="rgb(241,149,38)" fg:x="20273" fg:w="12"/><text x="19.1318%" y="1343.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (22 samples, 0.02%)</title><rect x="18.9228%" y="1397" width="0.0205%" height="15" fill="rgb(219,215,7)" fg:x="20317" fg:w="22"/><text x="19.1728%" y="1407.50"></text></g><g><title>bcs::de::Deserializer::peek (36 samples, 0.03%)</title><rect x="18.9228%" y="1413" width="0.0335%" height="15" fill="rgb(208,120,31)" fg:x="20317" fg:w="36"/><text x="19.1728%" y="1423.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (14 samples, 0.01%)</title><rect x="18.9433%" y="1397" width="0.0130%" height="15" fill="rgb(244,30,8)" fg:x="20339" fg:w="14"/><text x="19.1933%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (97 samples, 0.09%)</title><rect x="18.8706%" y="1509" width="0.0903%" height="15" fill="rgb(238,35,44)" fg:x="20261" fg:w="97"/><text x="19.1206%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (73 samples, 0.07%)</title><rect x="18.8930%" y="1493" width="0.0680%" height="15" fill="rgb(243,218,37)" fg:x="20285" fg:w="73"/><text x="19.1430%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (73 samples, 0.07%)</title><rect x="18.8930%" y="1477" width="0.0680%" height="15" fill="rgb(218,169,10)" fg:x="20285" fg:w="73"/><text x="19.1430%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (68 samples, 0.06%)</title><rect x="18.8976%" y="1461" width="0.0633%" height="15" fill="rgb(221,144,10)" fg:x="20290" fg:w="68"/><text x="19.1476%" y="1471.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (46 samples, 0.04%)</title><rect x="18.9181%" y="1445" width="0.0428%" height="15" fill="rgb(226,41,38)" fg:x="20312" fg:w="46"/><text x="19.1681%" y="1455.50"></text></g><g><title>bcs::de::Deserializer::next (46 samples, 0.04%)</title><rect x="18.9181%" y="1429" width="0.0428%" height="15" fill="rgb(228,3,1)" fg:x="20312" fg:w="46"/><text x="19.1681%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (46 samples, 0.04%)</title><rect x="18.9610%" y="1509" width="0.0428%" height="15" fill="rgb(209,129,12)" fg:x="20358" fg:w="46"/><text x="19.2110%" y="1519.50"></text></g><g><title>core::cmp::PartialOrd::ge (46 samples, 0.04%)</title><rect x="18.9610%" y="1493" width="0.0428%" height="15" fill="rgb(213,136,33)" fg:x="20358" fg:w="46"/><text x="19.2110%" y="1503.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (42 samples, 0.04%)</title><rect x="18.9647%" y="1477" width="0.0391%" height="15" fill="rgb(209,181,29)" fg:x="20362" fg:w="42"/><text x="19.2147%" y="1487.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (42 samples, 0.04%)</title><rect x="18.9647%" y="1461" width="0.0391%" height="15" fill="rgb(234,173,18)" fg:x="20362" fg:w="42"/><text x="19.2147%" y="1471.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (42 samples, 0.04%)</title><rect x="18.9647%" y="1445" width="0.0391%" height="15" fill="rgb(227,73,47)" fg:x="20362" fg:w="42"/><text x="19.2147%" y="1455.50"></text></g><g><title>[libc.so.6] (36 samples, 0.03%)</title><rect x="18.9703%" y="1429" width="0.0335%" height="15" fill="rgb(234,9,34)" fg:x="20368" fg:w="36"/><text x="19.2203%" y="1439.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (163 samples, 0.15%)</title><rect x="18.8585%" y="1525" width="0.1518%" height="15" fill="rgb(235,172,15)" fg:x="20248" fg:w="163"/><text x="19.1085%" y="1535.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.03%)</title><rect x="19.0979%" y="1349" width="0.0307%" height="15" fill="rgb(245,61,2)" fg:x="20505" fg:w="33"/><text x="19.3479%" y="1359.50"></text></g><g><title>bcs::de::Deserializer::next (13 samples, 0.01%)</title><rect x="19.2208%" y="1285" width="0.0121%" height="15" fill="rgb(238,39,47)" fg:x="20637" fg:w="13"/><text x="19.4708%" y="1295.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (64 samples, 0.06%)</title><rect x="19.1742%" y="1333" width="0.0596%" height="15" fill="rgb(234,37,24)" fg:x="20587" fg:w="64"/><text x="19.4242%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::parse_length (50 samples, 0.05%)</title><rect x="19.1873%" y="1317" width="0.0466%" height="15" fill="rgb(248,223,24)" fg:x="20601" fg:w="50"/><text x="19.4373%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (44 samples, 0.04%)</title><rect x="19.1929%" y="1301" width="0.0410%" height="15" fill="rgb(223,12,15)" fg:x="20607" fg:w="44"/><text x="19.4429%" y="1311.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (110 samples, 0.10%)</title><rect x="19.2338%" y="1333" width="0.1025%" height="15" fill="rgb(249,6,3)" fg:x="20651" fg:w="110"/><text x="19.4838%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::parse_string (541 samples, 0.50%)</title><rect x="19.1286%" y="1349" width="0.5039%" height="15" fill="rgb(237,105,33)" fg:x="20538" fg:w="541"/><text x="19.3786%" y="1359.50"></text></g><g><title>core::str::converts::from_utf8 (318 samples, 0.30%)</title><rect x="19.3363%" y="1333" width="0.2962%" height="15" fill="rgb(252,208,35)" fg:x="20761" fg:w="318"/><text x="19.5863%" y="1343.50"></text></g><g><title>core::str::validations::run_utf8_validation (240 samples, 0.22%)</title><rect x="19.4089%" y="1317" width="0.2235%" height="15" fill="rgb(215,181,35)" fg:x="20839" fg:w="240"/><text x="19.6589%" y="1327.50"></text></g><g><title>__rust_alloc (11 samples, 0.01%)</title><rect x="19.6753%" y="1125" width="0.0102%" height="15" fill="rgb(246,212,3)" fg:x="21125" fg:w="11"/><text x="19.9253%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (516 samples, 0.48%)</title><rect x="19.6576%" y="1173" width="0.4806%" height="15" fill="rgb(247,156,24)" fg:x="21106" fg:w="516"/><text x="19.9076%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (516 samples, 0.48%)</title><rect x="19.6576%" y="1157" width="0.4806%" height="15" fill="rgb(248,9,31)" fg:x="21106" fg:w="516"/><text x="19.9076%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (516 samples, 0.48%)</title><rect x="19.6576%" y="1141" width="0.4806%" height="15" fill="rgb(234,26,45)" fg:x="21106" fg:w="516"/><text x="19.9076%" y="1151.50"></text></g><g><title>malloc (486 samples, 0.45%)</title><rect x="19.6856%" y="1125" width="0.4526%" height="15" fill="rgb(249,11,32)" fg:x="21136" fg:w="486"/><text x="19.9356%" y="1135.50"></text></g><g><title>[libc.so.6] (272 samples, 0.25%)</title><rect x="19.8849%" y="1109" width="0.2533%" height="15" fill="rgb(249,162,33)" fg:x="21350" fg:w="272"/><text x="20.1349%" y="1119.50"></text></g><g><title>[libc.so.6] (36 samples, 0.03%)</title><rect x="20.1047%" y="1093" width="0.0335%" height="15" fill="rgb(232,4,32)" fg:x="21586" fg:w="36"/><text x="20.3547%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (546 samples, 0.51%)</title><rect x="19.6325%" y="1221" width="0.5085%" height="15" fill="rgb(212,5,45)" fg:x="21079" fg:w="546"/><text x="19.8825%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (546 samples, 0.51%)</title><rect x="19.6325%" y="1205" width="0.5085%" height="15" fill="rgb(227,95,13)" fg:x="21079" fg:w="546"/><text x="19.8825%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (546 samples, 0.51%)</title><rect x="19.6325%" y="1189" width="0.5085%" height="15" fill="rgb(223,205,10)" fg:x="21079" fg:w="546"/><text x="19.8825%" y="1199.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,202 samples, 1.12%)</title><rect x="19.0830%" y="1461" width="1.1195%" height="15" fill="rgb(222,178,8)" fg:x="20489" fg:w="1202"/><text x="19.3330%" y="1471.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,192 samples, 1.11%)</title><rect x="19.0923%" y="1445" width="1.1102%" height="15" fill="rgb(216,13,22)" fg:x="20499" fg:w="1192"/><text x="19.3423%" y="1455.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1,192 samples, 1.11%)</title><rect x="19.0923%" y="1429" width="1.1102%" height="15" fill="rgb(240,167,12)" fg:x="20499" fg:w="1192"/><text x="19.3423%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,190 samples, 1.11%)</title><rect x="19.0941%" y="1413" width="1.1083%" height="15" fill="rgb(235,68,35)" fg:x="20501" fg:w="1190"/><text x="19.3441%" y="1423.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,190 samples, 1.11%)</title><rect x="19.0941%" y="1397" width="1.1083%" height="15" fill="rgb(253,40,27)" fg:x="20501" fg:w="1190"/><text x="19.3441%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (1,190 samples, 1.11%)</title><rect x="19.0941%" y="1381" width="1.1083%" height="15" fill="rgb(214,19,28)" fg:x="20501" fg:w="1190"/><text x="19.3441%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (1,190 samples, 1.11%)</title><rect x="19.0941%" y="1365" width="1.1083%" height="15" fill="rgb(210,167,45)" fg:x="20501" fg:w="1190"/><text x="19.3441%" y="1375.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (612 samples, 0.57%)</title><rect x="19.6325%" y="1349" width="0.5700%" height="15" fill="rgb(232,97,40)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1359.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (612 samples, 0.57%)</title><rect x="19.6325%" y="1333" width="0.5700%" height="15" fill="rgb(250,35,23)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1343.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (612 samples, 0.57%)</title><rect x="19.6325%" y="1317" width="0.5700%" height="15" fill="rgb(248,47,53)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (612 samples, 0.57%)</title><rect x="19.6325%" y="1301" width="0.5700%" height="15" fill="rgb(226,58,50)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (612 samples, 0.57%)</title><rect x="19.6325%" y="1285" width="0.5700%" height="15" fill="rgb(217,105,26)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (612 samples, 0.57%)</title><rect x="19.6325%" y="1269" width="0.5700%" height="15" fill="rgb(208,64,1)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (612 samples, 0.57%)</title><rect x="19.6325%" y="1253" width="0.5700%" height="15" fill="rgb(214,80,1)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (612 samples, 0.57%)</title><rect x="19.6325%" y="1237" width="0.5700%" height="15" fill="rgb(206,175,26)" fg:x="21079" fg:w="612"/><text x="19.8825%" y="1247.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (66 samples, 0.06%)</title><rect x="20.1410%" y="1221" width="0.0615%" height="15" fill="rgb(235,156,37)" fg:x="21625" fg:w="66"/><text x="20.3910%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (66 samples, 0.06%)</title><rect x="20.1410%" y="1205" width="0.0615%" height="15" fill="rgb(213,100,9)" fg:x="21625" fg:w="66"/><text x="20.3910%" y="1215.50"></text></g><g><title>[libc.so.6] (65 samples, 0.06%)</title><rect x="20.1419%" y="1189" width="0.0605%" height="15" fill="rgb(241,15,13)" fg:x="21626" fg:w="65"/><text x="20.3919%" y="1199.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (12 samples, 0.01%)</title><rect x="20.2025%" y="1461" width="0.0112%" height="15" fill="rgb(205,97,43)" fg:x="21691" fg:w="12"/><text x="20.4525%" y="1471.50"></text></g><g><title>bcs::de::Deserializer::leave_named_container (18 samples, 0.02%)</title><rect x="20.2137%" y="1461" width="0.0168%" height="15" fill="rgb(216,106,32)" fg:x="21703" fg:w="18"/><text x="20.4637%" y="1471.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (1,331 samples, 1.24%)</title><rect x="19.0103%" y="1493" width="1.2397%" height="15" fill="rgb(226,200,8)" fg:x="20411" fg:w="1331"/><text x="19.2603%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1,330 samples, 1.24%)</title><rect x="19.0113%" y="1477" width="1.2387%" height="15" fill="rgb(244,54,29)" fg:x="20412" fg:w="1330"/><text x="19.2613%" y="1487.50"></text></g><g><title>bcs::de::SeqDeserializer::new (21 samples, 0.02%)</title><rect x="20.2304%" y="1461" width="0.0196%" height="15" fill="rgb(252,169,12)" fg:x="21721" fg:w="21"/><text x="20.4804%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.02%)</title><rect x="20.2844%" y="1317" width="0.0168%" height="15" fill="rgb(231,199,11)" fg:x="21779" fg:w="18"/><text x="20.5344%" y="1327.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (22 samples, 0.02%)</title><rect x="20.2816%" y="1365" width="0.0205%" height="15" fill="rgb(233,191,18)" fg:x="21776" fg:w="22"/><text x="20.5316%" y="1375.50"></text></g><g><title>serde::de::SeqAccess::next_element (19 samples, 0.02%)</title><rect x="20.2844%" y="1349" width="0.0177%" height="15" fill="rgb(215,83,47)" fg:x="21779" fg:w="19"/><text x="20.5344%" y="1359.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (19 samples, 0.02%)</title><rect x="20.2844%" y="1333" width="0.0177%" height="15" fill="rgb(251,67,19)" fg:x="21779" fg:w="19"/><text x="20.5344%" y="1343.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (61 samples, 0.06%)</title><rect x="20.2509%" y="1461" width="0.0568%" height="15" fill="rgb(240,7,20)" fg:x="21743" fg:w="61"/><text x="20.5009%" y="1471.50"></text></g><g><title>serde::de::SeqAccess::next_element (34 samples, 0.03%)</title><rect x="20.2761%" y="1445" width="0.0317%" height="15" fill="rgb(210,150,26)" fg:x="21770" fg:w="34"/><text x="20.5261%" y="1455.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (33 samples, 0.03%)</title><rect x="20.2770%" y="1429" width="0.0307%" height="15" fill="rgb(228,75,42)" fg:x="21771" fg:w="33"/><text x="20.5270%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.03%)</title><rect x="20.2807%" y="1413" width="0.0270%" height="15" fill="rgb(237,134,48)" fg:x="21775" fg:w="29"/><text x="20.5307%" y="1423.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize (29 samples, 0.03%)</title><rect x="20.2807%" y="1397" width="0.0270%" height="15" fill="rgb(205,80,50)" fg:x="21775" fg:w="29"/><text x="20.5307%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (29 samples, 0.03%)</title><rect x="20.2807%" y="1381" width="0.0270%" height="15" fill="rgb(217,74,48)" fg:x="21775" fg:w="29"/><text x="20.5307%" y="1391.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1,930 samples, 1.80%)</title><rect x="18.5167%" y="1573" width="1.7976%" height="15" fill="rgb(205,82,50)" fg:x="19881" fg:w="1930"/><text x="18.7667%" y="1583.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (1,633 samples, 1.52%)</title><rect x="18.7933%" y="1557" width="1.5209%" height="15" fill="rgb(228,1,33)" fg:x="20178" fg:w="1633"/><text x="19.0433%" y="1567.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,633 samples, 1.52%)</title><rect x="18.7933%" y="1541" width="1.5209%" height="15" fill="rgb(214,50,23)" fg:x="20178" fg:w="1633"/><text x="19.0433%" y="1551.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1,400 samples, 1.30%)</title><rect x="19.0103%" y="1525" width="1.3039%" height="15" fill="rgb(210,62,9)" fg:x="20411" fg:w="1400"/><text x="19.2603%" y="1535.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,400 samples, 1.30%)</title><rect x="19.0103%" y="1509" width="1.3039%" height="15" fill="rgb(210,104,37)" fg:x="20411" fg:w="1400"/><text x="19.2603%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (69 samples, 0.06%)</title><rect x="20.2500%" y="1493" width="0.0643%" height="15" fill="rgb(232,104,43)" fg:x="21742" fg:w="69"/><text x="20.5000%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (69 samples, 0.06%)</title><rect x="20.2500%" y="1477" width="0.0643%" height="15" fill="rgb(244,52,6)" fg:x="21742" fg:w="69"/><text x="20.5000%" y="1487.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1749" width="1.8143%" height="15" fill="rgb(211,174,52)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1759.50">&lt;..</text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1733" width="1.8143%" height="15" fill="rgb(229,48,4)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1743.50">a..</text></g><g><title>bcs::de::from_bytes (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1717" width="1.8143%" height="15" fill="rgb(205,155,16)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1727.50">b..</text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1701" width="1.8143%" height="15" fill="rgb(211,141,53)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1711.50">a..</text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1685" width="1.8143%" height="15" fill="rgb(240,148,11)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1695.50">&lt;..</text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1669" width="1.8143%" height="15" fill="rgb(214,45,23)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1679.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1653" width="1.8143%" height="15" fill="rgb(248,74,26)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1663.50">s..</text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1637" width="1.8143%" height="15" fill="rgb(218,121,16)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1647.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1621" width="1.8143%" height="15" fill="rgb(218,10,47)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1631.50">&lt;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1605" width="1.8143%" height="15" fill="rgb(227,99,14)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1615.50">s..</text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (1,948 samples, 1.81%)</title><rect x="18.5120%" y="1589" width="1.8143%" height="15" fill="rgb(229,83,46)" fg:x="19876" fg:w="1948"/><text x="18.7620%" y="1599.50">&lt;..</text></g><g><title>[libc.so.6] (58 samples, 0.05%)</title><rect x="20.3468%" y="1301" width="0.0540%" height="15" fill="rgb(228,25,1)" fg:x="21846" fg:w="58"/><text x="20.5968%" y="1311.50"></text></g><g><title>[libc.so.6] (45 samples, 0.04%)</title><rect x="20.3590%" y="1285" width="0.0419%" height="15" fill="rgb(252,190,15)" fg:x="21859" fg:w="45"/><text x="20.6090%" y="1295.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (81 samples, 0.08%)</title><rect x="20.3264%" y="1605" width="0.0754%" height="15" fill="rgb(213,103,51)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (81 samples, 0.08%)</title><rect x="20.3264%" y="1589" width="0.0754%" height="15" fill="rgb(220,38,44)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (81 samples, 0.08%)</title><rect x="20.3264%" y="1573" width="0.0754%" height="15" fill="rgb(210,45,26)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (81 samples, 0.08%)</title><rect x="20.3264%" y="1557" width="0.0754%" height="15" fill="rgb(205,95,48)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (81 samples, 0.08%)</title><rect x="20.3264%" y="1541" width="0.0754%" height="15" fill="rgb(225,179,37)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (81 samples, 0.08%)</title><rect x="20.3264%" y="1525" width="0.0754%" height="15" fill="rgb(230,209,3)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (81 samples, 0.08%)</title><rect x="20.3264%" y="1509" width="0.0754%" height="15" fill="rgb(248,12,46)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (81 samples, 0.08%)</title><rect x="20.3264%" y="1493" width="0.0754%" height="15" fill="rgb(234,18,0)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (81 samples, 0.08%)</title><rect x="20.3264%" y="1477" width="0.0754%" height="15" fill="rgb(238,197,14)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (81 samples, 0.08%)</title><rect x="20.3264%" y="1461" width="0.0754%" height="15" fill="rgb(251,162,48)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (81 samples, 0.08%)</title><rect x="20.3264%" y="1445" width="0.0754%" height="15" fill="rgb(237,73,42)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (81 samples, 0.08%)</title><rect x="20.3264%" y="1429" width="0.0754%" height="15" fill="rgb(211,108,8)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (81 samples, 0.08%)</title><rect x="20.3264%" y="1413" width="0.0754%" height="15" fill="rgb(213,45,22)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (81 samples, 0.08%)</title><rect x="20.3264%" y="1397" width="0.0754%" height="15" fill="rgb(252,154,5)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (81 samples, 0.08%)</title><rect x="20.3264%" y="1381" width="0.0754%" height="15" fill="rgb(221,79,52)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (81 samples, 0.08%)</title><rect x="20.3264%" y="1365" width="0.0754%" height="15" fill="rgb(229,220,36)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (81 samples, 0.08%)</title><rect x="20.3264%" y="1349" width="0.0754%" height="15" fill="rgb(211,17,16)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (81 samples, 0.08%)</title><rect x="20.3264%" y="1333" width="0.0754%" height="15" fill="rgb(222,55,31)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1343.50"></text></g><g><title>realloc (81 samples, 0.08%)</title><rect x="20.3264%" y="1317" width="0.0754%" height="15" fill="rgb(221,221,31)" fg:x="21824" fg:w="81"/><text x="20.5764%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (66 samples, 0.06%)</title><rect x="20.4055%" y="1205" width="0.0615%" height="15" fill="rgb(227,168,26)" fg:x="21909" fg:w="66"/><text x="20.6555%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (66 samples, 0.06%)</title><rect x="20.4055%" y="1189" width="0.0615%" height="15" fill="rgb(224,139,9)" fg:x="21909" fg:w="66"/><text x="20.6555%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.05%)</title><rect x="20.4176%" y="1173" width="0.0494%" height="15" fill="rgb(254,172,0)" fg:x="21922" fg:w="53"/><text x="20.6676%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.05%)</title><rect x="20.4186%" y="1157" width="0.0484%" height="15" fill="rgb(235,203,1)" fg:x="21923" fg:w="52"/><text x="20.6686%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.05%)</title><rect x="20.4204%" y="1141" width="0.0466%" height="15" fill="rgb(216,205,24)" fg:x="21925" fg:w="50"/><text x="20.6704%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50 samples, 0.05%)</title><rect x="20.4204%" y="1125" width="0.0466%" height="15" fill="rgb(233,24,6)" fg:x="21925" fg:w="50"/><text x="20.6704%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (50 samples, 0.05%)</title><rect x="20.4204%" y="1109" width="0.0466%" height="15" fill="rgb(244,110,9)" fg:x="21925" fg:w="50"/><text x="20.6704%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (50 samples, 0.05%)</title><rect x="20.4204%" y="1093" width="0.0466%" height="15" fill="rgb(239,222,42)" fg:x="21925" fg:w="50"/><text x="20.6704%" y="1103.50"></text></g><g><title>realloc (50 samples, 0.05%)</title><rect x="20.4204%" y="1077" width="0.0466%" height="15" fill="rgb(218,145,13)" fg:x="21925" fg:w="50"/><text x="20.6704%" y="1087.50"></text></g><g><title>[libc.so.6] (44 samples, 0.04%)</title><rect x="20.4260%" y="1061" width="0.0410%" height="15" fill="rgb(207,69,11)" fg:x="21931" fg:w="44"/><text x="20.6760%" y="1071.50"></text></g><g><title>[libc.so.6] (33 samples, 0.03%)</title><rect x="20.4363%" y="1045" width="0.0307%" height="15" fill="rgb(220,223,22)" fg:x="21942" fg:w="33"/><text x="20.6863%" y="1055.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (72 samples, 0.07%)</title><rect x="20.4027%" y="1365" width="0.0671%" height="15" fill="rgb(245,102,5)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1375.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (72 samples, 0.07%)</title><rect x="20.4027%" y="1349" width="0.0671%" height="15" fill="rgb(211,148,2)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1359.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (72 samples, 0.07%)</title><rect x="20.4027%" y="1333" width="0.0671%" height="15" fill="rgb(241,13,44)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (72 samples, 0.07%)</title><rect x="20.4027%" y="1317" width="0.0671%" height="15" fill="rgb(219,137,21)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1327.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (72 samples, 0.07%)</title><rect x="20.4027%" y="1301" width="0.0671%" height="15" fill="rgb(242,206,5)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (72 samples, 0.07%)</title><rect x="20.4027%" y="1285" width="0.0671%" height="15" fill="rgb(217,114,22)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1295.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (72 samples, 0.07%)</title><rect x="20.4027%" y="1269" width="0.0671%" height="15" fill="rgb(253,206,42)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (72 samples, 0.07%)</title><rect x="20.4027%" y="1253" width="0.0671%" height="15" fill="rgb(236,102,18)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (72 samples, 0.07%)</title><rect x="20.4027%" y="1237" width="0.0671%" height="15" fill="rgb(208,59,49)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (72 samples, 0.07%)</title><rect x="20.4027%" y="1221" width="0.0671%" height="15" fill="rgb(215,194,28)" fg:x="21906" fg:w="72"/><text x="20.6527%" y="1231.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (80 samples, 0.07%)</title><rect x="20.4018%" y="1413" width="0.0745%" height="15" fill="rgb(243,207,11)" fg:x="21905" fg:w="80"/><text x="20.6518%" y="1423.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (80 samples, 0.07%)</title><rect x="20.4018%" y="1397" width="0.0745%" height="15" fill="rgb(254,179,35)" fg:x="21905" fg:w="80"/><text x="20.6518%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (80 samples, 0.07%)</title><rect x="20.4018%" y="1381" width="0.0745%" height="15" fill="rgb(235,97,3)" fg:x="21905" fg:w="80"/><text x="20.6518%" y="1391.50"></text></g><g><title>move_core_types::safe_serialize::TYPE_TAG_DEPTH::__getit (19 samples, 0.02%)</title><rect x="20.4763%" y="1381" width="0.0177%" height="15" fill="rgb(215,155,33)" fg:x="21985" fg:w="19"/><text x="20.7263%" y="1391.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (181 samples, 0.17%)</title><rect x="20.3264%" y="1717" width="0.1686%" height="15" fill="rgb(223,128,12)" fg:x="21824" fg:w="181"/><text x="20.5764%" y="1727.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (181 samples, 0.17%)</title><rect x="20.3264%" y="1701" width="0.1686%" height="15" fill="rgb(208,157,18)" fg:x="21824" fg:w="181"/><text x="20.5764%" y="1711.50"></text></g><g><title>bcs::ser::to_bytes (181 samples, 0.17%)</title><rect x="20.3264%" y="1685" width="0.1686%" height="15" fill="rgb(249,70,54)" fg:x="21824" fg:w="181"/><text x="20.5764%" y="1695.50"></text></g><g><title>bcs::ser::serialize_into (181 samples, 0.17%)</title><rect x="20.3264%" y="1669" width="0.1686%" height="15" fill="rgb(244,118,24)" fg:x="21824" fg:w="181"/><text x="20.5764%" y="1679.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (181 samples, 0.17%)</title><rect x="20.3264%" y="1653" width="0.1686%" height="15" fill="rgb(211,54,0)" fg:x="21824" fg:w="181"/><text x="20.5764%" y="1663.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (181 samples, 0.17%)</title><rect x="20.3264%" y="1637" width="0.1686%" height="15" fill="rgb(245,137,45)" fg:x="21824" fg:w="181"/><text x="20.5764%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (181 samples, 0.17%)</title><rect x="20.3264%" y="1621" width="0.1686%" height="15" fill="rgb(232,154,31)" fg:x="21824" fg:w="181"/><text x="20.5764%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (100 samples, 0.09%)</title><rect x="20.4018%" y="1605" width="0.0931%" height="15" fill="rgb(253,6,39)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1615.50"></text></g><g><title>serde::ser::Serializer::collect_seq (100 samples, 0.09%)</title><rect x="20.4018%" y="1589" width="0.0931%" height="15" fill="rgb(234,183,24)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (100 samples, 0.09%)</title><rect x="20.4018%" y="1573" width="0.0931%" height="15" fill="rgb(252,84,40)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (100 samples, 0.09%)</title><rect x="20.4018%" y="1557" width="0.0931%" height="15" fill="rgb(224,65,2)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (100 samples, 0.09%)</title><rect x="20.4018%" y="1541" width="0.0931%" height="15" fill="rgb(229,38,24)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1551.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (100 samples, 0.09%)</title><rect x="20.4018%" y="1525" width="0.0931%" height="15" fill="rgb(218,131,50)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (100 samples, 0.09%)</title><rect x="20.4018%" y="1509" width="0.0931%" height="15" fill="rgb(233,106,18)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (100 samples, 0.09%)</title><rect x="20.4018%" y="1493" width="0.0931%" height="15" fill="rgb(220,216,11)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1503.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (100 samples, 0.09%)</title><rect x="20.4018%" y="1477" width="0.0931%" height="15" fill="rgb(251,100,45)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (100 samples, 0.09%)</title><rect x="20.4018%" y="1461" width="0.0931%" height="15" fill="rgb(235,143,32)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1471.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (100 samples, 0.09%)</title><rect x="20.4018%" y="1445" width="0.0931%" height="15" fill="rgb(248,124,34)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1455.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_serialize (100 samples, 0.09%)</title><rect x="20.4018%" y="1429" width="0.0931%" height="15" fill="rgb(225,221,4)" fg:x="21905" fg:w="100"/><text x="20.6518%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.02%)</title><rect x="20.4763%" y="1413" width="0.0186%" height="15" fill="rgb(242,27,43)" fg:x="21985" fg:w="20"/><text x="20.7263%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.02%)</title><rect x="20.4763%" y="1397" width="0.0186%" height="15" fill="rgb(227,54,8)" fg:x="21985" fg:w="20"/><text x="20.7263%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="20.5042%" y="1573" width="0.0205%" height="15" fill="rgb(253,139,49)" fg:x="22015" fg:w="22"/><text x="20.7542%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="20.5042%" y="1557" width="0.0205%" height="15" fill="rgb(231,26,43)" fg:x="22015" fg:w="22"/><text x="20.7542%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="20.5042%" y="1541" width="0.0205%" height="15" fill="rgb(207,121,39)" fg:x="22015" fg:w="22"/><text x="20.7542%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="20.5052%" y="1525" width="0.0196%" height="15" fill="rgb(223,101,35)" fg:x="22016" fg:w="21"/><text x="20.7552%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="20.5052%" y="1509" width="0.0196%" height="15" fill="rgb(232,87,23)" fg:x="22016" fg:w="21"/><text x="20.7552%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="20.5052%" y="1493" width="0.0196%" height="15" fill="rgb(225,180,29)" fg:x="22016" fg:w="21"/><text x="20.7552%" y="1503.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="20.5070%" y="1477" width="0.0177%" height="15" fill="rgb(225,25,17)" fg:x="22018" fg:w="19"/><text x="20.7570%" y="1487.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="20.5098%" y="1461" width="0.0149%" height="15" fill="rgb(223,8,52)" fg:x="22021" fg:w="16"/><text x="20.7598%" y="1471.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (51 samples, 0.05%)</title><rect x="20.5005%" y="1653" width="0.0475%" height="15" fill="rgb(246,42,21)" fg:x="22011" fg:w="51"/><text x="20.7505%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="20.5005%" y="1637" width="0.0475%" height="15" fill="rgb(205,64,43)" fg:x="22011" fg:w="51"/><text x="20.7505%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.04%)</title><rect x="20.5042%" y="1621" width="0.0438%" height="15" fill="rgb(221,160,13)" fg:x="22015" fg:w="47"/><text x="20.7542%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.04%)</title><rect x="20.5042%" y="1605" width="0.0438%" height="15" fill="rgb(239,58,35)" fg:x="22015" fg:w="47"/><text x="20.7542%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.04%)</title><rect x="20.5042%" y="1589" width="0.0438%" height="15" fill="rgb(251,26,40)" fg:x="22015" fg:w="47"/><text x="20.7542%" y="1599.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (25 samples, 0.02%)</title><rect x="20.5247%" y="1573" width="0.0233%" height="15" fill="rgb(247,0,4)" fg:x="22037" fg:w="25"/><text x="20.7747%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="20.5247%" y="1557" width="0.0233%" height="15" fill="rgb(218,130,10)" fg:x="22037" fg:w="25"/><text x="20.7747%" y="1567.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="20.5257%" y="1541" width="0.0224%" height="15" fill="rgb(239,32,7)" fg:x="22038" fg:w="24"/><text x="20.7757%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="20.5732%" y="1525" width="0.0121%" height="15" fill="rgb(210,192,24)" fg:x="22089" fg:w="13"/><text x="20.8232%" y="1535.50"></text></g><g><title>serde_bytes::serialize (13 samples, 0.01%)</title><rect x="20.5732%" y="1509" width="0.0121%" height="15" fill="rgb(226,212,17)" fg:x="22089" fg:w="13"/><text x="20.8232%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="20.5732%" y="1493" width="0.0121%" height="15" fill="rgb(219,201,28)" fg:x="22089" fg:w="13"/><text x="20.8232%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (12 samples, 0.01%)</title><rect x="20.5741%" y="1477" width="0.0112%" height="15" fill="rgb(235,207,41)" fg:x="22090" fg:w="12"/><text x="20.8241%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (49 samples, 0.05%)</title><rect x="20.5480%" y="1653" width="0.0456%" height="15" fill="rgb(241,95,54)" fg:x="22062" fg:w="49"/><text x="20.7980%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (47 samples, 0.04%)</title><rect x="20.5499%" y="1637" width="0.0438%" height="15" fill="rgb(248,12,23)" fg:x="22064" fg:w="47"/><text x="20.7999%" y="1647.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (47 samples, 0.04%)</title><rect x="20.5499%" y="1621" width="0.0438%" height="15" fill="rgb(228,173,4)" fg:x="22064" fg:w="47"/><text x="20.7999%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (32 samples, 0.03%)</title><rect x="20.5639%" y="1605" width="0.0298%" height="15" fill="rgb(254,99,5)" fg:x="22079" fg:w="32"/><text x="20.8139%" y="1615.50"></text></g><g><title>bcs::ser::serialize_into (22 samples, 0.02%)</title><rect x="20.5732%" y="1589" width="0.0205%" height="15" fill="rgb(212,184,17)" fg:x="22089" fg:w="22"/><text x="20.8232%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 0.02%)</title><rect x="20.5732%" y="1573" width="0.0205%" height="15" fill="rgb(252,174,1)" fg:x="22089" fg:w="22"/><text x="20.8232%" y="1583.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (22 samples, 0.02%)</title><rect x="20.5732%" y="1557" width="0.0205%" height="15" fill="rgb(241,118,51)" fg:x="22089" fg:w="22"/><text x="20.8232%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (22 samples, 0.02%)</title><rect x="20.5732%" y="1541" width="0.0205%" height="15" fill="rgb(227,94,47)" fg:x="22089" fg:w="22"/><text x="20.8232%" y="1551.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="20.6039%" y="1525" width="0.0196%" height="15" fill="rgb(229,104,2)" fg:x="22122" fg:w="21"/><text x="20.8539%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="20.6076%" y="1509" width="0.0158%" height="15" fill="rgb(219,28,31)" fg:x="22126" fg:w="17"/><text x="20.8576%" y="1519.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (17 samples, 0.02%)</title><rect x="20.6076%" y="1493" width="0.0158%" height="15" fill="rgb(233,109,36)" fg:x="22126" fg:w="17"/><text x="20.8576%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (17 samples, 0.02%)</title><rect x="20.6076%" y="1477" width="0.0158%" height="15" fill="rgb(246,88,11)" fg:x="22126" fg:w="17"/><text x="20.8576%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (11 samples, 0.01%)</title><rect x="20.6132%" y="1461" width="0.0102%" height="15" fill="rgb(209,212,17)" fg:x="22132" fg:w="11"/><text x="20.8632%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="20.6132%" y="1445" width="0.0102%" height="15" fill="rgb(243,59,29)" fg:x="22132" fg:w="11"/><text x="20.8632%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="20.6132%" y="1429" width="0.0102%" height="15" fill="rgb(244,205,48)" fg:x="22132" fg:w="11"/><text x="20.8632%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="20.6132%" y="1413" width="0.0102%" height="15" fill="rgb(227,30,6)" fg:x="22132" fg:w="11"/><text x="20.8632%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (26 samples, 0.02%)</title><rect x="20.6039%" y="1557" width="0.0242%" height="15" fill="rgb(220,205,48)" fg:x="22122" fg:w="26"/><text x="20.8539%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (26 samples, 0.02%)</title><rect x="20.6039%" y="1541" width="0.0242%" height="15" fill="rgb(250,94,14)" fg:x="22122" fg:w="26"/><text x="20.8539%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (44 samples, 0.04%)</title><rect x="20.5955%" y="1605" width="0.0410%" height="15" fill="rgb(216,119,42)" fg:x="22113" fg:w="44"/><text x="20.8455%" y="1615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (44 samples, 0.04%)</title><rect x="20.5955%" y="1589" width="0.0410%" height="15" fill="rgb(232,155,0)" fg:x="22113" fg:w="44"/><text x="20.8455%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="20.6039%" y="1573" width="0.0326%" height="15" fill="rgb(212,24,32)" fg:x="22122" fg:w="35"/><text x="20.8539%" y="1583.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::cmp::PartialEq&gt;::eq (22 samples, 0.02%)</title><rect x="20.7511%" y="1477" width="0.0205%" height="15" fill="rgb(216,69,20)" fg:x="22280" fg:w="22"/><text x="21.0011%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (22 samples, 0.02%)</title><rect x="20.7511%" y="1461" width="0.0205%" height="15" fill="rgb(229,73,31)" fg:x="22280" fg:w="22"/><text x="21.0011%" y="1471.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (22 samples, 0.02%)</title><rect x="20.7511%" y="1445" width="0.0205%" height="15" fill="rgb(224,219,20)" fg:x="22280" fg:w="22"/><text x="21.0011%" y="1455.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (22 samples, 0.02%)</title><rect x="20.7511%" y="1429" width="0.0205%" height="15" fill="rgb(215,146,41)" fg:x="22280" fg:w="22"/><text x="21.0011%" y="1439.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (249 samples, 0.23%)</title><rect x="20.6384%" y="1541" width="0.2319%" height="15" fill="rgb(244,71,31)" fg:x="22159" fg:w="249"/><text x="20.8884%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (249 samples, 0.23%)</title><rect x="20.6384%" y="1525" width="0.2319%" height="15" fill="rgb(224,24,11)" fg:x="22159" fg:w="249"/><text x="20.8884%" y="1535.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (249 samples, 0.23%)</title><rect x="20.6384%" y="1509" width="0.2319%" height="15" fill="rgb(229,76,15)" fg:x="22159" fg:w="249"/><text x="20.8884%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (249 samples, 0.23%)</title><rect x="20.6384%" y="1493" width="0.2319%" height="15" fill="rgb(209,93,2)" fg:x="22159" fg:w="249"/><text x="20.8884%" y="1503.50"></text></g><g><title>[libc.so.6] (106 samples, 0.10%)</title><rect x="20.7716%" y="1477" width="0.0987%" height="15" fill="rgb(216,200,50)" fg:x="22302" fg:w="106"/><text x="21.0216%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (251 samples, 0.23%)</title><rect x="20.6384%" y="1557" width="0.2338%" height="15" fill="rgb(211,67,34)" fg:x="22159" fg:w="251"/><text x="20.8884%" y="1567.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (536 samples, 0.50%)</title><rect x="20.4977%" y="1669" width="0.4992%" height="15" fill="rgb(225,87,47)" fg:x="22008" fg:w="536"/><text x="20.7477%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (433 samples, 0.40%)</title><rect x="20.5937%" y="1653" width="0.4033%" height="15" fill="rgb(217,185,16)" fg:x="22111" fg:w="433"/><text x="20.8437%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (433 samples, 0.40%)</title><rect x="20.5937%" y="1637" width="0.4033%" height="15" fill="rgb(205,0,0)" fg:x="22111" fg:w="433"/><text x="20.8437%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (433 samples, 0.40%)</title><rect x="20.5937%" y="1621" width="0.4033%" height="15" fill="rgb(207,116,45)" fg:x="22111" fg:w="433"/><text x="20.8437%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (387 samples, 0.36%)</title><rect x="20.6365%" y="1605" width="0.3604%" height="15" fill="rgb(221,156,26)" fg:x="22157" fg:w="387"/><text x="20.8865%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (387 samples, 0.36%)</title><rect x="20.6365%" y="1589" width="0.3604%" height="15" fill="rgb(213,140,4)" fg:x="22157" fg:w="387"/><text x="20.8865%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (387 samples, 0.36%)</title><rect x="20.6365%" y="1573" width="0.3604%" height="15" fill="rgb(231,224,15)" fg:x="22157" fg:w="387"/><text x="20.8865%" y="1583.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (131 samples, 0.12%)</title><rect x="20.8749%" y="1557" width="0.1220%" height="15" fill="rgb(244,76,20)" fg:x="22413" fg:w="131"/><text x="21.1249%" y="1567.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (131 samples, 0.12%)</title><rect x="20.8749%" y="1541" width="0.1220%" height="15" fill="rgb(238,117,7)" fg:x="22413" fg:w="131"/><text x="21.1249%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (131 samples, 0.12%)</title><rect x="20.8749%" y="1525" width="0.1220%" height="15" fill="rgb(235,1,10)" fg:x="22413" fg:w="131"/><text x="21.1249%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="20.9979%" y="1653" width="0.0121%" height="15" fill="rgb(216,165,6)" fg:x="22545" fg:w="13"/><text x="21.2479%" y="1663.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="20.9997%" y="1637" width="0.0102%" height="15" fill="rgb(246,91,35)" fg:x="22547" fg:w="11"/><text x="21.2497%" y="1647.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="20.9997%" y="1621" width="0.0102%" height="15" fill="rgb(228,96,24)" fg:x="22547" fg:w="11"/><text x="21.2497%" y="1631.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (20 samples, 0.02%)</title><rect x="21.0323%" y="1605" width="0.0186%" height="15" fill="rgb(254,217,53)" fg:x="22582" fg:w="20"/><text x="21.2823%" y="1615.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (19 samples, 0.02%)</title><rect x="21.0333%" y="1589" width="0.0177%" height="15" fill="rgb(209,60,0)" fg:x="22583" fg:w="19"/><text x="21.2833%" y="1599.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (19 samples, 0.02%)</title><rect x="21.0333%" y="1573" width="0.0177%" height="15" fill="rgb(250,93,26)" fg:x="22583" fg:w="19"/><text x="21.2833%" y="1583.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (11 samples, 0.01%)</title><rect x="21.0407%" y="1557" width="0.0102%" height="15" fill="rgb(211,9,40)" fg:x="22591" fg:w="11"/><text x="21.2907%" y="1567.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.01%)</title><rect x="21.0407%" y="1541" width="0.0102%" height="15" fill="rgb(242,57,20)" fg:x="22591" fg:w="11"/><text x="21.2907%" y="1551.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.01%)</title><rect x="21.0407%" y="1525" width="0.0102%" height="15" fill="rgb(248,85,48)" fg:x="22591" fg:w="11"/><text x="21.2907%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="21.0538%" y="1589" width="0.0112%" height="15" fill="rgb(212,117,2)" fg:x="22605" fg:w="12"/><text x="21.3038%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="21.0538%" y="1573" width="0.0112%" height="15" fill="rgb(243,19,3)" fg:x="22605" fg:w="12"/><text x="21.3038%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="21.0538%" y="1557" width="0.0112%" height="15" fill="rgb(232,217,24)" fg:x="22605" fg:w="12"/><text x="21.3038%" y="1567.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="21.0696%" y="1541" width="0.0121%" height="15" fill="rgb(224,175,40)" fg:x="22622" fg:w="13"/><text x="21.3196%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="21.0696%" y="1573" width="0.0186%" height="15" fill="rgb(212,162,32)" fg:x="22622" fg:w="20"/><text x="21.3196%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="21.0696%" y="1557" width="0.0186%" height="15" fill="rgb(215,9,4)" fg:x="22622" fg:w="20"/><text x="21.3196%" y="1567.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (48 samples, 0.04%)</title><rect x="21.0538%" y="1605" width="0.0447%" height="15" fill="rgb(242,42,7)" fg:x="22605" fg:w="48"/><text x="21.3038%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.03%)</title><rect x="21.0696%" y="1589" width="0.0289%" height="15" fill="rgb(242,184,45)" fg:x="22622" fg:w="31"/><text x="21.3196%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="21.0882%" y="1573" width="0.0102%" height="15" fill="rgb(228,111,51)" fg:x="22642" fg:w="11"/><text x="21.3382%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="21.0882%" y="1557" width="0.0102%" height="15" fill="rgb(236,147,17)" fg:x="22642" fg:w="11"/><text x="21.3382%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="21.0882%" y="1541" width="0.0102%" height="15" fill="rgb(210,75,22)" fg:x="22642" fg:w="11"/><text x="21.3382%" y="1551.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="21.1031%" y="1525" width="0.0140%" height="15" fill="rgb(217,159,45)" fg:x="22658" fg:w="15"/><text x="21.3531%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="21.1050%" y="1509" width="0.0121%" height="15" fill="rgb(245,165,53)" fg:x="22660" fg:w="13"/><text x="21.3550%" y="1519.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (13 samples, 0.01%)</title><rect x="21.1050%" y="1493" width="0.0121%" height="15" fill="rgb(251,190,50)" fg:x="22660" fg:w="13"/><text x="21.3550%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.01%)</title><rect x="21.1050%" y="1477" width="0.0121%" height="15" fill="rgb(208,203,29)" fg:x="22660" fg:w="13"/><text x="21.3550%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="21.1022%" y="1557" width="0.0168%" height="15" fill="rgb(207,209,35)" fg:x="22657" fg:w="18"/><text x="21.3522%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="21.1031%" y="1541" width="0.0158%" height="15" fill="rgb(230,144,49)" fg:x="22658" fg:w="17"/><text x="21.3531%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (36 samples, 0.03%)</title><rect x="21.1022%" y="1573" width="0.0335%" height="15" fill="rgb(229,31,6)" fg:x="22657" fg:w="36"/><text x="21.3522%" y="1583.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (21 samples, 0.02%)</title><rect x="21.1367%" y="1525" width="0.0196%" height="15" fill="rgb(251,129,24)" fg:x="22694" fg:w="21"/><text x="21.3867%" y="1535.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (21 samples, 0.02%)</title><rect x="21.1367%" y="1509" width="0.0196%" height="15" fill="rgb(235,105,15)" fg:x="22694" fg:w="21"/><text x="21.3867%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="21.1385%" y="1493" width="0.0177%" height="15" fill="rgb(216,52,43)" fg:x="22696" fg:w="19"/><text x="21.3885%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="21.1404%" y="1477" width="0.0158%" height="15" fill="rgb(238,144,41)" fg:x="22698" fg:w="17"/><text x="21.3904%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="21.1404%" y="1461" width="0.0158%" height="15" fill="rgb(243,63,9)" fg:x="22698" fg:w="17"/><text x="21.3904%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (41 samples, 0.04%)</title><rect x="21.1581%" y="1525" width="0.0382%" height="15" fill="rgb(246,208,1)" fg:x="22717" fg:w="41"/><text x="21.4081%" y="1535.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (41 samples, 0.04%)</title><rect x="21.1581%" y="1509" width="0.0382%" height="15" fill="rgb(233,182,18)" fg:x="22717" fg:w="41"/><text x="21.4081%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.04%)</title><rect x="21.1581%" y="1493" width="0.0382%" height="15" fill="rgb(242,224,8)" fg:x="22717" fg:w="41"/><text x="21.4081%" y="1503.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (2,884 samples, 2.69%)</title><rect x="18.5120%" y="1781" width="2.6861%" height="15" fill="rgb(243,54,37)" fg:x="19876" fg:w="2884"/><text x="18.7620%" y="1791.50">&lt;a..</text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (2,884 samples, 2.69%)</title><rect x="18.5120%" y="1765" width="2.6861%" height="15" fill="rgb(233,192,12)" fg:x="19876" fg:w="2884"/><text x="18.7620%" y="1775.50">ap..</text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (936 samples, 0.87%)</title><rect x="20.3264%" y="1749" width="0.8718%" height="15" fill="rgb(251,192,53)" fg:x="21824" fg:w="936"/><text x="20.5764%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (936 samples, 0.87%)</title><rect x="20.3264%" y="1733" width="0.8718%" height="15" fill="rgb(246,141,26)" fg:x="21824" fg:w="936"/><text x="20.5764%" y="1743.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (755 samples, 0.70%)</title><rect x="20.4949%" y="1717" width="0.7032%" height="15" fill="rgb(239,195,19)" fg:x="22005" fg:w="755"/><text x="20.7449%" y="1727.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (755 samples, 0.70%)</title><rect x="20.4949%" y="1701" width="0.7032%" height="15" fill="rgb(241,16,39)" fg:x="22005" fg:w="755"/><text x="20.7449%" y="1711.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (755 samples, 0.70%)</title><rect x="20.4949%" y="1685" width="0.7032%" height="15" fill="rgb(223,13,53)" fg:x="22005" fg:w="755"/><text x="20.7449%" y="1695.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (216 samples, 0.20%)</title><rect x="20.9969%" y="1669" width="0.2012%" height="15" fill="rgb(214,227,0)" fg:x="22544" fg:w="216"/><text x="21.2469%" y="1679.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (189 samples, 0.18%)</title><rect x="21.0221%" y="1653" width="0.1760%" height="15" fill="rgb(228,103,26)" fg:x="22571" fg:w="189"/><text x="21.2721%" y="1663.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (179 samples, 0.17%)</title><rect x="21.0314%" y="1637" width="0.1667%" height="15" fill="rgb(254,177,53)" fg:x="22581" fg:w="179"/><text x="21.2814%" y="1647.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (178 samples, 0.17%)</title><rect x="21.0323%" y="1621" width="0.1658%" height="15" fill="rgb(208,201,34)" fg:x="22582" fg:w="178"/><text x="21.2823%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (107 samples, 0.10%)</title><rect x="21.0985%" y="1605" width="0.0997%" height="15" fill="rgb(212,39,5)" fg:x="22653" fg:w="107"/><text x="21.3485%" y="1615.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (104 samples, 0.10%)</title><rect x="21.1013%" y="1589" width="0.0969%" height="15" fill="rgb(246,117,3)" fg:x="22656" fg:w="104"/><text x="21.3513%" y="1599.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (67 samples, 0.06%)</title><rect x="21.1357%" y="1573" width="0.0624%" height="15" fill="rgb(244,118,39)" fg:x="22693" fg:w="67"/><text x="21.3857%" y="1583.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (67 samples, 0.06%)</title><rect x="21.1357%" y="1557" width="0.0624%" height="15" fill="rgb(241,64,10)" fg:x="22693" fg:w="67"/><text x="21.3857%" y="1567.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (67 samples, 0.06%)</title><rect x="21.1357%" y="1541" width="0.0624%" height="15" fill="rgb(229,39,44)" fg:x="22693" fg:w="67"/><text x="21.3857%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (25 samples, 0.02%)</title><rect x="21.1981%" y="1781" width="0.0233%" height="15" fill="rgb(230,226,3)" fg:x="22760" fg:w="25"/><text x="21.4481%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (25 samples, 0.02%)</title><rect x="21.1981%" y="1765" width="0.0233%" height="15" fill="rgb(222,13,42)" fg:x="22760" fg:w="25"/><text x="21.4481%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (25 samples, 0.02%)</title><rect x="21.1981%" y="1749" width="0.0233%" height="15" fill="rgb(247,180,54)" fg:x="22760" fg:w="25"/><text x="21.4481%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (17 samples, 0.02%)</title><rect x="21.2056%" y="1733" width="0.0158%" height="15" fill="rgb(205,96,16)" fg:x="22768" fg:w="17"/><text x="21.4556%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (17 samples, 0.02%)</title><rect x="21.2056%" y="1717" width="0.0158%" height="15" fill="rgb(205,100,21)" fg:x="22768" fg:w="17"/><text x="21.4556%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (11 samples, 0.01%)</title><rect x="21.2112%" y="1701" width="0.0102%" height="15" fill="rgb(248,51,4)" fg:x="22774" fg:w="11"/><text x="21.4612%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="21.2521%" y="1637" width="0.0149%" height="15" fill="rgb(217,197,30)" fg:x="22818" fg:w="16"/><text x="21.5021%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (102 samples, 0.10%)</title><rect x="21.3443%" y="1461" width="0.0950%" height="15" fill="rgb(240,179,40)" fg:x="22917" fg:w="102"/><text x="21.5943%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 0.09%)</title><rect x="21.3462%" y="1445" width="0.0931%" height="15" fill="rgb(212,185,35)" fg:x="22919" fg:w="100"/><text x="21.5962%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (100 samples, 0.09%)</title><rect x="21.3462%" y="1429" width="0.0931%" height="15" fill="rgb(251,222,31)" fg:x="22919" fg:w="100"/><text x="21.5962%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.09%)</title><rect x="21.3499%" y="1413" width="0.0894%" height="15" fill="rgb(208,140,36)" fg:x="22923" fg:w="96"/><text x="21.5999%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.09%)</title><rect x="21.3499%" y="1397" width="0.0894%" height="15" fill="rgb(220,148,1)" fg:x="22923" fg:w="96"/><text x="21.5999%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.09%)</title><rect x="21.3499%" y="1381" width="0.0894%" height="15" fill="rgb(254,4,28)" fg:x="22923" fg:w="96"/><text x="21.5999%" y="1391.50"></text></g><g><title>malloc (94 samples, 0.09%)</title><rect x="21.3518%" y="1365" width="0.0875%" height="15" fill="rgb(222,185,44)" fg:x="22925" fg:w="94"/><text x="21.6018%" y="1375.50"></text></g><g><title>[libc.so.6] (66 samples, 0.06%)</title><rect x="21.3779%" y="1349" width="0.0615%" height="15" fill="rgb(215,74,39)" fg:x="22953" fg:w="66"/><text x="21.6279%" y="1359.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (175 samples, 0.16%)</title><rect x="21.2866%" y="1557" width="0.1630%" height="15" fill="rgb(247,86,4)" fg:x="22855" fg:w="175"/><text x="21.5366%" y="1567.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (129 samples, 0.12%)</title><rect x="21.3294%" y="1541" width="0.1201%" height="15" fill="rgb(231,105,32)" fg:x="22901" fg:w="129"/><text x="21.5794%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (127 samples, 0.12%)</title><rect x="21.3313%" y="1525" width="0.1183%" height="15" fill="rgb(222,65,35)" fg:x="22903" fg:w="127"/><text x="21.5813%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (117 samples, 0.11%)</title><rect x="21.3406%" y="1509" width="0.1090%" height="15" fill="rgb(218,145,35)" fg:x="22913" fg:w="117"/><text x="21.5906%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (117 samples, 0.11%)</title><rect x="21.3406%" y="1493" width="0.1090%" height="15" fill="rgb(208,7,15)" fg:x="22913" fg:w="117"/><text x="21.5906%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (117 samples, 0.11%)</title><rect x="21.3406%" y="1477" width="0.1090%" height="15" fill="rgb(209,83,13)" fg:x="22913" fg:w="117"/><text x="21.5906%" y="1487.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="21.4393%" y="1461" width="0.0102%" height="15" fill="rgb(218,3,10)" fg:x="23019" fg:w="11"/><text x="21.6893%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.03%)</title><rect x="21.4515%" y="1557" width="0.0335%" height="15" fill="rgb(211,219,4)" fg:x="23032" fg:w="36"/><text x="21.7015%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="21.4524%" y="1541" width="0.0326%" height="15" fill="rgb(228,194,12)" fg:x="23033" fg:w="35"/><text x="21.7024%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.03%)</title><rect x="21.4524%" y="1525" width="0.0326%" height="15" fill="rgb(210,175,7)" fg:x="23033" fg:w="35"/><text x="21.7024%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="21.4570%" y="1509" width="0.0279%" height="15" fill="rgb(243,132,6)" fg:x="23038" fg:w="30"/><text x="21.7070%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.03%)</title><rect x="21.4570%" y="1493" width="0.0279%" height="15" fill="rgb(207,72,18)" fg:x="23038" fg:w="30"/><text x="21.7070%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.03%)</title><rect x="21.4570%" y="1477" width="0.0279%" height="15" fill="rgb(236,1,18)" fg:x="23038" fg:w="30"/><text x="21.7070%" y="1487.50"></text></g><g><title>malloc (30 samples, 0.03%)</title><rect x="21.4570%" y="1461" width="0.0279%" height="15" fill="rgb(227,0,18)" fg:x="23038" fg:w="30"/><text x="21.7070%" y="1471.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (314 samples, 0.29%)</title><rect x="21.2214%" y="1733" width="0.2925%" height="15" fill="rgb(247,37,5)" fg:x="22785" fg:w="314"/><text x="21.4714%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (314 samples, 0.29%)</title><rect x="21.2214%" y="1717" width="0.2925%" height="15" fill="rgb(237,179,24)" fg:x="22785" fg:w="314"/><text x="21.4714%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (314 samples, 0.29%)</title><rect x="21.2214%" y="1701" width="0.2925%" height="15" fill="rgb(226,53,20)" fg:x="22785" fg:w="314"/><text x="21.4714%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (314 samples, 0.29%)</title><rect x="21.2214%" y="1685" width="0.2925%" height="15" fill="rgb(247,75,7)" fg:x="22785" fg:w="314"/><text x="21.4714%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (314 samples, 0.29%)</title><rect x="21.2214%" y="1669" width="0.2925%" height="15" fill="rgb(233,96,12)" fg:x="22785" fg:w="314"/><text x="21.4714%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (314 samples, 0.29%)</title><rect x="21.2214%" y="1653" width="0.2925%" height="15" fill="rgb(224,125,0)" fg:x="22785" fg:w="314"/><text x="21.4714%" y="1663.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (265 samples, 0.25%)</title><rect x="21.2670%" y="1637" width="0.2468%" height="15" fill="rgb(224,92,25)" fg:x="22834" fg:w="265"/><text x="21.5170%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (257 samples, 0.24%)</title><rect x="21.2745%" y="1621" width="0.2394%" height="15" fill="rgb(224,42,24)" fg:x="22842" fg:w="257"/><text x="21.5245%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (247 samples, 0.23%)</title><rect x="21.2838%" y="1605" width="0.2300%" height="15" fill="rgb(234,132,49)" fg:x="22852" fg:w="247"/><text x="21.5338%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (247 samples, 0.23%)</title><rect x="21.2838%" y="1589" width="0.2300%" height="15" fill="rgb(248,100,35)" fg:x="22852" fg:w="247"/><text x="21.5338%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (247 samples, 0.23%)</title><rect x="21.2838%" y="1573" width="0.2300%" height="15" fill="rgb(239,94,40)" fg:x="22852" fg:w="247"/><text x="21.5338%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (31 samples, 0.03%)</title><rect x="21.4850%" y="1557" width="0.0289%" height="15" fill="rgb(235,139,28)" fg:x="23068" fg:w="31"/><text x="21.7350%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (317 samples, 0.30%)</title><rect x="21.2214%" y="1781" width="0.2952%" height="15" fill="rgb(217,144,7)" fg:x="22785" fg:w="317"/><text x="21.4714%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (317 samples, 0.30%)</title><rect x="21.2214%" y="1765" width="0.2952%" height="15" fill="rgb(227,55,4)" fg:x="22785" fg:w="317"/><text x="21.4714%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (317 samples, 0.30%)</title><rect x="21.2214%" y="1749" width="0.2952%" height="15" fill="rgb(252,82,54)" fg:x="22785" fg:w="317"/><text x="21.4714%" y="1759.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (70 samples, 0.07%)</title><rect x="21.6284%" y="1365" width="0.0652%" height="15" fill="rgb(245,172,4)" fg:x="23222" fg:w="70"/><text x="21.8784%" y="1375.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (56 samples, 0.05%)</title><rect x="21.6415%" y="1349" width="0.0522%" height="15" fill="rgb(207,26,27)" fg:x="23236" fg:w="56"/><text x="21.8915%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (56 samples, 0.05%)</title><rect x="21.6415%" y="1333" width="0.0522%" height="15" fill="rgb(252,98,18)" fg:x="23236" fg:w="56"/><text x="21.8915%" y="1343.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (53 samples, 0.05%)</title><rect x="21.6443%" y="1317" width="0.0494%" height="15" fill="rgb(244,8,26)" fg:x="23239" fg:w="53"/><text x="21.8943%" y="1327.50"></text></g><g><title>serde::de::SeqAccess::next_element (26 samples, 0.02%)</title><rect x="21.6694%" y="1301" width="0.0242%" height="15" fill="rgb(237,173,45)" fg:x="23266" fg:w="26"/><text x="21.9194%" y="1311.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (26 samples, 0.02%)</title><rect x="21.6694%" y="1285" width="0.0242%" height="15" fill="rgb(208,213,49)" fg:x="23266" fg:w="26"/><text x="21.9194%" y="1295.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (25 samples, 0.02%)</title><rect x="21.6703%" y="1269" width="0.0233%" height="15" fill="rgb(212,122,37)" fg:x="23267" fg:w="25"/><text x="21.9203%" y="1279.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (25 samples, 0.02%)</title><rect x="21.6703%" y="1253" width="0.0233%" height="15" fill="rgb(213,80,17)" fg:x="23267" fg:w="25"/><text x="21.9203%" y="1263.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (25 samples, 0.02%)</title><rect x="21.6703%" y="1237" width="0.0233%" height="15" fill="rgb(206,210,43)" fg:x="23267" fg:w="25"/><text x="21.9203%" y="1247.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (13 samples, 0.01%)</title><rect x="21.6815%" y="1221" width="0.0121%" height="15" fill="rgb(229,214,3)" fg:x="23279" fg:w="13"/><text x="21.9315%" y="1231.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (110 samples, 0.10%)</title><rect x="21.5921%" y="1413" width="0.1025%" height="15" fill="rgb(235,213,29)" fg:x="23183" fg:w="110"/><text x="21.8421%" y="1423.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (85 samples, 0.08%)</title><rect x="21.6154%" y="1397" width="0.0792%" height="15" fill="rgb(248,135,26)" fg:x="23208" fg:w="85"/><text x="21.8654%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (85 samples, 0.08%)</title><rect x="21.6154%" y="1381" width="0.0792%" height="15" fill="rgb(242,188,12)" fg:x="23208" fg:w="85"/><text x="21.8654%" y="1391.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (143 samples, 0.13%)</title><rect x="21.5763%" y="1429" width="0.1332%" height="15" fill="rgb(245,38,12)" fg:x="23166" fg:w="143"/><text x="21.8263%" y="1439.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (161 samples, 0.15%)</title><rect x="21.5753%" y="1445" width="0.1500%" height="15" fill="rgb(218,42,13)" fg:x="23165" fg:w="161"/><text x="21.8253%" y="1455.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (17 samples, 0.02%)</title><rect x="21.7094%" y="1429" width="0.0158%" height="15" fill="rgb(238,132,49)" fg:x="23309" fg:w="17"/><text x="21.9594%" y="1439.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.02%)</title><rect x="21.7253%" y="1445" width="0.0233%" height="15" fill="rgb(209,196,19)" fg:x="23326" fg:w="25"/><text x="21.9753%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.04%)</title><rect x="21.7532%" y="1397" width="0.0428%" height="15" fill="rgb(244,131,22)" fg:x="23356" fg:w="46"/><text x="22.0032%" y="1407.50"></text></g><g><title>malloc (41 samples, 0.04%)</title><rect x="21.7579%" y="1381" width="0.0382%" height="15" fill="rgb(223,18,34)" fg:x="23361" fg:w="41"/><text x="22.0079%" y="1391.50"></text></g><g><title>[libc.so.6] (35 samples, 0.03%)</title><rect x="21.7635%" y="1365" width="0.0326%" height="15" fill="rgb(252,124,54)" fg:x="23367" fg:w="35"/><text x="22.0135%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (50 samples, 0.05%)</title><rect x="21.7514%" y="1429" width="0.0466%" height="15" fill="rgb(229,106,42)" fg:x="23354" fg:w="50"/><text x="22.0014%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.05%)</title><rect x="21.7514%" y="1413" width="0.0466%" height="15" fill="rgb(221,129,1)" fg:x="23354" fg:w="50"/><text x="22.0014%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (278 samples, 0.26%)</title><rect x="21.5576%" y="1461" width="0.2589%" height="15" fill="rgb(229,74,15)" fg:x="23146" fg:w="278"/><text x="21.8076%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (73 samples, 0.07%)</title><rect x="21.7486%" y="1445" width="0.0680%" height="15" fill="rgb(210,206,50)" fg:x="23351" fg:w="73"/><text x="21.9986%" y="1455.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="21.7989%" y="1429" width="0.0177%" height="15" fill="rgb(251,114,31)" fg:x="23405" fg:w="19"/><text x="22.0489%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (280 samples, 0.26%)</title><rect x="21.5576%" y="1477" width="0.2608%" height="15" fill="rgb(215,225,28)" fg:x="23146" fg:w="280"/><text x="21.8076%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.02%)</title><rect x="21.8287%" y="1397" width="0.0205%" height="15" fill="rgb(237,109,14)" fg:x="23437" fg:w="22"/><text x="22.0787%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.02%)</title><rect x="21.8287%" y="1381" width="0.0205%" height="15" fill="rgb(230,13,37)" fg:x="23437" fg:w="22"/><text x="22.0787%" y="1391.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (22 samples, 0.02%)</title><rect x="21.8287%" y="1365" width="0.0205%" height="15" fill="rgb(231,40,28)" fg:x="23437" fg:w="22"/><text x="22.0787%" y="1375.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (22 samples, 0.02%)</title><rect x="21.8287%" y="1349" width="0.0205%" height="15" fill="rgb(231,202,18)" fg:x="23437" fg:w="22"/><text x="22.0787%" y="1359.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="21.8296%" y="1333" width="0.0196%" height="15" fill="rgb(225,33,18)" fg:x="23438" fg:w="21"/><text x="22.0796%" y="1343.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (23 samples, 0.02%)</title><rect x="21.8287%" y="1413" width="0.0214%" height="15" fill="rgb(223,64,47)" fg:x="23437" fg:w="23"/><text x="22.0787%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (325 samples, 0.30%)</title><rect x="21.5558%" y="1493" width="0.3027%" height="15" fill="rgb(234,114,13)" fg:x="23144" fg:w="325"/><text x="21.8058%" y="1503.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (39 samples, 0.04%)</title><rect x="21.8221%" y="1477" width="0.0363%" height="15" fill="rgb(248,56,40)" fg:x="23430" fg:w="39"/><text x="22.0721%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.04%)</title><rect x="21.8231%" y="1461" width="0.0354%" height="15" fill="rgb(221,194,21)" fg:x="23431" fg:w="38"/><text x="22.0731%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="21.8231%" y="1445" width="0.0354%" height="15" fill="rgb(242,108,46)" fg:x="23431" fg:w="38"/><text x="22.0731%" y="1455.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="21.8231%" y="1429" width="0.0354%" height="15" fill="rgb(220,106,10)" fg:x="23431" fg:w="38"/><text x="22.0731%" y="1439.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (31 samples, 0.03%)</title><rect x="21.8585%" y="1493" width="0.0289%" height="15" fill="rgb(211,88,4)" fg:x="23469" fg:w="31"/><text x="22.1085%" y="1503.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="21.8631%" y="1477" width="0.0242%" height="15" fill="rgb(214,95,34)" fg:x="23474" fg:w="26"/><text x="22.1131%" y="1487.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.02%)</title><rect x="21.8687%" y="1461" width="0.0186%" height="15" fill="rgb(250,160,33)" fg:x="23480" fg:w="20"/><text x="22.1187%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="21.8687%" y="1445" width="0.0186%" height="15" fill="rgb(225,29,10)" fg:x="23480" fg:w="20"/><text x="22.1187%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="21.8687%" y="1429" width="0.0186%" height="15" fill="rgb(224,28,30)" fg:x="23480" fg:w="20"/><text x="22.1187%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="21.8687%" y="1413" width="0.0186%" height="15" fill="rgb(231,77,4)" fg:x="23480" fg:w="20"/><text x="22.1187%" y="1423.50"></text></g><g><title>malloc (18 samples, 0.02%)</title><rect x="21.8706%" y="1397" width="0.0168%" height="15" fill="rgb(209,63,21)" fg:x="23482" fg:w="18"/><text x="22.1206%" y="1407.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="21.8734%" y="1381" width="0.0140%" height="15" fill="rgb(226,22,11)" fg:x="23485" fg:w="15"/><text x="22.1234%" y="1391.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (31 samples, 0.03%)</title><rect x="21.8873%" y="1493" width="0.0289%" height="15" fill="rgb(216,82,30)" fg:x="23500" fg:w="31"/><text x="22.1373%" y="1503.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (31 samples, 0.03%)</title><rect x="21.8873%" y="1477" width="0.0289%" height="15" fill="rgb(246,227,38)" fg:x="23500" fg:w="31"/><text x="22.1373%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="21.8911%" y="1461" width="0.0251%" height="15" fill="rgb(251,203,53)" fg:x="23504" fg:w="27"/><text x="22.1411%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.03%)</title><rect x="21.8911%" y="1445" width="0.0251%" height="15" fill="rgb(254,101,1)" fg:x="23504" fg:w="27"/><text x="22.1411%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="21.8911%" y="1429" width="0.0251%" height="15" fill="rgb(241,180,5)" fg:x="23504" fg:w="27"/><text x="22.1411%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.03%)</title><rect x="21.8911%" y="1413" width="0.0251%" height="15" fill="rgb(218,168,4)" fg:x="23504" fg:w="27"/><text x="22.1411%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.03%)</title><rect x="21.8911%" y="1397" width="0.0251%" height="15" fill="rgb(224,223,32)" fg:x="23504" fg:w="27"/><text x="22.1411%" y="1407.50"></text></g><g><title>malloc (26 samples, 0.02%)</title><rect x="21.8920%" y="1381" width="0.0242%" height="15" fill="rgb(236,106,22)" fg:x="23505" fg:w="26"/><text x="22.1420%" y="1391.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="21.8994%" y="1365" width="0.0168%" height="15" fill="rgb(206,121,5)" fg:x="23513" fg:w="18"/><text x="22.1494%" y="1375.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (423 samples, 0.39%)</title><rect x="21.5343%" y="1509" width="0.3940%" height="15" fill="rgb(233,87,28)" fg:x="23121" fg:w="423"/><text x="21.7843%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (13 samples, 0.01%)</title><rect x="21.9162%" y="1493" width="0.0121%" height="15" fill="rgb(236,137,17)" fg:x="23531" fg:w="13"/><text x="22.1662%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (11 samples, 0.01%)</title><rect x="21.9181%" y="1477" width="0.0102%" height="15" fill="rgb(209,183,38)" fg:x="23533" fg:w="11"/><text x="22.1681%" y="1487.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (440 samples, 0.41%)</title><rect x="21.5334%" y="1525" width="0.4098%" height="15" fill="rgb(206,162,44)" fg:x="23120" fg:w="440"/><text x="21.7834%" y="1535.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (16 samples, 0.01%)</title><rect x="21.9283%" y="1509" width="0.0149%" height="15" fill="rgb(237,70,39)" fg:x="23544" fg:w="16"/><text x="22.1783%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.05%)</title><rect x="21.9572%" y="1477" width="0.0456%" height="15" fill="rgb(212,176,5)" fg:x="23575" fg:w="49"/><text x="22.2072%" y="1487.50"></text></g><g><title>malloc (42 samples, 0.04%)</title><rect x="21.9637%" y="1461" width="0.0391%" height="15" fill="rgb(232,95,16)" fg:x="23582" fg:w="42"/><text x="22.2137%" y="1471.50"></text></g><g><title>[libc.so.6] (29 samples, 0.03%)</title><rect x="21.9758%" y="1445" width="0.0270%" height="15" fill="rgb(219,115,35)" fg:x="23595" fg:w="29"/><text x="22.2258%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (55 samples, 0.05%)</title><rect x="21.9544%" y="1509" width="0.0512%" height="15" fill="rgb(251,67,27)" fg:x="23572" fg:w="55"/><text x="22.2044%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (55 samples, 0.05%)</title><rect x="21.9544%" y="1493" width="0.0512%" height="15" fill="rgb(222,95,40)" fg:x="23572" fg:w="55"/><text x="22.2044%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (535 samples, 0.50%)</title><rect x="21.5167%" y="1557" width="0.4983%" height="15" fill="rgb(250,35,16)" fg:x="23102" fg:w="535"/><text x="21.7667%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (535 samples, 0.50%)</title><rect x="21.5167%" y="1541" width="0.4983%" height="15" fill="rgb(224,86,44)" fg:x="23102" fg:w="535"/><text x="21.7667%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (67 samples, 0.06%)</title><rect x="21.9525%" y="1525" width="0.0624%" height="15" fill="rgb(237,53,53)" fg:x="23570" fg:w="67"/><text x="22.2025%" y="1535.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (4,471 samples, 4.16%)</title><rect x="17.8526%" y="2005" width="4.1642%" height="15" fill="rgb(208,171,33)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="2015.50">aptos..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1989" width="4.1642%" height="15" fill="rgb(222,64,27)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1999.50">&lt;apto..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1973" width="4.1642%" height="15" fill="rgb(221,121,35)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1983.50">aptos..</text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1957" width="4.1642%" height="15" fill="rgb(228,137,42)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1967.50">aptos..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1941" width="4.1642%" height="15" fill="rgb(227,54,21)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1951.50">move_..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1925" width="4.1642%" height="15" fill="rgb(240,168,33)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1935.50">move_..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1909" width="4.1642%" height="15" fill="rgb(243,159,6)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1919.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1893" width="4.1642%" height="15" fill="rgb(205,211,41)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1903.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1877" width="4.1642%" height="15" fill="rgb(253,30,1)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1887.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1861" width="4.1642%" height="15" fill="rgb(226,80,18)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1871.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (4,471 samples, 4.16%)</title><rect x="17.8526%" y="1845" width="4.1642%" height="15" fill="rgb(253,156,46)" fg:x="19168" fg:w="4471"/><text x="18.1026%" y="1855.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (3,763 samples, 3.50%)</title><rect x="18.5120%" y="1829" width="3.5048%" height="15" fill="rgb(248,87,27)" fg:x="19876" fg:w="3763"/><text x="18.7620%" y="1839.50">mov..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (3,763 samples, 3.50%)</title><rect x="18.5120%" y="1813" width="3.5048%" height="15" fill="rgb(227,122,2)" fg:x="19876" fg:w="3763"/><text x="18.7620%" y="1823.50">mov..</text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (3,763 samples, 3.50%)</title><rect x="18.5120%" y="1797" width="3.5048%" height="15" fill="rgb(229,94,39)" fg:x="19876" fg:w="3763"/><text x="18.7620%" y="1807.50">&lt;mo..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (537 samples, 0.50%)</title><rect x="21.5167%" y="1781" width="0.5001%" height="15" fill="rgb(225,173,31)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1791.50"></text></g><g><title>bcs::de::from_bytes_seed (537 samples, 0.50%)</title><rect x="21.5167%" y="1765" width="0.5001%" height="15" fill="rgb(239,176,30)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (537 samples, 0.50%)</title><rect x="21.5167%" y="1749" width="0.5001%" height="15" fill="rgb(212,104,21)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (537 samples, 0.50%)</title><rect x="21.5167%" y="1733" width="0.5001%" height="15" fill="rgb(240,209,40)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1743.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (537 samples, 0.50%)</title><rect x="21.5167%" y="1717" width="0.5001%" height="15" fill="rgb(234,195,5)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (537 samples, 0.50%)</title><rect x="21.5167%" y="1701" width="0.5001%" height="15" fill="rgb(238,213,1)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1711.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (537 samples, 0.50%)</title><rect x="21.5167%" y="1685" width="0.5001%" height="15" fill="rgb(235,182,54)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (537 samples, 0.50%)</title><rect x="21.5167%" y="1669" width="0.5001%" height="15" fill="rgb(229,50,46)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (537 samples, 0.50%)</title><rect x="21.5167%" y="1653" width="0.5001%" height="15" fill="rgb(219,145,13)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1663.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (537 samples, 0.50%)</title><rect x="21.5167%" y="1637" width="0.5001%" height="15" fill="rgb(220,226,10)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (537 samples, 0.50%)</title><rect x="21.5167%" y="1621" width="0.5001%" height="15" fill="rgb(248,47,30)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1631.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (537 samples, 0.50%)</title><rect x="21.5167%" y="1605" width="0.5001%" height="15" fill="rgb(231,209,44)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (537 samples, 0.50%)</title><rect x="21.5167%" y="1589" width="0.5001%" height="15" fill="rgb(209,80,30)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (537 samples, 0.50%)</title><rect x="21.5167%" y="1573" width="0.5001%" height="15" fill="rgb(232,9,14)" fg:x="23102" fg:w="537"/><text x="21.7667%" y="1583.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="22.0289%" y="1733" width="0.0102%" height="15" fill="rgb(243,91,43)" fg:x="23652" fg:w="11"/><text x="22.2789%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (26 samples, 0.02%)</title><rect x="22.1016%" y="1557" width="0.0242%" height="15" fill="rgb(231,90,52)" fg:x="23730" fg:w="26"/><text x="22.3516%" y="1567.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.02%)</title><rect x="22.1016%" y="1541" width="0.0242%" height="15" fill="rgb(253,192,44)" fg:x="23730" fg:w="26"/><text x="22.3516%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.02%)</title><rect x="22.1062%" y="1525" width="0.0196%" height="15" fill="rgb(241,66,31)" fg:x="23735" fg:w="21"/><text x="22.3562%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.02%)</title><rect x="22.1062%" y="1509" width="0.0196%" height="15" fill="rgb(235,81,37)" fg:x="23735" fg:w="21"/><text x="22.3562%" y="1519.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (12 samples, 0.01%)</title><rect x="22.1146%" y="1493" width="0.0112%" height="15" fill="rgb(223,221,9)" fg:x="23744" fg:w="12"/><text x="22.3646%" y="1503.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (136 samples, 0.13%)</title><rect x="22.0867%" y="1573" width="0.1267%" height="15" fill="rgb(242,180,7)" fg:x="23714" fg:w="136"/><text x="22.3367%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (94 samples, 0.09%)</title><rect x="22.1258%" y="1557" width="0.0875%" height="15" fill="rgb(243,78,19)" fg:x="23756" fg:w="94"/><text x="22.3758%" y="1567.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (14 samples, 0.01%)</title><rect x="22.2916%" y="1413" width="0.0130%" height="15" fill="rgb(233,23,17)" fg:x="23934" fg:w="14"/><text x="22.5416%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::peek (23 samples, 0.02%)</title><rect x="22.2916%" y="1429" width="0.0214%" height="15" fill="rgb(252,122,45)" fg:x="23934" fg:w="23"/><text x="22.5416%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (52 samples, 0.05%)</title><rect x="22.2701%" y="1525" width="0.0484%" height="15" fill="rgb(247,108,20)" fg:x="23911" fg:w="52"/><text x="22.5201%" y="1535.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (52 samples, 0.05%)</title><rect x="22.2701%" y="1509" width="0.0484%" height="15" fill="rgb(235,84,21)" fg:x="23911" fg:w="52"/><text x="22.5201%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (52 samples, 0.05%)</title><rect x="22.2701%" y="1493" width="0.0484%" height="15" fill="rgb(247,129,10)" fg:x="23911" fg:w="52"/><text x="22.5201%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (47 samples, 0.04%)</title><rect x="22.2748%" y="1477" width="0.0438%" height="15" fill="rgb(208,173,14)" fg:x="23916" fg:w="47"/><text x="22.5248%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (32 samples, 0.03%)</title><rect x="22.2888%" y="1461" width="0.0298%" height="15" fill="rgb(236,31,38)" fg:x="23931" fg:w="32"/><text x="22.5388%" y="1471.50"></text></g><g><title>bcs::de::Deserializer::next (32 samples, 0.03%)</title><rect x="22.2888%" y="1445" width="0.0298%" height="15" fill="rgb(232,65,17)" fg:x="23931" fg:w="32"/><text x="22.5388%" y="1455.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (44 samples, 0.04%)</title><rect x="22.3186%" y="1525" width="0.0410%" height="15" fill="rgb(224,45,49)" fg:x="23963" fg:w="44"/><text x="22.5686%" y="1535.50"></text></g><g><title>core::cmp::PartialOrd::ge (44 samples, 0.04%)</title><rect x="22.3186%" y="1509" width="0.0410%" height="15" fill="rgb(225,2,53)" fg:x="23963" fg:w="44"/><text x="22.5686%" y="1519.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (40 samples, 0.04%)</title><rect x="22.3223%" y="1493" width="0.0373%" height="15" fill="rgb(248,210,53)" fg:x="23967" fg:w="40"/><text x="22.5723%" y="1503.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (40 samples, 0.04%)</title><rect x="22.3223%" y="1477" width="0.0373%" height="15" fill="rgb(211,1,30)" fg:x="23967" fg:w="40"/><text x="22.5723%" y="1487.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (40 samples, 0.04%)</title><rect x="22.3223%" y="1461" width="0.0373%" height="15" fill="rgb(224,96,15)" fg:x="23967" fg:w="40"/><text x="22.5723%" y="1471.50"></text></g><g><title>[libc.so.6] (37 samples, 0.03%)</title><rect x="22.3251%" y="1445" width="0.0345%" height="15" fill="rgb(252,45,11)" fg:x="23970" fg:w="37"/><text x="22.5751%" y="1455.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (110 samples, 0.10%)</title><rect x="22.2627%" y="1541" width="0.1025%" height="15" fill="rgb(220,125,38)" fg:x="23903" fg:w="110"/><text x="22.5127%" y="1551.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.02%)</title><rect x="22.4220%" y="1365" width="0.0214%" height="15" fill="rgb(243,161,33)" fg:x="24074" fg:w="23"/><text x="22.6720%" y="1375.50"></text></g><g><title>bcs::de::Deserializer::parse_length (39 samples, 0.04%)</title><rect x="22.4862%" y="1333" width="0.0363%" height="15" fill="rgb(248,197,34)" fg:x="24143" fg:w="39"/><text x="22.7362%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (33 samples, 0.03%)</title><rect x="22.4918%" y="1317" width="0.0307%" height="15" fill="rgb(228,165,23)" fg:x="24149" fg:w="33"/><text x="22.7418%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (55 samples, 0.05%)</title><rect x="22.4760%" y="1349" width="0.0512%" height="15" fill="rgb(236,94,38)" fg:x="24132" fg:w="55"/><text x="22.7260%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (90 samples, 0.08%)</title><rect x="22.5272%" y="1349" width="0.0838%" height="15" fill="rgb(220,13,23)" fg:x="24187" fg:w="90"/><text x="22.7772%" y="1359.50"></text></g><g><title>bcs::de::Deserializer::parse_string (404 samples, 0.38%)</title><rect x="22.4434%" y="1365" width="0.3763%" height="15" fill="rgb(234,26,39)" fg:x="24097" fg:w="404"/><text x="22.6934%" y="1375.50"></text></g><g><title>core::str::converts::from_utf8 (224 samples, 0.21%)</title><rect x="22.6110%" y="1349" width="0.2086%" height="15" fill="rgb(205,117,44)" fg:x="24277" fg:w="224"/><text x="22.8610%" y="1359.50"></text></g><g><title>core::str::validations::run_utf8_validation (168 samples, 0.16%)</title><rect x="22.6632%" y="1333" width="0.1565%" height="15" fill="rgb(250,42,2)" fg:x="24333" fg:w="168"/><text x="22.9132%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (352 samples, 0.33%)</title><rect x="22.8196%" y="1237" width="0.3278%" height="15" fill="rgb(223,83,14)" fg:x="24501" fg:w="352"/><text x="23.0696%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (352 samples, 0.33%)</title><rect x="22.8196%" y="1221" width="0.3278%" height="15" fill="rgb(241,147,50)" fg:x="24501" fg:w="352"/><text x="23.0696%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (352 samples, 0.33%)</title><rect x="22.8196%" y="1205" width="0.3278%" height="15" fill="rgb(218,90,6)" fg:x="24501" fg:w="352"/><text x="23.0696%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (335 samples, 0.31%)</title><rect x="22.8355%" y="1189" width="0.3120%" height="15" fill="rgb(210,191,5)" fg:x="24518" fg:w="335"/><text x="23.0855%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (335 samples, 0.31%)</title><rect x="22.8355%" y="1173" width="0.3120%" height="15" fill="rgb(225,139,19)" fg:x="24518" fg:w="335"/><text x="23.0855%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (335 samples, 0.31%)</title><rect x="22.8355%" y="1157" width="0.3120%" height="15" fill="rgb(210,1,33)" fg:x="24518" fg:w="335"/><text x="23.0855%" y="1167.50"></text></g><g><title>malloc (325 samples, 0.30%)</title><rect x="22.8448%" y="1141" width="0.3027%" height="15" fill="rgb(213,50,3)" fg:x="24528" fg:w="325"/><text x="23.0948%" y="1151.50"></text></g><g><title>[libc.so.6] (164 samples, 0.15%)</title><rect x="22.9947%" y="1125" width="0.1527%" height="15" fill="rgb(234,227,4)" fg:x="24689" fg:w="164"/><text x="23.2447%" y="1135.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="23.1279%" y="1109" width="0.0196%" height="15" fill="rgb(246,63,5)" fg:x="24832" fg:w="21"/><text x="23.3779%" y="1119.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (831 samples, 0.77%)</title><rect x="22.4145%" y="1477" width="0.7740%" height="15" fill="rgb(245,136,27)" fg:x="24066" fg:w="831"/><text x="22.6645%" y="1487.50"></text></g><g><title>serde::de::SeqAccess::next_element (824 samples, 0.77%)</title><rect x="22.4210%" y="1461" width="0.7675%" height="15" fill="rgb(247,199,27)" fg:x="24073" fg:w="824"/><text x="22.6710%" y="1471.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (824 samples, 0.77%)</title><rect x="22.4210%" y="1445" width="0.7675%" height="15" fill="rgb(252,158,49)" fg:x="24073" fg:w="824"/><text x="22.6710%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (823 samples, 0.77%)</title><rect x="22.4220%" y="1429" width="0.7665%" height="15" fill="rgb(254,73,1)" fg:x="24074" fg:w="823"/><text x="22.6720%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (823 samples, 0.77%)</title><rect x="22.4220%" y="1413" width="0.7665%" height="15" fill="rgb(248,93,19)" fg:x="24074" fg:w="823"/><text x="22.6720%" y="1423.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (823 samples, 0.77%)</title><rect x="22.4220%" y="1397" width="0.7665%" height="15" fill="rgb(206,67,5)" fg:x="24074" fg:w="823"/><text x="22.6720%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (823 samples, 0.77%)</title><rect x="22.4220%" y="1381" width="0.7665%" height="15" fill="rgb(209,210,4)" fg:x="24074" fg:w="823"/><text x="22.6720%" y="1391.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (396 samples, 0.37%)</title><rect x="22.8196%" y="1365" width="0.3688%" height="15" fill="rgb(214,185,36)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1375.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (396 samples, 0.37%)</title><rect x="22.8196%" y="1349" width="0.3688%" height="15" fill="rgb(233,191,26)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1359.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (396 samples, 0.37%)</title><rect x="22.8196%" y="1333" width="0.3688%" height="15" fill="rgb(248,94,17)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (396 samples, 0.37%)</title><rect x="22.8196%" y="1317" width="0.3688%" height="15" fill="rgb(250,64,4)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (396 samples, 0.37%)</title><rect x="22.8196%" y="1301" width="0.3688%" height="15" fill="rgb(218,41,53)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (396 samples, 0.37%)</title><rect x="22.8196%" y="1285" width="0.3688%" height="15" fill="rgb(251,176,28)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (396 samples, 0.37%)</title><rect x="22.8196%" y="1269" width="0.3688%" height="15" fill="rgb(247,22,9)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (396 samples, 0.37%)</title><rect x="22.8196%" y="1253" width="0.3688%" height="15" fill="rgb(218,201,14)" fg:x="24501" fg:w="396"/><text x="23.0696%" y="1263.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (44 samples, 0.04%)</title><rect x="23.1475%" y="1237" width="0.0410%" height="15" fill="rgb(218,94,10)" fg:x="24853" fg:w="44"/><text x="23.3975%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.04%)</title><rect x="23.1475%" y="1221" width="0.0410%" height="15" fill="rgb(222,183,52)" fg:x="24853" fg:w="44"/><text x="23.3975%" y="1231.50"></text></g><g><title>[libc.so.6] (44 samples, 0.04%)</title><rect x="23.1475%" y="1205" width="0.0410%" height="15" fill="rgb(242,140,25)" fg:x="24853" fg:w="44"/><text x="23.3975%" y="1215.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (14 samples, 0.01%)</title><rect x="23.1885%" y="1477" width="0.0130%" height="15" fill="rgb(235,197,38)" fg:x="24897" fg:w="14"/><text x="23.4385%" y="1487.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1,225 samples, 1.14%)</title><rect x="22.0718%" y="1589" width="1.1409%" height="15" fill="rgb(237,136,15)" fg:x="23698" fg:w="1225"/><text x="22.3218%" y="1599.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,073 samples, 1.00%)</title><rect x="22.2133%" y="1573" width="0.9994%" height="15" fill="rgb(223,44,49)" fg:x="23850" fg:w="1073"/><text x="22.4633%" y="1583.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,072 samples, 1.00%)</title><rect x="22.2143%" y="1557" width="0.9984%" height="15" fill="rgb(227,71,15)" fg:x="23851" fg:w="1072"/><text x="22.4643%" y="1567.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (910 samples, 0.85%)</title><rect x="22.3651%" y="1541" width="0.8476%" height="15" fill="rgb(225,153,20)" fg:x="24013" fg:w="910"/><text x="22.6151%" y="1551.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (910 samples, 0.85%)</title><rect x="22.3651%" y="1525" width="0.8476%" height="15" fill="rgb(210,190,26)" fg:x="24013" fg:w="910"/><text x="22.6151%" y="1535.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (910 samples, 0.85%)</title><rect x="22.3651%" y="1509" width="0.8476%" height="15" fill="rgb(223,147,5)" fg:x="24013" fg:w="910"/><text x="22.6151%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (910 samples, 0.85%)</title><rect x="22.3651%" y="1493" width="0.8476%" height="15" fill="rgb(207,14,23)" fg:x="24013" fg:w="910"/><text x="22.6151%" y="1503.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,251 samples, 1.17%)</title><rect x="22.0624%" y="1637" width="1.1652%" height="15" fill="rgb(211,195,53)" fg:x="23688" fg:w="1251"/><text x="22.3124%" y="1647.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1,251 samples, 1.17%)</title><rect x="22.0624%" y="1621" width="1.1652%" height="15" fill="rgb(237,75,46)" fg:x="23688" fg:w="1251"/><text x="22.3124%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (1,250 samples, 1.16%)</title><rect x="22.0634%" y="1605" width="1.1642%" height="15" fill="rgb(254,55,14)" fg:x="23689" fg:w="1250"/><text x="22.3134%" y="1615.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,256 samples, 1.17%)</title><rect x="22.0606%" y="1685" width="1.1698%" height="15" fill="rgb(230,185,30)" fg:x="23686" fg:w="1256"/><text x="22.3106%" y="1695.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,254 samples, 1.17%)</title><rect x="22.0624%" y="1669" width="1.1679%" height="15" fill="rgb(220,14,11)" fg:x="23688" fg:w="1254"/><text x="22.3124%" y="1679.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1,254 samples, 1.17%)</title><rect x="22.0624%" y="1653" width="1.1679%" height="15" fill="rgb(215,169,44)" fg:x="23688" fg:w="1254"/><text x="22.3124%" y="1663.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (1,268 samples, 1.18%)</title><rect x="22.0550%" y="1717" width="1.1810%" height="15" fill="rgb(253,203,20)" fg:x="23680" fg:w="1268"/><text x="22.3050%" y="1727.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1,268 samples, 1.18%)</title><rect x="22.0550%" y="1701" width="1.1810%" height="15" fill="rgb(229,225,17)" fg:x="23680" fg:w="1268"/><text x="22.3050%" y="1711.50"></text></g><g><title>bcs::de::from_bytes (1,278 samples, 1.19%)</title><rect x="22.0503%" y="1733" width="1.1903%" height="15" fill="rgb(236,76,26)" fg:x="23675" fg:w="1278"/><text x="22.3003%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::metadata::Metadata&gt; (17 samples, 0.02%)</title><rect x="23.2416%" y="1733" width="0.0158%" height="15" fill="rgb(234,15,30)" fg:x="24954" fg:w="17"/><text x="23.4916%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="23.2416%" y="1717" width="0.0158%" height="15" fill="rgb(211,113,48)" fg:x="24954" fg:w="17"/><text x="23.4916%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="23.2416%" y="1701" width="0.0158%" height="15" fill="rgb(221,31,36)" fg:x="24954" fg:w="17"/><text x="23.4916%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="23.2416%" y="1685" width="0.0158%" height="15" fill="rgb(215,118,52)" fg:x="24954" fg:w="17"/><text x="23.4916%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="23.2416%" y="1669" width="0.0158%" height="15" fill="rgb(241,151,27)" fg:x="24954" fg:w="17"/><text x="23.4916%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="23.2416%" y="1653" width="0.0158%" height="15" fill="rgb(253,51,3)" fg:x="24954" fg:w="17"/><text x="23.4916%" y="1663.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="23.2434%" y="1637" width="0.0140%" height="15" fill="rgb(216,201,24)" fg:x="24956" fg:w="15"/><text x="23.4934%" y="1647.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="23.2462%" y="1621" width="0.0112%" height="15" fill="rgb(231,107,4)" fg:x="24959" fg:w="12"/><text x="23.4962%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.06%)</title><rect x="23.2695%" y="1605" width="0.0559%" height="15" fill="rgb(243,97,54)" fg:x="24984" fg:w="60"/><text x="23.5195%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 0.06%)</title><rect x="23.2695%" y="1589" width="0.0559%" height="15" fill="rgb(221,32,51)" fg:x="24984" fg:w="60"/><text x="23.5195%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 0.06%)</title><rect x="23.2695%" y="1573" width="0.0559%" height="15" fill="rgb(218,171,35)" fg:x="24984" fg:w="60"/><text x="23.5195%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.06%)</title><rect x="23.2695%" y="1557" width="0.0559%" height="15" fill="rgb(214,20,53)" fg:x="24984" fg:w="60"/><text x="23.5195%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.06%)</title><rect x="23.2695%" y="1541" width="0.0559%" height="15" fill="rgb(239,9,52)" fg:x="24984" fg:w="60"/><text x="23.5195%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.06%)</title><rect x="23.2695%" y="1525" width="0.0559%" height="15" fill="rgb(215,114,45)" fg:x="24984" fg:w="60"/><text x="23.5195%" y="1535.50"></text></g><g><title>malloc (59 samples, 0.05%)</title><rect x="23.2704%" y="1509" width="0.0550%" height="15" fill="rgb(208,118,9)" fg:x="24985" fg:w="59"/><text x="23.5204%" y="1519.50"></text></g><g><title>[libc.so.6] (47 samples, 0.04%)</title><rect x="23.2816%" y="1493" width="0.0438%" height="15" fill="rgb(235,7,39)" fg:x="24997" fg:w="47"/><text x="23.5316%" y="1503.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="23.3058%" y="1477" width="0.0196%" height="15" fill="rgb(243,225,15)" fg:x="25023" fg:w="21"/><text x="23.5558%" y="1487.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (175 samples, 0.16%)</title><rect x="23.2686%" y="1701" width="0.1630%" height="15" fill="rgb(225,216,18)" fg:x="24983" fg:w="175"/><text x="23.5186%" y="1711.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (175 samples, 0.16%)</title><rect x="23.2686%" y="1685" width="0.1630%" height="15" fill="rgb(233,36,38)" fg:x="24983" fg:w="175"/><text x="23.5186%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (174 samples, 0.16%)</title><rect x="23.2695%" y="1669" width="0.1621%" height="15" fill="rgb(239,88,23)" fg:x="24984" fg:w="174"/><text x="23.5195%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (174 samples, 0.16%)</title><rect x="23.2695%" y="1653" width="0.1621%" height="15" fill="rgb(219,181,35)" fg:x="24984" fg:w="174"/><text x="23.5195%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (174 samples, 0.16%)</title><rect x="23.2695%" y="1637" width="0.1621%" height="15" fill="rgb(215,18,46)" fg:x="24984" fg:w="174"/><text x="23.5195%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (174 samples, 0.16%)</title><rect x="23.2695%" y="1621" width="0.1621%" height="15" fill="rgb(241,38,11)" fg:x="24984" fg:w="174"/><text x="23.5195%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (114 samples, 0.11%)</title><rect x="23.3254%" y="1605" width="0.1062%" height="15" fill="rgb(248,169,45)" fg:x="25044" fg:w="114"/><text x="23.5754%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (114 samples, 0.11%)</title><rect x="23.3254%" y="1589" width="0.1062%" height="15" fill="rgb(239,50,49)" fg:x="25044" fg:w="114"/><text x="23.5754%" y="1599.50"></text></g><g><title>[libc.so.6] (114 samples, 0.11%)</title><rect x="23.3254%" y="1573" width="0.1062%" height="15" fill="rgb(231,96,31)" fg:x="25044" fg:w="114"/><text x="23.5754%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (39 samples, 0.04%)</title><rect x="23.4316%" y="1701" width="0.0363%" height="15" fill="rgb(224,193,37)" fg:x="25158" fg:w="39"/><text x="23.6816%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (39 samples, 0.04%)</title><rect x="23.4316%" y="1685" width="0.0363%" height="15" fill="rgb(227,153,50)" fg:x="25158" fg:w="39"/><text x="23.6816%" y="1695.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (36 samples, 0.03%)</title><rect x="23.4344%" y="1669" width="0.0335%" height="15" fill="rgb(249,228,3)" fg:x="25161" fg:w="36"/><text x="23.6844%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (30 samples, 0.03%)</title><rect x="23.4399%" y="1653" width="0.0279%" height="15" fill="rgb(219,164,43)" fg:x="25167" fg:w="30"/><text x="23.6899%" y="1663.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (30 samples, 0.03%)</title><rect x="23.4399%" y="1637" width="0.0279%" height="15" fill="rgb(216,45,41)" fg:x="25167" fg:w="30"/><text x="23.6899%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (30 samples, 0.03%)</title><rect x="23.4399%" y="1621" width="0.0279%" height="15" fill="rgb(210,226,51)" fg:x="25167" fg:w="30"/><text x="23.6899%" y="1631.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (30 samples, 0.03%)</title><rect x="23.4399%" y="1605" width="0.0279%" height="15" fill="rgb(209,117,49)" fg:x="25167" fg:w="30"/><text x="23.6899%" y="1615.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="23.4530%" y="1589" width="0.0149%" height="15" fill="rgb(206,196,24)" fg:x="25181" fg:w="16"/><text x="23.7030%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (16 samples, 0.01%)</title><rect x="23.4725%" y="1701" width="0.0149%" height="15" fill="rgb(253,218,3)" fg:x="25202" fg:w="16"/><text x="23.7225%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (16 samples, 0.01%)</title><rect x="23.4725%" y="1685" width="0.0149%" height="15" fill="rgb(252,166,2)" fg:x="25202" fg:w="16"/><text x="23.7225%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (16 samples, 0.01%)</title><rect x="23.4725%" y="1669" width="0.0149%" height="15" fill="rgb(236,218,26)" fg:x="25202" fg:w="16"/><text x="23.7225%" y="1679.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.01%)</title><rect x="23.4725%" y="1653" width="0.0149%" height="15" fill="rgb(254,84,19)" fg:x="25202" fg:w="16"/><text x="23.7225%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="23.4725%" y="1637" width="0.0149%" height="15" fill="rgb(219,137,29)" fg:x="25202" fg:w="16"/><text x="23.7225%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="23.4744%" y="1621" width="0.0130%" height="15" fill="rgb(227,47,52)" fg:x="25204" fg:w="14"/><text x="23.7244%" y="1631.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="23.4744%" y="1605" width="0.0130%" height="15" fill="rgb(229,167,24)" fg:x="25204" fg:w="14"/><text x="23.7244%" y="1615.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="23.4744%" y="1589" width="0.0130%" height="15" fill="rgb(233,164,1)" fg:x="25204" fg:w="14"/><text x="23.7244%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="23.4996%" y="1573" width="0.0112%" height="15" fill="rgb(218,88,48)" fg:x="25231" fg:w="12"/><text x="23.7496%" y="1583.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.01%)</title><rect x="23.4996%" y="1557" width="0.0112%" height="15" fill="rgb(226,214,24)" fg:x="25231" fg:w="12"/><text x="23.7496%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.01%)</title><rect x="23.4996%" y="1541" width="0.0112%" height="15" fill="rgb(233,29,12)" fg:x="25231" fg:w="12"/><text x="23.7496%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.03%)</title><rect x="23.4893%" y="1637" width="0.0307%" height="15" fill="rgb(219,120,34)" fg:x="25220" fg:w="33"/><text x="23.7393%" y="1647.50"></text></g><g><title>core::hash::BuildHasher::hash_one (31 samples, 0.03%)</title><rect x="23.4912%" y="1621" width="0.0289%" height="15" fill="rgb(226,78,44)" fg:x="25222" fg:w="31"/><text x="23.7412%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.02%)</title><rect x="23.4996%" y="1605" width="0.0205%" height="15" fill="rgb(240,15,48)" fg:x="25231" fg:w="22"/><text x="23.7496%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="23.4996%" y="1589" width="0.0205%" height="15" fill="rgb(253,176,7)" fg:x="25231" fg:w="22"/><text x="23.7496%" y="1599.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (1,624 samples, 1.51%)</title><rect x="22.0168%" y="1765" width="1.5126%" height="15" fill="rgb(206,166,28)" fg:x="23639" fg:w="1624"/><text x="22.2668%" y="1775.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (1,624 samples, 1.51%)</title><rect x="22.0168%" y="1749" width="1.5126%" height="15" fill="rgb(241,53,51)" fg:x="23639" fg:w="1624"/><text x="22.2668%" y="1759.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (285 samples, 0.27%)</title><rect x="23.2639%" y="1733" width="0.2654%" height="15" fill="rgb(249,112,30)" fg:x="24978" fg:w="285"/><text x="23.5139%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (283 samples, 0.26%)</title><rect x="23.2658%" y="1717" width="0.2636%" height="15" fill="rgb(217,85,30)" fg:x="24980" fg:w="283"/><text x="23.5158%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (45 samples, 0.04%)</title><rect x="23.4874%" y="1701" width="0.0419%" height="15" fill="rgb(233,49,7)" fg:x="25218" fg:w="45"/><text x="23.7374%" y="1711.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (44 samples, 0.04%)</title><rect x="23.4884%" y="1685" width="0.0410%" height="15" fill="rgb(234,109,9)" fg:x="25219" fg:w="44"/><text x="23.7384%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (44 samples, 0.04%)</title><rect x="23.4884%" y="1669" width="0.0410%" height="15" fill="rgb(253,95,22)" fg:x="25219" fg:w="44"/><text x="23.7384%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 0.04%)</title><rect x="23.4884%" y="1653" width="0.0410%" height="15" fill="rgb(233,176,25)" fg:x="25219" fg:w="44"/><text x="23.7384%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 samples, 0.12%)</title><rect x="23.5778%" y="1381" width="0.1174%" height="15" fill="rgb(236,33,39)" fg:x="25315" fg:w="126"/><text x="23.8278%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (122 samples, 0.11%)</title><rect x="23.5815%" y="1365" width="0.1136%" height="15" fill="rgb(223,226,42)" fg:x="25319" fg:w="122"/><text x="23.8315%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (122 samples, 0.11%)</title><rect x="23.5815%" y="1349" width="0.1136%" height="15" fill="rgb(216,99,33)" fg:x="25319" fg:w="122"/><text x="23.8315%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (122 samples, 0.11%)</title><rect x="23.5815%" y="1333" width="0.1136%" height="15" fill="rgb(235,84,23)" fg:x="25319" fg:w="122"/><text x="23.8315%" y="1343.50"></text></g><g><title>realloc (113 samples, 0.11%)</title><rect x="23.5899%" y="1317" width="0.1052%" height="15" fill="rgb(232,2,27)" fg:x="25328" fg:w="113"/><text x="23.8399%" y="1327.50"></text></g><g><title>[libc.so.6] (91 samples, 0.08%)</title><rect x="23.6104%" y="1301" width="0.0848%" height="15" fill="rgb(241,23,22)" fg:x="25350" fg:w="91"/><text x="23.8604%" y="1311.50"></text></g><g><title>[libc.so.6] (71 samples, 0.07%)</title><rect x="23.6290%" y="1285" width="0.0661%" height="15" fill="rgb(211,73,27)" fg:x="25370" fg:w="71"/><text x="23.8790%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (149 samples, 0.14%)</title><rect x="23.5582%" y="1445" width="0.1388%" height="15" fill="rgb(235,109,49)" fg:x="25294" fg:w="149"/><text x="23.8082%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (148 samples, 0.14%)</title><rect x="23.5592%" y="1429" width="0.1378%" height="15" fill="rgb(230,99,29)" fg:x="25295" fg:w="148"/><text x="23.8092%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (136 samples, 0.13%)</title><rect x="23.5703%" y="1413" width="0.1267%" height="15" fill="rgb(245,199,7)" fg:x="25307" fg:w="136"/><text x="23.8203%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (134 samples, 0.12%)</title><rect x="23.5722%" y="1397" width="0.1248%" height="15" fill="rgb(217,179,10)" fg:x="25309" fg:w="134"/><text x="23.8222%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (165 samples, 0.15%)</title><rect x="23.5489%" y="1557" width="0.1537%" height="15" fill="rgb(254,99,47)" fg:x="25284" fg:w="165"/><text x="23.7989%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (165 samples, 0.15%)</title><rect x="23.5489%" y="1541" width="0.1537%" height="15" fill="rgb(251,121,7)" fg:x="25284" fg:w="165"/><text x="23.7989%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (165 samples, 0.15%)</title><rect x="23.5489%" y="1525" width="0.1537%" height="15" fill="rgb(250,177,26)" fg:x="25284" fg:w="165"/><text x="23.7989%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (165 samples, 0.15%)</title><rect x="23.5489%" y="1509" width="0.1537%" height="15" fill="rgb(232,88,15)" fg:x="25284" fg:w="165"/><text x="23.7989%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (165 samples, 0.15%)</title><rect x="23.5489%" y="1493" width="0.1537%" height="15" fill="rgb(251,54,54)" fg:x="25284" fg:w="165"/><text x="23.7989%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (165 samples, 0.15%)</title><rect x="23.5489%" y="1477" width="0.1537%" height="15" fill="rgb(208,177,15)" fg:x="25284" fg:w="165"/><text x="23.7989%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (165 samples, 0.15%)</title><rect x="23.5489%" y="1461" width="0.1537%" height="15" fill="rgb(205,97,32)" fg:x="25284" fg:w="165"/><text x="23.7989%" y="1471.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (167 samples, 0.16%)</title><rect x="23.5489%" y="1605" width="0.1555%" height="15" fill="rgb(217,192,13)" fg:x="25284" fg:w="167"/><text x="23.7989%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (167 samples, 0.16%)</title><rect x="23.5489%" y="1589" width="0.1555%" height="15" fill="rgb(215,163,41)" fg:x="25284" fg:w="167"/><text x="23.7989%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (167 samples, 0.16%)</title><rect x="23.5489%" y="1573" width="0.1555%" height="15" fill="rgb(246,83,29)" fg:x="25284" fg:w="167"/><text x="23.7989%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="23.7166%" y="1445" width="0.0298%" height="15" fill="rgb(219,2,45)" fg:x="25464" fg:w="32"/><text x="23.9666%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="23.7166%" y="1429" width="0.0298%" height="15" fill="rgb(242,215,33)" fg:x="25464" fg:w="32"/><text x="23.9666%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.03%)</title><rect x="23.7166%" y="1413" width="0.0298%" height="15" fill="rgb(217,1,6)" fg:x="25464" fg:w="32"/><text x="23.9666%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.03%)</title><rect x="23.7166%" y="1397" width="0.0298%" height="15" fill="rgb(207,85,52)" fg:x="25464" fg:w="32"/><text x="23.9666%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.03%)</title><rect x="23.7175%" y="1381" width="0.0289%" height="15" fill="rgb(231,171,19)" fg:x="25465" fg:w="31"/><text x="23.9675%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.03%)</title><rect x="23.7203%" y="1365" width="0.0261%" height="15" fill="rgb(207,128,4)" fg:x="25468" fg:w="28"/><text x="23.9703%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.03%)</title><rect x="23.7203%" y="1349" width="0.0261%" height="15" fill="rgb(219,208,4)" fg:x="25468" fg:w="28"/><text x="23.9703%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.03%)</title><rect x="23.7203%" y="1333" width="0.0261%" height="15" fill="rgb(235,161,42)" fg:x="25468" fg:w="28"/><text x="23.9703%" y="1343.50"></text></g><g><title>realloc (27 samples, 0.03%)</title><rect x="23.7212%" y="1317" width="0.0251%" height="15" fill="rgb(247,218,18)" fg:x="25469" fg:w="27"/><text x="23.9712%" y="1327.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="23.7259%" y="1301" width="0.0205%" height="15" fill="rgb(232,114,51)" fg:x="25474" fg:w="22"/><text x="23.9759%" y="1311.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="23.7305%" y="1285" width="0.0158%" height="15" fill="rgb(222,95,3)" fg:x="25479" fg:w="17"/><text x="23.9805%" y="1295.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (57 samples, 0.05%)</title><rect x="23.7045%" y="1605" width="0.0531%" height="15" fill="rgb(240,65,29)" fg:x="25451" fg:w="57"/><text x="23.9545%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (57 samples, 0.05%)</title><rect x="23.7045%" y="1589" width="0.0531%" height="15" fill="rgb(249,209,20)" fg:x="25451" fg:w="57"/><text x="23.9545%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (53 samples, 0.05%)</title><rect x="23.7082%" y="1573" width="0.0494%" height="15" fill="rgb(241,48,37)" fg:x="25455" fg:w="53"/><text x="23.9582%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (53 samples, 0.05%)</title><rect x="23.7082%" y="1557" width="0.0494%" height="15" fill="rgb(230,140,42)" fg:x="25455" fg:w="53"/><text x="23.9582%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (53 samples, 0.05%)</title><rect x="23.7082%" y="1541" width="0.0494%" height="15" fill="rgb(230,176,45)" fg:x="25455" fg:w="53"/><text x="23.9582%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (53 samples, 0.05%)</title><rect x="23.7082%" y="1525" width="0.0494%" height="15" fill="rgb(245,112,21)" fg:x="25455" fg:w="53"/><text x="23.9582%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (47 samples, 0.04%)</title><rect x="23.7138%" y="1509" width="0.0438%" height="15" fill="rgb(207,183,35)" fg:x="25461" fg:w="47"/><text x="23.9638%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (47 samples, 0.04%)</title><rect x="23.7138%" y="1493" width="0.0438%" height="15" fill="rgb(227,44,33)" fg:x="25461" fg:w="47"/><text x="23.9638%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (47 samples, 0.04%)</title><rect x="23.7138%" y="1477" width="0.0438%" height="15" fill="rgb(246,120,21)" fg:x="25461" fg:w="47"/><text x="23.9638%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (47 samples, 0.04%)</title><rect x="23.7138%" y="1461" width="0.0438%" height="15" fill="rgb(235,57,52)" fg:x="25461" fg:w="47"/><text x="23.9638%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="23.7464%" y="1445" width="0.0112%" height="15" fill="rgb(238,84,10)" fg:x="25496" fg:w="12"/><text x="23.9964%" y="1455.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="23.7464%" y="1429" width="0.0112%" height="15" fill="rgb(251,200,32)" fg:x="25496" fg:w="12"/><text x="23.9964%" y="1439.50"></text></g><g><title>bcs::ser::to_bytes (247 samples, 0.23%)</title><rect x="23.5294%" y="1685" width="0.2300%" height="15" fill="rgb(247,159,13)" fg:x="25263" fg:w="247"/><text x="23.7794%" y="1695.50"></text></g><g><title>bcs::ser::serialize_into (247 samples, 0.23%)</title><rect x="23.5294%" y="1669" width="0.2300%" height="15" fill="rgb(238,64,4)" fg:x="25263" fg:w="247"/><text x="23.7794%" y="1679.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (247 samples, 0.23%)</title><rect x="23.5294%" y="1653" width="0.2300%" height="15" fill="rgb(221,131,51)" fg:x="25263" fg:w="247"/><text x="23.7794%" y="1663.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (237 samples, 0.22%)</title><rect x="23.5387%" y="1637" width="0.2207%" height="15" fill="rgb(242,5,29)" fg:x="25273" fg:w="237"/><text x="23.7887%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (231 samples, 0.22%)</title><rect x="23.5443%" y="1621" width="0.2151%" height="15" fill="rgb(214,130,32)" fg:x="25279" fg:w="231"/><text x="23.7943%" y="1631.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (256 samples, 0.24%)</title><rect x="23.5294%" y="1717" width="0.2384%" height="15" fill="rgb(244,210,16)" fg:x="25263" fg:w="256"/><text x="23.7794%" y="1727.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (256 samples, 0.24%)</title><rect x="23.5294%" y="1701" width="0.2384%" height="15" fill="rgb(234,48,26)" fg:x="25263" fg:w="256"/><text x="23.7794%" y="1711.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (17 samples, 0.02%)</title><rect x="23.7780%" y="1589" width="0.0158%" height="15" fill="rgb(231,82,38)" fg:x="25530" fg:w="17"/><text x="24.0280%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="23.7780%" y="1573" width="0.0158%" height="15" fill="rgb(254,128,41)" fg:x="25530" fg:w="17"/><text x="24.0280%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="23.7818%" y="1557" width="0.0121%" height="15" fill="rgb(212,73,49)" fg:x="25534" fg:w="13"/><text x="24.0318%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="23.7818%" y="1541" width="0.0121%" height="15" fill="rgb(205,62,54)" fg:x="25534" fg:w="13"/><text x="24.0318%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="23.7818%" y="1525" width="0.0121%" height="15" fill="rgb(228,0,8)" fg:x="25534" fg:w="13"/><text x="24.0318%" y="1535.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.01%)</title><rect x="23.7836%" y="1509" width="0.0102%" height="15" fill="rgb(251,28,17)" fg:x="25536" fg:w="11"/><text x="24.0336%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="23.7836%" y="1493" width="0.0102%" height="15" fill="rgb(238,105,27)" fg:x="25536" fg:w="11"/><text x="24.0336%" y="1503.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="23.7836%" y="1477" width="0.0102%" height="15" fill="rgb(237,216,33)" fg:x="25536" fg:w="11"/><text x="24.0336%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="23.7939%" y="1589" width="0.0112%" height="15" fill="rgb(229,228,25)" fg:x="25547" fg:w="12"/><text x="24.0439%" y="1599.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (11 samples, 0.01%)</title><rect x="23.8199%" y="1397" width="0.0102%" height="15" fill="rgb(233,75,23)" fg:x="25575" fg:w="11"/><text x="24.0699%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.01%)</title><rect x="23.8199%" y="1381" width="0.0102%" height="15" fill="rgb(231,207,16)" fg:x="25575" fg:w="11"/><text x="24.0699%" y="1391.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="23.8181%" y="1461" width="0.0224%" height="15" fill="rgb(231,191,45)" fg:x="25573" fg:w="24"/><text x="24.0681%" y="1471.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="23.8199%" y="1445" width="0.0205%" height="15" fill="rgb(224,133,17)" fg:x="25575" fg:w="22"/><text x="24.0699%" y="1455.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (22 samples, 0.02%)</title><rect x="23.8199%" y="1429" width="0.0205%" height="15" fill="rgb(209,178,27)" fg:x="25575" fg:w="22"/><text x="24.0699%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (22 samples, 0.02%)</title><rect x="23.8199%" y="1413" width="0.0205%" height="15" fill="rgb(218,37,11)" fg:x="25575" fg:w="22"/><text x="24.0699%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (11 samples, 0.01%)</title><rect x="23.8302%" y="1397" width="0.0102%" height="15" fill="rgb(251,226,25)" fg:x="25586" fg:w="11"/><text x="24.0802%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="23.8302%" y="1381" width="0.0102%" height="15" fill="rgb(209,222,27)" fg:x="25586" fg:w="11"/><text x="24.0802%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (35 samples, 0.03%)</title><rect x="23.8181%" y="1493" width="0.0326%" height="15" fill="rgb(238,22,21)" fg:x="25573" fg:w="35"/><text x="24.0681%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (35 samples, 0.03%)</title><rect x="23.8181%" y="1477" width="0.0326%" height="15" fill="rgb(233,161,25)" fg:x="25573" fg:w="35"/><text x="24.0681%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (11 samples, 0.01%)</title><rect x="23.8404%" y="1461" width="0.0102%" height="15" fill="rgb(226,122,53)" fg:x="25597" fg:w="11"/><text x="24.0904%" y="1471.50"></text></g><g><title>core::hash::Hasher::write_isize (11 samples, 0.01%)</title><rect x="23.8404%" y="1445" width="0.0102%" height="15" fill="rgb(220,123,17)" fg:x="25597" fg:w="11"/><text x="24.0904%" y="1455.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.01%)</title><rect x="23.8404%" y="1429" width="0.0102%" height="15" fill="rgb(230,224,35)" fg:x="25597" fg:w="11"/><text x="24.0904%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="23.8404%" y="1413" width="0.0102%" height="15" fill="rgb(246,83,8)" fg:x="25597" fg:w="11"/><text x="24.0904%" y="1423.50"></text></g><g><title>hashbrown::map::make_hash (63 samples, 0.06%)</title><rect x="23.8069%" y="1541" width="0.0587%" height="15" fill="rgb(230,214,17)" fg:x="25561" fg:w="63"/><text x="24.0569%" y="1551.50"></text></g><g><title>core::hash::BuildHasher::hash_one (63 samples, 0.06%)</title><rect x="23.8069%" y="1525" width="0.0587%" height="15" fill="rgb(222,97,18)" fg:x="25561" fg:w="63"/><text x="24.0569%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (51 samples, 0.05%)</title><rect x="23.8181%" y="1509" width="0.0475%" height="15" fill="rgb(206,79,1)" fg:x="25573" fg:w="51"/><text x="24.0681%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="23.8507%" y="1493" width="0.0149%" height="15" fill="rgb(214,121,34)" fg:x="25608" fg:w="16"/><text x="24.1007%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="23.8516%" y="1477" width="0.0140%" height="15" fill="rgb(249,199,46)" fg:x="25609" fg:w="15"/><text x="24.1016%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="23.8516%" y="1461" width="0.0140%" height="15" fill="rgb(214,222,46)" fg:x="25609" fg:w="15"/><text x="24.1016%" y="1471.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (40 samples, 0.04%)</title><rect x="23.8684%" y="1477" width="0.0373%" height="15" fill="rgb(248,168,30)" fg:x="25627" fg:w="40"/><text x="24.1184%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (40 samples, 0.04%)</title><rect x="23.8684%" y="1461" width="0.0373%" height="15" fill="rgb(226,14,28)" fg:x="25627" fg:w="40"/><text x="24.1184%" y="1471.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (39 samples, 0.04%)</title><rect x="23.8693%" y="1445" width="0.0363%" height="15" fill="rgb(253,123,1)" fg:x="25628" fg:w="39"/><text x="24.1193%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (39 samples, 0.04%)</title><rect x="23.8693%" y="1429" width="0.0363%" height="15" fill="rgb(225,24,42)" fg:x="25628" fg:w="39"/><text x="24.1193%" y="1439.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="23.8907%" y="1413" width="0.0149%" height="15" fill="rgb(216,161,37)" fg:x="25651" fg:w="16"/><text x="24.1407%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (43 samples, 0.04%)</title><rect x="23.8684%" y="1493" width="0.0400%" height="15" fill="rgb(251,164,26)" fg:x="25627" fg:w="43"/><text x="24.1184%" y="1503.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (169 samples, 0.16%)</title><rect x="23.7734%" y="1605" width="0.1574%" height="15" fill="rgb(219,177,3)" fg:x="25525" fg:w="169"/><text x="24.0234%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (135 samples, 0.13%)</title><rect x="23.8050%" y="1589" width="0.1257%" height="15" fill="rgb(222,65,0)" fg:x="25559" fg:w="135"/><text x="24.0550%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (135 samples, 0.13%)</title><rect x="23.8050%" y="1573" width="0.1257%" height="15" fill="rgb(223,69,54)" fg:x="25559" fg:w="135"/><text x="24.0550%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (135 samples, 0.13%)</title><rect x="23.8050%" y="1557" width="0.1257%" height="15" fill="rgb(235,30,27)" fg:x="25559" fg:w="135"/><text x="24.0550%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (70 samples, 0.07%)</title><rect x="23.8656%" y="1541" width="0.0652%" height="15" fill="rgb(220,183,50)" fg:x="25624" fg:w="70"/><text x="24.1156%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (70 samples, 0.07%)</title><rect x="23.8656%" y="1525" width="0.0652%" height="15" fill="rgb(248,198,15)" fg:x="25624" fg:w="70"/><text x="24.1156%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (70 samples, 0.07%)</title><rect x="23.8656%" y="1509" width="0.0652%" height="15" fill="rgb(222,211,4)" fg:x="25624" fg:w="70"/><text x="24.1156%" y="1519.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (21 samples, 0.02%)</title><rect x="23.9112%" y="1493" width="0.0196%" height="15" fill="rgb(214,102,34)" fg:x="25673" fg:w="21"/><text x="24.1612%" y="1503.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (21 samples, 0.02%)</title><rect x="23.9112%" y="1477" width="0.0196%" height="15" fill="rgb(245,92,5)" fg:x="25673" fg:w="21"/><text x="24.1612%" y="1487.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="23.9112%" y="1461" width="0.0196%" height="15" fill="rgb(252,72,51)" fg:x="25673" fg:w="21"/><text x="24.1612%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="23.9438%" y="1541" width="0.0121%" height="15" fill="rgb(252,208,19)" fg:x="25708" fg:w="13"/><text x="24.1938%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="23.9448%" y="1525" width="0.0112%" height="15" fill="rgb(211,69,7)" fg:x="25709" fg:w="12"/><text x="24.1948%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="23.9448%" y="1509" width="0.0112%" height="15" fill="rgb(211,27,16)" fg:x="25709" fg:w="12"/><text x="24.1948%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="23.9448%" y="1493" width="0.0112%" height="15" fill="rgb(219,216,14)" fg:x="25709" fg:w="12"/><text x="24.1948%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="23.9392%" y="1589" width="0.0177%" height="15" fill="rgb(219,71,8)" fg:x="25703" fg:w="19"/><text x="24.1892%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="23.9438%" y="1573" width="0.0130%" height="15" fill="rgb(223,170,53)" fg:x="25708" fg:w="14"/><text x="24.1938%" y="1583.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="23.9438%" y="1557" width="0.0130%" height="15" fill="rgb(246,21,26)" fg:x="25708" fg:w="14"/><text x="24.1938%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 samples, 0.13%)</title><rect x="23.9578%" y="1541" width="0.1267%" height="15" fill="rgb(248,20,46)" fg:x="25723" fg:w="136"/><text x="24.2078%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (134 samples, 0.12%)</title><rect x="23.9597%" y="1525" width="0.1248%" height="15" fill="rgb(252,94,11)" fg:x="25725" fg:w="134"/><text x="24.2097%" y="1535.50"></text></g><g><title>alloc::alloc::Global::grow_impl (134 samples, 0.12%)</title><rect x="23.9597%" y="1509" width="0.1248%" height="15" fill="rgb(236,163,8)" fg:x="25725" fg:w="134"/><text x="24.2097%" y="1519.50"></text></g><g><title>alloc::alloc::realloc (134 samples, 0.12%)</title><rect x="23.9597%" y="1493" width="0.1248%" height="15" fill="rgb(217,221,45)" fg:x="25725" fg:w="134"/><text x="24.2097%" y="1503.50"></text></g><g><title>realloc (133 samples, 0.12%)</title><rect x="23.9606%" y="1477" width="0.1239%" height="15" fill="rgb(238,38,17)" fg:x="25726" fg:w="133"/><text x="24.2106%" y="1487.50"></text></g><g><title>[libc.so.6] (124 samples, 0.12%)</title><rect x="23.9690%" y="1461" width="0.1155%" height="15" fill="rgb(242,210,23)" fg:x="25735" fg:w="124"/><text x="24.2190%" y="1471.50"></text></g><g><title>[libc.so.6] (118 samples, 0.11%)</title><rect x="23.9746%" y="1445" width="0.1099%" height="15" fill="rgb(250,86,53)" fg:x="25741" fg:w="118"/><text x="24.2246%" y="1455.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="24.0602%" y="1429" width="0.0242%" height="15" fill="rgb(223,168,25)" fg:x="25833" fg:w="26"/><text x="24.3102%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (138 samples, 0.13%)</title><rect x="23.9569%" y="1573" width="0.1285%" height="15" fill="rgb(251,189,4)" fg:x="25722" fg:w="138"/><text x="24.2069%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (138 samples, 0.13%)</title><rect x="23.9569%" y="1557" width="0.1285%" height="15" fill="rgb(245,19,28)" fg:x="25722" fg:w="138"/><text x="24.2069%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (145 samples, 0.14%)</title><rect x="23.9569%" y="1589" width="0.1350%" height="15" fill="rgb(207,10,34)" fg:x="25722" fg:w="145"/><text x="24.2069%" y="1599.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (15 samples, 0.01%)</title><rect x="24.1189%" y="1477" width="0.0140%" height="15" fill="rgb(235,153,31)" fg:x="25896" fg:w="15"/><text x="24.3689%" y="1487.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (15 samples, 0.01%)</title><rect x="24.1189%" y="1461" width="0.0140%" height="15" fill="rgb(228,72,37)" fg:x="25896" fg:w="15"/><text x="24.3689%" y="1471.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (21 samples, 0.02%)</title><rect x="24.1143%" y="1541" width="0.0196%" height="15" fill="rgb(215,15,16)" fg:x="25891" fg:w="21"/><text x="24.3643%" y="1551.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (21 samples, 0.02%)</title><rect x="24.1143%" y="1525" width="0.0196%" height="15" fill="rgb(250,119,29)" fg:x="25891" fg:w="21"/><text x="24.3643%" y="1535.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (21 samples, 0.02%)</title><rect x="24.1143%" y="1509" width="0.0196%" height="15" fill="rgb(214,59,1)" fg:x="25891" fg:w="21"/><text x="24.3643%" y="1519.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (16 samples, 0.01%)</title><rect x="24.1189%" y="1493" width="0.0149%" height="15" fill="rgb(223,109,25)" fg:x="25896" fg:w="16"/><text x="24.3689%" y="1503.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (61 samples, 0.06%)</title><rect x="24.0994%" y="1589" width="0.0568%" height="15" fill="rgb(230,198,22)" fg:x="25875" fg:w="61"/><text x="24.3494%" y="1599.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (52 samples, 0.05%)</title><rect x="24.1077%" y="1573" width="0.0484%" height="15" fill="rgb(245,184,46)" fg:x="25884" fg:w="52"/><text x="24.3577%" y="1583.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (48 samples, 0.04%)</title><rect x="24.1115%" y="1557" width="0.0447%" height="15" fill="rgb(253,73,16)" fg:x="25888" fg:w="48"/><text x="24.3615%" y="1567.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (24 samples, 0.02%)</title><rect x="24.1338%" y="1541" width="0.0224%" height="15" fill="rgb(206,94,45)" fg:x="25912" fg:w="24"/><text x="24.3838%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.01%)</title><rect x="24.1422%" y="1525" width="0.0140%" height="15" fill="rgb(236,83,27)" fg:x="25921" fg:w="15"/><text x="24.3922%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="24.1422%" y="1509" width="0.0140%" height="15" fill="rgb(220,196,8)" fg:x="25921" fg:w="15"/><text x="24.3922%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="24.1431%" y="1493" width="0.0130%" height="15" fill="rgb(254,185,14)" fg:x="25922" fg:w="14"/><text x="24.3931%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="24.1431%" y="1477" width="0.0130%" height="15" fill="rgb(226,50,22)" fg:x="25922" fg:w="14"/><text x="24.3931%" y="1487.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (418 samples, 0.39%)</title><rect x="23.7678%" y="1637" width="0.3893%" height="15" fill="rgb(253,147,0)" fg:x="25519" fg:w="418"/><text x="24.0178%" y="1647.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (418 samples, 0.39%)</title><rect x="23.7678%" y="1621" width="0.3893%" height="15" fill="rgb(252,46,33)" fg:x="25519" fg:w="418"/><text x="24.0178%" y="1631.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (243 samples, 0.23%)</title><rect x="23.9308%" y="1605" width="0.2263%" height="15" fill="rgb(242,22,54)" fg:x="25694" fg:w="243"/><text x="24.1808%" y="1615.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (2,306 samples, 2.15%)</title><rect x="22.0168%" y="1797" width="2.1478%" height="15" fill="rgb(223,178,32)" fg:x="23639" fg:w="2306"/><text x="22.2668%" y="1807.50">&lt;..</text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (2,306 samples, 2.15%)</title><rect x="22.0168%" y="1781" width="2.1478%" height="15" fill="rgb(214,106,53)" fg:x="23639" fg:w="2306"/><text x="22.2668%" y="1791.50">a..</text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (682 samples, 0.64%)</title><rect x="23.5294%" y="1765" width="0.6352%" height="15" fill="rgb(232,65,50)" fg:x="25263" fg:w="682"/><text x="23.7794%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (682 samples, 0.64%)</title><rect x="23.5294%" y="1749" width="0.6352%" height="15" fill="rgb(231,110,28)" fg:x="25263" fg:w="682"/><text x="23.7794%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (682 samples, 0.64%)</title><rect x="23.5294%" y="1733" width="0.6352%" height="15" fill="rgb(216,71,40)" fg:x="25263" fg:w="682"/><text x="23.7794%" y="1743.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (426 samples, 0.40%)</title><rect x="23.7678%" y="1717" width="0.3968%" height="15" fill="rgb(229,89,53)" fg:x="25519" fg:w="426"/><text x="24.0178%" y="1727.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (426 samples, 0.40%)</title><rect x="23.7678%" y="1701" width="0.3968%" height="15" fill="rgb(210,124,14)" fg:x="25519" fg:w="426"/><text x="24.0178%" y="1711.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (426 samples, 0.40%)</title><rect x="23.7678%" y="1685" width="0.3968%" height="15" fill="rgb(236,213,6)" fg:x="25519" fg:w="426"/><text x="24.0178%" y="1695.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (426 samples, 0.40%)</title><rect x="23.7678%" y="1669" width="0.3968%" height="15" fill="rgb(228,41,5)" fg:x="25519" fg:w="426"/><text x="24.0178%" y="1679.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (426 samples, 0.40%)</title><rect x="23.7678%" y="1653" width="0.3968%" height="15" fill="rgb(221,167,25)" fg:x="25519" fg:w="426"/><text x="24.0178%" y="1663.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.01%)</title><rect x="24.1850%" y="1701" width="0.0112%" height="15" fill="rgb(228,144,37)" fg:x="25967" fg:w="12"/><text x="24.4350%" y="1711.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="24.1850%" y="1685" width="0.0112%" height="15" fill="rgb(227,189,38)" fg:x="25967" fg:w="12"/><text x="24.4350%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (35 samples, 0.03%)</title><rect x="24.1646%" y="1797" width="0.0326%" height="15" fill="rgb(218,8,2)" fg:x="25945" fg:w="35"/><text x="24.4146%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (35 samples, 0.03%)</title><rect x="24.1646%" y="1781" width="0.0326%" height="15" fill="rgb(209,61,28)" fg:x="25945" fg:w="35"/><text x="24.4146%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (35 samples, 0.03%)</title><rect x="24.1646%" y="1765" width="0.0326%" height="15" fill="rgb(233,140,39)" fg:x="25945" fg:w="35"/><text x="24.4146%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (22 samples, 0.02%)</title><rect x="24.1767%" y="1749" width="0.0205%" height="15" fill="rgb(251,66,48)" fg:x="25958" fg:w="22"/><text x="24.4267%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (22 samples, 0.02%)</title><rect x="24.1767%" y="1733" width="0.0205%" height="15" fill="rgb(210,44,45)" fg:x="25958" fg:w="22"/><text x="24.4267%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (16 samples, 0.01%)</title><rect x="24.1823%" y="1717" width="0.0149%" height="15" fill="rgb(214,136,46)" fg:x="25964" fg:w="16"/><text x="24.4323%" y="1727.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="24.2512%" y="1653" width="0.0102%" height="15" fill="rgb(207,130,50)" fg:x="26038" fg:w="11"/><text x="24.5012%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (83 samples, 0.08%)</title><rect x="24.2763%" y="1573" width="0.0773%" height="15" fill="rgb(228,102,49)" fg:x="26065" fg:w="83"/><text x="24.5263%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (83 samples, 0.08%)</title><rect x="24.2763%" y="1557" width="0.0773%" height="15" fill="rgb(253,55,1)" fg:x="26065" fg:w="83"/><text x="24.5263%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (83 samples, 0.08%)</title><rect x="24.2763%" y="1541" width="0.0773%" height="15" fill="rgb(238,222,9)" fg:x="26065" fg:w="83"/><text x="24.5263%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (80 samples, 0.07%)</title><rect x="24.2791%" y="1525" width="0.0745%" height="15" fill="rgb(246,99,6)" fg:x="26068" fg:w="80"/><text x="24.5291%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (80 samples, 0.07%)</title><rect x="24.2791%" y="1509" width="0.0745%" height="15" fill="rgb(219,110,26)" fg:x="26068" fg:w="80"/><text x="24.5291%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (80 samples, 0.07%)</title><rect x="24.2791%" y="1493" width="0.0745%" height="15" fill="rgb(239,160,33)" fg:x="26068" fg:w="80"/><text x="24.5291%" y="1503.50"></text></g><g><title>malloc (79 samples, 0.07%)</title><rect x="24.2800%" y="1477" width="0.0736%" height="15" fill="rgb(220,202,23)" fg:x="26069" fg:w="79"/><text x="24.5300%" y="1487.50"></text></g><g><title>[libc.so.6] (63 samples, 0.06%)</title><rect x="24.2949%" y="1461" width="0.0587%" height="15" fill="rgb(208,80,26)" fg:x="26085" fg:w="63"/><text x="24.5449%" y="1471.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (168 samples, 0.16%)</title><rect x="24.2121%" y="1669" width="0.1565%" height="15" fill="rgb(243,85,7)" fg:x="25996" fg:w="168"/><text x="24.4621%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (115 samples, 0.11%)</title><rect x="24.2614%" y="1653" width="0.1071%" height="15" fill="rgb(228,77,47)" fg:x="26049" fg:w="115"/><text x="24.5114%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (110 samples, 0.10%)</title><rect x="24.2661%" y="1637" width="0.1025%" height="15" fill="rgb(212,226,8)" fg:x="26054" fg:w="110"/><text x="24.5161%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.10%)</title><rect x="24.2698%" y="1621" width="0.0987%" height="15" fill="rgb(241,120,54)" fg:x="26058" fg:w="106"/><text x="24.5198%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.10%)</title><rect x="24.2698%" y="1605" width="0.0987%" height="15" fill="rgb(226,80,16)" fg:x="26058" fg:w="106"/><text x="24.5198%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.10%)</title><rect x="24.2698%" y="1589" width="0.0987%" height="15" fill="rgb(240,76,13)" fg:x="26058" fg:w="106"/><text x="24.5198%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.01%)</title><rect x="24.3536%" y="1573" width="0.0149%" height="15" fill="rgb(252,74,8)" fg:x="26148" fg:w="16"/><text x="24.6036%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="24.3685%" y="1621" width="0.0149%" height="15" fill="rgb(244,155,2)" fg:x="26164" fg:w="16"/><text x="24.6185%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="24.3685%" y="1605" width="0.0149%" height="15" fill="rgb(215,81,35)" fg:x="26164" fg:w="16"/><text x="24.6185%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="24.3685%" y="1589" width="0.0149%" height="15" fill="rgb(206,55,2)" fg:x="26164" fg:w="16"/><text x="24.6185%" y="1599.50"></text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="24.3695%" y="1573" width="0.0140%" height="15" fill="rgb(231,2,34)" fg:x="26165" fg:w="15"/><text x="24.6195%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="24.3685%" y="1669" width="0.0158%" height="15" fill="rgb(242,176,48)" fg:x="26164" fg:w="17"/><text x="24.6185%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="24.3685%" y="1653" width="0.0158%" height="15" fill="rgb(249,31,36)" fg:x="26164" fg:w="17"/><text x="24.6185%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="24.3685%" y="1637" width="0.0158%" height="15" fill="rgb(205,18,17)" fg:x="26164" fg:w="17"/><text x="24.6185%" y="1647.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (209 samples, 0.19%)</title><rect x="24.2093%" y="1749" width="0.1947%" height="15" fill="rgb(254,130,5)" fg:x="25993" fg:w="209"/><text x="24.4593%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (209 samples, 0.19%)</title><rect x="24.2093%" y="1733" width="0.1947%" height="15" fill="rgb(229,42,45)" fg:x="25993" fg:w="209"/><text x="24.4593%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (207 samples, 0.19%)</title><rect x="24.2111%" y="1717" width="0.1928%" height="15" fill="rgb(245,95,25)" fg:x="25995" fg:w="207"/><text x="24.4611%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (207 samples, 0.19%)</title><rect x="24.2111%" y="1701" width="0.1928%" height="15" fill="rgb(249,193,38)" fg:x="25995" fg:w="207"/><text x="24.4611%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (207 samples, 0.19%)</title><rect x="24.2111%" y="1685" width="0.1928%" height="15" fill="rgb(241,140,43)" fg:x="25995" fg:w="207"/><text x="24.4611%" y="1695.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (21 samples, 0.02%)</title><rect x="24.3844%" y="1669" width="0.0196%" height="15" fill="rgb(245,78,48)" fg:x="26181" fg:w="21"/><text x="24.6344%" y="1679.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.01%)</title><rect x="24.4114%" y="1701" width="0.0140%" height="15" fill="rgb(214,92,39)" fg:x="26210" fg:w="15"/><text x="24.6614%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.01%)</title><rect x="24.4123%" y="1685" width="0.0130%" height="15" fill="rgb(211,189,14)" fg:x="26211" fg:w="14"/><text x="24.6623%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (254 samples, 0.24%)</title><rect x="24.1972%" y="1797" width="0.2366%" height="15" fill="rgb(218,7,24)" fg:x="25980" fg:w="254"/><text x="24.4472%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (254 samples, 0.24%)</title><rect x="24.1972%" y="1781" width="0.2366%" height="15" fill="rgb(224,200,49)" fg:x="25980" fg:w="254"/><text x="24.4472%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (254 samples, 0.24%)</title><rect x="24.1972%" y="1765" width="0.2366%" height="15" fill="rgb(218,210,14)" fg:x="25980" fg:w="254"/><text x="24.4472%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (27 samples, 0.03%)</title><rect x="24.4086%" y="1749" width="0.0251%" height="15" fill="rgb(234,142,31)" fg:x="26207" fg:w="27"/><text x="24.6586%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (27 samples, 0.03%)</title><rect x="24.4086%" y="1733" width="0.0251%" height="15" fill="rgb(227,165,2)" fg:x="26207" fg:w="27"/><text x="24.6586%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (25 samples, 0.02%)</title><rect x="24.4104%" y="1717" width="0.0233%" height="15" fill="rgb(232,44,46)" fg:x="26209" fg:w="25"/><text x="24.6604%" y="1727.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.01%)</title><rect x="24.4961%" y="1461" width="0.0112%" height="15" fill="rgb(236,149,47)" fg:x="26301" fg:w="12"/><text x="24.7461%" y="1471.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (12 samples, 0.01%)</title><rect x="24.4961%" y="1445" width="0.0112%" height="15" fill="rgb(227,45,31)" fg:x="26301" fg:w="12"/><text x="24.7461%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (44 samples, 0.04%)</title><rect x="24.4849%" y="1493" width="0.0410%" height="15" fill="rgb(240,176,51)" fg:x="26289" fg:w="44"/><text x="24.7349%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (44 samples, 0.04%)</title><rect x="24.4849%" y="1477" width="0.0410%" height="15" fill="rgb(249,146,41)" fg:x="26289" fg:w="44"/><text x="24.7349%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="24.5157%" y="1461" width="0.0102%" height="15" fill="rgb(213,208,4)" fg:x="26322" fg:w="11"/><text x="24.7657%" y="1471.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="24.5157%" y="1445" width="0.0102%" height="15" fill="rgb(245,84,36)" fg:x="26322" fg:w="11"/><text x="24.7657%" y="1455.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (17 samples, 0.02%)</title><rect x="24.5278%" y="1429" width="0.0158%" height="15" fill="rgb(254,84,18)" fg:x="26335" fg:w="17"/><text x="24.7778%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="24.5278%" y="1413" width="0.0158%" height="15" fill="rgb(225,38,54)" fg:x="26335" fg:w="17"/><text x="24.7778%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="24.5278%" y="1397" width="0.0158%" height="15" fill="rgb(246,50,30)" fg:x="26335" fg:w="17"/><text x="24.7778%" y="1407.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (16 samples, 0.01%)</title><rect x="24.5287%" y="1381" width="0.0149%" height="15" fill="rgb(246,148,9)" fg:x="26336" fg:w="16"/><text x="24.7787%" y="1391.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (16 samples, 0.01%)</title><rect x="24.5287%" y="1365" width="0.0149%" height="15" fill="rgb(223,75,4)" fg:x="26336" fg:w="16"/><text x="24.7787%" y="1375.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="24.5297%" y="1349" width="0.0140%" height="15" fill="rgb(239,148,41)" fg:x="26337" fg:w="15"/><text x="24.7797%" y="1359.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (67 samples, 0.06%)</title><rect x="24.4840%" y="1509" width="0.0624%" height="15" fill="rgb(205,195,3)" fg:x="26288" fg:w="67"/><text x="24.7340%" y="1519.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (22 samples, 0.02%)</title><rect x="24.5259%" y="1493" width="0.0205%" height="15" fill="rgb(254,161,1)" fg:x="26333" fg:w="22"/><text x="24.7759%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.02%)</title><rect x="24.5269%" y="1477" width="0.0196%" height="15" fill="rgb(211,229,8)" fg:x="26334" fg:w="21"/><text x="24.7769%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="24.5269%" y="1461" width="0.0196%" height="15" fill="rgb(220,97,9)" fg:x="26334" fg:w="21"/><text x="24.7769%" y="1471.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="24.5269%" y="1445" width="0.0196%" height="15" fill="rgb(240,218,8)" fg:x="26334" fg:w="21"/><text x="24.7769%" y="1455.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="24.5464%" y="1509" width="0.0242%" height="15" fill="rgb(250,44,0)" fg:x="26355" fg:w="26"/><text x="24.7964%" y="1519.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="24.5520%" y="1493" width="0.0186%" height="15" fill="rgb(236,41,53)" fg:x="26361" fg:w="20"/><text x="24.8020%" y="1503.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.02%)</title><rect x="24.5539%" y="1477" width="0.0168%" height="15" fill="rgb(218,227,13)" fg:x="26363" fg:w="18"/><text x="24.8039%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="24.5548%" y="1461" width="0.0158%" height="15" fill="rgb(217,94,32)" fg:x="26364" fg:w="17"/><text x="24.8048%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="24.5548%" y="1445" width="0.0158%" height="15" fill="rgb(213,217,12)" fg:x="26364" fg:w="17"/><text x="24.8048%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="24.5548%" y="1429" width="0.0158%" height="15" fill="rgb(229,13,46)" fg:x="26364" fg:w="17"/><text x="24.8048%" y="1439.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="24.5585%" y="1413" width="0.0121%" height="15" fill="rgb(243,139,5)" fg:x="26368" fg:w="13"/><text x="24.8085%" y="1423.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (11 samples, 0.01%)</title><rect x="24.5706%" y="1509" width="0.0102%" height="15" fill="rgb(249,38,45)" fg:x="26381" fg:w="11"/><text x="24.8206%" y="1519.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="24.5706%" y="1493" width="0.0102%" height="15" fill="rgb(216,70,11)" fg:x="26381" fg:w="11"/><text x="24.8206%" y="1503.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (13 samples, 0.01%)</title><rect x="24.5837%" y="1477" width="0.0121%" height="15" fill="rgb(253,101,25)" fg:x="26395" fg:w="13"/><text x="24.8337%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (141 samples, 0.13%)</title><rect x="24.4710%" y="1525" width="0.1313%" height="15" fill="rgb(207,197,30)" fg:x="26274" fg:w="141"/><text x="24.7210%" y="1535.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (23 samples, 0.02%)</title><rect x="24.5809%" y="1509" width="0.0214%" height="15" fill="rgb(238,87,13)" fg:x="26392" fg:w="23"/><text x="24.8309%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (21 samples, 0.02%)</title><rect x="24.5827%" y="1493" width="0.0196%" height="15" fill="rgb(215,155,8)" fg:x="26394" fg:w="21"/><text x="24.8327%" y="1503.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (151 samples, 0.14%)</title><rect x="24.4710%" y="1541" width="0.1406%" height="15" fill="rgb(239,166,38)" fg:x="26274" fg:w="151"/><text x="24.7210%" y="1551.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="24.6116%" y="1541" width="0.0102%" height="15" fill="rgb(240,194,35)" fg:x="26425" fg:w="11"/><text x="24.8616%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (40 samples, 0.04%)</title><rect x="24.6228%" y="1525" width="0.0373%" height="15" fill="rgb(219,10,44)" fg:x="26437" fg:w="40"/><text x="24.8728%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.04%)</title><rect x="24.6228%" y="1509" width="0.0373%" height="15" fill="rgb(251,220,35)" fg:x="26437" fg:w="40"/><text x="24.8728%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.04%)</title><rect x="24.6237%" y="1493" width="0.0363%" height="15" fill="rgb(218,117,13)" fg:x="26438" fg:w="39"/><text x="24.8737%" y="1503.50"></text></g><g><title>malloc (36 samples, 0.03%)</title><rect x="24.6265%" y="1477" width="0.0335%" height="15" fill="rgb(221,213,40)" fg:x="26441" fg:w="36"/><text x="24.8765%" y="1487.50"></text></g><g><title>[libc.so.6] (30 samples, 0.03%)</title><rect x="24.6321%" y="1461" width="0.0279%" height="15" fill="rgb(251,224,35)" fg:x="26447" fg:w="30"/><text x="24.8821%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (47 samples, 0.04%)</title><rect x="24.6219%" y="1541" width="0.0438%" height="15" fill="rgb(241,33,39)" fg:x="26436" fg:w="47"/><text x="24.8719%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (221 samples, 0.21%)</title><rect x="24.4607%" y="1557" width="0.2058%" height="15" fill="rgb(222,74,17)" fg:x="26263" fg:w="221"/><text x="24.7107%" y="1567.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (225 samples, 0.21%)</title><rect x="24.4607%" y="1573" width="0.2096%" height="15" fill="rgb(225,103,0)" fg:x="26263" fg:w="225"/><text x="24.7107%" y="1583.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (19 samples, 0.02%)</title><rect x="24.6833%" y="1509" width="0.0177%" height="15" fill="rgb(240,0,12)" fg:x="26502" fg:w="19"/><text x="24.9333%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="24.6833%" y="1493" width="0.0177%" height="15" fill="rgb(233,213,37)" fg:x="26502" fg:w="19"/><text x="24.9333%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.02%)</title><rect x="24.6833%" y="1477" width="0.0177%" height="15" fill="rgb(225,84,52)" fg:x="26502" fg:w="19"/><text x="24.9333%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (266 samples, 0.25%)</title><rect x="24.4598%" y="1589" width="0.2477%" height="15" fill="rgb(247,160,51)" fg:x="26262" fg:w="266"/><text x="24.7098%" y="1599.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (33 samples, 0.03%)</title><rect x="24.6768%" y="1573" width="0.0307%" height="15" fill="rgb(244,60,51)" fg:x="26495" fg:w="33"/><text x="24.9268%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 0.03%)</title><rect x="24.6777%" y="1557" width="0.0298%" height="15" fill="rgb(233,114,7)" fg:x="26496" fg:w="32"/><text x="24.9277%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (32 samples, 0.03%)</title><rect x="24.6777%" y="1541" width="0.0298%" height="15" fill="rgb(246,136,16)" fg:x="26496" fg:w="32"/><text x="24.9277%" y="1551.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="24.6787%" y="1525" width="0.0289%" height="15" fill="rgb(243,114,45)" fg:x="26497" fg:w="31"/><text x="24.9287%" y="1535.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (36 samples, 0.03%)</title><rect x="24.7122%" y="1589" width="0.0335%" height="15" fill="rgb(247,183,43)" fg:x="26533" fg:w="36"/><text x="24.9622%" y="1599.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (36 samples, 0.03%)</title><rect x="24.7122%" y="1573" width="0.0335%" height="15" fill="rgb(251,210,42)" fg:x="26533" fg:w="36"/><text x="24.9622%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="24.7206%" y="1557" width="0.0251%" height="15" fill="rgb(221,88,35)" fg:x="26542" fg:w="27"/><text x="24.9706%" y="1567.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.03%)</title><rect x="24.7206%" y="1541" width="0.0251%" height="15" fill="rgb(242,21,20)" fg:x="26542" fg:w="27"/><text x="24.9706%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="24.7206%" y="1525" width="0.0251%" height="15" fill="rgb(233,226,36)" fg:x="26542" fg:w="27"/><text x="24.9706%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.03%)</title><rect x="24.7206%" y="1509" width="0.0251%" height="15" fill="rgb(243,189,34)" fg:x="26542" fg:w="27"/><text x="24.9706%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.03%)</title><rect x="24.7206%" y="1493" width="0.0251%" height="15" fill="rgb(207,145,50)" fg:x="26542" fg:w="27"/><text x="24.9706%" y="1503.50"></text></g><g><title>malloc (25 samples, 0.02%)</title><rect x="24.7224%" y="1477" width="0.0233%" height="15" fill="rgb(242,1,50)" fg:x="26544" fg:w="25"/><text x="24.9724%" y="1487.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="24.7355%" y="1461" width="0.0102%" height="15" fill="rgb(231,65,32)" fg:x="26558" fg:w="11"/><text x="24.9855%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (335 samples, 0.31%)</title><rect x="24.4477%" y="1605" width="0.3120%" height="15" fill="rgb(208,68,49)" fg:x="26249" fg:w="335"/><text x="24.6977%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (350 samples, 0.33%)</title><rect x="24.4458%" y="1621" width="0.3260%" height="15" fill="rgb(253,54,49)" fg:x="26247" fg:w="350"/><text x="24.6958%" y="1631.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (13 samples, 0.01%)</title><rect x="24.7597%" y="1605" width="0.0121%" height="15" fill="rgb(245,186,24)" fg:x="26584" fg:w="13"/><text x="25.0097%" y="1615.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="24.7727%" y="1621" width="0.0140%" height="15" fill="rgb(209,2,41)" fg:x="26598" fg:w="15"/><text x="25.0227%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (61 samples, 0.06%)</title><rect x="24.7876%" y="1573" width="0.0568%" height="15" fill="rgb(242,208,54)" fg:x="26614" fg:w="61"/><text x="25.0376%" y="1583.50"></text></g><g><title>malloc (58 samples, 0.05%)</title><rect x="24.7904%" y="1557" width="0.0540%" height="15" fill="rgb(225,9,51)" fg:x="26617" fg:w="58"/><text x="25.0404%" y="1567.50"></text></g><g><title>[libc.so.6] (50 samples, 0.05%)</title><rect x="24.7979%" y="1541" width="0.0466%" height="15" fill="rgb(207,207,25)" fg:x="26625" fg:w="50"/><text x="25.0479%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (63 samples, 0.06%)</title><rect x="24.7876%" y="1605" width="0.0587%" height="15" fill="rgb(253,96,18)" fg:x="26614" fg:w="63"/><text x="25.0376%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (63 samples, 0.06%)</title><rect x="24.7876%" y="1589" width="0.0587%" height="15" fill="rgb(252,215,20)" fg:x="26614" fg:w="63"/><text x="25.0376%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (458 samples, 0.43%)</title><rect x="24.4337%" y="1653" width="0.4266%" height="15" fill="rgb(245,227,26)" fg:x="26234" fg:w="458"/><text x="24.6837%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (458 samples, 0.43%)</title><rect x="24.4337%" y="1637" width="0.4266%" height="15" fill="rgb(241,208,0)" fg:x="26234" fg:w="458"/><text x="24.6837%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (79 samples, 0.07%)</title><rect x="24.7867%" y="1621" width="0.0736%" height="15" fill="rgb(224,130,10)" fg:x="26613" fg:w="79"/><text x="25.0367%" y="1631.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="24.8482%" y="1605" width="0.0121%" height="15" fill="rgb(237,29,0)" fg:x="26679" fg:w="13"/><text x="25.0982%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.03%)</title><rect x="24.8659%" y="1573" width="0.0289%" height="15" fill="rgb(219,27,41)" fg:x="26698" fg:w="31"/><text x="25.1159%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.03%)</title><rect x="24.8659%" y="1557" width="0.0289%" height="15" fill="rgb(245,101,19)" fg:x="26698" fg:w="31"/><text x="25.1159%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (22 samples, 0.02%)</title><rect x="24.8743%" y="1541" width="0.0205%" height="15" fill="rgb(243,44,37)" fg:x="26707" fg:w="22"/><text x="25.1243%" y="1551.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (22 samples, 0.02%)</title><rect x="24.8743%" y="1525" width="0.0205%" height="15" fill="rgb(228,213,43)" fg:x="26707" fg:w="22"/><text x="25.1243%" y="1535.50"></text></g><g><title>core::ptr::write (22 samples, 0.02%)</title><rect x="24.8743%" y="1509" width="0.0205%" height="15" fill="rgb(219,163,21)" fg:x="26707" fg:w="22"/><text x="25.1243%" y="1519.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (32 samples, 0.03%)</title><rect x="24.8659%" y="1589" width="0.0298%" height="15" fill="rgb(234,86,24)" fg:x="26698" fg:w="32"/><text x="25.1159%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (502 samples, 0.47%)</title><rect x="24.4337%" y="1669" width="0.4676%" height="15" fill="rgb(225,10,24)" fg:x="26234" fg:w="502"/><text x="24.6837%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (44 samples, 0.04%)</title><rect x="24.8603%" y="1653" width="0.0410%" height="15" fill="rgb(218,109,7)" fg:x="26692" fg:w="44"/><text x="25.1103%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 0.04%)</title><rect x="24.8603%" y="1637" width="0.0410%" height="15" fill="rgb(210,20,26)" fg:x="26692" fg:w="44"/><text x="25.1103%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (44 samples, 0.04%)</title><rect x="24.8603%" y="1621" width="0.0410%" height="15" fill="rgb(216,18,1)" fg:x="26692" fg:w="44"/><text x="25.1103%" y="1631.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (44 samples, 0.04%)</title><rect x="24.8603%" y="1605" width="0.0410%" height="15" fill="rgb(206,163,23)" fg:x="26692" fg:w="44"/><text x="25.1103%" y="1615.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="24.9283%" y="1541" width="0.0130%" height="15" fill="rgb(229,150,31)" fg:x="26765" fg:w="14"/><text x="25.1783%" y="1551.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (54 samples, 0.05%)</title><rect x="24.9115%" y="1637" width="0.0503%" height="15" fill="rgb(231,10,5)" fg:x="26747" fg:w="54"/><text x="25.1615%" y="1647.50"></text></g><g><title>serde::de::SeqAccess::next_element (38 samples, 0.04%)</title><rect x="24.9264%" y="1621" width="0.0354%" height="15" fill="rgb(250,40,50)" fg:x="26763" fg:w="38"/><text x="25.1764%" y="1631.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (38 samples, 0.04%)</title><rect x="24.9264%" y="1605" width="0.0354%" height="15" fill="rgb(217,119,7)" fg:x="26763" fg:w="38"/><text x="25.1764%" y="1615.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (36 samples, 0.03%)</title><rect x="24.9283%" y="1589" width="0.0335%" height="15" fill="rgb(245,214,40)" fg:x="26765" fg:w="36"/><text x="25.1783%" y="1599.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (36 samples, 0.03%)</title><rect x="24.9283%" y="1573" width="0.0335%" height="15" fill="rgb(216,187,1)" fg:x="26765" fg:w="36"/><text x="25.1783%" y="1583.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (36 samples, 0.03%)</title><rect x="24.9283%" y="1557" width="0.0335%" height="15" fill="rgb(237,146,21)" fg:x="26765" fg:w="36"/><text x="25.1783%" y="1567.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (22 samples, 0.02%)</title><rect x="24.9413%" y="1541" width="0.0205%" height="15" fill="rgb(210,174,47)" fg:x="26779" fg:w="22"/><text x="25.1913%" y="1551.50"></text></g><g><title>bcs::de::Deserializer::next (15 samples, 0.01%)</title><rect x="24.9478%" y="1525" width="0.0140%" height="15" fill="rgb(218,111,39)" fg:x="26786" fg:w="15"/><text x="25.1978%" y="1535.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (568 samples, 0.53%)</title><rect x="24.4337%" y="1701" width="0.5290%" height="15" fill="rgb(224,95,19)" fg:x="26234" fg:w="568"/><text x="24.6837%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (568 samples, 0.53%)</title><rect x="24.4337%" y="1685" width="0.5290%" height="15" fill="rgb(234,15,38)" fg:x="26234" fg:w="568"/><text x="24.6837%" y="1695.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (55 samples, 0.05%)</title><rect x="24.9115%" y="1669" width="0.0512%" height="15" fill="rgb(246,56,12)" fg:x="26747" fg:w="55"/><text x="25.1615%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (55 samples, 0.05%)</title><rect x="24.9115%" y="1653" width="0.0512%" height="15" fill="rgb(247,16,17)" fg:x="26747" fg:w="55"/><text x="25.1615%" y="1663.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (3,187 samples, 2.97%)</title><rect x="22.0168%" y="1845" width="2.9683%" height="15" fill="rgb(215,151,11)" fg:x="23639" fg:w="3187"/><text x="22.2668%" y="1855.50">mov..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (3,187 samples, 2.97%)</title><rect x="22.0168%" y="1829" width="2.9683%" height="15" fill="rgb(225,16,24)" fg:x="23639" fg:w="3187"/><text x="22.2668%" y="1839.50">mov..</text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (3,187 samples, 2.97%)</title><rect x="22.0168%" y="1813" width="2.9683%" height="15" fill="rgb(217,117,5)" fg:x="23639" fg:w="3187"/><text x="22.2668%" y="1823.50">&lt;mo..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (592 samples, 0.55%)</title><rect x="24.4337%" y="1797" width="0.5514%" height="15" fill="rgb(246,187,53)" fg:x="26234" fg:w="592"/><text x="24.6837%" y="1807.50"></text></g><g><title>bcs::de::from_bytes_seed (592 samples, 0.55%)</title><rect x="24.4337%" y="1781" width="0.5514%" height="15" fill="rgb(241,71,40)" fg:x="26234" fg:w="592"/><text x="24.6837%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (592 samples, 0.55%)</title><rect x="24.4337%" y="1765" width="0.5514%" height="15" fill="rgb(231,67,39)" fg:x="26234" fg:w="592"/><text x="24.6837%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (592 samples, 0.55%)</title><rect x="24.4337%" y="1749" width="0.5514%" height="15" fill="rgb(222,120,24)" fg:x="26234" fg:w="592"/><text x="24.6837%" y="1759.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (592 samples, 0.55%)</title><rect x="24.4337%" y="1733" width="0.5514%" height="15" fill="rgb(248,3,3)" fg:x="26234" fg:w="592"/><text x="24.6837%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (592 samples, 0.55%)</title><rect x="24.4337%" y="1717" width="0.5514%" height="15" fill="rgb(228,218,5)" fg:x="26234" fg:w="592"/><text x="24.6837%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.02%)</title><rect x="24.9627%" y="1701" width="0.0224%" height="15" fill="rgb(212,202,43)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.02%)</title><rect x="24.9627%" y="1685" width="0.0224%" height="15" fill="rgb(235,183,2)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.02%)</title><rect x="24.9627%" y="1669" width="0.0224%" height="15" fill="rgb(230,165,10)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="24.9627%" y="1653" width="0.0224%" height="15" fill="rgb(219,54,40)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.02%)</title><rect x="24.9627%" y="1637" width="0.0224%" height="15" fill="rgb(244,73,9)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1647.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.02%)</title><rect x="24.9627%" y="1621" width="0.0224%" height="15" fill="rgb(212,32,45)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1631.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.02%)</title><rect x="24.9627%" y="1605" width="0.0224%" height="15" fill="rgb(205,58,31)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1615.50"></text></g><g><title>realloc (24 samples, 0.02%)</title><rect x="24.9627%" y="1589" width="0.0224%" height="15" fill="rgb(250,120,43)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1599.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="24.9627%" y="1573" width="0.0224%" height="15" fill="rgb(235,13,10)" fg:x="26802" fg:w="24"/><text x="25.2127%" y="1583.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="24.9646%" y="1557" width="0.0205%" height="15" fill="rgb(232,219,31)" fg:x="26804" fg:w="22"/><text x="25.2146%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (28 samples, 0.03%)</title><rect x="24.9972%" y="1653" width="0.0261%" height="15" fill="rgb(218,157,51)" fg:x="26839" fg:w="28"/><text x="25.2472%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.03%)</title><rect x="24.9972%" y="1637" width="0.0261%" height="15" fill="rgb(211,91,52)" fg:x="26839" fg:w="28"/><text x="25.2472%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.03%)</title><rect x="24.9972%" y="1621" width="0.0261%" height="15" fill="rgb(240,173,1)" fg:x="26839" fg:w="28"/><text x="25.2472%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="25.0009%" y="1605" width="0.0224%" height="15" fill="rgb(248,20,47)" fg:x="26843" fg:w="24"/><text x="25.2509%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="25.0009%" y="1589" width="0.0224%" height="15" fill="rgb(217,221,40)" fg:x="26843" fg:w="24"/><text x="25.2509%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="25.0009%" y="1573" width="0.0224%" height="15" fill="rgb(226,149,51)" fg:x="26843" fg:w="24"/><text x="25.2509%" y="1583.50"></text></g><g><title>malloc (24 samples, 0.02%)</title><rect x="25.0009%" y="1557" width="0.0224%" height="15" fill="rgb(252,193,7)" fg:x="26843" fg:w="24"/><text x="25.2509%" y="1567.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="25.0075%" y="1541" width="0.0158%" height="15" fill="rgb(205,123,0)" fg:x="26850" fg:w="17"/><text x="25.2575%" y="1551.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="24.9907%" y="1733" width="0.0335%" height="15" fill="rgb(233,173,25)" fg:x="26832" fg:w="36"/><text x="25.2407%" y="1743.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="24.9925%" y="1717" width="0.0317%" height="15" fill="rgb(216,63,32)" fg:x="26834" fg:w="34"/><text x="25.2425%" y="1727.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="24.9925%" y="1701" width="0.0317%" height="15" fill="rgb(209,56,45)" fg:x="26834" fg:w="34"/><text x="25.2425%" y="1711.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.03%)</title><rect x="24.9972%" y="1685" width="0.0270%" height="15" fill="rgb(226,111,49)" fg:x="26839" fg:w="29"/><text x="25.2472%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (29 samples, 0.03%)</title><rect x="24.9972%" y="1669" width="0.0270%" height="15" fill="rgb(244,181,21)" fg:x="26839" fg:w="29"/><text x="25.2472%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (23 samples, 0.02%)</title><rect x="25.0969%" y="1557" width="0.0214%" height="15" fill="rgb(222,126,15)" fg:x="26946" fg:w="23"/><text x="25.3469%" y="1567.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (23 samples, 0.02%)</title><rect x="25.0969%" y="1541" width="0.0214%" height="15" fill="rgb(222,95,17)" fg:x="26946" fg:w="23"/><text x="25.3469%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.02%)</title><rect x="25.0978%" y="1525" width="0.0205%" height="15" fill="rgb(254,46,5)" fg:x="26947" fg:w="22"/><text x="25.3478%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.02%)</title><rect x="25.0978%" y="1509" width="0.0205%" height="15" fill="rgb(236,216,35)" fg:x="26947" fg:w="22"/><text x="25.3478%" y="1519.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (16 samples, 0.01%)</title><rect x="25.1034%" y="1493" width="0.0149%" height="15" fill="rgb(217,187,26)" fg:x="26953" fg:w="16"/><text x="25.3534%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (13 samples, 0.01%)</title><rect x="25.1611%" y="1541" width="0.0121%" height="15" fill="rgb(207,192,25)" fg:x="27015" fg:w="13"/><text x="25.4111%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (16 samples, 0.01%)</title><rect x="25.1770%" y="1541" width="0.0149%" height="15" fill="rgb(253,135,27)" fg:x="27032" fg:w="16"/><text x="25.4270%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (16 samples, 0.01%)</title><rect x="25.1770%" y="1525" width="0.0149%" height="15" fill="rgb(211,122,29)" fg:x="27032" fg:w="16"/><text x="25.4270%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (16 samples, 0.01%)</title><rect x="25.1770%" y="1509" width="0.0149%" height="15" fill="rgb(233,162,40)" fg:x="27032" fg:w="16"/><text x="25.4270%" y="1519.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (16 samples, 0.01%)</title><rect x="25.1770%" y="1493" width="0.0149%" height="15" fill="rgb(222,184,47)" fg:x="27032" fg:w="16"/><text x="25.4270%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="25.1770%" y="1477" width="0.0149%" height="15" fill="rgb(249,99,23)" fg:x="27032" fg:w="16"/><text x="25.4270%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="25.1770%" y="1461" width="0.0149%" height="15" fill="rgb(214,60,12)" fg:x="27032" fg:w="16"/><text x="25.4270%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="25.1770%" y="1445" width="0.0149%" height="15" fill="rgb(250,229,36)" fg:x="27032" fg:w="16"/><text x="25.4270%" y="1455.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="25.1798%" y="1429" width="0.0121%" height="15" fill="rgb(232,195,10)" fg:x="27035" fg:w="13"/><text x="25.4298%" y="1439.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (125 samples, 0.12%)</title><rect x="25.0820%" y="1573" width="0.1164%" height="15" fill="rgb(205,213,31)" fg:x="26930" fg:w="125"/><text x="25.3320%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (86 samples, 0.08%)</title><rect x="25.1183%" y="1557" width="0.0801%" height="15" fill="rgb(237,43,8)" fg:x="26969" fg:w="86"/><text x="25.3683%" y="1567.50"></text></g><g><title>bcs::de::Deserializer::parse_string (12 samples, 0.01%)</title><rect x="25.2384%" y="1461" width="0.0112%" height="15" fill="rgb(216,208,3)" fg:x="27098" fg:w="12"/><text x="25.4884%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="25.2496%" y="1333" width="0.0205%" height="15" fill="rgb(228,179,44)" fg:x="27110" fg:w="22"/><text x="25.4996%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="25.2496%" y="1317" width="0.0205%" height="15" fill="rgb(230,192,27)" fg:x="27110" fg:w="22"/><text x="25.4996%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="25.2496%" y="1301" width="0.0205%" height="15" fill="rgb(251,30,38)" fg:x="27110" fg:w="22"/><text x="25.4996%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="25.2496%" y="1285" width="0.0205%" height="15" fill="rgb(246,55,52)" fg:x="27110" fg:w="22"/><text x="25.4996%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="25.2496%" y="1269" width="0.0205%" height="15" fill="rgb(249,79,26)" fg:x="27110" fg:w="22"/><text x="25.4996%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="25.2496%" y="1253" width="0.0205%" height="15" fill="rgb(220,202,16)" fg:x="27110" fg:w="22"/><text x="25.4996%" y="1263.50"></text></g><g><title>malloc (18 samples, 0.02%)</title><rect x="25.2533%" y="1237" width="0.0168%" height="15" fill="rgb(250,170,23)" fg:x="27114" fg:w="18"/><text x="25.5033%" y="1247.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="25.2580%" y="1221" width="0.0121%" height="15" fill="rgb(230,7,37)" fg:x="27119" fg:w="13"/><text x="25.5080%" y="1231.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (38 samples, 0.04%)</title><rect x="25.2384%" y="1509" width="0.0354%" height="15" fill="rgb(213,71,1)" fg:x="27098" fg:w="38"/><text x="25.4884%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (38 samples, 0.04%)</title><rect x="25.2384%" y="1493" width="0.0354%" height="15" fill="rgb(227,87,39)" fg:x="27098" fg:w="38"/><text x="25.4884%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (38 samples, 0.04%)</title><rect x="25.2384%" y="1477" width="0.0354%" height="15" fill="rgb(210,41,29)" fg:x="27098" fg:w="38"/><text x="25.4884%" y="1487.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (26 samples, 0.02%)</title><rect x="25.2496%" y="1461" width="0.0242%" height="15" fill="rgb(206,191,31)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1471.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (26 samples, 0.02%)</title><rect x="25.2496%" y="1445" width="0.0242%" height="15" fill="rgb(247,75,54)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1455.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (26 samples, 0.02%)</title><rect x="25.2496%" y="1429" width="0.0242%" height="15" fill="rgb(208,54,50)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (26 samples, 0.02%)</title><rect x="25.2496%" y="1413" width="0.0242%" height="15" fill="rgb(214,90,37)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26 samples, 0.02%)</title><rect x="25.2496%" y="1397" width="0.0242%" height="15" fill="rgb(220,132,6)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="25.2496%" y="1381" width="0.0242%" height="15" fill="rgb(213,167,7)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="25.2496%" y="1365" width="0.0242%" height="15" fill="rgb(243,36,27)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="25.2496%" y="1349" width="0.0242%" height="15" fill="rgb(235,147,12)" fg:x="27110" fg:w="26"/><text x="25.4996%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (76 samples, 0.07%)</title><rect x="25.2384%" y="1525" width="0.0708%" height="15" fill="rgb(212,198,44)" fg:x="27098" fg:w="76"/><text x="25.4884%" y="1535.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (38 samples, 0.04%)</title><rect x="25.2738%" y="1509" width="0.0354%" height="15" fill="rgb(218,68,50)" fg:x="27136" fg:w="38"/><text x="25.5238%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (38 samples, 0.04%)</title><rect x="25.2738%" y="1493" width="0.0354%" height="15" fill="rgb(224,79,48)" fg:x="27136" fg:w="38"/><text x="25.5238%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (33 samples, 0.03%)</title><rect x="25.2785%" y="1477" width="0.0307%" height="15" fill="rgb(213,191,50)" fg:x="27141" fg:w="33"/><text x="25.5285%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (16 samples, 0.01%)</title><rect x="25.2943%" y="1461" width="0.0149%" height="15" fill="rgb(254,146,10)" fg:x="27158" fg:w="16"/><text x="25.5443%" y="1471.50"></text></g><g><title>bcs::de::Deserializer::next (16 samples, 0.01%)</title><rect x="25.2943%" y="1445" width="0.0149%" height="15" fill="rgb(215,175,11)" fg:x="27158" fg:w="16"/><text x="25.5443%" y="1455.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (17 samples, 0.02%)</title><rect x="25.3092%" y="1525" width="0.0158%" height="15" fill="rgb(207,49,7)" fg:x="27174" fg:w="17"/><text x="25.5592%" y="1535.50"></text></g><g><title>core::cmp::PartialOrd::ge (17 samples, 0.02%)</title><rect x="25.3092%" y="1509" width="0.0158%" height="15" fill="rgb(234,144,29)" fg:x="27174" fg:w="17"/><text x="25.5592%" y="1519.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (17 samples, 0.02%)</title><rect x="25.3092%" y="1493" width="0.0158%" height="15" fill="rgb(213,222,48)" fg:x="27174" fg:w="17"/><text x="25.5592%" y="1503.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (17 samples, 0.02%)</title><rect x="25.3092%" y="1477" width="0.0158%" height="15" fill="rgb(222,8,6)" fg:x="27174" fg:w="17"/><text x="25.5592%" y="1487.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (17 samples, 0.02%)</title><rect x="25.3092%" y="1461" width="0.0158%" height="15" fill="rgb(221,114,49)" fg:x="27174" fg:w="17"/><text x="25.5592%" y="1471.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="25.3111%" y="1445" width="0.0140%" height="15" fill="rgb(250,140,42)" fg:x="27176" fg:w="15"/><text x="25.5611%" y="1455.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (103 samples, 0.10%)</title><rect x="25.2347%" y="1541" width="0.0959%" height="15" fill="rgb(250,150,27)" fg:x="27094" fg:w="103"/><text x="25.4847%" y="1551.50"></text></g><g><title>bcs::de::Deserializer::parse_length (35 samples, 0.03%)</title><rect x="25.4350%" y="1333" width="0.0326%" height="15" fill="rgb(252,159,3)" fg:x="27309" fg:w="35"/><text x="25.6850%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (27 samples, 0.03%)</title><rect x="25.4424%" y="1317" width="0.0251%" height="15" fill="rgb(241,182,3)" fg:x="27317" fg:w="27"/><text x="25.6924%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (41 samples, 0.04%)</title><rect x="25.4303%" y="1349" width="0.0382%" height="15" fill="rgb(236,3,9)" fg:x="27304" fg:w="41"/><text x="25.6803%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (55 samples, 0.05%)</title><rect x="25.4685%" y="1349" width="0.0512%" height="15" fill="rgb(223,227,51)" fg:x="27345" fg:w="55"/><text x="25.7185%" y="1359.50"></text></g><g><title>bcs::de::Deserializer::parse_string (325 samples, 0.30%)</title><rect x="25.3977%" y="1365" width="0.3027%" height="15" fill="rgb(232,133,30)" fg:x="27269" fg:w="325"/><text x="25.6477%" y="1375.50"></text></g><g><title>core::str::converts::from_utf8 (194 samples, 0.18%)</title><rect x="25.5197%" y="1349" width="0.1807%" height="15" fill="rgb(209,93,27)" fg:x="27400" fg:w="194"/><text x="25.7697%" y="1359.50"></text></g><g><title>core::str::validations::run_utf8_validation (156 samples, 0.15%)</title><rect x="25.5551%" y="1333" width="0.1453%" height="15" fill="rgb(208,108,34)" fg:x="27438" fg:w="156"/><text x="25.8051%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (241 samples, 0.22%)</title><rect x="25.7004%" y="1237" width="0.2245%" height="15" fill="rgb(215,189,13)" fg:x="27594" fg:w="241"/><text x="25.9504%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (241 samples, 0.22%)</title><rect x="25.7004%" y="1221" width="0.2245%" height="15" fill="rgb(206,88,23)" fg:x="27594" fg:w="241"/><text x="25.9504%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (241 samples, 0.22%)</title><rect x="25.7004%" y="1205" width="0.2245%" height="15" fill="rgb(240,173,0)" fg:x="27594" fg:w="241"/><text x="25.9504%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (235 samples, 0.22%)</title><rect x="25.7060%" y="1189" width="0.2189%" height="15" fill="rgb(223,106,52)" fg:x="27600" fg:w="235"/><text x="25.9560%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (235 samples, 0.22%)</title><rect x="25.7060%" y="1173" width="0.2189%" height="15" fill="rgb(206,130,16)" fg:x="27600" fg:w="235"/><text x="25.9560%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (235 samples, 0.22%)</title><rect x="25.7060%" y="1157" width="0.2189%" height="15" fill="rgb(220,54,25)" fg:x="27600" fg:w="235"/><text x="25.9560%" y="1167.50"></text></g><g><title>malloc (218 samples, 0.20%)</title><rect x="25.7218%" y="1141" width="0.2030%" height="15" fill="rgb(210,4,38)" fg:x="27617" fg:w="218"/><text x="25.9718%" y="1151.50"></text></g><g><title>[libc.so.6] (131 samples, 0.12%)</title><rect x="25.8028%" y="1125" width="0.1220%" height="15" fill="rgb(238,94,39)" fg:x="27704" fg:w="131"/><text x="26.0528%" y="1135.50"></text></g><g><title>[libc.so.6] (32 samples, 0.03%)</title><rect x="25.8951%" y="1109" width="0.0298%" height="15" fill="rgb(234,124,34)" fg:x="27803" fg:w="32"/><text x="26.1451%" y="1119.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (614 samples, 0.57%)</title><rect x="25.3800%" y="1477" width="0.5719%" height="15" fill="rgb(221,91,40)" fg:x="27250" fg:w="614"/><text x="25.6300%" y="1487.50"></text></g><g><title>serde::de::SeqAccess::next_element (607 samples, 0.57%)</title><rect x="25.3865%" y="1461" width="0.5653%" height="15" fill="rgb(246,53,28)" fg:x="27257" fg:w="607"/><text x="25.6365%" y="1471.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (607 samples, 0.57%)</title><rect x="25.3865%" y="1445" width="0.5653%" height="15" fill="rgb(229,109,7)" fg:x="27257" fg:w="607"/><text x="25.6365%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (606 samples, 0.56%)</title><rect x="25.3875%" y="1429" width="0.5644%" height="15" fill="rgb(249,117,8)" fg:x="27258" fg:w="606"/><text x="25.6375%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (606 samples, 0.56%)</title><rect x="25.3875%" y="1413" width="0.5644%" height="15" fill="rgb(210,181,1)" fg:x="27258" fg:w="606"/><text x="25.6375%" y="1423.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (606 samples, 0.56%)</title><rect x="25.3875%" y="1397" width="0.5644%" height="15" fill="rgb(211,66,1)" fg:x="27258" fg:w="606"/><text x="25.6375%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (606 samples, 0.56%)</title><rect x="25.3875%" y="1381" width="0.5644%" height="15" fill="rgb(221,90,14)" fg:x="27258" fg:w="606"/><text x="25.6375%" y="1391.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (270 samples, 0.25%)</title><rect x="25.7004%" y="1365" width="0.2515%" height="15" fill="rgb(219,222,44)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1375.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (270 samples, 0.25%)</title><rect x="25.7004%" y="1349" width="0.2515%" height="15" fill="rgb(246,34,33)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1359.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (270 samples, 0.25%)</title><rect x="25.7004%" y="1333" width="0.2515%" height="15" fill="rgb(227,135,41)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (270 samples, 0.25%)</title><rect x="25.7004%" y="1317" width="0.2515%" height="15" fill="rgb(226,15,14)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (270 samples, 0.25%)</title><rect x="25.7004%" y="1301" width="0.2515%" height="15" fill="rgb(236,148,47)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (270 samples, 0.25%)</title><rect x="25.7004%" y="1285" width="0.2515%" height="15" fill="rgb(233,162,52)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (270 samples, 0.25%)</title><rect x="25.7004%" y="1269" width="0.2515%" height="15" fill="rgb(244,35,28)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (270 samples, 0.25%)</title><rect x="25.7004%" y="1253" width="0.2515%" height="15" fill="rgb(205,121,10)" fg:x="27594" fg:w="270"/><text x="25.9504%" y="1263.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (29 samples, 0.03%)</title><rect x="25.9249%" y="1237" width="0.0270%" height="15" fill="rgb(250,58,18)" fg:x="27835" fg:w="29"/><text x="26.1749%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.03%)</title><rect x="25.9249%" y="1221" width="0.0270%" height="15" fill="rgb(216,37,13)" fg:x="27835" fg:w="29"/><text x="26.1749%" y="1231.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="25.9267%" y="1205" width="0.0251%" height="15" fill="rgb(221,215,42)" fg:x="27837" fg:w="27"/><text x="26.1767%" y="1215.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (687 samples, 0.64%)</title><rect x="25.3306%" y="1509" width="0.6399%" height="15" fill="rgb(217,214,19)" fg:x="27197" fg:w="687"/><text x="25.5806%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (685 samples, 0.64%)</title><rect x="25.3325%" y="1493" width="0.6380%" height="15" fill="rgb(233,139,13)" fg:x="27199" fg:w="685"/><text x="25.5825%" y="1503.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (32 samples, 0.03%)</title><rect x="25.9705%" y="1477" width="0.0298%" height="15" fill="rgb(247,168,23)" fg:x="27884" fg:w="32"/><text x="26.2205%" y="1487.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (999 samples, 0.93%)</title><rect x="25.0717%" y="1589" width="0.9304%" height="15" fill="rgb(207,202,1)" fg:x="26919" fg:w="999"/><text x="25.3217%" y="1599.50"></text></g><g><title>serde::de::MapAccess::next_entry (862 samples, 0.80%)</title><rect x="25.1993%" y="1573" width="0.8028%" height="15" fill="rgb(220,155,48)" fg:x="27056" fg:w="862"/><text x="25.4493%" y="1583.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (861 samples, 0.80%)</title><rect x="25.2002%" y="1557" width="0.8019%" height="15" fill="rgb(250,43,26)" fg:x="27057" fg:w="861"/><text x="25.4502%" y="1567.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (721 samples, 0.67%)</title><rect x="25.3306%" y="1541" width="0.6715%" height="15" fill="rgb(212,190,23)" fg:x="27197" fg:w="721"/><text x="25.5806%" y="1551.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (721 samples, 0.67%)</title><rect x="25.3306%" y="1525" width="0.6715%" height="15" fill="rgb(216,39,24)" fg:x="27197" fg:w="721"/><text x="25.5806%" y="1535.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (34 samples, 0.03%)</title><rect x="25.9705%" y="1509" width="0.0317%" height="15" fill="rgb(252,113,16)" fg:x="27884" fg:w="34"/><text x="26.2205%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (34 samples, 0.03%)</title><rect x="25.9705%" y="1493" width="0.0317%" height="15" fill="rgb(208,113,19)" fg:x="27884" fg:w="34"/><text x="26.2205%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::parse_length (22 samples, 0.02%)</title><rect x="26.0022%" y="1589" width="0.0205%" height="15" fill="rgb(234,107,25)" fg:x="27918" fg:w="22"/><text x="26.2522%" y="1599.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (13 samples, 0.01%)</title><rect x="26.0105%" y="1573" width="0.0121%" height="15" fill="rgb(234,217,51)" fg:x="27927" fg:w="13"/><text x="26.2605%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,064 samples, 0.99%)</title><rect x="25.0484%" y="1637" width="0.9910%" height="15" fill="rgb(251,29,42)" fg:x="26894" fg:w="1064"/><text x="25.2984%" y="1647.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1,064 samples, 0.99%)</title><rect x="25.0484%" y="1621" width="0.9910%" height="15" fill="rgb(221,62,51)" fg:x="26894" fg:w="1064"/><text x="25.2984%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (1,062 samples, 0.99%)</title><rect x="25.0503%" y="1605" width="0.9891%" height="15" fill="rgb(240,192,43)" fg:x="26896" fg:w="1062"/><text x="25.3003%" y="1615.50"></text></g><g><title>bcs::de::MapDeserializer::new (18 samples, 0.02%)</title><rect x="26.0227%" y="1589" width="0.0168%" height="15" fill="rgb(224,157,47)" fg:x="27940" fg:w="18"/><text x="26.2727%" y="1599.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,074 samples, 1.00%)</title><rect x="25.0400%" y="1685" width="1.0003%" height="15" fill="rgb(226,84,45)" fg:x="26885" fg:w="1074"/><text x="25.2900%" y="1695.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,066 samples, 0.99%)</title><rect x="25.0475%" y="1669" width="0.9928%" height="15" fill="rgb(208,207,23)" fg:x="26893" fg:w="1066"/><text x="25.2975%" y="1679.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1,066 samples, 0.99%)</title><rect x="25.0475%" y="1653" width="0.9928%" height="15" fill="rgb(253,34,51)" fg:x="26893" fg:w="1066"/><text x="25.2975%" y="1663.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (1,085 samples, 1.01%)</title><rect x="25.0363%" y="1717" width="1.0105%" height="15" fill="rgb(227,26,34)" fg:x="26881" fg:w="1085"/><text x="25.2863%" y="1727.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1,085 samples, 1.01%)</title><rect x="25.0363%" y="1701" width="1.0105%" height="15" fill="rgb(245,75,19)" fg:x="26881" fg:w="1085"/><text x="25.2863%" y="1711.50"></text></g><g><title>bcs::de::Deserializer::new (13 samples, 0.01%)</title><rect x="26.0506%" y="1717" width="0.0121%" height="15" fill="rgb(250,191,31)" fg:x="27970" fg:w="13"/><text x="26.3006%" y="1727.50"></text></g><g><title>bcs::de::from_bytes (1,115 samples, 1.04%)</title><rect x="25.0298%" y="1733" width="1.0385%" height="15" fill="rgb(224,11,50)" fg:x="26874" fg:w="1115"/><text x="25.2798%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::metadata::Metadata&gt; (19 samples, 0.02%)</title><rect x="26.0776%" y="1733" width="0.0177%" height="15" fill="rgb(231,171,7)" fg:x="27999" fg:w="19"/><text x="26.3276%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="26.0776%" y="1717" width="0.0177%" height="15" fill="rgb(252,214,10)" fg:x="27999" fg:w="19"/><text x="26.3276%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="26.0776%" y="1701" width="0.0177%" height="15" fill="rgb(249,45,46)" fg:x="27999" fg:w="19"/><text x="26.3276%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="26.0776%" y="1685" width="0.0177%" height="15" fill="rgb(240,173,7)" fg:x="27999" fg:w="19"/><text x="26.3276%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="26.0776%" y="1669" width="0.0177%" height="15" fill="rgb(235,214,13)" fg:x="27999" fg:w="19"/><text x="26.3276%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="26.0776%" y="1653" width="0.0177%" height="15" fill="rgb(245,156,8)" fg:x="27999" fg:w="19"/><text x="26.3276%" y="1663.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="26.0776%" y="1637" width="0.0177%" height="15" fill="rgb(235,46,12)" fg:x="27999" fg:w="19"/><text x="26.3276%" y="1647.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="26.0823%" y="1621" width="0.0130%" height="15" fill="rgb(221,81,14)" fg:x="28004" fg:w="14"/><text x="26.3323%" y="1631.50"></text></g><g><title>[libc.so.6] (66 samples, 0.06%)</title><rect x="26.1270%" y="1493" width="0.0615%" height="15" fill="rgb(238,207,9)" fg:x="28052" fg:w="66"/><text x="26.3770%" y="1503.50"></text></g><g><title>[libc.so.6] (35 samples, 0.03%)</title><rect x="26.1558%" y="1477" width="0.0326%" height="15" fill="rgb(224,129,35)" fg:x="28083" fg:w="35"/><text x="26.4058%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (84 samples, 0.08%)</title><rect x="26.1111%" y="1605" width="0.0782%" height="15" fill="rgb(243,218,34)" fg:x="28035" fg:w="84"/><text x="26.3611%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (84 samples, 0.08%)</title><rect x="26.1111%" y="1589" width="0.0782%" height="15" fill="rgb(220,166,13)" fg:x="28035" fg:w="84"/><text x="26.3611%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (84 samples, 0.08%)</title><rect x="26.1111%" y="1573" width="0.0782%" height="15" fill="rgb(227,167,49)" fg:x="28035" fg:w="84"/><text x="26.3611%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (82 samples, 0.08%)</title><rect x="26.1130%" y="1557" width="0.0764%" height="15" fill="rgb(234,142,12)" fg:x="28037" fg:w="82"/><text x="26.3630%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (82 samples, 0.08%)</title><rect x="26.1130%" y="1541" width="0.0764%" height="15" fill="rgb(207,100,48)" fg:x="28037" fg:w="82"/><text x="26.3630%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (82 samples, 0.08%)</title><rect x="26.1130%" y="1525" width="0.0764%" height="15" fill="rgb(210,25,14)" fg:x="28037" fg:w="82"/><text x="26.3630%" y="1535.50"></text></g><g><title>malloc (79 samples, 0.07%)</title><rect x="26.1158%" y="1509" width="0.0736%" height="15" fill="rgb(246,116,27)" fg:x="28040" fg:w="79"/><text x="26.3658%" y="1519.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (112 samples, 0.10%)</title><rect x="26.1065%" y="1701" width="0.1043%" height="15" fill="rgb(214,193,42)" fg:x="28030" fg:w="112"/><text x="26.3565%" y="1711.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (108 samples, 0.10%)</title><rect x="26.1102%" y="1685" width="0.1006%" height="15" fill="rgb(214,122,8)" fg:x="28034" fg:w="108"/><text x="26.3602%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (107 samples, 0.10%)</title><rect x="26.1111%" y="1669" width="0.0997%" height="15" fill="rgb(244,173,18)" fg:x="28035" fg:w="107"/><text x="26.3611%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (107 samples, 0.10%)</title><rect x="26.1111%" y="1653" width="0.0997%" height="15" fill="rgb(232,68,19)" fg:x="28035" fg:w="107"/><text x="26.3611%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (107 samples, 0.10%)</title><rect x="26.1111%" y="1637" width="0.0997%" height="15" fill="rgb(236,224,1)" fg:x="28035" fg:w="107"/><text x="26.3611%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (107 samples, 0.10%)</title><rect x="26.1111%" y="1621" width="0.0997%" height="15" fill="rgb(240,11,8)" fg:x="28035" fg:w="107"/><text x="26.3611%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (23 samples, 0.02%)</title><rect x="26.1894%" y="1605" width="0.0214%" height="15" fill="rgb(244,159,20)" fg:x="28119" fg:w="23"/><text x="26.4394%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.02%)</title><rect x="26.1894%" y="1589" width="0.0214%" height="15" fill="rgb(240,223,54)" fg:x="28119" fg:w="23"/><text x="26.4394%" y="1599.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="26.1894%" y="1573" width="0.0214%" height="15" fill="rgb(237,146,5)" fg:x="28119" fg:w="23"/><text x="26.4394%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (49 samples, 0.05%)</title><rect x="26.2108%" y="1701" width="0.0456%" height="15" fill="rgb(218,221,32)" fg:x="28142" fg:w="49"/><text x="26.4608%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (49 samples, 0.05%)</title><rect x="26.2108%" y="1685" width="0.0456%" height="15" fill="rgb(244,96,26)" fg:x="28142" fg:w="49"/><text x="26.4608%" y="1695.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (47 samples, 0.04%)</title><rect x="26.2127%" y="1669" width="0.0438%" height="15" fill="rgb(245,184,37)" fg:x="28144" fg:w="47"/><text x="26.4627%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (40 samples, 0.04%)</title><rect x="26.2192%" y="1653" width="0.0373%" height="15" fill="rgb(248,91,47)" fg:x="28151" fg:w="40"/><text x="26.4692%" y="1663.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (40 samples, 0.04%)</title><rect x="26.2192%" y="1637" width="0.0373%" height="15" fill="rgb(243,199,8)" fg:x="28151" fg:w="40"/><text x="26.4692%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (40 samples, 0.04%)</title><rect x="26.2192%" y="1621" width="0.0373%" height="15" fill="rgb(249,12,15)" fg:x="28151" fg:w="40"/><text x="26.4692%" y="1631.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (40 samples, 0.04%)</title><rect x="26.2192%" y="1605" width="0.0373%" height="15" fill="rgb(245,97,12)" fg:x="28151" fg:w="40"/><text x="26.4692%" y="1615.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="26.2341%" y="1589" width="0.0224%" height="15" fill="rgb(244,61,1)" fg:x="28167" fg:w="24"/><text x="26.4841%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (13 samples, 0.01%)</title><rect x="26.2583%" y="1701" width="0.0121%" height="15" fill="rgb(222,194,10)" fg:x="28193" fg:w="13"/><text x="26.5083%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (13 samples, 0.01%)</title><rect x="26.2583%" y="1685" width="0.0121%" height="15" fill="rgb(226,178,8)" fg:x="28193" fg:w="13"/><text x="26.5083%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (13 samples, 0.01%)</title><rect x="26.2583%" y="1669" width="0.0121%" height="15" fill="rgb(241,32,34)" fg:x="28193" fg:w="13"/><text x="26.5083%" y="1679.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="26.2583%" y="1653" width="0.0121%" height="15" fill="rgb(254,26,6)" fg:x="28193" fg:w="13"/><text x="26.5083%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="26.2583%" y="1637" width="0.0121%" height="15" fill="rgb(249,71,11)" fg:x="28193" fg:w="13"/><text x="26.5083%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="26.2583%" y="1621" width="0.0121%" height="15" fill="rgb(232,170,27)" fg:x="28193" fg:w="13"/><text x="26.5083%" y="1631.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="26.2592%" y="1605" width="0.0112%" height="15" fill="rgb(214,223,17)" fg:x="28194" fg:w="12"/><text x="26.5092%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="26.2825%" y="1573" width="0.0121%" height="15" fill="rgb(250,18,15)" fg:x="28219" fg:w="13"/><text x="26.5325%" y="1583.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (13 samples, 0.01%)</title><rect x="26.2825%" y="1557" width="0.0121%" height="15" fill="rgb(212,153,51)" fg:x="28219" fg:w="13"/><text x="26.5325%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.01%)</title><rect x="26.2825%" y="1541" width="0.0121%" height="15" fill="rgb(219,194,12)" fg:x="28219" fg:w="13"/><text x="26.5325%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.03%)</title><rect x="26.2732%" y="1637" width="0.0270%" height="15" fill="rgb(212,58,17)" fg:x="28209" fg:w="29"/><text x="26.5232%" y="1647.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.03%)</title><rect x="26.2732%" y="1621" width="0.0270%" height="15" fill="rgb(254,5,10)" fg:x="28209" fg:w="29"/><text x="26.5232%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.02%)</title><rect x="26.2825%" y="1605" width="0.0177%" height="15" fill="rgb(246,91,7)" fg:x="28219" fg:w="19"/><text x="26.5325%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="26.2825%" y="1589" width="0.0177%" height="15" fill="rgb(218,108,49)" fg:x="28219" fg:w="19"/><text x="26.5325%" y="1599.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (1,428 samples, 1.33%)</title><rect x="24.9851%" y="1765" width="1.3300%" height="15" fill="rgb(238,123,20)" fg:x="26826" fg:w="1428"/><text x="25.2351%" y="1775.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (1,428 samples, 1.33%)</title><rect x="24.9851%" y="1749" width="1.3300%" height="15" fill="rgb(231,69,23)" fg:x="26826" fg:w="1428"/><text x="25.2351%" y="1759.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (230 samples, 0.21%)</title><rect x="26.1009%" y="1733" width="0.2142%" height="15" fill="rgb(230,209,3)" fg:x="28024" fg:w="230"/><text x="26.3509%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (229 samples, 0.21%)</title><rect x="26.1018%" y="1717" width="0.2133%" height="15" fill="rgb(231,19,0)" fg:x="28025" fg:w="229"/><text x="26.3518%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (47 samples, 0.04%)</title><rect x="26.2713%" y="1701" width="0.0438%" height="15" fill="rgb(226,192,25)" fg:x="28207" fg:w="47"/><text x="26.5213%" y="1711.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (47 samples, 0.04%)</title><rect x="26.2713%" y="1685" width="0.0438%" height="15" fill="rgb(223,175,53)" fg:x="28207" fg:w="47"/><text x="26.5213%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (47 samples, 0.04%)</title><rect x="26.2713%" y="1669" width="0.0438%" height="15" fill="rgb(248,35,51)" fg:x="28207" fg:w="47"/><text x="26.5213%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (47 samples, 0.04%)</title><rect x="26.2713%" y="1653" width="0.0438%" height="15" fill="rgb(230,37,26)" fg:x="28207" fg:w="47"/><text x="26.5213%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.01%)</title><rect x="26.3002%" y="1637" width="0.0149%" height="15" fill="rgb(206,120,22)" fg:x="28238" fg:w="16"/><text x="26.5502%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.01%)</title><rect x="26.3002%" y="1621" width="0.0149%" height="15" fill="rgb(207,165,28)" fg:x="28238" fg:w="16"/><text x="26.5502%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.01%)</title><rect x="26.3002%" y="1605" width="0.0149%" height="15" fill="rgb(226,23,46)" fg:x="28238" fg:w="16"/><text x="26.5502%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (28 samples, 0.03%)</title><rect x="26.3151%" y="1637" width="0.0261%" height="15" fill="rgb(208,130,44)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1647.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (28 samples, 0.03%)</title><rect x="26.3151%" y="1621" width="0.0261%" height="15" fill="rgb(231,67,8)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1631.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (28 samples, 0.03%)</title><rect x="26.3151%" y="1605" width="0.0261%" height="15" fill="rgb(205,183,22)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1615.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (28 samples, 0.03%)</title><rect x="26.3151%" y="1589" width="0.0261%" height="15" fill="rgb(224,47,9)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (28 samples, 0.03%)</title><rect x="26.3151%" y="1573" width="0.0261%" height="15" fill="rgb(250,183,49)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28 samples, 0.03%)</title><rect x="26.3151%" y="1557" width="0.0261%" height="15" fill="rgb(220,151,39)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (28 samples, 0.03%)</title><rect x="26.3151%" y="1541" width="0.0261%" height="15" fill="rgb(220,118,20)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="26.3151%" y="1525" width="0.0261%" height="15" fill="rgb(231,65,51)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="26.3151%" y="1509" width="0.0261%" height="15" fill="rgb(253,125,37)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.03%)</title><rect x="26.3151%" y="1493" width="0.0261%" height="15" fill="rgb(232,102,6)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.03%)</title><rect x="26.3151%" y="1477" width="0.0261%" height="15" fill="rgb(251,105,13)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1487.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="26.3151%" y="1461" width="0.0261%" height="15" fill="rgb(222,179,29)" fg:x="28254" fg:w="28"/><text x="26.5651%" y="1471.50"></text></g><g><title>malloc (22 samples, 0.02%)</title><rect x="26.3207%" y="1445" width="0.0205%" height="15" fill="rgb(229,180,53)" fg:x="28260" fg:w="22"/><text x="26.5707%" y="1455.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="26.3291%" y="1429" width="0.0121%" height="15" fill="rgb(238,104,13)" fg:x="28269" fg:w="13"/><text x="26.5791%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (98 samples, 0.09%)</title><rect x="26.3831%" y="1365" width="0.0913%" height="15" fill="rgb(210,130,5)" fg:x="28327" fg:w="98"/><text x="26.6331%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (98 samples, 0.09%)</title><rect x="26.3831%" y="1349" width="0.0913%" height="15" fill="rgb(233,87,49)" fg:x="28327" fg:w="98"/><text x="26.6331%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (96 samples, 0.09%)</title><rect x="26.3850%" y="1333" width="0.0894%" height="15" fill="rgb(243,34,9)" fg:x="28329" fg:w="96"/><text x="26.6350%" y="1343.50"></text></g><g><title>realloc (87 samples, 0.08%)</title><rect x="26.3933%" y="1317" width="0.0810%" height="15" fill="rgb(235,225,10)" fg:x="28338" fg:w="87"/><text x="26.6433%" y="1327.50"></text></g><g><title>[libc.so.6] (65 samples, 0.06%)</title><rect x="26.4138%" y="1301" width="0.0605%" height="15" fill="rgb(212,0,30)" fg:x="28360" fg:w="65"/><text x="26.6638%" y="1311.50"></text></g><g><title>[libc.so.6] (57 samples, 0.05%)</title><rect x="26.4213%" y="1285" width="0.0531%" height="15" fill="rgb(211,177,0)" fg:x="28368" fg:w="57"/><text x="26.6713%" y="1295.50"></text></g><g><title>alloc::raw_vec::finish_grow (107 samples, 0.10%)</title><rect x="26.3775%" y="1381" width="0.0997%" height="15" fill="rgb(225,220,11)" fg:x="28321" fg:w="107"/><text x="26.6275%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (130 samples, 0.12%)</title><rect x="26.3607%" y="1445" width="0.1211%" height="15" fill="rgb(215,10,13)" fg:x="28303" fg:w="130"/><text x="26.6107%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (130 samples, 0.12%)</title><rect x="26.3607%" y="1429" width="0.1211%" height="15" fill="rgb(240,177,14)" fg:x="28303" fg:w="130"/><text x="26.6107%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (121 samples, 0.11%)</title><rect x="26.3691%" y="1413" width="0.1127%" height="15" fill="rgb(243,7,39)" fg:x="28312" fg:w="121"/><text x="26.6191%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (116 samples, 0.11%)</title><rect x="26.3738%" y="1397" width="0.1080%" height="15" fill="rgb(212,99,0)" fg:x="28317" fg:w="116"/><text x="26.6238%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (153 samples, 0.14%)</title><rect x="26.3524%" y="1557" width="0.1425%" height="15" fill="rgb(225,162,48)" fg:x="28294" fg:w="153"/><text x="26.6024%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (153 samples, 0.14%)</title><rect x="26.3524%" y="1541" width="0.1425%" height="15" fill="rgb(246,16,25)" fg:x="28294" fg:w="153"/><text x="26.6024%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (153 samples, 0.14%)</title><rect x="26.3524%" y="1525" width="0.1425%" height="15" fill="rgb(220,150,2)" fg:x="28294" fg:w="153"/><text x="26.6024%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (153 samples, 0.14%)</title><rect x="26.3524%" y="1509" width="0.1425%" height="15" fill="rgb(237,113,11)" fg:x="28294" fg:w="153"/><text x="26.6024%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (153 samples, 0.14%)</title><rect x="26.3524%" y="1493" width="0.1425%" height="15" fill="rgb(236,70,20)" fg:x="28294" fg:w="153"/><text x="26.6024%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (153 samples, 0.14%)</title><rect x="26.3524%" y="1477" width="0.1425%" height="15" fill="rgb(234,94,7)" fg:x="28294" fg:w="153"/><text x="26.6024%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (153 samples, 0.14%)</title><rect x="26.3524%" y="1461" width="0.1425%" height="15" fill="rgb(250,221,0)" fg:x="28294" fg:w="153"/><text x="26.6024%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="26.4818%" y="1445" width="0.0130%" height="15" fill="rgb(245,149,46)" fg:x="28433" fg:w="14"/><text x="26.7318%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (156 samples, 0.15%)</title><rect x="26.3524%" y="1605" width="0.1453%" height="15" fill="rgb(215,37,27)" fg:x="28294" fg:w="156"/><text x="26.6024%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (156 samples, 0.15%)</title><rect x="26.3524%" y="1589" width="0.1453%" height="15" fill="rgb(232,65,3)" fg:x="28294" fg:w="156"/><text x="26.6024%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (156 samples, 0.15%)</title><rect x="26.3524%" y="1573" width="0.1453%" height="15" fill="rgb(214,2,16)" fg:x="28294" fg:w="156"/><text x="26.6024%" y="1583.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (28 samples, 0.03%)</title><rect x="26.4977%" y="1605" width="0.0261%" height="15" fill="rgb(227,131,50)" fg:x="28450" fg:w="28"/><text x="26.7477%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 0.03%)</title><rect x="26.4986%" y="1589" width="0.0251%" height="15" fill="rgb(247,131,45)" fg:x="28451" fg:w="27"/><text x="26.7486%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (18 samples, 0.02%)</title><rect x="26.5070%" y="1573" width="0.0168%" height="15" fill="rgb(215,97,47)" fg:x="28460" fg:w="18"/><text x="26.7570%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (18 samples, 0.02%)</title><rect x="26.5070%" y="1557" width="0.0168%" height="15" fill="rgb(233,143,12)" fg:x="28460" fg:w="18"/><text x="26.7570%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (18 samples, 0.02%)</title><rect x="26.5070%" y="1541" width="0.0168%" height="15" fill="rgb(222,57,17)" fg:x="28460" fg:w="18"/><text x="26.7570%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (18 samples, 0.02%)</title><rect x="26.5070%" y="1525" width="0.0168%" height="15" fill="rgb(214,119,38)" fg:x="28460" fg:w="18"/><text x="26.7570%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.04%)</title><rect x="26.5452%" y="1205" width="0.0363%" height="15" fill="rgb(217,28,47)" fg:x="28501" fg:w="39"/><text x="26.7952%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.04%)</title><rect x="26.5452%" y="1189" width="0.0363%" height="15" fill="rgb(231,14,52)" fg:x="28501" fg:w="39"/><text x="26.7952%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.03%)</title><rect x="26.5498%" y="1173" width="0.0317%" height="15" fill="rgb(220,158,18)" fg:x="28506" fg:w="34"/><text x="26.7998%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.03%)</title><rect x="26.5507%" y="1157" width="0.0307%" height="15" fill="rgb(222,143,46)" fg:x="28507" fg:w="33"/><text x="26.8007%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="26.5517%" y="1141" width="0.0298%" height="15" fill="rgb(227,165,5)" fg:x="28508" fg:w="32"/><text x="26.8017%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.03%)</title><rect x="26.5535%" y="1125" width="0.0279%" height="15" fill="rgb(216,222,49)" fg:x="28510" fg:w="30"/><text x="26.8035%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.03%)</title><rect x="26.5535%" y="1109" width="0.0279%" height="15" fill="rgb(238,73,39)" fg:x="28510" fg:w="30"/><text x="26.8035%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.03%)</title><rect x="26.5535%" y="1093" width="0.0279%" height="15" fill="rgb(252,115,9)" fg:x="28510" fg:w="30"/><text x="26.8035%" y="1103.50"></text></g><g><title>realloc (29 samples, 0.03%)</title><rect x="26.5545%" y="1077" width="0.0270%" height="15" fill="rgb(238,202,4)" fg:x="28511" fg:w="29"/><text x="26.8045%" y="1087.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="26.5582%" y="1061" width="0.0233%" height="15" fill="rgb(252,153,44)" fg:x="28515" fg:w="25"/><text x="26.8082%" y="1071.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="26.5656%" y="1045" width="0.0158%" height="15" fill="rgb(235,128,27)" fg:x="28523" fg:w="17"/><text x="26.8156%" y="1055.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (43 samples, 0.04%)</title><rect x="26.5433%" y="1365" width="0.0400%" height="15" fill="rgb(221,121,47)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1375.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (43 samples, 0.04%)</title><rect x="26.5433%" y="1349" width="0.0400%" height="15" fill="rgb(247,211,47)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1359.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (43 samples, 0.04%)</title><rect x="26.5433%" y="1333" width="0.0400%" height="15" fill="rgb(252,47,49)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (43 samples, 0.04%)</title><rect x="26.5433%" y="1317" width="0.0400%" height="15" fill="rgb(219,119,53)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1327.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (43 samples, 0.04%)</title><rect x="26.5433%" y="1301" width="0.0400%" height="15" fill="rgb(243,165,53)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (43 samples, 0.04%)</title><rect x="26.5433%" y="1285" width="0.0400%" height="15" fill="rgb(230,12,35)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1295.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (43 samples, 0.04%)</title><rect x="26.5433%" y="1269" width="0.0400%" height="15" fill="rgb(239,57,49)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (43 samples, 0.04%)</title><rect x="26.5433%" y="1253" width="0.0400%" height="15" fill="rgb(231,154,7)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (43 samples, 0.04%)</title><rect x="26.5433%" y="1237" width="0.0400%" height="15" fill="rgb(248,81,34)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (43 samples, 0.04%)</title><rect x="26.5433%" y="1221" width="0.0400%" height="15" fill="rgb(247,9,5)" fg:x="28499" fg:w="43"/><text x="26.7933%" y="1231.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (52 samples, 0.05%)</title><rect x="26.5405%" y="1413" width="0.0484%" height="15" fill="rgb(228,172,27)" fg:x="28496" fg:w="52"/><text x="26.7905%" y="1423.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (52 samples, 0.05%)</title><rect x="26.5405%" y="1397" width="0.0484%" height="15" fill="rgb(230,57,44)" fg:x="28496" fg:w="52"/><text x="26.7905%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (50 samples, 0.05%)</title><rect x="26.5424%" y="1381" width="0.0466%" height="15" fill="rgb(249,35,22)" fg:x="28498" fg:w="50"/><text x="26.7924%" y="1391.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (73 samples, 0.07%)</title><rect x="26.5405%" y="1445" width="0.0680%" height="15" fill="rgb(250,137,27)" fg:x="28496" fg:w="73"/><text x="26.7905%" y="1455.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_serialize (73 samples, 0.07%)</title><rect x="26.5405%" y="1429" width="0.0680%" height="15" fill="rgb(251,57,31)" fg:x="28496" fg:w="73"/><text x="26.7905%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.02%)</title><rect x="26.5889%" y="1413" width="0.0196%" height="15" fill="rgb(238,60,0)" fg:x="28548" fg:w="21"/><text x="26.8389%" y="1423.50"></text></g><g><title>bcs::ser::to_bytes (316 samples, 0.29%)</title><rect x="26.3151%" y="1685" width="0.2943%" height="15" fill="rgb(242,185,39)" fg:x="28254" fg:w="316"/><text x="26.5651%" y="1695.50"></text></g><g><title>bcs::ser::serialize_into (316 samples, 0.29%)</title><rect x="26.3151%" y="1669" width="0.2943%" height="15" fill="rgb(240,63,43)" fg:x="28254" fg:w="316"/><text x="26.5651%" y="1679.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (316 samples, 0.29%)</title><rect x="26.3151%" y="1653" width="0.2943%" height="15" fill="rgb(236,155,6)" fg:x="28254" fg:w="316"/><text x="26.5651%" y="1663.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (288 samples, 0.27%)</title><rect x="26.3412%" y="1637" width="0.2682%" height="15" fill="rgb(215,11,29)" fg:x="28282" fg:w="288"/><text x="26.5912%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (288 samples, 0.27%)</title><rect x="26.3412%" y="1621" width="0.2682%" height="15" fill="rgb(228,180,48)" fg:x="28282" fg:w="288"/><text x="26.5912%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (92 samples, 0.09%)</title><rect x="26.5237%" y="1605" width="0.0857%" height="15" fill="rgb(241,102,12)" fg:x="28478" fg:w="92"/><text x="26.7737%" y="1615.50"></text></g><g><title>serde::ser::Serializer::collect_seq (92 samples, 0.09%)</title><rect x="26.5237%" y="1589" width="0.0857%" height="15" fill="rgb(246,213,4)" fg:x="28478" fg:w="92"/><text x="26.7737%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (87 samples, 0.08%)</title><rect x="26.5284%" y="1573" width="0.0810%" height="15" fill="rgb(218,134,35)" fg:x="28483" fg:w="87"/><text x="26.7784%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (87 samples, 0.08%)</title><rect x="26.5284%" y="1557" width="0.0810%" height="15" fill="rgb(251,117,35)" fg:x="28483" fg:w="87"/><text x="26.7784%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (87 samples, 0.08%)</title><rect x="26.5284%" y="1541" width="0.0810%" height="15" fill="rgb(206,156,45)" fg:x="28483" fg:w="87"/><text x="26.7784%" y="1551.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (87 samples, 0.08%)</title><rect x="26.5284%" y="1525" width="0.0810%" height="15" fill="rgb(218,52,27)" fg:x="28483" fg:w="87"/><text x="26.7784%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (87 samples, 0.08%)</title><rect x="26.5284%" y="1509" width="0.0810%" height="15" fill="rgb(238,83,36)" fg:x="28483" fg:w="87"/><text x="26.7784%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (87 samples, 0.08%)</title><rect x="26.5284%" y="1493" width="0.0810%" height="15" fill="rgb(218,53,43)" fg:x="28483" fg:w="87"/><text x="26.7784%" y="1503.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (87 samples, 0.08%)</title><rect x="26.5284%" y="1477" width="0.0810%" height="15" fill="rgb(239,54,39)" fg:x="28483" fg:w="87"/><text x="26.7784%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (74 samples, 0.07%)</title><rect x="26.5405%" y="1461" width="0.0689%" height="15" fill="rgb(212,198,13)" fg:x="28496" fg:w="74"/><text x="26.7905%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (19 samples, 0.02%)</title><rect x="26.6122%" y="1653" width="0.0177%" height="15" fill="rgb(234,54,46)" fg:x="28573" fg:w="19"/><text x="26.8622%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="26.6122%" y="1637" width="0.0177%" height="15" fill="rgb(217,120,7)" fg:x="28573" fg:w="19"/><text x="26.8622%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (19 samples, 0.02%)</title><rect x="26.6122%" y="1621" width="0.0177%" height="15" fill="rgb(246,39,15)" fg:x="28573" fg:w="19"/><text x="26.8622%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (19 samples, 0.02%)</title><rect x="26.6122%" y="1605" width="0.0177%" height="15" fill="rgb(242,143,31)" fg:x="28573" fg:w="19"/><text x="26.8622%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (15 samples, 0.01%)</title><rect x="26.6159%" y="1589" width="0.0140%" height="15" fill="rgb(252,60,24)" fg:x="28577" fg:w="15"/><text x="26.8659%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (15 samples, 0.01%)</title><rect x="26.6159%" y="1573" width="0.0140%" height="15" fill="rgb(249,220,7)" fg:x="28577" fg:w="15"/><text x="26.8659%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (14 samples, 0.01%)</title><rect x="26.6169%" y="1557" width="0.0130%" height="15" fill="rgb(236,67,13)" fg:x="28578" fg:w="14"/><text x="26.8669%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.01%)</title><rect x="26.6169%" y="1541" width="0.0130%" height="15" fill="rgb(210,62,39)" fg:x="28578" fg:w="14"/><text x="26.8669%" y="1551.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="26.6169%" y="1525" width="0.0130%" height="15" fill="rgb(219,122,53)" fg:x="28578" fg:w="14"/><text x="26.8669%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="26.6169%" y="1509" width="0.0130%" height="15" fill="rgb(218,87,25)" fg:x="28578" fg:w="14"/><text x="26.8669%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="26.6169%" y="1493" width="0.0130%" height="15" fill="rgb(234,179,48)" fg:x="28578" fg:w="14"/><text x="26.8669%" y="1503.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="26.6169%" y="1477" width="0.0130%" height="15" fill="rgb(248,90,0)" fg:x="28578" fg:w="14"/><text x="26.8669%" y="1487.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (344 samples, 0.32%)</title><rect x="26.3151%" y="1717" width="0.3204%" height="15" fill="rgb(207,228,37)" fg:x="28254" fg:w="344"/><text x="26.5651%" y="1727.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (344 samples, 0.32%)</title><rect x="26.3151%" y="1701" width="0.3204%" height="15" fill="rgb(235,214,15)" fg:x="28254" fg:w="344"/><text x="26.5651%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (25 samples, 0.02%)</title><rect x="26.6122%" y="1685" width="0.0233%" height="15" fill="rgb(210,144,39)" fg:x="28573" fg:w="25"/><text x="26.8622%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (25 samples, 0.02%)</title><rect x="26.6122%" y="1669" width="0.0233%" height="15" fill="rgb(222,67,41)" fg:x="28573" fg:w="25"/><text x="26.8622%" y="1679.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (14 samples, 0.01%)</title><rect x="26.6551%" y="1589" width="0.0130%" height="15" fill="rgb(205,35,37)" fg:x="28619" fg:w="14"/><text x="26.9051%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="26.6551%" y="1573" width="0.0130%" height="15" fill="rgb(216,125,40)" fg:x="28619" fg:w="14"/><text x="26.9051%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="26.6560%" y="1557" width="0.0121%" height="15" fill="rgb(228,227,20)" fg:x="28620" fg:w="13"/><text x="26.9060%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="26.6560%" y="1541" width="0.0121%" height="15" fill="rgb(242,173,45)" fg:x="28620" fg:w="13"/><text x="26.9060%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="26.6560%" y="1525" width="0.0121%" height="15" fill="rgb(215,79,24)" fg:x="28620" fg:w="13"/><text x="26.9060%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="26.6681%" y="1589" width="0.0112%" height="15" fill="rgb(238,164,38)" fg:x="28633" fg:w="12"/><text x="26.9181%" y="1599.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="26.6914%" y="1461" width="0.0112%" height="15" fill="rgb(245,196,38)" fg:x="28658" fg:w="12"/><text x="26.9414%" y="1471.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="26.6923%" y="1445" width="0.0102%" height="15" fill="rgb(231,217,29)" fg:x="28659" fg:w="11"/><text x="26.9423%" y="1455.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="26.6923%" y="1429" width="0.0102%" height="15" fill="rgb(245,6,4)" fg:x="28659" fg:w="11"/><text x="26.9423%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="26.6923%" y="1413" width="0.0102%" height="15" fill="rgb(214,76,49)" fg:x="28659" fg:w="11"/><text x="26.9423%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="26.6904%" y="1493" width="0.0168%" height="15" fill="rgb(205,96,12)" fg:x="28657" fg:w="18"/><text x="26.9404%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="26.6914%" y="1477" width="0.0158%" height="15" fill="rgb(243,131,4)" fg:x="28658" fg:w="17"/><text x="26.9414%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.01%)</title><rect x="26.7100%" y="1429" width="0.0121%" height="15" fill="rgb(214,114,4)" fg:x="28678" fg:w="13"/><text x="26.9600%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="26.7091%" y="1445" width="0.0149%" height="15" fill="rgb(234,215,15)" fg:x="28677" fg:w="16"/><text x="26.9591%" y="1455.50"></text></g><g><title>hashbrown::map::make_hash (49 samples, 0.05%)</title><rect x="26.6793%" y="1541" width="0.0456%" height="15" fill="rgb(250,216,45)" fg:x="28645" fg:w="49"/><text x="26.9293%" y="1551.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49 samples, 0.05%)</title><rect x="26.6793%" y="1525" width="0.0456%" height="15" fill="rgb(236,128,4)" fg:x="28645" fg:w="49"/><text x="26.9293%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (37 samples, 0.03%)</title><rect x="26.6904%" y="1509" width="0.0345%" height="15" fill="rgb(234,50,33)" fg:x="28657" fg:w="37"/><text x="26.9404%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="26.7072%" y="1493" width="0.0177%" height="15" fill="rgb(253,131,37)" fg:x="28675" fg:w="19"/><text x="26.9572%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="26.7072%" y="1477" width="0.0177%" height="15" fill="rgb(218,55,27)" fg:x="28675" fg:w="19"/><text x="26.9572%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="26.7072%" y="1461" width="0.0177%" height="15" fill="rgb(241,220,28)" fg:x="28675" fg:w="19"/><text x="26.9572%" y="1471.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (48 samples, 0.04%)</title><rect x="26.7249%" y="1477" width="0.0447%" height="15" fill="rgb(241,90,48)" fg:x="28694" fg:w="48"/><text x="26.9749%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="26.7249%" y="1461" width="0.0447%" height="15" fill="rgb(216,43,37)" fg:x="28694" fg:w="48"/><text x="26.9749%" y="1471.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (48 samples, 0.04%)</title><rect x="26.7249%" y="1445" width="0.0447%" height="15" fill="rgb(207,173,9)" fg:x="28694" fg:w="48"/><text x="26.9749%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="26.7249%" y="1429" width="0.0447%" height="15" fill="rgb(240,126,30)" fg:x="28694" fg:w="48"/><text x="26.9749%" y="1439.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="26.7482%" y="1413" width="0.0214%" height="15" fill="rgb(228,178,53)" fg:x="28719" fg:w="23"/><text x="26.9982%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (49 samples, 0.05%)</title><rect x="26.7249%" y="1493" width="0.0456%" height="15" fill="rgb(217,33,4)" fg:x="28694" fg:w="49"/><text x="26.9749%" y="1503.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (17 samples, 0.02%)</title><rect x="26.7705%" y="1493" width="0.0158%" height="15" fill="rgb(206,124,34)" fg:x="28743" fg:w="17"/><text x="27.0205%" y="1503.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (17 samples, 0.02%)</title><rect x="26.7705%" y="1477" width="0.0158%" height="15" fill="rgb(208,122,53)" fg:x="28743" fg:w="17"/><text x="27.0205%" y="1487.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="26.7705%" y="1461" width="0.0158%" height="15" fill="rgb(215,202,26)" fg:x="28743" fg:w="17"/><text x="27.0205%" y="1471.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (145 samples, 0.14%)</title><rect x="26.6532%" y="1605" width="0.1350%" height="15" fill="rgb(232,198,31)" fg:x="28617" fg:w="145"/><text x="26.9032%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (117 samples, 0.11%)</title><rect x="26.6793%" y="1589" width="0.1090%" height="15" fill="rgb(222,23,35)" fg:x="28645" fg:w="117"/><text x="26.9293%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (117 samples, 0.11%)</title><rect x="26.6793%" y="1573" width="0.1090%" height="15" fill="rgb(242,27,53)" fg:x="28645" fg:w="117"/><text x="26.9293%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (117 samples, 0.11%)</title><rect x="26.6793%" y="1557" width="0.1090%" height="15" fill="rgb(210,216,42)" fg:x="28645" fg:w="117"/><text x="26.9293%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (68 samples, 0.06%)</title><rect x="26.7249%" y="1541" width="0.0633%" height="15" fill="rgb(234,39,38)" fg:x="28694" fg:w="68"/><text x="26.9749%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (68 samples, 0.06%)</title><rect x="26.7249%" y="1525" width="0.0633%" height="15" fill="rgb(235,126,54)" fg:x="28694" fg:w="68"/><text x="26.9749%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (68 samples, 0.06%)</title><rect x="26.7249%" y="1509" width="0.0633%" height="15" fill="rgb(235,150,33)" fg:x="28694" fg:w="68"/><text x="26.9749%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="26.8069%" y="1541" width="0.0130%" height="15" fill="rgb(249,49,53)" fg:x="28782" fg:w="14"/><text x="27.0569%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="26.8078%" y="1525" width="0.0121%" height="15" fill="rgb(238,60,50)" fg:x="28783" fg:w="13"/><text x="27.0578%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="26.8078%" y="1509" width="0.0121%" height="15" fill="rgb(210,5,2)" fg:x="28783" fg:w="13"/><text x="27.0578%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="26.8078%" y="1493" width="0.0121%" height="15" fill="rgb(214,207,24)" fg:x="28783" fg:w="13"/><text x="27.0578%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="26.8022%" y="1589" width="0.0205%" height="15" fill="rgb(228,173,2)" fg:x="28777" fg:w="22"/><text x="27.0522%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="26.8069%" y="1573" width="0.0158%" height="15" fill="rgb(244,26,8)" fg:x="28782" fg:w="17"/><text x="27.0569%" y="1583.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="26.8069%" y="1557" width="0.0158%" height="15" fill="rgb(249,153,35)" fg:x="28782" fg:w="17"/><text x="27.0569%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="26.8227%" y="1589" width="0.0158%" height="15" fill="rgb(221,215,40)" fg:x="28799" fg:w="17"/><text x="27.0727%" y="1599.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (14 samples, 0.01%)</title><rect x="26.8628%" y="1477" width="0.0130%" height="15" fill="rgb(238,106,35)" fg:x="28842" fg:w="14"/><text x="27.1128%" y="1487.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (14 samples, 0.01%)</title><rect x="26.8628%" y="1461" width="0.0130%" height="15" fill="rgb(207,195,21)" fg:x="28842" fg:w="14"/><text x="27.1128%" y="1471.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (25 samples, 0.02%)</title><rect x="26.8534%" y="1541" width="0.0233%" height="15" fill="rgb(205,43,29)" fg:x="28832" fg:w="25"/><text x="27.1034%" y="1551.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (25 samples, 0.02%)</title><rect x="26.8534%" y="1525" width="0.0233%" height="15" fill="rgb(236,35,21)" fg:x="28832" fg:w="25"/><text x="27.1034%" y="1535.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (25 samples, 0.02%)</title><rect x="26.8534%" y="1509" width="0.0233%" height="15" fill="rgb(244,74,8)" fg:x="28832" fg:w="25"/><text x="27.1034%" y="1519.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (15 samples, 0.01%)</title><rect x="26.8628%" y="1493" width="0.0140%" height="15" fill="rgb(241,229,7)" fg:x="28842" fg:w="15"/><text x="27.1128%" y="1503.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (68 samples, 0.06%)</title><rect x="26.8413%" y="1589" width="0.0633%" height="15" fill="rgb(212,223,25)" fg:x="28819" fg:w="68"/><text x="27.0913%" y="1599.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (65 samples, 0.06%)</title><rect x="26.8441%" y="1573" width="0.0605%" height="15" fill="rgb(234,58,53)" fg:x="28822" fg:w="65"/><text x="27.0941%" y="1583.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (62 samples, 0.06%)</title><rect x="26.8469%" y="1557" width="0.0577%" height="15" fill="rgb(244,36,1)" fg:x="28825" fg:w="62"/><text x="27.0969%" y="1567.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (27 samples, 0.03%)</title><rect x="26.8795%" y="1541" width="0.0251%" height="15" fill="rgb(222,40,54)" fg:x="28860" fg:w="27"/><text x="27.1295%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.02%)</title><rect x="26.8851%" y="1525" width="0.0196%" height="15" fill="rgb(210,207,39)" fg:x="28866" fg:w="21"/><text x="27.1351%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="26.8870%" y="1509" width="0.0177%" height="15" fill="rgb(234,52,14)" fg:x="28868" fg:w="19"/><text x="27.1370%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="26.8870%" y="1493" width="0.0177%" height="15" fill="rgb(239,108,46)" fg:x="28868" fg:w="19"/><text x="27.1370%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="26.8870%" y="1477" width="0.0177%" height="15" fill="rgb(252,223,5)" fg:x="28868" fg:w="19"/><text x="27.1370%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="26.8907%" y="1461" width="0.0140%" height="15" fill="rgb(227,181,11)" fg:x="28872" fg:w="15"/><text x="27.1407%" y="1471.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (293 samples, 0.27%)</title><rect x="26.6355%" y="1637" width="0.2729%" height="15" fill="rgb(248,126,40)" fg:x="28598" fg:w="293"/><text x="26.8855%" y="1647.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (293 samples, 0.27%)</title><rect x="26.6355%" y="1621" width="0.2729%" height="15" fill="rgb(243,1,18)" fg:x="28598" fg:w="293"/><text x="26.8855%" y="1631.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (129 samples, 0.12%)</title><rect x="26.7882%" y="1605" width="0.1201%" height="15" fill="rgb(214,145,23)" fg:x="28762" fg:w="129"/><text x="27.0382%" y="1615.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.01%)</title><rect x="26.9112%" y="1589" width="0.0140%" height="15" fill="rgb(241,218,11)" fg:x="28894" fg:w="15"/><text x="27.1612%" y="1599.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="26.9130%" y="1573" width="0.0121%" height="15" fill="rgb(214,219,24)" fg:x="28896" fg:w="13"/><text x="27.1630%" y="1583.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="26.9130%" y="1557" width="0.0121%" height="15" fill="rgb(235,32,7)" fg:x="28896" fg:w="13"/><text x="27.1630%" y="1567.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (313 samples, 0.29%)</title><rect x="26.6355%" y="1653" width="0.2915%" height="15" fill="rgb(227,121,28)" fg:x="28598" fg:w="313"/><text x="26.8855%" y="1663.50"></text></g><g><title>aptos_types::write_set::WriteSetV0::get (20 samples, 0.02%)</title><rect x="26.9084%" y="1637" width="0.0186%" height="15" fill="rgb(216,129,49)" fg:x="28891" fg:w="20"/><text x="27.1584%" y="1647.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::get (20 samples, 0.02%)</title><rect x="26.9084%" y="1621" width="0.0186%" height="15" fill="rgb(207,194,50)" fg:x="28891" fg:w="20"/><text x="27.1584%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (20 samples, 0.02%)</title><rect x="26.9084%" y="1605" width="0.0186%" height="15" fill="rgb(207,4,18)" fg:x="28891" fg:w="20"/><text x="27.1584%" y="1615.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (2,096 samples, 1.95%)</title><rect x="24.9851%" y="1797" width="1.9522%" height="15" fill="rgb(213,50,30)" fg:x="26826" fg:w="2096"/><text x="25.2351%" y="1807.50">&lt;..</text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (2,096 samples, 1.95%)</title><rect x="24.9851%" y="1781" width="1.9522%" height="15" fill="rgb(208,77,22)" fg:x="26826" fg:w="2096"/><text x="25.2351%" y="1791.50">a..</text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (668 samples, 0.62%)</title><rect x="26.3151%" y="1765" width="0.6222%" height="15" fill="rgb(244,204,34)" fg:x="28254" fg:w="668"/><text x="26.5651%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (668 samples, 0.62%)</title><rect x="26.3151%" y="1749" width="0.6222%" height="15" fill="rgb(230,20,17)" fg:x="28254" fg:w="668"/><text x="26.5651%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (668 samples, 0.62%)</title><rect x="26.3151%" y="1733" width="0.6222%" height="15" fill="rgb(237,83,15)" fg:x="28254" fg:w="668"/><text x="26.5651%" y="1743.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (324 samples, 0.30%)</title><rect x="26.6355%" y="1717" width="0.3018%" height="15" fill="rgb(221,109,25)" fg:x="28598" fg:w="324"/><text x="26.8855%" y="1727.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (324 samples, 0.30%)</title><rect x="26.6355%" y="1701" width="0.3018%" height="15" fill="rgb(205,194,52)" fg:x="28598" fg:w="324"/><text x="26.8855%" y="1711.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (324 samples, 0.30%)</title><rect x="26.6355%" y="1685" width="0.3018%" height="15" fill="rgb(244,173,54)" fg:x="28598" fg:w="324"/><text x="26.8855%" y="1695.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (324 samples, 0.30%)</title><rect x="26.6355%" y="1669" width="0.3018%" height="15" fill="rgb(227,181,18)" fg:x="28598" fg:w="324"/><text x="26.8855%" y="1679.50"></text></g><g><title>aptos_types::write_set::WriteSetV0::get (11 samples, 0.01%)</title><rect x="26.9270%" y="1653" width="0.0102%" height="15" fill="rgb(238,36,30)" fg:x="28911" fg:w="11"/><text x="27.1770%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (164 samples, 0.15%)</title><rect x="26.9373%" y="1797" width="0.1527%" height="15" fill="rgb(254,85,0)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (164 samples, 0.15%)</title><rect x="26.9373%" y="1781" width="0.1527%" height="15" fill="rgb(247,63,33)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (164 samples, 0.15%)</title><rect x="26.9373%" y="1765" width="0.1527%" height="15" fill="rgb(220,7,54)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (164 samples, 0.15%)</title><rect x="26.9373%" y="1749" width="0.1527%" height="15" fill="rgb(238,227,21)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (164 samples, 0.15%)</title><rect x="26.9373%" y="1733" width="0.1527%" height="15" fill="rgb(237,29,31)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (164 samples, 0.15%)</title><rect x="26.9373%" y="1717" width="0.1527%" height="15" fill="rgb(211,21,50)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (164 samples, 0.15%)</title><rect x="26.9373%" y="1701" width="0.1527%" height="15" fill="rgb(239,119,2)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (164 samples, 0.15%)</title><rect x="26.9373%" y="1685" width="0.1527%" height="15" fill="rgb(250,2,39)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (164 samples, 0.15%)</title><rect x="26.9373%" y="1669" width="0.1527%" height="15" fill="rgb(244,46,53)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1679.50"></text></g><g><title>malloc (164 samples, 0.15%)</title><rect x="26.9373%" y="1653" width="0.1527%" height="15" fill="rgb(209,21,19)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1663.50"></text></g><g><title>[libc.so.6] (164 samples, 0.15%)</title><rect x="26.9373%" y="1637" width="0.1527%" height="15" fill="rgb(236,145,4)" fg:x="28922" fg:w="164"/><text x="27.1873%" y="1647.50"></text></g><g><title>[libc.so.6] (82 samples, 0.08%)</title><rect x="27.0136%" y="1621" width="0.0764%" height="15" fill="rgb(220,133,36)" fg:x="29004" fg:w="82"/><text x="27.2636%" y="1631.50"></text></g><g><title>core::intrinsics::copy (14 samples, 0.01%)</title><rect x="27.0993%" y="1685" width="0.0130%" height="15" fill="rgb(244,18,3)" fg:x="29096" fg:w="14"/><text x="27.3493%" y="1695.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="27.0993%" y="1669" width="0.0130%" height="15" fill="rgb(232,171,48)" fg:x="29096" fg:w="14"/><text x="27.3493%" y="1679.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (26 samples, 0.02%)</title><rect x="27.0900%" y="1797" width="0.0242%" height="15" fill="rgb(223,223,53)" fg:x="29086" fg:w="26"/><text x="27.3400%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (26 samples, 0.02%)</title><rect x="27.0900%" y="1781" width="0.0242%" height="15" fill="rgb(246,92,13)" fg:x="29086" fg:w="26"/><text x="27.3400%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (26 samples, 0.02%)</title><rect x="27.0900%" y="1765" width="0.0242%" height="15" fill="rgb(229,171,10)" fg:x="29086" fg:w="26"/><text x="27.3400%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (26 samples, 0.02%)</title><rect x="27.0900%" y="1749" width="0.0242%" height="15" fill="rgb(213,131,26)" fg:x="29086" fg:w="26"/><text x="27.3400%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (21 samples, 0.02%)</title><rect x="27.0947%" y="1733" width="0.0196%" height="15" fill="rgb(242,87,54)" fg:x="29091" fg:w="21"/><text x="27.3447%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (21 samples, 0.02%)</title><rect x="27.0947%" y="1717" width="0.0196%" height="15" fill="rgb(237,21,35)" fg:x="29091" fg:w="21"/><text x="27.3447%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (16 samples, 0.01%)</title><rect x="27.0993%" y="1701" width="0.0149%" height="15" fill="rgb(253,13,47)" fg:x="29096" fg:w="16"/><text x="27.3493%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="27.1720%" y="1653" width="0.0149%" height="15" fill="rgb(215,122,49)" fg:x="29174" fg:w="16"/><text x="27.4220%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="27.2008%" y="1573" width="0.0177%" height="15" fill="rgb(209,179,30)" fg:x="29205" fg:w="19"/><text x="27.4508%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="27.2018%" y="1557" width="0.0168%" height="15" fill="rgb(235,100,24)" fg:x="29206" fg:w="18"/><text x="27.4518%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="27.2018%" y="1541" width="0.0168%" height="15" fill="rgb(209,67,24)" fg:x="29206" fg:w="18"/><text x="27.4518%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="27.2027%" y="1525" width="0.0158%" height="15" fill="rgb(206,74,32)" fg:x="29207" fg:w="17"/><text x="27.4527%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="27.2027%" y="1509" width="0.0158%" height="15" fill="rgb(212,45,25)" fg:x="29207" fg:w="17"/><text x="27.4527%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="27.2027%" y="1493" width="0.0158%" height="15" fill="rgb(239,26,3)" fg:x="29207" fg:w="17"/><text x="27.4527%" y="1503.50"></text></g><g><title>malloc (16 samples, 0.01%)</title><rect x="27.2036%" y="1477" width="0.0149%" height="15" fill="rgb(218,36,15)" fg:x="29208" fg:w="16"/><text x="27.4536%" y="1487.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (101 samples, 0.09%)</title><rect x="27.1356%" y="1669" width="0.0941%" height="15" fill="rgb(206,108,24)" fg:x="29135" fg:w="101"/><text x="27.3856%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="27.1869%" y="1653" width="0.0428%" height="15" fill="rgb(234,204,42)" fg:x="29190" fg:w="46"/><text x="27.4369%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="27.1906%" y="1637" width="0.0391%" height="15" fill="rgb(229,2,11)" fg:x="29194" fg:w="42"/><text x="27.4406%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.04%)</title><rect x="27.1934%" y="1621" width="0.0363%" height="15" fill="rgb(221,20,48)" fg:x="29197" fg:w="39"/><text x="27.4434%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.04%)</title><rect x="27.1934%" y="1605" width="0.0363%" height="15" fill="rgb(244,164,10)" fg:x="29197" fg:w="39"/><text x="27.4434%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.04%)</title><rect x="27.1934%" y="1589" width="0.0363%" height="15" fill="rgb(243,229,2)" fg:x="29197" fg:w="39"/><text x="27.4434%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.01%)</title><rect x="27.2185%" y="1573" width="0.0112%" height="15" fill="rgb(232,131,37)" fg:x="29224" fg:w="12"/><text x="27.4685%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="27.2297%" y="1669" width="0.0112%" height="15" fill="rgb(217,156,11)" fg:x="29236" fg:w="12"/><text x="27.4797%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="27.2297%" y="1653" width="0.0112%" height="15" fill="rgb(239,99,48)" fg:x="29236" fg:w="12"/><text x="27.4797%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="27.2297%" y="1637" width="0.0112%" height="15" fill="rgb(231,209,9)" fg:x="29236" fg:w="12"/><text x="27.4797%" y="1647.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (127 samples, 0.12%)</title><rect x="27.1329%" y="1749" width="0.1183%" height="15" fill="rgb(254,97,27)" fg:x="29132" fg:w="127"/><text x="27.3829%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (126 samples, 0.12%)</title><rect x="27.1338%" y="1733" width="0.1174%" height="15" fill="rgb(223,151,38)" fg:x="29133" fg:w="126"/><text x="27.3838%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (125 samples, 0.12%)</title><rect x="27.1347%" y="1717" width="0.1164%" height="15" fill="rgb(219,206,35)" fg:x="29134" fg:w="125"/><text x="27.3847%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (125 samples, 0.12%)</title><rect x="27.1347%" y="1701" width="0.1164%" height="15" fill="rgb(216,130,31)" fg:x="29134" fg:w="125"/><text x="27.3847%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (125 samples, 0.12%)</title><rect x="27.1347%" y="1685" width="0.1164%" height="15" fill="rgb(251,97,34)" fg:x="29134" fg:w="125"/><text x="27.3847%" y="1695.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="27.2409%" y="1669" width="0.0102%" height="15" fill="rgb(246,159,47)" fg:x="29248" fg:w="11"/><text x="27.4909%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="27.2549%" y="1669" width="0.0102%" height="15" fill="rgb(232,87,10)" fg:x="29263" fg:w="11"/><text x="27.5049%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="27.2549%" y="1653" width="0.0102%" height="15" fill="rgb(249,1,37)" fg:x="29263" fg:w="11"/><text x="27.5049%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="27.2549%" y="1637" width="0.0102%" height="15" fill="rgb(239,135,14)" fg:x="29263" fg:w="11"/><text x="27.5049%" y="1647.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.03%)</title><rect x="27.2521%" y="1701" width="0.0270%" height="15" fill="rgb(253,116,46)" fg:x="29260" fg:w="29"/><text x="27.5021%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.03%)</title><rect x="27.2521%" y="1685" width="0.0270%" height="15" fill="rgb(222,217,37)" fg:x="29260" fg:w="29"/><text x="27.5021%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.01%)</title><rect x="27.2670%" y="1669" width="0.0121%" height="15" fill="rgb(252,96,8)" fg:x="29276" fg:w="13"/><text x="27.5170%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (195 samples, 0.18%)</title><rect x="27.1142%" y="1797" width="0.1816%" height="15" fill="rgb(254,103,41)" fg:x="29112" fg:w="195"/><text x="27.3642%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (195 samples, 0.18%)</title><rect x="27.1142%" y="1781" width="0.1816%" height="15" fill="rgb(218,213,19)" fg:x="29112" fg:w="195"/><text x="27.3642%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (195 samples, 0.18%)</title><rect x="27.1142%" y="1765" width="0.1816%" height="15" fill="rgb(253,95,21)" fg:x="29112" fg:w="195"/><text x="27.3642%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (47 samples, 0.04%)</title><rect x="27.2521%" y="1749" width="0.0438%" height="15" fill="rgb(229,26,28)" fg:x="29260" fg:w="47"/><text x="27.5021%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (47 samples, 0.04%)</title><rect x="27.2521%" y="1733" width="0.0438%" height="15" fill="rgb(230,129,16)" fg:x="29260" fg:w="47"/><text x="27.5021%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (47 samples, 0.04%)</title><rect x="27.2521%" y="1717" width="0.0438%" height="15" fill="rgb(236,126,17)" fg:x="29260" fg:w="47"/><text x="27.5021%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.02%)</title><rect x="27.2791%" y="1701" width="0.0168%" height="15" fill="rgb(209,33,33)" fg:x="29289" fg:w="18"/><text x="27.5291%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.02%)</title><rect x="27.2791%" y="1685" width="0.0168%" height="15" fill="rgb(227,85,29)" fg:x="29289" fg:w="18"/><text x="27.5291%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.02%)</title><rect x="27.2791%" y="1669" width="0.0168%" height="15" fill="rgb(241,53,46)" fg:x="29289" fg:w="18"/><text x="27.5291%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="27.2958%" y="1669" width="0.0102%" height="15" fill="rgb(228,167,53)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="27.2958%" y="1653" width="0.0102%" height="15" fill="rgb(238,195,45)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1663.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (11 samples, 0.01%)</title><rect x="27.2958%" y="1637" width="0.0102%" height="15" fill="rgb(252,124,45)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="27.2958%" y="1621" width="0.0102%" height="15" fill="rgb(251,38,35)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1631.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="27.2958%" y="1605" width="0.0102%" height="15" fill="rgb(227,33,2)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="27.2958%" y="1589" width="0.0102%" height="15" fill="rgb(223,157,46)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1599.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="27.2958%" y="1573" width="0.0102%" height="15" fill="rgb(222,78,41)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (11 samples, 0.01%)</title><rect x="27.2958%" y="1557" width="0.0102%" height="15" fill="rgb(248,176,11)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="27.2958%" y="1541" width="0.0102%" height="15" fill="rgb(241,221,18)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="27.2958%" y="1525" width="0.0102%" height="15" fill="rgb(218,85,22)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="27.2958%" y="1509" width="0.0102%" height="15" fill="rgb(222,223,7)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="27.2958%" y="1493" width="0.0102%" height="15" fill="rgb(254,59,39)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="27.2958%" y="1477" width="0.0102%" height="15" fill="rgb(247,100,27)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="27.2958%" y="1461" width="0.0102%" height="15" fill="rgb(237,207,10)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1471.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="27.2958%" y="1445" width="0.0102%" height="15" fill="rgb(220,121,28)" fg:x="29307" fg:w="11"/><text x="27.5458%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (13 samples, 0.01%)</title><rect x="27.2958%" y="1797" width="0.0121%" height="15" fill="rgb(213,223,20)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (13 samples, 0.01%)</title><rect x="27.2958%" y="1781" width="0.0121%" height="15" fill="rgb(205,121,27)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (13 samples, 0.01%)</title><rect x="27.2958%" y="1765" width="0.0121%" height="15" fill="rgb(253,24,53)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1775.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="27.2958%" y="1749" width="0.0121%" height="15" fill="rgb(224,224,47)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="27.2958%" y="1733" width="0.0121%" height="15" fill="rgb(250,125,36)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="27.2958%" y="1717" width="0.0121%" height="15" fill="rgb(240,144,38)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="27.2958%" y="1701" width="0.0121%" height="15" fill="rgb(250,15,50)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="27.2958%" y="1685" width="0.0121%" height="15" fill="rgb(210,24,26)" fg:x="29307" fg:w="13"/><text x="27.5458%" y="1695.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.01%)</title><rect x="27.3480%" y="1461" width="0.0112%" height="15" fill="rgb(234,53,53)" fg:x="29363" fg:w="12"/><text x="27.5980%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (45 samples, 0.04%)</title><rect x="27.3359%" y="1477" width="0.0419%" height="15" fill="rgb(208,108,28)" fg:x="29350" fg:w="45"/><text x="27.5859%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="27.3648%" y="1461" width="0.0130%" height="15" fill="rgb(227,143,7)" fg:x="29381" fg:w="14"/><text x="27.6148%" y="1471.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="27.3657%" y="1445" width="0.0121%" height="15" fill="rgb(238,189,38)" fg:x="29382" fg:w="13"/><text x="27.6157%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (46 samples, 0.04%)</title><rect x="27.3359%" y="1493" width="0.0428%" height="15" fill="rgb(222,69,15)" fg:x="29350" fg:w="46"/><text x="27.5859%" y="1503.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (11 samples, 0.01%)</title><rect x="27.3834%" y="1429" width="0.0102%" height="15" fill="rgb(213,169,7)" fg:x="29401" fg:w="11"/><text x="27.6334%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="27.3834%" y="1413" width="0.0102%" height="15" fill="rgb(251,219,4)" fg:x="29401" fg:w="11"/><text x="27.6334%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="27.3834%" y="1397" width="0.0102%" height="15" fill="rgb(241,55,40)" fg:x="29401" fg:w="11"/><text x="27.6334%" y="1407.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (63 samples, 0.06%)</title><rect x="27.3359%" y="1509" width="0.0587%" height="15" fill="rgb(243,57,30)" fg:x="29350" fg:w="63"/><text x="27.5859%" y="1519.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (14 samples, 0.01%)</title><rect x="27.3815%" y="1493" width="0.0130%" height="15" fill="rgb(234,50,30)" fg:x="29399" fg:w="14"/><text x="27.6315%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.01%)</title><rect x="27.3815%" y="1477" width="0.0130%" height="15" fill="rgb(239,23,42)" fg:x="29399" fg:w="14"/><text x="27.6315%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="27.3815%" y="1461" width="0.0130%" height="15" fill="rgb(217,38,19)" fg:x="29399" fg:w="14"/><text x="27.6315%" y="1471.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="27.3815%" y="1445" width="0.0130%" height="15" fill="rgb(215,179,16)" fg:x="29399" fg:w="14"/><text x="27.6315%" y="1455.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (88 samples, 0.08%)</title><rect x="27.3303%" y="1525" width="0.0820%" height="15" fill="rgb(254,21,37)" fg:x="29344" fg:w="88"/><text x="27.5803%" y="1535.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (19 samples, 0.02%)</title><rect x="27.3946%" y="1509" width="0.0177%" height="15" fill="rgb(219,207,48)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1519.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="27.3946%" y="1493" width="0.0177%" height="15" fill="rgb(227,225,41)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1503.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="27.3946%" y="1477" width="0.0177%" height="15" fill="rgb(223,130,1)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1487.50"></text></g><g><title>alloc::alloc::exchange_malloc (19 samples, 0.02%)</title><rect x="27.3946%" y="1461" width="0.0177%" height="15" fill="rgb(249,54,42)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="27.3946%" y="1445" width="0.0177%" height="15" fill="rgb(248,69,25)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="27.3946%" y="1429" width="0.0177%" height="15" fill="rgb(234,21,32)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="27.3946%" y="1413" width="0.0177%" height="15" fill="rgb(252,136,6)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1423.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="27.3946%" y="1397" width="0.0177%" height="15" fill="rgb(245,87,12)" fg:x="29413" fg:w="19"/><text x="27.6446%" y="1407.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="27.3974%" y="1381" width="0.0149%" height="15" fill="rgb(208,12,15)" fg:x="29416" fg:w="16"/><text x="27.6474%" y="1391.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (93 samples, 0.09%)</title><rect x="27.3303%" y="1541" width="0.0866%" height="15" fill="rgb(250,98,2)" fg:x="29344" fg:w="93"/><text x="27.5803%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="27.4216%" y="1541" width="0.0121%" height="15" fill="rgb(205,213,15)" fg:x="29442" fg:w="13"/><text x="27.6716%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (118 samples, 0.11%)</title><rect x="27.3266%" y="1557" width="0.1099%" height="15" fill="rgb(248,192,44)" fg:x="29340" fg:w="118"/><text x="27.5766%" y="1567.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (119 samples, 0.11%)</title><rect x="27.3266%" y="1573" width="0.1108%" height="15" fill="rgb(221,89,17)" fg:x="29340" fg:w="119"/><text x="27.5766%" y="1583.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (138 samples, 0.13%)</title><rect x="27.3247%" y="1589" width="0.1285%" height="15" fill="rgb(209,55,3)" fg:x="29338" fg:w="138"/><text x="27.5747%" y="1599.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (16 samples, 0.01%)</title><rect x="27.4383%" y="1573" width="0.0149%" height="15" fill="rgb(247,23,45)" fg:x="29460" fg:w="16"/><text x="27.6883%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.01%)</title><rect x="27.4383%" y="1557" width="0.0149%" height="15" fill="rgb(235,152,23)" fg:x="29460" fg:w="16"/><text x="27.6883%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="27.4383%" y="1541" width="0.0149%" height="15" fill="rgb(244,63,13)" fg:x="29460" fg:w="16"/><text x="27.6883%" y="1551.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="27.4383%" y="1525" width="0.0149%" height="15" fill="rgb(227,30,37)" fg:x="29460" fg:w="16"/><text x="27.6883%" y="1535.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (11 samples, 0.01%)</title><rect x="27.4430%" y="1509" width="0.0102%" height="15" fill="rgb(224,49,42)" fg:x="29465" fg:w="11"/><text x="27.6930%" y="1519.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (26 samples, 0.02%)</title><rect x="27.4588%" y="1589" width="0.0242%" height="15" fill="rgb(218,129,5)" fg:x="29482" fg:w="26"/><text x="27.7088%" y="1599.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="27.4588%" y="1573" width="0.0242%" height="15" fill="rgb(240,199,54)" fg:x="29482" fg:w="26"/><text x="27.7088%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="27.4626%" y="1557" width="0.0205%" height="15" fill="rgb(234,31,13)" fg:x="29486" fg:w="22"/><text x="27.7126%" y="1567.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.02%)</title><rect x="27.4626%" y="1541" width="0.0205%" height="15" fill="rgb(219,73,54)" fg:x="29486" fg:w="22"/><text x="27.7126%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="27.4635%" y="1525" width="0.0196%" height="15" fill="rgb(251,162,10)" fg:x="29487" fg:w="21"/><text x="27.7135%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="27.4635%" y="1509" width="0.0196%" height="15" fill="rgb(240,138,47)" fg:x="29487" fg:w="21"/><text x="27.7135%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="27.4635%" y="1493" width="0.0196%" height="15" fill="rgb(216,138,26)" fg:x="29487" fg:w="21"/><text x="27.7135%" y="1503.50"></text></g><g><title>malloc (20 samples, 0.02%)</title><rect x="27.4644%" y="1477" width="0.0186%" height="15" fill="rgb(243,17,35)" fg:x="29488" fg:w="20"/><text x="27.7144%" y="1487.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="27.4691%" y="1461" width="0.0140%" height="15" fill="rgb(241,60,18)" fg:x="29493" fg:w="15"/><text x="27.7191%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (184 samples, 0.17%)</title><rect x="27.3182%" y="1605" width="0.1714%" height="15" fill="rgb(234,2,44)" fg:x="29331" fg:w="184"/><text x="27.5682%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (195 samples, 0.18%)</title><rect x="27.3173%" y="1621" width="0.1816%" height="15" fill="rgb(225,225,33)" fg:x="29330" fg:w="195"/><text x="27.5673%" y="1631.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="27.4989%" y="1621" width="0.0112%" height="15" fill="rgb(234,50,31)" fg:x="29525" fg:w="12"/><text x="27.7489%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="27.5147%" y="1573" width="0.0205%" height="15" fill="rgb(249,6,25)" fg:x="29542" fg:w="22"/><text x="27.7647%" y="1583.50"></text></g><g><title>malloc (18 samples, 0.02%)</title><rect x="27.5184%" y="1557" width="0.0168%" height="15" fill="rgb(241,5,17)" fg:x="29546" fg:w="18"/><text x="27.7684%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.02%)</title><rect x="27.5129%" y="1605" width="0.0242%" height="15" fill="rgb(207,116,10)" fg:x="29540" fg:w="26"/><text x="27.7629%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.02%)</title><rect x="27.5129%" y="1589" width="0.0242%" height="15" fill="rgb(222,128,18)" fg:x="29540" fg:w="26"/><text x="27.7629%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (251 samples, 0.23%)</title><rect x="27.3080%" y="1653" width="0.2338%" height="15" fill="rgb(229,109,25)" fg:x="29320" fg:w="251"/><text x="27.5580%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (251 samples, 0.23%)</title><rect x="27.3080%" y="1637" width="0.2338%" height="15" fill="rgb(222,102,25)" fg:x="29320" fg:w="251"/><text x="27.5580%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.03%)</title><rect x="27.5101%" y="1621" width="0.0317%" height="15" fill="rgb(239,211,5)" fg:x="29537" fg:w="34"/><text x="27.7601%" y="1631.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (21 samples, 0.02%)</title><rect x="27.5427%" y="1589" width="0.0196%" height="15" fill="rgb(223,136,26)" fg:x="29572" fg:w="21"/><text x="27.7927%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.02%)</title><rect x="27.5427%" y="1573" width="0.0196%" height="15" fill="rgb(227,30,15)" fg:x="29572" fg:w="21"/><text x="27.7927%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.02%)</title><rect x="27.5427%" y="1557" width="0.0196%" height="15" fill="rgb(247,76,4)" fg:x="29572" fg:w="21"/><text x="27.7927%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.02%)</title><rect x="27.5436%" y="1541" width="0.0186%" height="15" fill="rgb(245,38,48)" fg:x="29573" fg:w="20"/><text x="27.7936%" y="1551.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (20 samples, 0.02%)</title><rect x="27.5436%" y="1525" width="0.0186%" height="15" fill="rgb(210,220,14)" fg:x="29573" fg:w="20"/><text x="27.7936%" y="1535.50"></text></g><g><title>core::ptr::write (20 samples, 0.02%)</title><rect x="27.5436%" y="1509" width="0.0186%" height="15" fill="rgb(224,60,51)" fg:x="29573" fg:w="20"/><text x="27.7936%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (281 samples, 0.26%)</title><rect x="27.3080%" y="1669" width="0.2617%" height="15" fill="rgb(212,133,49)" fg:x="29320" fg:w="281"/><text x="27.5580%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (30 samples, 0.03%)</title><rect x="27.5417%" y="1653" width="0.0279%" height="15" fill="rgb(231,39,22)" fg:x="29571" fg:w="30"/><text x="27.7917%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30 samples, 0.03%)</title><rect x="27.5417%" y="1637" width="0.0279%" height="15" fill="rgb(236,173,22)" fg:x="29571" fg:w="30"/><text x="27.7917%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (30 samples, 0.03%)</title><rect x="27.5417%" y="1621" width="0.0279%" height="15" fill="rgb(210,70,0)" fg:x="29571" fg:w="30"/><text x="27.7917%" y="1631.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (30 samples, 0.03%)</title><rect x="27.5417%" y="1605" width="0.0279%" height="15" fill="rgb(215,170,11)" fg:x="29571" fg:w="30"/><text x="27.7917%" y="1615.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (17 samples, 0.02%)</title><rect x="27.5743%" y="1669" width="0.0158%" height="15" fill="rgb(220,154,28)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1679.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="27.5743%" y="1653" width="0.0158%" height="15" fill="rgb(240,160,41)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="27.5743%" y="1637" width="0.0158%" height="15" fill="rgb(243,215,41)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1647.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="27.5743%" y="1621" width="0.0158%" height="15" fill="rgb(214,208,31)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="27.5743%" y="1605" width="0.0158%" height="15" fill="rgb(247,57,22)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="27.5743%" y="1589" width="0.0158%" height="15" fill="rgb(228,73,52)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="27.5743%" y="1573" width="0.0158%" height="15" fill="rgb(252,60,9)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1583.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="27.5743%" y="1557" width="0.0158%" height="15" fill="rgb(233,9,51)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1567.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="27.5743%" y="1541" width="0.0158%" height="15" fill="rgb(223,67,14)" fg:x="29606" fg:w="17"/><text x="27.8243%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.01%)</title><rect x="27.5976%" y="1621" width="0.0112%" height="15" fill="rgb(222,86,2)" fg:x="29631" fg:w="12"/><text x="27.8476%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="27.5976%" y="1605" width="0.0112%" height="15" fill="rgb(243,58,54)" fg:x="29631" fg:w="12"/><text x="27.8476%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="27.5985%" y="1589" width="0.0102%" height="15" fill="rgb(210,200,39)" fg:x="29632" fg:w="11"/><text x="27.8485%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="27.5985%" y="1573" width="0.0102%" height="15" fill="rgb(238,135,9)" fg:x="29632" fg:w="11"/><text x="27.8485%" y="1583.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (22 samples, 0.02%)</title><rect x="27.5902%" y="1637" width="0.0205%" height="15" fill="rgb(232,179,7)" fg:x="29623" fg:w="22"/><text x="27.8402%" y="1647.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1973" width="5.5957%" height="15" fill="rgb(245,65,41)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1983.50">aptos_v..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1957" width="5.5957%" height="15" fill="rgb(227,43,8)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1967.50">move_vm..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1941" width="5.5957%" height="15" fill="rgb(235,91,14)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1951.50">move_vm..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1925" width="5.5957%" height="15" fill="rgb(235,219,31)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1935.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1909" width="5.5957%" height="15" fill="rgb(227,121,25)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1919.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1893" width="5.5957%" height="15" fill="rgb(254,129,24)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1903.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1877" width="5.5957%" height="15" fill="rgb(226,144,49)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1887.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (6,008 samples, 5.60%)</title><rect x="22.0168%" y="1861" width="5.5957%" height="15" fill="rgb(214,187,32)" fg:x="23639" fg:w="6008"/><text x="22.2668%" y="1871.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (2,821 samples, 2.63%)</title><rect x="24.9851%" y="1845" width="2.6274%" height="15" fill="rgb(243,129,46)" fg:x="26826" fg:w="2821"/><text x="25.2351%" y="1855.50">mo..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (2,821 samples, 2.63%)</title><rect x="24.9851%" y="1829" width="2.6274%" height="15" fill="rgb(221,185,35)" fg:x="26826" fg:w="2821"/><text x="25.2351%" y="1839.50">mo..</text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (2,821 samples, 2.63%)</title><rect x="24.9851%" y="1813" width="2.6274%" height="15" fill="rgb(205,0,32)" fg:x="26826" fg:w="2821"/><text x="25.2351%" y="1823.50">&lt;m..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (327 samples, 0.30%)</title><rect x="27.3080%" y="1797" width="0.3046%" height="15" fill="rgb(229,179,12)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1807.50"></text></g><g><title>bcs::de::from_bytes_seed (327 samples, 0.30%)</title><rect x="27.3080%" y="1781" width="0.3046%" height="15" fill="rgb(252,107,19)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (327 samples, 0.30%)</title><rect x="27.3080%" y="1765" width="0.3046%" height="15" fill="rgb(220,95,27)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (327 samples, 0.30%)</title><rect x="27.3080%" y="1749" width="0.3046%" height="15" fill="rgb(240,113,40)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1759.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (327 samples, 0.30%)</title><rect x="27.3080%" y="1733" width="0.3046%" height="15" fill="rgb(208,4,43)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (327 samples, 0.30%)</title><rect x="27.3080%" y="1717" width="0.3046%" height="15" fill="rgb(247,189,30)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1727.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (327 samples, 0.30%)</title><rect x="27.3080%" y="1701" width="0.3046%" height="15" fill="rgb(231,157,17)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (327 samples, 0.30%)</title><rect x="27.3080%" y="1685" width="0.3046%" height="15" fill="rgb(224,139,6)" fg:x="29320" fg:w="327"/><text x="27.5580%" y="1695.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (24 samples, 0.02%)</title><rect x="27.5902%" y="1669" width="0.0224%" height="15" fill="rgb(223,83,16)" fg:x="29623" fg:w="24"/><text x="27.8402%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (24 samples, 0.02%)</title><rect x="27.5902%" y="1653" width="0.0224%" height="15" fill="rgb(232,211,20)" fg:x="29623" fg:w="24"/><text x="27.8402%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.04%)</title><rect x="27.6516%" y="1525" width="0.0354%" height="15" fill="rgb(225,203,35)" fg:x="29689" fg:w="38"/><text x="27.9016%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (37 samples, 0.03%)</title><rect x="27.6526%" y="1509" width="0.0345%" height="15" fill="rgb(215,211,44)" fg:x="29690" fg:w="37"/><text x="27.9026%" y="1519.50"></text></g><g><title>alloc::alloc::Global::grow_impl (37 samples, 0.03%)</title><rect x="27.6526%" y="1493" width="0.0345%" height="15" fill="rgb(248,213,26)" fg:x="29690" fg:w="37"/><text x="27.9026%" y="1503.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.03%)</title><rect x="27.6526%" y="1477" width="0.0345%" height="15" fill="rgb(214,23,52)" fg:x="29690" fg:w="37"/><text x="27.9026%" y="1487.50"></text></g><g><title>realloc (35 samples, 0.03%)</title><rect x="27.6544%" y="1461" width="0.0326%" height="15" fill="rgb(225,173,50)" fg:x="29692" fg:w="35"/><text x="27.9044%" y="1471.50"></text></g><g><title>[libc.so.6] (31 samples, 0.03%)</title><rect x="27.6581%" y="1445" width="0.0289%" height="15" fill="rgb(206,150,22)" fg:x="29696" fg:w="31"/><text x="27.9081%" y="1455.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="27.6619%" y="1429" width="0.0251%" height="15" fill="rgb(239,64,23)" fg:x="29700" fg:w="27"/><text x="27.9119%" y="1439.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (44 samples, 0.04%)</title><rect x="27.6470%" y="1669" width="0.0410%" height="15" fill="rgb(242,50,38)" fg:x="29684" fg:w="44"/><text x="27.8970%" y="1679.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (44 samples, 0.04%)</title><rect x="27.6470%" y="1653" width="0.0410%" height="15" fill="rgb(217,91,15)" fg:x="29684" fg:w="44"/><text x="27.8970%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (44 samples, 0.04%)</title><rect x="27.6470%" y="1637" width="0.0410%" height="15" fill="rgb(230,172,6)" fg:x="29684" fg:w="44"/><text x="27.8970%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (44 samples, 0.04%)</title><rect x="27.6470%" y="1621" width="0.0410%" height="15" fill="rgb(221,98,26)" fg:x="29684" fg:w="44"/><text x="27.8970%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (44 samples, 0.04%)</title><rect x="27.6470%" y="1605" width="0.0410%" height="15" fill="rgb(227,210,45)" fg:x="29684" fg:w="44"/><text x="27.8970%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (42 samples, 0.04%)</title><rect x="27.6488%" y="1589" width="0.0391%" height="15" fill="rgb(206,8,30)" fg:x="29686" fg:w="42"/><text x="27.8988%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.04%)</title><rect x="27.6488%" y="1573" width="0.0391%" height="15" fill="rgb(241,219,17)" fg:x="29686" fg:w="42"/><text x="27.8988%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.04%)</title><rect x="27.6498%" y="1557" width="0.0382%" height="15" fill="rgb(247,121,29)" fg:x="29687" fg:w="41"/><text x="27.8998%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.04%)</title><rect x="27.6516%" y="1541" width="0.0363%" height="15" fill="rgb(219,169,49)" fg:x="29689" fg:w="39"/><text x="27.9016%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.03%)</title><rect x="27.6954%" y="1509" width="0.0345%" height="15" fill="rgb(253,49,49)" fg:x="29736" fg:w="37"/><text x="27.9454%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.03%)</title><rect x="27.6954%" y="1493" width="0.0345%" height="15" fill="rgb(217,178,3)" fg:x="29736" fg:w="37"/><text x="27.9454%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect x="27.7047%" y="1477" width="0.0251%" height="15" fill="rgb(234,73,37)" fg:x="29746" fg:w="27"/><text x="27.9547%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.03%)</title><rect x="27.7047%" y="1461" width="0.0251%" height="15" fill="rgb(250,98,22)" fg:x="29746" fg:w="27"/><text x="27.9547%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.02%)</title><rect x="27.7056%" y="1445" width="0.0242%" height="15" fill="rgb(220,108,37)" fg:x="29747" fg:w="26"/><text x="27.9556%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.02%)</title><rect x="27.7066%" y="1429" width="0.0233%" height="15" fill="rgb(225,168,10)" fg:x="29748" fg:w="25"/><text x="27.9566%" y="1439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.02%)</title><rect x="27.7066%" y="1413" width="0.0233%" height="15" fill="rgb(247,215,21)" fg:x="29748" fg:w="25"/><text x="27.9566%" y="1423.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.02%)</title><rect x="27.7066%" y="1397" width="0.0233%" height="15" fill="rgb(253,189,31)" fg:x="29748" fg:w="25"/><text x="27.9566%" y="1407.50"></text></g><g><title>realloc (24 samples, 0.02%)</title><rect x="27.7075%" y="1381" width="0.0224%" height="15" fill="rgb(241,54,22)" fg:x="29749" fg:w="24"/><text x="27.9575%" y="1391.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="27.7112%" y="1365" width="0.0186%" height="15" fill="rgb(211,87,4)" fg:x="29753" fg:w="20"/><text x="27.9612%" y="1375.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="27.7150%" y="1349" width="0.0149%" height="15" fill="rgb(245,112,24)" fg:x="29757" fg:w="16"/><text x="27.9650%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (59 samples, 0.05%)</title><rect x="27.6889%" y="1621" width="0.0550%" height="15" fill="rgb(235,190,41)" fg:x="29729" fg:w="59"/><text x="27.9389%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (59 samples, 0.05%)</title><rect x="27.6889%" y="1605" width="0.0550%" height="15" fill="rgb(214,89,8)" fg:x="29729" fg:w="59"/><text x="27.9389%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (59 samples, 0.05%)</title><rect x="27.6889%" y="1589" width="0.0550%" height="15" fill="rgb(249,155,35)" fg:x="29729" fg:w="59"/><text x="27.9389%" y="1599.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (59 samples, 0.05%)</title><rect x="27.6889%" y="1573" width="0.0550%" height="15" fill="rgb(249,88,26)" fg:x="29729" fg:w="59"/><text x="27.9389%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (59 samples, 0.05%)</title><rect x="27.6889%" y="1557" width="0.0550%" height="15" fill="rgb(232,56,8)" fg:x="29729" fg:w="59"/><text x="27.9389%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (59 samples, 0.05%)</title><rect x="27.6889%" y="1541" width="0.0550%" height="15" fill="rgb(240,95,3)" fg:x="29729" fg:w="59"/><text x="27.9389%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (59 samples, 0.05%)</title><rect x="27.6889%" y="1525" width="0.0550%" height="15" fill="rgb(222,44,28)" fg:x="29729" fg:w="59"/><text x="27.9389%" y="1535.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="27.7299%" y="1509" width="0.0140%" height="15" fill="rgb(234,16,30)" fg:x="29773" fg:w="15"/><text x="27.9799%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (125 samples, 0.12%)</title><rect x="27.6330%" y="1701" width="0.1164%" height="15" fill="rgb(223,26,17)" fg:x="29669" fg:w="125"/><text x="27.8830%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (122 samples, 0.11%)</title><rect x="27.6358%" y="1685" width="0.1136%" height="15" fill="rgb(239,187,47)" fg:x="29672" fg:w="122"/><text x="27.8858%" y="1695.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (66 samples, 0.06%)</title><rect x="27.6880%" y="1669" width="0.0615%" height="15" fill="rgb(247,102,50)" fg:x="29728" fg:w="66"/><text x="27.9380%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (66 samples, 0.06%)</title><rect x="27.6880%" y="1653" width="0.0615%" height="15" fill="rgb(231,216,22)" fg:x="29728" fg:w="66"/><text x="27.9380%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (65 samples, 0.06%)</title><rect x="27.6889%" y="1637" width="0.0605%" height="15" fill="rgb(216,201,26)" fg:x="29729" fg:w="65"/><text x="27.9389%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (129 samples, 0.12%)</title><rect x="27.6302%" y="1717" width="0.1201%" height="15" fill="rgb(214,186,23)" fg:x="29666" fg:w="129"/><text x="27.8802%" y="1727.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::success_transaction_cleanup (6,173 samples, 5.75%)</title><rect x="22.0168%" y="1989" width="5.7494%" height="15" fill="rgb(235,184,4)" fg:x="23639" fg:w="6173"/><text x="22.2668%" y="1999.50">aptos_v..</text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::finish (165 samples, 0.15%)</title><rect x="27.6125%" y="1973" width="0.1537%" height="15" fill="rgb(244,46,17)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1983.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (165 samples, 0.15%)</title><rect x="27.6125%" y="1957" width="0.1537%" height="15" fill="rgb(248,74,46)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1967.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (165 samples, 0.15%)</title><rect x="27.6125%" y="1941" width="0.1537%" height="15" fill="rgb(243,79,5)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1951.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1925" width="0.1537%" height="15" fill="rgb(213,148,1)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1935.50"></text></g><g><title>bcs::ser::to_bytes (165 samples, 0.15%)</title><rect x="27.6125%" y="1909" width="0.1537%" height="15" fill="rgb(221,30,0)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1919.50"></text></g><g><title>bcs::ser::serialize_into (165 samples, 0.15%)</title><rect x="27.6125%" y="1893" width="0.1537%" height="15" fill="rgb(207,85,29)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1903.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1877" width="0.1537%" height="15" fill="rgb(239,31,46)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1887.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1861" width="0.1537%" height="15" fill="rgb(219,6,1)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1871.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (165 samples, 0.15%)</title><rect x="27.6125%" y="1845" width="0.1537%" height="15" fill="rgb(229,90,29)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1855.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1829" width="0.1537%" height="15" fill="rgb(242,201,42)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1839.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1813" width="0.1537%" height="15" fill="rgb(243,80,54)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1823.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (165 samples, 0.15%)</title><rect x="27.6125%" y="1797" width="0.1537%" height="15" fill="rgb(223,166,15)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1781" width="0.1537%" height="15" fill="rgb(238,78,27)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1765" width="0.1537%" height="15" fill="rgb(235,28,43)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (165 samples, 0.15%)</title><rect x="27.6125%" y="1749" width="0.1537%" height="15" fill="rgb(240,210,28)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (165 samples, 0.15%)</title><rect x="27.6125%" y="1733" width="0.1537%" height="15" fill="rgb(253,6,46)" fg:x="29647" fg:w="165"/><text x="27.8625%" y="1743.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (15 samples, 0.01%)</title><rect x="27.7522%" y="1717" width="0.0140%" height="15" fill="rgb(250,159,47)" fg:x="29797" fg:w="15"/><text x="28.0022%" y="1727.50"></text></g><g><title>serde::ser::Serializer::collect_seq (15 samples, 0.01%)</title><rect x="27.7522%" y="1701" width="0.0140%" height="15" fill="rgb(216,139,2)" fg:x="29797" fg:w="15"/><text x="28.0022%" y="1711.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (166 samples, 0.15%)</title><rect x="27.7708%" y="1557" width="0.1546%" height="15" fill="rgb(221,124,44)" fg:x="29817" fg:w="166"/><text x="28.0208%" y="1567.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (166 samples, 0.15%)</title><rect x="27.7708%" y="1541" width="0.1546%" height="15" fill="rgb(205,37,22)" fg:x="29817" fg:w="166"/><text x="28.0208%" y="1551.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (166 samples, 0.15%)</title><rect x="27.7708%" y="1525" width="0.1546%" height="15" fill="rgb(250,55,8)" fg:x="29817" fg:w="166"/><text x="28.0208%" y="1535.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (164 samples, 0.15%)</title><rect x="27.7727%" y="1509" width="0.1527%" height="15" fill="rgb(215,83,48)" fg:x="29819" fg:w="164"/><text x="28.0227%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.02%)</title><rect x="27.9022%" y="1493" width="0.0233%" height="15" fill="rgb(253,2,32)" fg:x="29958" fg:w="25"/><text x="28.1522%" y="1503.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (174 samples, 0.16%)</title><rect x="27.7662%" y="1605" width="0.1621%" height="15" fill="rgb(236,67,28)" fg:x="29812" fg:w="174"/><text x="28.0162%" y="1615.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (170 samples, 0.16%)</title><rect x="27.7699%" y="1589" width="0.1583%" height="15" fill="rgb(252,55,15)" fg:x="29816" fg:w="170"/><text x="28.0199%" y="1599.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (170 samples, 0.16%)</title><rect x="27.7699%" y="1573" width="0.1583%" height="15" fill="rgb(243,173,17)" fg:x="29816" fg:w="170"/><text x="28.0199%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (175 samples, 0.16%)</title><rect x="27.7662%" y="1637" width="0.1630%" height="15" fill="rgb(215,212,13)" fg:x="29812" fg:w="175"/><text x="28.0162%" y="1647.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (175 samples, 0.16%)</title><rect x="27.7662%" y="1621" width="0.1630%" height="15" fill="rgb(253,176,6)" fg:x="29812" fg:w="175"/><text x="28.0162%" y="1631.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (10,827 samples, 10.08%)</title><rect x="17.8526%" y="2053" width="10.0840%" height="15" fill="rgb(236,105,26)" fg:x="19168" fg:w="10827"/><text x="18.1026%" y="2063.50">&lt;aptos_vm::bloc..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (10,827 samples, 10.08%)</title><rect x="17.8526%" y="2037" width="10.0840%" height="15" fill="rgb(239,226,32)" fg:x="19168" fg:w="10827"/><text x="18.1026%" y="2047.50">&lt;aptos_vm::apto..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (10,827 samples, 10.08%)</title><rect x="17.8526%" y="2021" width="10.0840%" height="15" fill="rgb(236,104,51)" fg:x="19168" fg:w="10827"/><text x="18.1026%" y="2031.50">aptos_vm::aptos..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (6,356 samples, 5.92%)</title><rect x="22.0168%" y="2005" width="5.9198%" height="15" fill="rgb(220,172,33)" fg:x="23639" fg:w="6356"/><text x="22.2668%" y="2015.50">aptos_vm..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (183 samples, 0.17%)</title><rect x="27.7662%" y="1989" width="0.1704%" height="15" fill="rgb(224,182,25)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1999.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (183 samples, 0.17%)</title><rect x="27.7662%" y="1973" width="0.1704%" height="15" fill="rgb(236,184,24)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1983.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (183 samples, 0.17%)</title><rect x="27.7662%" y="1957" width="0.1704%" height="15" fill="rgb(241,221,14)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1967.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (183 samples, 0.17%)</title><rect x="27.7662%" y="1941" width="0.1704%" height="15" fill="rgb(227,146,5)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1951.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (183 samples, 0.17%)</title><rect x="27.7662%" y="1925" width="0.1704%" height="15" fill="rgb(214,15,23)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1935.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (183 samples, 0.17%)</title><rect x="27.7662%" y="1909" width="0.1704%" height="15" fill="rgb(233,157,31)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1919.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (183 samples, 0.17%)</title><rect x="27.7662%" y="1893" width="0.1704%" height="15" fill="rgb(211,27,52)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1903.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (183 samples, 0.17%)</title><rect x="27.7662%" y="1877" width="0.1704%" height="15" fill="rgb(212,223,15)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1887.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (183 samples, 0.17%)</title><rect x="27.7662%" y="1861" width="0.1704%" height="15" fill="rgb(254,211,0)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1871.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (183 samples, 0.17%)</title><rect x="27.7662%" y="1845" width="0.1704%" height="15" fill="rgb(205,43,38)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1855.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (183 samples, 0.17%)</title><rect x="27.7662%" y="1829" width="0.1704%" height="15" fill="rgb(242,206,46)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1839.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (183 samples, 0.17%)</title><rect x="27.7662%" y="1813" width="0.1704%" height="15" fill="rgb(220,221,12)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1823.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (183 samples, 0.17%)</title><rect x="27.7662%" y="1797" width="0.1704%" height="15" fill="rgb(217,156,35)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1807.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (183 samples, 0.17%)</title><rect x="27.7662%" y="1781" width="0.1704%" height="15" fill="rgb(207,181,49)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1791.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (183 samples, 0.17%)</title><rect x="27.7662%" y="1765" width="0.1704%" height="15" fill="rgb(235,103,47)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1775.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (183 samples, 0.17%)</title><rect x="27.7662%" y="1749" width="0.1704%" height="15" fill="rgb(222,63,28)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1759.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (183 samples, 0.17%)</title><rect x="27.7662%" y="1733" width="0.1704%" height="15" fill="rgb(244,137,21)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1743.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (183 samples, 0.17%)</title><rect x="27.7662%" y="1717" width="0.1704%" height="15" fill="rgb(228,35,27)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (183 samples, 0.17%)</title><rect x="27.7662%" y="1701" width="0.1704%" height="15" fill="rgb(226,191,41)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1711.50"></text></g><g><title>core::ops::function::FnOnce::call_once (183 samples, 0.17%)</title><rect x="27.7662%" y="1685" width="0.1704%" height="15" fill="rgb(210,154,3)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1695.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (183 samples, 0.17%)</title><rect x="27.7662%" y="1669" width="0.1704%" height="15" fill="rgb(216,60,49)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1679.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (183 samples, 0.17%)</title><rect x="27.7662%" y="1653" width="0.1704%" height="15" fill="rgb(226,17,20)" fg:x="29812" fg:w="183"/><text x="28.0162%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (16 samples, 0.01%)</title><rect x="27.9515%" y="1845" width="0.0149%" height="15" fill="rgb(206,115,35)" fg:x="30011" fg:w="16"/><text x="28.2015%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (16 samples, 0.01%)</title><rect x="27.9515%" y="1829" width="0.0149%" height="15" fill="rgb(227,88,1)" fg:x="30011" fg:w="16"/><text x="28.2015%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (16 samples, 0.01%)</title><rect x="27.9515%" y="1813" width="0.0149%" height="15" fill="rgb(230,222,24)" fg:x="30011" fg:w="16"/><text x="28.2015%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (16 samples, 0.01%)</title><rect x="27.9515%" y="1797" width="0.0149%" height="15" fill="rgb(214,124,32)" fg:x="30011" fg:w="16"/><text x="28.2015%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (16 samples, 0.01%)</title><rect x="27.9515%" y="1781" width="0.0149%" height="15" fill="rgb(240,41,36)" fg:x="30011" fg:w="16"/><text x="28.2015%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (11 samples, 0.01%)</title><rect x="27.9562%" y="1765" width="0.0102%" height="15" fill="rgb(221,17,52)" fg:x="30016" fg:w="11"/><text x="28.2062%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (21 samples, 0.02%)</title><rect x="27.9515%" y="1877" width="0.0196%" height="15" fill="rgb(252,70,16)" fg:x="30011" fg:w="21"/><text x="28.2015%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (21 samples, 0.02%)</title><rect x="27.9515%" y="1861" width="0.0196%" height="15" fill="rgb(250,177,4)" fg:x="30011" fg:w="21"/><text x="28.2015%" y="1871.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (28 samples, 0.03%)</title><rect x="27.9515%" y="1973" width="0.0261%" height="15" fill="rgb(240,188,47)" fg:x="30011" fg:w="28"/><text x="28.2015%" y="1983.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (28 samples, 0.03%)</title><rect x="27.9515%" y="1957" width="0.0261%" height="15" fill="rgb(215,92,12)" fg:x="30011" fg:w="28"/><text x="28.2015%" y="1967.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (28 samples, 0.03%)</title><rect x="27.9515%" y="1941" width="0.0261%" height="15" fill="rgb(242,110,29)" fg:x="30011" fg:w="28"/><text x="28.2015%" y="1951.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (28 samples, 0.03%)</title><rect x="27.9515%" y="1925" width="0.0261%" height="15" fill="rgb(208,211,26)" fg:x="30011" fg:w="28"/><text x="28.2015%" y="1935.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (28 samples, 0.03%)</title><rect x="27.9515%" y="1909" width="0.0261%" height="15" fill="rgb(244,147,6)" fg:x="30011" fg:w="28"/><text x="28.2015%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (28 samples, 0.03%)</title><rect x="27.9515%" y="1893" width="0.0261%" height="15" fill="rgb(211,130,42)" fg:x="30011" fg:w="28"/><text x="28.2015%" y="1903.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (37 samples, 0.03%)</title><rect x="27.9515%" y="1989" width="0.0345%" height="15" fill="rgb(220,63,1)" fg:x="30011" fg:w="37"/><text x="28.2015%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="27.9897%" y="1861" width="0.0112%" height="15" fill="rgb(241,212,30)" fg:x="30052" fg:w="12"/><text x="28.2397%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="27.9897%" y="1845" width="0.0112%" height="15" fill="rgb(233,153,17)" fg:x="30052" fg:w="12"/><text x="28.2397%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.01%)</title><rect x="27.9897%" y="1829" width="0.0112%" height="15" fill="rgb(236,3,10)" fg:x="30052" fg:w="12"/><text x="28.2397%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (14 samples, 0.01%)</title><rect x="27.9897%" y="1877" width="0.0130%" height="15" fill="rgb(232,41,21)" fg:x="30052" fg:w="14"/><text x="28.2397%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="28.0028%" y="1861" width="0.0158%" height="15" fill="rgb(206,63,51)" fg:x="30066" fg:w="17"/><text x="28.2528%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="28.0028%" y="1845" width="0.0158%" height="15" fill="rgb(250,214,3)" fg:x="30066" fg:w="17"/><text x="28.2528%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 0.02%)</title><rect x="28.0028%" y="1829" width="0.0158%" height="15" fill="rgb(254,89,27)" fg:x="30066" fg:w="17"/><text x="28.2528%" y="1839.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="28.0186%" y="1797" width="0.0149%" height="15" fill="rgb(249,41,14)" fg:x="30083" fg:w="16"/><text x="28.2686%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (14 samples, 0.01%)</title><rect x="28.0205%" y="1781" width="0.0130%" height="15" fill="rgb(221,196,51)" fg:x="30085" fg:w="14"/><text x="28.2705%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (14 samples, 0.01%)</title><rect x="28.0205%" y="1765" width="0.0130%" height="15" fill="rgb(214,116,26)" fg:x="30085" fg:w="14"/><text x="28.2705%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (14 samples, 0.01%)</title><rect x="28.0205%" y="1749" width="0.0130%" height="15" fill="rgb(236,67,7)" fg:x="30085" fg:w="14"/><text x="28.2705%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="28.0186%" y="1829" width="0.0205%" height="15" fill="rgb(253,179,32)" fg:x="30083" fg:w="22"/><text x="28.2686%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="28.0186%" y="1813" width="0.0205%" height="15" fill="rgb(218,33,15)" fg:x="30083" fg:w="22"/><text x="28.2686%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="28.0391%" y="1813" width="0.0102%" height="15" fill="rgb(217,202,41)" fg:x="30105" fg:w="11"/><text x="28.2891%" y="1823.50"></text></g><g><title>core::mem::drop (34 samples, 0.03%)</title><rect x="28.0186%" y="1861" width="0.0317%" height="15" fill="rgb(234,133,5)" fg:x="30083" fg:w="34"/><text x="28.2686%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (34 samples, 0.03%)</title><rect x="28.0186%" y="1845" width="0.0317%" height="15" fill="rgb(240,47,40)" fg:x="30083" fg:w="34"/><text x="28.2686%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="28.0391%" y="1829" width="0.0112%" height="15" fill="rgb(234,166,26)" fg:x="30105" fg:w="12"/><text x="28.2891%" y="1839.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (67 samples, 0.06%)</title><rect x="27.9897%" y="1909" width="0.0624%" height="15" fill="rgb(244,125,51)" fg:x="30052" fg:w="67"/><text x="28.2397%" y="1919.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (67 samples, 0.06%)</title><rect x="27.9897%" y="1893" width="0.0624%" height="15" fill="rgb(229,171,11)" fg:x="30052" fg:w="67"/><text x="28.2397%" y="1903.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (53 samples, 0.05%)</title><rect x="28.0028%" y="1877" width="0.0494%" height="15" fill="rgb(224,38,45)" fg:x="30066" fg:w="53"/><text x="28.2528%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="28.0521%" y="1877" width="0.0112%" height="15" fill="rgb(237,27,7)" fg:x="30119" fg:w="12"/><text x="28.3021%" y="1887.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="28.0521%" y="1861" width="0.0112%" height="15" fill="rgb(216,52,7)" fg:x="30119" fg:w="12"/><text x="28.3021%" y="1871.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.01%)</title><rect x="28.0521%" y="1845" width="0.0112%" height="15" fill="rgb(243,11,11)" fg:x="30119" fg:w="12"/><text x="28.3021%" y="1855.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (88 samples, 0.08%)</title><rect x="27.9860%" y="1925" width="0.0820%" height="15" fill="rgb(253,167,20)" fg:x="30048" fg:w="88"/><text x="28.2360%" y="1935.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (17 samples, 0.02%)</title><rect x="28.0521%" y="1909" width="0.0158%" height="15" fill="rgb(215,207,5)" fg:x="30119" fg:w="17"/><text x="28.3021%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (17 samples, 0.02%)</title><rect x="28.0521%" y="1893" width="0.0158%" height="15" fill="rgb(252,127,31)" fg:x="30119" fg:w="17"/><text x="28.3021%" y="1903.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (14 samples, 0.01%)</title><rect x="28.0680%" y="1861" width="0.0130%" height="15" fill="rgb(209,106,27)" fg:x="30136" fg:w="14"/><text x="28.3180%" y="1871.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="28.0810%" y="1861" width="0.0102%" height="15" fill="rgb(214,220,18)" fg:x="30150" fg:w="11"/><text x="28.3310%" y="1871.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (30 samples, 0.03%)</title><rect x="28.0680%" y="1893" width="0.0279%" height="15" fill="rgb(237,89,12)" fg:x="30136" fg:w="30"/><text x="28.3180%" y="1903.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (30 samples, 0.03%)</title><rect x="28.0680%" y="1877" width="0.0279%" height="15" fill="rgb(209,167,36)" fg:x="30136" fg:w="30"/><text x="28.3180%" y="1887.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (54 samples, 0.05%)</title><rect x="28.0680%" y="1925" width="0.0503%" height="15" fill="rgb(243,45,22)" fg:x="30136" fg:w="54"/><text x="28.3180%" y="1935.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (54 samples, 0.05%)</title><rect x="28.0680%" y="1909" width="0.0503%" height="15" fill="rgb(239,2,46)" fg:x="30136" fg:w="54"/><text x="28.3180%" y="1919.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (24 samples, 0.02%)</title><rect x="28.0959%" y="1893" width="0.0224%" height="15" fill="rgb(241,101,0)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1903.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (24 samples, 0.02%)</title><rect x="28.0959%" y="1877" width="0.0224%" height="15" fill="rgb(244,34,31)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.02%)</title><rect x="28.0959%" y="1861" width="0.0224%" height="15" fill="rgb(248,23,22)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (24 samples, 0.02%)</title><rect x="28.0959%" y="1845" width="0.0224%" height="15" fill="rgb(218,27,48)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="28.0959%" y="1829" width="0.0224%" height="15" fill="rgb(232,78,1)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.02%)</title><rect x="28.0959%" y="1813" width="0.0224%" height="15" fill="rgb(233,169,12)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (24 samples, 0.02%)</title><rect x="28.0959%" y="1797" width="0.0224%" height="15" fill="rgb(225,222,54)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (24 samples, 0.02%)</title><rect x="28.0959%" y="1781" width="0.0224%" height="15" fill="rgb(245,126,29)" fg:x="30166" fg:w="24"/><text x="28.3459%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (17 samples, 0.02%)</title><rect x="28.1024%" y="1765" width="0.0158%" height="15" fill="rgb(241,63,48)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (17 samples, 0.02%)</title><rect x="28.1024%" y="1749" width="0.0158%" height="15" fill="rgb(235,126,38)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (17 samples, 0.02%)</title><rect x="28.1024%" y="1733" width="0.0158%" height="15" fill="rgb(232,96,49)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1743.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (17 samples, 0.02%)</title><rect x="28.1024%" y="1717" width="0.0158%" height="15" fill="rgb(211,146,40)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="28.1024%" y="1701" width="0.0158%" height="15" fill="rgb(247,93,44)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="28.1024%" y="1685" width="0.0158%" height="15" fill="rgb(251,41,49)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="28.1024%" y="1669" width="0.0158%" height="15" fill="rgb(218,155,12)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1679.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="28.1024%" y="1653" width="0.0158%" height="15" fill="rgb(221,161,30)" fg:x="30173" fg:w="17"/><text x="28.3524%" y="1663.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="28.1182%" y="1381" width="0.0121%" height="15" fill="rgb(221,179,11)" fg:x="30190" fg:w="13"/><text x="28.3682%" y="1391.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="28.1182%" y="1365" width="0.0121%" height="15" fill="rgb(224,170,48)" fg:x="30190" fg:w="13"/><text x="28.3682%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1621" width="0.0279%" height="15" fill="rgb(223,117,5)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1605" width="0.0279%" height="15" fill="rgb(209,52,20)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1589" width="0.0279%" height="15" fill="rgb(209,19,41)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="28.1182%" y="1573" width="0.0279%" height="15" fill="rgb(210,177,12)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1557" width="0.0279%" height="15" fill="rgb(211,159,37)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1541" width="0.0279%" height="15" fill="rgb(209,20,2)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1525" width="0.0279%" height="15" fill="rgb(244,3,46)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1509" width="0.0279%" height="15" fill="rgb(220,94,38)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="28.1182%" y="1493" width="0.0279%" height="15" fill="rgb(253,14,31)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1477" width="0.0279%" height="15" fill="rgb(234,176,13)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1461" width="0.0279%" height="15" fill="rgb(218,62,25)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1445" width="0.0279%" height="15" fill="rgb(216,124,40)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1429" width="0.0279%" height="15" fill="rgb(228,170,12)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="28.1182%" y="1413" width="0.0279%" height="15" fill="rgb(231,226,5)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (30 samples, 0.03%)</title><rect x="28.1182%" y="1397" width="0.0279%" height="15" fill="rgb(237,122,22)" fg:x="30190" fg:w="30"/><text x="28.3682%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (17 samples, 0.02%)</title><rect x="28.1304%" y="1381" width="0.0158%" height="15" fill="rgb(209,185,25)" fg:x="30203" fg:w="17"/><text x="28.3804%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (14 samples, 0.01%)</title><rect x="28.1331%" y="1365" width="0.0130%" height="15" fill="rgb(228,200,32)" fg:x="30206" fg:w="14"/><text x="28.3831%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (14 samples, 0.01%)</title><rect x="28.1331%" y="1349" width="0.0130%" height="15" fill="rgb(217,140,10)" fg:x="30206" fg:w="14"/><text x="28.3831%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="28.1331%" y="1333" width="0.0130%" height="15" fill="rgb(253,17,24)" fg:x="30206" fg:w="14"/><text x="28.3831%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (14 samples, 0.01%)</title><rect x="28.1331%" y="1317" width="0.0130%" height="15" fill="rgb(212,61,6)" fg:x="30206" fg:w="14"/><text x="28.3831%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (14 samples, 0.01%)</title><rect x="28.1331%" y="1301" width="0.0130%" height="15" fill="rgb(205,14,25)" fg:x="30206" fg:w="14"/><text x="28.3831%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (224 samples, 0.21%)</title><rect x="27.9450%" y="2053" width="0.2086%" height="15" fill="rgb(232,69,41)" fg:x="30004" fg:w="224"/><text x="28.1950%" y="2063.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (217 samples, 0.20%)</title><rect x="27.9515%" y="2037" width="0.2021%" height="15" fill="rgb(241,106,47)" fg:x="30011" fg:w="217"/><text x="28.2015%" y="2047.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (217 samples, 0.20%)</title><rect x="27.9515%" y="2021" width="0.2021%" height="15" fill="rgb(210,213,53)" fg:x="30011" fg:w="217"/><text x="28.2015%" y="2031.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (217 samples, 0.20%)</title><rect x="27.9515%" y="2005" width="0.2021%" height="15" fill="rgb(253,175,27)" fg:x="30011" fg:w="217"/><text x="28.2015%" y="2015.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (180 samples, 0.17%)</title><rect x="27.9860%" y="1989" width="0.1676%" height="15" fill="rgb(211,171,24)" fg:x="30048" fg:w="180"/><text x="28.2360%" y="1999.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (180 samples, 0.17%)</title><rect x="27.9860%" y="1973" width="0.1676%" height="15" fill="rgb(229,80,7)" fg:x="30048" fg:w="180"/><text x="28.2360%" y="1983.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (180 samples, 0.17%)</title><rect x="27.9860%" y="1957" width="0.1676%" height="15" fill="rgb(212,46,39)" fg:x="30048" fg:w="180"/><text x="28.2360%" y="1967.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (180 samples, 0.17%)</title><rect x="27.9860%" y="1941" width="0.1676%" height="15" fill="rgb(240,80,45)" fg:x="30048" fg:w="180"/><text x="28.2360%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1925" width="0.0354%" height="15" fill="rgb(253,177,40)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1909" width="0.0354%" height="15" fill="rgb(249,200,15)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1893" width="0.0354%" height="15" fill="rgb(217,78,26)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1877" width="0.0354%" height="15" fill="rgb(254,151,32)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1861" width="0.0354%" height="15" fill="rgb(226,165,27)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1871.50"></text></g><g><title>core::mem::drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1845" width="0.0354%" height="15" fill="rgb(250,206,4)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1829" width="0.0354%" height="15" fill="rgb(231,229,27)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1813" width="0.0354%" height="15" fill="rgb(239,217,8)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (38 samples, 0.04%)</title><rect x="28.1182%" y="1797" width="0.0354%" height="15" fill="rgb(225,204,27)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1781" width="0.0354%" height="15" fill="rgb(230,56,32)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1765" width="0.0354%" height="15" fill="rgb(222,56,27)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1749" width="0.0354%" height="15" fill="rgb(253,108,27)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1733" width="0.0354%" height="15" fill="rgb(212,87,36)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1743.50"></text></g><g><title>core::mem::drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1717" width="0.0354%" height="15" fill="rgb(247,82,36)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1701" width="0.0354%" height="15" fill="rgb(222,143,9)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1685" width="0.0354%" height="15" fill="rgb(238,162,48)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (38 samples, 0.04%)</title><rect x="28.1182%" y="1669" width="0.0354%" height="15" fill="rgb(221,59,43)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1679.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (38 samples, 0.04%)</title><rect x="28.1182%" y="1653" width="0.0354%" height="15" fill="rgb(205,166,41)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (38 samples, 0.04%)</title><rect x="28.1182%" y="1637" width="0.0354%" height="15" fill="rgb(241,186,40)" fg:x="30190" fg:w="38"/><text x="28.3682%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (29 samples, 0.03%)</title><rect x="28.1695%" y="1637" width="0.0270%" height="15" fill="rgb(216,119,35)" fg:x="30245" fg:w="29"/><text x="28.4195%" y="1647.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (21 samples, 0.02%)</title><rect x="28.1769%" y="1621" width="0.0196%" height="15" fill="rgb(208,68,38)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.02%)</title><rect x="28.1769%" y="1605" width="0.0196%" height="15" fill="rgb(217,113,1)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1615.50"></text></g><g><title>std::panicking::try (21 samples, 0.02%)</title><rect x="28.1769%" y="1589" width="0.0196%" height="15" fill="rgb(242,153,3)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.02%)</title><rect x="28.1769%" y="1573" width="0.0196%" height="15" fill="rgb(229,76,35)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1583.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (21 samples, 0.02%)</title><rect x="28.1769%" y="1557" width="0.0196%" height="15" fill="rgb(229,125,34)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1567.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (21 samples, 0.02%)</title><rect x="28.1769%" y="1541" width="0.0196%" height="15" fill="rgb(238,179,36)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1551.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (21 samples, 0.02%)</title><rect x="28.1769%" y="1525" width="0.0196%" height="15" fill="rgb(244,183,19)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1535.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (21 samples, 0.02%)</title><rect x="28.1769%" y="1509" width="0.0196%" height="15" fill="rgb(216,85,49)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1519.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (21 samples, 0.02%)</title><rect x="28.1769%" y="1493" width="0.0196%" height="15" fill="rgb(208,161,47)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1503.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (21 samples, 0.02%)</title><rect x="28.1769%" y="1477" width="0.0196%" height="15" fill="rgb(233,210,18)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1487.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (21 samples, 0.02%)</title><rect x="28.1769%" y="1461" width="0.0196%" height="15" fill="rgb(205,104,42)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1471.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (21 samples, 0.02%)</title><rect x="28.1769%" y="1445" width="0.0196%" height="15" fill="rgb(248,90,43)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1455.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (21 samples, 0.02%)</title><rect x="28.1769%" y="1429" width="0.0196%" height="15" fill="rgb(206,198,11)" fg:x="30253" fg:w="21"/><text x="28.4269%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (39 samples, 0.04%)</title><rect x="28.1611%" y="1717" width="0.0363%" height="15" fill="rgb(239,165,27)" fg:x="30236" fg:w="39"/><text x="28.4111%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (39 samples, 0.04%)</title><rect x="28.1611%" y="1701" width="0.0363%" height="15" fill="rgb(246,44,32)" fg:x="30236" fg:w="39"/><text x="28.4111%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (39 samples, 0.04%)</title><rect x="28.1611%" y="1685" width="0.0363%" height="15" fill="rgb(252,65,42)" fg:x="30236" fg:w="39"/><text x="28.4111%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (39 samples, 0.04%)</title><rect x="28.1611%" y="1669" width="0.0363%" height="15" fill="rgb(246,197,18)" fg:x="30236" fg:w="39"/><text x="28.4111%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (39 samples, 0.04%)</title><rect x="28.1611%" y="1653" width="0.0363%" height="15" fill="rgb(216,192,4)" fg:x="30236" fg:w="39"/><text x="28.4111%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (46 samples, 0.04%)</title><rect x="28.1611%" y="1749" width="0.0428%" height="15" fill="rgb(208,117,10)" fg:x="30236" fg:w="46"/><text x="28.4111%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (46 samples, 0.04%)</title><rect x="28.1611%" y="1733" width="0.0428%" height="15" fill="rgb(240,61,47)" fg:x="30236" fg:w="46"/><text x="28.4111%" y="1743.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (54 samples, 0.05%)</title><rect x="28.1611%" y="1861" width="0.0503%" height="15" fill="rgb(228,178,21)" fg:x="30236" fg:w="54"/><text x="28.4111%" y="1871.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (54 samples, 0.05%)</title><rect x="28.1611%" y="1845" width="0.0503%" height="15" fill="rgb(219,96,54)" fg:x="30236" fg:w="54"/><text x="28.4111%" y="1855.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (54 samples, 0.05%)</title><rect x="28.1611%" y="1829" width="0.0503%" height="15" fill="rgb(250,177,24)" fg:x="30236" fg:w="54"/><text x="28.4111%" y="1839.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (54 samples, 0.05%)</title><rect x="28.1611%" y="1813" width="0.0503%" height="15" fill="rgb(242,154,46)" fg:x="30236" fg:w="54"/><text x="28.4111%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (54 samples, 0.05%)</title><rect x="28.1611%" y="1797" width="0.0503%" height="15" fill="rgb(226,176,29)" fg:x="30236" fg:w="54"/><text x="28.4111%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (54 samples, 0.05%)</title><rect x="28.1611%" y="1781" width="0.0503%" height="15" fill="rgb(226,29,2)" fg:x="30236" fg:w="54"/><text x="28.4111%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (54 samples, 0.05%)</title><rect x="28.1611%" y="1765" width="0.0503%" height="15" fill="rgb(237,104,14)" fg:x="30236" fg:w="54"/><text x="28.4111%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (16 samples, 0.01%)</title><rect x="28.2114%" y="1749" width="0.0149%" height="15" fill="rgb(245,207,31)" fg:x="30290" fg:w="16"/><text x="28.4614%" y="1759.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (70 samples, 0.07%)</title><rect x="28.2114%" y="1781" width="0.0652%" height="15" fill="rgb(229,211,45)" fg:x="30290" fg:w="70"/><text x="28.4614%" y="1791.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (70 samples, 0.07%)</title><rect x="28.2114%" y="1765" width="0.0652%" height="15" fill="rgb(229,113,15)" fg:x="30290" fg:w="70"/><text x="28.4614%" y="1775.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (54 samples, 0.05%)</title><rect x="28.2263%" y="1749" width="0.0503%" height="15" fill="rgb(237,147,15)" fg:x="30306" fg:w="54"/><text x="28.4763%" y="1759.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (102 samples, 0.10%)</title><rect x="28.2114%" y="1797" width="0.0950%" height="15" fill="rgb(244,120,12)" fg:x="30290" fg:w="102"/><text x="28.4614%" y="1807.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (32 samples, 0.03%)</title><rect x="28.2766%" y="1781" width="0.0298%" height="15" fill="rgb(205,120,12)" fg:x="30360" fg:w="32"/><text x="28.5266%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (32 samples, 0.03%)</title><rect x="28.2766%" y="1765" width="0.0298%" height="15" fill="rgb(231,26,45)" fg:x="30360" fg:w="32"/><text x="28.5266%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (14 samples, 0.01%)</title><rect x="28.2933%" y="1749" width="0.0130%" height="15" fill="rgb(246,98,1)" fg:x="30378" fg:w="14"/><text x="28.5433%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="28.3287%" y="1637" width="0.0112%" height="15" fill="rgb(207,68,45)" fg:x="30416" fg:w="12"/><text x="28.5787%" y="1647.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="28.3287%" y="1621" width="0.0112%" height="15" fill="rgb(231,27,38)" fg:x="30416" fg:w="12"/><text x="28.5787%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (12 samples, 0.01%)</title><rect x="28.3287%" y="1605" width="0.0112%" height="15" fill="rgb(214,223,3)" fg:x="30416" fg:w="12"/><text x="28.5787%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (12 samples, 0.01%)</title><rect x="28.3399%" y="1637" width="0.0112%" height="15" fill="rgb(228,195,46)" fg:x="30428" fg:w="12"/><text x="28.5899%" y="1647.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (12 samples, 0.01%)</title><rect x="28.3399%" y="1621" width="0.0112%" height="15" fill="rgb(231,100,42)" fg:x="30428" fg:w="12"/><text x="28.5899%" y="1631.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.01%)</title><rect x="28.3399%" y="1605" width="0.0112%" height="15" fill="rgb(236,53,4)" fg:x="30428" fg:w="12"/><text x="28.5899%" y="1615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.01%)</title><rect x="28.3399%" y="1589" width="0.0112%" height="15" fill="rgb(230,152,12)" fg:x="30428" fg:w="12"/><text x="28.5899%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (12 samples, 0.01%)</title><rect x="28.3520%" y="1621" width="0.0112%" height="15" fill="rgb(226,101,19)" fg:x="30441" fg:w="12"/><text x="28.6020%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (13 samples, 0.01%)</title><rect x="28.3520%" y="1637" width="0.0121%" height="15" fill="rgb(250,149,32)" fg:x="30441" fg:w="13"/><text x="28.6020%" y="1647.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.02%)</title><rect x="28.3716%" y="1589" width="0.0168%" height="15" fill="rgb(232,178,12)" fg:x="30462" fg:w="18"/><text x="28.6216%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="28.3716%" y="1573" width="0.0168%" height="15" fill="rgb(246,151,17)" fg:x="30462" fg:w="18"/><text x="28.6216%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="28.3716%" y="1557" width="0.0168%" height="15" fill="rgb(252,17,51)" fg:x="30462" fg:w="18"/><text x="28.6216%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="28.3716%" y="1541" width="0.0168%" height="15" fill="rgb(250,207,23)" fg:x="30462" fg:w="18"/><text x="28.6216%" y="1551.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="28.3781%" y="1525" width="0.0102%" height="15" fill="rgb(205,27,5)" fg:x="30469" fg:w="11"/><text x="28.6281%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (19 samples, 0.02%)</title><rect x="28.3716%" y="1605" width="0.0177%" height="15" fill="rgb(224,32,19)" fg:x="30462" fg:w="19"/><text x="28.6216%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (82 samples, 0.08%)</title><rect x="28.3138%" y="1653" width="0.0764%" height="15" fill="rgb(247,214,40)" fg:x="30400" fg:w="82"/><text x="28.5638%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (28 samples, 0.03%)</title><rect x="28.3641%" y="1637" width="0.0261%" height="15" fill="rgb(239,199,17)" fg:x="30454" fg:w="28"/><text x="28.6141%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (28 samples, 0.03%)</title><rect x="28.3641%" y="1621" width="0.0261%" height="15" fill="rgb(251,159,9)" fg:x="30454" fg:w="28"/><text x="28.6141%" y="1631.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (91 samples, 0.08%)</title><rect x="28.3064%" y="1797" width="0.0848%" height="15" fill="rgb(225,78,32)" fg:x="30392" fg:w="91"/><text x="28.5564%" y="1807.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (91 samples, 0.08%)</title><rect x="28.3064%" y="1781" width="0.0848%" height="15" fill="rgb(206,97,47)" fg:x="30392" fg:w="91"/><text x="28.5564%" y="1791.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (87 samples, 0.08%)</title><rect x="28.3101%" y="1765" width="0.0810%" height="15" fill="rgb(227,107,4)" fg:x="30396" fg:w="87"/><text x="28.5601%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (87 samples, 0.08%)</title><rect x="28.3101%" y="1749" width="0.0810%" height="15" fill="rgb(241,146,50)" fg:x="30396" fg:w="87"/><text x="28.5601%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (87 samples, 0.08%)</title><rect x="28.3101%" y="1733" width="0.0810%" height="15" fill="rgb(232,92,30)" fg:x="30396" fg:w="87"/><text x="28.5601%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (87 samples, 0.08%)</title><rect x="28.3101%" y="1717" width="0.0810%" height="15" fill="rgb(222,0,40)" fg:x="30396" fg:w="87"/><text x="28.5601%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (87 samples, 0.08%)</title><rect x="28.3101%" y="1701" width="0.0810%" height="15" fill="rgb(219,54,33)" fg:x="30396" fg:w="87"/><text x="28.5601%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (87 samples, 0.08%)</title><rect x="28.3101%" y="1685" width="0.0810%" height="15" fill="rgb(226,209,28)" fg:x="30396" fg:w="87"/><text x="28.5601%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (87 samples, 0.08%)</title><rect x="28.3101%" y="1669" width="0.0810%" height="15" fill="rgb(254,205,35)" fg:x="30396" fg:w="87"/><text x="28.5601%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1493" width="0.0317%" height="15" fill="rgb(230,159,3)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1477" width="0.0317%" height="15" fill="rgb(232,190,24)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1461" width="0.0317%" height="15" fill="rgb(217,227,44)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="28.3911%" y="1445" width="0.0317%" height="15" fill="rgb(236,211,1)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1429" width="0.0317%" height="15" fill="rgb(250,127,46)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1413" width="0.0317%" height="15" fill="rgb(229,213,6)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1397" width="0.0317%" height="15" fill="rgb(237,15,36)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1381" width="0.0317%" height="15" fill="rgb(213,131,41)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="28.3911%" y="1365" width="0.0317%" height="15" fill="rgb(225,82,44)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (34 samples, 0.03%)</title><rect x="28.3911%" y="1349" width="0.0317%" height="15" fill="rgb(249,42,11)" fg:x="30483" fg:w="34"/><text x="28.6411%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (24 samples, 0.02%)</title><rect x="28.4005%" y="1333" width="0.0224%" height="15" fill="rgb(253,11,29)" fg:x="30493" fg:w="24"/><text x="28.6505%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (24 samples, 0.02%)</title><rect x="28.4005%" y="1317" width="0.0224%" height="15" fill="rgb(206,8,54)" fg:x="30493" fg:w="24"/><text x="28.6505%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (24 samples, 0.02%)</title><rect x="28.4005%" y="1301" width="0.0224%" height="15" fill="rgb(222,186,2)" fg:x="30493" fg:w="24"/><text x="28.6505%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="28.4005%" y="1285" width="0.0224%" height="15" fill="rgb(221,206,53)" fg:x="30493" fg:w="24"/><text x="28.6505%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (24 samples, 0.02%)</title><rect x="28.4005%" y="1269" width="0.0224%" height="15" fill="rgb(230,150,21)" fg:x="30493" fg:w="24"/><text x="28.6505%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (17 samples, 0.02%)</title><rect x="28.4070%" y="1253" width="0.0158%" height="15" fill="rgb(253,202,10)" fg:x="30500" fg:w="17"/><text x="28.6570%" y="1263.50"></text></g><g><title>cfree (44 samples, 0.04%)</title><rect x="28.4228%" y="1333" width="0.0410%" height="15" fill="rgb(238,109,40)" fg:x="30517" fg:w="44"/><text x="28.6728%" y="1343.50"></text></g><g><title>[libc.so.6] (44 samples, 0.04%)</title><rect x="28.4228%" y="1317" width="0.0410%" height="15" fill="rgb(247,120,22)" fg:x="30517" fg:w="44"/><text x="28.6728%" y="1327.50"></text></g><g><title>cfree (32 samples, 0.03%)</title><rect x="28.4731%" y="1205" width="0.0298%" height="15" fill="rgb(207,43,30)" fg:x="30571" fg:w="32"/><text x="28.7231%" y="1215.50"></text></g><g><title>[libc.so.6] (32 samples, 0.03%)</title><rect x="28.4731%" y="1189" width="0.0298%" height="15" fill="rgb(213,211,24)" fg:x="30571" fg:w="32"/><text x="28.7231%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (386 samples, 0.36%)</title><rect x="28.1611%" y="2053" width="0.3595%" height="15" fill="rgb(239,73,39)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="2063.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (386 samples, 0.36%)</title><rect x="28.1611%" y="2037" width="0.3595%" height="15" fill="rgb(245,182,19)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="2047.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (386 samples, 0.36%)</title><rect x="28.1611%" y="2021" width="0.3595%" height="15" fill="rgb(247,143,26)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="2031.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (386 samples, 0.36%)</title><rect x="28.1611%" y="2005" width="0.3595%" height="15" fill="rgb(228,191,23)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="2015.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (386 samples, 0.36%)</title><rect x="28.1611%" y="1989" width="0.3595%" height="15" fill="rgb(253,165,31)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1999.50"></text></g><g><title>std::panic::catch_unwind (386 samples, 0.36%)</title><rect x="28.1611%" y="1973" width="0.3595%" height="15" fill="rgb(234,138,20)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1983.50"></text></g><g><title>std::panicking::try (386 samples, 0.36%)</title><rect x="28.1611%" y="1957" width="0.3595%" height="15" fill="rgb(218,191,29)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1967.50"></text></g><g><title>std::panicking::try::do_call (386 samples, 0.36%)</title><rect x="28.1611%" y="1941" width="0.3595%" height="15" fill="rgb(221,157,19)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1951.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (386 samples, 0.36%)</title><rect x="28.1611%" y="1925" width="0.3595%" height="15" fill="rgb(237,26,42)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1935.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (386 samples, 0.36%)</title><rect x="28.1611%" y="1909" width="0.3595%" height="15" fill="rgb(220,163,24)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1919.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (386 samples, 0.36%)</title><rect x="28.1611%" y="1893" width="0.3595%" height="15" fill="rgb(242,115,20)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1903.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (386 samples, 0.36%)</title><rect x="28.1611%" y="1877" width="0.3595%" height="15" fill="rgb(210,206,9)" fg:x="30236" fg:w="386"/><text x="28.4111%" y="1887.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (332 samples, 0.31%)</title><rect x="28.2114%" y="1861" width="0.3092%" height="15" fill="rgb(208,71,17)" fg:x="30290" fg:w="332"/><text x="28.4614%" y="1871.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (332 samples, 0.31%)</title><rect x="28.2114%" y="1845" width="0.3092%" height="15" fill="rgb(233,7,5)" fg:x="30290" fg:w="332"/><text x="28.4614%" y="1855.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (332 samples, 0.31%)</title><rect x="28.2114%" y="1829" width="0.3092%" height="15" fill="rgb(207,92,33)" fg:x="30290" fg:w="332"/><text x="28.4614%" y="1839.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (332 samples, 0.31%)</title><rect x="28.2114%" y="1813" width="0.3092%" height="15" fill="rgb(218,87,9)" fg:x="30290" fg:w="332"/><text x="28.4614%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1797" width="0.1295%" height="15" fill="rgb(219,47,37)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1781" width="0.1295%" height="15" fill="rgb(221,152,34)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1765" width="0.1295%" height="15" fill="rgb(235,176,21)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1749" width="0.1295%" height="15" fill="rgb(232,212,21)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1733" width="0.1295%" height="15" fill="rgb(245,82,39)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1743.50"></text></g><g><title>core::mem::drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1717" width="0.1295%" height="15" fill="rgb(241,52,51)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1701" width="0.1295%" height="15" fill="rgb(219,91,24)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1685" width="0.1295%" height="15" fill="rgb(241,142,12)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (139 samples, 0.13%)</title><rect x="28.3911%" y="1669" width="0.1295%" height="15" fill="rgb(230,27,9)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1679.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1653" width="0.1295%" height="15" fill="rgb(249,181,32)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1637" width="0.1295%" height="15" fill="rgb(230,107,3)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1621" width="0.1295%" height="15" fill="rgb(246,204,14)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1605" width="0.1295%" height="15" fill="rgb(213,192,47)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1615.50"></text></g><g><title>core::mem::drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1589" width="0.1295%" height="15" fill="rgb(240,44,36)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1573" width="0.1295%" height="15" fill="rgb(244,209,38)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1557" width="0.1295%" height="15" fill="rgb(219,34,37)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (139 samples, 0.13%)</title><rect x="28.3911%" y="1541" width="0.1295%" height="15" fill="rgb(210,28,6)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1551.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (139 samples, 0.13%)</title><rect x="28.3911%" y="1525" width="0.1295%" height="15" fill="rgb(244,110,52)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (139 samples, 0.13%)</title><rect x="28.3911%" y="1509" width="0.1295%" height="15" fill="rgb(254,124,47)" fg:x="30483" fg:w="139"/><text x="28.6411%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1493" width="0.0978%" height="15" fill="rgb(254,110,13)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1477" width="0.0978%" height="15" fill="rgb(252,57,21)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1461" width="0.0978%" height="15" fill="rgb(242,60,45)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1471.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (105 samples, 0.10%)</title><rect x="28.4228%" y="1445" width="0.0978%" height="15" fill="rgb(234,49,30)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1429" width="0.0978%" height="15" fill="rgb(218,98,6)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1413" width="0.0978%" height="15" fill="rgb(220,174,29)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1397" width="0.0978%" height="15" fill="rgb(236,163,23)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (105 samples, 0.10%)</title><rect x="28.4228%" y="1381" width="0.0978%" height="15" fill="rgb(242,114,45)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1365" width="0.0978%" height="15" fill="rgb(232,10,53)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (105 samples, 0.10%)</title><rect x="28.4228%" y="1349" width="0.0978%" height="15" fill="rgb(245,108,29)" fg:x="30517" fg:w="105"/><text x="28.6728%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (61 samples, 0.06%)</title><rect x="28.4638%" y="1333" width="0.0568%" height="15" fill="rgb(240,89,53)" fg:x="30561" fg:w="61"/><text x="28.7138%" y="1343.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.06%)</title><rect x="28.4638%" y="1317" width="0.0568%" height="15" fill="rgb(226,60,45)" fg:x="30561" fg:w="61"/><text x="28.7138%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (61 samples, 0.06%)</title><rect x="28.4638%" y="1301" width="0.0568%" height="15" fill="rgb(230,41,44)" fg:x="30561" fg:w="61"/><text x="28.7138%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (61 samples, 0.06%)</title><rect x="28.4638%" y="1285" width="0.0568%" height="15" fill="rgb(230,26,20)" fg:x="30561" fg:w="61"/><text x="28.7138%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (61 samples, 0.06%)</title><rect x="28.4638%" y="1269" width="0.0568%" height="15" fill="rgb(237,170,32)" fg:x="30561" fg:w="61"/><text x="28.7138%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.06%)</title><rect x="28.4638%" y="1253" width="0.0568%" height="15" fill="rgb(212,35,42)" fg:x="30561" fg:w="61"/><text x="28.7138%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (61 samples, 0.06%)</title><rect x="28.4638%" y="1237" width="0.0568%" height="15" fill="rgb(227,31,34)" fg:x="30561" fg:w="61"/><text x="28.7138%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (51 samples, 0.05%)</title><rect x="28.4731%" y="1221" width="0.0475%" height="15" fill="rgb(216,19,18)" fg:x="30571" fg:w="51"/><text x="28.7231%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="28.5029%" y="1205" width="0.0177%" height="15" fill="rgb(211,133,42)" fg:x="30603" fg:w="19"/><text x="28.7529%" y="1215.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="28.5029%" y="1189" width="0.0177%" height="15" fill="rgb(244,66,13)" fg:x="30603" fg:w="19"/><text x="28.7529%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="28.5029%" y="1173" width="0.0177%" height="15" fill="rgb(218,185,50)" fg:x="30603" fg:w="19"/><text x="28.7529%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="28.5029%" y="1157" width="0.0177%" height="15" fill="rgb(219,149,13)" fg:x="30603" fg:w="19"/><text x="28.7529%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (19 samples, 0.02%)</title><rect x="28.5029%" y="1141" width="0.0177%" height="15" fill="rgb(221,125,0)" fg:x="30603" fg:w="19"/><text x="28.7529%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="28.5029%" y="1125" width="0.0177%" height="15" fill="rgb(247,126,27)" fg:x="30603" fg:w="19"/><text x="28.7529%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (19 samples, 0.02%)</title><rect x="28.5029%" y="1109" width="0.0177%" height="15" fill="rgb(250,138,30)" fg:x="30603" fg:w="19"/><text x="28.7529%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="28.5299%" y="1509" width="0.0102%" height="15" fill="rgb(230,151,9)" fg:x="30632" fg:w="11"/><text x="28.7799%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (11 samples, 0.01%)</title><rect x="28.5299%" y="1493" width="0.0102%" height="15" fill="rgb(233,80,38)" fg:x="30632" fg:w="11"/><text x="28.7799%" y="1503.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (11 samples, 0.01%)</title><rect x="28.5299%" y="1477" width="0.0102%" height="15" fill="rgb(232,68,43)" fg:x="30632" fg:w="11"/><text x="28.7799%" y="1487.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (11 samples, 0.01%)</title><rect x="28.5299%" y="1461" width="0.0102%" height="15" fill="rgb(254,5,50)" fg:x="30632" fg:w="11"/><text x="28.7799%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (11 samples, 0.01%)</title><rect x="28.5299%" y="1445" width="0.0102%" height="15" fill="rgb(225,45,5)" fg:x="30632" fg:w="11"/><text x="28.7799%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (11 samples, 0.01%)</title><rect x="28.5299%" y="1429" width="0.0102%" height="15" fill="rgb(239,22,3)" fg:x="30632" fg:w="11"/><text x="28.7799%" y="1439.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (37 samples, 0.03%)</title><rect x="28.5206%" y="2053" width="0.0345%" height="15" fill="rgb(243,129,0)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="2063.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (37 samples, 0.03%)</title><rect x="28.5206%" y="2037" width="0.0345%" height="15" fill="rgb(223,164,0)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="2047.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (37 samples, 0.03%)</title><rect x="28.5206%" y="2021" width="0.0345%" height="15" fill="rgb(221,46,29)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="2031.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.03%)</title><rect x="28.5206%" y="2005" width="0.0345%" height="15" fill="rgb(205,97,47)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="2015.50"></text></g><g><title>std::panicking::try (37 samples, 0.03%)</title><rect x="28.5206%" y="1989" width="0.0345%" height="15" fill="rgb(249,14,8)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="1999.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.03%)</title><rect x="28.5206%" y="1973" width="0.0345%" height="15" fill="rgb(216,77,3)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="1983.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.03%)</title><rect x="28.5206%" y="1957" width="0.0345%" height="15" fill="rgb(206,168,54)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="1967.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (37 samples, 0.03%)</title><rect x="28.5206%" y="1941" width="0.0345%" height="15" fill="rgb(236,3,41)" fg:x="30622" fg:w="37"/><text x="28.7706%" y="1951.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (34 samples, 0.03%)</title><rect x="28.5234%" y="1925" width="0.0317%" height="15" fill="rgb(231,132,24)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1935.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (34 samples, 0.03%)</title><rect x="28.5234%" y="1909" width="0.0317%" height="15" fill="rgb(227,221,40)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1919.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (34 samples, 0.03%)</title><rect x="28.5234%" y="1893" width="0.0317%" height="15" fill="rgb(233,151,11)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1903.50"></text></g><g><title>rayon_core::scope::scope (34 samples, 0.03%)</title><rect x="28.5234%" y="1877" width="0.0317%" height="15" fill="rgb(247,81,35)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (34 samples, 0.03%)</title><rect x="28.5234%" y="1861" width="0.0317%" height="15" fill="rgb(243,128,48)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1871.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (34 samples, 0.03%)</title><rect x="28.5234%" y="1845" width="0.0317%" height="15" fill="rgb(253,16,10)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1855.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (34 samples, 0.03%)</title><rect x="28.5234%" y="1829" width="0.0317%" height="15" fill="rgb(228,67,27)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1839.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (34 samples, 0.03%)</title><rect x="28.5234%" y="1813" width="0.0317%" height="15" fill="rgb(231,105,25)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1823.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (34 samples, 0.03%)</title><rect x="28.5234%" y="1797" width="0.0317%" height="15" fill="rgb(213,166,47)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1807.50"></text></g><g><title>rayon_core::job::JobRef::execute (34 samples, 0.03%)</title><rect x="28.5234%" y="1781" width="0.0317%" height="15" fill="rgb(209,27,10)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1791.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (34 samples, 0.03%)</title><rect x="28.5234%" y="1765" width="0.0317%" height="15" fill="rgb(241,44,30)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1775.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (34 samples, 0.03%)</title><rect x="28.5234%" y="1749" width="0.0317%" height="15" fill="rgb(223,216,15)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1759.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (34 samples, 0.03%)</title><rect x="28.5234%" y="1733" width="0.0317%" height="15" fill="rgb(227,14,7)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1743.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (34 samples, 0.03%)</title><rect x="28.5234%" y="1717" width="0.0317%" height="15" fill="rgb(237,14,5)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.03%)</title><rect x="28.5234%" y="1701" width="0.0317%" height="15" fill="rgb(232,14,36)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.03%)</title><rect x="28.5234%" y="1685" width="0.0317%" height="15" fill="rgb(234,0,38)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1695.50"></text></g><g><title>std::panicking::try (34 samples, 0.03%)</title><rect x="28.5234%" y="1669" width="0.0317%" height="15" fill="rgb(207,170,14)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.03%)</title><rect x="28.5234%" y="1653" width="0.0317%" height="15" fill="rgb(252,45,13)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.03%)</title><rect x="28.5234%" y="1637" width="0.0317%" height="15" fill="rgb(213,142,7)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1647.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (34 samples, 0.03%)</title><rect x="28.5234%" y="1621" width="0.0317%" height="15" fill="rgb(216,157,23)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1631.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (34 samples, 0.03%)</title><rect x="28.5234%" y="1605" width="0.0317%" height="15" fill="rgb(212,145,33)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1615.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (34 samples, 0.03%)</title><rect x="28.5234%" y="1589" width="0.0317%" height="15" fill="rgb(233,26,13)" fg:x="30625" fg:w="34"/><text x="28.7734%" y="1599.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (27 samples, 0.03%)</title><rect x="28.5299%" y="1573" width="0.0251%" height="15" fill="rgb(219,196,19)" fg:x="30632" fg:w="27"/><text x="28.7799%" y="1583.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (27 samples, 0.03%)</title><rect x="28.5299%" y="1557" width="0.0251%" height="15" fill="rgb(246,56,21)" fg:x="30632" fg:w="27"/><text x="28.7799%" y="1567.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (27 samples, 0.03%)</title><rect x="28.5299%" y="1541" width="0.0251%" height="15" fill="rgb(222,28,53)" fg:x="30632" fg:w="27"/><text x="28.7799%" y="1551.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (27 samples, 0.03%)</title><rect x="28.5299%" y="1525" width="0.0251%" height="15" fill="rgb(224,5,27)" fg:x="30632" fg:w="27"/><text x="28.7799%" y="1535.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (26 samples, 0.02%)</title><rect x="28.5765%" y="1189" width="0.0242%" height="15" fill="rgb(220,153,33)" fg:x="30682" fg:w="26"/><text x="28.8265%" y="1199.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (16 samples, 0.01%)</title><rect x="28.5858%" y="1173" width="0.0149%" height="15" fill="rgb(226,58,19)" fg:x="30692" fg:w="16"/><text x="28.8358%" y="1183.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (14 samples, 0.01%)</title><rect x="28.5877%" y="1157" width="0.0130%" height="15" fill="rgb(239,112,23)" fg:x="30694" fg:w="14"/><text x="28.8377%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (43 samples, 0.04%)</title><rect x="28.5718%" y="1365" width="0.0400%" height="15" fill="rgb(251,213,20)" fg:x="30677" fg:w="43"/><text x="28.8218%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (43 samples, 0.04%)</title><rect x="28.5718%" y="1349" width="0.0400%" height="15" fill="rgb(215,181,21)" fg:x="30677" fg:w="43"/><text x="28.8218%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (43 samples, 0.04%)</title><rect x="28.5718%" y="1333" width="0.0400%" height="15" fill="rgb(240,8,35)" fg:x="30677" fg:w="43"/><text x="28.8218%" y="1343.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (39 samples, 0.04%)</title><rect x="28.5756%" y="1317" width="0.0363%" height="15" fill="rgb(232,203,3)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (39 samples, 0.04%)</title><rect x="28.5756%" y="1301" width="0.0363%" height="15" fill="rgb(214,202,43)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1311.50"></text></g><g><title>std::panicking::try (39 samples, 0.04%)</title><rect x="28.5756%" y="1285" width="0.0363%" height="15" fill="rgb(254,35,11)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (39 samples, 0.04%)</title><rect x="28.5756%" y="1269" width="0.0363%" height="15" fill="rgb(239,173,13)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1279.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (39 samples, 0.04%)</title><rect x="28.5756%" y="1253" width="0.0363%" height="15" fill="rgb(220,141,0)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (39 samples, 0.04%)</title><rect x="28.5756%" y="1237" width="0.0363%" height="15" fill="rgb(210,98,12)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1247.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (39 samples, 0.04%)</title><rect x="28.5756%" y="1221" width="0.0363%" height="15" fill="rgb(254,153,22)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1231.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (39 samples, 0.04%)</title><rect x="28.5756%" y="1205" width="0.0363%" height="15" fill="rgb(247,223,17)" fg:x="30681" fg:w="39"/><text x="28.8256%" y="1215.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (12 samples, 0.01%)</title><rect x="28.6007%" y="1189" width="0.0112%" height="15" fill="rgb(246,56,7)" fg:x="30708" fg:w="12"/><text x="28.8507%" y="1199.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (55 samples, 0.05%)</title><rect x="28.5662%" y="1413" width="0.0512%" height="15" fill="rgb(240,226,12)" fg:x="30671" fg:w="55"/><text x="28.8162%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (55 samples, 0.05%)</title><rect x="28.5662%" y="1397" width="0.0512%" height="15" fill="rgb(205,87,46)" fg:x="30671" fg:w="55"/><text x="28.8162%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (49 samples, 0.05%)</title><rect x="28.5718%" y="1381" width="0.0456%" height="15" fill="rgb(245,214,51)" fg:x="30677" fg:w="49"/><text x="28.8218%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (56 samples, 0.05%)</title><rect x="28.5662%" y="1445" width="0.0522%" height="15" fill="rgb(223,172,33)" fg:x="30671" fg:w="56"/><text x="28.8162%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (56 samples, 0.05%)</title><rect x="28.5662%" y="1429" width="0.0522%" height="15" fill="rgb(227,203,34)" fg:x="30671" fg:w="56"/><text x="28.8162%" y="1439.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (64 samples, 0.06%)</title><rect x="28.5662%" y="1541" width="0.0596%" height="15" fill="rgb(248,143,44)" fg:x="30671" fg:w="64"/><text x="28.8162%" y="1551.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (64 samples, 0.06%)</title><rect x="28.5662%" y="1525" width="0.0596%" height="15" fill="rgb(226,162,5)" fg:x="30671" fg:w="64"/><text x="28.8162%" y="1535.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (64 samples, 0.06%)</title><rect x="28.5662%" y="1509" width="0.0596%" height="15" fill="rgb(211,143,1)" fg:x="30671" fg:w="64"/><text x="28.8162%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (64 samples, 0.06%)</title><rect x="28.5662%" y="1493" width="0.0596%" height="15" fill="rgb(224,96,15)" fg:x="30671" fg:w="64"/><text x="28.8162%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (64 samples, 0.06%)</title><rect x="28.5662%" y="1477" width="0.0596%" height="15" fill="rgb(222,4,38)" fg:x="30671" fg:w="64"/><text x="28.8162%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (64 samples, 0.06%)</title><rect x="28.5662%" y="1461" width="0.0596%" height="15" fill="rgb(253,228,15)" fg:x="30671" fg:w="64"/><text x="28.8162%" y="1471.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (66 samples, 0.06%)</title><rect x="28.5662%" y="1749" width="0.0615%" height="15" fill="rgb(242,194,12)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1759.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (66 samples, 0.06%)</title><rect x="28.5662%" y="1733" width="0.0615%" height="15" fill="rgb(214,177,31)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1743.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (66 samples, 0.06%)</title><rect x="28.5662%" y="1717" width="0.0615%" height="15" fill="rgb(226,58,51)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1727.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (66 samples, 0.06%)</title><rect x="28.5662%" y="1701" width="0.0615%" height="15" fill="rgb(250,119,16)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1711.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (66 samples, 0.06%)</title><rect x="28.5662%" y="1685" width="0.0615%" height="15" fill="rgb(223,128,53)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.06%)</title><rect x="28.5662%" y="1669" width="0.0615%" height="15" fill="rgb(251,199,15)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1679.50"></text></g><g><title>std::panicking::try (66 samples, 0.06%)</title><rect x="28.5662%" y="1653" width="0.0615%" height="15" fill="rgb(235,168,42)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.06%)</title><rect x="28.5662%" y="1637" width="0.0615%" height="15" fill="rgb(250,210,17)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1647.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="28.5662%" y="1621" width="0.0615%" height="15" fill="rgb(226,36,41)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1631.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (66 samples, 0.06%)</title><rect x="28.5662%" y="1605" width="0.0615%" height="15" fill="rgb(225,87,10)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1615.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (66 samples, 0.06%)</title><rect x="28.5662%" y="1589" width="0.0615%" height="15" fill="rgb(228,83,9)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1599.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (66 samples, 0.06%)</title><rect x="28.5662%" y="1573" width="0.0615%" height="15" fill="rgb(225,16,36)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1583.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (66 samples, 0.06%)</title><rect x="28.5662%" y="1557" width="0.0615%" height="15" fill="rgb(242,198,13)" fg:x="30671" fg:w="66"/><text x="28.8162%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (12 samples, 0.01%)</title><rect x="28.6314%" y="1157" width="0.0112%" height="15" fill="rgb(239,25,51)" fg:x="30741" fg:w="12"/><text x="28.8814%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (12 samples, 0.01%)</title><rect x="28.6314%" y="1141" width="0.0112%" height="15" fill="rgb(239,28,37)" fg:x="30741" fg:w="12"/><text x="28.8814%" y="1151.50"></text></g><g><title>[libc.so.6] (99 samples, 0.09%)</title><rect x="28.5560%" y="2053" width="0.0922%" height="15" fill="rgb(234,70,17)" fg:x="30660" fg:w="99"/><text x="28.8060%" y="2063.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (88 samples, 0.08%)</title><rect x="28.5662%" y="2037" width="0.0820%" height="15" fill="rgb(231,215,53)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="2047.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (88 samples, 0.08%)</title><rect x="28.5662%" y="2021" width="0.0820%" height="15" fill="rgb(218,140,42)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="2031.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (88 samples, 0.08%)</title><rect x="28.5662%" y="2005" width="0.0820%" height="15" fill="rgb(233,227,45)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="2015.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (88 samples, 0.08%)</title><rect x="28.5662%" y="1989" width="0.0820%" height="15" fill="rgb(225,189,21)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1999.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (88 samples, 0.08%)</title><rect x="28.5662%" y="1973" width="0.0820%" height="15" fill="rgb(237,176,54)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1983.50"></text></g><g><title>std::panic::catch_unwind (88 samples, 0.08%)</title><rect x="28.5662%" y="1957" width="0.0820%" height="15" fill="rgb(215,131,46)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1967.50"></text></g><g><title>std::panicking::try (88 samples, 0.08%)</title><rect x="28.5662%" y="1941" width="0.0820%" height="15" fill="rgb(218,95,20)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1951.50"></text></g><g><title>std::panicking::try::do_call (88 samples, 0.08%)</title><rect x="28.5662%" y="1925" width="0.0820%" height="15" fill="rgb(208,198,12)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1935.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (88 samples, 0.08%)</title><rect x="28.5662%" y="1909" width="0.0820%" height="15" fill="rgb(239,107,50)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1919.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (88 samples, 0.08%)</title><rect x="28.5662%" y="1893" width="0.0820%" height="15" fill="rgb(240,217,37)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1903.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (88 samples, 0.08%)</title><rect x="28.5662%" y="1877" width="0.0820%" height="15" fill="rgb(242,197,49)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1887.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (88 samples, 0.08%)</title><rect x="28.5662%" y="1861" width="0.0820%" height="15" fill="rgb(219,171,17)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1871.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (88 samples, 0.08%)</title><rect x="28.5662%" y="1845" width="0.0820%" height="15" fill="rgb(209,81,40)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1855.50"></text></g><g><title>rayon_core::registry::main_loop (88 samples, 0.08%)</title><rect x="28.5662%" y="1829" width="0.0820%" height="15" fill="rgb(237,156,30)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1839.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (88 samples, 0.08%)</title><rect x="28.5662%" y="1813" width="0.0820%" height="15" fill="rgb(212,127,16)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1823.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (88 samples, 0.08%)</title><rect x="28.5662%" y="1797" width="0.0820%" height="15" fill="rgb(226,66,32)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1807.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (88 samples, 0.08%)</title><rect x="28.5662%" y="1781" width="0.0820%" height="15" fill="rgb(245,22,46)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1791.50"></text></g><g><title>rayon_core::job::JobRef::execute (88 samples, 0.08%)</title><rect x="28.5662%" y="1765" width="0.0820%" height="15" fill="rgb(210,112,21)" fg:x="30671" fg:w="88"/><text x="28.8162%" y="1775.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.02%)</title><rect x="28.6277%" y="1749" width="0.0205%" height="15" fill="rgb(207,118,39)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1759.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (22 samples, 0.02%)</title><rect x="28.6277%" y="1733" width="0.0205%" height="15" fill="rgb(205,206,35)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1743.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.02%)</title><rect x="28.6277%" y="1717" width="0.0205%" height="15" fill="rgb(222,120,2)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1727.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.02%)</title><rect x="28.6277%" y="1701" width="0.0205%" height="15" fill="rgb(205,38,18)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1711.50"></text></g><g><title>std::panicking::try (22 samples, 0.02%)</title><rect x="28.6277%" y="1685" width="0.0205%" height="15" fill="rgb(226,61,2)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1695.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.02%)</title><rect x="28.6277%" y="1669" width="0.0205%" height="15" fill="rgb(242,161,23)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1679.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.02%)</title><rect x="28.6277%" y="1653" width="0.0205%" height="15" fill="rgb(213,13,52)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1663.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (22 samples, 0.02%)</title><rect x="28.6277%" y="1637" width="0.0205%" height="15" fill="rgb(246,209,47)" fg:x="30737" fg:w="22"/><text x="28.8777%" y="1647.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="28.6314%" y="1621" width="0.0168%" height="15" fill="rgb(214,41,3)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1631.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (18 samples, 0.02%)</title><rect x="28.6314%" y="1605" width="0.0168%" height="15" fill="rgb(236,119,38)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1615.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (18 samples, 0.02%)</title><rect x="28.6314%" y="1589" width="0.0168%" height="15" fill="rgb(218,50,11)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1599.50"></text></g><g><title>rayon_core::scope::scope (18 samples, 0.02%)</title><rect x="28.6314%" y="1573" width="0.0168%" height="15" fill="rgb(228,38,11)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="28.6314%" y="1557" width="0.0168%" height="15" fill="rgb(212,13,9)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1567.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (18 samples, 0.02%)</title><rect x="28.6314%" y="1541" width="0.0168%" height="15" fill="rgb(208,211,9)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1551.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (18 samples, 0.02%)</title><rect x="28.6314%" y="1525" width="0.0168%" height="15" fill="rgb(239,39,32)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1535.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="28.6314%" y="1509" width="0.0168%" height="15" fill="rgb(254,179,26)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.02%)</title><rect x="28.6314%" y="1493" width="0.0168%" height="15" fill="rgb(249,165,28)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1503.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.02%)</title><rect x="28.6314%" y="1477" width="0.0168%" height="15" fill="rgb(225,59,50)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.02%)</title><rect x="28.6314%" y="1461" width="0.0168%" height="15" fill="rgb(209,122,5)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1471.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (18 samples, 0.02%)</title><rect x="28.6314%" y="1445" width="0.0168%" height="15" fill="rgb(214,65,34)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1455.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (18 samples, 0.02%)</title><rect x="28.6314%" y="1429" width="0.0168%" height="15" fill="rgb(249,183,32)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1439.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (18 samples, 0.02%)</title><rect x="28.6314%" y="1413" width="0.0168%" height="15" fill="rgb(218,122,24)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="28.6314%" y="1397" width="0.0168%" height="15" fill="rgb(224,109,18)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="28.6314%" y="1381" width="0.0168%" height="15" fill="rgb(210,68,50)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1391.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="28.6314%" y="1365" width="0.0168%" height="15" fill="rgb(212,184,34)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="28.6314%" y="1349" width="0.0168%" height="15" fill="rgb(238,105,48)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="28.6314%" y="1333" width="0.0168%" height="15" fill="rgb(222,134,54)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1343.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="28.6314%" y="1317" width="0.0168%" height="15" fill="rgb(246,24,43)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1327.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="28.6314%" y="1301" width="0.0168%" height="15" fill="rgb(227,169,22)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1311.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (18 samples, 0.02%)</title><rect x="28.6314%" y="1285" width="0.0168%" height="15" fill="rgb(253,152,4)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1295.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (18 samples, 0.02%)</title><rect x="28.6314%" y="1269" width="0.0168%" height="15" fill="rgb(219,158,36)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1279.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (18 samples, 0.02%)</title><rect x="28.6314%" y="1253" width="0.0168%" height="15" fill="rgb(251,128,40)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1263.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (18 samples, 0.02%)</title><rect x="28.6314%" y="1237" width="0.0168%" height="15" fill="rgb(254,101,39)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1247.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (18 samples, 0.02%)</title><rect x="28.6314%" y="1221" width="0.0168%" height="15" fill="rgb(221,168,40)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (18 samples, 0.02%)</title><rect x="28.6314%" y="1205" width="0.0168%" height="15" fill="rgb(221,14,27)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1215.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (18 samples, 0.02%)</title><rect x="28.6314%" y="1189" width="0.0168%" height="15" fill="rgb(207,36,43)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1199.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (18 samples, 0.02%)</title><rect x="28.6314%" y="1173" width="0.0168%" height="15" fill="rgb(240,172,53)" fg:x="30741" fg:w="18"/><text x="28.8814%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (12 samples, 0.01%)</title><rect x="28.6948%" y="1653" width="0.0112%" height="15" fill="rgb(241,138,43)" fg:x="30809" fg:w="12"/><text x="28.9448%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.01%)</title><rect x="28.6948%" y="1637" width="0.0112%" height="15" fill="rgb(227,78,19)" fg:x="30809" fg:w="12"/><text x="28.9448%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.02%)</title><rect x="28.6938%" y="1669" width="0.0205%" height="15" fill="rgb(215,127,44)" fg:x="30808" fg:w="22"/><text x="28.9438%" y="1679.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (42 samples, 0.04%)</title><rect x="28.6789%" y="1701" width="0.0391%" height="15" fill="rgb(227,13,10)" fg:x="30792" fg:w="42"/><text x="28.9289%" y="1711.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (42 samples, 0.04%)</title><rect x="28.6789%" y="1685" width="0.0391%" height="15" fill="rgb(249,177,6)" fg:x="30792" fg:w="42"/><text x="28.9289%" y="1695.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (57 samples, 0.05%)</title><rect x="28.6761%" y="1733" width="0.0531%" height="15" fill="rgb(215,154,26)" fg:x="30789" fg:w="57"/><text x="28.9261%" y="1743.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (57 samples, 0.05%)</title><rect x="28.6761%" y="1717" width="0.0531%" height="15" fill="rgb(250,168,20)" fg:x="30789" fg:w="57"/><text x="28.9261%" y="1727.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (11 samples, 0.01%)</title><rect x="28.7432%" y="1701" width="0.0102%" height="15" fill="rgb(222,53,38)" fg:x="30861" fg:w="11"/><text x="28.9932%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="28.7432%" y="1685" width="0.0102%" height="15" fill="rgb(245,154,5)" fg:x="30861" fg:w="11"/><text x="28.9932%" y="1695.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="28.7432%" y="1669" width="0.0102%" height="15" fill="rgb(214,89,50)" fg:x="30861" fg:w="11"/><text x="28.9932%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="28.7432%" y="1653" width="0.0102%" height="15" fill="rgb(232,73,14)" fg:x="30861" fg:w="11"/><text x="28.9932%" y="1663.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (11 samples, 0.01%)</title><rect x="28.7432%" y="1637" width="0.0102%" height="15" fill="rgb(230,101,20)" fg:x="30861" fg:w="11"/><text x="28.9932%" y="1647.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (11 samples, 0.01%)</title><rect x="28.7432%" y="1621" width="0.0102%" height="15" fill="rgb(208,56,28)" fg:x="30861" fg:w="11"/><text x="28.9932%" y="1631.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (12 samples, 0.01%)</title><rect x="28.7758%" y="1509" width="0.0112%" height="15" fill="rgb(247,205,22)" fg:x="30896" fg:w="12"/><text x="29.0258%" y="1519.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (24 samples, 0.02%)</title><rect x="28.7656%" y="1541" width="0.0224%" height="15" fill="rgb(252,109,51)" fg:x="30885" fg:w="24"/><text x="29.0156%" y="1551.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (13 samples, 0.01%)</title><rect x="28.7758%" y="1525" width="0.0121%" height="15" fill="rgb(220,40,24)" fg:x="30896" fg:w="13"/><text x="29.0258%" y="1535.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (25 samples, 0.02%)</title><rect x="28.7656%" y="1557" width="0.0233%" height="15" fill="rgb(251,108,7)" fg:x="30885" fg:w="25"/><text x="29.0156%" y="1567.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (40 samples, 0.04%)</title><rect x="28.7618%" y="1573" width="0.0373%" height="15" fill="rgb(238,102,51)" fg:x="30881" fg:w="40"/><text x="29.0118%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (54 samples, 0.05%)</title><rect x="28.7572%" y="1621" width="0.0503%" height="15" fill="rgb(219,149,34)" fg:x="30876" fg:w="54"/><text x="29.0072%" y="1631.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (54 samples, 0.05%)</title><rect x="28.7572%" y="1605" width="0.0503%" height="15" fill="rgb(239,70,0)" fg:x="30876" fg:w="54"/><text x="29.0072%" y="1615.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (54 samples, 0.05%)</title><rect x="28.7572%" y="1589" width="0.0503%" height="15" fill="rgb(246,214,23)" fg:x="30876" fg:w="54"/><text x="29.0072%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (82 samples, 0.08%)</title><rect x="28.7385%" y="1717" width="0.0764%" height="15" fill="rgb(239,221,51)" fg:x="30856" fg:w="82"/><text x="28.9885%" y="1727.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (66 samples, 0.06%)</title><rect x="28.7534%" y="1701" width="0.0615%" height="15" fill="rgb(254,62,14)" fg:x="30872" fg:w="66"/><text x="29.0034%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.06%)</title><rect x="28.7534%" y="1685" width="0.0615%" height="15" fill="rgb(253,57,33)" fg:x="30872" fg:w="66"/><text x="29.0034%" y="1695.50"></text></g><g><title>std::panicking::try (66 samples, 0.06%)</title><rect x="28.7534%" y="1669" width="0.0615%" height="15" fill="rgb(229,34,6)" fg:x="30872" fg:w="66"/><text x="29.0034%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.06%)</title><rect x="28.7534%" y="1653" width="0.0615%" height="15" fill="rgb(235,191,23)" fg:x="30872" fg:w="66"/><text x="29.0034%" y="1663.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (66 samples, 0.06%)</title><rect x="28.7534%" y="1637" width="0.0615%" height="15" fill="rgb(217,207,27)" fg:x="30872" fg:w="66"/><text x="29.0034%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (160 samples, 0.15%)</title><rect x="28.6743%" y="1749" width="0.1490%" height="15" fill="rgb(232,41,44)" fg:x="30787" fg:w="160"/><text x="28.9243%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (101 samples, 0.09%)</title><rect x="28.7292%" y="1733" width="0.0941%" height="15" fill="rgb(221,188,19)" fg:x="30846" fg:w="101"/><text x="28.9792%" y="1743.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (22 samples, 0.02%)</title><rect x="28.8363%" y="1621" width="0.0205%" height="15" fill="rgb(245,180,45)" fg:x="30961" fg:w="22"/><text x="29.0863%" y="1631.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (14 samples, 0.01%)</title><rect x="28.8438%" y="1605" width="0.0130%" height="15" fill="rgb(250,220,42)" fg:x="30969" fg:w="14"/><text x="29.0938%" y="1615.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (11 samples, 0.01%)</title><rect x="28.8466%" y="1589" width="0.0102%" height="15" fill="rgb(234,16,34)" fg:x="30972" fg:w="11"/><text x="29.0966%" y="1599.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (14 samples, 0.01%)</title><rect x="28.8568%" y="1573" width="0.0130%" height="15" fill="rgb(233,217,23)" fg:x="30983" fg:w="14"/><text x="29.1068%" y="1583.50"></text></g><g><title>move_binary_format::deserializer::load_code (14 samples, 0.01%)</title><rect x="28.8568%" y="1557" width="0.0130%" height="15" fill="rgb(209,22,46)" fg:x="30983" fg:w="14"/><text x="29.1068%" y="1567.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (15 samples, 0.01%)</title><rect x="28.8568%" y="1605" width="0.0140%" height="15" fill="rgb(213,101,18)" fg:x="30983" fg:w="15"/><text x="29.1068%" y="1615.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (15 samples, 0.01%)</title><rect x="28.8568%" y="1589" width="0.0140%" height="15" fill="rgb(215,179,52)" fg:x="30983" fg:w="15"/><text x="29.1068%" y="1599.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (39 samples, 0.04%)</title><rect x="28.8363%" y="1637" width="0.0363%" height="15" fill="rgb(223,50,25)" fg:x="30961" fg:w="39"/><text x="29.0863%" y="1647.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (17 samples, 0.02%)</title><rect x="28.8568%" y="1621" width="0.0158%" height="15" fill="rgb(224,51,44)" fg:x="30983" fg:w="17"/><text x="29.1068%" y="1631.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (46 samples, 0.04%)</title><rect x="28.8326%" y="1733" width="0.0428%" height="15" fill="rgb(224,13,54)" fg:x="30957" fg:w="46"/><text x="29.0826%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 0.04%)</title><rect x="28.8326%" y="1717" width="0.0428%" height="15" fill="rgb(219,58,47)" fg:x="30957" fg:w="46"/><text x="29.0826%" y="1727.50"></text></g><g><title>std::panicking::try (46 samples, 0.04%)</title><rect x="28.8326%" y="1701" width="0.0428%" height="15" fill="rgb(246,124,34)" fg:x="30957" fg:w="46"/><text x="29.0826%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 0.04%)</title><rect x="28.8326%" y="1685" width="0.0428%" height="15" fill="rgb(245,109,25)" fg:x="30957" fg:w="46"/><text x="29.0826%" y="1695.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (46 samples, 0.04%)</title><rect x="28.8326%" y="1669" width="0.0428%" height="15" fill="rgb(235,48,23)" fg:x="30957" fg:w="46"/><text x="29.0826%" y="1679.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (42 samples, 0.04%)</title><rect x="28.8363%" y="1653" width="0.0391%" height="15" fill="rgb(229,203,36)" fg:x="30961" fg:w="42"/><text x="29.0863%" y="1663.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (11 samples, 0.01%)</title><rect x="28.8820%" y="1653" width="0.0102%" height="15" fill="rgb(234,180,9)" fg:x="31010" fg:w="11"/><text x="29.1320%" y="1663.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (11 samples, 0.01%)</title><rect x="28.8820%" y="1637" width="0.0102%" height="15" fill="rgb(228,98,45)" fg:x="31010" fg:w="11"/><text x="29.1320%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (11 samples, 0.01%)</title><rect x="28.9108%" y="1477" width="0.0102%" height="15" fill="rgb(240,24,36)" fg:x="31041" fg:w="11"/><text x="29.1608%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (22 samples, 0.02%)</title><rect x="28.9081%" y="1541" width="0.0205%" height="15" fill="rgb(227,154,19)" fg:x="31038" fg:w="22"/><text x="29.1581%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.02%)</title><rect x="28.9081%" y="1525" width="0.0205%" height="15" fill="rgb(231,2,48)" fg:x="31038" fg:w="22"/><text x="29.1581%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (22 samples, 0.02%)</title><rect x="28.9081%" y="1509" width="0.0205%" height="15" fill="rgb(219,216,0)" fg:x="31038" fg:w="22"/><text x="29.1581%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (22 samples, 0.02%)</title><rect x="28.9081%" y="1493" width="0.0205%" height="15" fill="rgb(251,88,0)" fg:x="31038" fg:w="22"/><text x="29.1581%" y="1503.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (37 samples, 0.03%)</title><rect x="28.8969%" y="1605" width="0.0345%" height="15" fill="rgb(242,45,45)" fg:x="31026" fg:w="37"/><text x="29.1469%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (32 samples, 0.03%)</title><rect x="28.9015%" y="1589" width="0.0298%" height="15" fill="rgb(218,149,45)" fg:x="31031" fg:w="32"/><text x="29.1515%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.03%)</title><rect x="28.9015%" y="1573" width="0.0298%" height="15" fill="rgb(247,194,10)" fg:x="31031" fg:w="32"/><text x="29.1515%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (26 samples, 0.02%)</title><rect x="28.9071%" y="1557" width="0.0242%" height="15" fill="rgb(234,33,37)" fg:x="31037" fg:w="26"/><text x="29.1571%" y="1567.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (22 samples, 0.02%)</title><rect x="28.9313%" y="1589" width="0.0205%" height="15" fill="rgb(218,61,13)" fg:x="31063" fg:w="22"/><text x="29.1813%" y="1599.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (22 samples, 0.02%)</title><rect x="28.9313%" y="1573" width="0.0205%" height="15" fill="rgb(210,80,52)" fg:x="31063" fg:w="22"/><text x="29.1813%" y="1583.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="28.9416%" y="1557" width="0.0102%" height="15" fill="rgb(218,203,27)" fg:x="31074" fg:w="11"/><text x="29.1916%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="29.0086%" y="1365" width="0.0112%" height="15" fill="rgb(209,126,33)" fg:x="31146" fg:w="12"/><text x="29.2586%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="29.0096%" y="1349" width="0.0102%" height="15" fill="rgb(234,173,41)" fg:x="31147" fg:w="11"/><text x="29.2596%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="29.0096%" y="1333" width="0.0102%" height="15" fill="rgb(228,166,9)" fg:x="31147" fg:w="11"/><text x="29.2596%" y="1343.50"></text></g><g><title>move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs::{{closure}} (11 samples, 0.01%)</title><rect x="29.0096%" y="1317" width="0.0102%" height="15" fill="rgb(208,124,43)" fg:x="31147" fg:w="11"/><text x="29.2596%" y="1327.50"></text></g><g><title>move_borrow_graph::references::Ref&lt;Loc,Lbl&gt;::remap_refs (11 samples, 0.01%)</title><rect x="29.0096%" y="1301" width="0.0102%" height="15" fill="rgb(212,154,38)" fg:x="31147" fg:w="11"/><text x="29.2596%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.01%)</title><rect x="29.0086%" y="1397" width="0.0130%" height="15" fill="rgb(246,179,35)" fg:x="31146" fg:w="14"/><text x="29.2586%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14 samples, 0.01%)</title><rect x="29.0086%" y="1381" width="0.0130%" height="15" fill="rgb(251,3,50)" fg:x="31146" fg:w="14"/><text x="29.2586%" y="1391.50"></text></g><g><title>move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (31 samples, 0.03%)</title><rect x="29.0012%" y="1509" width="0.0289%" height="15" fill="rgb(219,96,8)" fg:x="31138" fg:w="31"/><text x="29.2512%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.03%)</title><rect x="29.0012%" y="1493" width="0.0289%" height="15" fill="rgb(251,216,33)" fg:x="31138" fg:w="31"/><text x="29.2512%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="29.0012%" y="1477" width="0.0289%" height="15" fill="rgb(243,145,29)" fg:x="31138" fg:w="31"/><text x="29.2512%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.02%)</title><rect x="29.0086%" y="1461" width="0.0214%" height="15" fill="rgb(210,75,20)" fg:x="31146" fg:w="23"/><text x="29.2586%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="29.0086%" y="1445" width="0.0214%" height="15" fill="rgb(235,56,8)" fg:x="31146" fg:w="23"/><text x="29.2586%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="29.0086%" y="1429" width="0.0214%" height="15" fill="rgb(226,175,49)" fg:x="31146" fg:w="23"/><text x="29.2586%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="29.0086%" y="1413" width="0.0214%" height="15" fill="rgb(242,204,23)" fg:x="31146" fg:w="23"/><text x="29.2586%" y="1423.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (47 samples, 0.04%)</title><rect x="28.9872%" y="1525" width="0.0438%" height="15" fill="rgb(225,104,24)" fg:x="31123" fg:w="47"/><text x="29.2372%" y="1535.50"></text></g><g><title>move_bytecode_verifier::reference_safety::call (17 samples, 0.02%)</title><rect x="29.0329%" y="1525" width="0.0158%" height="15" fill="rgb(253,34,1)" fg:x="31172" fg:w="17"/><text x="29.2829%" y="1535.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::call (15 samples, 0.01%)</title><rect x="29.0347%" y="1509" width="0.0140%" height="15" fill="rgb(233,199,23)" fg:x="31174" fg:w="15"/><text x="29.2847%" y="1519.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field (18 samples, 0.02%)</title><rect x="29.0543%" y="1509" width="0.0168%" height="15" fill="rgb(247,7,51)" fg:x="31195" fg:w="18"/><text x="29.3043%" y="1519.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::copy_loc (11 samples, 0.01%)</title><rect x="29.0757%" y="1509" width="0.0102%" height="15" fill="rgb(214,146,12)" fg:x="31218" fg:w="11"/><text x="29.3257%" y="1519.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (121 samples, 0.11%)</title><rect x="28.9872%" y="1541" width="0.1127%" height="15" fill="rgb(234,181,43)" fg:x="31123" fg:w="121"/><text x="29.2372%" y="1551.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (55 samples, 0.05%)</title><rect x="29.0487%" y="1525" width="0.0512%" height="15" fill="rgb(239,148,6)" fg:x="31189" fg:w="55"/><text x="29.2987%" y="1535.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (170 samples, 0.16%)</title><rect x="28.9528%" y="1573" width="0.1583%" height="15" fill="rgb(206,151,17)" fg:x="31086" fg:w="170"/><text x="29.2028%" y="1583.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (136 samples, 0.13%)</title><rect x="28.9844%" y="1557" width="0.1267%" height="15" fill="rgb(213,215,10)" fg:x="31120" fg:w="136"/><text x="29.2344%" y="1567.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (173 samples, 0.16%)</title><rect x="28.9518%" y="1589" width="0.1611%" height="15" fill="rgb(215,220,44)" fg:x="31085" fg:w="173"/><text x="29.2018%" y="1599.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (217 samples, 0.20%)</title><rect x="28.9313%" y="1605" width="0.2021%" height="15" fill="rgb(245,205,37)" fg:x="31063" fg:w="217"/><text x="29.1813%" y="1615.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (18 samples, 0.02%)</title><rect x="29.1167%" y="1589" width="0.0168%" height="15" fill="rgb(245,130,43)" fg:x="31262" fg:w="18"/><text x="29.3667%" y="1599.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (12 samples, 0.01%)</title><rect x="29.1223%" y="1573" width="0.0112%" height="15" fill="rgb(231,227,38)" fg:x="31268" fg:w="12"/><text x="29.3723%" y="1583.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (14 samples, 0.01%)</title><rect x="29.1334%" y="1589" width="0.0130%" height="15" fill="rgb(233,185,4)" fg:x="31280" fg:w="14"/><text x="29.3834%" y="1599.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (14 samples, 0.01%)</title><rect x="29.1334%" y="1573" width="0.0130%" height="15" fill="rgb(224,154,43)" fg:x="31280" fg:w="14"/><text x="29.3834%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (287 samples, 0.27%)</title><rect x="28.8932%" y="1621" width="0.2673%" height="15" fill="rgb(235,156,15)" fg:x="31022" fg:w="287"/><text x="29.1432%" y="1631.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (29 samples, 0.03%)</title><rect x="29.1334%" y="1605" width="0.0270%" height="15" fill="rgb(211,55,43)" fg:x="31280" fg:w="29"/><text x="29.3834%" y="1615.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_reducibility (14 samples, 0.01%)</title><rect x="29.1474%" y="1589" width="0.0130%" height="15" fill="rgb(247,149,40)" fg:x="31295" fg:w="14"/><text x="29.3974%" y="1599.50"></text></g><g><title>move_bytecode_verifier::loop_summary::LoopSummary::new (12 samples, 0.01%)</title><rect x="29.1493%" y="1573" width="0.0112%" height="15" fill="rgb(232,171,16)" fg:x="31297" fg:w="12"/><text x="29.3993%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (290 samples, 0.27%)</title><rect x="28.8922%" y="1653" width="0.2701%" height="15" fill="rgb(215,117,49)" fg:x="31021" fg:w="290"/><text x="29.1422%" y="1663.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (290 samples, 0.27%)</title><rect x="28.8922%" y="1637" width="0.2701%" height="15" fill="rgb(246,194,11)" fg:x="31021" fg:w="290"/><text x="29.1422%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (385 samples, 0.36%)</title><rect x="28.8233%" y="1749" width="0.3586%" height="15" fill="rgb(242,101,44)" fg:x="30947" fg:w="385"/><text x="29.0733%" y="1759.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (329 samples, 0.31%)</title><rect x="28.8755%" y="1733" width="0.3064%" height="15" fill="rgb(226,174,6)" fg:x="31003" fg:w="329"/><text x="29.1255%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (329 samples, 0.31%)</title><rect x="28.8755%" y="1717" width="0.3064%" height="15" fill="rgb(213,150,20)" fg:x="31003" fg:w="329"/><text x="29.1255%" y="1727.50"></text></g><g><title>std::panicking::try (329 samples, 0.31%)</title><rect x="28.8755%" y="1701" width="0.3064%" height="15" fill="rgb(222,124,42)" fg:x="31003" fg:w="329"/><text x="29.1255%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (329 samples, 0.31%)</title><rect x="28.8755%" y="1685" width="0.3064%" height="15" fill="rgb(250,19,47)" fg:x="31003" fg:w="329"/><text x="29.1255%" y="1695.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (329 samples, 0.31%)</title><rect x="28.8755%" y="1669" width="0.3064%" height="15" fill="rgb(241,217,19)" fg:x="31003" fg:w="329"/><text x="29.1255%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Module::new (11 samples, 0.01%)</title><rect x="29.1828%" y="1733" width="0.0102%" height="15" fill="rgb(207,210,34)" fg:x="31333" fg:w="11"/><text x="29.4328%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Module::new::{{closure}} (11 samples, 0.01%)</title><rect x="29.1828%" y="1717" width="0.0102%" height="15" fill="rgb(244,45,4)" fg:x="31333" fg:w="11"/><text x="29.4328%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="29.1940%" y="1717" width="0.0112%" height="15" fill="rgb(252,134,50)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="29.1940%" y="1701" width="0.0112%" height="15" fill="rgb(238,74,2)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.01%)</title><rect x="29.1940%" y="1685" width="0.0112%" height="15" fill="rgb(226,58,46)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (12 samples, 0.01%)</title><rect x="29.1940%" y="1669" width="0.0112%" height="15" fill="rgb(232,83,35)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="29.1940%" y="1653" width="0.0112%" height="15" fill="rgb(212,148,47)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="29.1940%" y="1637" width="0.0112%" height="15" fill="rgb(235,29,1)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="29.1940%" y="1621" width="0.0112%" height="15" fill="rgb(247,55,37)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="29.1940%" y="1605" width="0.0112%" height="15" fill="rgb(222,48,3)" fg:x="31345" fg:w="12"/><text x="29.4440%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Function::new (11 samples, 0.01%)</title><rect x="29.2052%" y="1717" width="0.0102%" height="15" fill="rgb(234,21,33)" fg:x="31357" fg:w="11"/><text x="29.4552%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (595 samples, 0.55%)</title><rect x="28.6687%" y="1781" width="0.5542%" height="15" fill="rgb(247,178,53)" fg:x="30781" fg:w="595"/><text x="28.9187%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (590 samples, 0.55%)</title><rect x="28.6733%" y="1765" width="0.5495%" height="15" fill="rgb(225,75,7)" fg:x="30786" fg:w="590"/><text x="28.9233%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (44 samples, 0.04%)</title><rect x="29.1819%" y="1749" width="0.0410%" height="15" fill="rgb(219,199,7)" fg:x="31332" fg:w="44"/><text x="29.4319%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (32 samples, 0.03%)</title><rect x="29.1931%" y="1733" width="0.0298%" height="15" fill="rgb(209,93,42)" fg:x="31344" fg:w="32"/><text x="29.4431%" y="1743.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (11 samples, 0.01%)</title><rect x="29.2350%" y="1637" width="0.0102%" height="15" fill="rgb(240,175,17)" fg:x="31389" fg:w="11"/><text x="29.4850%" y="1647.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (14 samples, 0.01%)</title><rect x="29.2331%" y="1653" width="0.0130%" height="15" fill="rgb(232,106,7)" fg:x="31387" fg:w="14"/><text x="29.4831%" y="1663.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (22 samples, 0.02%)</title><rect x="29.2331%" y="1669" width="0.0205%" height="15" fill="rgb(242,106,43)" fg:x="31387" fg:w="22"/><text x="29.4831%" y="1679.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (30 samples, 0.03%)</title><rect x="29.2284%" y="1765" width="0.0279%" height="15" fill="rgb(242,61,37)" fg:x="31382" fg:w="30"/><text x="29.4784%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.03%)</title><rect x="29.2284%" y="1749" width="0.0279%" height="15" fill="rgb(205,72,10)" fg:x="31382" fg:w="30"/><text x="29.4784%" y="1759.50"></text></g><g><title>std::panicking::try (30 samples, 0.03%)</title><rect x="29.2284%" y="1733" width="0.0279%" height="15" fill="rgb(214,184,36)" fg:x="31382" fg:w="30"/><text x="29.4784%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.03%)</title><rect x="29.2284%" y="1717" width="0.0279%" height="15" fill="rgb(206,107,18)" fg:x="31382" fg:w="30"/><text x="29.4784%" y="1727.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (30 samples, 0.03%)</title><rect x="29.2284%" y="1701" width="0.0279%" height="15" fill="rgb(210,75,5)" fg:x="31382" fg:w="30"/><text x="29.4784%" y="1711.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (25 samples, 0.02%)</title><rect x="29.2331%" y="1685" width="0.0233%" height="15" fill="rgb(205,3,19)" fg:x="31387" fg:w="25"/><text x="29.4831%" y="1695.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (12 samples, 0.01%)</title><rect x="29.2825%" y="1557" width="0.0112%" height="15" fill="rgb(207,181,42)" fg:x="31440" fg:w="12"/><text x="29.5325%" y="1567.50"></text></g><g><title>move_bytecode_verifier::reference_safety::call (11 samples, 0.01%)</title><rect x="29.2936%" y="1557" width="0.0102%" height="15" fill="rgb(229,179,43)" fg:x="31452" fg:w="11"/><text x="29.5436%" y="1567.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (45 samples, 0.04%)</title><rect x="29.2815%" y="1573" width="0.0419%" height="15" fill="rgb(246,95,30)" fg:x="31439" fg:w="45"/><text x="29.5315%" y="1583.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (21 samples, 0.02%)</title><rect x="29.3039%" y="1557" width="0.0196%" height="15" fill="rgb(234,144,45)" fg:x="31463" fg:w="21"/><text x="29.5539%" y="1567.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (70 samples, 0.07%)</title><rect x="29.2620%" y="1605" width="0.0652%" height="15" fill="rgb(250,54,25)" fg:x="31418" fg:w="70"/><text x="29.5120%" y="1615.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (51 samples, 0.05%)</title><rect x="29.2797%" y="1589" width="0.0475%" height="15" fill="rgb(215,195,40)" fg:x="31437" fg:w="51"/><text x="29.5297%" y="1599.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (72 samples, 0.07%)</title><rect x="29.2610%" y="1621" width="0.0671%" height="15" fill="rgb(233,188,42)" fg:x="31417" fg:w="72"/><text x="29.5110%" y="1631.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (91 samples, 0.08%)</title><rect x="29.2601%" y="1637" width="0.0848%" height="15" fill="rgb(247,227,35)" fg:x="31416" fg:w="91"/><text x="29.5101%" y="1647.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (18 samples, 0.02%)</title><rect x="29.3281%" y="1621" width="0.0168%" height="15" fill="rgb(249,124,27)" fg:x="31489" fg:w="18"/><text x="29.5781%" y="1631.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (12 samples, 0.01%)</title><rect x="29.3337%" y="1605" width="0.0112%" height="15" fill="rgb(219,207,25)" fg:x="31495" fg:w="12"/><text x="29.5837%" y="1615.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (111 samples, 0.10%)</title><rect x="29.2564%" y="1685" width="0.1034%" height="15" fill="rgb(241,216,47)" fg:x="31412" fg:w="111"/><text x="29.5064%" y="1695.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (111 samples, 0.10%)</title><rect x="29.2564%" y="1669" width="0.1034%" height="15" fill="rgb(233,82,50)" fg:x="31412" fg:w="111"/><text x="29.5064%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (111 samples, 0.10%)</title><rect x="29.2564%" y="1653" width="0.1034%" height="15" fill="rgb(232,63,2)" fg:x="31412" fg:w="111"/><text x="29.5064%" y="1663.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (16 samples, 0.01%)</title><rect x="29.3449%" y="1637" width="0.0149%" height="15" fill="rgb(236,184,28)" fg:x="31507" fg:w="16"/><text x="29.5949%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (148 samples, 0.14%)</title><rect x="29.2229%" y="1781" width="0.1378%" height="15" fill="rgb(254,63,27)" fg:x="31376" fg:w="148"/><text x="29.4729%" y="1791.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (112 samples, 0.10%)</title><rect x="29.2564%" y="1765" width="0.1043%" height="15" fill="rgb(253,106,28)" fg:x="31412" fg:w="112"/><text x="29.5064%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (112 samples, 0.10%)</title><rect x="29.2564%" y="1749" width="0.1043%" height="15" fill="rgb(225,141,39)" fg:x="31412" fg:w="112"/><text x="29.5064%" y="1759.50"></text></g><g><title>std::panicking::try (112 samples, 0.10%)</title><rect x="29.2564%" y="1733" width="0.1043%" height="15" fill="rgb(222,157,20)" fg:x="31412" fg:w="112"/><text x="29.5064%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (112 samples, 0.10%)</title><rect x="29.2564%" y="1717" width="0.1043%" height="15" fill="rgb(210,190,9)" fg:x="31412" fg:w="112"/><text x="29.5064%" y="1727.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (112 samples, 0.10%)</title><rect x="29.2564%" y="1701" width="0.1043%" height="15" fill="rgb(242,167,7)" fg:x="31412" fg:w="112"/><text x="29.5064%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (756 samples, 0.70%)</title><rect x="28.6687%" y="1813" width="0.7041%" height="15" fill="rgb(227,82,41)" fg:x="30781" fg:w="756"/><text x="28.9187%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (756 samples, 0.70%)</title><rect x="28.6687%" y="1797" width="0.7041%" height="15" fill="rgb(222,131,13)" fg:x="30781" fg:w="756"/><text x="28.9187%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (13 samples, 0.01%)</title><rect x="29.3607%" y="1781" width="0.0121%" height="15" fill="rgb(221,98,26)" fg:x="31524" fg:w="13"/><text x="29.6107%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (774 samples, 0.72%)</title><rect x="28.6687%" y="1893" width="0.7209%" height="15" fill="rgb(251,63,52)" fg:x="30781" fg:w="774"/><text x="28.9187%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (774 samples, 0.72%)</title><rect x="28.6687%" y="1877" width="0.7209%" height="15" fill="rgb(246,25,43)" fg:x="30781" fg:w="774"/><text x="28.9187%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (774 samples, 0.72%)</title><rect x="28.6687%" y="1861" width="0.7209%" height="15" fill="rgb(247,167,15)" fg:x="30781" fg:w="774"/><text x="28.9187%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (774 samples, 0.72%)</title><rect x="28.6687%" y="1845" width="0.7209%" height="15" fill="rgb(240,104,42)" fg:x="30781" fg:w="774"/><text x="28.9187%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (774 samples, 0.72%)</title><rect x="28.6687%" y="1829" width="0.7209%" height="15" fill="rgb(224,54,6)" fg:x="30781" fg:w="774"/><text x="28.9187%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (18 samples, 0.02%)</title><rect x="29.3728%" y="1813" width="0.0168%" height="15" fill="rgb(244,108,35)" fg:x="31537" fg:w="18"/><text x="29.6228%" y="1823.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (11 samples, 0.01%)</title><rect x="29.3793%" y="1797" width="0.0102%" height="15" fill="rgb(216,154,2)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="29.3793%" y="1781" width="0.0102%" height="15" fill="rgb(222,8,47)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1791.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="29.3793%" y="1765" width="0.0102%" height="15" fill="rgb(252,93,1)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="29.3793%" y="1749" width="0.0102%" height="15" fill="rgb(223,226,51)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1759.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (11 samples, 0.01%)</title><rect x="29.3793%" y="1733" width="0.0102%" height="15" fill="rgb(206,147,9)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1743.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="29.3793%" y="1717" width="0.0102%" height="15" fill="rgb(248,180,41)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1727.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="29.3793%" y="1701" width="0.0102%" height="15" fill="rgb(209,47,50)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1711.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="29.3793%" y="1685" width="0.0102%" height="15" fill="rgb(243,65,31)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1695.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (11 samples, 0.01%)</title><rect x="29.3793%" y="1669" width="0.0102%" height="15" fill="rgb(228,128,1)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1679.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (11 samples, 0.01%)</title><rect x="29.3793%" y="1653" width="0.0102%" height="15" fill="rgb(231,192,16)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1663.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (11 samples, 0.01%)</title><rect x="29.3793%" y="1637" width="0.0102%" height="15" fill="rgb(224,26,40)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1647.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="29.3793%" y="1621" width="0.0102%" height="15" fill="rgb(214,192,17)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1631.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (11 samples, 0.01%)</title><rect x="29.3793%" y="1605" width="0.0102%" height="15" fill="rgb(225,147,18)" fg:x="31544" fg:w="11"/><text x="29.6293%" y="1615.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (12 samples, 0.01%)</title><rect x="29.4184%" y="1573" width="0.0112%" height="15" fill="rgb(205,35,11)" fg:x="31586" fg:w="12"/><text x="29.6684%" y="1583.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (14 samples, 0.01%)</title><rect x="29.4175%" y="1621" width="0.0130%" height="15" fill="rgb(242,40,42)" fg:x="31585" fg:w="14"/><text x="29.6675%" y="1631.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (14 samples, 0.01%)</title><rect x="29.4175%" y="1605" width="0.0130%" height="15" fill="rgb(250,170,13)" fg:x="31585" fg:w="14"/><text x="29.6675%" y="1615.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (13 samples, 0.01%)</title><rect x="29.4184%" y="1589" width="0.0121%" height="15" fill="rgb(240,161,28)" fg:x="31586" fg:w="13"/><text x="29.6684%" y="1599.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (17 samples, 0.02%)</title><rect x="29.4175%" y="1637" width="0.0158%" height="15" fill="rgb(245,179,12)" fg:x="31585" fg:w="17"/><text x="29.6675%" y="1647.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (28 samples, 0.03%)</title><rect x="29.4110%" y="1685" width="0.0261%" height="15" fill="rgb(250,92,32)" fg:x="31578" fg:w="28"/><text x="29.6610%" y="1695.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (28 samples, 0.03%)</title><rect x="29.4110%" y="1669" width="0.0261%" height="15" fill="rgb(233,10,40)" fg:x="31578" fg:w="28"/><text x="29.6610%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (28 samples, 0.03%)</title><rect x="29.4110%" y="1653" width="0.0261%" height="15" fill="rgb(217,98,1)" fg:x="31578" fg:w="28"/><text x="29.6610%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (43 samples, 0.04%)</title><rect x="29.3989%" y="1781" width="0.0400%" height="15" fill="rgb(238,202,7)" fg:x="31565" fg:w="43"/><text x="29.6489%" y="1791.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (31 samples, 0.03%)</title><rect x="29.4101%" y="1765" width="0.0289%" height="15" fill="rgb(222,91,3)" fg:x="31577" fg:w="31"/><text x="29.6601%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (31 samples, 0.03%)</title><rect x="29.4101%" y="1749" width="0.0289%" height="15" fill="rgb(211,170,49)" fg:x="31577" fg:w="31"/><text x="29.6601%" y="1759.50"></text></g><g><title>std::panicking::try (31 samples, 0.03%)</title><rect x="29.4101%" y="1733" width="0.0289%" height="15" fill="rgb(253,139,18)" fg:x="31577" fg:w="31"/><text x="29.6601%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (31 samples, 0.03%)</title><rect x="29.4101%" y="1717" width="0.0289%" height="15" fill="rgb(222,4,43)" fg:x="31577" fg:w="31"/><text x="29.6601%" y="1727.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (31 samples, 0.03%)</title><rect x="29.4101%" y="1701" width="0.0289%" height="15" fill="rgb(207,205,12)" fg:x="31577" fg:w="31"/><text x="29.6601%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (64 samples, 0.06%)</title><rect x="29.3896%" y="1813" width="0.0596%" height="15" fill="rgb(216,159,46)" fg:x="31555" fg:w="64"/><text x="29.6396%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (63 samples, 0.06%)</title><rect x="29.3905%" y="1797" width="0.0587%" height="15" fill="rgb(236,115,1)" fg:x="31556" fg:w="63"/><text x="29.6405%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (11 samples, 0.01%)</title><rect x="29.4389%" y="1781" width="0.0102%" height="15" fill="rgb(251,35,33)" fg:x="31608" fg:w="11"/><text x="29.6889%" y="1791.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (16 samples, 0.01%)</title><rect x="29.4501%" y="1701" width="0.0149%" height="15" fill="rgb(248,62,51)" fg:x="31620" fg:w="16"/><text x="29.7001%" y="1711.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (17 samples, 0.02%)</title><rect x="29.4501%" y="1797" width="0.0158%" height="15" fill="rgb(254,180,19)" fg:x="31620" fg:w="17"/><text x="29.7001%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="29.4501%" y="1781" width="0.0158%" height="15" fill="rgb(217,100,32)" fg:x="31620" fg:w="17"/><text x="29.7001%" y="1791.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="29.4501%" y="1765" width="0.0158%" height="15" fill="rgb(224,71,22)" fg:x="31620" fg:w="17"/><text x="29.7001%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="29.4501%" y="1749" width="0.0158%" height="15" fill="rgb(251,185,33)" fg:x="31620" fg:w="17"/><text x="29.7001%" y="1759.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (17 samples, 0.02%)</title><rect x="29.4501%" y="1733" width="0.0158%" height="15" fill="rgb(209,75,48)" fg:x="31620" fg:w="17"/><text x="29.7001%" y="1743.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (17 samples, 0.02%)</title><rect x="29.4501%" y="1717" width="0.0158%" height="15" fill="rgb(253,190,16)" fg:x="31620" fg:w="17"/><text x="29.7001%" y="1727.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (22 samples, 0.02%)</title><rect x="29.4669%" y="1653" width="0.0205%" height="15" fill="rgb(226,140,1)" fg:x="31638" fg:w="22"/><text x="29.7169%" y="1663.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (22 samples, 0.02%)</title><rect x="29.4669%" y="1637" width="0.0205%" height="15" fill="rgb(206,75,30)" fg:x="31638" fg:w="22"/><text x="29.7169%" y="1647.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (19 samples, 0.02%)</title><rect x="29.4697%" y="1621" width="0.0177%" height="15" fill="rgb(231,208,37)" fg:x="31641" fg:w="19"/><text x="29.7197%" y="1631.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (19 samples, 0.02%)</title><rect x="29.4697%" y="1605" width="0.0177%" height="15" fill="rgb(238,136,40)" fg:x="31641" fg:w="19"/><text x="29.7197%" y="1615.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (24 samples, 0.02%)</title><rect x="29.4669%" y="1669" width="0.0224%" height="15" fill="rgb(247,137,17)" fg:x="31638" fg:w="24"/><text x="29.7169%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (44 samples, 0.04%)</title><rect x="29.4492%" y="1813" width="0.0410%" height="15" fill="rgb(240,60,40)" fg:x="31619" fg:w="44"/><text x="29.6992%" y="1823.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (26 samples, 0.02%)</title><rect x="29.4659%" y="1797" width="0.0242%" height="15" fill="rgb(236,68,50)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.02%)</title><rect x="29.4659%" y="1781" width="0.0242%" height="15" fill="rgb(230,42,12)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1791.50"></text></g><g><title>std::panicking::try (26 samples, 0.02%)</title><rect x="29.4659%" y="1765" width="0.0242%" height="15" fill="rgb(219,16,16)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.02%)</title><rect x="29.4659%" y="1749" width="0.0242%" height="15" fill="rgb(220,38,35)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1759.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (26 samples, 0.02%)</title><rect x="29.4659%" y="1733" width="0.0242%" height="15" fill="rgb(228,33,1)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1743.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (26 samples, 0.02%)</title><rect x="29.4659%" y="1717" width="0.0242%" height="15" fill="rgb(241,46,31)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1727.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (26 samples, 0.02%)</title><rect x="29.4659%" y="1701" width="0.0242%" height="15" fill="rgb(232,58,20)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1711.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (26 samples, 0.02%)</title><rect x="29.4659%" y="1685" width="0.0242%" height="15" fill="rgb(206,228,53)" fg:x="31637" fg:w="26"/><text x="29.7159%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (901 samples, 0.84%)</title><rect x="28.6687%" y="1925" width="0.8392%" height="15" fill="rgb(206,88,33)" fg:x="30781" fg:w="901"/><text x="28.9187%" y="1935.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (901 samples, 0.84%)</title><rect x="28.6687%" y="1909" width="0.8392%" height="15" fill="rgb(238,69,7)" fg:x="30781" fg:w="901"/><text x="28.9187%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (127 samples, 0.12%)</title><rect x="29.3896%" y="1893" width="0.1183%" height="15" fill="rgb(250,21,46)" fg:x="31555" fg:w="127"/><text x="29.6396%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (127 samples, 0.12%)</title><rect x="29.3896%" y="1877" width="0.1183%" height="15" fill="rgb(215,212,21)" fg:x="31555" fg:w="127"/><text x="29.6396%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (127 samples, 0.12%)</title><rect x="29.3896%" y="1861" width="0.1183%" height="15" fill="rgb(211,35,12)" fg:x="31555" fg:w="127"/><text x="29.6396%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (127 samples, 0.12%)</title><rect x="29.3896%" y="1845" width="0.1183%" height="15" fill="rgb(231,184,16)" fg:x="31555" fg:w="127"/><text x="29.6396%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (127 samples, 0.12%)</title><rect x="29.3896%" y="1829" width="0.1183%" height="15" fill="rgb(242,140,15)" fg:x="31555" fg:w="127"/><text x="29.6396%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (19 samples, 0.02%)</title><rect x="29.4902%" y="1813" width="0.0177%" height="15" fill="rgb(220,37,14)" fg:x="31663" fg:w="19"/><text x="29.7402%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (16 samples, 0.01%)</title><rect x="29.4930%" y="1797" width="0.0149%" height="15" fill="rgb(223,146,22)" fg:x="31666" fg:w="16"/><text x="29.7430%" y="1807.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (12 samples, 0.01%)</title><rect x="29.5237%" y="1701" width="0.0112%" height="15" fill="rgb(216,132,15)" fg:x="31699" fg:w="12"/><text x="29.7737%" y="1711.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (19 samples, 0.02%)</title><rect x="29.5200%" y="1797" width="0.0177%" height="15" fill="rgb(248,83,5)" fg:x="31695" fg:w="19"/><text x="29.7700%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="29.5200%" y="1781" width="0.0177%" height="15" fill="rgb(231,206,48)" fg:x="31695" fg:w="19"/><text x="29.7700%" y="1791.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="29.5200%" y="1765" width="0.0177%" height="15" fill="rgb(253,185,37)" fg:x="31695" fg:w="19"/><text x="29.7700%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="29.5200%" y="1749" width="0.0177%" height="15" fill="rgb(208,21,44)" fg:x="31695" fg:w="19"/><text x="29.7700%" y="1759.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (19 samples, 0.02%)</title><rect x="29.5200%" y="1733" width="0.0177%" height="15" fill="rgb(236,125,4)" fg:x="31695" fg:w="19"/><text x="29.7700%" y="1743.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (15 samples, 0.01%)</title><rect x="29.5237%" y="1717" width="0.0140%" height="15" fill="rgb(226,134,25)" fg:x="31699" fg:w="15"/><text x="29.7737%" y="1727.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (11 samples, 0.01%)</title><rect x="29.5628%" y="1589" width="0.0102%" height="15" fill="rgb(250,201,12)" fg:x="31741" fg:w="11"/><text x="29.8128%" y="1599.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (28 samples, 0.03%)</title><rect x="29.5535%" y="1653" width="0.0261%" height="15" fill="rgb(225,92,18)" fg:x="31731" fg:w="28"/><text x="29.8035%" y="1663.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (27 samples, 0.03%)</title><rect x="29.5544%" y="1637" width="0.0251%" height="15" fill="rgb(227,35,22)" fg:x="31732" fg:w="27"/><text x="29.8044%" y="1647.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (21 samples, 0.02%)</title><rect x="29.5600%" y="1621" width="0.0196%" height="15" fill="rgb(214,180,52)" fg:x="31738" fg:w="21"/><text x="29.8100%" y="1631.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (20 samples, 0.02%)</title><rect x="29.5609%" y="1605" width="0.0186%" height="15" fill="rgb(233,55,38)" fg:x="31739" fg:w="20"/><text x="29.8109%" y="1615.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (45 samples, 0.04%)</title><rect x="29.5507%" y="1669" width="0.0419%" height="15" fill="rgb(249,171,43)" fg:x="31728" fg:w="45"/><text x="29.8007%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (61 samples, 0.06%)</title><rect x="29.5470%" y="1685" width="0.0568%" height="15" fill="rgb(239,87,2)" fg:x="31724" fg:w="61"/><text x="29.7970%" y="1695.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (12 samples, 0.01%)</title><rect x="29.5926%" y="1669" width="0.0112%" height="15" fill="rgb(248,141,5)" fg:x="31773" fg:w="12"/><text x="29.8426%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (63 samples, 0.06%)</title><rect x="29.5470%" y="1717" width="0.0587%" height="15" fill="rgb(238,33,42)" fg:x="31724" fg:w="63"/><text x="29.7970%" y="1727.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (63 samples, 0.06%)</title><rect x="29.5470%" y="1701" width="0.0587%" height="15" fill="rgb(231,57,19)" fg:x="31724" fg:w="63"/><text x="29.7970%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (99 samples, 0.09%)</title><rect x="29.5172%" y="1813" width="0.0922%" height="15" fill="rgb(214,78,53)" fg:x="31692" fg:w="99"/><text x="29.7672%" y="1823.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (77 samples, 0.07%)</title><rect x="29.5377%" y="1797" width="0.0717%" height="15" fill="rgb(206,132,29)" fg:x="31714" fg:w="77"/><text x="29.7877%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (77 samples, 0.07%)</title><rect x="29.5377%" y="1781" width="0.0717%" height="15" fill="rgb(248,174,31)" fg:x="31714" fg:w="77"/><text x="29.7877%" y="1791.50"></text></g><g><title>std::panicking::try (77 samples, 0.07%)</title><rect x="29.5377%" y="1765" width="0.0717%" height="15" fill="rgb(221,87,13)" fg:x="31714" fg:w="77"/><text x="29.7877%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (77 samples, 0.07%)</title><rect x="29.5377%" y="1749" width="0.0717%" height="15" fill="rgb(223,197,17)" fg:x="31714" fg:w="77"/><text x="29.7877%" y="1759.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (77 samples, 0.07%)</title><rect x="29.5377%" y="1733" width="0.0717%" height="15" fill="rgb(220,144,50)" fg:x="31714" fg:w="77"/><text x="29.7877%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (128 samples, 0.12%)</title><rect x="29.5079%" y="1845" width="0.1192%" height="15" fill="rgb(244,201,11)" fg:x="31682" fg:w="128"/><text x="29.7579%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (128 samples, 0.12%)</title><rect x="29.5079%" y="1829" width="0.1192%" height="15" fill="rgb(249,81,34)" fg:x="31682" fg:w="128"/><text x="29.7579%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (19 samples, 0.02%)</title><rect x="29.6094%" y="1813" width="0.0177%" height="15" fill="rgb(205,161,12)" fg:x="31791" fg:w="19"/><text x="29.8594%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (13 samples, 0.01%)</title><rect x="29.6150%" y="1797" width="0.0121%" height="15" fill="rgb(252,139,50)" fg:x="31797" fg:w="13"/><text x="29.8650%" y="1807.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (13 samples, 0.01%)</title><rect x="29.6271%" y="1829" width="0.0121%" height="15" fill="rgb(205,169,14)" fg:x="31810" fg:w="13"/><text x="29.8771%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="29.6271%" y="1813" width="0.0121%" height="15" fill="rgb(248,198,33)" fg:x="31810" fg:w="13"/><text x="29.8771%" y="1823.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="29.6271%" y="1797" width="0.0121%" height="15" fill="rgb(236,23,21)" fg:x="31810" fg:w="13"/><text x="29.8771%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="29.6271%" y="1781" width="0.0121%" height="15" fill="rgb(231,13,38)" fg:x="31810" fg:w="13"/><text x="29.8771%" y="1791.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (13 samples, 0.01%)</title><rect x="29.6271%" y="1765" width="0.0121%" height="15" fill="rgb(239,139,21)" fg:x="31810" fg:w="13"/><text x="29.8771%" y="1775.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (13 samples, 0.01%)</title><rect x="29.6271%" y="1749" width="0.0121%" height="15" fill="rgb(222,164,45)" fg:x="31810" fg:w="13"/><text x="29.8771%" y="1759.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (13 samples, 0.01%)</title><rect x="29.6271%" y="1733" width="0.0121%" height="15" fill="rgb(230,52,27)" fg:x="31810" fg:w="13"/><text x="29.8771%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (26 samples, 0.02%)</title><rect x="29.6271%" y="1845" width="0.0242%" height="15" fill="rgb(227,143,42)" fg:x="31810" fg:w="26"/><text x="29.8771%" y="1855.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (13 samples, 0.01%)</title><rect x="29.6392%" y="1829" width="0.0121%" height="15" fill="rgb(249,127,1)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="29.6392%" y="1813" width="0.0121%" height="15" fill="rgb(243,107,26)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1823.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="29.6392%" y="1797" width="0.0121%" height="15" fill="rgb(225,7,45)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="29.6392%" y="1781" width="0.0121%" height="15" fill="rgb(241,88,38)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1791.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (13 samples, 0.01%)</title><rect x="29.6392%" y="1765" width="0.0121%" height="15" fill="rgb(226,121,9)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1775.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (13 samples, 0.01%)</title><rect x="29.6392%" y="1749" width="0.0121%" height="15" fill="rgb(253,60,29)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1759.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (13 samples, 0.01%)</title><rect x="29.6392%" y="1733" width="0.0121%" height="15" fill="rgb(244,181,39)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1743.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (13 samples, 0.01%)</title><rect x="29.6392%" y="1717" width="0.0121%" height="15" fill="rgb(252,203,31)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1727.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (13 samples, 0.01%)</title><rect x="29.6392%" y="1701" width="0.0121%" height="15" fill="rgb(224,120,8)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1711.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (13 samples, 0.01%)</title><rect x="29.6392%" y="1685" width="0.0121%" height="15" fill="rgb(205,171,54)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1695.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (13 samples, 0.01%)</title><rect x="29.6392%" y="1669" width="0.0121%" height="15" fill="rgb(235,89,11)" fg:x="31823" fg:w="13"/><text x="29.8892%" y="1679.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="29.6410%" y="1653" width="0.0102%" height="15" fill="rgb(212,180,28)" fg:x="31825" fg:w="11"/><text x="29.8910%" y="1663.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (11 samples, 0.01%)</title><rect x="29.6410%" y="1637" width="0.0102%" height="15" fill="rgb(247,84,49)" fg:x="31825" fg:w="11"/><text x="29.8910%" y="1647.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (1,060 samples, 0.99%)</title><rect x="28.6687%" y="2021" width="0.9873%" height="15" fill="rgb(236,187,52)" fg:x="30781" fg:w="1060"/><text x="28.9187%" y="2031.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (1,060 samples, 0.99%)</title><rect x="28.6687%" y="2005" width="0.9873%" height="15" fill="rgb(227,24,15)" fg:x="30781" fg:w="1060"/><text x="28.9187%" y="2015.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (1,060 samples, 0.99%)</title><rect x="28.6687%" y="1989" width="0.9873%" height="15" fill="rgb(227,211,13)" fg:x="30781" fg:w="1060"/><text x="28.9187%" y="1999.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (1,060 samples, 0.99%)</title><rect x="28.6687%" y="1973" width="0.9873%" height="15" fill="rgb(245,52,14)" fg:x="30781" fg:w="1060"/><text x="28.9187%" y="1983.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (1,060 samples, 0.99%)</title><rect x="28.6687%" y="1957" width="0.9873%" height="15" fill="rgb(225,185,13)" fg:x="30781" fg:w="1060"/><text x="28.9187%" y="1967.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (1,060 samples, 0.99%)</title><rect x="28.6687%" y="1941" width="0.9873%" height="15" fill="rgb(217,160,29)" fg:x="30781" fg:w="1060"/><text x="28.9187%" y="1951.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (159 samples, 0.15%)</title><rect x="29.5079%" y="1925" width="0.1481%" height="15" fill="rgb(216,115,53)" fg:x="31682" fg:w="159"/><text x="29.7579%" y="1935.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (159 samples, 0.15%)</title><rect x="29.5079%" y="1909" width="0.1481%" height="15" fill="rgb(236,99,5)" fg:x="31682" fg:w="159"/><text x="29.7579%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (159 samples, 0.15%)</title><rect x="29.5079%" y="1893" width="0.1481%" height="15" fill="rgb(222,60,38)" fg:x="31682" fg:w="159"/><text x="29.7579%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (159 samples, 0.15%)</title><rect x="29.5079%" y="1877" width="0.1481%" height="15" fill="rgb(212,82,22)" fg:x="31682" fg:w="159"/><text x="29.7579%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (159 samples, 0.15%)</title><rect x="29.5079%" y="1861" width="0.1481%" height="15" fill="rgb(214,48,28)" fg:x="31682" fg:w="159"/><text x="29.7579%" y="1871.50"></text></g><g><title>aptos_vm::natives::aptos_natives (14 samples, 0.01%)</title><rect x="29.6736%" y="1973" width="0.0130%" height="15" fill="rgb(245,196,50)" fg:x="31860" fg:w="14"/><text x="29.9236%" y="1983.50"></text></g><g><title>move_stdlib::natives::all_natives (12 samples, 0.01%)</title><rect x="29.6755%" y="1957" width="0.0112%" height="15" fill="rgb(225,159,46)" fg:x="31862" fg:w="12"/><text x="29.9255%" y="1967.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (1,100 samples, 1.02%)</title><rect x="28.6687%" y="2037" width="1.0245%" height="15" fill="rgb(207,195,48)" fg:x="30781" fg:w="1100"/><text x="28.9187%" y="2047.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::new (40 samples, 0.04%)</title><rect x="29.6559%" y="2021" width="0.0373%" height="15" fill="rgb(240,73,3)" fg:x="31841" fg:w="40"/><text x="29.9059%" y="2031.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new (40 samples, 0.04%)</title><rect x="29.6559%" y="2005" width="0.0373%" height="15" fill="rgb(245,57,23)" fg:x="31841" fg:w="40"/><text x="29.9059%" y="2015.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new (21 samples, 0.02%)</title><rect x="29.6736%" y="1989" width="0.0196%" height="15" fill="rgb(240,75,18)" fg:x="31860" fg:w="21"/><text x="29.9236%" y="1999.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.02%)</title><rect x="29.7305%" y="1909" width="0.0214%" height="15" fill="rgb(238,168,12)" fg:x="31921" fg:w="23"/><text x="29.9805%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="29.7305%" y="1893" width="0.0214%" height="15" fill="rgb(226,20,40)" fg:x="31921" fg:w="23"/><text x="29.9805%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="29.7305%" y="1877" width="0.0214%" height="15" fill="rgb(224,130,35)" fg:x="31921" fg:w="23"/><text x="29.9805%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="29.7305%" y="1861" width="0.0214%" height="15" fill="rgb(225,63,41)" fg:x="31921" fg:w="23"/><text x="29.9805%" y="1871.50"></text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="29.7379%" y="1845" width="0.0140%" height="15" fill="rgb(219,3,3)" fg:x="31929" fg:w="15"/><text x="29.9879%" y="1855.50"></text></g><g><title>aptos_types::account_config::resources::transaction_validation::TransactionValidation::module_id (16 samples, 0.01%)</title><rect x="29.7584%" y="1909" width="0.0149%" height="15" fill="rgb(218,157,4)" fg:x="31951" fg:w="16"/><text x="30.0084%" y="1919.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.7631%" y="1893" width="0.0102%" height="15" fill="rgb(232,76,36)" fg:x="31956" fg:w="11"/><text x="30.0131%" y="1903.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.7631%" y="1877" width="0.0102%" height="15" fill="rgb(247,36,0)" fg:x="31956" fg:w="11"/><text x="30.0131%" y="1887.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::transaction_validation (11 samples, 0.01%)</title><rect x="29.7789%" y="1909" width="0.0102%" height="15" fill="rgb(205,2,34)" fg:x="31973" fg:w="11"/><text x="30.0289%" y="1919.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="29.8171%" y="1861" width="0.0121%" height="15" fill="rgb(239,136,13)" fg:x="32014" fg:w="13"/><text x="30.0671%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.08%)</title><rect x="29.8134%" y="1893" width="0.0810%" height="15" fill="rgb(253,122,12)" fg:x="32010" fg:w="87"/><text x="30.0634%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveValue]&gt; (87 samples, 0.08%)</title><rect x="29.8134%" y="1877" width="0.0810%" height="15" fill="rgb(222,174,7)" fg:x="32010" fg:w="87"/><text x="30.0634%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (70 samples, 0.07%)</title><rect x="29.8292%" y="1861" width="0.0652%" height="15" fill="rgb(208,191,42)" fg:x="32027" fg:w="70"/><text x="30.0792%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveValue&gt;&gt; (50 samples, 0.05%)</title><rect x="29.8478%" y="1845" width="0.0466%" height="15" fill="rgb(237,212,15)" fg:x="32047" fg:w="50"/><text x="30.0978%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="29.8478%" y="1829" width="0.0466%" height="15" fill="rgb(215,65,20)" fg:x="32047" fg:w="50"/><text x="30.0978%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveValue]&gt; (42 samples, 0.04%)</title><rect x="29.8553%" y="1813" width="0.0391%" height="15" fill="rgb(232,103,11)" fg:x="32055" fg:w="42"/><text x="30.1053%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (38 samples, 0.04%)</title><rect x="29.8590%" y="1797" width="0.0354%" height="15" fill="rgb(235,148,18)" fg:x="32059" fg:w="38"/><text x="30.1090%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="29.8944%" y="1861" width="0.0121%" height="15" fill="rgb(240,173,7)" fg:x="32097" fg:w="13"/><text x="30.1444%" y="1871.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="29.8944%" y="1845" width="0.0121%" height="15" fill="rgb(228,182,25)" fg:x="32097" fg:w="13"/><text x="30.1444%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveValue&gt;&gt; (102 samples, 0.10%)</title><rect x="29.8134%" y="1909" width="0.0950%" height="15" fill="rgb(247,3,52)" fg:x="32010" fg:w="102"/><text x="30.0634%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_core_types::value::MoveValue&gt;&gt; (15 samples, 0.01%)</title><rect x="29.8944%" y="1893" width="0.0140%" height="15" fill="rgb(226,155,8)" fg:x="32097" fg:w="15"/><text x="30.1444%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="29.8944%" y="1877" width="0.0140%" height="15" fill="rgb(243,195,38)" fg:x="32097" fg:w="15"/><text x="30.1444%" y="1887.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (21 samples, 0.02%)</title><rect x="29.9167%" y="1909" width="0.0196%" height="15" fill="rgb(254,181,33)" fg:x="32121" fg:w="21"/><text x="30.1667%" y="1919.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue::{{closure}} (17 samples, 0.02%)</title><rect x="29.9205%" y="1893" width="0.0158%" height="15" fill="rgb(232,98,23)" fg:x="32125" fg:w="17"/><text x="30.1705%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::SerializedReturnValues&gt; (17 samples, 0.02%)</title><rect x="29.9205%" y="1877" width="0.0158%" height="15" fill="rgb(205,23,10)" fg:x="32125" fg:w="17"/><text x="30.1705%" y="1887.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="29.9968%" y="1765" width="0.0102%" height="15" fill="rgb(212,124,38)" fg:x="32207" fg:w="11"/><text x="30.2468%" y="1775.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (17 samples, 0.02%)</title><rect x="30.0071%" y="1765" width="0.0158%" height="15" fill="rgb(228,207,2)" fg:x="32218" fg:w="17"/><text x="30.2571%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (17 samples, 0.02%)</title><rect x="30.0071%" y="1749" width="0.0158%" height="15" fill="rgb(215,120,22)" fg:x="32218" fg:w="17"/><text x="30.2571%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (17 samples, 0.02%)</title><rect x="30.0071%" y="1733" width="0.0158%" height="15" fill="rgb(251,172,33)" fg:x="32218" fg:w="17"/><text x="30.2571%" y="1743.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="30.0071%" y="1717" width="0.0158%" height="15" fill="rgb(250,83,2)" fg:x="32218" fg:w="17"/><text x="30.2571%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="30.0229%" y="1669" width="0.0196%" height="15" fill="rgb(210,132,53)" fg:x="32235" fg:w="21"/><text x="30.2729%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="30.0229%" y="1653" width="0.0196%" height="15" fill="rgb(221,208,36)" fg:x="32235" fg:w="21"/><text x="30.2729%" y="1663.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="30.0248%" y="1637" width="0.0177%" height="15" fill="rgb(205,192,46)" fg:x="32237" fg:w="19"/><text x="30.2748%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (59 samples, 0.05%)</title><rect x="29.9922%" y="1829" width="0.0550%" height="15" fill="rgb(223,163,14)" fg:x="32202" fg:w="59"/><text x="30.2422%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (55 samples, 0.05%)</title><rect x="29.9959%" y="1813" width="0.0512%" height="15" fill="rgb(218,41,28)" fg:x="32206" fg:w="55"/><text x="30.2459%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54 samples, 0.05%)</title><rect x="29.9968%" y="1797" width="0.0503%" height="15" fill="rgb(235,104,10)" fg:x="32207" fg:w="54"/><text x="30.2468%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (54 samples, 0.05%)</title><rect x="29.9968%" y="1781" width="0.0503%" height="15" fill="rgb(246,17,4)" fg:x="32207" fg:w="54"/><text x="30.2468%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt; (26 samples, 0.02%)</title><rect x="30.0229%" y="1765" width="0.0242%" height="15" fill="rgb(240,7,16)" fg:x="32235" fg:w="26"/><text x="30.2729%" y="1775.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="30.0229%" y="1749" width="0.0242%" height="15" fill="rgb(213,160,23)" fg:x="32235" fg:w="26"/><text x="30.2729%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (26 samples, 0.02%)</title><rect x="30.0229%" y="1733" width="0.0242%" height="15" fill="rgb(251,179,49)" fg:x="32235" fg:w="26"/><text x="30.2729%" y="1743.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="30.0229%" y="1717" width="0.0242%" height="15" fill="rgb(247,198,10)" fg:x="32235" fg:w="26"/><text x="30.2729%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (26 samples, 0.02%)</title><rect x="30.0229%" y="1701" width="0.0242%" height="15" fill="rgb(220,65,29)" fg:x="32235" fg:w="26"/><text x="30.2729%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="30.0229%" y="1685" width="0.0242%" height="15" fill="rgb(237,171,28)" fg:x="32235" fg:w="26"/><text x="30.2729%" y="1695.50"></text></g><g><title>move_core_types::value::MoveValue::vector_u8 (235 samples, 0.22%)</title><rect x="29.9372%" y="1909" width="0.2189%" height="15" fill="rgb(228,44,26)" fg:x="32143" fg:w="235"/><text x="30.1872%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (217 samples, 0.20%)</title><rect x="29.9540%" y="1893" width="0.2021%" height="15" fill="rgb(216,210,27)" fg:x="32161" fg:w="217"/><text x="30.2040%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (217 samples, 0.20%)</title><rect x="29.9540%" y="1877" width="0.2021%" height="15" fill="rgb(252,10,17)" fg:x="32161" fg:w="217"/><text x="30.2040%" y="1887.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (213 samples, 0.20%)</title><rect x="29.9577%" y="1861" width="0.1984%" height="15" fill="rgb(214,172,30)" fg:x="32165" fg:w="213"/><text x="30.2077%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (195 samples, 0.18%)</title><rect x="29.9745%" y="1845" width="0.1816%" height="15" fill="rgb(253,130,48)" fg:x="32183" fg:w="195"/><text x="30.2245%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (117 samples, 0.11%)</title><rect x="30.0471%" y="1829" width="0.1090%" height="15" fill="rgb(226,99,43)" fg:x="32261" fg:w="117"/><text x="30.2971%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (117 samples, 0.11%)</title><rect x="30.0471%" y="1813" width="0.1090%" height="15" fill="rgb(239,111,26)" fg:x="32261" fg:w="117"/><text x="30.2971%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (114 samples, 0.11%)</title><rect x="30.0499%" y="1797" width="0.1062%" height="15" fill="rgb(240,27,53)" fg:x="32264" fg:w="114"/><text x="30.2999%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (114 samples, 0.11%)</title><rect x="30.0499%" y="1781" width="0.1062%" height="15" fill="rgb(254,163,12)" fg:x="32264" fg:w="114"/><text x="30.2999%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (110 samples, 0.10%)</title><rect x="30.0536%" y="1765" width="0.1025%" height="15" fill="rgb(225,51,48)" fg:x="32268" fg:w="110"/><text x="30.3036%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (110 samples, 0.10%)</title><rect x="30.0536%" y="1749" width="0.1025%" height="15" fill="rgb(205,19,32)" fg:x="32268" fg:w="110"/><text x="30.3036%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (110 samples, 0.10%)</title><rect x="30.0536%" y="1733" width="0.1025%" height="15" fill="rgb(218,119,26)" fg:x="32268" fg:w="110"/><text x="30.3036%" y="1743.50"></text></g><g><title>malloc (105 samples, 0.10%)</title><rect x="30.0583%" y="1717" width="0.0978%" height="15" fill="rgb(231,173,33)" fg:x="32273" fg:w="105"/><text x="30.3083%" y="1727.50"></text></g><g><title>[libc.so.6] (92 samples, 0.09%)</title><rect x="30.0704%" y="1701" width="0.0857%" height="15" fill="rgb(241,100,29)" fg:x="32286" fg:w="92"/><text x="30.3204%" y="1711.50"></text></g><g><title>[libc.so.6] (62 samples, 0.06%)</title><rect x="30.0984%" y="1685" width="0.0577%" height="15" fill="rgb(250,194,34)" fg:x="32316" fg:w="62"/><text x="30.3484%" y="1695.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.04%)</title><rect x="30.2595%" y="1605" width="0.0382%" height="15" fill="rgb(215,23,50)" fg:x="32489" fg:w="41"/><text x="30.5095%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (38 samples, 0.04%)</title><rect x="30.2623%" y="1589" width="0.0354%" height="15" fill="rgb(206,49,37)" fg:x="32492" fg:w="38"/><text x="30.5123%" y="1599.50"></text></g><g><title>alloc::alloc::Global::grow_impl (38 samples, 0.04%)</title><rect x="30.2623%" y="1573" width="0.0354%" height="15" fill="rgb(247,39,21)" fg:x="32492" fg:w="38"/><text x="30.5123%" y="1583.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.03%)</title><rect x="30.2632%" y="1557" width="0.0345%" height="15" fill="rgb(209,220,15)" fg:x="32493" fg:w="37"/><text x="30.5132%" y="1567.50"></text></g><g><title>realloc (33 samples, 0.03%)</title><rect x="30.2669%" y="1541" width="0.0307%" height="15" fill="rgb(206,41,33)" fg:x="32497" fg:w="33"/><text x="30.5169%" y="1551.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="30.2762%" y="1525" width="0.0214%" height="15" fill="rgb(221,225,45)" fg:x="32507" fg:w="23"/><text x="30.5262%" y="1535.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="30.2828%" y="1509" width="0.0149%" height="15" fill="rgb(216,27,18)" fg:x="32514" fg:w="16"/><text x="30.5328%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (101 samples, 0.09%)</title><rect x="30.2055%" y="1669" width="0.0941%" height="15" fill="rgb(250,193,34)" fg:x="32431" fg:w="101"/><text x="30.4555%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (101 samples, 0.09%)</title><rect x="30.2055%" y="1653" width="0.0941%" height="15" fill="rgb(227,215,20)" fg:x="32431" fg:w="101"/><text x="30.4555%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (48 samples, 0.04%)</title><rect x="30.2548%" y="1637" width="0.0447%" height="15" fill="rgb(242,211,27)" fg:x="32484" fg:w="48"/><text x="30.5048%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (46 samples, 0.04%)</title><rect x="30.2567%" y="1621" width="0.0428%" height="15" fill="rgb(229,190,30)" fg:x="32486" fg:w="46"/><text x="30.5067%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.02%)</title><rect x="30.3126%" y="1493" width="0.0186%" height="15" fill="rgb(253,31,29)" fg:x="32546" fg:w="20"/><text x="30.5626%" y="1503.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="30.3135%" y="1477" width="0.0177%" height="15" fill="rgb(229,177,52)" fg:x="32547" fg:w="19"/><text x="30.5635%" y="1487.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="30.3210%" y="1461" width="0.0102%" height="15" fill="rgb(226,88,8)" fg:x="32555" fg:w="11"/><text x="30.5710%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="30.3061%" y="1557" width="0.0261%" height="15" fill="rgb(214,55,27)" fg:x="32539" fg:w="28"/><text x="30.5561%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="30.3061%" y="1541" width="0.0261%" height="15" fill="rgb(233,202,5)" fg:x="32539" fg:w="28"/><text x="30.5561%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.02%)</title><rect x="30.3088%" y="1525" width="0.0233%" height="15" fill="rgb(251,49,30)" fg:x="32542" fg:w="25"/><text x="30.5588%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.02%)</title><rect x="30.3126%" y="1509" width="0.0196%" height="15" fill="rgb(235,18,52)" fg:x="32546" fg:w="21"/><text x="30.5626%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_seq (36 samples, 0.03%)</title><rect x="30.2995%" y="1669" width="0.0335%" height="15" fill="rgb(250,111,51)" fg:x="32532" fg:w="36"/><text x="30.5495%" y="1679.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (36 samples, 0.03%)</title><rect x="30.2995%" y="1653" width="0.0335%" height="15" fill="rgb(218,13,25)" fg:x="32532" fg:w="36"/><text x="30.5495%" y="1663.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (33 samples, 0.03%)</title><rect x="30.3023%" y="1637" width="0.0307%" height="15" fill="rgb(248,96,7)" fg:x="32535" fg:w="33"/><text x="30.5523%" y="1647.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (32 samples, 0.03%)</title><rect x="30.3033%" y="1621" width="0.0298%" height="15" fill="rgb(217,31,15)" fg:x="32536" fg:w="32"/><text x="30.5533%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 0.03%)</title><rect x="30.3033%" y="1605" width="0.0298%" height="15" fill="rgb(228,59,49)" fg:x="32536" fg:w="32"/><text x="30.5533%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.03%)</title><rect x="30.3033%" y="1589" width="0.0298%" height="15" fill="rgb(210,152,38)" fg:x="32536" fg:w="32"/><text x="30.5533%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 0.03%)</title><rect x="30.3033%" y="1573" width="0.0298%" height="15" fill="rgb(206,71,11)" fg:x="32536" fg:w="32"/><text x="30.5533%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="30.3452%" y="1525" width="0.0224%" height="15" fill="rgb(244,199,5)" fg:x="32581" fg:w="24"/><text x="30.5952%" y="1535.50"></text></g><g><title>malloc (20 samples, 0.02%)</title><rect x="30.3489%" y="1509" width="0.0186%" height="15" fill="rgb(253,49,1)" fg:x="32585" fg:w="20"/><text x="30.5989%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 0.03%)</title><rect x="30.3359%" y="1589" width="0.0326%" height="15" fill="rgb(225,206,40)" fg:x="32571" fg:w="35"/><text x="30.5859%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.03%)</title><rect x="30.3359%" y="1573" width="0.0326%" height="15" fill="rgb(243,116,47)" fg:x="32571" fg:w="35"/><text x="30.5859%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.03%)</title><rect x="30.3414%" y="1557" width="0.0270%" height="15" fill="rgb(219,225,16)" fg:x="32577" fg:w="29"/><text x="30.5914%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.03%)</title><rect x="30.3414%" y="1541" width="0.0270%" height="15" fill="rgb(233,29,47)" fg:x="32577" fg:w="29"/><text x="30.5914%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (41 samples, 0.04%)</title><rect x="30.3331%" y="1669" width="0.0382%" height="15" fill="rgb(250,179,18)" fg:x="32568" fg:w="41"/><text x="30.5831%" y="1679.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (41 samples, 0.04%)</title><rect x="30.3331%" y="1653" width="0.0382%" height="15" fill="rgb(215,176,6)" fg:x="32568" fg:w="41"/><text x="30.5831%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41 samples, 0.04%)</title><rect x="30.3331%" y="1637" width="0.0382%" height="15" fill="rgb(214,117,39)" fg:x="32568" fg:w="41"/><text x="30.5831%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41 samples, 0.04%)</title><rect x="30.3331%" y="1621" width="0.0382%" height="15" fill="rgb(247,183,36)" fg:x="32568" fg:w="41"/><text x="30.5831%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41 samples, 0.04%)</title><rect x="30.3331%" y="1605" width="0.0382%" height="15" fill="rgb(237,200,3)" fg:x="32568" fg:w="41"/><text x="30.5831%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.03%)</title><rect x="30.4001%" y="1429" width="0.0335%" height="15" fill="rgb(212,220,24)" fg:x="32640" fg:w="36"/><text x="30.6501%" y="1439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.03%)</title><rect x="30.4001%" y="1413" width="0.0335%" height="15" fill="rgb(245,216,20)" fg:x="32640" fg:w="36"/><text x="30.6501%" y="1423.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.03%)</title><rect x="30.4011%" y="1397" width="0.0326%" height="15" fill="rgb(219,124,7)" fg:x="32641" fg:w="35"/><text x="30.6511%" y="1407.50"></text></g><g><title>realloc (29 samples, 0.03%)</title><rect x="30.4066%" y="1381" width="0.0270%" height="15" fill="rgb(227,167,8)" fg:x="32647" fg:w="29"/><text x="30.6566%" y="1391.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="30.4122%" y="1365" width="0.0214%" height="15" fill="rgb(241,37,2)" fg:x="32653" fg:w="23"/><text x="30.6622%" y="1375.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="30.4150%" y="1349" width="0.0186%" height="15" fill="rgb(238,134,33)" fg:x="32656" fg:w="20"/><text x="30.6650%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (48 samples, 0.04%)</title><rect x="30.3973%" y="1445" width="0.0447%" height="15" fill="rgb(248,48,27)" fg:x="32637" fg:w="48"/><text x="30.6473%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (54 samples, 0.05%)</title><rect x="30.3927%" y="1509" width="0.0503%" height="15" fill="rgb(212,14,16)" fg:x="32632" fg:w="54"/><text x="30.6427%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (54 samples, 0.05%)</title><rect x="30.3927%" y="1493" width="0.0503%" height="15" fill="rgb(217,205,37)" fg:x="32632" fg:w="54"/><text x="30.6427%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52 samples, 0.05%)</title><rect x="30.3945%" y="1477" width="0.0484%" height="15" fill="rgb(233,185,47)" fg:x="32634" fg:w="52"/><text x="30.6445%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.05%)</title><rect x="30.3955%" y="1461" width="0.0475%" height="15" fill="rgb(244,88,8)" fg:x="32635" fg:w="51"/><text x="30.6455%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (67 samples, 0.06%)</title><rect x="30.3815%" y="1621" width="0.0624%" height="15" fill="rgb(213,0,20)" fg:x="32620" fg:w="67"/><text x="30.6315%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (67 samples, 0.06%)</title><rect x="30.3815%" y="1605" width="0.0624%" height="15" fill="rgb(238,159,36)" fg:x="32620" fg:w="67"/><text x="30.6315%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (67 samples, 0.06%)</title><rect x="30.3815%" y="1589" width="0.0624%" height="15" fill="rgb(253,173,17)" fg:x="32620" fg:w="67"/><text x="30.6315%" y="1599.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (67 samples, 0.06%)</title><rect x="30.3815%" y="1573" width="0.0624%" height="15" fill="rgb(221,23,28)" fg:x="32620" fg:w="67"/><text x="30.6315%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (67 samples, 0.06%)</title><rect x="30.3815%" y="1557" width="0.0624%" height="15" fill="rgb(218,113,15)" fg:x="32620" fg:w="67"/><text x="30.6315%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (67 samples, 0.06%)</title><rect x="30.3815%" y="1541" width="0.0624%" height="15" fill="rgb(233,58,3)" fg:x="32620" fg:w="67"/><text x="30.6315%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (67 samples, 0.06%)</title><rect x="30.3815%" y="1525" width="0.0624%" height="15" fill="rgb(250,46,35)" fg:x="32620" fg:w="67"/><text x="30.6315%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (74 samples, 0.07%)</title><rect x="30.3759%" y="1669" width="0.0689%" height="15" fill="rgb(210,169,11)" fg:x="32614" fg:w="74"/><text x="30.6259%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (74 samples, 0.07%)</title><rect x="30.3759%" y="1653" width="0.0689%" height="15" fill="rgb(246,88,19)" fg:x="32614" fg:w="74"/><text x="30.6259%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (68 samples, 0.06%)</title><rect x="30.3815%" y="1637" width="0.0633%" height="15" fill="rgb(206,81,49)" fg:x="32620" fg:w="68"/><text x="30.6315%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (324 samples, 0.30%)</title><rect x="30.1561%" y="1829" width="0.3018%" height="15" fill="rgb(232,144,18)" fg:x="32378" fg:w="324"/><text x="30.4061%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (324 samples, 0.30%)</title><rect x="30.1561%" y="1813" width="0.3018%" height="15" fill="rgb(235,2,27)" fg:x="32378" fg:w="324"/><text x="30.4061%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (324 samples, 0.30%)</title><rect x="30.1561%" y="1797" width="0.3018%" height="15" fill="rgb(239,157,39)" fg:x="32378" fg:w="324"/><text x="30.4061%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (324 samples, 0.30%)</title><rect x="30.1561%" y="1781" width="0.3018%" height="15" fill="rgb(220,11,17)" fg:x="32378" fg:w="324"/><text x="30.4061%" y="1791.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (322 samples, 0.30%)</title><rect x="30.1580%" y="1765" width="0.2999%" height="15" fill="rgb(243,94,50)" fg:x="32380" fg:w="322"/><text x="30.4080%" y="1775.50"></text></g><g><title>move_core_types::value::serialize_values::{{closure}} (322 samples, 0.30%)</title><rect x="30.1580%" y="1749" width="0.2999%" height="15" fill="rgb(218,22,0)" fg:x="32380" fg:w="322"/><text x="30.4080%" y="1759.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (312 samples, 0.29%)</title><rect x="30.1673%" y="1733" width="0.2906%" height="15" fill="rgb(249,70,21)" fg:x="32390" fg:w="312"/><text x="30.4173%" y="1743.50"></text></g><g><title>bcs::ser::to_bytes (300 samples, 0.28%)</title><rect x="30.1785%" y="1717" width="0.2794%" height="15" fill="rgb(245,111,46)" fg:x="32402" fg:w="300"/><text x="30.4285%" y="1727.50"></text></g><g><title>bcs::ser::serialize_into (297 samples, 0.28%)</title><rect x="30.1812%" y="1701" width="0.2766%" height="15" fill="rgb(244,183,12)" fg:x="32405" fg:w="297"/><text x="30.4312%" y="1711.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (297 samples, 0.28%)</title><rect x="30.1812%" y="1685" width="0.2766%" height="15" fill="rgb(207,117,0)" fg:x="32405" fg:w="297"/><text x="30.4312%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.01%)</title><rect x="30.4448%" y="1669" width="0.0130%" height="15" fill="rgb(206,20,43)" fg:x="32688" fg:w="14"/><text x="30.6948%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="30.4448%" y="1653" width="0.0130%" height="15" fill="rgb(221,104,11)" fg:x="32688" fg:w="14"/><text x="30.6948%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="30.4467%" y="1637" width="0.0112%" height="15" fill="rgb(254,36,50)" fg:x="32690" fg:w="12"/><text x="30.6967%" y="1647.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="30.4476%" y="1621" width="0.0102%" height="15" fill="rgb(252,17,15)" fg:x="32691" fg:w="11"/><text x="30.6976%" y="1631.50"></text></g><g><title>move_core_types::value::serialize_values (327 samples, 0.30%)</title><rect x="30.1561%" y="1909" width="0.3046%" height="15" fill="rgb(219,129,43)" fg:x="32378" fg:w="327"/><text x="30.4061%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (327 samples, 0.30%)</title><rect x="30.1561%" y="1893" width="0.3046%" height="15" fill="rgb(205,34,45)" fg:x="32378" fg:w="327"/><text x="30.4061%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (327 samples, 0.30%)</title><rect x="30.1561%" y="1877" width="0.3046%" height="15" fill="rgb(251,201,32)" fg:x="32378" fg:w="327"/><text x="30.4061%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (327 samples, 0.30%)</title><rect x="30.1561%" y="1861" width="0.3046%" height="15" fill="rgb(205,56,0)" fg:x="32378" fg:w="327"/><text x="30.4061%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (327 samples, 0.30%)</title><rect x="30.1561%" y="1845" width="0.3046%" height="15" fill="rgb(211,193,27)" fg:x="32378" fg:w="327"/><text x="30.4061%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (12 samples, 0.01%)</title><rect x="30.4821%" y="1877" width="0.0112%" height="15" fill="rgb(231,100,42)" fg:x="32728" fg:w="12"/><text x="30.7321%" y="1887.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::version (11 samples, 0.01%)</title><rect x="30.4951%" y="1845" width="0.0102%" height="15" fill="rgb(245,85,27)" fg:x="32742" fg:w="11"/><text x="30.7451%" y="1855.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature (14 samples, 0.01%)</title><rect x="30.4933%" y="1877" width="0.0130%" height="15" fill="rgb(241,76,24)" fg:x="32740" fg:w="14"/><text x="30.7433%" y="1887.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_main_signature_impl (12 samples, 0.01%)</title><rect x="30.4951%" y="1861" width="0.0112%" height="15" fill="rgb(249,157,15)" fg:x="32742" fg:w="12"/><text x="30.7451%" y="1871.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.03%)</title><rect x="30.5324%" y="1765" width="0.0345%" height="15" fill="rgb(222,218,25)" fg:x="32782" fg:w="37"/><text x="30.7824%" y="1775.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="30.5324%" y="1749" width="0.0345%" height="15" fill="rgb(252,156,52)" fg:x="32782" fg:w="37"/><text x="30.7824%" y="1759.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (37 samples, 0.03%)</title><rect x="30.5324%" y="1733" width="0.0345%" height="15" fill="rgb(211,185,7)" fg:x="32782" fg:w="37"/><text x="30.7824%" y="1743.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.03%)</title><rect x="30.5324%" y="1717" width="0.0345%" height="15" fill="rgb(234,108,24)" fg:x="32782" fg:w="37"/><text x="30.7824%" y="1727.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (37 samples, 0.03%)</title><rect x="30.5324%" y="1701" width="0.0345%" height="15" fill="rgb(227,218,2)" fg:x="32782" fg:w="37"/><text x="30.7824%" y="1711.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (37 samples, 0.03%)</title><rect x="30.5324%" y="1685" width="0.0345%" height="15" fill="rgb(224,0,36)" fg:x="32782" fg:w="37"/><text x="30.7824%" y="1695.50"></text></g><g><title>[libc.so.6] (28 samples, 0.03%)</title><rect x="30.5408%" y="1669" width="0.0261%" height="15" fill="rgb(233,201,10)" fg:x="32791" fg:w="28"/><text x="30.7908%" y="1679.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (18 samples, 0.02%)</title><rect x="30.5668%" y="1765" width="0.0168%" height="15" fill="rgb(252,209,14)" fg:x="32819" fg:w="18"/><text x="30.8168%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (101 samples, 0.09%)</title><rect x="30.5119%" y="1861" width="0.0941%" height="15" fill="rgb(205,93,49)" fg:x="32760" fg:w="101"/><text x="30.7619%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (101 samples, 0.09%)</title><rect x="30.5119%" y="1845" width="0.0941%" height="15" fill="rgb(234,116,45)" fg:x="32760" fg:w="101"/><text x="30.7619%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (101 samples, 0.09%)</title><rect x="30.5119%" y="1829" width="0.0941%" height="15" fill="rgb(248,89,35)" fg:x="32760" fg:w="101"/><text x="30.7619%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (96 samples, 0.09%)</title><rect x="30.5165%" y="1813" width="0.0894%" height="15" fill="rgb(233,167,45)" fg:x="32765" fg:w="96"/><text x="30.7665%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (96 samples, 0.09%)</title><rect x="30.5165%" y="1797" width="0.0894%" height="15" fill="rgb(248,228,14)" fg:x="32765" fg:w="96"/><text x="30.7665%" y="1807.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (96 samples, 0.09%)</title><rect x="30.5165%" y="1781" width="0.0894%" height="15" fill="rgb(246,91,14)" fg:x="32765" fg:w="96"/><text x="30.7665%" y="1791.50"></text></g><g><title>move_binary_format::access::ModuleAccess::identifier_at (24 samples, 0.02%)</title><rect x="30.5836%" y="1765" width="0.0224%" height="15" fill="rgb(227,142,5)" fg:x="32837" fg:w="24"/><text x="30.8336%" y="1775.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="30.5938%" y="1749" width="0.0121%" height="15" fill="rgb(221,63,33)" fg:x="32848" fg:w="13"/><text x="30.8438%" y="1759.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (117 samples, 0.11%)</title><rect x="30.5063%" y="1877" width="0.1090%" height="15" fill="rgb(233,49,0)" fg:x="32754" fg:w="117"/><text x="30.7563%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (70 samples, 0.07%)</title><rect x="30.6590%" y="1653" width="0.0652%" height="15" fill="rgb(251,115,38)" fg:x="32918" fg:w="70"/><text x="30.9090%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (69 samples, 0.06%)</title><rect x="30.6600%" y="1637" width="0.0643%" height="15" fill="rgb(231,214,32)" fg:x="32919" fg:w="69"/><text x="30.9100%" y="1647.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (60 samples, 0.06%)</title><rect x="30.6684%" y="1621" width="0.0559%" height="15" fill="rgb(248,73,46)" fg:x="32928" fg:w="60"/><text x="30.9184%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (50 samples, 0.05%)</title><rect x="30.6777%" y="1605" width="0.0466%" height="15" fill="rgb(237,156,4)" fg:x="32938" fg:w="50"/><text x="30.9277%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (38 samples, 0.04%)</title><rect x="30.6888%" y="1589" width="0.0354%" height="15" fill="rgb(227,132,2)" fg:x="32950" fg:w="38"/><text x="30.9388%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (36 samples, 0.03%)</title><rect x="30.6907%" y="1573" width="0.0335%" height="15" fill="rgb(248,161,9)" fg:x="32952" fg:w="36"/><text x="30.9407%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (21 samples, 0.02%)</title><rect x="30.7047%" y="1557" width="0.0196%" height="15" fill="rgb(238,77,38)" fg:x="32967" fg:w="21"/><text x="30.9547%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (88 samples, 0.08%)</title><rect x="30.6581%" y="1685" width="0.0820%" height="15" fill="rgb(222,166,40)" fg:x="32917" fg:w="88"/><text x="30.9081%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (88 samples, 0.08%)</title><rect x="30.6581%" y="1669" width="0.0820%" height="15" fill="rgb(214,168,45)" fg:x="32917" fg:w="88"/><text x="30.9081%" y="1679.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (17 samples, 0.02%)</title><rect x="30.7242%" y="1653" width="0.0158%" height="15" fill="rgb(226,64,37)" fg:x="32988" fg:w="17"/><text x="30.9742%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.09%)</title><rect x="30.6581%" y="1701" width="0.0885%" height="15" fill="rgb(232,210,43)" fg:x="32917" fg:w="95"/><text x="30.9081%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (40 samples, 0.04%)</title><rect x="30.7466%" y="1701" width="0.0373%" height="15" fill="rgb(214,76,33)" fg:x="33012" fg:w="40"/><text x="30.9966%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (40 samples, 0.04%)</title><rect x="30.7466%" y="1685" width="0.0373%" height="15" fill="rgb(210,78,5)" fg:x="33012" fg:w="40"/><text x="30.9966%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.04%)</title><rect x="30.7466%" y="1669" width="0.0373%" height="15" fill="rgb(211,107,37)" fg:x="33012" fg:w="40"/><text x="30.9966%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.04%)</title><rect x="30.7475%" y="1653" width="0.0363%" height="15" fill="rgb(249,67,16)" fg:x="33013" fg:w="39"/><text x="30.9975%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.03%)</title><rect x="30.7494%" y="1637" width="0.0345%" height="15" fill="rgb(222,114,31)" fg:x="33015" fg:w="37"/><text x="30.9994%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 0.03%)</title><rect x="30.7512%" y="1621" width="0.0326%" height="15" fill="rgb(242,118,19)" fg:x="33017" fg:w="35"/><text x="31.0012%" y="1631.50"></text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 0.03%)</title><rect x="30.7512%" y="1605" width="0.0326%" height="15" fill="rgb(223,115,1)" fg:x="33017" fg:w="35"/><text x="31.0012%" y="1615.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.03%)</title><rect x="30.7512%" y="1589" width="0.0326%" height="15" fill="rgb(241,182,54)" fg:x="33017" fg:w="35"/><text x="31.0012%" y="1599.50"></text></g><g><title>realloc (33 samples, 0.03%)</title><rect x="30.7531%" y="1573" width="0.0307%" height="15" fill="rgb(244,166,36)" fg:x="33019" fg:w="33"/><text x="31.0031%" y="1583.50"></text></g><g><title>[libc.so.6] (30 samples, 0.03%)</title><rect x="30.7559%" y="1557" width="0.0279%" height="15" fill="rgb(241,52,43)" fg:x="33022" fg:w="30"/><text x="31.0059%" y="1567.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="30.7596%" y="1541" width="0.0242%" height="15" fill="rgb(236,82,9)" fg:x="33026" fg:w="26"/><text x="31.0096%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (152 samples, 0.14%)</title><rect x="30.6572%" y="1733" width="0.1416%" height="15" fill="rgb(241,119,0)" fg:x="32916" fg:w="152"/><text x="30.9072%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (152 samples, 0.14%)</title><rect x="30.6572%" y="1717" width="0.1416%" height="15" fill="rgb(221,19,22)" fg:x="32916" fg:w="152"/><text x="30.9072%" y="1727.50"></text></g><g><title>core::ptr::write (16 samples, 0.01%)</title><rect x="30.7838%" y="1701" width="0.0149%" height="15" fill="rgb(254,144,35)" fg:x="33052" fg:w="16"/><text x="31.0338%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.04%)</title><rect x="30.8127%" y="1685" width="0.0363%" height="15" fill="rgb(246,132,30)" fg:x="33083" fg:w="39"/><text x="31.0627%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.03%)</title><rect x="30.8146%" y="1669" width="0.0345%" height="15" fill="rgb(234,69,28)" fg:x="33085" fg:w="37"/><text x="31.0646%" y="1679.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (34 samples, 0.03%)</title><rect x="30.8174%" y="1653" width="0.0317%" height="15" fill="rgb(219,106,47)" fg:x="33088" fg:w="34"/><text x="31.0674%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (32 samples, 0.03%)</title><rect x="30.8192%" y="1637" width="0.0298%" height="15" fill="rgb(218,79,24)" fg:x="33090" fg:w="32"/><text x="31.0692%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (22 samples, 0.02%)</title><rect x="30.8286%" y="1621" width="0.0205%" height="15" fill="rgb(225,26,21)" fg:x="33100" fg:w="22"/><text x="31.0786%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (17 samples, 0.02%)</title><rect x="30.8332%" y="1605" width="0.0158%" height="15" fill="rgb(217,68,49)" fg:x="33105" fg:w="17"/><text x="31.0832%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (41 samples, 0.04%)</title><rect x="30.8127%" y="1717" width="0.0382%" height="15" fill="rgb(220,204,28)" fg:x="33083" fg:w="41"/><text x="31.0627%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.04%)</title><rect x="30.8127%" y="1701" width="0.0382%" height="15" fill="rgb(237,208,43)" fg:x="33083" fg:w="41"/><text x="31.0627%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.06%)</title><rect x="30.7987%" y="1733" width="0.0559%" height="15" fill="rgb(213,97,42)" fg:x="33068" fg:w="60"/><text x="31.0487%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (248 samples, 0.23%)</title><rect x="30.6274%" y="1861" width="0.2310%" height="15" fill="rgb(238,96,52)" fg:x="32884" fg:w="248"/><text x="30.8774%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (248 samples, 0.23%)</title><rect x="30.6274%" y="1845" width="0.2310%" height="15" fill="rgb(228,14,13)" fg:x="32884" fg:w="248"/><text x="30.8774%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (248 samples, 0.23%)</title><rect x="30.6274%" y="1829" width="0.2310%" height="15" fill="rgb(219,123,13)" fg:x="32884" fg:w="248"/><text x="30.8774%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (232 samples, 0.22%)</title><rect x="30.6423%" y="1813" width="0.2161%" height="15" fill="rgb(216,144,17)" fg:x="32900" fg:w="232"/><text x="30.8923%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (232 samples, 0.22%)</title><rect x="30.6423%" y="1797" width="0.2161%" height="15" fill="rgb(230,228,29)" fg:x="32900" fg:w="232"/><text x="30.8923%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (232 samples, 0.22%)</title><rect x="30.6423%" y="1781" width="0.2161%" height="15" fill="rgb(233,18,5)" fg:x="32900" fg:w="232"/><text x="30.8923%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (227 samples, 0.21%)</title><rect x="30.6469%" y="1765" width="0.2114%" height="15" fill="rgb(233,197,12)" fg:x="32905" fg:w="227"/><text x="30.8969%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (218 samples, 0.20%)</title><rect x="30.6553%" y="1749" width="0.2030%" height="15" fill="rgb(234,140,29)" fg:x="32914" fg:w="218"/><text x="30.9053%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_core_types::language_storage::ModuleId&gt;&gt; (12 samples, 0.01%)</title><rect x="30.8900%" y="1845" width="0.0112%" height="15" fill="rgb(233,113,19)" fg:x="33166" fg:w="12"/><text x="31.1400%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,alloc::collections::btree::set_val::SetValZST&gt;&gt; (12 samples, 0.01%)</title><rect x="30.8900%" y="1829" width="0.0112%" height="15" fill="rgb(246,209,13)" fg:x="33166" fg:w="12"/><text x="31.1400%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="30.8900%" y="1813" width="0.0112%" height="15" fill="rgb(242,79,54)" fg:x="33166" fg:w="12"/><text x="31.1400%" y="1823.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (11 samples, 0.01%)</title><rect x="30.9170%" y="1717" width="0.0102%" height="15" fill="rgb(219,73,16)" fg:x="33195" fg:w="11"/><text x="31.1670%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (11 samples, 0.01%)</title><rect x="30.9170%" y="1701" width="0.0102%" height="15" fill="rgb(224,52,10)" fg:x="33195" fg:w="11"/><text x="31.1670%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (11 samples, 0.01%)</title><rect x="30.9170%" y="1685" width="0.0102%" height="15" fill="rgb(237,179,5)" fg:x="33195" fg:w="11"/><text x="31.1670%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (11 samples, 0.01%)</title><rect x="30.9170%" y="1669" width="0.0102%" height="15" fill="rgb(231,20,6)" fg:x="33195" fg:w="11"/><text x="31.1670%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.01%)</title><rect x="30.9170%" y="1653" width="0.0102%" height="15" fill="rgb(253,171,45)" fg:x="33195" fg:w="11"/><text x="31.1670%" y="1663.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="30.9170%" y="1637" width="0.0102%" height="15" fill="rgb(230,75,49)" fg:x="33195" fg:w="11"/><text x="31.1670%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (17 samples, 0.02%)</title><rect x="30.9161%" y="1733" width="0.0158%" height="15" fill="rgb(216,83,46)" fg:x="33194" fg:w="17"/><text x="31.1661%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (28 samples, 0.03%)</title><rect x="30.9133%" y="1781" width="0.0261%" height="15" fill="rgb(236,56,9)" fg:x="33191" fg:w="28"/><text x="31.1633%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.03%)</title><rect x="30.9133%" y="1765" width="0.0261%" height="15" fill="rgb(215,28,34)" fg:x="33191" fg:w="28"/><text x="31.1633%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (28 samples, 0.03%)</title><rect x="30.9133%" y="1749" width="0.0261%" height="15" fill="rgb(230,222,20)" fg:x="33191" fg:w="28"/><text x="31.1633%" y="1759.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (35 samples, 0.03%)</title><rect x="30.9105%" y="1829" width="0.0326%" height="15" fill="rgb(235,209,51)" fg:x="33188" fg:w="35"/><text x="31.1605%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (35 samples, 0.03%)</title><rect x="30.9105%" y="1813" width="0.0326%" height="15" fill="rgb(235,167,1)" fg:x="33188" fg:w="35"/><text x="31.1605%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (32 samples, 0.03%)</title><rect x="30.9133%" y="1797" width="0.0298%" height="15" fill="rgb(248,220,0)" fg:x="33191" fg:w="32"/><text x="31.1633%" y="1807.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.03%)</title><rect x="30.9599%" y="1749" width="0.0270%" height="15" fill="rgb(239,0,18)" fg:x="33241" fg:w="29"/><text x="31.2099%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.03%)</title><rect x="30.9599%" y="1733" width="0.0270%" height="15" fill="rgb(229,179,11)" fg:x="33241" fg:w="29"/><text x="31.2099%" y="1743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.02%)</title><rect x="30.9673%" y="1717" width="0.0196%" height="15" fill="rgb(226,116,53)" fg:x="33249" fg:w="21"/><text x="31.2173%" y="1727.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="30.9673%" y="1701" width="0.0196%" height="15" fill="rgb(218,1,49)" fg:x="33249" fg:w="21"/><text x="31.2173%" y="1711.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="30.9748%" y="1685" width="0.0121%" height="15" fill="rgb(208,184,47)" fg:x="33257" fg:w="13"/><text x="31.2248%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="30.9748%" y="1669" width="0.0121%" height="15" fill="rgb(238,174,3)" fg:x="33257" fg:w="13"/><text x="31.2248%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.01%)</title><rect x="30.9748%" y="1653" width="0.0121%" height="15" fill="rgb(247,188,6)" fg:x="33257" fg:w="13"/><text x="31.2248%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (13 samples, 0.01%)</title><rect x="30.9748%" y="1637" width="0.0121%" height="15" fill="rgb(211,165,46)" fg:x="33257" fg:w="13"/><text x="31.2248%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (13 samples, 0.01%)</title><rect x="30.9748%" y="1621" width="0.0121%" height="15" fill="rgb(222,190,10)" fg:x="33257" fg:w="13"/><text x="31.2248%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (13 samples, 0.01%)</title><rect x="30.9748%" y="1605" width="0.0121%" height="15" fill="rgb(206,185,3)" fg:x="33257" fg:w="13"/><text x="31.2248%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (141 samples, 0.13%)</title><rect x="30.8733%" y="1861" width="0.1313%" height="15" fill="rgb(244,125,37)" fg:x="33148" fg:w="141"/><text x="31.1233%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (111 samples, 0.10%)</title><rect x="30.9012%" y="1845" width="0.1034%" height="15" fill="rgb(211,43,7)" fg:x="33178" fg:w="111"/><text x="31.1512%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (64 samples, 0.06%)</title><rect x="30.9450%" y="1829" width="0.0596%" height="15" fill="rgb(250,41,42)" fg:x="33225" fg:w="64"/><text x="31.1950%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (50 samples, 0.05%)</title><rect x="30.9580%" y="1813" width="0.0466%" height="15" fill="rgb(254,54,42)" fg:x="33239" fg:w="50"/><text x="31.2080%" y="1823.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (48 samples, 0.04%)</title><rect x="30.9599%" y="1797" width="0.0447%" height="15" fill="rgb(213,71,43)" fg:x="33241" fg:w="48"/><text x="31.2099%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (48 samples, 0.04%)</title><rect x="30.9599%" y="1781" width="0.0447%" height="15" fill="rgb(249,3,44)" fg:x="33241" fg:w="48"/><text x="31.2099%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (48 samples, 0.04%)</title><rect x="30.9599%" y="1765" width="0.0447%" height="15" fill="rgb(229,80,41)" fg:x="33241" fg:w="48"/><text x="31.2099%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.02%)</title><rect x="30.9869%" y="1749" width="0.0177%" height="15" fill="rgb(231,25,28)" fg:x="33270" fg:w="19"/><text x="31.2369%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.02%)</title><rect x="30.9869%" y="1733" width="0.0177%" height="15" fill="rgb(208,79,48)" fg:x="33270" fg:w="19"/><text x="31.2369%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.02%)</title><rect x="30.9869%" y="1717" width="0.0177%" height="15" fill="rgb(207,196,38)" fg:x="33270" fg:w="19"/><text x="31.2369%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="31.0064%" y="1845" width="0.0130%" height="15" fill="rgb(228,105,49)" fg:x="33291" fg:w="14"/><text x="31.2564%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (16 samples, 0.01%)</title><rect x="31.0055%" y="1861" width="0.0149%" height="15" fill="rgb(237,99,15)" fg:x="33290" fg:w="16"/><text x="31.2555%" y="1871.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.01%)</title><rect x="31.0409%" y="1765" width="0.0149%" height="15" fill="rgb(224,207,46)" fg:x="33328" fg:w="16"/><text x="31.2909%" y="1775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.01%)</title><rect x="31.0409%" y="1749" width="0.0149%" height="15" fill="rgb(249,117,50)" fg:x="33328" fg:w="16"/><text x="31.2909%" y="1759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.01%)</title><rect x="31.0437%" y="1733" width="0.0121%" height="15" fill="rgb(248,17,13)" fg:x="33331" fg:w="13"/><text x="31.2937%" y="1743.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="31.0437%" y="1717" width="0.0121%" height="15" fill="rgb(228,187,36)" fg:x="33331" fg:w="13"/><text x="31.2937%" y="1727.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.01%)</title><rect x="31.0437%" y="1701" width="0.0121%" height="15" fill="rgb(234,132,20)" fg:x="33331" fg:w="13"/><text x="31.2937%" y="1711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (13 samples, 0.01%)</title><rect x="31.0437%" y="1685" width="0.0121%" height="15" fill="rgb(209,170,46)" fg:x="33331" fg:w="13"/><text x="31.2937%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (13 samples, 0.01%)</title><rect x="31.0437%" y="1669" width="0.0121%" height="15" fill="rgb(237,23,19)" fg:x="33331" fg:w="13"/><text x="31.2937%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (13 samples, 0.01%)</title><rect x="31.0437%" y="1653" width="0.0121%" height="15" fill="rgb(227,21,26)" fg:x="33331" fg:w="13"/><text x="31.2937%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.01%)</title><rect x="31.0577%" y="1717" width="0.0140%" height="15" fill="rgb(222,220,48)" fg:x="33346" fg:w="15"/><text x="31.3077%" y="1727.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (15 samples, 0.01%)</title><rect x="31.0577%" y="1701" width="0.0140%" height="15" fill="rgb(214,9,16)" fg:x="33346" fg:w="15"/><text x="31.3077%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (45 samples, 0.04%)</title><rect x="31.0344%" y="1845" width="0.0419%" height="15" fill="rgb(209,73,30)" fg:x="33321" fg:w="45"/><text x="31.2844%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (45 samples, 0.04%)</title><rect x="31.0344%" y="1829" width="0.0419%" height="15" fill="rgb(207,20,33)" fg:x="33321" fg:w="45"/><text x="31.2844%" y="1839.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.04%)</title><rect x="31.0344%" y="1813" width="0.0419%" height="15" fill="rgb(219,153,12)" fg:x="33321" fg:w="45"/><text x="31.2844%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (45 samples, 0.04%)</title><rect x="31.0344%" y="1797" width="0.0419%" height="15" fill="rgb(235,97,25)" fg:x="33321" fg:w="45"/><text x="31.2844%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.04%)</title><rect x="31.0344%" y="1781" width="0.0419%" height="15" fill="rgb(244,30,34)" fg:x="33321" fg:w="45"/><text x="31.2844%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.02%)</title><rect x="31.0558%" y="1765" width="0.0205%" height="15" fill="rgb(214,106,45)" fg:x="33344" fg:w="22"/><text x="31.3058%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.02%)</title><rect x="31.0558%" y="1749" width="0.0205%" height="15" fill="rgb(226,41,9)" fg:x="33344" fg:w="22"/><text x="31.3058%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (22 samples, 0.02%)</title><rect x="31.0558%" y="1733" width="0.0205%" height="15" fill="rgb(253,139,29)" fg:x="33344" fg:w="22"/><text x="31.3058%" y="1743.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.01%)</title><rect x="31.0782%" y="1781" width="0.0149%" height="15" fill="rgb(213,205,39)" fg:x="33368" fg:w="16"/><text x="31.3282%" y="1791.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.01%)</title><rect x="31.0782%" y="1765" width="0.0149%" height="15" fill="rgb(209,27,10)" fg:x="33368" fg:w="16"/><text x="31.3282%" y="1775.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.01%)</title><rect x="31.0810%" y="1749" width="0.0121%" height="15" fill="rgb(249,142,16)" fg:x="33371" fg:w="13"/><text x="31.3310%" y="1759.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="31.0810%" y="1733" width="0.0121%" height="15" fill="rgb(242,65,12)" fg:x="33371" fg:w="13"/><text x="31.3310%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (517 samples, 0.48%)</title><rect x="30.6153%" y="1877" width="0.4815%" height="15" fill="rgb(232,48,10)" fg:x="32871" fg:w="517"/><text x="30.8653%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (82 samples, 0.08%)</title><rect x="31.0204%" y="1861" width="0.0764%" height="15" fill="rgb(253,67,19)" fg:x="33306" fg:w="82"/><text x="31.2704%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (22 samples, 0.02%)</title><rect x="31.0763%" y="1845" width="0.0205%" height="15" fill="rgb(227,93,29)" fg:x="33366" fg:w="22"/><text x="31.3263%" y="1855.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (21 samples, 0.02%)</title><rect x="31.0772%" y="1829" width="0.0196%" height="15" fill="rgb(226,189,53)" fg:x="33367" fg:w="21"/><text x="31.3272%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (21 samples, 0.02%)</title><rect x="31.0772%" y="1813" width="0.0196%" height="15" fill="rgb(223,224,1)" fg:x="33367" fg:w="21"/><text x="31.3272%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.02%)</title><rect x="31.0772%" y="1797" width="0.0196%" height="15" fill="rgb(221,84,32)" fg:x="33367" fg:w="21"/><text x="31.3272%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="31.1238%" y="1845" width="0.0177%" height="15" fill="rgb(214,189,28)" fg:x="33417" fg:w="19"/><text x="31.3738%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="31.1238%" y="1829" width="0.0177%" height="15" fill="rgb(234,7,52)" fg:x="33417" fg:w="19"/><text x="31.3738%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="31.1294%" y="1813" width="0.0121%" height="15" fill="rgb(249,73,31)" fg:x="33423" fg:w="13"/><text x="31.3794%" y="1823.50"></text></g><g><title>cfree (16 samples, 0.01%)</title><rect x="31.2160%" y="1653" width="0.0149%" height="15" fill="rgb(253,153,41)" fg:x="33516" fg:w="16"/><text x="31.4660%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (25 samples, 0.02%)</title><rect x="31.2309%" y="1653" width="0.0233%" height="15" fill="rgb(249,52,34)" fg:x="33532" fg:w="25"/><text x="31.4809%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113 samples, 0.11%)</title><rect x="31.1862%" y="1733" width="0.1052%" height="15" fill="rgb(236,177,47)" fg:x="33484" fg:w="113"/><text x="31.4362%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113 samples, 0.11%)</title><rect x="31.1862%" y="1717" width="0.1052%" height="15" fill="rgb(252,185,45)" fg:x="33484" fg:w="113"/><text x="31.4362%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (104 samples, 0.10%)</title><rect x="31.1946%" y="1701" width="0.0969%" height="15" fill="rgb(251,15,30)" fg:x="33493" fg:w="104"/><text x="31.4446%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (94 samples, 0.09%)</title><rect x="31.2039%" y="1685" width="0.0875%" height="15" fill="rgb(233,31,4)" fg:x="33503" fg:w="94"/><text x="31.4539%" y="1695.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (87 samples, 0.08%)</title><rect x="31.2104%" y="1669" width="0.0810%" height="15" fill="rgb(254,44,24)" fg:x="33510" fg:w="87"/><text x="31.4604%" y="1679.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (40 samples, 0.04%)</title><rect x="31.2542%" y="1653" width="0.0373%" height="15" fill="rgb(218,54,1)" fg:x="33557" fg:w="40"/><text x="31.5042%" y="1663.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (34 samples, 0.03%)</title><rect x="31.2598%" y="1637" width="0.0317%" height="15" fill="rgb(243,209,39)" fg:x="33563" fg:w="34"/><text x="31.5098%" y="1647.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (114 samples, 0.11%)</title><rect x="31.1862%" y="1749" width="0.1062%" height="15" fill="rgb(206,75,33)" fg:x="33484" fg:w="114"/><text x="31.4362%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="31.2924%" y="1749" width="0.0168%" height="15" fill="rgb(223,108,18)" fg:x="33598" fg:w="18"/><text x="31.5424%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;)&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="31.2989%" y="1733" width="0.0102%" height="15" fill="rgb(244,89,31)" fg:x="33605" fg:w="11"/><text x="31.5489%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;)&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="31.2989%" y="1717" width="0.0102%" height="15" fill="rgb(222,167,27)" fg:x="33605" fg:w="11"/><text x="31.5489%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;)&gt;&gt; (11 samples, 0.01%)</title><rect x="31.2989%" y="1701" width="0.0102%" height="15" fill="rgb(247,41,16)" fg:x="33605" fg:w="11"/><text x="31.5489%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (216 samples, 0.20%)</title><rect x="31.1238%" y="1861" width="0.2012%" height="15" fill="rgb(233,168,40)" fg:x="33417" fg:w="216"/><text x="31.3738%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (197 samples, 0.18%)</title><rect x="31.1415%" y="1845" width="0.1835%" height="15" fill="rgb(205,211,8)" fg:x="33436" fg:w="197"/><text x="31.3915%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (194 samples, 0.18%)</title><rect x="31.1443%" y="1829" width="0.1807%" height="15" fill="rgb(238,105,11)" fg:x="33439" fg:w="194"/><text x="31.3943%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (170 samples, 0.16%)</title><rect x="31.1666%" y="1813" width="0.1583%" height="15" fill="rgb(223,142,52)" fg:x="33463" fg:w="170"/><text x="31.4166%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (170 samples, 0.16%)</title><rect x="31.1666%" y="1797" width="0.1583%" height="15" fill="rgb(238,51,33)" fg:x="33463" fg:w="170"/><text x="31.4166%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (170 samples, 0.16%)</title><rect x="31.1666%" y="1781" width="0.1583%" height="15" fill="rgb(231,188,43)" fg:x="33463" fg:w="170"/><text x="31.4166%" y="1791.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (169 samples, 0.16%)</title><rect x="31.1676%" y="1765" width="0.1574%" height="15" fill="rgb(216,92,17)" fg:x="33464" fg:w="169"/><text x="31.4176%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="31.3091%" y="1749" width="0.0158%" height="15" fill="rgb(228,2,40)" fg:x="33616" fg:w="17"/><text x="31.5591%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="31.3091%" y="1733" width="0.0158%" height="15" fill="rgb(226,73,15)" fg:x="33616" fg:w="17"/><text x="31.5591%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (17 samples, 0.02%)</title><rect x="31.3091%" y="1717" width="0.0158%" height="15" fill="rgb(227,66,46)" fg:x="33616" fg:w="17"/><text x="31.5591%" y="1727.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="31.3091%" y="1701" width="0.0158%" height="15" fill="rgb(209,71,6)" fg:x="33616" fg:w="17"/><text x="31.5591%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="31.3250%" y="1829" width="0.0168%" height="15" fill="rgb(246,100,25)" fg:x="33633" fg:w="18"/><text x="31.5750%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (11 samples, 0.01%)</title><rect x="31.3315%" y="1813" width="0.0102%" height="15" fill="rgb(248,185,27)" fg:x="33640" fg:w="11"/><text x="31.5815%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="31.3417%" y="1813" width="0.0121%" height="15" fill="rgb(225,118,47)" fg:x="33651" fg:w="13"/><text x="31.5917%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="31.3427%" y="1797" width="0.0112%" height="15" fill="rgb(220,185,44)" fg:x="33652" fg:w="12"/><text x="31.5927%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="31.3427%" y="1781" width="0.0112%" height="15" fill="rgb(227,95,24)" fg:x="33652" fg:w="12"/><text x="31.5927%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (12 samples, 0.01%)</title><rect x="31.3427%" y="1765" width="0.0112%" height="15" fill="rgb(252,84,24)" fg:x="33652" fg:w="12"/><text x="31.5927%" y="1775.50"></text></g><g><title>core::mem::drop (35 samples, 0.03%)</title><rect x="31.3250%" y="1861" width="0.0326%" height="15" fill="rgb(240,34,44)" fg:x="33633" fg:w="35"/><text x="31.5750%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (35 samples, 0.03%)</title><rect x="31.3250%" y="1845" width="0.0326%" height="15" fill="rgb(209,72,54)" fg:x="33633" fg:w="35"/><text x="31.5750%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="31.3417%" y="1829" width="0.0158%" height="15" fill="rgb(226,19,45)" fg:x="33651" fg:w="17"/><text x="31.5917%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::new (13 samples, 0.01%)</title><rect x="31.3660%" y="1845" width="0.0121%" height="15" fill="rgb(246,7,45)" fg:x="33677" fg:w="13"/><text x="31.6160%" y="1855.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="31.5019%" y="1717" width="0.0158%" height="15" fill="rgb(225,45,2)" fg:x="33823" fg:w="17"/><text x="31.7519%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (14 samples, 0.01%)</title><rect x="31.5178%" y="1717" width="0.0130%" height="15" fill="rgb(221,80,29)" fg:x="33840" fg:w="14"/><text x="31.7678%" y="1727.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.08%)</title><rect x="31.4610%" y="1781" width="0.0773%" height="15" fill="rgb(228,11,19)" fg:x="33779" fg:w="83"/><text x="31.7110%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (56 samples, 0.05%)</title><rect x="31.4861%" y="1765" width="0.0522%" height="15" fill="rgb(243,17,21)" fg:x="33806" fg:w="56"/><text x="31.7361%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (46 samples, 0.04%)</title><rect x="31.4954%" y="1749" width="0.0428%" height="15" fill="rgb(243,88,8)" fg:x="33816" fg:w="46"/><text x="31.7454%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (46 samples, 0.04%)</title><rect x="31.4954%" y="1733" width="0.0428%" height="15" fill="rgb(214,17,9)" fg:x="33816" fg:w="46"/><text x="31.7454%" y="1743.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (97 samples, 0.09%)</title><rect x="31.4591%" y="1829" width="0.0903%" height="15" fill="rgb(232,169,15)" fg:x="33777" fg:w="97"/><text x="31.7091%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;,move_vm_runtime::interpreter::Interpreter::execute_main&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (97 samples, 0.09%)</title><rect x="31.4591%" y="1813" width="0.0903%" height="15" fill="rgb(232,86,53)" fg:x="33777" fg:w="97"/><text x="31.7091%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (97 samples, 0.09%)</title><rect x="31.4591%" y="1797" width="0.0903%" height="15" fill="rgb(222,100,4)" fg:x="33777" fg:w="97"/><text x="31.7091%" y="1807.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="31.5550%" y="1829" width="0.0121%" height="15" fill="rgb(253,151,38)" fg:x="33880" fg:w="13"/><text x="31.8050%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (22 samples, 0.02%)</title><rect x="31.5671%" y="1829" width="0.0205%" height="15" fill="rgb(238,215,29)" fg:x="33893" fg:w="22"/><text x="31.8171%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="31.5904%" y="1813" width="0.0214%" height="15" fill="rgb(205,128,53)" fg:x="33918" fg:w="23"/><text x="31.8404%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (18 samples, 0.02%)</title><rect x="31.5951%" y="1797" width="0.0168%" height="15" fill="rgb(248,183,14)" fg:x="33923" fg:w="18"/><text x="31.8451%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (14 samples, 0.01%)</title><rect x="31.5988%" y="1781" width="0.0130%" height="15" fill="rgb(244,172,35)" fg:x="33927" fg:w="14"/><text x="31.8488%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="31.6128%" y="1781" width="0.0224%" height="15" fill="rgb(234,93,19)" fg:x="33942" fg:w="24"/><text x="31.8628%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="31.6128%" y="1765" width="0.0224%" height="15" fill="rgb(227,109,7)" fg:x="33942" fg:w="24"/><text x="31.8628%" y="1775.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="31.6165%" y="1749" width="0.0186%" height="15" fill="rgb(233,136,54)" fg:x="33946" fg:w="20"/><text x="31.8665%" y="1759.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="31.6230%" y="1733" width="0.0121%" height="15" fill="rgb(233,19,40)" fg:x="33953" fg:w="13"/><text x="31.8730%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (49 samples, 0.05%)</title><rect x="31.5904%" y="1829" width="0.0456%" height="15" fill="rgb(247,41,18)" fg:x="33918" fg:w="49"/><text x="31.8404%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (26 samples, 0.02%)</title><rect x="31.6118%" y="1813" width="0.0242%" height="15" fill="rgb(220,34,34)" fg:x="33941" fg:w="26"/><text x="31.8618%" y="1823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="31.6118%" y="1797" width="0.0242%" height="15" fill="rgb(222,135,32)" fg:x="33941" fg:w="26"/><text x="31.8618%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (16 samples, 0.01%)</title><rect x="31.6538%" y="1813" width="0.0149%" height="15" fill="rgb(214,80,19)" fg:x="33986" fg:w="16"/><text x="31.9038%" y="1823.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="31.6538%" y="1797" width="0.0149%" height="15" fill="rgb(234,54,46)" fg:x="33986" fg:w="16"/><text x="31.9038%" y="1807.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="31.7171%" y="1749" width="0.0130%" height="15" fill="rgb(251,48,23)" fg:x="34054" fg:w="14"/><text x="31.9671%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.07%)</title><rect x="31.6687%" y="1797" width="0.0736%" height="15" fill="rgb(254,109,52)" fg:x="34002" fg:w="79"/><text x="31.9187%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (76 samples, 0.07%)</title><rect x="31.6714%" y="1781" width="0.0708%" height="15" fill="rgb(240,186,19)" fg:x="34005" fg:w="76"/><text x="31.9214%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (58 samples, 0.05%)</title><rect x="31.6882%" y="1765" width="0.0540%" height="15" fill="rgb(246,187,17)" fg:x="34023" fg:w="58"/><text x="31.9382%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (13 samples, 0.01%)</title><rect x="31.7301%" y="1749" width="0.0121%" height="15" fill="rgb(212,21,5)" fg:x="34068" fg:w="13"/><text x="31.9801%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (12 samples, 0.01%)</title><rect x="31.7311%" y="1733" width="0.0112%" height="15" fill="rgb(225,185,18)" fg:x="34069" fg:w="12"/><text x="31.9811%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (95 samples, 0.09%)</title><rect x="31.6687%" y="1813" width="0.0885%" height="15" fill="rgb(245,114,17)" fg:x="34002" fg:w="95"/><text x="31.9187%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (16 samples, 0.01%)</title><rect x="31.7422%" y="1797" width="0.0149%" height="15" fill="rgb(223,164,24)" fg:x="34081" fg:w="16"/><text x="31.9922%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="31.7422%" y="1781" width="0.0149%" height="15" fill="rgb(211,228,3)" fg:x="34081" fg:w="16"/><text x="31.9922%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (21 samples, 0.02%)</title><rect x="31.7646%" y="1781" width="0.0196%" height="15" fill="rgb(223,16,38)" fg:x="34105" fg:w="21"/><text x="32.0146%" y="1791.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="31.7646%" y="1765" width="0.0196%" height="15" fill="rgb(207,31,54)" fg:x="34105" fg:w="21"/><text x="32.0146%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="31.7571%" y="1797" width="0.0531%" height="15" fill="rgb(220,39,11)" fg:x="34097" fg:w="57"/><text x="32.0071%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (28 samples, 0.03%)</title><rect x="31.7841%" y="1781" width="0.0261%" height="15" fill="rgb(235,185,0)" fg:x="34126" fg:w="28"/><text x="32.0341%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="31.8233%" y="1717" width="0.0130%" height="15" fill="rgb(249,39,18)" fg:x="34168" fg:w="14"/><text x="32.0733%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (14 samples, 0.01%)</title><rect x="31.8233%" y="1701" width="0.0130%" height="15" fill="rgb(240,110,33)" fg:x="34168" fg:w="14"/><text x="32.0733%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (11 samples, 0.01%)</title><rect x="31.8261%" y="1685" width="0.0102%" height="15" fill="rgb(210,92,42)" fg:x="34171" fg:w="11"/><text x="32.0761%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.03%)</title><rect x="31.8363%" y="1685" width="0.0317%" height="15" fill="rgb(218,215,28)" fg:x="34182" fg:w="34"/><text x="32.0863%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.03%)</title><rect x="31.8363%" y="1669" width="0.0317%" height="15" fill="rgb(238,215,36)" fg:x="34182" fg:w="34"/><text x="32.0863%" y="1679.50"></text></g><g><title>cfree (30 samples, 0.03%)</title><rect x="31.8400%" y="1653" width="0.0279%" height="15" fill="rgb(220,31,10)" fg:x="34186" fg:w="30"/><text x="32.0900%" y="1663.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="31.8568%" y="1637" width="0.0112%" height="15" fill="rgb(212,93,14)" fg:x="34204" fg:w="12"/><text x="32.1068%" y="1647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="31.8102%" y="1781" width="0.0596%" height="15" fill="rgb(254,207,2)" fg:x="34154" fg:w="64"/><text x="32.0602%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (52 samples, 0.05%)</title><rect x="31.8214%" y="1765" width="0.0484%" height="15" fill="rgb(205,57,44)" fg:x="34166" fg:w="52"/><text x="32.0714%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (50 samples, 0.05%)</title><rect x="31.8233%" y="1749" width="0.0466%" height="15" fill="rgb(226,151,19)" fg:x="34168" fg:w="50"/><text x="32.0733%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (50 samples, 0.05%)</title><rect x="31.8233%" y="1733" width="0.0466%" height="15" fill="rgb(230,72,30)" fg:x="34168" fg:w="50"/><text x="32.0733%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (36 samples, 0.03%)</title><rect x="31.8363%" y="1717" width="0.0335%" height="15" fill="rgb(244,0,8)" fg:x="34182" fg:w="36"/><text x="32.0863%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="31.8363%" y="1701" width="0.0335%" height="15" fill="rgb(230,192,6)" fg:x="34182" fg:w="36"/><text x="32.0863%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (280 samples, 0.26%)</title><rect x="31.6500%" y="1829" width="0.2608%" height="15" fill="rgb(233,207,13)" fg:x="33982" fg:w="280"/><text x="31.9000%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (165 samples, 0.15%)</title><rect x="31.7571%" y="1813" width="0.1537%" height="15" fill="rgb(206,227,7)" fg:x="34097" fg:w="165"/><text x="32.0071%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (108 samples, 0.10%)</title><rect x="31.8102%" y="1797" width="0.1006%" height="15" fill="rgb(213,217,25)" fg:x="34154" fg:w="108"/><text x="32.0602%" y="1807.50"></text></g><g><title>cfree (41 samples, 0.04%)</title><rect x="31.8726%" y="1781" width="0.0382%" height="15" fill="rgb(249,75,4)" fg:x="34221" fg:w="41"/><text x="32.1226%" y="1791.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="31.8913%" y="1765" width="0.0196%" height="15" fill="rgb(225,114,18)" fg:x="34241" fg:w="21"/><text x="32.1413%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (33 samples, 0.03%)</title><rect x="31.9108%" y="1829" width="0.0307%" height="15" fill="rgb(211,162,40)" fg:x="34262" fg:w="33"/><text x="32.1608%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (33 samples, 0.03%)</title><rect x="31.9108%" y="1813" width="0.0307%" height="15" fill="rgb(206,49,29)" fg:x="34262" fg:w="33"/><text x="32.1608%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (23 samples, 0.02%)</title><rect x="31.9201%" y="1797" width="0.0214%" height="15" fill="rgb(244,8,6)" fg:x="34272" fg:w="23"/><text x="32.1701%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="31.9201%" y="1781" width="0.0214%" height="15" fill="rgb(231,194,28)" fg:x="34272" fg:w="23"/><text x="32.1701%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="31.9415%" y="1813" width="0.0102%" height="15" fill="rgb(210,69,5)" fg:x="34295" fg:w="11"/><text x="32.1915%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="31.9518%" y="1797" width="0.0130%" height="15" fill="rgb(216,186,12)" fg:x="34306" fg:w="14"/><text x="32.2018%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="31.9537%" y="1781" width="0.0112%" height="15" fill="rgb(238,61,15)" fg:x="34308" fg:w="12"/><text x="32.2037%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="31.9537%" y="1765" width="0.0112%" height="15" fill="rgb(226,104,1)" fg:x="34308" fg:w="12"/><text x="32.2037%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (12 samples, 0.01%)</title><rect x="31.9537%" y="1749" width="0.0112%" height="15" fill="rgb(229,128,15)" fg:x="34308" fg:w="12"/><text x="32.2037%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (32 samples, 0.03%)</title><rect x="31.9415%" y="1829" width="0.0298%" height="15" fill="rgb(247,110,15)" fg:x="34295" fg:w="32"/><text x="32.1915%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="31.9518%" y="1813" width="0.0196%" height="15" fill="rgb(210,74,48)" fg:x="34306" fg:w="21"/><text x="32.2018%" y="1823.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (35 samples, 0.03%)</title><rect x="31.9714%" y="1829" width="0.0326%" height="15" fill="rgb(246,121,10)" fg:x="34327" fg:w="35"/><text x="32.2214%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (22 samples, 0.02%)</title><rect x="32.0058%" y="1829" width="0.0205%" height="15" fill="rgb(214,156,37)" fg:x="34364" fg:w="22"/><text x="32.2558%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (16 samples, 0.01%)</title><rect x="32.0114%" y="1813" width="0.0149%" height="15" fill="rgb(214,210,34)" fg:x="34370" fg:w="16"/><text x="32.2614%" y="1823.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="32.0142%" y="1797" width="0.0121%" height="15" fill="rgb(237,93,35)" fg:x="34373" fg:w="13"/><text x="32.2642%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (13 samples, 0.01%)</title><rect x="32.0142%" y="1781" width="0.0121%" height="15" fill="rgb(206,36,8)" fg:x="34373" fg:w="13"/><text x="32.2642%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.01%)</title><rect x="32.0459%" y="1797" width="0.0149%" height="15" fill="rgb(208,151,12)" fg:x="34407" fg:w="16"/><text x="32.2959%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="32.0505%" y="1781" width="0.0102%" height="15" fill="rgb(225,133,52)" fg:x="34412" fg:w="11"/><text x="32.3005%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (44 samples, 0.04%)</title><rect x="32.0263%" y="1829" width="0.0410%" height="15" fill="rgb(231,71,53)" fg:x="34386" fg:w="44"/><text x="32.2763%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.02%)</title><rect x="32.0440%" y="1813" width="0.0233%" height="15" fill="rgb(243,76,21)" fg:x="34405" fg:w="25"/><text x="32.2940%" y="1823.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (41 samples, 0.04%)</title><rect x="32.0682%" y="1813" width="0.0382%" height="15" fill="rgb(252,144,3)" fg:x="34431" fg:w="41"/><text x="32.3182%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="32.6662%" y="1797" width="0.0130%" height="15" fill="rgb(231,199,10)" fg:x="35073" fg:w="14"/><text x="32.9162%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (72 samples, 0.07%)</title><rect x="32.6839%" y="1797" width="0.0671%" height="15" fill="rgb(215,18,11)" fg:x="35092" fg:w="72"/><text x="32.9339%" y="1807.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (53 samples, 0.05%)</title><rect x="32.7593%" y="1797" width="0.0494%" height="15" fill="rgb(241,65,24)" fg:x="35173" fg:w="53"/><text x="33.0093%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (23 samples, 0.02%)</title><rect x="32.8087%" y="1797" width="0.0214%" height="15" fill="rgb(251,192,38)" fg:x="35226" fg:w="23"/><text x="33.0587%" y="1807.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="32.8301%" y="1797" width="0.0177%" height="15" fill="rgb(205,9,35)" fg:x="35249" fg:w="19"/><text x="33.0801%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (19 samples, 0.02%)</title><rect x="32.8515%" y="1797" width="0.0177%" height="15" fill="rgb(229,225,49)" fg:x="35272" fg:w="19"/><text x="33.1015%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (18 samples, 0.02%)</title><rect x="32.8692%" y="1797" width="0.0168%" height="15" fill="rgb(207,125,39)" fg:x="35291" fg:w="18"/><text x="33.1192%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (23 samples, 0.02%)</title><rect x="32.8869%" y="1797" width="0.0214%" height="15" fill="rgb(222,78,19)" fg:x="35310" fg:w="23"/><text x="33.1369%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (23 samples, 0.02%)</title><rect x="32.8869%" y="1781" width="0.0214%" height="15" fill="rgb(248,207,20)" fg:x="35310" fg:w="23"/><text x="33.1369%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (14 samples, 0.01%)</title><rect x="32.8953%" y="1765" width="0.0130%" height="15" fill="rgb(205,103,49)" fg:x="35319" fg:w="14"/><text x="33.1453%" y="1775.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.01%)</title><rect x="32.9083%" y="1797" width="0.0121%" height="15" fill="rgb(216,42,28)" fg:x="35333" fg:w="13"/><text x="33.1583%" y="1807.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.01%)</title><rect x="32.9083%" y="1781" width="0.0121%" height="15" fill="rgb(213,205,53)" fg:x="35333" fg:w="13"/><text x="33.1583%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (58 samples, 0.05%)</title><rect x="33.2213%" y="1781" width="0.0540%" height="15" fill="rgb(239,140,53)" fg:x="35669" fg:w="58"/><text x="33.4713%" y="1791.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (12 samples, 0.01%)</title><rect x="33.3330%" y="1749" width="0.0112%" height="15" fill="rgb(248,95,9)" fg:x="35789" fg:w="12"/><text x="33.5830%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (91 samples, 0.08%)</title><rect x="33.2753%" y="1781" width="0.0848%" height="15" fill="rgb(254,58,47)" fg:x="35727" fg:w="91"/><text x="33.5253%" y="1791.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="33.3321%" y="1765" width="0.0279%" height="15" fill="rgb(234,227,14)" fg:x="35788" fg:w="30"/><text x="33.5821%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.02%)</title><rect x="33.3442%" y="1749" width="0.0158%" height="15" fill="rgb(205,192,45)" fg:x="35801" fg:w="17"/><text x="33.5942%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (17 samples, 0.02%)</title><rect x="33.3442%" y="1733" width="0.0158%" height="15" fill="rgb(253,187,31)" fg:x="35801" fg:w="17"/><text x="33.5942%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="33.3442%" y="1717" width="0.0158%" height="15" fill="rgb(222,6,32)" fg:x="35801" fg:w="17"/><text x="33.5942%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="33.3442%" y="1701" width="0.0158%" height="15" fill="rgb(249,190,19)" fg:x="35801" fg:w="17"/><text x="33.5942%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="33.3442%" y="1685" width="0.0158%" height="15" fill="rgb(251,28,20)" fg:x="35801" fg:w="17"/><text x="33.5942%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (64 samples, 0.06%)</title><rect x="33.3610%" y="1781" width="0.0596%" height="15" fill="rgb(210,223,40)" fg:x="35819" fg:w="64"/><text x="33.6110%" y="1791.50"></text></g><g><title>alloc::alloc::exchange_malloc (56 samples, 0.05%)</title><rect x="33.3684%" y="1765" width="0.0522%" height="15" fill="rgb(216,137,22)" fg:x="35827" fg:w="56"/><text x="33.6184%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.04%)</title><rect x="33.3852%" y="1749" width="0.0354%" height="15" fill="rgb(247,39,34)" fg:x="35845" fg:w="38"/><text x="33.6352%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.04%)</title><rect x="33.3852%" y="1733" width="0.0354%" height="15" fill="rgb(239,43,50)" fg:x="35845" fg:w="38"/><text x="33.6352%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.04%)</title><rect x="33.3852%" y="1717" width="0.0354%" height="15" fill="rgb(241,212,9)" fg:x="35845" fg:w="38"/><text x="33.6352%" y="1727.50"></text></g><g><title>malloc (21 samples, 0.02%)</title><rect x="33.4010%" y="1701" width="0.0196%" height="15" fill="rgb(205,8,2)" fg:x="35862" fg:w="21"/><text x="33.6510%" y="1711.50"></text></g><g><title>cfree (41 samples, 0.04%)</title><rect x="33.4206%" y="1781" width="0.0382%" height="15" fill="rgb(217,173,54)" fg:x="35883" fg:w="41"/><text x="33.6706%" y="1791.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="33.4429%" y="1765" width="0.0158%" height="15" fill="rgb(208,149,52)" fg:x="35907" fg:w="17"/><text x="33.6929%" y="1775.50"></text></g><g><title>core::cmp::PartialEq::ne (16 samples, 0.01%)</title><rect x="33.4588%" y="1781" width="0.0149%" height="15" fill="rgb(239,99,40)" fg:x="35924" fg:w="16"/><text x="33.7088%" y="1791.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (16 samples, 0.01%)</title><rect x="33.4588%" y="1765" width="0.0149%" height="15" fill="rgb(233,214,26)" fg:x="35924" fg:w="16"/><text x="33.7088%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (13 samples, 0.01%)</title><rect x="33.4737%" y="1781" width="0.0121%" height="15" fill="rgb(231,225,37)" fg:x="35940" fg:w="13"/><text x="33.7237%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (20 samples, 0.02%)</title><rect x="33.5174%" y="1765" width="0.0186%" height="15" fill="rgb(252,55,35)" fg:x="35987" fg:w="20"/><text x="33.7674%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (55 samples, 0.05%)</title><rect x="33.4858%" y="1781" width="0.0512%" height="15" fill="rgb(239,43,18)" fg:x="35953" fg:w="55"/><text x="33.7358%" y="1791.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::has_copy (13 samples, 0.01%)</title><rect x="33.5370%" y="1781" width="0.0121%" height="15" fill="rgb(251,125,49)" fg:x="36008" fg:w="13"/><text x="33.7870%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (17 samples, 0.02%)</title><rect x="33.5715%" y="1765" width="0.0158%" height="15" fill="rgb(212,83,54)" fg:x="36045" fg:w="17"/><text x="33.8215%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (56 samples, 0.05%)</title><rect x="33.5547%" y="1781" width="0.0522%" height="15" fill="rgb(250,75,6)" fg:x="36027" fg:w="56"/><text x="33.8047%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (21 samples, 0.02%)</title><rect x="33.5873%" y="1765" width="0.0196%" height="15" fill="rgb(252,36,40)" fg:x="36062" fg:w="21"/><text x="33.8373%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.03%)</title><rect x="33.7270%" y="1701" width="0.0307%" height="15" fill="rgb(230,91,51)" fg:x="36212" fg:w="33"/><text x="33.9770%" y="1711.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.03%)</title><rect x="33.7270%" y="1685" width="0.0307%" height="15" fill="rgb(212,92,28)" fg:x="36212" fg:w="33"/><text x="33.9770%" y="1695.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.03%)</title><rect x="33.7270%" y="1669" width="0.0307%" height="15" fill="rgb(227,13,22)" fg:x="36212" fg:w="33"/><text x="33.9770%" y="1679.50"></text></g><g><title>realloc (32 samples, 0.03%)</title><rect x="33.7279%" y="1653" width="0.0298%" height="15" fill="rgb(239,204,32)" fg:x="36213" fg:w="32"/><text x="33.9779%" y="1663.50"></text></g><g><title>[libc.so.6] (30 samples, 0.03%)</title><rect x="33.7298%" y="1637" width="0.0279%" height="15" fill="rgb(228,49,41)" fg:x="36215" fg:w="30"/><text x="33.9798%" y="1647.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="33.7344%" y="1621" width="0.0233%" height="15" fill="rgb(206,95,6)" fg:x="36220" fg:w="25"/><text x="33.9844%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.04%)</title><rect x="33.7251%" y="1717" width="0.0363%" height="15" fill="rgb(251,20,14)" fg:x="36210" fg:w="39"/><text x="33.9751%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (43 samples, 0.04%)</title><rect x="33.7223%" y="1749" width="0.0400%" height="15" fill="rgb(214,99,28)" fg:x="36207" fg:w="43"/><text x="33.9723%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.04%)</title><rect x="33.7233%" y="1733" width="0.0391%" height="15" fill="rgb(239,122,54)" fg:x="36208" fg:w="42"/><text x="33.9733%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (193 samples, 0.18%)</title><rect x="33.6068%" y="1781" width="0.1798%" height="15" fill="rgb(218,217,46)" fg:x="36083" fg:w="193"/><text x="33.8568%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (80 samples, 0.07%)</title><rect x="33.7121%" y="1765" width="0.0745%" height="15" fill="rgb(249,106,28)" fg:x="36196" fg:w="80"/><text x="33.9621%" y="1775.50"></text></g><g><title>core::ptr::write (26 samples, 0.02%)</title><rect x="33.7624%" y="1749" width="0.0242%" height="15" fill="rgb(250,158,18)" fg:x="36250" fg:w="26"/><text x="34.0124%" y="1759.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="33.8397%" y="1765" width="0.0158%" height="15" fill="rgb(226,137,29)" fg:x="36333" fg:w="17"/><text x="34.0897%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="33.8397%" y="1749" width="0.0158%" height="15" fill="rgb(210,188,1)" fg:x="36333" fg:w="17"/><text x="34.0897%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="33.8397%" y="1733" width="0.0158%" height="15" fill="rgb(227,84,42)" fg:x="36333" fg:w="17"/><text x="34.0897%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="33.8397%" y="1717" width="0.0158%" height="15" fill="rgb(222,147,48)" fg:x="36333" fg:w="17"/><text x="34.0897%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="33.8593%" y="1637" width="0.0121%" height="15" fill="rgb(241,150,43)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.01%)</title><rect x="33.8593%" y="1621" width="0.0121%" height="15" fill="rgb(206,139,52)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="33.8593%" y="1605" width="0.0121%" height="15" fill="rgb(230,63,14)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="33.8593%" y="1589" width="0.0121%" height="15" fill="rgb(247,8,20)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="33.8593%" y="1573" width="0.0121%" height="15" fill="rgb(213,115,4)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.01%)</title><rect x="33.8593%" y="1557" width="0.0121%" height="15" fill="rgb(241,79,49)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (13 samples, 0.01%)</title><rect x="33.8593%" y="1541" width="0.0121%" height="15" fill="rgb(222,42,35)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (13 samples, 0.01%)</title><rect x="33.8593%" y="1525" width="0.0121%" height="15" fill="rgb(247,59,23)" fg:x="36354" fg:w="13"/><text x="34.1093%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="33.8565%" y="1765" width="0.0158%" height="15" fill="rgb(247,93,18)" fg:x="36351" fg:w="17"/><text x="34.1065%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="33.8565%" y="1749" width="0.0158%" height="15" fill="rgb(249,107,47)" fg:x="36351" fg:w="17"/><text x="34.1065%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 0.02%)</title><rect x="33.8565%" y="1733" width="0.0158%" height="15" fill="rgb(219,27,1)" fg:x="36351" fg:w="17"/><text x="34.1065%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (16 samples, 0.01%)</title><rect x="33.8574%" y="1717" width="0.0149%" height="15" fill="rgb(217,82,32)" fg:x="36352" fg:w="16"/><text x="34.1074%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.01%)</title><rect x="33.8574%" y="1701" width="0.0149%" height="15" fill="rgb(250,129,47)" fg:x="36352" fg:w="16"/><text x="34.1074%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="33.8574%" y="1685" width="0.0149%" height="15" fill="rgb(253,88,35)" fg:x="36352" fg:w="16"/><text x="34.1074%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="33.8574%" y="1669" width="0.0149%" height="15" fill="rgb(245,221,14)" fg:x="36352" fg:w="16"/><text x="34.1074%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="33.8583%" y="1653" width="0.0140%" height="15" fill="rgb(217,119,54)" fg:x="36353" fg:w="15"/><text x="34.1083%" y="1663.50"></text></g><g><title>&lt;move_binary_format::file_format::AbilitySetIterator as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="33.9244%" y="1621" width="0.0224%" height="15" fill="rgb(247,128,31)" fg:x="36424" fg:w="24"/><text x="34.1744%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.04%)</title><rect x="33.9161%" y="1653" width="0.0419%" height="15" fill="rgb(211,99,22)" fg:x="36415" fg:w="45"/><text x="34.1661%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.04%)</title><rect x="33.9161%" y="1637" width="0.0419%" height="15" fill="rgb(212,20,17)" fg:x="36415" fg:w="45"/><text x="34.1661%" y="1647.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.01%)</title><rect x="33.9468%" y="1621" width="0.0112%" height="15" fill="rgb(209,159,29)" fg:x="36448" fg:w="12"/><text x="34.1968%" y="1631.50"></text></g><g><title>&lt;move_binary_format::file_format::AbilitySet as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="33.9580%" y="1653" width="0.0130%" height="15" fill="rgb(222,177,53)" fg:x="36460" fg:w="14"/><text x="34.2080%" y="1663.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (66 samples, 0.06%)</title><rect x="33.9133%" y="1701" width="0.0615%" height="15" fill="rgb(234,46,43)" fg:x="36412" fg:w="66"/><text x="34.1633%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (64 samples, 0.06%)</title><rect x="33.9151%" y="1685" width="0.0596%" height="15" fill="rgb(208,108,14)" fg:x="36414" fg:w="64"/><text x="34.1651%" y="1695.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities::{{closure}} (64 samples, 0.06%)</title><rect x="33.9151%" y="1669" width="0.0596%" height="15" fill="rgb(226,78,53)" fg:x="36414" fg:w="64"/><text x="34.1651%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="33.9785%" y="1589" width="0.0130%" height="15" fill="rgb(230,20,41)" fg:x="36482" fg:w="14"/><text x="34.2285%" y="1599.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="33.9785%" y="1573" width="0.0130%" height="15" fill="rgb(213,195,35)" fg:x="36482" fg:w="14"/><text x="34.2285%" y="1583.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="33.9785%" y="1557" width="0.0130%" height="15" fill="rgb(242,62,36)" fg:x="36482" fg:w="14"/><text x="34.2285%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;,alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="33.9747%" y="1701" width="0.0177%" height="15" fill="rgb(222,210,37)" fg:x="36478" fg:w="19"/><text x="34.2247%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (15 samples, 0.01%)</title><rect x="33.9785%" y="1685" width="0.0140%" height="15" fill="rgb(232,107,19)" fg:x="36482" fg:w="15"/><text x="34.2285%" y="1695.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="33.9785%" y="1669" width="0.0140%" height="15" fill="rgb(235,85,17)" fg:x="36482" fg:w="15"/><text x="34.2285%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;move_binary_format::file_format::AbilitySet,alloc::alloc::Global&gt;&gt; (15 samples, 0.01%)</title><rect x="33.9785%" y="1653" width="0.0140%" height="15" fill="rgb(219,195,31)" fg:x="36482" fg:w="15"/><text x="34.2285%" y="1663.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="33.9785%" y="1637" width="0.0140%" height="15" fill="rgb(231,183,30)" fg:x="36482" fg:w="15"/><text x="34.2285%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (15 samples, 0.01%)</title><rect x="33.9785%" y="1621" width="0.0140%" height="15" fill="rgb(212,0,11)" fg:x="36482" fg:w="15"/><text x="34.2285%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="33.9785%" y="1605" width="0.0140%" height="15" fill="rgb(249,53,54)" fg:x="36482" fg:w="15"/><text x="34.2285%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (118 samples, 0.11%)</title><rect x="33.8909%" y="1749" width="0.1099%" height="15" fill="rgb(211,118,13)" fg:x="36388" fg:w="118"/><text x="34.1409%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (113 samples, 0.11%)</title><rect x="33.8956%" y="1733" width="0.1052%" height="15" fill="rgb(237,42,9)" fg:x="36393" fg:w="113"/><text x="34.1456%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (109 samples, 0.10%)</title><rect x="33.8993%" y="1717" width="0.1015%" height="15" fill="rgb(227,68,32)" fg:x="36397" fg:w="109"/><text x="34.1493%" y="1727.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (126 samples, 0.12%)</title><rect x="33.8853%" y="1765" width="0.1174%" height="15" fill="rgb(238,10,7)" fg:x="36382" fg:w="126"/><text x="34.1353%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (271 samples, 0.25%)</title><rect x="33.7941%" y="1781" width="0.2524%" height="15" fill="rgb(224,42,12)" fg:x="36284" fg:w="271"/><text x="34.0441%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (43 samples, 0.04%)</title><rect x="34.0064%" y="1765" width="0.0400%" height="15" fill="rgb(252,190,5)" fg:x="36512" fg:w="43"/><text x="34.2564%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="34.0064%" y="1749" width="0.0400%" height="15" fill="rgb(220,214,39)" fg:x="36512" fg:w="43"/><text x="34.2564%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="34.0297%" y="1733" width="0.0168%" height="15" fill="rgb(247,98,4)" fg:x="36537" fg:w="18"/><text x="34.2797%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="34.0297%" y="1717" width="0.0168%" height="15" fill="rgb(211,60,12)" fg:x="36537" fg:w="18"/><text x="34.2797%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="34.0884%" y="1637" width="0.0224%" height="15" fill="rgb(224,42,10)" fg:x="36600" fg:w="24"/><text x="34.3384%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (24 samples, 0.02%)</title><rect x="34.0884%" y="1621" width="0.0224%" height="15" fill="rgb(217,167,4)" fg:x="36600" fg:w="24"/><text x="34.3384%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="34.0884%" y="1605" width="0.0224%" height="15" fill="rgb(253,18,17)" fg:x="36600" fg:w="24"/><text x="34.3384%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="34.0884%" y="1589" width="0.0224%" height="15" fill="rgb(249,186,44)" fg:x="36600" fg:w="24"/><text x="34.3384%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.02%)</title><rect x="34.0884%" y="1573" width="0.0224%" height="15" fill="rgb(254,124,54)" fg:x="36600" fg:w="24"/><text x="34.3384%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (22 samples, 0.02%)</title><rect x="34.0902%" y="1557" width="0.0205%" height="15" fill="rgb(220,124,39)" fg:x="36602" fg:w="22"/><text x="34.3402%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (20 samples, 0.02%)</title><rect x="34.0921%" y="1541" width="0.0186%" height="15" fill="rgb(225,96,46)" fg:x="36604" fg:w="20"/><text x="34.3421%" y="1551.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (17 samples, 0.02%)</title><rect x="34.0949%" y="1525" width="0.0158%" height="15" fill="rgb(221,106,12)" fg:x="36607" fg:w="17"/><text x="34.3449%" y="1535.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (16 samples, 0.01%)</title><rect x="34.0958%" y="1509" width="0.0149%" height="15" fill="rgb(227,133,23)" fg:x="36608" fg:w="16"/><text x="34.3458%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (55 samples, 0.05%)</title><rect x="34.0679%" y="1765" width="0.0512%" height="15" fill="rgb(216,44,52)" fg:x="36578" fg:w="55"/><text x="34.3179%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (55 samples, 0.05%)</title><rect x="34.0679%" y="1749" width="0.0512%" height="15" fill="rgb(239,149,7)" fg:x="36578" fg:w="55"/><text x="34.3179%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (54 samples, 0.05%)</title><rect x="34.0688%" y="1733" width="0.0503%" height="15" fill="rgb(211,157,31)" fg:x="36579" fg:w="54"/><text x="34.3188%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (47 samples, 0.04%)</title><rect x="34.0753%" y="1717" width="0.0438%" height="15" fill="rgb(206,215,22)" fg:x="36586" fg:w="47"/><text x="34.3253%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 0.04%)</title><rect x="34.0753%" y="1701" width="0.0438%" height="15" fill="rgb(208,113,15)" fg:x="36586" fg:w="47"/><text x="34.3253%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 0.04%)</title><rect x="34.0753%" y="1685" width="0.0438%" height="15" fill="rgb(207,189,15)" fg:x="36586" fg:w="47"/><text x="34.3253%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.04%)</title><rect x="34.0791%" y="1669" width="0.0400%" height="15" fill="rgb(231,115,4)" fg:x="36590" fg:w="43"/><text x="34.3291%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (36 samples, 0.03%)</title><rect x="34.0856%" y="1653" width="0.0335%" height="15" fill="rgb(253,117,2)" fg:x="36597" fg:w="36"/><text x="34.3356%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (67 samples, 0.06%)</title><rect x="34.0586%" y="1781" width="0.0624%" height="15" fill="rgb(248,48,24)" fg:x="36568" fg:w="67"/><text x="34.3086%" y="1791.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="34.1619%" y="1717" width="0.0102%" height="15" fill="rgb(241,28,46)" fg:x="36679" fg:w="11"/><text x="34.4119%" y="1727.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (13 samples, 0.01%)</title><rect x="34.1619%" y="1733" width="0.0121%" height="15" fill="rgb(216,165,52)" fg:x="36679" fg:w="13"/><text x="34.4119%" y="1743.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (48 samples, 0.04%)</title><rect x="34.1368%" y="1765" width="0.0447%" height="15" fill="rgb(220,222,34)" fg:x="36652" fg:w="48"/><text x="34.3868%" y="1775.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="34.1619%" y="1749" width="0.0196%" height="15" fill="rgb(247,222,49)" fg:x="36679" fg:w="21"/><text x="34.4119%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (77 samples, 0.07%)</title><rect x="34.1210%" y="1781" width="0.0717%" height="15" fill="rgb(240,10,31)" fg:x="36635" fg:w="77"/><text x="34.3710%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.02%)</title><rect x="34.2094%" y="1765" width="0.0242%" height="15" fill="rgb(221,199,35)" fg:x="36730" fg:w="26"/><text x="34.4594%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (26 samples, 0.02%)</title><rect x="34.2094%" y="1749" width="0.0242%" height="15" fill="rgb(230,223,11)" fg:x="36730" fg:w="26"/><text x="34.4594%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (26 samples, 0.02%)</title><rect x="34.2094%" y="1733" width="0.0242%" height="15" fill="rgb(218,82,45)" fg:x="36730" fg:w="26"/><text x="34.4594%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (21 samples, 0.02%)</title><rect x="34.2141%" y="1717" width="0.0196%" height="15" fill="rgb(233,213,33)" fg:x="36735" fg:w="21"/><text x="34.4641%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.02%)</title><rect x="34.2141%" y="1701" width="0.0196%" height="15" fill="rgb(210,143,52)" fg:x="36735" fg:w="21"/><text x="34.4641%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="34.2141%" y="1685" width="0.0196%" height="15" fill="rgb(206,95,4)" fg:x="36735" fg:w="21"/><text x="34.4641%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="34.2197%" y="1669" width="0.0140%" height="15" fill="rgb(246,164,46)" fg:x="36741" fg:w="15"/><text x="34.4697%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="34.2197%" y="1653" width="0.0140%" height="15" fill="rgb(213,210,47)" fg:x="36741" fg:w="15"/><text x="34.4697%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (14 samples, 0.01%)</title><rect x="34.2337%" y="1765" width="0.0130%" height="15" fill="rgb(210,12,38)" fg:x="36756" fg:w="14"/><text x="34.4837%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (12 samples, 0.01%)</title><rect x="34.2467%" y="1765" width="0.0112%" height="15" fill="rgb(252,192,54)" fg:x="36770" fg:w="12"/><text x="34.4967%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="34.2728%" y="1733" width="0.0112%" height="15" fill="rgb(242,92,6)" fg:x="36798" fg:w="12"/><text x="34.5228%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="34.2728%" y="1717" width="0.0112%" height="15" fill="rgb(253,154,15)" fg:x="36798" fg:w="12"/><text x="34.5228%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="34.2737%" y="1701" width="0.0102%" height="15" fill="rgb(209,20,43)" fg:x="36799" fg:w="11"/><text x="34.5237%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (99 samples, 0.09%)</title><rect x="34.2020%" y="1781" width="0.0922%" height="15" fill="rgb(232,28,49)" fg:x="36722" fg:w="99"/><text x="34.4520%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (39 samples, 0.04%)</title><rect x="34.2579%" y="1765" width="0.0363%" height="15" fill="rgb(248,131,53)" fg:x="36782" fg:w="39"/><text x="34.5079%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (37 samples, 0.03%)</title><rect x="34.2597%" y="1749" width="0.0345%" height="15" fill="rgb(214,16,30)" fg:x="36784" fg:w="37"/><text x="34.5097%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="34.2840%" y="1733" width="0.0102%" height="15" fill="rgb(245,16,0)" fg:x="36810" fg:w="11"/><text x="34.5340%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.01%)</title><rect x="34.2998%" y="1765" width="0.0140%" height="15" fill="rgb(245,17,35)" fg:x="36827" fg:w="15"/><text x="34.5498%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="34.2998%" y="1749" width="0.0140%" height="15" fill="rgb(249,27,53)" fg:x="36827" fg:w="15"/><text x="34.5498%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (15 samples, 0.01%)</title><rect x="34.2998%" y="1733" width="0.0140%" height="15" fill="rgb(214,73,24)" fg:x="36827" fg:w="15"/><text x="34.5498%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (14 samples, 0.01%)</title><rect x="34.3007%" y="1717" width="0.0130%" height="15" fill="rgb(223,84,37)" fg:x="36828" fg:w="14"/><text x="34.5507%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.01%)</title><rect x="34.3007%" y="1701" width="0.0130%" height="15" fill="rgb(210,109,28)" fg:x="36828" fg:w="14"/><text x="34.5507%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="34.3007%" y="1685" width="0.0130%" height="15" fill="rgb(208,186,6)" fg:x="36828" fg:w="14"/><text x="34.5507%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="34.3017%" y="1669" width="0.0121%" height="15" fill="rgb(235,201,30)" fg:x="36829" fg:w="13"/><text x="34.5517%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="34.3035%" y="1653" width="0.0102%" height="15" fill="rgb(216,198,48)" fg:x="36831" fg:w="11"/><text x="34.5535%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (28 samples, 0.03%)</title><rect x="34.2942%" y="1781" width="0.0261%" height="15" fill="rgb(254,186,25)" fg:x="36821" fg:w="28"/><text x="34.5442%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (59 samples, 0.05%)</title><rect x="34.3268%" y="1781" width="0.0550%" height="15" fill="rgb(227,87,5)" fg:x="36856" fg:w="59"/><text x="34.5768%" y="1791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (46 samples, 0.04%)</title><rect x="34.3389%" y="1765" width="0.0428%" height="15" fill="rgb(236,205,25)" fg:x="36869" fg:w="46"/><text x="34.5889%" y="1775.50"></text></g><g><title>core::cmp::PartialEq::ne (46 samples, 0.04%)</title><rect x="34.3389%" y="1749" width="0.0428%" height="15" fill="rgb(229,99,32)" fg:x="36869" fg:w="46"/><text x="34.5889%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (45 samples, 0.04%)</title><rect x="34.3398%" y="1733" width="0.0419%" height="15" fill="rgb(231,177,31)" fg:x="36870" fg:w="45"/><text x="34.5898%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_ref_eq (11 samples, 0.01%)</title><rect x="34.3818%" y="1781" width="0.0102%" height="15" fill="rgb(246,15,2)" fg:x="36915" fg:w="11"/><text x="34.6318%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (1,589 samples, 1.48%)</title><rect x="32.9204%" y="1797" width="1.4800%" height="15" fill="rgb(207,39,15)" fg:x="35346" fg:w="1589"/><text x="33.1704%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="34.7515%" y="1781" width="0.0149%" height="15" fill="rgb(207,44,9)" fg:x="37312" fg:w="16"/><text x="35.0015%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="34.7515%" y="1765" width="0.0149%" height="15" fill="rgb(225,224,33)" fg:x="37312" fg:w="16"/><text x="35.0015%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="34.7757%" y="1781" width="0.0177%" height="15" fill="rgb(252,151,3)" fg:x="37338" fg:w="19"/><text x="35.0257%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (17 samples, 0.02%)</title><rect x="34.7934%" y="1781" width="0.0158%" height="15" fill="rgb(211,140,13)" fg:x="37357" fg:w="17"/><text x="35.0434%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (24 samples, 0.02%)</title><rect x="34.8093%" y="1765" width="0.0224%" height="15" fill="rgb(239,225,17)" fg:x="37374" fg:w="24"/><text x="35.0593%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (31 samples, 0.03%)</title><rect x="34.8093%" y="1781" width="0.0289%" height="15" fill="rgb(223,170,52)" fg:x="37374" fg:w="31"/><text x="35.0593%" y="1791.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (16 samples, 0.01%)</title><rect x="34.8558%" y="1701" width="0.0149%" height="15" fill="rgb(212,64,21)" fg:x="37424" fg:w="16"/><text x="35.1058%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 0.01%)</title><rect x="34.8558%" y="1685" width="0.0149%" height="15" fill="rgb(236,126,48)" fg:x="37424" fg:w="16"/><text x="35.1058%" y="1695.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities::{{closure}} (16 samples, 0.01%)</title><rect x="34.8558%" y="1669" width="0.0149%" height="15" fill="rgb(209,135,11)" fg:x="37424" fg:w="16"/><text x="35.1058%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="34.8577%" y="1653" width="0.0130%" height="15" fill="rgb(228,126,40)" fg:x="37426" fg:w="14"/><text x="35.1077%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.01%)</title><rect x="34.8577%" y="1637" width="0.0130%" height="15" fill="rgb(205,196,36)" fg:x="37426" fg:w="14"/><text x="35.1077%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.02%)</title><rect x="34.8530%" y="1749" width="0.0233%" height="15" fill="rgb(243,160,33)" fg:x="37421" fg:w="25"/><text x="35.1030%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.02%)</title><rect x="34.8549%" y="1733" width="0.0214%" height="15" fill="rgb(210,84,20)" fg:x="37423" fg:w="23"/><text x="35.1049%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (23 samples, 0.02%)</title><rect x="34.8549%" y="1717" width="0.0214%" height="15" fill="rgb(228,213,30)" fg:x="37423" fg:w="23"/><text x="35.1049%" y="1727.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (30 samples, 0.03%)</title><rect x="34.8521%" y="1765" width="0.0279%" height="15" fill="rgb(252,33,45)" fg:x="37420" fg:w="30"/><text x="35.1021%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (48 samples, 0.04%)</title><rect x="34.8391%" y="1781" width="0.0447%" height="15" fill="rgb(254,227,20)" fg:x="37406" fg:w="48"/><text x="35.0891%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (596 samples, 0.56%)</title><rect x="34.4004%" y="1797" width="0.5551%" height="15" fill="rgb(228,192,2)" fg:x="36935" fg:w="596"/><text x="34.6504%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (73 samples, 0.07%)</title><rect x="34.8875%" y="1781" width="0.0680%" height="15" fill="rgb(233,32,8)" fg:x="37458" fg:w="73"/><text x="35.1375%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (48 samples, 0.04%)</title><rect x="34.9555%" y="1797" width="0.0447%" height="15" fill="rgb(220,146,47)" fg:x="37531" fg:w="48"/><text x="35.2055%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="35.0123%" y="1765" width="0.0196%" height="15" fill="rgb(246,194,1)" fg:x="37592" fg:w="21"/><text x="35.2623%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::ge (13 samples, 0.01%)</title><rect x="35.0514%" y="1733" width="0.0121%" height="15" fill="rgb(218,203,9)" fg:x="37634" fg:w="13"/><text x="35.3014%" y="1743.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23 samples, 0.02%)</title><rect x="35.0514%" y="1749" width="0.0214%" height="15" fill="rgb(237,97,14)" fg:x="37634" fg:w="23"/><text x="35.3014%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (51 samples, 0.05%)</title><rect x="35.0319%" y="1765" width="0.0475%" height="15" fill="rgb(239,76,15)" fg:x="37613" fg:w="51"/><text x="35.2819%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.02%)</title><rect x="35.0794%" y="1749" width="0.0168%" height="15" fill="rgb(222,53,45)" fg:x="37664" fg:w="18"/><text x="35.3294%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (19 samples, 0.02%)</title><rect x="35.0961%" y="1749" width="0.0177%" height="15" fill="rgb(237,88,5)" fg:x="37682" fg:w="19"/><text x="35.3461%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (66 samples, 0.06%)</title><rect x="35.0794%" y="1765" width="0.0615%" height="15" fill="rgb(218,223,35)" fg:x="37664" fg:w="66"/><text x="35.3294%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (29 samples, 0.03%)</title><rect x="35.1138%" y="1749" width="0.0270%" height="15" fill="rgb(243,229,38)" fg:x="37701" fg:w="29"/><text x="35.3638%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (17 samples, 0.02%)</title><rect x="35.1250%" y="1733" width="0.0158%" height="15" fill="rgb(240,75,41)" fg:x="37713" fg:w="17"/><text x="35.3750%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (163 samples, 0.15%)</title><rect x="35.0002%" y="1797" width="0.1518%" height="15" fill="rgb(209,110,37)" fg:x="37579" fg:w="163"/><text x="35.2502%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (155 samples, 0.14%)</title><rect x="35.0076%" y="1781" width="0.1444%" height="15" fill="rgb(221,130,46)" fg:x="37587" fg:w="155"/><text x="35.2576%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (12 samples, 0.01%)</title><rect x="35.1408%" y="1765" width="0.0112%" height="15" fill="rgb(237,160,20)" fg:x="37730" fg:w="12"/><text x="35.3908%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.02%)</title><rect x="35.1678%" y="1765" width="0.0158%" height="15" fill="rgb(234,126,24)" fg:x="37759" fg:w="17"/><text x="35.4178%" y="1775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 0.03%)</title><rect x="35.2042%" y="1749" width="0.0289%" height="15" fill="rgb(207,177,9)" fg:x="37798" fg:w="31"/><text x="35.4542%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::mul_checked (25 samples, 0.02%)</title><rect x="35.2097%" y="1733" width="0.0233%" height="15" fill="rgb(231,191,33)" fg:x="37804" fg:w="25"/><text x="35.4597%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (64 samples, 0.06%)</title><rect x="35.1837%" y="1765" width="0.0596%" height="15" fill="rgb(207,42,1)" fg:x="37776" fg:w="64"/><text x="35.4337%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::u64 (11 samples, 0.01%)</title><rect x="35.2330%" y="1749" width="0.0102%" height="15" fill="rgb(218,34,50)" fg:x="37829" fg:w="11"/><text x="35.4830%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="35.2433%" y="1749" width="0.0121%" height="15" fill="rgb(254,126,39)" fg:x="37840" fg:w="13"/><text x="35.4933%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (13 samples, 0.01%)</title><rect x="35.2554%" y="1749" width="0.0121%" height="15" fill="rgb(251,17,26)" fg:x="37853" fg:w="13"/><text x="35.5054%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (61 samples, 0.06%)</title><rect x="35.2433%" y="1765" width="0.0568%" height="15" fill="rgb(252,215,34)" fg:x="37840" fg:w="61"/><text x="35.4933%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (35 samples, 0.03%)</title><rect x="35.2675%" y="1749" width="0.0326%" height="15" fill="rgb(217,120,44)" fg:x="37866" fg:w="35"/><text x="35.5175%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (24 samples, 0.02%)</title><rect x="35.2777%" y="1733" width="0.0224%" height="15" fill="rgb(211,31,11)" fg:x="37877" fg:w="24"/><text x="35.5277%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (167 samples, 0.16%)</title><rect x="35.1520%" y="1797" width="0.1555%" height="15" fill="rgb(222,69,51)" fg:x="37742" fg:w="167"/><text x="35.4020%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (157 samples, 0.15%)</title><rect x="35.1613%" y="1781" width="0.1462%" height="15" fill="rgb(215,229,42)" fg:x="37752" fg:w="157"/><text x="35.4113%" y="1791.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="35.3970%" y="1685" width="0.0140%" height="15" fill="rgb(212,102,15)" fg:x="38005" fg:w="15"/><text x="35.6470%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="35.3979%" y="1669" width="0.0130%" height="15" fill="rgb(205,179,41)" fg:x="38006" fg:w="14"/><text x="35.6479%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="35.3979%" y="1653" width="0.0130%" height="15" fill="rgb(219,148,46)" fg:x="38006" fg:w="14"/><text x="35.6479%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="35.3997%" y="1637" width="0.0112%" height="15" fill="rgb(243,40,19)" fg:x="38008" fg:w="12"/><text x="35.6497%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (12 samples, 0.01%)</title><rect x="35.3997%" y="1621" width="0.0112%" height="15" fill="rgb(208,206,34)" fg:x="38008" fg:w="12"/><text x="35.6497%" y="1631.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (13 samples, 0.01%)</title><rect x="35.4221%" y="1669" width="0.0121%" height="15" fill="rgb(244,184,38)" fg:x="38032" fg:w="13"/><text x="35.6721%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (13 samples, 0.01%)</title><rect x="35.4221%" y="1653" width="0.0121%" height="15" fill="rgb(244,151,47)" fg:x="38032" fg:w="13"/><text x="35.6721%" y="1663.50"></text></g><g><title>bcs::de::from_bytes (21 samples, 0.02%)</title><rect x="35.4202%" y="1685" width="0.0196%" height="15" fill="rgb(236,134,42)" fg:x="38030" fg:w="21"/><text x="35.6702%" y="1695.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (12 samples, 0.01%)</title><rect x="35.4538%" y="1653" width="0.0112%" height="15" fill="rgb(233,93,22)" fg:x="38066" fg:w="12"/><text x="35.7038%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (19 samples, 0.02%)</title><rect x="35.4649%" y="1653" width="0.0177%" height="15" fill="rgb(211,202,10)" fg:x="38078" fg:w="19"/><text x="35.7149%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (19 samples, 0.02%)</title><rect x="35.4649%" y="1637" width="0.0177%" height="15" fill="rgb(240,63,8)" fg:x="38078" fg:w="19"/><text x="35.7149%" y="1647.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (17 samples, 0.02%)</title><rect x="35.4668%" y="1621" width="0.0158%" height="15" fill="rgb(214,9,4)" fg:x="38080" fg:w="17"/><text x="35.7168%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="35.4677%" y="1605" width="0.0149%" height="15" fill="rgb(243,66,45)" fg:x="38081" fg:w="16"/><text x="35.7177%" y="1615.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (16 samples, 0.01%)</title><rect x="35.4677%" y="1589" width="0.0149%" height="15" fill="rgb(220,50,42)" fg:x="38081" fg:w="16"/><text x="35.7177%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (16 samples, 0.01%)</title><rect x="35.4677%" y="1573" width="0.0149%" height="15" fill="rgb(220,134,27)" fg:x="38081" fg:w="16"/><text x="35.7177%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (16 samples, 0.01%)</title><rect x="35.4677%" y="1557" width="0.0149%" height="15" fill="rgb(246,151,50)" fg:x="38081" fg:w="16"/><text x="35.7177%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="35.5124%" y="1525" width="0.0102%" height="15" fill="rgb(238,216,27)" fg:x="38129" fg:w="11"/><text x="35.7624%" y="1535.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="35.5124%" y="1509" width="0.0102%" height="15" fill="rgb(250,92,11)" fg:x="38129" fg:w="11"/><text x="35.7624%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="35.5124%" y="1493" width="0.0102%" height="15" fill="rgb(248,183,6)" fg:x="38129" fg:w="11"/><text x="35.7624%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (38 samples, 0.04%)</title><rect x="35.4975%" y="1589" width="0.0354%" height="15" fill="rgb(211,204,50)" fg:x="38113" fg:w="38"/><text x="35.7475%" y="1599.50"></text></g><g><title>core::hash::BuildHasher::hash_one (38 samples, 0.04%)</title><rect x="35.4975%" y="1573" width="0.0354%" height="15" fill="rgb(252,55,47)" fg:x="38113" fg:w="38"/><text x="35.7475%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.02%)</title><rect x="35.5124%" y="1557" width="0.0205%" height="15" fill="rgb(240,198,32)" fg:x="38129" fg:w="22"/><text x="35.7624%" y="1567.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="35.5124%" y="1541" width="0.0205%" height="15" fill="rgb(224,203,19)" fg:x="38129" fg:w="22"/><text x="35.7624%" y="1551.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="35.5227%" y="1525" width="0.0102%" height="15" fill="rgb(205,27,16)" fg:x="38140" fg:w="11"/><text x="35.7727%" y="1535.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="35.5227%" y="1509" width="0.0102%" height="15" fill="rgb(224,226,17)" fg:x="38140" fg:w="11"/><text x="35.7727%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.01%)</title><rect x="35.5227%" y="1493" width="0.0102%" height="15" fill="rgb(205,216,54)" fg:x="38140" fg:w="11"/><text x="35.7727%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="35.5227%" y="1477" width="0.0102%" height="15" fill="rgb(248,168,46)" fg:x="38140" fg:w="11"/><text x="35.7727%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="35.5227%" y="1461" width="0.0102%" height="15" fill="rgb(226,111,45)" fg:x="38140" fg:w="11"/><text x="35.7727%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="35.5227%" y="1445" width="0.0102%" height="15" fill="rgb(231,15,9)" fg:x="38140" fg:w="11"/><text x="35.7727%" y="1455.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.01%)</title><rect x="35.5348%" y="1525" width="0.0130%" height="15" fill="rgb(243,168,3)" fg:x="38153" fg:w="14"/><text x="35.7848%" y="1535.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="35.5348%" y="1509" width="0.0130%" height="15" fill="rgb(221,220,54)" fg:x="38153" fg:w="14"/><text x="35.7848%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (17 samples, 0.02%)</title><rect x="35.5339%" y="1541" width="0.0158%" height="15" fill="rgb(232,174,38)" fg:x="38152" fg:w="17"/><text x="35.7839%" y="1551.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (185 samples, 0.17%)</title><rect x="35.3848%" y="1717" width="0.1723%" height="15" fill="rgb(205,14,38)" fg:x="37992" fg:w="185"/><text x="35.6348%" y="1727.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (184 samples, 0.17%)</title><rect x="35.3858%" y="1701" width="0.1714%" height="15" fill="rgb(234,89,19)" fg:x="37993" fg:w="184"/><text x="35.6358%" y="1711.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (119 samples, 0.11%)</title><rect x="35.4463%" y="1685" width="0.1108%" height="15" fill="rgb(216,68,51)" fg:x="38058" fg:w="119"/><text x="35.6963%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (115 samples, 0.11%)</title><rect x="35.4500%" y="1669" width="0.1071%" height="15" fill="rgb(213,49,2)" fg:x="38062" fg:w="115"/><text x="35.7000%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (65 samples, 0.06%)</title><rect x="35.4966%" y="1653" width="0.0605%" height="15" fill="rgb(242,146,30)" fg:x="38112" fg:w="65"/><text x="35.7466%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (65 samples, 0.06%)</title><rect x="35.4966%" y="1637" width="0.0605%" height="15" fill="rgb(224,188,11)" fg:x="38112" fg:w="65"/><text x="35.7466%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (65 samples, 0.06%)</title><rect x="35.4966%" y="1621" width="0.0605%" height="15" fill="rgb(213,159,11)" fg:x="38112" fg:w="65"/><text x="35.7466%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (65 samples, 0.06%)</title><rect x="35.4966%" y="1605" width="0.0605%" height="15" fill="rgb(229,13,31)" fg:x="38112" fg:w="65"/><text x="35.7466%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.02%)</title><rect x="35.5329%" y="1589" width="0.0242%" height="15" fill="rgb(209,103,11)" fg:x="38151" fg:w="26"/><text x="35.7829%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.02%)</title><rect x="35.5329%" y="1573" width="0.0242%" height="15" fill="rgb(206,3,4)" fg:x="38151" fg:w="26"/><text x="35.7829%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (26 samples, 0.02%)</title><rect x="35.5329%" y="1557" width="0.0242%" height="15" fill="rgb(252,10,49)" fg:x="38151" fg:w="26"/><text x="35.7829%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="35.5786%" y="1669" width="0.0112%" height="15" fill="rgb(217,160,32)" fg:x="38200" fg:w="12"/><text x="35.8286%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.01%)</title><rect x="35.5953%" y="1605" width="0.0121%" height="15" fill="rgb(249,196,0)" fg:x="38218" fg:w="13"/><text x="35.8453%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="35.5953%" y="1589" width="0.0121%" height="15" fill="rgb(213,17,48)" fg:x="38218" fg:w="13"/><text x="35.8453%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="35.5953%" y="1573" width="0.0121%" height="15" fill="rgb(206,42,46)" fg:x="38218" fg:w="13"/><text x="35.8453%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="35.5953%" y="1557" width="0.0121%" height="15" fill="rgb(212,105,24)" fg:x="38218" fg:w="13"/><text x="35.8453%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="35.5953%" y="1541" width="0.0121%" height="15" fill="rgb(243,216,30)" fg:x="38218" fg:w="13"/><text x="35.8453%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="35.5953%" y="1525" width="0.0121%" height="15" fill="rgb(207,121,3)" fg:x="38218" fg:w="13"/><text x="35.8453%" y="1535.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="35.5758%" y="1685" width="0.0345%" height="15" fill="rgb(249,78,0)" fg:x="38197" fg:w="37"/><text x="35.8258%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="35.5916%" y="1669" width="0.0186%" height="15" fill="rgb(244,151,32)" fg:x="38214" fg:w="20"/><text x="35.8416%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="35.5916%" y="1653" width="0.0186%" height="15" fill="rgb(228,63,25)" fg:x="38214" fg:w="20"/><text x="35.8416%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="35.5953%" y="1637" width="0.0149%" height="15" fill="rgb(231,158,23)" fg:x="38218" fg:w="16"/><text x="35.8453%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (16 samples, 0.01%)</title><rect x="35.5953%" y="1621" width="0.0149%" height="15" fill="rgb(248,107,23)" fg:x="38218" fg:w="16"/><text x="35.8453%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.01%)</title><rect x="35.6270%" y="1605" width="0.0121%" height="15" fill="rgb(215,168,21)" fg:x="38252" fg:w="13"/><text x="35.8770%" y="1615.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (13 samples, 0.01%)</title><rect x="35.6270%" y="1589" width="0.0121%" height="15" fill="rgb(227,83,22)" fg:x="38252" fg:w="13"/><text x="35.8770%" y="1599.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (13 samples, 0.01%)</title><rect x="35.6270%" y="1573" width="0.0121%" height="15" fill="rgb(217,118,43)" fg:x="38252" fg:w="13"/><text x="35.8770%" y="1583.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.01%)</title><rect x="35.6270%" y="1557" width="0.0121%" height="15" fill="rgb(229,220,41)" fg:x="38252" fg:w="13"/><text x="35.8770%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.01%)</title><rect x="35.6270%" y="1541" width="0.0121%" height="15" fill="rgb(254,146,46)" fg:x="38252" fg:w="13"/><text x="35.8770%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="35.6270%" y="1525" width="0.0121%" height="15" fill="rgb(233,208,31)" fg:x="38252" fg:w="13"/><text x="35.8770%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.01%)</title><rect x="35.6270%" y="1509" width="0.0121%" height="15" fill="rgb(222,162,7)" fg:x="38252" fg:w="13"/><text x="35.8770%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="35.6279%" y="1493" width="0.0112%" height="15" fill="rgb(230,117,45)" fg:x="38253" fg:w="12"/><text x="35.8779%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="35.6279%" y="1477" width="0.0112%" height="15" fill="rgb(239,163,6)" fg:x="38253" fg:w="12"/><text x="35.8779%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.01%)</title><rect x="35.6913%" y="1333" width="0.0130%" height="15" fill="rgb(246,130,17)" fg:x="38321" fg:w="14"/><text x="35.9413%" y="1343.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.01%)</title><rect x="35.6913%" y="1317" width="0.0130%" height="15" fill="rgb(216,84,5)" fg:x="38321" fg:w="14"/><text x="35.9413%" y="1327.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.01%)</title><rect x="35.6913%" y="1301" width="0.0130%" height="15" fill="rgb(230,200,21)" fg:x="38321" fg:w="14"/><text x="35.9413%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.02%)</title><rect x="35.6866%" y="1349" width="0.0196%" height="15" fill="rgb(224,2,8)" fg:x="38316" fg:w="21"/><text x="35.9366%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (52 samples, 0.05%)</title><rect x="35.6596%" y="1413" width="0.0484%" height="15" fill="rgb(238,178,10)" fg:x="38287" fg:w="52"/><text x="35.9096%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (49 samples, 0.05%)</title><rect x="35.6624%" y="1397" width="0.0456%" height="15" fill="rgb(242,153,24)" fg:x="38290" fg:w="49"/><text x="35.9124%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.03%)</title><rect x="35.6736%" y="1381" width="0.0345%" height="15" fill="rgb(242,32,48)" fg:x="38302" fg:w="37"/><text x="35.9236%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.03%)</title><rect x="35.6782%" y="1365" width="0.0298%" height="15" fill="rgb(227,36,0)" fg:x="38307" fg:w="32"/><text x="35.9282%" y="1375.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (74 samples, 0.07%)</title><rect x="35.6428%" y="1573" width="0.0689%" height="15" fill="rgb(251,33,35)" fg:x="38269" fg:w="74"/><text x="35.8928%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (74 samples, 0.07%)</title><rect x="35.6428%" y="1557" width="0.0689%" height="15" fill="rgb(232,168,51)" fg:x="38269" fg:w="74"/><text x="35.8928%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (71 samples, 0.07%)</title><rect x="35.6456%" y="1541" width="0.0661%" height="15" fill="rgb(228,56,10)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (71 samples, 0.07%)</title><rect x="35.6456%" y="1525" width="0.0661%" height="15" fill="rgb(231,10,26)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (71 samples, 0.07%)</title><rect x="35.6456%" y="1509" width="0.0661%" height="15" fill="rgb(226,202,12)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (71 samples, 0.07%)</title><rect x="35.6456%" y="1493" width="0.0661%" height="15" fill="rgb(251,49,21)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1503.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (71 samples, 0.07%)</title><rect x="35.6456%" y="1477" width="0.0661%" height="15" fill="rgb(206,228,28)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (71 samples, 0.07%)</title><rect x="35.6456%" y="1461" width="0.0661%" height="15" fill="rgb(205,198,31)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (71 samples, 0.07%)</title><rect x="35.6456%" y="1445" width="0.0661%" height="15" fill="rgb(213,69,1)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (71 samples, 0.07%)</title><rect x="35.6456%" y="1429" width="0.0661%" height="15" fill="rgb(209,177,9)" fg:x="38272" fg:w="71"/><text x="35.8956%" y="1439.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (27 samples, 0.03%)</title><rect x="35.7118%" y="1573" width="0.0251%" height="15" fill="rgb(227,119,30)" fg:x="38343" fg:w="27"/><text x="35.9618%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 0.03%)</title><rect x="35.7118%" y="1557" width="0.0251%" height="15" fill="rgb(234,106,41)" fg:x="38343" fg:w="27"/><text x="35.9618%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (24 samples, 0.02%)</title><rect x="35.7146%" y="1541" width="0.0224%" height="15" fill="rgb(244,103,47)" fg:x="38346" fg:w="24"/><text x="35.9646%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (24 samples, 0.02%)</title><rect x="35.7146%" y="1525" width="0.0224%" height="15" fill="rgb(212,211,25)" fg:x="38346" fg:w="24"/><text x="35.9646%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (24 samples, 0.02%)</title><rect x="35.7146%" y="1509" width="0.0224%" height="15" fill="rgb(208,63,53)" fg:x="38346" fg:w="24"/><text x="35.9646%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (24 samples, 0.02%)</title><rect x="35.7146%" y="1493" width="0.0224%" height="15" fill="rgb(213,176,21)" fg:x="38346" fg:w="24"/><text x="35.9646%" y="1503.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (20 samples, 0.02%)</title><rect x="35.7183%" y="1477" width="0.0186%" height="15" fill="rgb(243,124,12)" fg:x="38350" fg:w="20"/><text x="35.9683%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.02%)</title><rect x="35.7183%" y="1461" width="0.0186%" height="15" fill="rgb(239,2,35)" fg:x="38350" fg:w="20"/><text x="35.9683%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.02%)</title><rect x="35.7183%" y="1445" width="0.0186%" height="15" fill="rgb(253,169,22)" fg:x="38350" fg:w="20"/><text x="35.9683%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.02%)</title><rect x="35.7183%" y="1429" width="0.0186%" height="15" fill="rgb(254,51,12)" fg:x="38350" fg:w="20"/><text x="35.9683%" y="1439.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (107 samples, 0.10%)</title><rect x="35.6419%" y="1589" width="0.0997%" height="15" fill="rgb(244,17,47)" fg:x="38268" fg:w="107"/><text x="35.8919%" y="1599.50"></text></g><g><title>bcs::ser::to_bytes (126 samples, 0.12%)</title><rect x="35.6251%" y="1653" width="0.1174%" height="15" fill="rgb(251,45,46)" fg:x="38250" fg:w="126"/><text x="35.8751%" y="1663.50"></text></g><g><title>bcs::ser::serialize_into (125 samples, 0.12%)</title><rect x="35.6261%" y="1637" width="0.1164%" height="15" fill="rgb(223,87,43)" fg:x="38251" fg:w="125"/><text x="35.8761%" y="1647.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (125 samples, 0.12%)</title><rect x="35.6261%" y="1621" width="0.1164%" height="15" fill="rgb(230,132,31)" fg:x="38251" fg:w="125"/><text x="35.8761%" y="1631.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (111 samples, 0.10%)</title><rect x="35.6391%" y="1605" width="0.1034%" height="15" fill="rgb(206,99,1)" fg:x="38265" fg:w="111"/><text x="35.8891%" y="1615.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (172 samples, 0.16%)</title><rect x="35.6102%" y="1685" width="0.1602%" height="15" fill="rgb(227,110,25)" fg:x="38234" fg:w="172"/><text x="35.8602%" y="1695.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (163 samples, 0.15%)</title><rect x="35.6186%" y="1669" width="0.1518%" height="15" fill="rgb(217,182,7)" fg:x="38243" fg:w="163"/><text x="35.8686%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (30 samples, 0.03%)</title><rect x="35.7425%" y="1653" width="0.0279%" height="15" fill="rgb(250,176,4)" fg:x="38376" fg:w="30"/><text x="35.9925%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (27 samples, 0.03%)</title><rect x="35.7453%" y="1637" width="0.0251%" height="15" fill="rgb(244,98,30)" fg:x="38379" fg:w="27"/><text x="35.9953%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (19 samples, 0.02%)</title><rect x="35.7527%" y="1621" width="0.0177%" height="15" fill="rgb(228,150,42)" fg:x="38387" fg:w="19"/><text x="36.0027%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (19 samples, 0.02%)</title><rect x="35.7527%" y="1605" width="0.0177%" height="15" fill="rgb(231,91,46)" fg:x="38387" fg:w="19"/><text x="36.0027%" y="1615.50"></text></g><g><title>alloc::alloc::box_free (19 samples, 0.02%)</title><rect x="35.7527%" y="1589" width="0.0177%" height="15" fill="rgb(252,161,32)" fg:x="38387" fg:w="19"/><text x="36.0027%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="35.7527%" y="1573" width="0.0177%" height="15" fill="rgb(236,69,41)" fg:x="38387" fg:w="19"/><text x="36.0027%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="35.7527%" y="1557" width="0.0177%" height="15" fill="rgb(212,160,3)" fg:x="38387" fg:w="19"/><text x="36.0027%" y="1567.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="35.7574%" y="1541" width="0.0130%" height="15" fill="rgb(216,5,50)" fg:x="38392" fg:w="14"/><text x="36.0074%" y="1551.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (17 samples, 0.02%)</title><rect x="35.7704%" y="1669" width="0.0158%" height="15" fill="rgb(241,138,25)" fg:x="38406" fg:w="17"/><text x="36.0204%" y="1679.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::access_path (20 samples, 0.02%)</title><rect x="35.7863%" y="1669" width="0.0186%" height="15" fill="rgb(239,42,18)" fg:x="38423" fg:w="20"/><text x="36.0363%" y="1679.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::new (14 samples, 0.01%)</title><rect x="35.7919%" y="1653" width="0.0130%" height="15" fill="rgb(239,40,7)" fg:x="38429" fg:w="14"/><text x="36.0419%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="35.8058%" y="1621" width="0.0177%" height="15" fill="rgb(239,11,31)" fg:x="38444" fg:w="19"/><text x="36.0558%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="35.8058%" y="1605" width="0.0177%" height="15" fill="rgb(224,77,40)" fg:x="38444" fg:w="19"/><text x="36.0558%" y="1615.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="35.8077%" y="1589" width="0.0158%" height="15" fill="rgb(226,15,5)" fg:x="38446" fg:w="17"/><text x="36.0577%" y="1599.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="35.8133%" y="1573" width="0.0102%" height="15" fill="rgb(254,188,5)" fg:x="38452" fg:w="11"/><text x="36.0633%" y="1583.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (58 samples, 0.05%)</title><rect x="35.7704%" y="1685" width="0.0540%" height="15" fill="rgb(241,148,52)" fg:x="38406" fg:w="58"/><text x="36.0204%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (21 samples, 0.02%)</title><rect x="35.8049%" y="1669" width="0.0196%" height="15" fill="rgb(251,48,36)" fg:x="38443" fg:w="21"/><text x="36.0549%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (21 samples, 0.02%)</title><rect x="35.8049%" y="1653" width="0.0196%" height="15" fill="rgb(243,83,13)" fg:x="38443" fg:w="21"/><text x="36.0549%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="35.8049%" y="1637" width="0.0196%" height="15" fill="rgb(210,105,0)" fg:x="38443" fg:w="21"/><text x="36.0549%" y="1647.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (288 samples, 0.27%)</title><rect x="35.5571%" y="1717" width="0.2682%" height="15" fill="rgb(239,60,36)" fg:x="38177" fg:w="288"/><text x="35.8071%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (276 samples, 0.26%)</title><rect x="35.5683%" y="1701" width="0.2571%" height="15" fill="rgb(210,20,0)" fg:x="38189" fg:w="276"/><text x="35.8183%" y="1711.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::borrow::Borrow&lt;move_core_types::identifier::IdentStr&gt;&gt;::borrow (14 samples, 0.01%)</title><rect x="35.8254%" y="1669" width="0.0130%" height="15" fill="rgb(244,26,53)" fg:x="38465" fg:w="14"/><text x="36.0754%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="35.8394%" y="1653" width="0.0177%" height="15" fill="rgb(240,100,49)" fg:x="38480" fg:w="19"/><text x="36.0894%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="35.8394%" y="1637" width="0.0177%" height="15" fill="rgb(250,46,45)" fg:x="38480" fg:w="19"/><text x="36.0894%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.02%)</title><rect x="35.8626%" y="1573" width="0.0158%" height="15" fill="rgb(220,181,29)" fg:x="38505" fg:w="17"/><text x="36.1126%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (12 samples, 0.01%)</title><rect x="35.8673%" y="1557" width="0.0112%" height="15" fill="rgb(213,137,33)" fg:x="38510" fg:w="12"/><text x="36.1173%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (54 samples, 0.05%)</title><rect x="35.8394%" y="1669" width="0.0503%" height="15" fill="rgb(213,27,48)" fg:x="38480" fg:w="54"/><text x="36.0894%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (35 samples, 0.03%)</title><rect x="35.8571%" y="1653" width="0.0326%" height="15" fill="rgb(245,180,39)" fg:x="38499" fg:w="35"/><text x="36.1071%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="35.8571%" y="1637" width="0.0326%" height="15" fill="rgb(212,158,42)" fg:x="38499" fg:w="35"/><text x="36.1071%" y="1647.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="35.8626%" y="1621" width="0.0270%" height="15" fill="rgb(228,193,18)" fg:x="38505" fg:w="29"/><text x="36.1126%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (29 samples, 0.03%)</title><rect x="35.8626%" y="1605" width="0.0270%" height="15" fill="rgb(245,172,29)" fg:x="38505" fg:w="29"/><text x="36.1126%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="35.8626%" y="1589" width="0.0270%" height="15" fill="rgb(207,98,24)" fg:x="38505" fg:w="29"/><text x="36.1126%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (12 samples, 0.01%)</title><rect x="35.8785%" y="1573" width="0.0112%" height="15" fill="rgb(249,92,26)" fg:x="38522" fg:w="12"/><text x="36.1285%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (12 samples, 0.01%)</title><rect x="35.8785%" y="1557" width="0.0112%" height="15" fill="rgb(217,176,26)" fg:x="38522" fg:w="12"/><text x="36.1285%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (12 samples, 0.01%)</title><rect x="35.8785%" y="1541" width="0.0112%" height="15" fill="rgb(221,8,39)" fg:x="38522" fg:w="12"/><text x="36.1285%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.01%)</title><rect x="35.8785%" y="1525" width="0.0112%" height="15" fill="rgb(208,90,18)" fg:x="38522" fg:w="12"/><text x="36.1285%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="35.8785%" y="1509" width="0.0112%" height="15" fill="rgb(207,202,30)" fg:x="38522" fg:w="12"/><text x="36.1285%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="35.8785%" y="1493" width="0.0112%" height="15" fill="rgb(231,124,22)" fg:x="38522" fg:w="12"/><text x="36.1285%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="35.8785%" y="1477" width="0.0112%" height="15" fill="rgb(206,15,5)" fg:x="38522" fg:w="12"/><text x="36.1285%" y="1487.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (70 samples, 0.07%)</title><rect x="35.8254%" y="1717" width="0.0652%" height="15" fill="rgb(239,16,52)" fg:x="38465" fg:w="70"/><text x="36.0754%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (70 samples, 0.07%)</title><rect x="35.8254%" y="1701" width="0.0652%" height="15" fill="rgb(245,213,29)" fg:x="38465" fg:w="70"/><text x="36.0754%" y="1711.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (70 samples, 0.07%)</title><rect x="35.8254%" y="1685" width="0.0652%" height="15" fill="rgb(213,203,36)" fg:x="38465" fg:w="70"/><text x="36.0754%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (572 samples, 0.53%)</title><rect x="35.3727%" y="1749" width="0.5327%" height="15" fill="rgb(209,55,18)" fg:x="37979" fg:w="572"/><text x="35.6227%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (560 samples, 0.52%)</title><rect x="35.3839%" y="1733" width="0.5216%" height="15" fill="rgb(207,133,49)" fg:x="37991" fg:w="560"/><text x="35.6339%" y="1743.50"></text></g><g><title>move_core_types::language_storage::StructTag::module_id (16 samples, 0.01%)</title><rect x="35.8906%" y="1717" width="0.0149%" height="15" fill="rgb(240,33,46)" fg:x="38535" fg:w="16"/><text x="36.1406%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="35.9083%" y="1749" width="0.0140%" height="15" fill="rgb(212,35,2)" fg:x="38554" fg:w="15"/><text x="36.1583%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (11 samples, 0.01%)</title><rect x="35.9381%" y="1669" width="0.0102%" height="15" fill="rgb(231,119,28)" fg:x="38586" fg:w="11"/><text x="36.1881%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (30 samples, 0.03%)</title><rect x="35.9232%" y="1717" width="0.0279%" height="15" fill="rgb(252,178,7)" fg:x="38570" fg:w="30"/><text x="36.1732%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="35.9353%" y="1701" width="0.0158%" height="15" fill="rgb(251,91,4)" fg:x="38583" fg:w="17"/><text x="36.1853%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="35.9353%" y="1685" width="0.0158%" height="15" fill="rgb(233,122,19)" fg:x="38583" fg:w="17"/><text x="36.1853%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (31 samples, 0.03%)</title><rect x="35.9232%" y="1749" width="0.0289%" height="15" fill="rgb(231,208,46)" fg:x="38570" fg:w="31"/><text x="36.1732%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (31 samples, 0.03%)</title><rect x="35.9232%" y="1733" width="0.0289%" height="15" fill="rgb(243,15,41)" fg:x="38570" fg:w="31"/><text x="36.1732%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (22 samples, 0.02%)</title><rect x="35.9521%" y="1749" width="0.0205%" height="15" fill="rgb(210,32,43)" fg:x="38601" fg:w="22"/><text x="36.2021%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19 samples, 0.02%)</title><rect x="35.9548%" y="1733" width="0.0177%" height="15" fill="rgb(222,177,15)" fg:x="38604" fg:w="19"/><text x="36.2048%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.01%)</title><rect x="35.9576%" y="1717" width="0.0149%" height="15" fill="rgb(244,121,34)" fg:x="38607" fg:w="16"/><text x="36.2076%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.01%)</title><rect x="35.9576%" y="1701" width="0.0149%" height="15" fill="rgb(234,138,4)" fg:x="38607" fg:w="16"/><text x="36.2076%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (14 samples, 0.01%)</title><rect x="35.9847%" y="1733" width="0.0130%" height="15" fill="rgb(240,97,48)" fg:x="38636" fg:w="14"/><text x="36.2347%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (167 samples, 0.16%)</title><rect x="35.9725%" y="1749" width="0.1555%" height="15" fill="rgb(237,65,54)" fg:x="38623" fg:w="167"/><text x="36.2225%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (140 samples, 0.13%)</title><rect x="35.9977%" y="1733" width="0.1304%" height="15" fill="rgb(214,25,24)" fg:x="38650" fg:w="140"/><text x="36.2477%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (98 samples, 0.09%)</title><rect x="36.0368%" y="1717" width="0.0913%" height="15" fill="rgb(213,5,3)" fg:x="38692" fg:w="98"/><text x="36.2868%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (98 samples, 0.09%)</title><rect x="36.0368%" y="1701" width="0.0913%" height="15" fill="rgb(219,81,29)" fg:x="38692" fg:w="98"/><text x="36.2868%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (98 samples, 0.09%)</title><rect x="36.0368%" y="1685" width="0.0913%" height="15" fill="rgb(220,43,48)" fg:x="38692" fg:w="98"/><text x="36.2868%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (98 samples, 0.09%)</title><rect x="36.0368%" y="1669" width="0.0913%" height="15" fill="rgb(239,157,2)" fg:x="38692" fg:w="98"/><text x="36.2868%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.09%)</title><rect x="36.0368%" y="1653" width="0.0913%" height="15" fill="rgb(213,104,43)" fg:x="38692" fg:w="98"/><text x="36.2868%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.09%)</title><rect x="36.0368%" y="1637" width="0.0913%" height="15" fill="rgb(237,84,9)" fg:x="38692" fg:w="98"/><text x="36.2868%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.09%)</title><rect x="36.0368%" y="1621" width="0.0913%" height="15" fill="rgb(252,6,33)" fg:x="38692" fg:w="98"/><text x="36.2868%" y="1631.50"></text></g><g><title>malloc (96 samples, 0.09%)</title><rect x="36.0387%" y="1605" width="0.0894%" height="15" fill="rgb(251,172,22)" fg:x="38694" fg:w="96"/><text x="36.2887%" y="1615.50"></text></g><g><title>[libc.so.6] (81 samples, 0.08%)</title><rect x="36.0526%" y="1589" width="0.0754%" height="15" fill="rgb(244,91,53)" fg:x="38709" fg:w="81"/><text x="36.3026%" y="1599.50"></text></g><g><title>[libc.so.6] (45 samples, 0.04%)</title><rect x="36.0862%" y="1573" width="0.0419%" height="15" fill="rgb(219,29,30)" fg:x="38745" fg:w="45"/><text x="36.3362%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (46 samples, 0.04%)</title><rect x="36.1365%" y="1749" width="0.0428%" height="15" fill="rgb(213,3,15)" fg:x="38799" fg:w="46"/><text x="36.3865%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (36 samples, 0.03%)</title><rect x="36.1458%" y="1733" width="0.0335%" height="15" fill="rgb(208,25,28)" fg:x="38809" fg:w="36"/><text x="36.3958%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (29 samples, 0.03%)</title><rect x="36.1523%" y="1717" width="0.0270%" height="15" fill="rgb(252,144,25)" fg:x="38816" fg:w="29"/><text x="36.4023%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (29 samples, 0.03%)</title><rect x="36.1523%" y="1701" width="0.0270%" height="15" fill="rgb(226,220,25)" fg:x="38816" fg:w="29"/><text x="36.4023%" y="1711.50"></text></g><g><title>alloc::alloc::box_free (29 samples, 0.03%)</title><rect x="36.1523%" y="1685" width="0.0270%" height="15" fill="rgb(212,131,28)" fg:x="38816" fg:w="29"/><text x="36.4023%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.03%)</title><rect x="36.1523%" y="1669" width="0.0270%" height="15" fill="rgb(219,143,52)" fg:x="38816" fg:w="29"/><text x="36.4023%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.03%)</title><rect x="36.1532%" y="1653" width="0.0261%" height="15" fill="rgb(215,56,7)" fg:x="38817" fg:w="28"/><text x="36.4032%" y="1663.50"></text></g><g><title>cfree (25 samples, 0.02%)</title><rect x="36.1560%" y="1637" width="0.0233%" height="15" fill="rgb(239,59,51)" fg:x="38820" fg:w="25"/><text x="36.4060%" y="1647.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="36.1653%" y="1621" width="0.0140%" height="15" fill="rgb(209,215,4)" fg:x="38830" fg:w="15"/><text x="36.4153%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (13 samples, 0.01%)</title><rect x="36.1840%" y="1749" width="0.0121%" height="15" fill="rgb(221,118,39)" fg:x="38850" fg:w="13"/><text x="36.4340%" y="1759.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource::{{closure}} (15 samples, 0.01%)</title><rect x="36.2017%" y="1733" width="0.0140%" height="15" fill="rgb(236,6,44)" fg:x="38869" fg:w="15"/><text x="36.4517%" y="1743.50"></text></g><g><title>move_vm_runtime::data_cache::AccountDataCache::new (14 samples, 0.01%)</title><rect x="36.2026%" y="1717" width="0.0130%" height="15" fill="rgb(216,122,9)" fg:x="38870" fg:w="14"/><text x="36.4526%" y="1727.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="36.2212%" y="1573" width="0.0158%" height="15" fill="rgb(244,134,42)" fg:x="38890" fg:w="17"/><text x="36.4712%" y="1583.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (20 samples, 0.02%)</title><rect x="36.2203%" y="1653" width="0.0186%" height="15" fill="rgb(209,189,35)" fg:x="38889" fg:w="20"/><text x="36.4703%" y="1663.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (20 samples, 0.02%)</title><rect x="36.2203%" y="1637" width="0.0186%" height="15" fill="rgb(250,47,36)" fg:x="38889" fg:w="20"/><text x="36.4703%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (20 samples, 0.02%)</title><rect x="36.2203%" y="1621" width="0.0186%" height="15" fill="rgb(252,112,4)" fg:x="38889" fg:w="20"/><text x="36.4703%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (20 samples, 0.02%)</title><rect x="36.2203%" y="1605" width="0.0186%" height="15" fill="rgb(221,79,51)" fg:x="38889" fg:w="20"/><text x="36.4703%" y="1615.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.02%)</title><rect x="36.2203%" y="1589" width="0.0186%" height="15" fill="rgb(232,65,53)" fg:x="38889" fg:w="20"/><text x="36.4703%" y="1599.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.03%)</title><rect x="36.2166%" y="1701" width="0.0251%" height="15" fill="rgb(211,37,7)" fg:x="38885" fg:w="27"/><text x="36.4666%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (27 samples, 0.03%)</title><rect x="36.2166%" y="1685" width="0.0251%" height="15" fill="rgb(234,221,18)" fg:x="38885" fg:w="27"/><text x="36.4666%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (27 samples, 0.03%)</title><rect x="36.2166%" y="1669" width="0.0251%" height="15" fill="rgb(220,158,26)" fg:x="38885" fg:w="27"/><text x="36.4666%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (29 samples, 0.03%)</title><rect x="36.2156%" y="1733" width="0.0270%" height="15" fill="rgb(220,70,6)" fg:x="38884" fg:w="29"/><text x="36.4656%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (29 samples, 0.03%)</title><rect x="36.2156%" y="1717" width="0.0270%" height="15" fill="rgb(250,39,48)" fg:x="38884" fg:w="29"/><text x="36.4656%" y="1727.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="36.2445%" y="1589" width="0.0112%" height="15" fill="rgb(206,40,27)" fg:x="38915" fg:w="12"/><text x="36.4945%" y="1599.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (28 samples, 0.03%)</title><rect x="36.2426%" y="1733" width="0.0261%" height="15" fill="rgb(247,80,36)" fg:x="38913" fg:w="28"/><text x="36.4926%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.03%)</title><rect x="36.2436%" y="1717" width="0.0251%" height="15" fill="rgb(222,9,20)" fg:x="38914" fg:w="27"/><text x="36.4936%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (27 samples, 0.03%)</title><rect x="36.2436%" y="1701" width="0.0251%" height="15" fill="rgb(217,26,45)" fg:x="38914" fg:w="27"/><text x="36.4936%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (27 samples, 0.03%)</title><rect x="36.2436%" y="1685" width="0.0251%" height="15" fill="rgb(221,67,14)" fg:x="38914" fg:w="27"/><text x="36.4936%" y="1695.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (26 samples, 0.02%)</title><rect x="36.2445%" y="1669" width="0.0242%" height="15" fill="rgb(248,100,24)" fg:x="38915" fg:w="26"/><text x="36.4945%" y="1679.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (26 samples, 0.02%)</title><rect x="36.2445%" y="1653" width="0.0242%" height="15" fill="rgb(230,187,16)" fg:x="38915" fg:w="26"/><text x="36.4945%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (26 samples, 0.02%)</title><rect x="36.2445%" y="1637" width="0.0242%" height="15" fill="rgb(205,108,13)" fg:x="38915" fg:w="26"/><text x="36.4945%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (26 samples, 0.02%)</title><rect x="36.2445%" y="1621" width="0.0242%" height="15" fill="rgb(235,71,51)" fg:x="38915" fg:w="26"/><text x="36.4945%" y="1631.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (26 samples, 0.02%)</title><rect x="36.2445%" y="1605" width="0.0242%" height="15" fill="rgb(251,172,48)" fg:x="38915" fg:w="26"/><text x="36.4945%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (14 samples, 0.01%)</title><rect x="36.2557%" y="1589" width="0.0130%" height="15" fill="rgb(240,96,49)" fg:x="38927" fg:w="14"/><text x="36.5057%" y="1599.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (115 samples, 0.11%)</title><rect x="36.1961%" y="1749" width="0.1071%" height="15" fill="rgb(235,46,36)" fg:x="38863" fg:w="115"/><text x="36.4461%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (37 samples, 0.03%)</title><rect x="36.2687%" y="1733" width="0.0345%" height="15" fill="rgb(244,3,49)" fg:x="38941" fg:w="37"/><text x="36.5187%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (34 samples, 0.03%)</title><rect x="36.2715%" y="1717" width="0.0317%" height="15" fill="rgb(206,78,54)" fg:x="38944" fg:w="34"/><text x="36.5215%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (20 samples, 0.02%)</title><rect x="36.2846%" y="1701" width="0.0186%" height="15" fill="rgb(208,85,42)" fg:x="38958" fg:w="20"/><text x="36.5346%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (20 samples, 0.02%)</title><rect x="36.2846%" y="1685" width="0.0186%" height="15" fill="rgb(219,196,21)" fg:x="38958" fg:w="20"/><text x="36.5346%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (20 samples, 0.02%)</title><rect x="36.2846%" y="1669" width="0.0186%" height="15" fill="rgb(238,19,9)" fg:x="38958" fg:w="20"/><text x="36.5346%" y="1679.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.02%)</title><rect x="36.2846%" y="1653" width="0.0186%" height="15" fill="rgb(206,86,13)" fg:x="38958" fg:w="20"/><text x="36.5346%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="36.2846%" y="1637" width="0.0186%" height="15" fill="rgb(214,123,40)" fg:x="38958" fg:w="20"/><text x="36.5346%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="36.2846%" y="1621" width="0.0186%" height="15" fill="rgb(243,53,5)" fg:x="38958" fg:w="20"/><text x="36.5346%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="36.2846%" y="1605" width="0.0186%" height="15" fill="rgb(254,186,31)" fg:x="38958" fg:w="20"/><text x="36.5346%" y="1615.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="36.2929%" y="1589" width="0.0102%" height="15" fill="rgb(221,216,25)" fg:x="38967" fg:w="11"/><text x="36.5429%" y="1599.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="36.3330%" y="1701" width="0.0224%" height="15" fill="rgb(248,107,42)" fg:x="39010" fg:w="24"/><text x="36.5830%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="36.3358%" y="1685" width="0.0196%" height="15" fill="rgb(221,85,43)" fg:x="39013" fg:w="21"/><text x="36.5858%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="36.3386%" y="1669" width="0.0168%" height="15" fill="rgb(225,34,24)" fg:x="39016" fg:w="18"/><text x="36.5886%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="36.3386%" y="1653" width="0.0168%" height="15" fill="rgb(211,119,1)" fg:x="39016" fg:w="18"/><text x="36.5886%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="36.3386%" y="1637" width="0.0168%" height="15" fill="rgb(254,216,46)" fg:x="39016" fg:w="18"/><text x="36.5886%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.01%)</title><rect x="36.3609%" y="1621" width="0.0140%" height="15" fill="rgb(238,11,38)" fg:x="39040" fg:w="15"/><text x="36.6109%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.01%)</title><rect x="36.3609%" y="1605" width="0.0140%" height="15" fill="rgb(233,50,15)" fg:x="39040" fg:w="15"/><text x="36.6109%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.01%)</title><rect x="36.3609%" y="1589" width="0.0140%" height="15" fill="rgb(217,181,29)" fg:x="39040" fg:w="15"/><text x="36.6109%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.02%)</title><rect x="36.3600%" y="1653" width="0.0233%" height="15" fill="rgb(214,56,3)" fg:x="39039" fg:w="25"/><text x="36.6100%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.02%)</title><rect x="36.3609%" y="1637" width="0.0224%" height="15" fill="rgb(230,69,45)" fg:x="39040" fg:w="24"/><text x="36.6109%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (95 samples, 0.09%)</title><rect x="36.3032%" y="1749" width="0.0885%" height="15" fill="rgb(224,201,50)" fg:x="38978" fg:w="95"/><text x="36.5532%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (90 samples, 0.08%)</title><rect x="36.3078%" y="1733" width="0.0838%" height="15" fill="rgb(217,228,18)" fg:x="38983" fg:w="90"/><text x="36.5578%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (77 samples, 0.07%)</title><rect x="36.3199%" y="1717" width="0.0717%" height="15" fill="rgb(239,33,44)" fg:x="38996" fg:w="77"/><text x="36.5699%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (35 samples, 0.03%)</title><rect x="36.3591%" y="1701" width="0.0326%" height="15" fill="rgb(248,210,23)" fg:x="39038" fg:w="35"/><text x="36.6091%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (35 samples, 0.03%)</title><rect x="36.3591%" y="1685" width="0.0326%" height="15" fill="rgb(253,135,8)" fg:x="39038" fg:w="35"/><text x="36.6091%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.03%)</title><rect x="36.3591%" y="1669" width="0.0326%" height="15" fill="rgb(217,98,21)" fg:x="39038" fg:w="35"/><text x="36.6091%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="36.4271%" y="1701" width="0.0335%" height="15" fill="rgb(253,130,21)" fg:x="39111" fg:w="36"/><text x="36.6771%" y="1711.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="36.4364%" y="1685" width="0.0242%" height="15" fill="rgb(207,81,54)" fg:x="39121" fg:w="26"/><text x="36.6864%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="36.4364%" y="1669" width="0.0242%" height="15" fill="rgb(232,48,33)" fg:x="39121" fg:w="26"/><text x="36.6864%" y="1679.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.02%)</title><rect x="36.4364%" y="1653" width="0.0242%" height="15" fill="rgb(211,9,35)" fg:x="39121" fg:w="26"/><text x="36.6864%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (26 samples, 0.02%)</title><rect x="36.4364%" y="1637" width="0.0242%" height="15" fill="rgb(205,152,21)" fg:x="39121" fg:w="26"/><text x="36.6864%" y="1647.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="36.4448%" y="1621" width="0.0158%" height="15" fill="rgb(249,21,27)" fg:x="39130" fg:w="17"/><text x="36.6948%" y="1631.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="36.4457%" y="1605" width="0.0149%" height="15" fill="rgb(252,29,24)" fg:x="39131" fg:w="16"/><text x="36.6957%" y="1615.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.02%)</title><rect x="36.4755%" y="1653" width="0.0196%" height="15" fill="rgb(230,130,50)" fg:x="39163" fg:w="21"/><text x="36.7255%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.02%)</title><rect x="36.4755%" y="1637" width="0.0196%" height="15" fill="rgb(239,144,14)" fg:x="39163" fg:w="21"/><text x="36.7255%" y="1647.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.01%)</title><rect x="36.5072%" y="1589" width="0.0102%" height="15" fill="rgb(227,111,50)" fg:x="39197" fg:w="11"/><text x="36.7572%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.01%)</title><rect x="36.5072%" y="1573" width="0.0102%" height="15" fill="rgb(254,84,20)" fg:x="39197" fg:w="11"/><text x="36.7572%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.01%)</title><rect x="36.5072%" y="1557" width="0.0102%" height="15" fill="rgb(232,90,48)" fg:x="39197" fg:w="11"/><text x="36.7572%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.01%)</title><rect x="36.5072%" y="1605" width="0.0130%" height="15" fill="rgb(253,63,47)" fg:x="39197" fg:w="14"/><text x="36.7572%" y="1615.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (15 samples, 0.01%)</title><rect x="36.5221%" y="1605" width="0.0140%" height="15" fill="rgb(251,146,35)" fg:x="39213" fg:w="15"/><text x="36.7721%" y="1615.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.01%)</title><rect x="36.5221%" y="1589" width="0.0140%" height="15" fill="rgb(229,192,35)" fg:x="39213" fg:w="15"/><text x="36.7721%" y="1599.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="36.5221%" y="1573" width="0.0140%" height="15" fill="rgb(225,68,9)" fg:x="39213" fg:w="15"/><text x="36.7721%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (164 samples, 0.15%)</title><rect x="36.3917%" y="1749" width="0.1527%" height="15" fill="rgb(214,97,34)" fg:x="39073" fg:w="164"/><text x="36.6417%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (161 samples, 0.15%)</title><rect x="36.3945%" y="1733" width="0.1500%" height="15" fill="rgb(253,31,26)" fg:x="39076" fg:w="161"/><text x="36.6445%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (130 samples, 0.12%)</title><rect x="36.4233%" y="1717" width="0.1211%" height="15" fill="rgb(225,151,47)" fg:x="39107" fg:w="130"/><text x="36.6733%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (81 samples, 0.08%)</title><rect x="36.4690%" y="1701" width="0.0754%" height="15" fill="rgb(206,185,9)" fg:x="39156" fg:w="81"/><text x="36.7190%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (81 samples, 0.08%)</title><rect x="36.4690%" y="1685" width="0.0754%" height="15" fill="rgb(249,65,17)" fg:x="39156" fg:w="81"/><text x="36.7190%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (81 samples, 0.08%)</title><rect x="36.4690%" y="1669" width="0.0754%" height="15" fill="rgb(220,110,10)" fg:x="39156" fg:w="81"/><text x="36.7190%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 0.05%)</title><rect x="36.4950%" y="1653" width="0.0494%" height="15" fill="rgb(222,198,49)" fg:x="39184" fg:w="53"/><text x="36.7450%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.05%)</title><rect x="36.4950%" y="1637" width="0.0494%" height="15" fill="rgb(239,81,13)" fg:x="39184" fg:w="53"/><text x="36.7450%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (53 samples, 0.05%)</title><rect x="36.4950%" y="1621" width="0.0494%" height="15" fill="rgb(216,128,11)" fg:x="39184" fg:w="53"/><text x="36.7450%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (25 samples, 0.02%)</title><rect x="36.5444%" y="1749" width="0.0233%" height="15" fill="rgb(247,156,8)" fg:x="39237" fg:w="25"/><text x="36.7944%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::cached (11 samples, 0.01%)</title><rect x="36.5574%" y="1733" width="0.0102%" height="15" fill="rgb(219,173,1)" fg:x="39251" fg:w="11"/><text x="36.8074%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.02%)</title><rect x="36.6003%" y="1637" width="0.0177%" height="15" fill="rgb(227,42,24)" fg:x="39297" fg:w="19"/><text x="36.8503%" y="1647.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (21 samples, 0.02%)</title><rect x="36.6003%" y="1653" width="0.0196%" height="15" fill="rgb(253,219,50)" fg:x="39297" fg:w="21"/><text x="36.8503%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (40 samples, 0.04%)</title><rect x="36.5966%" y="1669" width="0.0373%" height="15" fill="rgb(215,191,54)" fg:x="39293" fg:w="40"/><text x="36.8466%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="36.6226%" y="1653" width="0.0112%" height="15" fill="rgb(238,83,12)" fg:x="39321" fg:w="12"/><text x="36.8726%" y="1663.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (43 samples, 0.04%)</title><rect x="36.5966%" y="1685" width="0.0400%" height="15" fill="rgb(205,124,9)" fg:x="39293" fg:w="43"/><text x="36.8466%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (76 samples, 0.07%)</title><rect x="36.5928%" y="1701" width="0.0708%" height="15" fill="rgb(253,174,7)" fg:x="39289" fg:w="76"/><text x="36.8428%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (24 samples, 0.02%)</title><rect x="36.6413%" y="1685" width="0.0224%" height="15" fill="rgb(206,134,49)" fg:x="39341" fg:w="24"/><text x="36.8913%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.02%)</title><rect x="36.6413%" y="1669" width="0.0224%" height="15" fill="rgb(221,89,20)" fg:x="39341" fg:w="24"/><text x="36.8913%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="36.6413%" y="1653" width="0.0224%" height="15" fill="rgb(240,205,13)" fg:x="39341" fg:w="24"/><text x="36.8913%" y="1663.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="36.6413%" y="1637" width="0.0224%" height="15" fill="rgb(237,174,32)" fg:x="39341" fg:w="24"/><text x="36.8913%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (99 samples, 0.09%)</title><rect x="36.5919%" y="1717" width="0.0922%" height="15" fill="rgb(226,12,15)" fg:x="39288" fg:w="99"/><text x="36.8419%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (22 samples, 0.02%)</title><rect x="36.6636%" y="1701" width="0.0205%" height="15" fill="rgb(245,160,52)" fg:x="39365" fg:w="22"/><text x="36.9136%" y="1711.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="36.6636%" y="1685" width="0.0205%" height="15" fill="rgb(253,80,21)" fg:x="39365" fg:w="22"/><text x="36.9136%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="36.6673%" y="1669" width="0.0168%" height="15" fill="rgb(231,225,22)" fg:x="39369" fg:w="18"/><text x="36.9173%" y="1679.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.02%)</title><rect x="36.6673%" y="1653" width="0.0168%" height="15" fill="rgb(253,185,12)" fg:x="39369" fg:w="18"/><text x="36.9173%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="36.6683%" y="1637" width="0.0158%" height="15" fill="rgb(234,197,21)" fg:x="39370" fg:w="17"/><text x="36.9183%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="36.6683%" y="1621" width="0.0158%" height="15" fill="rgb(210,47,30)" fg:x="39370" fg:w="17"/><text x="36.9183%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="36.6683%" y="1605" width="0.0158%" height="15" fill="rgb(246,139,27)" fg:x="39370" fg:w="17"/><text x="36.9183%" y="1615.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="36.6711%" y="1589" width="0.0130%" height="15" fill="rgb(226,130,16)" fg:x="39373" fg:w="14"/><text x="36.9211%" y="1599.50"></text></g><g><title>bcs::de::from_bytes_seed (126 samples, 0.12%)</title><rect x="36.5714%" y="1733" width="0.1174%" height="15" fill="rgb(237,208,20)" fg:x="39266" fg:w="126"/><text x="36.8214%" y="1743.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,440 samples, 1.34%)</title><rect x="35.3504%" y="1765" width="1.3412%" height="15" fill="rgb(245,186,28)" fg:x="37955" fg:w="1440"/><text x="35.6004%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (133 samples, 0.12%)</title><rect x="36.5677%" y="1749" width="0.1239%" height="15" fill="rgb(238,105,39)" fg:x="39262" fg:w="133"/><text x="36.8177%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,478 samples, 1.38%)</title><rect x="35.3299%" y="1781" width="1.3766%" height="15" fill="rgb(253,228,11)" fg:x="37933" fg:w="1478"/><text x="35.5799%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::view (14 samples, 0.01%)</title><rect x="36.6934%" y="1765" width="0.0130%" height="15" fill="rgb(224,136,38)" fg:x="39397" fg:w="14"/><text x="36.9434%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (16 samples, 0.01%)</title><rect x="36.7065%" y="1781" width="0.0149%" height="15" fill="rgb(211,3,25)" fg:x="39411" fg:w="16"/><text x="36.9565%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (1,546 samples, 1.44%)</title><rect x="35.3075%" y="1797" width="1.4399%" height="15" fill="rgb(238,66,34)" fg:x="37909" fg:w="1546"/><text x="35.5575%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (28 samples, 0.03%)</title><rect x="36.7214%" y="1781" width="0.0261%" height="15" fill="rgb(223,188,11)" fg:x="39427" fg:w="28"/><text x="36.9714%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::borrow_global (13 samples, 0.01%)</title><rect x="36.7353%" y="1765" width="0.0121%" height="15" fill="rgb(221,10,35)" fg:x="39442" fg:w="13"/><text x="36.9853%" y="1775.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (13 samples, 0.01%)</title><rect x="36.8341%" y="1637" width="0.0121%" height="15" fill="rgb(223,18,44)" fg:x="39548" fg:w="13"/><text x="37.0841%" y="1647.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (25 samples, 0.02%)</title><rect x="36.8275%" y="1669" width="0.0233%" height="15" fill="rgb(220,97,41)" fg:x="39541" fg:w="25"/><text x="37.0775%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (25 samples, 0.02%)</title><rect x="36.8275%" y="1653" width="0.0233%" height="15" fill="rgb(206,95,45)" fg:x="39541" fg:w="25"/><text x="37.0775%" y="1663.50"></text></g><g><title>bcs::de::from_bytes (42 samples, 0.04%)</title><rect x="36.8182%" y="1685" width="0.0391%" height="15" fill="rgb(209,96,13)" fg:x="39531" fg:w="42"/><text x="37.0682%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.03%)</title><rect x="36.8639%" y="1621" width="0.0345%" height="15" fill="rgb(237,39,34)" fg:x="39580" fg:w="37"/><text x="37.1139%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.03%)</title><rect x="36.8639%" y="1605" width="0.0345%" height="15" fill="rgb(213,49,47)" fg:x="39580" fg:w="37"/><text x="37.1139%" y="1615.50"></text></g><g><title>cfree (36 samples, 0.03%)</title><rect x="36.8648%" y="1589" width="0.0335%" height="15" fill="rgb(205,107,27)" fg:x="39581" fg:w="36"/><text x="37.1148%" y="1599.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="36.8732%" y="1573" width="0.0251%" height="15" fill="rgb(212,142,9)" fg:x="39590" fg:w="27"/><text x="37.1232%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::metadata::Metadata&gt; (39 samples, 0.04%)</title><rect x="36.8639%" y="1685" width="0.0363%" height="15" fill="rgb(226,182,0)" fg:x="39580" fg:w="39"/><text x="37.1139%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (39 samples, 0.04%)</title><rect x="36.8639%" y="1669" width="0.0363%" height="15" fill="rgb(231,3,53)" fg:x="39580" fg:w="39"/><text x="37.1139%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (39 samples, 0.04%)</title><rect x="36.8639%" y="1653" width="0.0363%" height="15" fill="rgb(246,111,28)" fg:x="39580" fg:w="39"/><text x="37.1139%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="36.8639%" y="1637" width="0.0363%" height="15" fill="rgb(254,183,7)" fg:x="39580" fg:w="39"/><text x="37.1139%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (136 samples, 0.13%)</title><rect x="36.9095%" y="1557" width="0.1267%" height="15" fill="rgb(247,177,28)" fg:x="39629" fg:w="136"/><text x="37.1595%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (136 samples, 0.13%)</title><rect x="36.9095%" y="1541" width="0.1267%" height="15" fill="rgb(244,43,1)" fg:x="39629" fg:w="136"/><text x="37.1595%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (136 samples, 0.13%)</title><rect x="36.9095%" y="1525" width="0.1267%" height="15" fill="rgb(207,2,35)" fg:x="39629" fg:w="136"/><text x="37.1595%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (134 samples, 0.12%)</title><rect x="36.9114%" y="1509" width="0.1248%" height="15" fill="rgb(213,83,22)" fg:x="39631" fg:w="134"/><text x="37.1614%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (134 samples, 0.12%)</title><rect x="36.9114%" y="1493" width="0.1248%" height="15" fill="rgb(246,212,13)" fg:x="39631" fg:w="134"/><text x="37.1614%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (134 samples, 0.12%)</title><rect x="36.9114%" y="1477" width="0.1248%" height="15" fill="rgb(213,127,46)" fg:x="39631" fg:w="134"/><text x="37.1614%" y="1487.50"></text></g><g><title>malloc (134 samples, 0.12%)</title><rect x="36.9114%" y="1461" width="0.1248%" height="15" fill="rgb(219,215,39)" fg:x="39631" fg:w="134"/><text x="37.1614%" y="1471.50"></text></g><g><title>[libc.so.6] (118 samples, 0.11%)</title><rect x="36.9263%" y="1445" width="0.1099%" height="15" fill="rgb(227,99,17)" fg:x="39647" fg:w="118"/><text x="37.1763%" y="1455.50"></text></g><g><title>[libc.so.6] (66 samples, 0.06%)</title><rect x="36.9747%" y="1429" width="0.0615%" height="15" fill="rgb(208,155,18)" fg:x="39699" fg:w="66"/><text x="37.2247%" y="1439.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (275 samples, 0.26%)</title><rect x="36.9039%" y="1653" width="0.2561%" height="15" fill="rgb(223,204,38)" fg:x="39623" fg:w="275"/><text x="37.1539%" y="1663.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (273 samples, 0.25%)</title><rect x="36.9058%" y="1637" width="0.2543%" height="15" fill="rgb(212,114,21)" fg:x="39625" fg:w="273"/><text x="37.1558%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (271 samples, 0.25%)</title><rect x="36.9076%" y="1621" width="0.2524%" height="15" fill="rgb(250,74,13)" fg:x="39627" fg:w="271"/><text x="37.1576%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (269 samples, 0.25%)</title><rect x="36.9095%" y="1605" width="0.2505%" height="15" fill="rgb(234,7,1)" fg:x="39629" fg:w="269"/><text x="37.1595%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (269 samples, 0.25%)</title><rect x="36.9095%" y="1589" width="0.2505%" height="15" fill="rgb(207,138,31)" fg:x="39629" fg:w="269"/><text x="37.1595%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (269 samples, 0.25%)</title><rect x="36.9095%" y="1573" width="0.2505%" height="15" fill="rgb(215,186,42)" fg:x="39629" fg:w="269"/><text x="37.1595%" y="1583.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (133 samples, 0.12%)</title><rect x="37.0362%" y="1557" width="0.1239%" height="15" fill="rgb(229,205,49)" fg:x="39765" fg:w="133"/><text x="37.2862%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (133 samples, 0.12%)</title><rect x="37.0362%" y="1541" width="0.1239%" height="15" fill="rgb(216,156,32)" fg:x="39765" fg:w="133"/><text x="37.2862%" y="1551.50"></text></g><g><title>[libc.so.6] (133 samples, 0.12%)</title><rect x="37.0362%" y="1525" width="0.1239%" height="15" fill="rgb(238,7,21)" fg:x="39765" fg:w="133"/><text x="37.2862%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (36 samples, 0.03%)</title><rect x="37.1600%" y="1653" width="0.0335%" height="15" fill="rgb(249,190,22)" fg:x="39898" fg:w="36"/><text x="37.4100%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (36 samples, 0.03%)</title><rect x="37.1600%" y="1637" width="0.0335%" height="15" fill="rgb(253,51,31)" fg:x="39898" fg:w="36"/><text x="37.4100%" y="1647.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (31 samples, 0.03%)</title><rect x="37.1647%" y="1621" width="0.0289%" height="15" fill="rgb(237,90,54)" fg:x="39903" fg:w="31"/><text x="37.4147%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (25 samples, 0.02%)</title><rect x="37.1703%" y="1605" width="0.0233%" height="15" fill="rgb(250,214,33)" fg:x="39909" fg:w="25"/><text x="37.4203%" y="1615.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (25 samples, 0.02%)</title><rect x="37.1703%" y="1589" width="0.0233%" height="15" fill="rgb(237,10,49)" fg:x="39909" fg:w="25"/><text x="37.4203%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25 samples, 0.02%)</title><rect x="37.1703%" y="1573" width="0.0233%" height="15" fill="rgb(241,56,36)" fg:x="39909" fg:w="25"/><text x="37.4203%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.02%)</title><rect x="37.1703%" y="1557" width="0.0233%" height="15" fill="rgb(227,164,12)" fg:x="39909" fg:w="25"/><text x="37.4203%" y="1567.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="37.1815%" y="1541" width="0.0121%" height="15" fill="rgb(249,149,35)" fg:x="39921" fg:w="13"/><text x="37.4315%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (22 samples, 0.02%)</title><rect x="37.1982%" y="1653" width="0.0205%" height="15" fill="rgb(238,227,50)" fg:x="39939" fg:w="22"/><text x="37.4482%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (22 samples, 0.02%)</title><rect x="37.1982%" y="1637" width="0.0205%" height="15" fill="rgb(235,102,45)" fg:x="39939" fg:w="22"/><text x="37.4482%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (22 samples, 0.02%)</title><rect x="37.1982%" y="1621" width="0.0205%" height="15" fill="rgb(211,10,38)" fg:x="39939" fg:w="22"/><text x="37.4482%" y="1631.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.02%)</title><rect x="37.1982%" y="1605" width="0.0205%" height="15" fill="rgb(219,77,48)" fg:x="39939" fg:w="22"/><text x="37.4482%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="37.1982%" y="1589" width="0.0205%" height="15" fill="rgb(246,6,15)" fg:x="39939" fg:w="22"/><text x="37.4482%" y="1599.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="37.1992%" y="1573" width="0.0196%" height="15" fill="rgb(207,220,2)" fg:x="39940" fg:w="21"/><text x="37.4492%" y="1583.50"></text></g><g><title>cfree (21 samples, 0.02%)</title><rect x="37.1992%" y="1557" width="0.0196%" height="15" fill="rgb(242,48,14)" fg:x="39940" fg:w="21"/><text x="37.4492%" y="1567.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="37.2038%" y="1541" width="0.0149%" height="15" fill="rgb(218,19,27)" fg:x="39945" fg:w="16"/><text x="37.4538%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="37.2234%" y="1557" width="0.0112%" height="15" fill="rgb(228,0,35)" fg:x="39966" fg:w="12"/><text x="37.4734%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="37.2234%" y="1541" width="0.0112%" height="15" fill="rgb(244,142,54)" fg:x="39966" fg:w="12"/><text x="37.4734%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="37.2234%" y="1525" width="0.0112%" height="15" fill="rgb(243,217,40)" fg:x="39966" fg:w="12"/><text x="37.4734%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="37.2374%" y="1525" width="0.0102%" height="15" fill="rgb(207,114,16)" fg:x="39981" fg:w="11"/><text x="37.4874%" y="1535.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="37.2374%" y="1509" width="0.0102%" height="15" fill="rgb(224,33,25)" fg:x="39981" fg:w="11"/><text x="37.4874%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="37.2374%" y="1493" width="0.0102%" height="15" fill="rgb(230,93,54)" fg:x="39981" fg:w="11"/><text x="37.4874%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.03%)</title><rect x="37.2224%" y="1589" width="0.0307%" height="15" fill="rgb(224,56,24)" fg:x="39965" fg:w="33"/><text x="37.4724%" y="1599.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33 samples, 0.03%)</title><rect x="37.2224%" y="1573" width="0.0307%" height="15" fill="rgb(235,189,50)" fg:x="39965" fg:w="33"/><text x="37.4724%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="37.2374%" y="1557" width="0.0158%" height="15" fill="rgb(242,173,8)" fg:x="39981" fg:w="17"/><text x="37.4874%" y="1567.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="37.2374%" y="1541" width="0.0158%" height="15" fill="rgb(209,206,10)" fg:x="39981" fg:w="17"/><text x="37.4874%" y="1551.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (513 samples, 0.48%)</title><rect x="36.7884%" y="1717" width="0.4778%" height="15" fill="rgb(213,182,44)" fg:x="39499" fg:w="513"/><text x="37.0384%" y="1727.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (509 samples, 0.47%)</title><rect x="36.7922%" y="1701" width="0.4741%" height="15" fill="rgb(243,51,15)" fg:x="39503" fg:w="509"/><text x="37.0422%" y="1711.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (393 samples, 0.37%)</title><rect x="36.9002%" y="1685" width="0.3660%" height="15" fill="rgb(241,13,14)" fg:x="39619" fg:w="393"/><text x="37.1502%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (391 samples, 0.36%)</title><rect x="36.9021%" y="1669" width="0.3642%" height="15" fill="rgb(239,147,24)" fg:x="39621" fg:w="391"/><text x="37.1521%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (47 samples, 0.04%)</title><rect x="37.2224%" y="1653" width="0.0438%" height="15" fill="rgb(223,129,16)" fg:x="39965" fg:w="47"/><text x="37.4724%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (47 samples, 0.04%)</title><rect x="37.2224%" y="1637" width="0.0438%" height="15" fill="rgb(209,169,13)" fg:x="39965" fg:w="47"/><text x="37.4724%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (47 samples, 0.04%)</title><rect x="37.2224%" y="1621" width="0.0438%" height="15" fill="rgb(235,159,41)" fg:x="39965" fg:w="47"/><text x="37.4724%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (47 samples, 0.04%)</title><rect x="37.2224%" y="1605" width="0.0438%" height="15" fill="rgb(223,219,48)" fg:x="39965" fg:w="47"/><text x="37.4724%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.01%)</title><rect x="37.2532%" y="1589" width="0.0130%" height="15" fill="rgb(236,80,13)" fg:x="39998" fg:w="14"/><text x="37.5032%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.01%)</title><rect x="37.2532%" y="1573" width="0.0130%" height="15" fill="rgb(213,5,6)" fg:x="39998" fg:w="14"/><text x="37.5032%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.01%)</title><rect x="37.2532%" y="1557" width="0.0130%" height="15" fill="rgb(205,59,21)" fg:x="39998" fg:w="14"/><text x="37.5032%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.01%)</title><rect x="37.3035%" y="1477" width="0.0112%" height="15" fill="rgb(247,137,35)" fg:x="40052" fg:w="12"/><text x="37.5535%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="37.3035%" y="1461" width="0.0112%" height="15" fill="rgb(242,208,28)" fg:x="40052" fg:w="12"/><text x="37.5535%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="37.3035%" y="1445" width="0.0112%" height="15" fill="rgb(245,62,25)" fg:x="40052" fg:w="12"/><text x="37.5535%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="37.3035%" y="1429" width="0.0112%" height="15" fill="rgb(233,99,54)" fg:x="40052" fg:w="12"/><text x="37.5535%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="37.3035%" y="1413" width="0.0112%" height="15" fill="rgb(213,10,37)" fg:x="40052" fg:w="12"/><text x="37.5535%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="37.3035%" y="1397" width="0.0112%" height="15" fill="rgb(235,143,30)" fg:x="40052" fg:w="12"/><text x="37.5535%" y="1407.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="37.3044%" y="1381" width="0.0102%" height="15" fill="rgb(250,146,33)" fg:x="40053" fg:w="11"/><text x="37.5544%" y="1391.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (24 samples, 0.02%)</title><rect x="37.2951%" y="1573" width="0.0224%" height="15" fill="rgb(226,198,42)" fg:x="40043" fg:w="24"/><text x="37.5451%" y="1583.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="37.2951%" y="1557" width="0.0224%" height="15" fill="rgb(222,55,6)" fg:x="40043" fg:w="24"/><text x="37.5451%" y="1567.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="37.3025%" y="1541" width="0.0149%" height="15" fill="rgb(213,224,31)" fg:x="40051" fg:w="16"/><text x="37.5525%" y="1551.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="37.3025%" y="1525" width="0.0149%" height="15" fill="rgb(226,103,35)" fg:x="40051" fg:w="16"/><text x="37.5525%" y="1535.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="37.3035%" y="1509" width="0.0140%" height="15" fill="rgb(205,66,45)" fg:x="40052" fg:w="15"/><text x="37.5535%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (15 samples, 0.01%)</title><rect x="37.3035%" y="1493" width="0.0140%" height="15" fill="rgb(226,51,42)" fg:x="40052" fg:w="15"/><text x="37.5535%" y="1503.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="37.2830%" y="1605" width="0.0410%" height="15" fill="rgb(206,69,1)" fg:x="40030" fg:w="44"/><text x="37.5330%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="37.2951%" y="1589" width="0.0289%" height="15" fill="rgb(213,228,47)" fg:x="40043" fg:w="31"/><text x="37.5451%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62 samples, 0.06%)</title><rect x="37.2765%" y="1669" width="0.0577%" height="15" fill="rgb(224,204,18)" fg:x="40023" fg:w="62"/><text x="37.5265%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55 samples, 0.05%)</title><rect x="37.2830%" y="1653" width="0.0512%" height="15" fill="rgb(253,187,47)" fg:x="40030" fg:w="55"/><text x="37.5330%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (55 samples, 0.05%)</title><rect x="37.2830%" y="1637" width="0.0512%" height="15" fill="rgb(232,61,2)" fg:x="40030" fg:w="55"/><text x="37.5330%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55 samples, 0.05%)</title><rect x="37.2830%" y="1621" width="0.0512%" height="15" fill="rgb(213,132,35)" fg:x="40030" fg:w="55"/><text x="37.5330%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="37.3240%" y="1605" width="0.0102%" height="15" fill="rgb(247,33,21)" fg:x="40074" fg:w="11"/><text x="37.5740%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (83 samples, 0.08%)</title><rect x="37.2737%" y="1685" width="0.0773%" height="15" fill="rgb(233,71,46)" fg:x="40020" fg:w="83"/><text x="37.5237%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="37.3342%" y="1669" width="0.0168%" height="15" fill="rgb(222,173,43)" fg:x="40085" fg:w="18"/><text x="37.5842%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="37.3342%" y="1653" width="0.0168%" height="15" fill="rgb(249,218,47)" fg:x="40085" fg:w="18"/><text x="37.5842%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="37.3370%" y="1637" width="0.0140%" height="15" fill="rgb(254,185,48)" fg:x="40088" fg:w="15"/><text x="37.5870%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (15 samples, 0.01%)</title><rect x="37.3370%" y="1621" width="0.0140%" height="15" fill="rgb(252,165,50)" fg:x="40088" fg:w="15"/><text x="37.5870%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="37.3659%" y="1429" width="0.0112%" height="15" fill="rgb(206,219,6)" fg:x="40119" fg:w="12"/><text x="37.6159%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="37.3659%" y="1493" width="0.0130%" height="15" fill="rgb(212,212,45)" fg:x="40119" fg:w="14"/><text x="37.6159%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="37.3659%" y="1477" width="0.0130%" height="15" fill="rgb(221,31,9)" fg:x="40119" fg:w="14"/><text x="37.6159%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.01%)</title><rect x="37.3659%" y="1461" width="0.0130%" height="15" fill="rgb(234,198,39)" fg:x="40119" fg:w="14"/><text x="37.6159%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="37.3659%" y="1445" width="0.0130%" height="15" fill="rgb(252,145,46)" fg:x="40119" fg:w="14"/><text x="37.6159%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (15 samples, 0.01%)</title><rect x="37.3659%" y="1605" width="0.0140%" height="15" fill="rgb(237,149,0)" fg:x="40119" fg:w="15"/><text x="37.6159%" y="1615.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (15 samples, 0.01%)</title><rect x="37.3659%" y="1589" width="0.0140%" height="15" fill="rgb(229,65,5)" fg:x="40119" fg:w="15"/><text x="37.6159%" y="1599.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (15 samples, 0.01%)</title><rect x="37.3659%" y="1573" width="0.0140%" height="15" fill="rgb(235,60,36)" fg:x="40119" fg:w="15"/><text x="37.6159%" y="1583.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.01%)</title><rect x="37.3659%" y="1557" width="0.0140%" height="15" fill="rgb(222,47,18)" fg:x="40119" fg:w="15"/><text x="37.6159%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.01%)</title><rect x="37.3659%" y="1541" width="0.0140%" height="15" fill="rgb(235,114,22)" fg:x="40119" fg:w="15"/><text x="37.6159%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.01%)</title><rect x="37.3659%" y="1525" width="0.0140%" height="15" fill="rgb(209,167,11)" fg:x="40119" fg:w="15"/><text x="37.6159%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.01%)</title><rect x="37.3659%" y="1509" width="0.0140%" height="15" fill="rgb(251,73,18)" fg:x="40119" fg:w="15"/><text x="37.6159%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="37.3892%" y="1413" width="0.0261%" height="15" fill="rgb(217,60,17)" fg:x="40144" fg:w="28"/><text x="37.6392%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="37.3901%" y="1397" width="0.0251%" height="15" fill="rgb(224,36,37)" fg:x="40145" fg:w="27"/><text x="37.6401%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="37.3994%" y="1381" width="0.0158%" height="15" fill="rgb(211,21,32)" fg:x="40155" fg:w="17"/><text x="37.6494%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="37.3994%" y="1365" width="0.0158%" height="15" fill="rgb(231,55,48)" fg:x="40155" fg:w="17"/><text x="37.6494%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="37.4031%" y="1349" width="0.0121%" height="15" fill="rgb(227,42,18)" fg:x="40159" fg:w="13"/><text x="37.6531%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (39 samples, 0.04%)</title><rect x="37.3854%" y="1525" width="0.0363%" height="15" fill="rgb(217,2,27)" fg:x="40140" fg:w="39"/><text x="37.6354%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (39 samples, 0.04%)</title><rect x="37.3854%" y="1509" width="0.0363%" height="15" fill="rgb(251,138,23)" fg:x="40140" fg:w="39"/><text x="37.6354%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (39 samples, 0.04%)</title><rect x="37.3854%" y="1493" width="0.0363%" height="15" fill="rgb(226,184,11)" fg:x="40140" fg:w="39"/><text x="37.6354%" y="1503.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (39 samples, 0.04%)</title><rect x="37.3854%" y="1477" width="0.0363%" height="15" fill="rgb(242,142,12)" fg:x="40140" fg:w="39"/><text x="37.6354%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (39 samples, 0.04%)</title><rect x="37.3854%" y="1461" width="0.0363%" height="15" fill="rgb(234,187,18)" fg:x="40140" fg:w="39"/><text x="37.6354%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (39 samples, 0.04%)</title><rect x="37.3854%" y="1445" width="0.0363%" height="15" fill="rgb(237,44,42)" fg:x="40140" fg:w="39"/><text x="37.6354%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (39 samples, 0.04%)</title><rect x="37.3854%" y="1429" width="0.0363%" height="15" fill="rgb(211,90,23)" fg:x="40140" fg:w="39"/><text x="37.6354%" y="1439.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (41 samples, 0.04%)</title><rect x="37.3854%" y="1573" width="0.0382%" height="15" fill="rgb(207,81,18)" fg:x="40140" fg:w="41"/><text x="37.6354%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (41 samples, 0.04%)</title><rect x="37.3854%" y="1557" width="0.0382%" height="15" fill="rgb(222,107,28)" fg:x="40140" fg:w="41"/><text x="37.6354%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (41 samples, 0.04%)</title><rect x="37.3854%" y="1541" width="0.0382%" height="15" fill="rgb(237,83,52)" fg:x="40140" fg:w="41"/><text x="37.6354%" y="1551.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (30 samples, 0.03%)</title><rect x="37.4236%" y="1573" width="0.0279%" height="15" fill="rgb(208,67,11)" fg:x="40181" fg:w="30"/><text x="37.6736%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 0.03%)</title><rect x="37.4246%" y="1557" width="0.0270%" height="15" fill="rgb(249,157,49)" fg:x="40182" fg:w="29"/><text x="37.6746%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (17 samples, 0.02%)</title><rect x="37.4357%" y="1541" width="0.0158%" height="15" fill="rgb(243,200,1)" fg:x="40194" fg:w="17"/><text x="37.6857%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (17 samples, 0.02%)</title><rect x="37.4357%" y="1525" width="0.0158%" height="15" fill="rgb(225,162,37)" fg:x="40194" fg:w="17"/><text x="37.6857%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (17 samples, 0.02%)</title><rect x="37.4357%" y="1509" width="0.0158%" height="15" fill="rgb(242,92,13)" fg:x="40194" fg:w="17"/><text x="37.6857%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (17 samples, 0.02%)</title><rect x="37.4357%" y="1493" width="0.0158%" height="15" fill="rgb(220,43,36)" fg:x="40194" fg:w="17"/><text x="37.6857%" y="1503.50"></text></g><g><title>bcs::ser::to_bytes (120 samples, 0.11%)</title><rect x="37.3640%" y="1653" width="0.1118%" height="15" fill="rgb(213,165,48)" fg:x="40117" fg:w="120"/><text x="37.6140%" y="1663.50"></text></g><g><title>bcs::ser::serialize_into (118 samples, 0.11%)</title><rect x="37.3659%" y="1637" width="0.1099%" height="15" fill="rgb(227,200,9)" fg:x="40119" fg:w="118"/><text x="37.6159%" y="1647.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (118 samples, 0.11%)</title><rect x="37.3659%" y="1621" width="0.1099%" height="15" fill="rgb(221,222,28)" fg:x="40119" fg:w="118"/><text x="37.6159%" y="1631.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (103 samples, 0.10%)</title><rect x="37.3799%" y="1605" width="0.0959%" height="15" fill="rgb(223,142,26)" fg:x="40134" fg:w="103"/><text x="37.6299%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (100 samples, 0.09%)</title><rect x="37.3826%" y="1589" width="0.0931%" height="15" fill="rgb(243,46,9)" fg:x="40137" fg:w="100"/><text x="37.6326%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (26 samples, 0.02%)</title><rect x="37.4516%" y="1573" width="0.0242%" height="15" fill="rgb(250,56,11)" fg:x="40211" fg:w="26"/><text x="37.7016%" y="1583.50"></text></g><g><title>serde::ser::Serializer::collect_seq (26 samples, 0.02%)</title><rect x="37.4516%" y="1557" width="0.0242%" height="15" fill="rgb(229,113,5)" fg:x="40211" fg:w="26"/><text x="37.7016%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (26 samples, 0.02%)</title><rect x="37.4516%" y="1541" width="0.0242%" height="15" fill="rgb(244,108,28)" fg:x="40211" fg:w="26"/><text x="37.7016%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.02%)</title><rect x="37.4516%" y="1525" width="0.0242%" height="15" fill="rgb(242,119,50)" fg:x="40211" fg:w="26"/><text x="37.7016%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (23 samples, 0.02%)</title><rect x="37.4544%" y="1509" width="0.0214%" height="15" fill="rgb(224,164,23)" fg:x="40214" fg:w="23"/><text x="37.7044%" y="1519.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (23 samples, 0.02%)</title><rect x="37.4544%" y="1493" width="0.0214%" height="15" fill="rgb(214,227,44)" fg:x="40214" fg:w="23"/><text x="37.7044%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (23 samples, 0.02%)</title><rect x="37.4544%" y="1477" width="0.0214%" height="15" fill="rgb(238,202,4)" fg:x="40214" fg:w="23"/><text x="37.7044%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (23 samples, 0.02%)</title><rect x="37.4544%" y="1461" width="0.0214%" height="15" fill="rgb(213,190,30)" fg:x="40214" fg:w="23"/><text x="37.7044%" y="1471.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (23 samples, 0.02%)</title><rect x="37.4544%" y="1445" width="0.0214%" height="15" fill="rgb(239,15,2)" fg:x="40214" fg:w="23"/><text x="37.7044%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (30 samples, 0.03%)</title><rect x="37.4832%" y="1621" width="0.0279%" height="15" fill="rgb(249,229,4)" fg:x="40245" fg:w="30"/><text x="37.7332%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="37.4832%" y="1605" width="0.0279%" height="15" fill="rgb(239,75,44)" fg:x="40245" fg:w="30"/><text x="37.7332%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (28 samples, 0.03%)</title><rect x="37.4851%" y="1589" width="0.0261%" height="15" fill="rgb(251,206,23)" fg:x="40247" fg:w="28"/><text x="37.7351%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (27 samples, 0.03%)</title><rect x="37.4860%" y="1573" width="0.0251%" height="15" fill="rgb(215,208,0)" fg:x="40248" fg:w="27"/><text x="37.7360%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (16 samples, 0.01%)</title><rect x="37.4963%" y="1557" width="0.0149%" height="15" fill="rgb(230,75,50)" fg:x="40259" fg:w="16"/><text x="37.7463%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (13 samples, 0.01%)</title><rect x="37.4991%" y="1541" width="0.0121%" height="15" fill="rgb(246,180,39)" fg:x="40262" fg:w="13"/><text x="37.7491%" y="1551.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (186 samples, 0.17%)</title><rect x="37.3510%" y="1685" width="0.1732%" height="15" fill="rgb(249,175,24)" fg:x="40103" fg:w="186"/><text x="37.6010%" y="1695.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (175 samples, 0.16%)</title><rect x="37.3612%" y="1669" width="0.1630%" height="15" fill="rgb(247,176,22)" fg:x="40114" fg:w="175"/><text x="37.6112%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (48 samples, 0.04%)</title><rect x="37.4795%" y="1653" width="0.0447%" height="15" fill="rgb(241,100,24)" fg:x="40241" fg:w="48"/><text x="37.7295%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (44 samples, 0.04%)</title><rect x="37.4832%" y="1637" width="0.0410%" height="15" fill="rgb(233,4,35)" fg:x="40245" fg:w="44"/><text x="37.7332%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (14 samples, 0.01%)</title><rect x="37.5112%" y="1621" width="0.0130%" height="15" fill="rgb(211,164,46)" fg:x="40275" fg:w="14"/><text x="37.7612%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.01%)</title><rect x="37.5112%" y="1605" width="0.0130%" height="15" fill="rgb(242,99,53)" fg:x="40275" fg:w="14"/><text x="37.7612%" y="1615.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="37.5112%" y="1589" width="0.0130%" height="15" fill="rgb(243,45,33)" fg:x="40275" fg:w="14"/><text x="37.7612%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="37.5112%" y="1573" width="0.0130%" height="15" fill="rgb(217,55,21)" fg:x="40275" fg:w="14"/><text x="37.7612%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="37.5112%" y="1557" width="0.0130%" height="15" fill="rgb(245,145,46)" fg:x="40275" fg:w="14"/><text x="37.7612%" y="1567.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="37.5130%" y="1541" width="0.0112%" height="15" fill="rgb(215,112,45)" fg:x="40277" fg:w="12"/><text x="37.7630%" y="1551.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::access_path (15 samples, 0.01%)</title><rect x="37.5345%" y="1669" width="0.0140%" height="15" fill="rgb(228,104,16)" fg:x="40300" fg:w="15"/><text x="37.7845%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="37.5494%" y="1621" width="0.0140%" height="15" fill="rgb(239,186,38)" fg:x="40316" fg:w="15"/><text x="37.7994%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="37.5494%" y="1605" width="0.0140%" height="15" fill="rgb(228,38,35)" fg:x="40316" fg:w="15"/><text x="37.7994%" y="1615.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="37.5494%" y="1589" width="0.0140%" height="15" fill="rgb(251,42,40)" fg:x="40316" fg:w="15"/><text x="37.7994%" y="1599.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="37.5512%" y="1573" width="0.0121%" height="15" fill="rgb(210,51,19)" fg:x="40318" fg:w="13"/><text x="37.8012%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (17 samples, 0.02%)</title><rect x="37.5484%" y="1669" width="0.0158%" height="15" fill="rgb(236,94,42)" fg:x="40315" fg:w="17"/><text x="37.7984%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (17 samples, 0.02%)</title><rect x="37.5484%" y="1653" width="0.0158%" height="15" fill="rgb(239,167,16)" fg:x="40315" fg:w="17"/><text x="37.7984%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="37.5484%" y="1637" width="0.0158%" height="15" fill="rgb(252,175,31)" fg:x="40315" fg:w="17"/><text x="37.7984%" y="1647.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (44 samples, 0.04%)</title><rect x="37.5242%" y="1685" width="0.0410%" height="15" fill="rgb(206,166,30)" fg:x="40289" fg:w="44"/><text x="37.7742%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (322 samples, 0.30%)</title><rect x="37.2662%" y="1717" width="0.2999%" height="15" fill="rgb(206,209,37)" fg:x="40012" fg:w="322"/><text x="37.5162%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (320 samples, 0.30%)</title><rect x="37.2681%" y="1701" width="0.2980%" height="15" fill="rgb(226,91,4)" fg:x="40014" fg:w="320"/><text x="37.5181%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (20 samples, 0.02%)</title><rect x="37.5857%" y="1573" width="0.0186%" height="15" fill="rgb(222,167,0)" fg:x="40355" fg:w="20"/><text x="37.8357%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (12 samples, 0.01%)</title><rect x="37.5931%" y="1557" width="0.0112%" height="15" fill="rgb(211,70,14)" fg:x="40363" fg:w="12"/><text x="37.8431%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (52 samples, 0.05%)</title><rect x="37.5754%" y="1653" width="0.0484%" height="15" fill="rgb(214,84,42)" fg:x="40344" fg:w="52"/><text x="37.8254%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="37.5754%" y="1637" width="0.0484%" height="15" fill="rgb(235,157,37)" fg:x="40344" fg:w="52"/><text x="37.8254%" y="1647.50"></text></g><g><title>core::mem::drop (41 samples, 0.04%)</title><rect x="37.5857%" y="1621" width="0.0382%" height="15" fill="rgb(225,13,6)" fg:x="40355" fg:w="41"/><text x="37.8357%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="37.5857%" y="1605" width="0.0382%" height="15" fill="rgb(205,202,1)" fg:x="40355" fg:w="41"/><text x="37.8357%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="37.5857%" y="1589" width="0.0382%" height="15" fill="rgb(232,195,26)" fg:x="40355" fg:w="41"/><text x="37.8357%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (21 samples, 0.02%)</title><rect x="37.6043%" y="1573" width="0.0196%" height="15" fill="rgb(208,102,26)" fg:x="40375" fg:w="21"/><text x="37.8543%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (20 samples, 0.02%)</title><rect x="37.6052%" y="1557" width="0.0186%" height="15" fill="rgb(215,41,39)" fg:x="40376" fg:w="20"/><text x="37.8552%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt; (13 samples, 0.01%)</title><rect x="37.6118%" y="1541" width="0.0121%" height="15" fill="rgb(247,139,11)" fg:x="40383" fg:w="13"/><text x="37.8618%" y="1551.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="37.6360%" y="1557" width="0.0121%" height="15" fill="rgb(243,99,6)" fg:x="40409" fg:w="13"/><text x="37.8860%" y="1567.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="37.6360%" y="1541" width="0.0121%" height="15" fill="rgb(230,168,48)" fg:x="40409" fg:w="13"/><text x="37.8860%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (13 samples, 0.01%)</title><rect x="37.6360%" y="1525" width="0.0121%" height="15" fill="rgb(238,227,13)" fg:x="40409" fg:w="13"/><text x="37.8860%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="37.6378%" y="1509" width="0.0102%" height="15" fill="rgb(209,109,13)" fg:x="40411" fg:w="11"/><text x="37.8878%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="37.6378%" y="1493" width="0.0102%" height="15" fill="rgb(228,195,1)" fg:x="40411" fg:w="11"/><text x="37.8878%" y="1503.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="37.6378%" y="1477" width="0.0102%" height="15" fill="rgb(230,218,0)" fg:x="40411" fg:w="11"/><text x="37.8878%" y="1487.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (22 samples, 0.02%)</title><rect x="37.6714%" y="1509" width="0.0205%" height="15" fill="rgb(206,1,45)" fg:x="40447" fg:w="22"/><text x="37.9214%" y="1519.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (22 samples, 0.02%)</title><rect x="37.6714%" y="1493" width="0.0205%" height="15" fill="rgb(209,124,26)" fg:x="40447" fg:w="22"/><text x="37.9214%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (12 samples, 0.01%)</title><rect x="37.6807%" y="1477" width="0.0112%" height="15" fill="rgb(220,59,8)" fg:x="40457" fg:w="12"/><text x="37.9307%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="37.6807%" y="1461" width="0.0112%" height="15" fill="rgb(251,41,37)" fg:x="40457" fg:w="12"/><text x="37.9307%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="37.6807%" y="1445" width="0.0112%" height="15" fill="rgb(239,152,21)" fg:x="40457" fg:w="12"/><text x="37.9307%" y="1455.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="37.6807%" y="1429" width="0.0112%" height="15" fill="rgb(226,32,1)" fg:x="40457" fg:w="12"/><text x="37.9307%" y="1439.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (59 samples, 0.05%)</title><rect x="37.6481%" y="1541" width="0.0550%" height="15" fill="rgb(230,154,36)" fg:x="40422" fg:w="59"/><text x="37.8981%" y="1551.50"></text></g><g><title>alloc::collections::btree::mem::replace (41 samples, 0.04%)</title><rect x="37.6649%" y="1525" width="0.0382%" height="15" fill="rgb(208,228,43)" fg:x="40440" fg:w="41"/><text x="37.9149%" y="1535.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (93 samples, 0.09%)</title><rect x="37.6285%" y="1573" width="0.0866%" height="15" fill="rgb(214,203,3)" fg:x="40401" fg:w="93"/><text x="37.8785%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (72 samples, 0.07%)</title><rect x="37.6481%" y="1557" width="0.0671%" height="15" fill="rgb(207,149,29)" fg:x="40422" fg:w="72"/><text x="37.8981%" y="1567.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (13 samples, 0.01%)</title><rect x="37.7030%" y="1541" width="0.0121%" height="15" fill="rgb(250,105,7)" fg:x="40481" fg:w="13"/><text x="37.9530%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (255 samples, 0.24%)</title><rect x="37.7189%" y="1461" width="0.2375%" height="15" fill="rgb(232,222,16)" fg:x="40498" fg:w="255"/><text x="37.9689%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (255 samples, 0.24%)</title><rect x="37.7189%" y="1445" width="0.2375%" height="15" fill="rgb(209,32,24)" fg:x="40498" fg:w="255"/><text x="37.9689%" y="1455.50"></text></g><g><title>cfree (249 samples, 0.23%)</title><rect x="37.7245%" y="1429" width="0.2319%" height="15" fill="rgb(225,13,6)" fg:x="40504" fg:w="249"/><text x="37.9745%" y="1439.50"></text></g><g><title>[libc.so.6] (159 samples, 0.15%)</title><rect x="37.8083%" y="1413" width="0.1481%" height="15" fill="rgb(245,226,26)" fg:x="40594" fg:w="159"/><text x="38.0583%" y="1423.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (274 samples, 0.26%)</title><rect x="37.7151%" y="1557" width="0.2552%" height="15" fill="rgb(229,178,27)" fg:x="40494" fg:w="274"/><text x="37.9651%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (274 samples, 0.26%)</title><rect x="37.7151%" y="1541" width="0.2552%" height="15" fill="rgb(205,227,28)" fg:x="40494" fg:w="274"/><text x="37.9651%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (274 samples, 0.26%)</title><rect x="37.7151%" y="1525" width="0.2552%" height="15" fill="rgb(210,191,45)" fg:x="40494" fg:w="274"/><text x="37.9651%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (274 samples, 0.26%)</title><rect x="37.7151%" y="1509" width="0.2552%" height="15" fill="rgb(206,124,16)" fg:x="40494" fg:w="274"/><text x="37.9651%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (274 samples, 0.26%)</title><rect x="37.7151%" y="1493" width="0.2552%" height="15" fill="rgb(210,162,0)" fg:x="40494" fg:w="274"/><text x="37.9651%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (274 samples, 0.26%)</title><rect x="37.7151%" y="1477" width="0.2552%" height="15" fill="rgb(211,54,38)" fg:x="40494" fg:w="274"/><text x="37.9651%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="37.9564%" y="1461" width="0.0140%" height="15" fill="rgb(248,192,3)" fg:x="40753" fg:w="15"/><text x="38.2064%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (427 samples, 0.40%)</title><rect x="37.5754%" y="1669" width="0.3977%" height="15" fill="rgb(233,187,18)" fg:x="40344" fg:w="427"/><text x="37.8254%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (375 samples, 0.35%)</title><rect x="37.6239%" y="1653" width="0.3493%" height="15" fill="rgb(237,208,14)" fg:x="40396" fg:w="375"/><text x="37.8739%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (375 samples, 0.35%)</title><rect x="37.6239%" y="1637" width="0.3493%" height="15" fill="rgb(212,77,1)" fg:x="40396" fg:w="375"/><text x="37.8739%" y="1647.50"></text></g><g><title>core::mem::drop (371 samples, 0.35%)</title><rect x="37.6276%" y="1621" width="0.3455%" height="15" fill="rgb(210,163,22)" fg:x="40400" fg:w="371"/><text x="37.8776%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (371 samples, 0.35%)</title><rect x="37.6276%" y="1605" width="0.3455%" height="15" fill="rgb(250,58,28)" fg:x="40400" fg:w="371"/><text x="37.8776%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (371 samples, 0.35%)</title><rect x="37.6276%" y="1589" width="0.3455%" height="15" fill="rgb(254,28,41)" fg:x="40400" fg:w="371"/><text x="37.8776%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (277 samples, 0.26%)</title><rect x="37.7151%" y="1573" width="0.2580%" height="15" fill="rgb(237,162,36)" fg:x="40494" fg:w="277"/><text x="37.9651%" y="1583.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (440 samples, 0.41%)</title><rect x="37.5661%" y="1717" width="0.4098%" height="15" fill="rgb(232,56,6)" fg:x="40334" fg:w="440"/><text x="37.8161%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (440 samples, 0.41%)</title><rect x="37.5661%" y="1701" width="0.4098%" height="15" fill="rgb(216,127,42)" fg:x="40334" fg:w="440"/><text x="37.8161%" y="1711.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (436 samples, 0.41%)</title><rect x="37.5699%" y="1685" width="0.4061%" height="15" fill="rgb(241,69,15)" fg:x="40338" fg:w="436"/><text x="37.8199%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (1,282 samples, 1.19%)</title><rect x="36.7866%" y="1749" width="1.1940%" height="15" fill="rgb(227,180,19)" fg:x="39497" fg:w="1282"/><text x="37.0366%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (1,281 samples, 1.19%)</title><rect x="36.7875%" y="1733" width="1.1931%" height="15" fill="rgb(231,188,29)" fg:x="39498" fg:w="1281"/><text x="37.0375%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="38.0048%" y="1669" width="0.0112%" height="15" fill="rgb(224,176,27)" fg:x="40805" fg:w="12"/><text x="38.2548%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="38.0048%" y="1653" width="0.0112%" height="15" fill="rgb(249,214,19)" fg:x="40805" fg:w="12"/><text x="38.2548%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="38.0048%" y="1637" width="0.0112%" height="15" fill="rgb(240,0,4)" fg:x="40805" fg:w="12"/><text x="38.2548%" y="1647.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="37.9834%" y="1749" width="0.0345%" height="15" fill="rgb(233,28,41)" fg:x="40782" fg:w="37"/><text x="38.2334%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="37.9936%" y="1733" width="0.0242%" height="15" fill="rgb(220,90,51)" fg:x="40793" fg:w="26"/><text x="38.2436%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="37.9955%" y="1717" width="0.0224%" height="15" fill="rgb(250,52,22)" fg:x="40795" fg:w="24"/><text x="38.2455%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="37.9955%" y="1701" width="0.0224%" height="15" fill="rgb(231,152,36)" fg:x="40795" fg:w="24"/><text x="38.2455%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="37.9955%" y="1685" width="0.0224%" height="15" fill="rgb(250,218,4)" fg:x="40795" fg:w="24"/><text x="38.2455%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (20 samples, 0.02%)</title><rect x="38.0188%" y="1749" width="0.0186%" height="15" fill="rgb(210,38,21)" fg:x="40820" fg:w="20"/><text x="38.2688%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (20 samples, 0.02%)</title><rect x="38.0188%" y="1733" width="0.0186%" height="15" fill="rgb(230,75,13)" fg:x="40820" fg:w="20"/><text x="38.2688%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.02%)</title><rect x="38.0188%" y="1717" width="0.0186%" height="15" fill="rgb(250,68,53)" fg:x="40820" fg:w="20"/><text x="38.2688%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.01%)</title><rect x="38.0262%" y="1701" width="0.0112%" height="15" fill="rgb(250,210,16)" fg:x="40828" fg:w="12"/><text x="38.2762%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.01%)</title><rect x="38.0262%" y="1685" width="0.0112%" height="15" fill="rgb(240,132,5)" fg:x="40828" fg:w="12"/><text x="38.2762%" y="1695.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (11 samples, 0.01%)</title><rect x="38.0272%" y="1669" width="0.0102%" height="15" fill="rgb(222,148,48)" fg:x="40829" fg:w="11"/><text x="38.2772%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (16 samples, 0.01%)</title><rect x="38.0532%" y="1669" width="0.0149%" height="15" fill="rgb(247,181,24)" fg:x="40857" fg:w="16"/><text x="38.3032%" y="1679.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (13 samples, 0.01%)</title><rect x="38.0560%" y="1653" width="0.0121%" height="15" fill="rgb(239,5,31)" fg:x="40860" fg:w="13"/><text x="38.3060%" y="1663.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (25 samples, 0.02%)</title><rect x="38.0467%" y="1685" width="0.0233%" height="15" fill="rgb(241,152,38)" fg:x="40850" fg:w="25"/><text x="38.2967%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (37 samples, 0.03%)</title><rect x="38.0374%" y="1749" width="0.0345%" height="15" fill="rgb(246,200,37)" fg:x="40840" fg:w="37"/><text x="38.2874%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (35 samples, 0.03%)</title><rect x="38.0393%" y="1733" width="0.0326%" height="15" fill="rgb(243,210,26)" fg:x="40842" fg:w="35"/><text x="38.2893%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (32 samples, 0.03%)</title><rect x="38.0421%" y="1717" width="0.0298%" height="15" fill="rgb(222,22,22)" fg:x="40845" fg:w="32"/><text x="38.2921%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (32 samples, 0.03%)</title><rect x="38.0421%" y="1701" width="0.0298%" height="15" fill="rgb(208,129,28)" fg:x="40845" fg:w="32"/><text x="38.2921%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (139 samples, 0.13%)</title><rect x="38.0719%" y="1749" width="0.1295%" height="15" fill="rgb(254,169,28)" fg:x="40877" fg:w="139"/><text x="38.3219%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (124 samples, 0.12%)</title><rect x="38.0858%" y="1733" width="0.1155%" height="15" fill="rgb(225,45,17)" fg:x="40892" fg:w="124"/><text x="38.3358%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (106 samples, 0.10%)</title><rect x="38.1026%" y="1717" width="0.0987%" height="15" fill="rgb(232,199,2)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (106 samples, 0.10%)</title><rect x="38.1026%" y="1701" width="0.0987%" height="15" fill="rgb(235,33,40)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (106 samples, 0.10%)</title><rect x="38.1026%" y="1685" width="0.0987%" height="15" fill="rgb(237,89,50)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (106 samples, 0.10%)</title><rect x="38.1026%" y="1669" width="0.0987%" height="15" fill="rgb(238,126,5)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (106 samples, 0.10%)</title><rect x="38.1026%" y="1653" width="0.0987%" height="15" fill="rgb(247,214,42)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (106 samples, 0.10%)</title><rect x="38.1026%" y="1637" width="0.0987%" height="15" fill="rgb(238,60,45)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (106 samples, 0.10%)</title><rect x="38.1026%" y="1621" width="0.0987%" height="15" fill="rgb(225,69,44)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1631.50"></text></g><g><title>malloc (106 samples, 0.10%)</title><rect x="38.1026%" y="1605" width="0.0987%" height="15" fill="rgb(241,13,44)" fg:x="40910" fg:w="106"/><text x="38.3526%" y="1615.50"></text></g><g><title>[libc.so.6] (102 samples, 0.10%)</title><rect x="38.1063%" y="1589" width="0.0950%" height="15" fill="rgb(227,121,22)" fg:x="40914" fg:w="102"/><text x="38.3563%" y="1599.50"></text></g><g><title>[libc.so.6] (59 samples, 0.05%)</title><rect x="38.1464%" y="1573" width="0.0550%" height="15" fill="rgb(231,160,23)" fg:x="40957" fg:w="59"/><text x="38.3964%" y="1583.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="38.2013%" y="1749" width="0.0168%" height="15" fill="rgb(250,179,43)" fg:x="41016" fg:w="18"/><text x="38.4513%" y="1759.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="38.2078%" y="1733" width="0.0102%" height="15" fill="rgb(233,54,46)" fg:x="41023" fg:w="11"/><text x="38.4578%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="38.2218%" y="1701" width="0.0475%" height="15" fill="rgb(247,120,42)" fg:x="41038" fg:w="51"/><text x="38.4718%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (48 samples, 0.04%)</title><rect x="38.2246%" y="1685" width="0.0447%" height="15" fill="rgb(221,219,12)" fg:x="41041" fg:w="48"/><text x="38.4746%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (48 samples, 0.04%)</title><rect x="38.2246%" y="1669" width="0.0447%" height="15" fill="rgb(211,126,8)" fg:x="41041" fg:w="48"/><text x="38.4746%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (36 samples, 0.03%)</title><rect x="38.2358%" y="1653" width="0.0335%" height="15" fill="rgb(218,154,33)" fg:x="41053" fg:w="36"/><text x="38.4858%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (27 samples, 0.03%)</title><rect x="38.2442%" y="1637" width="0.0251%" height="15" fill="rgb(212,199,16)" fg:x="41062" fg:w="27"/><text x="38.4942%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (21 samples, 0.02%)</title><rect x="38.2498%" y="1621" width="0.0196%" height="15" fill="rgb(236,215,46)" fg:x="41068" fg:w="21"/><text x="38.4998%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (21 samples, 0.02%)</title><rect x="38.2498%" y="1605" width="0.0196%" height="15" fill="rgb(232,32,22)" fg:x="41068" fg:w="21"/><text x="38.4998%" y="1615.50"></text></g><g><title>alloc::alloc::box_free (21 samples, 0.02%)</title><rect x="38.2498%" y="1589" width="0.0196%" height="15" fill="rgb(234,79,15)" fg:x="41068" fg:w="21"/><text x="38.4998%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="38.2498%" y="1573" width="0.0196%" height="15" fill="rgb(235,187,47)" fg:x="41068" fg:w="21"/><text x="38.4998%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="38.2526%" y="1557" width="0.0168%" height="15" fill="rgb(244,69,37)" fg:x="41071" fg:w="18"/><text x="38.5026%" y="1567.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="38.2553%" y="1541" width="0.0140%" height="15" fill="rgb(249,140,25)" fg:x="41074" fg:w="15"/><text x="38.5053%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (65 samples, 0.06%)</title><rect x="38.2218%" y="1717" width="0.0605%" height="15" fill="rgb(213,69,8)" fg:x="41038" fg:w="65"/><text x="38.4718%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (14 samples, 0.01%)</title><rect x="38.2693%" y="1701" width="0.0130%" height="15" fill="rgb(220,136,2)" fg:x="41089" fg:w="14"/><text x="38.5193%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="38.2693%" y="1685" width="0.0130%" height="15" fill="rgb(237,50,36)" fg:x="41089" fg:w="14"/><text x="38.5193%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="38.2693%" y="1669" width="0.0130%" height="15" fill="rgb(226,18,11)" fg:x="41089" fg:w="14"/><text x="38.5193%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="38.2693%" y="1653" width="0.0130%" height="15" fill="rgb(243,156,2)" fg:x="41089" fg:w="14"/><text x="38.5193%" y="1663.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="38.2721%" y="1637" width="0.0102%" height="15" fill="rgb(218,8,34)" fg:x="41092" fg:w="11"/><text x="38.5221%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (96 samples, 0.09%)</title><rect x="38.2181%" y="1749" width="0.0894%" height="15" fill="rgb(250,94,35)" fg:x="41034" fg:w="96"/><text x="38.4681%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (92 samples, 0.09%)</title><rect x="38.2218%" y="1733" width="0.0857%" height="15" fill="rgb(229,127,21)" fg:x="41038" fg:w="92"/><text x="38.4718%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (27 samples, 0.03%)</title><rect x="38.2824%" y="1717" width="0.0251%" height="15" fill="rgb(234,49,5)" fg:x="41103" fg:w="27"/><text x="38.5324%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (27 samples, 0.03%)</title><rect x="38.2824%" y="1701" width="0.0251%" height="15" fill="rgb(248,12,16)" fg:x="41103" fg:w="27"/><text x="38.5324%" y="1711.50"></text></g><g><title>alloc::alloc::box_free (27 samples, 0.03%)</title><rect x="38.2824%" y="1685" width="0.0251%" height="15" fill="rgb(208,220,31)" fg:x="41103" fg:w="27"/><text x="38.5324%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.03%)</title><rect x="38.2824%" y="1669" width="0.0251%" height="15" fill="rgb(243,184,0)" fg:x="41103" fg:w="27"/><text x="38.5324%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="38.2833%" y="1653" width="0.0242%" height="15" fill="rgb(217,38,21)" fg:x="41104" fg:w="26"/><text x="38.5333%" y="1663.50"></text></g><g><title>cfree (25 samples, 0.02%)</title><rect x="38.2842%" y="1637" width="0.0233%" height="15" fill="rgb(239,120,45)" fg:x="41105" fg:w="25"/><text x="38.5342%" y="1647.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="38.2935%" y="1621" width="0.0140%" height="15" fill="rgb(235,33,2)" fg:x="41115" fg:w="15"/><text x="38.5435%" y="1631.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (11 samples, 0.01%)</title><rect x="38.3280%" y="1653" width="0.0102%" height="15" fill="rgb(249,161,5)" fg:x="41152" fg:w="11"/><text x="38.5780%" y="1663.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (11 samples, 0.01%)</title><rect x="38.3280%" y="1637" width="0.0102%" height="15" fill="rgb(250,165,48)" fg:x="41152" fg:w="11"/><text x="38.5780%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (11 samples, 0.01%)</title><rect x="38.3280%" y="1621" width="0.0102%" height="15" fill="rgb(221,23,45)" fg:x="41152" fg:w="11"/><text x="38.5780%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (11 samples, 0.01%)</title><rect x="38.3280%" y="1605" width="0.0102%" height="15" fill="rgb(217,108,46)" fg:x="41152" fg:w="11"/><text x="38.5780%" y="1615.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.01%)</title><rect x="38.3280%" y="1589" width="0.0102%" height="15" fill="rgb(254,26,35)" fg:x="41152" fg:w="11"/><text x="38.5780%" y="1599.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="38.3280%" y="1573" width="0.0102%" height="15" fill="rgb(218,223,28)" fg:x="41152" fg:w="11"/><text x="38.5780%" y="1583.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.01%)</title><rect x="38.3271%" y="1701" width="0.0149%" height="15" fill="rgb(242,27,47)" fg:x="41151" fg:w="16"/><text x="38.5771%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.01%)</title><rect x="38.3280%" y="1685" width="0.0140%" height="15" fill="rgb(218,39,35)" fg:x="41152" fg:w="15"/><text x="38.5780%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.01%)</title><rect x="38.3280%" y="1669" width="0.0140%" height="15" fill="rgb(232,127,16)" fg:x="41152" fg:w="15"/><text x="38.5780%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (21 samples, 0.02%)</title><rect x="38.3243%" y="1733" width="0.0196%" height="15" fill="rgb(231,219,51)" fg:x="41148" fg:w="21"/><text x="38.5743%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (21 samples, 0.02%)</title><rect x="38.3243%" y="1717" width="0.0196%" height="15" fill="rgb(217,220,46)" fg:x="41148" fg:w="21"/><text x="38.5743%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (27 samples, 0.03%)</title><rect x="38.3438%" y="1733" width="0.0251%" height="15" fill="rgb(230,75,1)" fg:x="41169" fg:w="27"/><text x="38.5938%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.03%)</title><rect x="38.3438%" y="1717" width="0.0251%" height="15" fill="rgb(218,2,8)" fg:x="41169" fg:w="27"/><text x="38.5938%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (27 samples, 0.03%)</title><rect x="38.3438%" y="1701" width="0.0251%" height="15" fill="rgb(206,111,30)" fg:x="41169" fg:w="27"/><text x="38.5938%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (27 samples, 0.03%)</title><rect x="38.3438%" y="1685" width="0.0251%" height="15" fill="rgb(209,135,6)" fg:x="41169" fg:w="27"/><text x="38.5938%" y="1695.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (20 samples, 0.02%)</title><rect x="38.3503%" y="1669" width="0.0186%" height="15" fill="rgb(205,169,10)" fg:x="41176" fg:w="20"/><text x="38.6003%" y="1679.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (20 samples, 0.02%)</title><rect x="38.3503%" y="1653" width="0.0186%" height="15" fill="rgb(212,204,38)" fg:x="41176" fg:w="20"/><text x="38.6003%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (20 samples, 0.02%)</title><rect x="38.3503%" y="1637" width="0.0186%" height="15" fill="rgb(205,199,14)" fg:x="41176" fg:w="20"/><text x="38.6003%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (20 samples, 0.02%)</title><rect x="38.3503%" y="1621" width="0.0186%" height="15" fill="rgb(212,4,6)" fg:x="41176" fg:w="20"/><text x="38.6003%" y="1631.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.02%)</title><rect x="38.3503%" y="1605" width="0.0186%" height="15" fill="rgb(250,15,10)" fg:x="41176" fg:w="20"/><text x="38.6003%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (18 samples, 0.02%)</title><rect x="38.3690%" y="1733" width="0.0168%" height="15" fill="rgb(212,49,51)" fg:x="41196" fg:w="18"/><text x="38.6190%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (14 samples, 0.01%)</title><rect x="38.3727%" y="1717" width="0.0130%" height="15" fill="rgb(235,21,9)" fg:x="41200" fg:w="14"/><text x="38.6227%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.01%)</title><rect x="38.3755%" y="1701" width="0.0102%" height="15" fill="rgb(251,31,32)" fg:x="41203" fg:w="11"/><text x="38.6255%" y="1711.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (76 samples, 0.07%)</title><rect x="38.3159%" y="1749" width="0.0708%" height="15" fill="rgb(246,23,9)" fg:x="41139" fg:w="76"/><text x="38.5659%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.03%)</title><rect x="38.4081%" y="1573" width="0.0261%" height="15" fill="rgb(225,216,14)" fg:x="41238" fg:w="28"/><text x="38.6581%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.03%)</title><rect x="38.4081%" y="1557" width="0.0261%" height="15" fill="rgb(215,200,26)" fg:x="41238" fg:w="28"/><text x="38.6581%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.03%)</title><rect x="38.4081%" y="1541" width="0.0261%" height="15" fill="rgb(237,130,47)" fg:x="41238" fg:w="28"/><text x="38.6581%" y="1551.50"></text></g><g><title>malloc (25 samples, 0.02%)</title><rect x="38.4109%" y="1525" width="0.0233%" height="15" fill="rgb(247,74,14)" fg:x="41241" fg:w="25"/><text x="38.6609%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="38.4072%" y="1621" width="0.0279%" height="15" fill="rgb(254,97,46)" fg:x="41237" fg:w="30"/><text x="38.6572%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="38.4072%" y="1605" width="0.0279%" height="15" fill="rgb(234,191,1)" fg:x="41237" fg:w="30"/><text x="38.6572%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.03%)</title><rect x="38.4072%" y="1589" width="0.0279%" height="15" fill="rgb(215,165,14)" fg:x="41237" fg:w="30"/><text x="38.6572%" y="1599.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (66 samples, 0.06%)</title><rect x="38.3978%" y="1701" width="0.0615%" height="15" fill="rgb(230,182,6)" fg:x="41227" fg:w="66"/><text x="38.6478%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (64 samples, 0.06%)</title><rect x="38.3997%" y="1685" width="0.0596%" height="15" fill="rgb(210,127,39)" fg:x="41229" fg:w="64"/><text x="38.6497%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62 samples, 0.06%)</title><rect x="38.4016%" y="1669" width="0.0577%" height="15" fill="rgb(223,212,51)" fg:x="41231" fg:w="62"/><text x="38.6516%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (62 samples, 0.06%)</title><rect x="38.4016%" y="1653" width="0.0577%" height="15" fill="rgb(226,176,43)" fg:x="41231" fg:w="62"/><text x="38.6516%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62 samples, 0.06%)</title><rect x="38.4016%" y="1637" width="0.0577%" height="15" fill="rgb(222,155,4)" fg:x="41231" fg:w="62"/><text x="38.6516%" y="1647.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (26 samples, 0.02%)</title><rect x="38.4351%" y="1621" width="0.0242%" height="15" fill="rgb(215,149,7)" fg:x="41267" fg:w="26"/><text x="38.6851%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="38.4696%" y="1621" width="0.0149%" height="15" fill="rgb(252,199,23)" fg:x="41304" fg:w="16"/><text x="38.7196%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="38.4696%" y="1605" width="0.0149%" height="15" fill="rgb(245,52,29)" fg:x="41304" fg:w="16"/><text x="38.7196%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="38.4696%" y="1589" width="0.0149%" height="15" fill="rgb(221,228,19)" fg:x="41304" fg:w="16"/><text x="38.7196%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.03%)</title><rect x="38.4677%" y="1653" width="0.0251%" height="15" fill="rgb(253,101,6)" fg:x="41302" fg:w="27"/><text x="38.7177%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.03%)</title><rect x="38.4677%" y="1637" width="0.0251%" height="15" fill="rgb(211,130,8)" fg:x="41302" fg:w="27"/><text x="38.7177%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (124 samples, 0.12%)</title><rect x="38.3867%" y="1749" width="0.1155%" height="15" fill="rgb(238,37,53)" fg:x="41215" fg:w="124"/><text x="38.6367%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (124 samples, 0.12%)</title><rect x="38.3867%" y="1733" width="0.1155%" height="15" fill="rgb(235,145,5)" fg:x="41215" fg:w="124"/><text x="38.6367%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (118 samples, 0.11%)</title><rect x="38.3923%" y="1717" width="0.1099%" height="15" fill="rgb(244,12,43)" fg:x="41221" fg:w="118"/><text x="38.6423%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (38 samples, 0.04%)</title><rect x="38.4668%" y="1701" width="0.0354%" height="15" fill="rgb(246,195,24)" fg:x="41301" fg:w="38"/><text x="38.7168%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (38 samples, 0.04%)</title><rect x="38.4668%" y="1685" width="0.0354%" height="15" fill="rgb(235,163,6)" fg:x="41301" fg:w="38"/><text x="38.7168%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (38 samples, 0.04%)</title><rect x="38.4668%" y="1669" width="0.0354%" height="15" fill="rgb(236,218,17)" fg:x="41301" fg:w="38"/><text x="38.7168%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="38.5338%" y="1573" width="0.0168%" height="15" fill="rgb(235,12,38)" fg:x="41373" fg:w="18"/><text x="38.7838%" y="1583.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="38.5403%" y="1557" width="0.0102%" height="15" fill="rgb(225,195,33)" fg:x="41380" fg:w="11"/><text x="38.7903%" y="1567.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="38.5403%" y="1541" width="0.0102%" height="15" fill="rgb(238,54,35)" fg:x="41380" fg:w="11"/><text x="38.7903%" y="1551.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (19 samples, 0.02%)</title><rect x="38.5338%" y="1589" width="0.0177%" height="15" fill="rgb(238,33,7)" fg:x="41373" fg:w="19"/><text x="38.7838%" y="1599.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="38.5310%" y="1621" width="0.0279%" height="15" fill="rgb(245,5,14)" fg:x="41370" fg:w="30"/><text x="38.7810%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="38.5338%" y="1605" width="0.0251%" height="15" fill="rgb(251,95,31)" fg:x="41373" fg:w="27"/><text x="38.7838%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="38.5310%" y="1685" width="0.0354%" height="15" fill="rgb(222,15,46)" fg:x="41370" fg:w="38"/><text x="38.7810%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.04%)</title><rect x="38.5310%" y="1669" width="0.0354%" height="15" fill="rgb(226,182,24)" fg:x="41370" fg:w="38"/><text x="38.7810%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.04%)</title><rect x="38.5310%" y="1653" width="0.0354%" height="15" fill="rgb(229,105,41)" fg:x="41370" fg:w="38"/><text x="38.7810%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.04%)</title><rect x="38.5310%" y="1637" width="0.0354%" height="15" fill="rgb(216,99,53)" fg:x="41370" fg:w="38"/><text x="38.7810%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (68 samples, 0.06%)</title><rect x="38.5273%" y="1701" width="0.0633%" height="15" fill="rgb(253,26,20)" fg:x="41366" fg:w="68"/><text x="38.7773%" y="1711.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="38.5683%" y="1685" width="0.0224%" height="15" fill="rgb(249,155,28)" fg:x="41410" fg:w="24"/><text x="38.8183%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="38.5683%" y="1669" width="0.0224%" height="15" fill="rgb(241,221,2)" fg:x="41410" fg:w="24"/><text x="38.8183%" y="1679.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.02%)</title><rect x="38.5702%" y="1653" width="0.0205%" height="15" fill="rgb(219,124,6)" fg:x="41412" fg:w="22"/><text x="38.8202%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (22 samples, 0.02%)</title><rect x="38.5702%" y="1637" width="0.0205%" height="15" fill="rgb(233,37,6)" fg:x="41412" fg:w="22"/><text x="38.8202%" y="1647.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="38.5748%" y="1621" width="0.0158%" height="15" fill="rgb(238,20,14)" fg:x="41417" fg:w="17"/><text x="38.8248%" y="1631.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="38.5748%" y="1605" width="0.0158%" height="15" fill="rgb(232,106,27)" fg:x="41417" fg:w="17"/><text x="38.8248%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="38.6027%" y="1621" width="0.0158%" height="15" fill="rgb(246,157,24)" fg:x="41447" fg:w="17"/><text x="38.8527%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="38.6027%" y="1605" width="0.0158%" height="15" fill="rgb(214,153,10)" fg:x="41447" fg:w="17"/><text x="38.8527%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="38.6027%" y="1589" width="0.0158%" height="15" fill="rgb(212,94,6)" fg:x="41447" fg:w="17"/><text x="38.8527%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (36 samples, 0.03%)</title><rect x="38.6018%" y="1653" width="0.0335%" height="15" fill="rgb(254,25,27)" fg:x="41446" fg:w="36"/><text x="38.8518%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.03%)</title><rect x="38.6018%" y="1637" width="0.0335%" height="15" fill="rgb(250,43,52)" fg:x="41446" fg:w="36"/><text x="38.8518%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.01%)</title><rect x="38.6232%" y="1621" width="0.0121%" height="15" fill="rgb(221,226,40)" fg:x="41469" fg:w="13"/><text x="38.8732%" y="1631.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (20 samples, 0.02%)</title><rect x="38.6447%" y="1589" width="0.0186%" height="15" fill="rgb(235,162,34)" fg:x="41492" fg:w="20"/><text x="38.8947%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (20 samples, 0.02%)</title><rect x="38.6447%" y="1573" width="0.0186%" height="15" fill="rgb(239,24,26)" fg:x="41492" fg:w="20"/><text x="38.8947%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20 samples, 0.02%)</title><rect x="38.6447%" y="1557" width="0.0186%" height="15" fill="rgb(244,226,11)" fg:x="41492" fg:w="20"/><text x="38.8947%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (24 samples, 0.02%)</title><rect x="38.6447%" y="1605" width="0.0224%" height="15" fill="rgb(225,23,10)" fg:x="41492" fg:w="24"/><text x="38.8947%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (196 samples, 0.18%)</title><rect x="38.5022%" y="1749" width="0.1825%" height="15" fill="rgb(249,125,6)" fg:x="41339" fg:w="196"/><text x="38.7522%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (195 samples, 0.18%)</title><rect x="38.5031%" y="1733" width="0.1816%" height="15" fill="rgb(246,212,12)" fg:x="41340" fg:w="195"/><text x="38.7531%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (171 samples, 0.16%)</title><rect x="38.5254%" y="1717" width="0.1593%" height="15" fill="rgb(230,43,32)" fg:x="41364" fg:w="171"/><text x="38.7754%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (92 samples, 0.09%)</title><rect x="38.5990%" y="1701" width="0.0857%" height="15" fill="rgb(210,95,23)" fg:x="41443" fg:w="92"/><text x="38.8490%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (92 samples, 0.09%)</title><rect x="38.5990%" y="1685" width="0.0857%" height="15" fill="rgb(229,103,33)" fg:x="41443" fg:w="92"/><text x="38.8490%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (92 samples, 0.09%)</title><rect x="38.5990%" y="1669" width="0.0857%" height="15" fill="rgb(222,104,27)" fg:x="41443" fg:w="92"/><text x="38.8490%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 0.05%)</title><rect x="38.6353%" y="1653" width="0.0494%" height="15" fill="rgb(239,221,23)" fg:x="41482" fg:w="53"/><text x="38.8853%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.05%)</title><rect x="38.6353%" y="1637" width="0.0494%" height="15" fill="rgb(222,98,21)" fg:x="41482" fg:w="53"/><text x="38.8853%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (53 samples, 0.05%)</title><rect x="38.6353%" y="1621" width="0.0494%" height="15" fill="rgb(231,101,20)" fg:x="41482" fg:w="53"/><text x="38.8853%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (15 samples, 0.01%)</title><rect x="38.6847%" y="1749" width="0.0140%" height="15" fill="rgb(215,150,22)" fg:x="41535" fg:w="15"/><text x="38.9347%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::cached (11 samples, 0.01%)</title><rect x="38.6884%" y="1733" width="0.0102%" height="15" fill="rgb(248,3,34)" fg:x="41539" fg:w="11"/><text x="38.9384%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="38.8617%" y="1445" width="0.0177%" height="15" fill="rgb(220,141,21)" fg:x="41725" fg:w="19"/><text x="39.1117%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.02%)</title><rect x="38.8617%" y="1429" width="0.0177%" height="15" fill="rgb(223,41,48)" fg:x="41725" fg:w="19"/><text x="39.1117%" y="1439.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.01%)</title><rect x="38.8691%" y="1413" width="0.0102%" height="15" fill="rgb(247,12,5)" fg:x="41733" fg:w="11"/><text x="39.1191%" y="1423.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (11 samples, 0.01%)</title><rect x="38.8691%" y="1397" width="0.0102%" height="15" fill="rgb(206,173,10)" fg:x="41733" fg:w="11"/><text x="39.1191%" y="1407.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (20 samples, 0.02%)</title><rect x="38.8617%" y="1461" width="0.0186%" height="15" fill="rgb(233,214,37)" fg:x="41725" fg:w="20"/><text x="39.1117%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (43 samples, 0.04%)</title><rect x="38.8421%" y="1541" width="0.0400%" height="15" fill="rgb(238,86,43)" fg:x="41704" fg:w="43"/><text x="39.0921%" y="1551.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (31 samples, 0.03%)</title><rect x="38.8533%" y="1525" width="0.0289%" height="15" fill="rgb(212,182,8)" fg:x="41716" fg:w="31"/><text x="39.1033%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.03%)</title><rect x="38.8561%" y="1509" width="0.0261%" height="15" fill="rgb(240,91,47)" fg:x="41719" fg:w="28"/><text x="39.1061%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="38.8561%" y="1493" width="0.0261%" height="15" fill="rgb(209,138,26)" fg:x="41719" fg:w="28"/><text x="39.1061%" y="1503.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="38.8561%" y="1477" width="0.0261%" height="15" fill="rgb(231,163,20)" fg:x="41719" fg:w="28"/><text x="39.1061%" y="1487.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (73 samples, 0.07%)</title><rect x="38.8887%" y="1541" width="0.0680%" height="15" fill="rgb(214,91,54)" fg:x="41754" fg:w="73"/><text x="39.1387%" y="1551.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (73 samples, 0.07%)</title><rect x="38.8887%" y="1525" width="0.0680%" height="15" fill="rgb(230,32,17)" fg:x="41754" fg:w="73"/><text x="39.1387%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (56 samples, 0.05%)</title><rect x="38.9045%" y="1509" width="0.0522%" height="15" fill="rgb(231,34,34)" fg:x="41771" fg:w="56"/><text x="39.1545%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (56 samples, 0.05%)</title><rect x="38.9045%" y="1493" width="0.0522%" height="15" fill="rgb(224,228,27)" fg:x="41771" fg:w="56"/><text x="39.1545%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.05%)</title><rect x="38.9045%" y="1477" width="0.0522%" height="15" fill="rgb(219,35,40)" fg:x="41771" fg:w="56"/><text x="39.1545%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.05%)</title><rect x="38.9045%" y="1461" width="0.0522%" height="15" fill="rgb(234,42,8)" fg:x="41771" fg:w="56"/><text x="39.1545%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.05%)</title><rect x="38.9045%" y="1445" width="0.0522%" height="15" fill="rgb(226,75,22)" fg:x="41771" fg:w="56"/><text x="39.1545%" y="1455.50"></text></g><g><title>malloc (55 samples, 0.05%)</title><rect x="38.9054%" y="1429" width="0.0512%" height="15" fill="rgb(242,203,28)" fg:x="41772" fg:w="55"/><text x="39.1554%" y="1439.50"></text></g><g><title>[libc.so.6] (43 samples, 0.04%)</title><rect x="38.9166%" y="1413" width="0.0400%" height="15" fill="rgb(221,3,9)" fg:x="41784" fg:w="43"/><text x="39.1666%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (173 samples, 0.16%)</title><rect x="38.8142%" y="1557" width="0.1611%" height="15" fill="rgb(214,34,31)" fg:x="41674" fg:w="173"/><text x="39.0642%" y="1567.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (20 samples, 0.02%)</title><rect x="38.9567%" y="1541" width="0.0186%" height="15" fill="rgb(252,119,15)" fg:x="41827" fg:w="20"/><text x="39.2067%" y="1551.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (20 samples, 0.02%)</title><rect x="38.9567%" y="1525" width="0.0186%" height="15" fill="rgb(244,224,31)" fg:x="41827" fg:w="20"/><text x="39.2067%" y="1535.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (17 samples, 0.02%)</title><rect x="38.9595%" y="1509" width="0.0158%" height="15" fill="rgb(215,8,51)" fg:x="41830" fg:w="17"/><text x="39.2095%" y="1519.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (201 samples, 0.19%)</title><rect x="38.8132%" y="1573" width="0.1872%" height="15" fill="rgb(207,24,1)" fg:x="41673" fg:w="201"/><text x="39.0632%" y="1583.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (27 samples, 0.03%)</title><rect x="38.9753%" y="1557" width="0.0251%" height="15" fill="rgb(245,90,0)" fg:x="41847" fg:w="27"/><text x="39.2253%" y="1567.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.02%)</title><rect x="39.0004%" y="1573" width="0.0233%" height="15" fill="rgb(246,43,48)" fg:x="41874" fg:w="25"/><text x="39.2504%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (100 samples, 0.09%)</title><rect x="39.0256%" y="1557" width="0.0931%" height="15" fill="rgb(252,218,10)" fg:x="41901" fg:w="100"/><text x="39.2756%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (98 samples, 0.09%)</title><rect x="39.0275%" y="1541" width="0.0913%" height="15" fill="rgb(231,24,35)" fg:x="41903" fg:w="98"/><text x="39.2775%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (98 samples, 0.09%)</title><rect x="39.0275%" y="1525" width="0.0913%" height="15" fill="rgb(225,66,19)" fg:x="41903" fg:w="98"/><text x="39.2775%" y="1535.50"></text></g><g><title>malloc (94 samples, 0.09%)</title><rect x="39.0312%" y="1509" width="0.0875%" height="15" fill="rgb(214,96,51)" fg:x="41907" fg:w="94"/><text x="39.2812%" y="1519.50"></text></g><g><title>[libc.so.6] (72 samples, 0.07%)</title><rect x="39.0517%" y="1493" width="0.0671%" height="15" fill="rgb(251,151,47)" fg:x="41929" fg:w="72"/><text x="39.3017%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (382 samples, 0.36%)</title><rect x="38.7872%" y="1589" width="0.3558%" height="15" fill="rgb(236,79,14)" fg:x="41645" fg:w="382"/><text x="39.0372%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (128 samples, 0.12%)</title><rect x="39.0237%" y="1573" width="0.1192%" height="15" fill="rgb(210,205,11)" fg:x="41899" fg:w="128"/><text x="39.2737%" y="1583.50"></text></g><g><title>core::ptr::write (25 samples, 0.02%)</title><rect x="39.1197%" y="1557" width="0.0233%" height="15" fill="rgb(233,142,53)" fg:x="42002" fg:w="25"/><text x="39.3697%" y="1567.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (389 samples, 0.36%)</title><rect x="38.7853%" y="1605" width="0.3623%" height="15" fill="rgb(212,116,48)" fg:x="41643" fg:w="389"/><text x="39.0353%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.02%)</title><rect x="39.1597%" y="1525" width="0.0242%" height="15" fill="rgb(234,55,33)" fg:x="42045" fg:w="26"/><text x="39.4097%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.02%)</title><rect x="39.1597%" y="1509" width="0.0242%" height="15" fill="rgb(253,92,27)" fg:x="42045" fg:w="26"/><text x="39.4097%" y="1519.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.02%)</title><rect x="39.1662%" y="1493" width="0.0177%" height="15" fill="rgb(220,7,35)" fg:x="42052" fg:w="19"/><text x="39.4162%" y="1503.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (19 samples, 0.02%)</title><rect x="39.1662%" y="1477" width="0.0177%" height="15" fill="rgb(246,124,6)" fg:x="42052" fg:w="19"/><text x="39.4162%" y="1487.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="39.1672%" y="1461" width="0.0168%" height="15" fill="rgb(212,111,51)" fg:x="42053" fg:w="18"/><text x="39.4172%" y="1471.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (28 samples, 0.03%)</title><rect x="39.1597%" y="1541" width="0.0261%" height="15" fill="rgb(253,116,7)" fg:x="42045" fg:w="28"/><text x="39.4097%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (443 samples, 0.41%)</title><rect x="38.7806%" y="1621" width="0.4126%" height="15" fill="rgb(213,145,18)" fg:x="41638" fg:w="443"/><text x="39.0306%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (45 samples, 0.04%)</title><rect x="39.1513%" y="1605" width="0.0419%" height="15" fill="rgb(219,149,7)" fg:x="42036" fg:w="45"/><text x="39.4013%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.04%)</title><rect x="39.1532%" y="1589" width="0.0400%" height="15" fill="rgb(225,156,20)" fg:x="42038" fg:w="43"/><text x="39.4032%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.04%)</title><rect x="39.1532%" y="1573" width="0.0400%" height="15" fill="rgb(211,98,19)" fg:x="42038" fg:w="43"/><text x="39.4032%" y="1583.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (42 samples, 0.04%)</title><rect x="39.1541%" y="1557" width="0.0391%" height="15" fill="rgb(231,192,31)" fg:x="42039" fg:w="42"/><text x="39.4041%" y="1567.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (72 samples, 0.07%)</title><rect x="39.1988%" y="1621" width="0.0671%" height="15" fill="rgb(249,95,19)" fg:x="42087" fg:w="72"/><text x="39.4488%" y="1631.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (72 samples, 0.07%)</title><rect x="39.1988%" y="1605" width="0.0671%" height="15" fill="rgb(247,101,36)" fg:x="42087" fg:w="72"/><text x="39.4488%" y="1615.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (56 samples, 0.05%)</title><rect x="39.2137%" y="1589" width="0.0522%" height="15" fill="rgb(221,45,43)" fg:x="42103" fg:w="56"/><text x="39.4637%" y="1599.50"></text></g><g><title>alloc::alloc::exchange_malloc (56 samples, 0.05%)</title><rect x="39.2137%" y="1573" width="0.0522%" height="15" fill="rgb(220,42,1)" fg:x="42103" fg:w="56"/><text x="39.4637%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.05%)</title><rect x="39.2137%" y="1557" width="0.0522%" height="15" fill="rgb(236,19,24)" fg:x="42103" fg:w="56"/><text x="39.4637%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.05%)</title><rect x="39.2137%" y="1541" width="0.0522%" height="15" fill="rgb(225,192,6)" fg:x="42103" fg:w="56"/><text x="39.4637%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.05%)</title><rect x="39.2137%" y="1525" width="0.0522%" height="15" fill="rgb(242,30,19)" fg:x="42103" fg:w="56"/><text x="39.4637%" y="1535.50"></text></g><g><title>malloc (50 samples, 0.05%)</title><rect x="39.2193%" y="1509" width="0.0466%" height="15" fill="rgb(240,36,6)" fg:x="42109" fg:w="50"/><text x="39.4693%" y="1519.50"></text></g><g><title>[libc.so.6] (37 samples, 0.03%)</title><rect x="39.2314%" y="1493" width="0.0345%" height="15" fill="rgb(246,40,28)" fg:x="42122" fg:w="37"/><text x="39.4814%" y="1503.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="39.2873%" y="1493" width="0.0112%" height="15" fill="rgb(225,155,33)" fg:x="42182" fg:w="12"/><text x="39.5373%" y="1503.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (48 samples, 0.04%)</title><rect x="39.2659%" y="1589" width="0.0447%" height="15" fill="rgb(240,65,18)" fg:x="42159" fg:w="48"/><text x="39.5159%" y="1599.50"></text></g><g><title>serde::de::SeqAccess::next_element (31 samples, 0.03%)</title><rect x="39.2817%" y="1573" width="0.0289%" height="15" fill="rgb(217,0,48)" fg:x="42176" fg:w="31"/><text x="39.5317%" y="1583.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (31 samples, 0.03%)</title><rect x="39.2817%" y="1557" width="0.0289%" height="15" fill="rgb(217,80,15)" fg:x="42176" fg:w="31"/><text x="39.5317%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (27 samples, 0.03%)</title><rect x="39.2854%" y="1541" width="0.0251%" height="15" fill="rgb(253,43,51)" fg:x="42180" fg:w="27"/><text x="39.5354%" y="1551.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (27 samples, 0.03%)</title><rect x="39.2854%" y="1525" width="0.0251%" height="15" fill="rgb(246,60,4)" fg:x="42180" fg:w="27"/><text x="39.5354%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (27 samples, 0.03%)</title><rect x="39.2854%" y="1509" width="0.0251%" height="15" fill="rgb(230,40,54)" fg:x="42180" fg:w="27"/><text x="39.5354%" y="1519.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (13 samples, 0.01%)</title><rect x="39.2985%" y="1493" width="0.0121%" height="15" fill="rgb(208,20,44)" fg:x="42194" fg:w="13"/><text x="39.5485%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::next (11 samples, 0.01%)</title><rect x="39.3004%" y="1477" width="0.0102%" height="15" fill="rgb(230,22,22)" fg:x="42196" fg:w="11"/><text x="39.5504%" y="1487.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (54 samples, 0.05%)</title><rect x="39.2659%" y="1621" width="0.0503%" height="15" fill="rgb(207,57,4)" fg:x="42159" fg:w="54"/><text x="39.5159%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (54 samples, 0.05%)</title><rect x="39.2659%" y="1605" width="0.0503%" height="15" fill="rgb(242,130,33)" fg:x="42159" fg:w="54"/><text x="39.5159%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (611 samples, 0.57%)</title><rect x="38.7499%" y="1637" width="0.5691%" height="15" fill="rgb(218,66,43)" fg:x="41605" fg:w="611"/><text x="38.9999%" y="1647.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (648 samples, 0.60%)</title><rect x="38.7480%" y="1653" width="0.6035%" height="15" fill="rgb(236,105,16)" fg:x="41603" fg:w="648"/><text x="38.9980%" y="1663.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (35 samples, 0.03%)</title><rect x="39.3190%" y="1637" width="0.0326%" height="15" fill="rgb(230,46,15)" fg:x="42216" fg:w="35"/><text x="39.5690%" y="1647.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="39.3525%" y="1653" width="0.0196%" height="15" fill="rgb(251,172,40)" fg:x="42252" fg:w="21"/><text x="39.6025%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (48 samples, 0.04%)</title><rect x="39.3739%" y="1589" width="0.0447%" height="15" fill="rgb(225,217,32)" fg:x="42275" fg:w="48"/><text x="39.6239%" y="1599.50"></text></g><g><title>alloc::alloc::Global::grow_impl (48 samples, 0.04%)</title><rect x="39.3739%" y="1573" width="0.0447%" height="15" fill="rgb(243,10,29)" fg:x="42275" fg:w="48"/><text x="39.6239%" y="1583.50"></text></g><g><title>alloc::alloc::realloc (48 samples, 0.04%)</title><rect x="39.3739%" y="1557" width="0.0447%" height="15" fill="rgb(207,102,10)" fg:x="42275" fg:w="48"/><text x="39.6239%" y="1567.50"></text></g><g><title>realloc (48 samples, 0.04%)</title><rect x="39.3739%" y="1541" width="0.0447%" height="15" fill="rgb(241,125,5)" fg:x="42275" fg:w="48"/><text x="39.6239%" y="1551.50"></text></g><g><title>[libc.so.6] (43 samples, 0.04%)</title><rect x="39.3786%" y="1525" width="0.0400%" height="15" fill="rgb(230,125,29)" fg:x="42280" fg:w="43"/><text x="39.6286%" y="1535.50"></text></g><g><title>[libc.so.6] (38 samples, 0.04%)</title><rect x="39.3832%" y="1509" width="0.0354%" height="15" fill="rgb(223,65,44)" fg:x="42285" fg:w="38"/><text x="39.6332%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (76 samples, 0.07%)</title><rect x="39.3721%" y="1605" width="0.0708%" height="15" fill="rgb(224,188,28)" fg:x="42273" fg:w="76"/><text x="39.6221%" y="1615.50"></text></g><g><title>malloc (24 samples, 0.02%)</title><rect x="39.4205%" y="1589" width="0.0224%" height="15" fill="rgb(254,197,27)" fg:x="42325" fg:w="24"/><text x="39.6705%" y="1599.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="39.4261%" y="1573" width="0.0168%" height="15" fill="rgb(220,200,25)" fg:x="42331" fg:w="18"/><text x="39.6761%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (77 samples, 0.07%)</title><rect x="39.3721%" y="1637" width="0.0717%" height="15" fill="rgb(239,225,54)" fg:x="42273" fg:w="77"/><text x="39.6221%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (77 samples, 0.07%)</title><rect x="39.3721%" y="1621" width="0.0717%" height="15" fill="rgb(211,59,40)" fg:x="42273" fg:w="77"/><text x="39.6221%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (99 samples, 0.09%)</title><rect x="39.3721%" y="1653" width="0.0922%" height="15" fill="rgb(213,176,46)" fg:x="42273" fg:w="99"/><text x="39.6221%" y="1663.50"></text></g><g><title>core::ptr::write (22 samples, 0.02%)</title><rect x="39.4438%" y="1637" width="0.0205%" height="15" fill="rgb(226,99,4)" fg:x="42350" fg:w="22"/><text x="39.6938%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (797 samples, 0.74%)</title><rect x="38.7229%" y="1669" width="0.7423%" height="15" fill="rgb(239,203,43)" fg:x="41576" fg:w="797"/><text x="38.9729%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (798 samples, 0.74%)</title><rect x="38.7229%" y="1685" width="0.7432%" height="15" fill="rgb(246,1,45)" fg:x="41576" fg:w="798"/><text x="38.9729%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (829 samples, 0.77%)</title><rect x="38.7220%" y="1701" width="0.7721%" height="15" fill="rgb(231,42,52)" fg:x="41575" fg:w="829"/><text x="38.9720%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (28 samples, 0.03%)</title><rect x="39.4680%" y="1685" width="0.0261%" height="15" fill="rgb(240,13,50)" fg:x="42376" fg:w="28"/><text x="39.7180%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.03%)</title><rect x="39.4680%" y="1669" width="0.0261%" height="15" fill="rgb(225,81,14)" fg:x="42376" fg:w="28"/><text x="39.7180%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="39.4680%" y="1653" width="0.0261%" height="15" fill="rgb(216,182,23)" fg:x="42376" fg:w="28"/><text x="39.7180%" y="1663.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="39.4680%" y="1637" width="0.0261%" height="15" fill="rgb(233,137,19)" fg:x="42376" fg:w="28"/><text x="39.7180%" y="1647.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (25 samples, 0.02%)</title><rect x="39.4708%" y="1621" width="0.0233%" height="15" fill="rgb(242,61,46)" fg:x="42379" fg:w="25"/><text x="39.7208%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.02%)</title><rect x="39.4708%" y="1605" width="0.0233%" height="15" fill="rgb(221,168,51)" fg:x="42379" fg:w="25"/><text x="39.7208%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.02%)</title><rect x="39.4708%" y="1589" width="0.0233%" height="15" fill="rgb(238,48,15)" fg:x="42379" fg:w="25"/><text x="39.7208%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (24 samples, 0.02%)</title><rect x="39.4717%" y="1573" width="0.0224%" height="15" fill="rgb(216,13,16)" fg:x="42380" fg:w="24"/><text x="39.7217%" y="1583.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (24 samples, 0.02%)</title><rect x="39.4717%" y="1557" width="0.0224%" height="15" fill="rgb(223,185,34)" fg:x="42380" fg:w="24"/><text x="39.7217%" y="1567.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="39.4745%" y="1541" width="0.0196%" height="15" fill="rgb(228,94,42)" fg:x="42383" fg:w="21"/><text x="39.7245%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (860 samples, 0.80%)</title><rect x="38.7145%" y="1717" width="0.8010%" height="15" fill="rgb(218,166,43)" fg:x="41567" fg:w="860"/><text x="38.9645%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (23 samples, 0.02%)</title><rect x="39.4941%" y="1701" width="0.0214%" height="15" fill="rgb(232,30,50)" fg:x="42404" fg:w="23"/><text x="39.7441%" y="1711.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="39.4941%" y="1685" width="0.0214%" height="15" fill="rgb(245,206,45)" fg:x="42404" fg:w="23"/><text x="39.7441%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="39.4959%" y="1669" width="0.0196%" height="15" fill="rgb(220,56,22)" fg:x="42406" fg:w="21"/><text x="39.7459%" y="1679.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="39.4959%" y="1653" width="0.0196%" height="15" fill="rgb(239,129,38)" fg:x="42406" fg:w="21"/><text x="39.7459%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="39.4959%" y="1637" width="0.0196%" height="15" fill="rgb(207,68,41)" fg:x="42406" fg:w="21"/><text x="39.7459%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="39.4959%" y="1621" width="0.0196%" height="15" fill="rgb(221,21,7)" fg:x="42406" fg:w="21"/><text x="39.7459%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="39.4959%" y="1605" width="0.0196%" height="15" fill="rgb(240,33,25)" fg:x="42406" fg:w="21"/><text x="39.7459%" y="1615.50"></text></g><g><title>malloc (21 samples, 0.02%)</title><rect x="39.4959%" y="1589" width="0.0196%" height="15" fill="rgb(242,119,10)" fg:x="42406" fg:w="21"/><text x="39.7459%" y="1599.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="39.4997%" y="1573" width="0.0158%" height="15" fill="rgb(214,149,40)" fg:x="42410" fg:w="17"/><text x="39.7497%" y="1583.50"></text></g><g><title>bcs::de::from_bytes_seed (879 samples, 0.82%)</title><rect x="38.7015%" y="1733" width="0.8187%" height="15" fill="rgb(228,25,36)" fg:x="41553" fg:w="879"/><text x="38.9515%" y="1743.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (2,960 samples, 2.76%)</title><rect x="36.7670%" y="1765" width="2.7569%" height="15" fill="rgb(222,59,15)" fg:x="39476" fg:w="2960"/><text x="37.0170%" y="1775.50">&lt;m..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (886 samples, 0.83%)</title><rect x="38.6987%" y="1749" width="0.8252%" height="15" fill="rgb(218,170,0)" fg:x="41550" fg:w="886"/><text x="38.9487%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (2,992 samples, 2.79%)</title><rect x="36.7521%" y="1781" width="2.7867%" height="15" fill="rgb(232,173,23)" fg:x="39460" fg:w="2992"/><text x="37.0021%" y="1791.50">mo..</text></g><g><title>move_vm_types::values::values_impl::GlobalValue::view (16 samples, 0.01%)</title><rect x="39.5239%" y="1765" width="0.0149%" height="15" fill="rgb(218,116,1)" fg:x="42436" fg:w="16"/><text x="39.7739%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (22 samples, 0.02%)</title><rect x="39.5388%" y="1781" width="0.0205%" height="15" fill="rgb(207,34,4)" fg:x="42452" fg:w="22"/><text x="39.7888%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (3,045 samples, 2.84%)</title><rect x="36.7474%" y="1797" width="2.8360%" height="15" fill="rgb(229,54,52)" fg:x="39455" fg:w="3045"/><text x="36.9974%" y="1807.50">mo..</text></g><g><title>move_vm_types::values::values_impl::Value::bool (17 samples, 0.02%)</title><rect x="39.5677%" y="1781" width="0.0158%" height="15" fill="rgb(211,86,23)" fg:x="42483" fg:w="17"/><text x="39.8177%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (133 samples, 0.12%)</title><rect x="39.5835%" y="1797" width="0.1239%" height="15" fill="rgb(254,153,34)" fg:x="42500" fg:w="133"/><text x="39.8335%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (20 samples, 0.02%)</title><rect x="39.7074%" y="1797" width="0.0186%" height="15" fill="rgb(219,220,14)" fg:x="42633" fg:w="20"/><text x="39.9574%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (60 samples, 0.06%)</title><rect x="39.7502%" y="1781" width="0.0559%" height="15" fill="rgb(247,8,26)" fg:x="42679" fg:w="60"/><text x="40.0002%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (75 samples, 0.07%)</title><rect x="39.8061%" y="1781" width="0.0699%" height="15" fill="rgb(213,129,42)" fg:x="42739" fg:w="75"/><text x="40.0561%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (25 samples, 0.02%)</title><rect x="39.8527%" y="1765" width="0.0233%" height="15" fill="rgb(225,95,41)" fg:x="42789" fg:w="25"/><text x="40.1027%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (16 samples, 0.01%)</title><rect x="39.9123%" y="1765" width="0.0149%" height="15" fill="rgb(215,134,24)" fg:x="42853" fg:w="16"/><text x="40.1623%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (33 samples, 0.03%)</title><rect x="39.9272%" y="1765" width="0.0307%" height="15" fill="rgb(235,23,54)" fg:x="42869" fg:w="33"/><text x="40.1772%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (18 samples, 0.02%)</title><rect x="39.9607%" y="1765" width="0.0168%" height="15" fill="rgb(229,96,31)" fg:x="42905" fg:w="18"/><text x="40.2107%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (312 samples, 0.29%)</title><rect x="39.7260%" y="1797" width="0.2906%" height="15" fill="rgb(206,111,12)" fg:x="42653" fg:w="312"/><text x="39.9760%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (151 samples, 0.14%)</title><rect x="39.8759%" y="1781" width="0.1406%" height="15" fill="rgb(222,177,8)" fg:x="42814" fg:w="151"/><text x="40.1259%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (42 samples, 0.04%)</title><rect x="39.9775%" y="1765" width="0.0391%" height="15" fill="rgb(251,36,52)" fg:x="42923" fg:w="42"/><text x="40.2275%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (21 samples, 0.02%)</title><rect x="39.9970%" y="1749" width="0.0196%" height="15" fill="rgb(216,182,29)" fg:x="42944" fg:w="21"/><text x="40.2470%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (49 samples, 0.05%)</title><rect x="40.1544%" y="1717" width="0.0456%" height="15" fill="rgb(241,145,50)" fg:x="43113" fg:w="49"/><text x="40.4044%" y="1727.50"></text></g><g><title>alloc::alloc::Global::grow_impl (49 samples, 0.05%)</title><rect x="40.1544%" y="1701" width="0.0456%" height="15" fill="rgb(231,71,35)" fg:x="43113" fg:w="49"/><text x="40.4044%" y="1711.50"></text></g><g><title>alloc::alloc::realloc (49 samples, 0.05%)</title><rect x="40.1544%" y="1685" width="0.0456%" height="15" fill="rgb(218,22,17)" fg:x="43113" fg:w="49"/><text x="40.4044%" y="1695.50"></text></g><g><title>realloc (46 samples, 0.04%)</title><rect x="40.1572%" y="1669" width="0.0428%" height="15" fill="rgb(225,227,6)" fg:x="43116" fg:w="46"/><text x="40.4072%" y="1679.50"></text></g><g><title>[libc.so.6] (38 samples, 0.04%)</title><rect x="40.1647%" y="1653" width="0.0354%" height="15" fill="rgb(224,204,17)" fg:x="43124" fg:w="38"/><text x="40.4147%" y="1663.50"></text></g><g><title>[libc.so.6] (32 samples, 0.03%)</title><rect x="40.1703%" y="1637" width="0.0298%" height="15" fill="rgb(227,61,28)" fg:x="43130" fg:w="32"/><text x="40.4203%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (74 samples, 0.07%)</title><rect x="40.1358%" y="1765" width="0.0689%" height="15" fill="rgb(242,148,23)" fg:x="43093" fg:w="74"/><text x="40.3858%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (67 samples, 0.06%)</title><rect x="40.1423%" y="1749" width="0.0624%" height="15" fill="rgb(237,105,33)" fg:x="43100" fg:w="67"/><text x="40.3923%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 0.06%)</title><rect x="40.1470%" y="1733" width="0.0577%" height="15" fill="rgb(238,218,40)" fg:x="43105" fg:w="62"/><text x="40.3970%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (214 samples, 0.20%)</title><rect x="40.0166%" y="1797" width="0.1993%" height="15" fill="rgb(209,126,11)" fg:x="42965" fg:w="214"/><text x="40.2666%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (97 samples, 0.09%)</title><rect x="40.1255%" y="1781" width="0.0903%" height="15" fill="rgb(245,90,11)" fg:x="43082" fg:w="97"/><text x="40.3755%" y="1791.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="40.2047%" y="1765" width="0.0112%" height="15" fill="rgb(211,195,10)" fg:x="43167" fg:w="12"/><text x="40.4547%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Function::code (12 samples, 0.01%)</title><rect x="40.2159%" y="1797" width="0.0112%" height="15" fill="rgb(231,45,45)" fg:x="43179" fg:w="12"/><text x="40.4659%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (24 samples, 0.02%)</title><rect x="40.2420%" y="1765" width="0.0224%" height="15" fill="rgb(246,100,43)" fg:x="43207" fg:w="24"/><text x="40.4920%" y="1775.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.02%)</title><rect x="40.2420%" y="1749" width="0.0224%" height="15" fill="rgb(241,193,8)" fg:x="43207" fg:w="24"/><text x="40.4920%" y="1759.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24 samples, 0.02%)</title><rect x="40.2420%" y="1733" width="0.0224%" height="15" fill="rgb(208,76,19)" fg:x="43207" fg:w="24"/><text x="40.4920%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (49 samples, 0.05%)</title><rect x="40.2271%" y="1797" width="0.0456%" height="15" fill="rgb(223,69,40)" fg:x="43191" fg:w="49"/><text x="40.4771%" y="1807.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (34 samples, 0.03%)</title><rect x="40.2410%" y="1781" width="0.0317%" height="15" fill="rgb(207,120,39)" fg:x="43206" fg:w="34"/><text x="40.4910%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (25 samples, 0.02%)</title><rect x="40.2783%" y="1797" width="0.0233%" height="15" fill="rgb(212,209,28)" fg:x="43246" fg:w="25"/><text x="40.5283%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_type (28 samples, 0.03%)</title><rect x="40.3016%" y="1797" width="0.0261%" height="15" fill="rgb(246,82,29)" fg:x="43271" fg:w="28"/><text x="40.5516%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="40.3901%" y="1653" width="0.0270%" height="15" fill="rgb(239,6,40)" fg:x="43366" fg:w="29"/><text x="40.6401%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (27 samples, 0.03%)</title><rect x="40.3919%" y="1637" width="0.0251%" height="15" fill="rgb(228,181,35)" fg:x="43368" fg:w="27"/><text x="40.6419%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="40.3919%" y="1621" width="0.0251%" height="15" fill="rgb(238,151,2)" fg:x="43368" fg:w="27"/><text x="40.6419%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="40.3919%" y="1605" width="0.0251%" height="15" fill="rgb(236,94,18)" fg:x="43368" fg:w="27"/><text x="40.6419%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="40.3919%" y="1589" width="0.0251%" height="15" fill="rgb(208,38,14)" fg:x="43368" fg:w="27"/><text x="40.6419%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.02%)</title><rect x="40.3984%" y="1573" width="0.0186%" height="15" fill="rgb(234,215,27)" fg:x="43375" fg:w="20"/><text x="40.6484%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type::{{closure}} (18 samples, 0.02%)</title><rect x="40.4003%" y="1557" width="0.0168%" height="15" fill="rgb(254,211,53)" fg:x="43377" fg:w="18"/><text x="40.6503%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (18 samples, 0.02%)</title><rect x="40.4003%" y="1541" width="0.0168%" height="15" fill="rgb(216,175,11)" fg:x="43377" fg:w="18"/><text x="40.6503%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (18 samples, 0.02%)</title><rect x="40.4003%" y="1525" width="0.0168%" height="15" fill="rgb(246,179,26)" fg:x="43377" fg:w="18"/><text x="40.6503%" y="1535.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (16 samples, 0.01%)</title><rect x="40.4022%" y="1509" width="0.0149%" height="15" fill="rgb(249,19,52)" fg:x="43379" fg:w="16"/><text x="40.6522%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (14 samples, 0.01%)</title><rect x="40.4040%" y="1493" width="0.0130%" height="15" fill="rgb(230,42,52)" fg:x="43381" fg:w="14"/><text x="40.6540%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (95 samples, 0.09%)</title><rect x="40.3444%" y="1781" width="0.0885%" height="15" fill="rgb(221,171,0)" fg:x="43317" fg:w="95"/><text x="40.5944%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (95 samples, 0.09%)</title><rect x="40.3444%" y="1765" width="0.0885%" height="15" fill="rgb(222,177,40)" fg:x="43317" fg:w="95"/><text x="40.5944%" y="1775.50"></text></g><g><title>core::iter::adapters::try_process (92 samples, 0.09%)</title><rect x="40.3472%" y="1749" width="0.0857%" height="15" fill="rgb(247,34,16)" fg:x="43320" fg:w="92"/><text x="40.5972%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (79 samples, 0.07%)</title><rect x="40.3593%" y="1733" width="0.0736%" height="15" fill="rgb(213,217,37)" fg:x="43333" fg:w="79"/><text x="40.6093%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (79 samples, 0.07%)</title><rect x="40.3593%" y="1717" width="0.0736%" height="15" fill="rgb(231,189,24)" fg:x="43333" fg:w="79"/><text x="40.6093%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (79 samples, 0.07%)</title><rect x="40.3593%" y="1701" width="0.0736%" height="15" fill="rgb(214,22,9)" fg:x="43333" fg:w="79"/><text x="40.6093%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (73 samples, 0.07%)</title><rect x="40.3649%" y="1685" width="0.0680%" height="15" fill="rgb(212,70,22)" fg:x="43339" fg:w="73"/><text x="40.6149%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (64 samples, 0.06%)</title><rect x="40.3733%" y="1669" width="0.0596%" height="15" fill="rgb(249,64,51)" fg:x="43348" fg:w="64"/><text x="40.6233%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 0.02%)</title><rect x="40.4171%" y="1653" width="0.0158%" height="15" fill="rgb(249,148,20)" fg:x="43395" fg:w="17"/><text x="40.6671%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="40.4171%" y="1637" width="0.0158%" height="15" fill="rgb(246,46,48)" fg:x="43395" fg:w="17"/><text x="40.6671%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="40.4171%" y="1621" width="0.0158%" height="15" fill="rgb(217,34,48)" fg:x="43395" fg:w="17"/><text x="40.6671%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="40.4171%" y="1605" width="0.0158%" height="15" fill="rgb(222,45,26)" fg:x="43395" fg:w="17"/><text x="40.6671%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="40.4171%" y="1589" width="0.0158%" height="15" fill="rgb(230,201,36)" fg:x="43395" fg:w="17"/><text x="40.6671%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="40.4171%" y="1573" width="0.0158%" height="15" fill="rgb(217,30,43)" fg:x="43395" fg:w="17"/><text x="40.6671%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="40.4171%" y="1557" width="0.0158%" height="15" fill="rgb(230,197,40)" fg:x="43395" fg:w="17"/><text x="40.6671%" y="1567.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="40.4199%" y="1541" width="0.0130%" height="15" fill="rgb(239,181,18)" fg:x="43398" fg:w="14"/><text x="40.6699%" y="1551.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="40.4562%" y="1765" width="0.0102%" height="15" fill="rgb(222,60,39)" fg:x="43437" fg:w="11"/><text x="40.7062%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (43 samples, 0.04%)</title><rect x="40.4366%" y="1781" width="0.0400%" height="15" fill="rgb(210,60,22)" fg:x="43416" fg:w="43"/><text x="40.6866%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (163 samples, 0.15%)</title><rect x="40.3277%" y="1797" width="0.1518%" height="15" fill="rgb(239,213,48)" fg:x="43299" fg:w="163"/><text x="40.5777%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (49 samples, 0.05%)</title><rect x="40.4795%" y="1797" width="0.0456%" height="15" fill="rgb(253,214,23)" fg:x="43462" fg:w="49"/><text x="40.7295%" y="1807.50"></text></g><g><title>move_vm_runtime::tracing::trace (126 samples, 0.12%)</title><rect x="40.5251%" y="1797" width="0.1174%" height="15" fill="rgb(211,98,45)" fg:x="43511" fg:w="126"/><text x="40.7751%" y="1807.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="40.6192%" y="1781" width="0.0233%" height="15" fill="rgb(239,130,44)" fg:x="43612" fg:w="25"/><text x="40.8692%" y="1791.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (25 samples, 0.02%)</title><rect x="40.6192%" y="1765" width="0.0233%" height="15" fill="rgb(222,181,35)" fg:x="43612" fg:w="25"/><text x="40.8692%" y="1775.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (25 samples, 0.02%)</title><rect x="40.6192%" y="1749" width="0.0233%" height="15" fill="rgb(219,219,49)" fg:x="43612" fg:w="25"/><text x="40.8692%" y="1759.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (25 samples, 0.02%)</title><rect x="40.6192%" y="1733" width="0.0233%" height="15" fill="rgb(227,161,51)" fg:x="43612" fg:w="25"/><text x="40.8692%" y="1743.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (25 samples, 0.02%)</title><rect x="40.6192%" y="1717" width="0.0233%" height="15" fill="rgb(239,112,27)" fg:x="43612" fg:w="25"/><text x="40.8692%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::cast_u128 (15 samples, 0.01%)</title><rect x="40.6425%" y="1797" width="0.0140%" height="15" fill="rgb(248,122,18)" fg:x="43637" fg:w="15"/><text x="40.8925%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (13 samples, 0.01%)</title><rect x="40.6564%" y="1797" width="0.0121%" height="15" fill="rgb(245,130,23)" fg:x="43652" fg:w="13"/><text x="40.9064%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.02%)</title><rect x="40.6890%" y="1781" width="0.0158%" height="15" fill="rgb(211,225,28)" fg:x="43687" fg:w="17"/><text x="40.9390%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (71 samples, 0.07%)</title><rect x="40.6685%" y="1797" width="0.0661%" height="15" fill="rgb(242,105,44)" fg:x="43665" fg:w="71"/><text x="40.9185%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (29 samples, 0.03%)</title><rect x="40.7077%" y="1781" width="0.0270%" height="15" fill="rgb(216,183,46)" fg:x="43707" fg:w="29"/><text x="40.9577%" y="1791.50"></text></g><g><title>core::mem::replace (38 samples, 0.04%)</title><rect x="40.8716%" y="1765" width="0.0354%" height="15" fill="rgb(227,112,9)" fg:x="43883" fg:w="38"/><text x="41.1216%" y="1775.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="40.8949%" y="1749" width="0.0121%" height="15" fill="rgb(244,21,0)" fg:x="43908" fg:w="13"/><text x="41.1449%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (13 samples, 0.01%)</title><rect x="40.8949%" y="1733" width="0.0121%" height="15" fill="rgb(236,185,14)" fg:x="43908" fg:w="13"/><text x="41.1449%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (187 samples, 0.17%)</title><rect x="40.7347%" y="1797" width="0.1742%" height="15" fill="rgb(236,170,30)" fg:x="43736" fg:w="187"/><text x="40.9847%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (96 samples, 0.09%)</title><rect x="40.8194%" y="1781" width="0.0894%" height="15" fill="rgb(209,198,51)" fg:x="43827" fg:w="96"/><text x="41.0694%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (16 samples, 0.01%)</title><rect x="40.9088%" y="1797" width="0.0149%" height="15" fill="rgb(205,171,26)" fg:x="43923" fg:w="16"/><text x="41.1588%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (17 samples, 0.02%)</title><rect x="40.9452%" y="1765" width="0.0158%" height="15" fill="rgb(246,41,49)" fg:x="43962" fg:w="17"/><text x="41.1952%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="40.9759%" y="1733" width="0.0186%" height="15" fill="rgb(240,229,12)" fg:x="43995" fg:w="20"/><text x="41.2259%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.02%)</title><rect x="40.9759%" y="1717" width="0.0186%" height="15" fill="rgb(212,8,54)" fg:x="43995" fg:w="20"/><text x="41.2259%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.02%)</title><rect x="40.9759%" y="1701" width="0.0186%" height="15" fill="rgb(230,114,13)" fg:x="43995" fg:w="20"/><text x="41.2259%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.02%)</title><rect x="40.9759%" y="1685" width="0.0186%" height="15" fill="rgb(229,130,28)" fg:x="43995" fg:w="20"/><text x="41.2259%" y="1695.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.01%)</title><rect x="40.9833%" y="1669" width="0.0112%" height="15" fill="rgb(206,139,15)" fg:x="44003" fg:w="12"/><text x="41.2333%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="40.9833%" y="1653" width="0.0112%" height="15" fill="rgb(241,188,35)" fg:x="44003" fg:w="12"/><text x="41.2333%" y="1663.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="40.9945%" y="1733" width="0.0140%" height="15" fill="rgb(208,224,26)" fg:x="44015" fg:w="15"/><text x="41.2445%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="40.9945%" y="1717" width="0.0140%" height="15" fill="rgb(251,131,28)" fg:x="44015" fg:w="15"/><text x="41.2445%" y="1727.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="40.9945%" y="1701" width="0.0140%" height="15" fill="rgb(208,153,1)" fg:x="44015" fg:w="15"/><text x="41.2445%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="40.9945%" y="1685" width="0.0140%" height="15" fill="rgb(234,33,36)" fg:x="44015" fg:w="15"/><text x="41.2445%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="40.9945%" y="1669" width="0.0140%" height="15" fill="rgb(246,42,29)" fg:x="44015" fg:w="15"/><text x="41.2445%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="40.9945%" y="1653" width="0.0140%" height="15" fill="rgb(251,114,16)" fg:x="44015" fg:w="15"/><text x="41.2445%" y="1663.50"></text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="40.9945%" y="1637" width="0.0140%" height="15" fill="rgb(233,13,38)" fg:x="44015" fg:w="15"/><text x="41.2445%" y="1647.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="40.9982%" y="1621" width="0.0102%" height="15" fill="rgb(247,120,19)" fg:x="44019" fg:w="11"/><text x="41.2482%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (40 samples, 0.04%)</title><rect x="40.9722%" y="1749" width="0.0373%" height="15" fill="rgb(205,11,16)" fg:x="43991" fg:w="40"/><text x="41.2222%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::read_ref (54 samples, 0.05%)</title><rect x="40.9610%" y="1765" width="0.0503%" height="15" fill="rgb(228,185,19)" fg:x="43979" fg:w="54"/><text x="41.2110%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="41.0243%" y="1749" width="0.0102%" height="15" fill="rgb(239,88,52)" fg:x="44047" fg:w="11"/><text x="41.2743%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::container (21 samples, 0.02%)</title><rect x="41.0383%" y="1749" width="0.0196%" height="15" fill="rgb(219,23,1)" fg:x="44062" fg:w="21"/><text x="41.2883%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (163 samples, 0.15%)</title><rect x="40.9237%" y="1797" width="0.1518%" height="15" fill="rgb(253,177,16)" fg:x="43939" fg:w="163"/><text x="41.1737%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (152 samples, 0.14%)</title><rect x="40.9340%" y="1781" width="0.1416%" height="15" fill="rgb(225,150,40)" fg:x="43950" fg:w="152"/><text x="41.1840%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (69 samples, 0.06%)</title><rect x="41.0113%" y="1765" width="0.0643%" height="15" fill="rgb(208,108,30)" fg:x="44033" fg:w="69"/><text x="41.2613%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (19 samples, 0.02%)</title><rect x="41.0579%" y="1749" width="0.0177%" height="15" fill="rgb(214,122,4)" fg:x="44083" fg:w="19"/><text x="41.3079%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="41.0858%" y="1781" width="0.0130%" height="15" fill="rgb(229,74,37)" fg:x="44113" fg:w="14"/><text x="41.3358%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (70 samples, 0.07%)</title><rect x="41.0793%" y="1797" width="0.0652%" height="15" fill="rgb(233,61,41)" fg:x="44106" fg:w="70"/><text x="41.3293%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (49 samples, 0.05%)</title><rect x="41.0988%" y="1781" width="0.0456%" height="15" fill="rgb(238,191,5)" fg:x="44127" fg:w="49"/><text x="41.3488%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (13 samples, 0.01%)</title><rect x="41.1324%" y="1765" width="0.0121%" height="15" fill="rgb(233,78,24)" fg:x="44163" fg:w="13"/><text x="41.3824%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (28 samples, 0.03%)</title><rect x="41.1640%" y="1781" width="0.0261%" height="15" fill="rgb(211,142,8)" fg:x="44197" fg:w="28"/><text x="41.4140%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="41.2097%" y="1749" width="0.0121%" height="15" fill="rgb(253,38,53)" fg:x="44246" fg:w="13"/><text x="41.4597%" y="1759.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (71 samples, 0.07%)</title><rect x="41.2618%" y="1637" width="0.0661%" height="15" fill="rgb(234,63,51)" fg:x="44302" fg:w="71"/><text x="41.5118%" y="1647.50"></text></g><g><title>serde::de::SeqAccess::next_element (54 samples, 0.05%)</title><rect x="41.2777%" y="1621" width="0.0503%" height="15" fill="rgb(205,23,31)" fg:x="44319" fg:w="54"/><text x="41.5277%" y="1631.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (54 samples, 0.05%)</title><rect x="41.2777%" y="1605" width="0.0503%" height="15" fill="rgb(210,184,50)" fg:x="44319" fg:w="54"/><text x="41.5277%" y="1615.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (53 samples, 0.05%)</title><rect x="41.2786%" y="1589" width="0.0494%" height="15" fill="rgb(222,112,26)" fg:x="44320" fg:w="53"/><text x="41.5286%" y="1599.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (53 samples, 0.05%)</title><rect x="41.2786%" y="1573" width="0.0494%" height="15" fill="rgb(250,98,18)" fg:x="44320" fg:w="53"/><text x="41.5286%" y="1583.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (53 samples, 0.05%)</title><rect x="41.2786%" y="1557" width="0.0494%" height="15" fill="rgb(250,34,12)" fg:x="44320" fg:w="53"/><text x="41.5286%" y="1567.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (44 samples, 0.04%)</title><rect x="41.2870%" y="1541" width="0.0410%" height="15" fill="rgb(236,141,30)" fg:x="44329" fg:w="44"/><text x="41.5370%" y="1551.50"></text></g><g><title>bcs::de::Deserializer::next (22 samples, 0.02%)</title><rect x="41.3075%" y="1525" width="0.0205%" height="15" fill="rgb(246,134,38)" fg:x="44351" fg:w="22"/><text x="41.5575%" y="1535.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (20 samples, 0.02%)</title><rect x="41.3093%" y="1509" width="0.0186%" height="15" fill="rgb(240,114,4)" fg:x="44353" fg:w="20"/><text x="41.5593%" y="1519.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (20 samples, 0.02%)</title><rect x="41.3093%" y="1493" width="0.0186%" height="15" fill="rgb(243,113,39)" fg:x="44353" fg:w="20"/><text x="41.5593%" y="1503.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (20 samples, 0.02%)</title><rect x="41.3093%" y="1477" width="0.0186%" height="15" fill="rgb(239,215,4)" fg:x="44353" fg:w="20"/><text x="41.5593%" y="1487.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (20 samples, 0.02%)</title><rect x="41.3093%" y="1461" width="0.0186%" height="15" fill="rgb(236,229,45)" fg:x="44353" fg:w="20"/><text x="41.5593%" y="1471.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (20 samples, 0.02%)</title><rect x="41.3093%" y="1445" width="0.0186%" height="15" fill="rgb(242,2,6)" fg:x="44353" fg:w="20"/><text x="41.5593%" y="1455.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (20 samples, 0.02%)</title><rect x="41.3093%" y="1429" width="0.0186%" height="15" fill="rgb(239,108,21)" fg:x="44353" fg:w="20"/><text x="41.5593%" y="1439.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (78 samples, 0.07%)</title><rect x="41.2572%" y="1685" width="0.0726%" height="15" fill="rgb(215,168,34)" fg:x="44297" fg:w="78"/><text x="41.5072%" y="1695.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (73 samples, 0.07%)</title><rect x="41.2618%" y="1669" width="0.0680%" height="15" fill="rgb(238,31,17)" fg:x="44302" fg:w="73"/><text x="41.5118%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (73 samples, 0.07%)</title><rect x="41.2618%" y="1653" width="0.0680%" height="15" fill="rgb(220,133,11)" fg:x="44302" fg:w="73"/><text x="41.5118%" y="1663.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (111 samples, 0.10%)</title><rect x="41.2292%" y="1733" width="0.1034%" height="15" fill="rgb(212,158,23)" fg:x="44267" fg:w="111"/><text x="41.4792%" y="1743.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (87 samples, 0.08%)</title><rect x="41.2516%" y="1717" width="0.0810%" height="15" fill="rgb(223,172,7)" fg:x="44291" fg:w="87"/><text x="41.5016%" y="1727.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (87 samples, 0.08%)</title><rect x="41.2516%" y="1701" width="0.0810%" height="15" fill="rgb(244,3,52)" fg:x="44291" fg:w="87"/><text x="41.5016%" y="1711.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u128&gt;::deserialize (23 samples, 0.02%)</title><rect x="41.3335%" y="1733" width="0.0214%" height="15" fill="rgb(207,69,27)" fg:x="44379" fg:w="23"/><text x="41.5835%" y="1743.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u128 (23 samples, 0.02%)</title><rect x="41.3335%" y="1717" width="0.0214%" height="15" fill="rgb(213,136,45)" fg:x="44379" fg:w="23"/><text x="41.5835%" y="1727.50"></text></g><g><title>bcs::de::Deserializer::parse_u128 (23 samples, 0.02%)</title><rect x="41.3335%" y="1701" width="0.0214%" height="15" fill="rgb(218,79,17)" fg:x="44379" fg:w="23"/><text x="41.5835%" y="1711.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (16 samples, 0.01%)</title><rect x="41.3401%" y="1685" width="0.0149%" height="15" fill="rgb(216,106,36)" fg:x="44386" fg:w="16"/><text x="41.5901%" y="1695.50"></text></g><g><title>bcs::de::Deserializer::next (16 samples, 0.01%)</title><rect x="41.3401%" y="1669" width="0.0149%" height="15" fill="rgb(251,27,45)" fg:x="44386" fg:w="16"/><text x="41.5901%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (150 samples, 0.14%)</title><rect x="41.2218%" y="1749" width="0.1397%" height="15" fill="rgb(232,21,34)" fg:x="44259" fg:w="150"/><text x="41.4718%" y="1759.50"></text></g><g><title>bcs::de::from_bytes_seed (187 samples, 0.17%)</title><rect x="41.1901%" y="1765" width="0.1742%" height="15" fill="rgb(249,191,16)" fg:x="44225" fg:w="187"/><text x="41.4401%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (234 samples, 0.22%)</title><rect x="41.1473%" y="1797" width="0.2179%" height="15" fill="rgb(224,88,20)" fg:x="44179" fg:w="234"/><text x="41.3973%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (188 samples, 0.18%)</title><rect x="41.1901%" y="1781" width="0.1751%" height="15" fill="rgb(237,93,27)" fg:x="44225" fg:w="188"/><text x="41.4401%" y="1791.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="41.4183%" y="1749" width="0.0112%" height="15" fill="rgb(226,198,48)" fg:x="44470" fg:w="12"/><text x="41.6683%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::equals (71 samples, 0.07%)</title><rect x="41.3652%" y="1797" width="0.0661%" height="15" fill="rgb(207,162,53)" fg:x="44413" fg:w="71"/><text x="41.6152%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::equals (64 samples, 0.06%)</title><rect x="41.3717%" y="1781" width="0.0596%" height="15" fill="rgb(207,169,9)" fg:x="44420" fg:w="64"/><text x="41.6217%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Container::equals (41 samples, 0.04%)</title><rect x="41.3932%" y="1765" width="0.0382%" height="15" fill="rgb(224,166,46)" fg:x="44443" fg:w="41"/><text x="41.6432%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (10,064 samples, 9.37%)</title><rect x="32.0673%" y="1829" width="9.3734%" height="15" fill="rgb(233,26,6)" fg:x="34430" fg:w="10064"/><text x="32.3173%" y="1839.50">move_vm_runti..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (10,022 samples, 9.33%)</title><rect x="32.1064%" y="1813" width="9.3343%" height="15" fill="rgb(218,106,45)" fg:x="34472" fg:w="10022"/><text x="32.3564%" y="1823.50">move_vm_runti..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="41.4816%" y="1781" width="0.0186%" height="15" fill="rgb(240,217,4)" fg:x="44538" fg:w="20"/><text x="41.7316%" y="1791.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (25 samples, 0.02%)</title><rect x="41.5086%" y="1781" width="0.0233%" height="15" fill="rgb(246,171,10)" fg:x="44567" fg:w="25"/><text x="41.7586%" y="1791.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (25 samples, 0.02%)</title><rect x="41.5086%" y="1765" width="0.0233%" height="15" fill="rgb(223,197,30)" fg:x="44567" fg:w="25"/><text x="41.7586%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="41.5850%" y="1637" width="0.0140%" height="15" fill="rgb(207,92,16)" fg:x="44649" fg:w="15"/><text x="41.8350%" y="1647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.02%)</title><rect x="41.6130%" y="1621" width="0.0177%" height="15" fill="rgb(211,6,44)" fg:x="44679" fg:w="19"/><text x="41.8630%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (78 samples, 0.07%)</title><rect x="41.5627%" y="1685" width="0.0726%" height="15" fill="rgb(219,139,2)" fg:x="44625" fg:w="78"/><text x="41.8127%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (78 samples, 0.07%)</title><rect x="41.5627%" y="1669" width="0.0726%" height="15" fill="rgb(224,103,21)" fg:x="44625" fg:w="78"/><text x="41.8127%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (78 samples, 0.07%)</title><rect x="41.5627%" y="1653" width="0.0726%" height="15" fill="rgb(254,110,48)" fg:x="44625" fg:w="78"/><text x="41.8127%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (39 samples, 0.04%)</title><rect x="41.5990%" y="1637" width="0.0363%" height="15" fill="rgb(212,88,19)" fg:x="44664" fg:w="39"/><text x="41.8490%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (25 samples, 0.02%)</title><rect x="41.6353%" y="1685" width="0.0233%" height="15" fill="rgb(248,103,6)" fg:x="44703" fg:w="25"/><text x="41.8853%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="41.6772%" y="1525" width="0.0102%" height="15" fill="rgb(214,53,46)" fg:x="44748" fg:w="11"/><text x="41.9272%" y="1535.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (35 samples, 0.03%)</title><rect x="41.6586%" y="1605" width="0.0326%" height="15" fill="rgb(236,190,24)" fg:x="44728" fg:w="35"/><text x="41.9086%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_usize (35 samples, 0.03%)</title><rect x="41.6586%" y="1589" width="0.0326%" height="15" fill="rgb(254,58,28)" fg:x="44728" fg:w="35"/><text x="41.9086%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (35 samples, 0.03%)</title><rect x="41.6586%" y="1573" width="0.0326%" height="15" fill="rgb(243,63,27)" fg:x="44728" fg:w="35"/><text x="41.9086%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (35 samples, 0.03%)</title><rect x="41.6586%" y="1557" width="0.0326%" height="15" fill="rgb(206,81,20)" fg:x="44728" fg:w="35"/><text x="41.9086%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (34 samples, 0.03%)</title><rect x="41.6595%" y="1541" width="0.0317%" height="15" fill="rgb(252,69,51)" fg:x="44729" fg:w="34"/><text x="41.9095%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (55 samples, 0.05%)</title><rect x="41.7247%" y="1525" width="0.0512%" height="15" fill="rgb(222,213,4)" fg:x="44799" fg:w="55"/><text x="41.9747%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (83 samples, 0.08%)</title><rect x="41.7117%" y="1541" width="0.0773%" height="15" fill="rgb(226,198,12)" fg:x="44785" fg:w="83"/><text x="41.9617%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.01%)</title><rect x="41.7759%" y="1525" width="0.0130%" height="15" fill="rgb(248,115,11)" fg:x="44854" fg:w="14"/><text x="42.0259%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (142 samples, 0.13%)</title><rect x="41.6586%" y="1653" width="0.1323%" height="15" fill="rgb(221,148,54)" fg:x="44728" fg:w="142"/><text x="41.9086%" y="1663.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (142 samples, 0.13%)</title><rect x="41.6586%" y="1637" width="0.1323%" height="15" fill="rgb(214,209,51)" fg:x="44728" fg:w="142"/><text x="41.9086%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (142 samples, 0.13%)</title><rect x="41.6586%" y="1621" width="0.1323%" height="15" fill="rgb(249,116,53)" fg:x="44728" fg:w="142"/><text x="41.9086%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (107 samples, 0.10%)</title><rect x="41.6912%" y="1605" width="0.0997%" height="15" fill="rgb(248,170,1)" fg:x="44763" fg:w="107"/><text x="41.9412%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (107 samples, 0.10%)</title><rect x="41.6912%" y="1589" width="0.0997%" height="15" fill="rgb(244,105,10)" fg:x="44763" fg:w="107"/><text x="41.9412%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (107 samples, 0.10%)</title><rect x="41.6912%" y="1573" width="0.0997%" height="15" fill="rgb(229,100,5)" fg:x="44763" fg:w="107"/><text x="41.9412%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (103 samples, 0.10%)</title><rect x="41.6949%" y="1557" width="0.0959%" height="15" fill="rgb(233,221,39)" fg:x="44767" fg:w="103"/><text x="41.9449%" y="1567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.01%)</title><rect x="41.8486%" y="1525" width="0.0149%" height="15" fill="rgb(233,88,21)" fg:x="44932" fg:w="16"/><text x="42.0986%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (57 samples, 0.05%)</title><rect x="41.8151%" y="1541" width="0.0531%" height="15" fill="rgb(206,13,0)" fg:x="44896" fg:w="57"/><text x="42.0651%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (97 samples, 0.09%)</title><rect x="41.7918%" y="1557" width="0.0903%" height="15" fill="rgb(242,15,35)" fg:x="44871" fg:w="97"/><text x="42.0418%" y="1567.50"></text></g><g><title>core::hash::sip::u8to64_le (15 samples, 0.01%)</title><rect x="41.8682%" y="1541" width="0.0140%" height="15" fill="rgb(247,142,41)" fg:x="44953" fg:w="15"/><text x="42.1182%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (382 samples, 0.36%)</title><rect x="41.5496%" y="1717" width="0.3558%" height="15" fill="rgb(245,51,29)" fg:x="44611" fg:w="382"/><text x="41.7996%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (381 samples, 0.35%)</title><rect x="41.5506%" y="1701" width="0.3549%" height="15" fill="rgb(228,209,43)" fg:x="44612" fg:w="381"/><text x="41.8006%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (265 samples, 0.25%)</title><rect x="41.6586%" y="1685" width="0.2468%" height="15" fill="rgb(233,185,9)" fg:x="44728" fg:w="265"/><text x="41.9086%" y="1695.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (265 samples, 0.25%)</title><rect x="41.6586%" y="1669" width="0.2468%" height="15" fill="rgb(226,93,0)" fg:x="44728" fg:w="265"/><text x="41.9086%" y="1679.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (123 samples, 0.11%)</title><rect x="41.7909%" y="1653" width="0.1146%" height="15" fill="rgb(245,194,43)" fg:x="44870" fg:w="123"/><text x="42.0409%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (123 samples, 0.11%)</title><rect x="41.7909%" y="1637" width="0.1146%" height="15" fill="rgb(211,145,34)" fg:x="44870" fg:w="123"/><text x="42.0409%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (123 samples, 0.11%)</title><rect x="41.7909%" y="1621" width="0.1146%" height="15" fill="rgb(231,228,28)" fg:x="44870" fg:w="123"/><text x="42.0409%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (123 samples, 0.11%)</title><rect x="41.7909%" y="1605" width="0.1146%" height="15" fill="rgb(236,149,4)" fg:x="44870" fg:w="123"/><text x="42.0409%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (123 samples, 0.11%)</title><rect x="41.7909%" y="1589" width="0.1146%" height="15" fill="rgb(234,114,38)" fg:x="44870" fg:w="123"/><text x="42.0409%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (123 samples, 0.11%)</title><rect x="41.7909%" y="1573" width="0.1146%" height="15" fill="rgb(246,132,51)" fg:x="44870" fg:w="123"/><text x="42.0409%" y="1583.50"></text></g><g><title>core::hash::Hasher::write_u8 (25 samples, 0.02%)</title><rect x="41.8821%" y="1557" width="0.0233%" height="15" fill="rgb(251,137,22)" fg:x="44968" fg:w="25"/><text x="42.1321%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="41.8831%" y="1541" width="0.0224%" height="15" fill="rgb(243,59,52)" fg:x="44969" fg:w="24"/><text x="42.1331%" y="1551.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="41.9129%" y="1669" width="0.0149%" height="15" fill="rgb(239,56,28)" fg:x="45001" fg:w="16"/><text x="42.1629%" y="1679.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (16 samples, 0.01%)</title><rect x="41.9129%" y="1653" width="0.0149%" height="15" fill="rgb(218,168,27)" fg:x="45001" fg:w="16"/><text x="42.1629%" y="1663.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (52 samples, 0.05%)</title><rect x="41.9352%" y="1621" width="0.0484%" height="15" fill="rgb(232,165,11)" fg:x="45025" fg:w="52"/><text x="42.1852%" y="1631.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (52 samples, 0.05%)</title><rect x="41.9352%" y="1605" width="0.0484%" height="15" fill="rgb(253,55,41)" fg:x="45025" fg:w="52"/><text x="42.1852%" y="1615.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (52 samples, 0.05%)</title><rect x="41.9352%" y="1589" width="0.0484%" height="15" fill="rgb(233,206,24)" fg:x="45025" fg:w="52"/><text x="42.1852%" y="1599.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (103 samples, 0.10%)</title><rect x="41.9334%" y="1653" width="0.0959%" height="15" fill="rgb(220,199,8)" fg:x="45023" fg:w="103"/><text x="42.1834%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (103 samples, 0.10%)</title><rect x="41.9334%" y="1637" width="0.0959%" height="15" fill="rgb(254,65,26)" fg:x="45023" fg:w="103"/><text x="42.1834%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (49 samples, 0.05%)</title><rect x="41.9836%" y="1621" width="0.0456%" height="15" fill="rgb(253,102,23)" fg:x="45077" fg:w="49"/><text x="42.2336%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (49 samples, 0.05%)</title><rect x="41.9836%" y="1605" width="0.0456%" height="15" fill="rgb(231,103,35)" fg:x="45077" fg:w="49"/><text x="42.2336%" y="1615.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (49 samples, 0.05%)</title><rect x="41.9836%" y="1589" width="0.0456%" height="15" fill="rgb(238,26,10)" fg:x="45077" fg:w="49"/><text x="42.2336%" y="1599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (49 samples, 0.05%)</title><rect x="41.9836%" y="1573" width="0.0456%" height="15" fill="rgb(234,191,34)" fg:x="45077" fg:w="49"/><text x="42.2336%" y="1583.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (49 samples, 0.05%)</title><rect x="41.9836%" y="1557" width="0.0456%" height="15" fill="rgb(206,210,9)" fg:x="45077" fg:w="49"/><text x="42.2336%" y="1567.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (49 samples, 0.05%)</title><rect x="41.9836%" y="1541" width="0.0456%" height="15" fill="rgb(219,155,3)" fg:x="45077" fg:w="49"/><text x="42.2336%" y="1551.50"></text></g><g><title>[libc.so.6] (49 samples, 0.05%)</title><rect x="41.9836%" y="1525" width="0.0456%" height="15" fill="rgb(221,62,52)" fg:x="45077" fg:w="49"/><text x="42.2336%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (115 samples, 0.11%)</title><rect x="41.9278%" y="1669" width="0.1071%" height="15" fill="rgb(215,197,36)" fg:x="45017" fg:w="115"/><text x="42.1778%" y="1679.50"></text></g><g><title>hashbrown::raw::h2 (14 samples, 0.01%)</title><rect x="42.0349%" y="1669" width="0.0130%" height="15" fill="rgb(226,222,6)" fg:x="45132" fg:w="14"/><text x="42.2849%" y="1679.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (37 samples, 0.03%)</title><rect x="42.0479%" y="1669" width="0.0345%" height="15" fill="rgb(215,58,28)" fg:x="45146" fg:w="37"/><text x="42.2979%" y="1679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (37 samples, 0.03%)</title><rect x="42.0479%" y="1653" width="0.0345%" height="15" fill="rgb(212,148,2)" fg:x="45146" fg:w="37"/><text x="42.2979%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.03%)</title><rect x="42.0479%" y="1637" width="0.0345%" height="15" fill="rgb(208,21,42)" fg:x="45146" fg:w="37"/><text x="42.2979%" y="1647.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (699 samples, 0.65%)</title><rect x="41.4407%" y="1829" width="0.6510%" height="15" fill="rgb(209,107,26)" fg:x="44494" fg:w="699"/><text x="41.6907%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (677 samples, 0.63%)</title><rect x="41.4611%" y="1813" width="0.6305%" height="15" fill="rgb(254,60,47)" fg:x="44516" fg:w="677"/><text x="41.7111%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (656 samples, 0.61%)</title><rect x="41.4807%" y="1797" width="0.6110%" height="15" fill="rgb(207,226,45)" fg:x="44537" fg:w="656"/><text x="41.7307%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (601 samples, 0.56%)</title><rect x="41.5319%" y="1781" width="0.5598%" height="15" fill="rgb(223,124,22)" fg:x="44592" fg:w="601"/><text x="41.7819%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (593 samples, 0.55%)</title><rect x="41.5394%" y="1765" width="0.5523%" height="15" fill="rgb(240,162,13)" fg:x="44600" fg:w="593"/><text x="41.7894%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (593 samples, 0.55%)</title><rect x="41.5394%" y="1749" width="0.5523%" height="15" fill="rgb(244,199,31)" fg:x="44600" fg:w="593"/><text x="41.7894%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (593 samples, 0.55%)</title><rect x="41.5394%" y="1733" width="0.5523%" height="15" fill="rgb(207,92,16)" fg:x="44600" fg:w="593"/><text x="41.7894%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (200 samples, 0.19%)</title><rect x="41.9054%" y="1717" width="0.1863%" height="15" fill="rgb(215,31,19)" fg:x="44993" fg:w="200"/><text x="42.1554%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (200 samples, 0.19%)</title><rect x="41.9054%" y="1701" width="0.1863%" height="15" fill="rgb(245,118,14)" fg:x="44993" fg:w="200"/><text x="42.1554%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (200 samples, 0.19%)</title><rect x="41.9054%" y="1685" width="0.1863%" height="15" fill="rgb(248,12,46)" fg:x="44993" fg:w="200"/><text x="42.1554%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="42.1271%" y="1797" width="0.0130%" height="15" fill="rgb(209,119,0)" fg:x="45231" fg:w="14"/><text x="42.3771%" y="1807.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="42.1476%" y="1797" width="0.0112%" height="15" fill="rgb(254,51,44)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1807.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (12 samples, 0.01%)</title><rect x="42.1476%" y="1781" width="0.0112%" height="15" fill="rgb(253,182,35)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1791.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="42.1476%" y="1765" width="0.0112%" height="15" fill="rgb(205,198,39)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="42.1476%" y="1749" width="0.0112%" height="15" fill="rgb(251,175,48)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="42.1476%" y="1733" width="0.0112%" height="15" fill="rgb(239,38,17)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="42.1476%" y="1717" width="0.0112%" height="15" fill="rgb(212,101,8)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="42.1476%" y="1701" width="0.0112%" height="15" fill="rgb(228,35,17)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="42.1476%" y="1685" width="0.0112%" height="15" fill="rgb(214,95,8)" fg:x="45253" fg:w="12"/><text x="42.3976%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="42.2090%" y="1765" width="0.0121%" height="15" fill="rgb(210,176,35)" fg:x="45319" fg:w="13"/><text x="42.4590%" y="1775.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address::{{closure}} (13 samples, 0.01%)</title><rect x="42.2090%" y="1749" width="0.0121%" height="15" fill="rgb(226,4,3)" fg:x="45319" fg:w="13"/><text x="42.4590%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (13 samples, 0.01%)</title><rect x="42.2090%" y="1733" width="0.0121%" height="15" fill="rgb(232,133,14)" fg:x="45319" fg:w="13"/><text x="42.4590%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::SignerRef&gt;&gt;::cast (13 samples, 0.01%)</title><rect x="42.2090%" y="1717" width="0.0121%" height="15" fill="rgb(250,191,8)" fg:x="45319" fg:w="13"/><text x="42.4590%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="42.2239%" y="1717" width="0.0102%" height="15" fill="rgb(213,12,45)" fg:x="45335" fg:w="11"/><text x="42.4739%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="42.2239%" y="1701" width="0.0102%" height="15" fill="rgb(233,78,26)" fg:x="45335" fg:w="11"/><text x="42.4739%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;move_vm_types::values::values_impl::Value&gt;&gt; (15 samples, 0.01%)</title><rect x="42.2211%" y="1765" width="0.0140%" height="15" fill="rgb(245,222,11)" fg:x="45332" fg:w="15"/><text x="42.4711%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="42.2239%" y="1749" width="0.0112%" height="15" fill="rgb(216,174,12)" fg:x="45335" fg:w="12"/><text x="42.4739%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="42.2239%" y="1733" width="0.0112%" height="15" fill="rgb(213,15,9)" fg:x="45335" fg:w="12"/><text x="42.4739%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::SignerRef&gt; (14 samples, 0.01%)</title><rect x="42.2388%" y="1765" width="0.0130%" height="15" fill="rgb(238,103,32)" fg:x="45351" fg:w="14"/><text x="42.4888%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (14 samples, 0.01%)</title><rect x="42.2388%" y="1749" width="0.0130%" height="15" fill="rgb(245,85,15)" fg:x="45351" fg:w="14"/><text x="42.4888%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::SignerRef::borrow_signer (16 samples, 0.01%)</title><rect x="42.2575%" y="1765" width="0.0149%" height="15" fill="rgb(254,204,5)" fg:x="45371" fg:w="16"/><text x="42.5075%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (11 samples, 0.01%)</title><rect x="42.2621%" y="1749" width="0.0102%" height="15" fill="rgb(231,178,15)" fg:x="45376" fg:w="11"/><text x="42.5121%" y="1759.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (96 samples, 0.09%)</title><rect x="42.1867%" y="1797" width="0.0894%" height="15" fill="rgb(248,151,3)" fg:x="45295" fg:w="96"/><text x="42.4367%" y="1807.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (89 samples, 0.08%)</title><rect x="42.1932%" y="1781" width="0.0829%" height="15" fill="rgb(250,139,13)" fg:x="45302" fg:w="89"/><text x="42.4432%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (48 samples, 0.04%)</title><rect x="42.2994%" y="1797" width="0.0447%" height="15" fill="rgb(243,107,53)" fg:x="45416" fg:w="48"/><text x="42.5494%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (44 samples, 0.04%)</title><rect x="42.3031%" y="1781" width="0.0410%" height="15" fill="rgb(232,81,15)" fg:x="45420" fg:w="44"/><text x="42.5531%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (37 samples, 0.03%)</title><rect x="42.3096%" y="1765" width="0.0345%" height="15" fill="rgb(225,187,48)" fg:x="45427" fg:w="37"/><text x="42.5596%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (33 samples, 0.03%)</title><rect x="42.3134%" y="1749" width="0.0307%" height="15" fill="rgb(205,116,12)" fg:x="45431" fg:w="33"/><text x="42.5634%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="42.3338%" y="1733" width="0.0102%" height="15" fill="rgb(220,222,31)" fg:x="45453" fg:w="11"/><text x="42.5838%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (280 samples, 0.26%)</title><rect x="42.0963%" y="1829" width="0.2608%" height="15" fill="rgb(233,187,49)" fg:x="45198" fg:w="280"/><text x="42.3463%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (272 samples, 0.25%)</title><rect x="42.1038%" y="1813" width="0.2533%" height="15" fill="rgb(211,168,53)" fg:x="45206" fg:w="272"/><text x="42.3538%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (22 samples, 0.02%)</title><rect x="42.3571%" y="1829" width="0.0205%" height="15" fill="rgb(206,160,16)" fg:x="45478" fg:w="22"/><text x="42.6071%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (11 samples, 0.01%)</title><rect x="42.4251%" y="1813" width="0.0102%" height="15" fill="rgb(254,164,13)" fg:x="45551" fg:w="11"/><text x="42.6751%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (11 samples, 0.01%)</title><rect x="42.4251%" y="1797" width="0.0102%" height="15" fill="rgb(229,45,30)" fg:x="45551" fg:w="11"/><text x="42.6751%" y="1807.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="42.4652%" y="1733" width="0.0270%" height="15" fill="rgb(237,32,10)" fg:x="45594" fg:w="29"/><text x="42.7152%" y="1743.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="42.4735%" y="1717" width="0.0186%" height="15" fill="rgb(251,20,47)" fg:x="45603" fg:w="20"/><text x="42.7235%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (14 samples, 0.01%)</title><rect x="42.4791%" y="1701" width="0.0130%" height="15" fill="rgb(251,116,12)" fg:x="45609" fg:w="14"/><text x="42.7291%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (14 samples, 0.01%)</title><rect x="42.4791%" y="1685" width="0.0130%" height="15" fill="rgb(214,227,27)" fg:x="45609" fg:w="14"/><text x="42.7291%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="42.4791%" y="1669" width="0.0130%" height="15" fill="rgb(248,10,53)" fg:x="45609" fg:w="14"/><text x="42.7291%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="42.4791%" y="1653" width="0.0130%" height="15" fill="rgb(221,176,25)" fg:x="45609" fg:w="14"/><text x="42.7291%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="42.4791%" y="1637" width="0.0130%" height="15" fill="rgb(205,70,46)" fg:x="45609" fg:w="14"/><text x="42.7291%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="42.4950%" y="1685" width="0.0233%" height="15" fill="rgb(217,45,38)" fg:x="45626" fg:w="25"/><text x="42.7450%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="42.4950%" y="1669" width="0.0233%" height="15" fill="rgb(243,6,54)" fg:x="45626" fg:w="25"/><text x="42.7450%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="42.4950%" y="1653" width="0.0233%" height="15" fill="rgb(242,76,23)" fg:x="45626" fg:w="25"/><text x="42.7450%" y="1663.50"></text></g><g><title>malloc (21 samples, 0.02%)</title><rect x="42.4987%" y="1637" width="0.0196%" height="15" fill="rgb(239,166,0)" fg:x="45630" fg:w="21"/><text x="42.7487%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.03%)</title><rect x="42.4931%" y="1733" width="0.0261%" height="15" fill="rgb(238,174,32)" fg:x="45624" fg:w="28"/><text x="42.7431%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="42.4940%" y="1717" width="0.0251%" height="15" fill="rgb(238,124,44)" fg:x="45625" fg:w="27"/><text x="42.7440%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.03%)</title><rect x="42.4940%" y="1701" width="0.0251%" height="15" fill="rgb(206,185,9)" fg:x="45625" fg:w="27"/><text x="42.7440%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (94 samples, 0.09%)</title><rect x="42.4605%" y="1797" width="0.0875%" height="15" fill="rgb(215,157,17)" fg:x="45589" fg:w="94"/><text x="42.7105%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (94 samples, 0.09%)</title><rect x="42.4605%" y="1781" width="0.0875%" height="15" fill="rgb(251,17,29)" fg:x="45589" fg:w="94"/><text x="42.7105%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (94 samples, 0.09%)</title><rect x="42.4605%" y="1765" width="0.0875%" height="15" fill="rgb(227,113,27)" fg:x="45589" fg:w="94"/><text x="42.7105%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (94 samples, 0.09%)</title><rect x="42.4605%" y="1749" width="0.0875%" height="15" fill="rgb(217,226,24)" fg:x="45589" fg:w="94"/><text x="42.7105%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (31 samples, 0.03%)</title><rect x="42.5192%" y="1733" width="0.0289%" height="15" fill="rgb(251,99,38)" fg:x="45652" fg:w="31"/><text x="42.7692%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (18 samples, 0.02%)</title><rect x="42.5862%" y="1653" width="0.0168%" height="15" fill="rgb(231,147,19)" fg:x="45724" fg:w="18"/><text x="42.8362%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="42.5862%" y="1637" width="0.0168%" height="15" fill="rgb(230,86,8)" fg:x="45724" fg:w="18"/><text x="42.8362%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="42.5862%" y="1621" width="0.0168%" height="15" fill="rgb(237,159,39)" fg:x="45724" fg:w="18"/><text x="42.8362%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="42.5862%" y="1605" width="0.0168%" height="15" fill="rgb(247,179,47)" fg:x="45724" fg:w="18"/><text x="42.8362%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (12 samples, 0.01%)</title><rect x="42.5918%" y="1589" width="0.0112%" height="15" fill="rgb(253,152,26)" fg:x="45730" fg:w="12"/><text x="42.8418%" y="1599.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (11 samples, 0.01%)</title><rect x="42.5928%" y="1573" width="0.0102%" height="15" fill="rgb(222,211,15)" fg:x="45731" fg:w="11"/><text x="42.8428%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (11 samples, 0.01%)</title><rect x="42.5928%" y="1557" width="0.0102%" height="15" fill="rgb(236,193,6)" fg:x="45731" fg:w="11"/><text x="42.8428%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (11 samples, 0.01%)</title><rect x="42.5928%" y="1541" width="0.0102%" height="15" fill="rgb(226,206,10)" fg:x="45731" fg:w="11"/><text x="42.8428%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="42.5816%" y="1669" width="0.0224%" height="15" fill="rgb(213,125,22)" fg:x="45719" fg:w="24"/><text x="42.8316%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (77 samples, 0.07%)</title><rect x="42.5490%" y="1797" width="0.0717%" height="15" fill="rgb(221,66,28)" fg:x="45684" fg:w="77"/><text x="42.7990%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (77 samples, 0.07%)</title><rect x="42.5490%" y="1781" width="0.0717%" height="15" fill="rgb(222,84,53)" fg:x="45684" fg:w="77"/><text x="42.7990%" y="1791.50"></text></g><g><title>core::iter::adapters::try_process (76 samples, 0.07%)</title><rect x="42.5499%" y="1765" width="0.0708%" height="15" fill="rgb(243,50,15)" fg:x="45685" fg:w="76"/><text x="42.7999%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (69 samples, 0.06%)</title><rect x="42.5564%" y="1749" width="0.0643%" height="15" fill="rgb(208,184,23)" fg:x="45692" fg:w="69"/><text x="42.8064%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (69 samples, 0.06%)</title><rect x="42.5564%" y="1733" width="0.0643%" height="15" fill="rgb(221,83,2)" fg:x="45692" fg:w="69"/><text x="42.8064%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (69 samples, 0.06%)</title><rect x="42.5564%" y="1717" width="0.0643%" height="15" fill="rgb(236,53,24)" fg:x="45692" fg:w="69"/><text x="42.8064%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 0.06%)</title><rect x="42.5630%" y="1701" width="0.0577%" height="15" fill="rgb(244,171,29)" fg:x="45699" fg:w="62"/><text x="42.8130%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (52 samples, 0.05%)</title><rect x="42.5723%" y="1685" width="0.0484%" height="15" fill="rgb(205,19,11)" fg:x="45709" fg:w="52"/><text x="42.8223%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18 samples, 0.02%)</title><rect x="42.6039%" y="1669" width="0.0168%" height="15" fill="rgb(207,108,29)" fg:x="45743" fg:w="18"/><text x="42.8539%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="42.6039%" y="1653" width="0.0168%" height="15" fill="rgb(236,215,43)" fg:x="45743" fg:w="18"/><text x="42.8539%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="42.6039%" y="1637" width="0.0168%" height="15" fill="rgb(213,58,35)" fg:x="45743" fg:w="18"/><text x="42.8539%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="42.6039%" y="1621" width="0.0168%" height="15" fill="rgb(220,211,46)" fg:x="45743" fg:w="18"/><text x="42.8539%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="42.6039%" y="1605" width="0.0168%" height="15" fill="rgb(212,134,16)" fg:x="45743" fg:w="18"/><text x="42.8539%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="42.6039%" y="1589" width="0.0168%" height="15" fill="rgb(232,90,44)" fg:x="45743" fg:w="18"/><text x="42.8539%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="42.6039%" y="1573" width="0.0168%" height="15" fill="rgb(212,18,36)" fg:x="45743" fg:w="18"/><text x="42.8539%" y="1583.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="42.6095%" y="1557" width="0.0112%" height="15" fill="rgb(206,112,24)" fg:x="45749" fg:w="12"/><text x="42.8595%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="42.6486%" y="1637" width="0.0121%" height="15" fill="rgb(238,223,40)" fg:x="45791" fg:w="13"/><text x="42.8986%" y="1647.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (13 samples, 0.01%)</title><rect x="42.6486%" y="1621" width="0.0121%" height="15" fill="rgb(226,169,20)" fg:x="45791" fg:w="13"/><text x="42.8986%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.01%)</title><rect x="42.6486%" y="1605" width="0.0121%" height="15" fill="rgb(241,64,52)" fg:x="45791" fg:w="13"/><text x="42.8986%" y="1615.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.03%)</title><rect x="42.6365%" y="1701" width="0.0307%" height="15" fill="rgb(228,120,25)" fg:x="45778" fg:w="33"/><text x="42.8865%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33 samples, 0.03%)</title><rect x="42.6365%" y="1685" width="0.0307%" height="15" fill="rgb(234,108,19)" fg:x="45778" fg:w="33"/><text x="42.8865%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (20 samples, 0.02%)</title><rect x="42.6486%" y="1669" width="0.0186%" height="15" fill="rgb(236,133,29)" fg:x="45791" fg:w="20"/><text x="42.8986%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="42.6486%" y="1653" width="0.0186%" height="15" fill="rgb(246,174,53)" fg:x="45791" fg:w="20"/><text x="42.8986%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (56 samples, 0.05%)</title><rect x="42.6272%" y="1797" width="0.0522%" height="15" fill="rgb(210,105,35)" fg:x="45768" fg:w="56"/><text x="42.8772%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (52 samples, 0.05%)</title><rect x="42.6310%" y="1781" width="0.0484%" height="15" fill="rgb(225,27,26)" fg:x="45772" fg:w="52"/><text x="42.8810%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (48 samples, 0.04%)</title><rect x="42.6347%" y="1765" width="0.0447%" height="15" fill="rgb(233,2,39)" fg:x="45776" fg:w="48"/><text x="42.8847%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (48 samples, 0.04%)</title><rect x="42.6347%" y="1749" width="0.0447%" height="15" fill="rgb(219,164,26)" fg:x="45776" fg:w="48"/><text x="42.8847%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (48 samples, 0.04%)</title><rect x="42.6347%" y="1733" width="0.0447%" height="15" fill="rgb(236,211,5)" fg:x="45776" fg:w="48"/><text x="42.8847%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (48 samples, 0.04%)</title><rect x="42.6347%" y="1717" width="0.0447%" height="15" fill="rgb(244,227,23)" fg:x="45776" fg:w="48"/><text x="42.8847%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.01%)</title><rect x="42.6673%" y="1701" width="0.0121%" height="15" fill="rgb(230,184,8)" fg:x="45811" fg:w="13"/><text x="42.9173%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.01%)</title><rect x="42.6673%" y="1685" width="0.0121%" height="15" fill="rgb(217,125,48)" fg:x="45811" fg:w="13"/><text x="42.9173%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.01%)</title><rect x="42.6673%" y="1669" width="0.0121%" height="15" fill="rgb(223,192,47)" fg:x="45811" fg:w="13"/><text x="42.9173%" y="1679.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (257 samples, 0.24%)</title><rect x="42.4410%" y="1813" width="0.2394%" height="15" fill="rgb(226,119,10)" fg:x="45568" fg:w="257"/><text x="42.6910%" y="1823.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="42.6980%" y="1781" width="0.0149%" height="15" fill="rgb(221,49,29)" fg:x="45844" fg:w="16"/><text x="42.9480%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.01%)</title><rect x="42.7567%" y="1621" width="0.0140%" height="15" fill="rgb(217,205,19)" fg:x="45907" fg:w="15"/><text x="43.0067%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (35 samples, 0.03%)</title><rect x="42.7390%" y="1685" width="0.0326%" height="15" fill="rgb(242,104,7)" fg:x="45888" fg:w="35"/><text x="42.9890%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (35 samples, 0.03%)</title><rect x="42.7390%" y="1669" width="0.0326%" height="15" fill="rgb(209,154,48)" fg:x="45888" fg:w="35"/><text x="42.9890%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (35 samples, 0.03%)</title><rect x="42.7390%" y="1653" width="0.0326%" height="15" fill="rgb(219,213,46)" fg:x="45888" fg:w="35"/><text x="42.9890%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="42.7530%" y="1637" width="0.0186%" height="15" fill="rgb(229,105,38)" fg:x="45903" fg:w="20"/><text x="43.0030%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (12 samples, 0.01%)</title><rect x="42.7716%" y="1685" width="0.0112%" height="15" fill="rgb(205,151,5)" fg:x="45923" fg:w="12"/><text x="43.0216%" y="1695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="42.7828%" y="1573" width="0.0130%" height="15" fill="rgb(248,115,40)" fg:x="45935" fg:w="14"/><text x="43.0328%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="42.7828%" y="1557" width="0.0130%" height="15" fill="rgb(206,179,2)" fg:x="45935" fg:w="14"/><text x="43.0328%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="42.7837%" y="1541" width="0.0121%" height="15" fill="rgb(230,103,24)" fg:x="45936" fg:w="13"/><text x="43.0337%" y="1551.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (16 samples, 0.01%)</title><rect x="42.7828%" y="1605" width="0.0149%" height="15" fill="rgb(218,152,4)" fg:x="45935" fg:w="16"/><text x="43.0328%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.01%)</title><rect x="42.7828%" y="1589" width="0.0149%" height="15" fill="rgb(236,161,54)" fg:x="45935" fg:w="16"/><text x="43.0328%" y="1599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.02%)</title><rect x="42.8144%" y="1525" width="0.0224%" height="15" fill="rgb(226,65,17)" fg:x="45969" fg:w="24"/><text x="43.0644%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (38 samples, 0.04%)</title><rect x="42.8098%" y="1541" width="0.0354%" height="15" fill="rgb(221,134,44)" fg:x="45964" fg:w="38"/><text x="43.0598%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (69 samples, 0.06%)</title><rect x="42.7828%" y="1653" width="0.0643%" height="15" fill="rgb(251,129,4)" fg:x="45935" fg:w="69"/><text x="43.0328%" y="1663.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (69 samples, 0.06%)</title><rect x="42.7828%" y="1637" width="0.0643%" height="15" fill="rgb(244,32,34)" fg:x="45935" fg:w="69"/><text x="43.0328%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (69 samples, 0.06%)</title><rect x="42.7828%" y="1621" width="0.0643%" height="15" fill="rgb(251,224,37)" fg:x="45935" fg:w="69"/><text x="43.0328%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (53 samples, 0.05%)</title><rect x="42.7977%" y="1605" width="0.0494%" height="15" fill="rgb(248,117,31)" fg:x="45951" fg:w="53"/><text x="43.0477%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (53 samples, 0.05%)</title><rect x="42.7977%" y="1589" width="0.0494%" height="15" fill="rgb(222,208,37)" fg:x="45951" fg:w="53"/><text x="43.0477%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (53 samples, 0.05%)</title><rect x="42.7977%" y="1573" width="0.0494%" height="15" fill="rgb(234,211,25)" fg:x="45951" fg:w="53"/><text x="43.0477%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (49 samples, 0.05%)</title><rect x="42.8014%" y="1557" width="0.0456%" height="15" fill="rgb(211,72,6)" fg:x="45955" fg:w="49"/><text x="43.0514%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="42.8582%" y="1541" width="0.0149%" height="15" fill="rgb(249,198,38)" fg:x="46016" fg:w="16"/><text x="43.1082%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (63 samples, 0.06%)</title><rect x="42.8489%" y="1557" width="0.0587%" height="15" fill="rgb(221,86,51)" fg:x="46006" fg:w="63"/><text x="43.0989%" y="1567.50"></text></g><g><title>core::hash::sip::u8to64_le (37 samples, 0.03%)</title><rect x="42.8731%" y="1541" width="0.0345%" height="15" fill="rgb(226,178,43)" fg:x="46032" fg:w="37"/><text x="43.1231%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.03%)</title><rect x="42.8806%" y="1525" width="0.0270%" height="15" fill="rgb(215,145,7)" fg:x="46040" fg:w="29"/><text x="43.1306%" y="1535.50"></text></g><g><title>hashbrown::map::make_hash (195 samples, 0.18%)</title><rect x="42.7334%" y="1717" width="0.1816%" height="15" fill="rgb(250,202,36)" fg:x="45882" fg:w="195"/><text x="42.9834%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (193 samples, 0.18%)</title><rect x="42.7353%" y="1701" width="0.1798%" height="15" fill="rgb(215,86,13)" fg:x="45884" fg:w="193"/><text x="42.9853%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (142 samples, 0.13%)</title><rect x="42.7828%" y="1685" width="0.1323%" height="15" fill="rgb(221,134,12)" fg:x="45935" fg:w="142"/><text x="43.0328%" y="1695.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (142 samples, 0.13%)</title><rect x="42.7828%" y="1669" width="0.1323%" height="15" fill="rgb(213,82,10)" fg:x="45935" fg:w="142"/><text x="43.0328%" y="1679.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (73 samples, 0.07%)</title><rect x="42.8470%" y="1653" width="0.0680%" height="15" fill="rgb(214,142,0)" fg:x="46004" fg:w="73"/><text x="43.0970%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (73 samples, 0.07%)</title><rect x="42.8470%" y="1637" width="0.0680%" height="15" fill="rgb(205,145,9)" fg:x="46004" fg:w="73"/><text x="43.0970%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (71 samples, 0.07%)</title><rect x="42.8489%" y="1621" width="0.0661%" height="15" fill="rgb(244,214,8)" fg:x="46006" fg:w="71"/><text x="43.0989%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (71 samples, 0.07%)</title><rect x="42.8489%" y="1605" width="0.0661%" height="15" fill="rgb(224,72,51)" fg:x="46006" fg:w="71"/><text x="43.0989%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (71 samples, 0.07%)</title><rect x="42.8489%" y="1589" width="0.0661%" height="15" fill="rgb(233,137,37)" fg:x="46006" fg:w="71"/><text x="43.0989%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (71 samples, 0.07%)</title><rect x="42.8489%" y="1573" width="0.0661%" height="15" fill="rgb(208,71,28)" fg:x="46006" fg:w="71"/><text x="43.0989%" y="1583.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (42 samples, 0.04%)</title><rect x="42.9402%" y="1621" width="0.0391%" height="15" fill="rgb(226,31,7)" fg:x="46104" fg:w="42"/><text x="43.1902%" y="1631.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (42 samples, 0.04%)</title><rect x="42.9402%" y="1605" width="0.0391%" height="15" fill="rgb(229,62,18)" fg:x="46104" fg:w="42"/><text x="43.1902%" y="1615.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (42 samples, 0.04%)</title><rect x="42.9402%" y="1589" width="0.0391%" height="15" fill="rgb(226,74,28)" fg:x="46104" fg:w="42"/><text x="43.1902%" y="1599.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (85 samples, 0.08%)</title><rect x="42.9346%" y="1653" width="0.0792%" height="15" fill="rgb(214,170,18)" fg:x="46098" fg:w="85"/><text x="43.1846%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (85 samples, 0.08%)</title><rect x="42.9346%" y="1637" width="0.0792%" height="15" fill="rgb(227,229,35)" fg:x="46098" fg:w="85"/><text x="43.1846%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="42.9793%" y="1621" width="0.0345%" height="15" fill="rgb(225,181,39)" fg:x="46146" fg:w="37"/><text x="43.2293%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="42.9793%" y="1605" width="0.0345%" height="15" fill="rgb(253,124,44)" fg:x="46146" fg:w="37"/><text x="43.2293%" y="1615.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (37 samples, 0.03%)</title><rect x="42.9793%" y="1589" width="0.0345%" height="15" fill="rgb(220,75,18)" fg:x="46146" fg:w="37"/><text x="43.2293%" y="1599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.03%)</title><rect x="42.9793%" y="1573" width="0.0345%" height="15" fill="rgb(239,175,43)" fg:x="46146" fg:w="37"/><text x="43.2293%" y="1583.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (37 samples, 0.03%)</title><rect x="42.9793%" y="1557" width="0.0345%" height="15" fill="rgb(228,112,50)" fg:x="46146" fg:w="37"/><text x="43.2293%" y="1567.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (37 samples, 0.03%)</title><rect x="42.9793%" y="1541" width="0.0345%" height="15" fill="rgb(232,105,36)" fg:x="46146" fg:w="37"/><text x="43.2293%" y="1551.50"></text></g><g><title>[libc.so.6] (37 samples, 0.03%)</title><rect x="42.9793%" y="1525" width="0.0345%" height="15" fill="rgb(227,137,47)" fg:x="46146" fg:w="37"/><text x="43.2293%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (97 samples, 0.09%)</title><rect x="42.9271%" y="1669" width="0.0903%" height="15" fill="rgb(217,51,9)" fg:x="46090" fg:w="97"/><text x="43.1771%" y="1679.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (22 samples, 0.02%)</title><rect x="43.0268%" y="1669" width="0.0205%" height="15" fill="rgb(245,117,0)" fg:x="46197" fg:w="22"/><text x="43.2768%" y="1679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (22 samples, 0.02%)</title><rect x="43.0268%" y="1653" width="0.0205%" height="15" fill="rgb(252,52,30)" fg:x="46197" fg:w="22"/><text x="43.2768%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.02%)</title><rect x="43.0268%" y="1637" width="0.0205%" height="15" fill="rgb(227,85,33)" fg:x="46197" fg:w="22"/><text x="43.2768%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (388 samples, 0.36%)</title><rect x="42.6868%" y="1813" width="0.3614%" height="15" fill="rgb(220,157,20)" fg:x="45832" fg:w="388"/><text x="42.9368%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (376 samples, 0.35%)</title><rect x="42.6980%" y="1797" width="0.3502%" height="15" fill="rgb(254,14,34)" fg:x="45844" fg:w="376"/><text x="42.9480%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (343 samples, 0.32%)</title><rect x="42.7287%" y="1781" width="0.3195%" height="15" fill="rgb(216,103,41)" fg:x="45877" fg:w="343"/><text x="42.9787%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (339 samples, 0.32%)</title><rect x="42.7325%" y="1765" width="0.3157%" height="15" fill="rgb(245,221,9)" fg:x="45881" fg:w="339"/><text x="42.9825%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (339 samples, 0.32%)</title><rect x="42.7325%" y="1749" width="0.3157%" height="15" fill="rgb(254,136,47)" fg:x="45881" fg:w="339"/><text x="42.9825%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (339 samples, 0.32%)</title><rect x="42.7325%" y="1733" width="0.3157%" height="15" fill="rgb(235,71,46)" fg:x="45881" fg:w="339"/><text x="42.9825%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (143 samples, 0.13%)</title><rect x="42.9150%" y="1717" width="0.1332%" height="15" fill="rgb(242,154,29)" fg:x="46077" fg:w="143"/><text x="43.1650%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (143 samples, 0.13%)</title><rect x="42.9150%" y="1701" width="0.1332%" height="15" fill="rgb(210,65,31)" fg:x="46077" fg:w="143"/><text x="43.1650%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (143 samples, 0.13%)</title><rect x="42.9150%" y="1685" width="0.1332%" height="15" fill="rgb(244,9,50)" fg:x="46077" fg:w="143"/><text x="43.1650%" y="1695.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (34 samples, 0.03%)</title><rect x="43.0519%" y="1813" width="0.0317%" height="15" fill="rgb(215,141,38)" fg:x="46224" fg:w="34"/><text x="43.3019%" y="1823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (26 samples, 0.02%)</title><rect x="43.0594%" y="1797" width="0.0242%" height="15" fill="rgb(241,129,6)" fg:x="46232" fg:w="26"/><text x="43.3094%" y="1807.50"></text></g><g><title>core::cmp::PartialEq::ne (26 samples, 0.02%)</title><rect x="43.0594%" y="1781" width="0.0242%" height="15" fill="rgb(253,169,4)" fg:x="46232" fg:w="26"/><text x="43.3094%" y="1791.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="43.0594%" y="1765" width="0.0242%" height="15" fill="rgb(237,82,36)" fg:x="46232" fg:w="26"/><text x="43.3094%" y="1775.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (85 samples, 0.08%)</title><rect x="43.0911%" y="1797" width="0.0792%" height="15" fill="rgb(209,171,11)" fg:x="46266" fg:w="85"/><text x="43.3411%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (78 samples, 0.07%)</title><rect x="43.0976%" y="1781" width="0.0726%" height="15" fill="rgb(242,19,22)" fg:x="46273" fg:w="78"/><text x="43.3476%" y="1791.50"></text></g><g><title>alloc::alloc::exchange_malloc (68 samples, 0.06%)</title><rect x="43.1069%" y="1765" width="0.0633%" height="15" fill="rgb(251,122,24)" fg:x="46283" fg:w="68"/><text x="43.3569%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 0.06%)</title><rect x="43.1087%" y="1749" width="0.0615%" height="15" fill="rgb(226,166,42)" fg:x="46285" fg:w="66"/><text x="43.3587%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 0.06%)</title><rect x="43.1087%" y="1733" width="0.0615%" height="15" fill="rgb(244,101,48)" fg:x="46285" fg:w="66"/><text x="43.3587%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.06%)</title><rect x="43.1087%" y="1717" width="0.0615%" height="15" fill="rgb(227,125,1)" fg:x="46285" fg:w="66"/><text x="43.3587%" y="1727.50"></text></g><g><title>malloc (61 samples, 0.06%)</title><rect x="43.1134%" y="1701" width="0.0568%" height="15" fill="rgb(206,79,43)" fg:x="46290" fg:w="61"/><text x="43.3634%" y="1711.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="43.1460%" y="1685" width="0.0242%" height="15" fill="rgb(241,109,41)" fg:x="46325" fg:w="26"/><text x="43.3960%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (142 samples, 0.13%)</title><rect x="43.0836%" y="1813" width="0.1323%" height="15" fill="rgb(219,73,4)" fg:x="46258" fg:w="142"/><text x="43.3336%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (49 samples, 0.05%)</title><rect x="43.1702%" y="1797" width="0.0456%" height="15" fill="rgb(239,25,41)" fg:x="46351" fg:w="49"/><text x="43.4202%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="43.1702%" y="1781" width="0.0456%" height="15" fill="rgb(208,88,46)" fg:x="46351" fg:w="49"/><text x="43.4202%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="43.1702%" y="1765" width="0.0456%" height="15" fill="rgb(239,184,9)" fg:x="46351" fg:w="49"/><text x="43.4202%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="43.1702%" y="1749" width="0.0456%" height="15" fill="rgb(223,114,13)" fg:x="46351" fg:w="49"/><text x="43.4202%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (43 samples, 0.04%)</title><rect x="43.1758%" y="1733" width="0.0400%" height="15" fill="rgb(214,28,42)" fg:x="46357" fg:w="43"/><text x="43.4258%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="43.1758%" y="1717" width="0.0400%" height="15" fill="rgb(252,32,44)" fg:x="46357" fg:w="43"/><text x="43.4258%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="43.1758%" y="1701" width="0.0400%" height="15" fill="rgb(231,159,4)" fg:x="46357" fg:w="43"/><text x="43.4258%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.04%)</title><rect x="43.1758%" y="1685" width="0.0400%" height="15" fill="rgb(210,35,26)" fg:x="46357" fg:w="43"/><text x="43.4258%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.04%)</title><rect x="43.1805%" y="1669" width="0.0354%" height="15" fill="rgb(208,190,37)" fg:x="46362" fg:w="38"/><text x="43.4305%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.04%)</title><rect x="43.1805%" y="1653" width="0.0354%" height="15" fill="rgb(226,148,22)" fg:x="46362" fg:w="38"/><text x="43.4305%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.04%)</title><rect x="43.1805%" y="1637" width="0.0354%" height="15" fill="rgb(242,153,24)" fg:x="46362" fg:w="38"/><text x="43.4305%" y="1647.50"></text></g><g><title>malloc (36 samples, 0.03%)</title><rect x="43.1823%" y="1621" width="0.0335%" height="15" fill="rgb(213,133,7)" fg:x="46364" fg:w="36"/><text x="43.4323%" y="1631.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="43.2019%" y="1605" width="0.0140%" height="15" fill="rgb(248,206,18)" fg:x="46385" fg:w="15"/><text x="43.4519%" y="1615.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (972 samples, 0.91%)</title><rect x="42.3776%" y="1829" width="0.9053%" height="15" fill="rgb(233,157,4)" fg:x="45500" fg:w="972"/><text x="42.6276%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (72 samples, 0.07%)</title><rect x="43.2159%" y="1813" width="0.0671%" height="15" fill="rgb(249,179,32)" fg:x="46400" fg:w="72"/><text x="43.4659%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (18 samples, 0.02%)</title><rect x="43.2662%" y="1797" width="0.0168%" height="15" fill="rgb(248,69,35)" fg:x="46454" fg:w="18"/><text x="43.5162%" y="1807.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (12 samples, 0.01%)</title><rect x="43.3118%" y="1717" width="0.0112%" height="15" fill="rgb(249,158,38)" fg:x="46503" fg:w="12"/><text x="43.5618%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="43.2894%" y="1749" width="0.0382%" height="15" fill="rgb(223,18,43)" fg:x="46479" fg:w="41"/><text x="43.5394%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="43.3118%" y="1733" width="0.0158%" height="15" fill="rgb(238,42,45)" fg:x="46503" fg:w="17"/><text x="43.5618%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="43.3276%" y="1749" width="0.0121%" height="15" fill="rgb(219,65,47)" fg:x="46520" fg:w="13"/><text x="43.5776%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="43.3276%" y="1733" width="0.0121%" height="15" fill="rgb(248,153,12)" fg:x="46520" fg:w="13"/><text x="43.5776%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="43.3276%" y="1717" width="0.0121%" height="15" fill="rgb(240,118,4)" fg:x="46520" fg:w="13"/><text x="43.5776%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (70 samples, 0.07%)</title><rect x="43.2857%" y="1813" width="0.0652%" height="15" fill="rgb(250,96,34)" fg:x="46475" fg:w="70"/><text x="43.5357%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (70 samples, 0.07%)</title><rect x="43.2857%" y="1797" width="0.0652%" height="15" fill="rgb(221,15,4)" fg:x="46475" fg:w="70"/><text x="43.5357%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (70 samples, 0.07%)</title><rect x="43.2857%" y="1781" width="0.0652%" height="15" fill="rgb(217,149,33)" fg:x="46475" fg:w="70"/><text x="43.5357%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (70 samples, 0.07%)</title><rect x="43.2857%" y="1765" width="0.0652%" height="15" fill="rgb(213,58,29)" fg:x="46475" fg:w="70"/><text x="43.5357%" y="1775.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.01%)</title><rect x="43.3397%" y="1749" width="0.0112%" height="15" fill="rgb(236,218,9)" fg:x="46533" fg:w="12"/><text x="43.5897%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (76 samples, 0.07%)</title><rect x="43.2829%" y="1829" width="0.0708%" height="15" fill="rgb(248,40,19)" fg:x="46472" fg:w="76"/><text x="43.5329%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (22 samples, 0.02%)</title><rect x="43.3537%" y="1829" width="0.0205%" height="15" fill="rgb(212,17,6)" fg:x="46548" fg:w="22"/><text x="43.6037%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::is_native (12 samples, 0.01%)</title><rect x="43.3835%" y="1829" width="0.0112%" height="15" fill="rgb(206,212,20)" fg:x="46580" fg:w="12"/><text x="43.6335%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::local_count (14 samples, 0.01%)</title><rect x="43.3947%" y="1829" width="0.0130%" height="15" fill="rgb(229,80,37)" fg:x="46592" fg:w="14"/><text x="43.6447%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::name (22 samples, 0.02%)</title><rect x="43.4170%" y="1829" width="0.0205%" height="15" fill="rgb(253,8,37)" fg:x="46616" fg:w="22"/><text x="43.6670%" y="1839.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (109 samples, 0.10%)</title><rect x="43.4571%" y="1797" width="0.1015%" height="15" fill="rgb(215,16,43)" fg:x="46659" fg:w="109"/><text x="43.7071%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="43.5372%" y="1781" width="0.0214%" height="15" fill="rgb(236,219,16)" fg:x="46745" fg:w="23"/><text x="43.7872%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="43.5372%" y="1765" width="0.0214%" height="15" fill="rgb(251,0,3)" fg:x="46745" fg:w="23"/><text x="43.7872%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (132 samples, 0.12%)</title><rect x="43.4375%" y="1829" width="0.1229%" height="15" fill="rgb(207,133,37)" fg:x="46638" fg:w="132"/><text x="43.6875%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (111 samples, 0.10%)</title><rect x="43.4571%" y="1813" width="0.1034%" height="15" fill="rgb(250,143,20)" fg:x="46659" fg:w="111"/><text x="43.7071%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (56 samples, 0.05%)</title><rect x="43.5605%" y="1829" width="0.0522%" height="15" fill="rgb(242,19,50)" fg:x="46770" fg:w="56"/><text x="43.8105%" y="1839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="43.6415%" y="1813" width="0.0196%" height="15" fill="rgb(206,124,43)" fg:x="46857" fg:w="21"/><text x="43.8915%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="43.6629%" y="1797" width="0.0112%" height="15" fill="rgb(229,4,38)" fg:x="46880" fg:w="12"/><text x="43.9129%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.01%)</title><rect x="43.6611%" y="1813" width="0.0149%" height="15" fill="rgb(247,220,45)" fg:x="46878" fg:w="16"/><text x="43.9111%" y="1823.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="43.6992%" y="1797" width="0.0121%" height="15" fill="rgb(247,195,0)" fg:x="46919" fg:w="13"/><text x="43.9492%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="43.6992%" y="1781" width="0.0121%" height="15" fill="rgb(252,12,19)" fg:x="46919" fg:w="13"/><text x="43.9492%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="43.6992%" y="1765" width="0.0121%" height="15" fill="rgb(222,49,50)" fg:x="46919" fg:w="13"/><text x="43.9492%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="43.6992%" y="1749" width="0.0121%" height="15" fill="rgb(209,157,28)" fg:x="46919" fg:w="13"/><text x="43.9492%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="43.7132%" y="1749" width="0.0168%" height="15" fill="rgb(238,174,24)" fg:x="46934" fg:w="18"/><text x="43.9632%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="43.7132%" y="1733" width="0.0168%" height="15" fill="rgb(224,17,28)" fg:x="46934" fg:w="18"/><text x="43.9632%" y="1743.50"></text></g><g><title>cfree (16 samples, 0.01%)</title><rect x="43.7151%" y="1717" width="0.0149%" height="15" fill="rgb(249,7,29)" fg:x="46936" fg:w="16"/><text x="43.9651%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (59 samples, 0.05%)</title><rect x="43.6769%" y="1813" width="0.0550%" height="15" fill="rgb(243,178,4)" fg:x="46895" fg:w="59"/><text x="43.9269%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (20 samples, 0.02%)</title><rect x="43.7132%" y="1797" width="0.0186%" height="15" fill="rgb(246,138,35)" fg:x="46934" fg:w="20"/><text x="43.9632%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (20 samples, 0.02%)</title><rect x="43.7132%" y="1781" width="0.0186%" height="15" fill="rgb(251,85,18)" fg:x="46934" fg:w="20"/><text x="43.9632%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="43.7132%" y="1765" width="0.0186%" height="15" fill="rgb(254,55,9)" fg:x="46934" fg:w="20"/><text x="43.9632%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (163 samples, 0.15%)</title><rect x="43.6182%" y="1829" width="0.1518%" height="15" fill="rgb(248,4,50)" fg:x="46832" fg:w="163"/><text x="43.8682%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (35 samples, 0.03%)</title><rect x="43.7374%" y="1813" width="0.0326%" height="15" fill="rgb(215,208,14)" fg:x="46960" fg:w="35"/><text x="43.9874%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (35 samples, 0.03%)</title><rect x="43.7374%" y="1797" width="0.0326%" height="15" fill="rgb(218,37,18)" fg:x="46960" fg:w="35"/><text x="43.9874%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (16 samples, 0.01%)</title><rect x="43.7551%" y="1781" width="0.0149%" height="15" fill="rgb(206,104,13)" fg:x="46979" fg:w="16"/><text x="44.0051%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (14 samples, 0.01%)</title><rect x="43.7570%" y="1765" width="0.0130%" height="15" fill="rgb(248,94,22)" fg:x="46981" fg:w="14"/><text x="44.0070%" y="1775.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="43.8045%" y="1797" width="0.0112%" height="15" fill="rgb(235,42,46)" fg:x="47032" fg:w="12"/><text x="44.0545%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (22 samples, 0.02%)</title><rect x="43.7961%" y="1813" width="0.0205%" height="15" fill="rgb(220,228,48)" fg:x="47023" fg:w="22"/><text x="44.0461%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.01%)</title><rect x="43.8231%" y="1797" width="0.0149%" height="15" fill="rgb(216,58,12)" fg:x="47052" fg:w="16"/><text x="44.0731%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.01%)</title><rect x="43.8231%" y="1781" width="0.0149%" height="15" fill="rgb(223,97,52)" fg:x="47052" fg:w="16"/><text x="44.0731%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="43.8250%" y="1765" width="0.0130%" height="15" fill="rgb(208,159,17)" fg:x="47054" fg:w="14"/><text x="44.0750%" y="1775.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="43.8278%" y="1749" width="0.0102%" height="15" fill="rgb(215,172,9)" fg:x="47057" fg:w="11"/><text x="44.0778%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="43.8231%" y="1813" width="0.0177%" height="15" fill="rgb(252,175,30)" fg:x="47052" fg:w="19"/><text x="44.0731%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (94 samples, 0.09%)</title><rect x="43.7700%" y="1829" width="0.0875%" height="15" fill="rgb(209,159,10)" fg:x="46995" fg:w="94"/><text x="44.0200%" y="1839.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="43.8622%" y="1813" width="0.0112%" height="15" fill="rgb(229,73,51)" fg:x="47094" fg:w="12"/><text x="44.1122%" y="1823.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="43.8622%" y="1797" width="0.0112%" height="15" fill="rgb(208,212,43)" fg:x="47094" fg:w="12"/><text x="44.1122%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (25 samples, 0.02%)</title><rect x="43.8576%" y="1829" width="0.0233%" height="15" fill="rgb(254,123,53)" fg:x="47089" fg:w="25"/><text x="44.1076%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (13,468 samples, 12.54%)</title><rect x="31.3781%" y="1845" width="12.5438%" height="15" fill="rgb(254,128,49)" fg:x="33690" fg:w="13468"/><text x="31.6281%" y="1855.50">move_vm_runtime::in..</text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (44 samples, 0.04%)</title><rect x="43.8809%" y="1829" width="0.0410%" height="15" fill="rgb(246,16,16)" fg:x="47114" fg:w="44"/><text x="44.1309%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::new (14 samples, 0.01%)</title><rect x="43.9218%" y="1845" width="0.0130%" height="15" fill="rgb(209,200,1)" fg:x="47158" fg:w="14"/><text x="44.1718%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (13,505 samples, 12.58%)</title><rect x="31.3632%" y="1861" width="12.5782%" height="15" fill="rgb(235,9,3)" fg:x="33674" fg:w="13505"/><text x="31.6132%" y="1871.50">move_vm_runtime::in..</text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (12 samples, 0.01%)</title><rect x="44.0047%" y="1541" width="0.0112%" height="15" fill="rgb(233,121,54)" fg:x="47247" fg:w="12"/><text x="44.2547%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="44.0364%" y="1525" width="0.0251%" height="15" fill="rgb(236,80,25)" fg:x="47281" fg:w="27"/><text x="44.2864%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.03%)</title><rect x="44.0364%" y="1509" width="0.0251%" height="15" fill="rgb(220,44,24)" fg:x="47281" fg:w="27"/><text x="44.2864%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.03%)</title><rect x="44.0364%" y="1493" width="0.0251%" height="15" fill="rgb(236,225,16)" fg:x="47281" fg:w="27"/><text x="44.2864%" y="1503.50"></text></g><g><title>cfree (27 samples, 0.03%)</title><rect x="44.0364%" y="1477" width="0.0251%" height="15" fill="rgb(237,140,0)" fg:x="47281" fg:w="27"/><text x="44.2864%" y="1487.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="44.0438%" y="1461" width="0.0177%" height="15" fill="rgb(243,225,53)" fg:x="47289" fg:w="19"/><text x="44.2938%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="44.0941%" y="1493" width="0.0102%" height="15" fill="rgb(240,140,30)" fg:x="47343" fg:w="11"/><text x="44.3441%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (37 samples, 0.03%)</title><rect x="44.0737%" y="1525" width="0.0345%" height="15" fill="rgb(217,51,16)" fg:x="47321" fg:w="37"/><text x="44.3237%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (37 samples, 0.03%)</title><rect x="44.0737%" y="1509" width="0.0345%" height="15" fill="rgb(245,75,50)" fg:x="47321" fg:w="37"/><text x="44.3237%" y="1519.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (22 samples, 0.02%)</title><rect x="44.1482%" y="1493" width="0.0205%" height="15" fill="rgb(208,174,22)" fg:x="47401" fg:w="22"/><text x="44.3982%" y="1503.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (29 samples, 0.03%)</title><rect x="44.1929%" y="1477" width="0.0270%" height="15" fill="rgb(219,98,50)" fg:x="47449" fg:w="29"/><text x="44.4429%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="44.1985%" y="1461" width="0.0214%" height="15" fill="rgb(243,138,3)" fg:x="47455" fg:w="23"/><text x="44.4485%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="44.2003%" y="1445" width="0.0196%" height="15" fill="rgb(243,132,26)" fg:x="47457" fg:w="21"/><text x="44.4503%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="44.2003%" y="1429" width="0.0196%" height="15" fill="rgb(250,201,8)" fg:x="47457" fg:w="21"/><text x="44.4503%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="44.2003%" y="1413" width="0.0196%" height="15" fill="rgb(213,91,26)" fg:x="47457" fg:w="21"/><text x="44.4503%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="44.2003%" y="1397" width="0.0196%" height="15" fill="rgb(229,117,1)" fg:x="47457" fg:w="21"/><text x="44.4503%" y="1407.50"></text></g><g><title>malloc (20 samples, 0.02%)</title><rect x="44.2013%" y="1381" width="0.0186%" height="15" fill="rgb(229,24,6)" fg:x="47458" fg:w="20"/><text x="44.4513%" y="1391.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (49 samples, 0.05%)</title><rect x="44.2255%" y="1445" width="0.0456%" height="15" fill="rgb(206,69,11)" fg:x="47484" fg:w="49"/><text x="44.4755%" y="1455.50"></text></g><g><title>serde::de::SeqAccess::next_element (37 samples, 0.03%)</title><rect x="44.2366%" y="1429" width="0.0345%" height="15" fill="rgb(234,111,34)" fg:x="47496" fg:w="37"/><text x="44.4866%" y="1439.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.03%)</title><rect x="44.2366%" y="1413" width="0.0345%" height="15" fill="rgb(213,187,51)" fg:x="47496" fg:w="37"/><text x="44.4866%" y="1423.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (36 samples, 0.03%)</title><rect x="44.2376%" y="1397" width="0.0335%" height="15" fill="rgb(207,45,11)" fg:x="47497" fg:w="36"/><text x="44.4876%" y="1407.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (36 samples, 0.03%)</title><rect x="44.2376%" y="1381" width="0.0335%" height="15" fill="rgb(225,151,47)" fg:x="47497" fg:w="36"/><text x="44.4876%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (36 samples, 0.03%)</title><rect x="44.2376%" y="1365" width="0.0335%" height="15" fill="rgb(211,226,5)" fg:x="47497" fg:w="36"/><text x="44.4876%" y="1375.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (27 samples, 0.03%)</title><rect x="44.2460%" y="1349" width="0.0251%" height="15" fill="rgb(214,83,52)" fg:x="47506" fg:w="27"/><text x="44.4960%" y="1359.50"></text></g><g><title>bcs::de::Deserializer::next (24 samples, 0.02%)</title><rect x="44.2488%" y="1333" width="0.0224%" height="15" fill="rgb(229,49,53)" fg:x="47509" fg:w="24"/><text x="44.4988%" y="1343.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.01%)</title><rect x="44.2609%" y="1317" width="0.0102%" height="15" fill="rgb(246,8,28)" fg:x="47522" fg:w="11"/><text x="44.5109%" y="1327.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.01%)</title><rect x="44.2609%" y="1301" width="0.0102%" height="15" fill="rgb(207,28,41)" fg:x="47522" fg:w="11"/><text x="44.5109%" y="1311.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="44.2609%" y="1285" width="0.0102%" height="15" fill="rgb(254,22,25)" fg:x="47522" fg:w="11"/><text x="44.5109%" y="1295.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="44.2609%" y="1269" width="0.0102%" height="15" fill="rgb(209,120,42)" fg:x="47522" fg:w="11"/><text x="44.5109%" y="1279.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (66 samples, 0.06%)</title><rect x="44.2199%" y="1477" width="0.0615%" height="15" fill="rgb(216,194,18)" fg:x="47478" fg:w="66"/><text x="44.4699%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (62 samples, 0.06%)</title><rect x="44.2236%" y="1461" width="0.0577%" height="15" fill="rgb(213,70,17)" fg:x="47482" fg:w="62"/><text x="44.4736%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (23 samples, 0.02%)</title><rect x="44.2814%" y="1477" width="0.0214%" height="15" fill="rgb(228,66,19)" fg:x="47544" fg:w="23"/><text x="44.5314%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (23 samples, 0.02%)</title><rect x="44.2814%" y="1461" width="0.0214%" height="15" fill="rgb(236,221,54)" fg:x="47544" fg:w="23"/><text x="44.5314%" y="1471.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (18 samples, 0.02%)</title><rect x="44.2860%" y="1445" width="0.0168%" height="15" fill="rgb(207,175,15)" fg:x="47549" fg:w="18"/><text x="44.5360%" y="1455.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (149 samples, 0.14%)</title><rect x="44.1687%" y="1493" width="0.1388%" height="15" fill="rgb(234,76,8)" fg:x="47423" fg:w="149"/><text x="44.4187%" y="1503.50"></text></g><g><title>bcs::de::from_bytes_seed (211 samples, 0.20%)</title><rect x="44.1146%" y="1509" width="0.1965%" height="15" fill="rgb(243,106,0)" fg:x="47365" fg:w="211"/><text x="44.3646%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (351 samples, 0.33%)</title><rect x="43.9926%" y="1589" width="0.3269%" height="15" fill="rgb(208,48,19)" fg:x="47234" fg:w="351"/><text x="44.2426%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (350 samples, 0.33%)</title><rect x="43.9936%" y="1573" width="0.3260%" height="15" fill="rgb(251,50,29)" fg:x="47235" fg:w="350"/><text x="44.2436%" y="1583.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (346 samples, 0.32%)</title><rect x="43.9973%" y="1557" width="0.3223%" height="15" fill="rgb(222,31,49)" fg:x="47239" fg:w="346"/><text x="44.2473%" y="1567.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (326 samples, 0.30%)</title><rect x="44.0159%" y="1541" width="0.3036%" height="15" fill="rgb(232,33,18)" fg:x="47259" fg:w="326"/><text x="44.2659%" y="1551.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (227 samples, 0.21%)</title><rect x="44.1081%" y="1525" width="0.2114%" height="15" fill="rgb(209,1,44)" fg:x="47358" fg:w="227"/><text x="44.3581%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (384 samples, 0.36%)</title><rect x="43.9880%" y="1637" width="0.3576%" height="15" fill="rgb(211,7,1)" fg:x="47229" fg:w="384"/><text x="44.2380%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (380 samples, 0.35%)</title><rect x="43.9917%" y="1621" width="0.3539%" height="15" fill="rgb(224,111,27)" fg:x="47233" fg:w="380"/><text x="44.2417%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (380 samples, 0.35%)</title><rect x="43.9917%" y="1605" width="0.3539%" height="15" fill="rgb(252,195,39)" fg:x="47233" fg:w="380"/><text x="44.2417%" y="1615.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="44.3261%" y="1589" width="0.0196%" height="15" fill="rgb(237,198,5)" fg:x="47592" fg:w="21"/><text x="44.5761%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (401 samples, 0.37%)</title><rect x="43.9870%" y="1669" width="0.3735%" height="15" fill="rgb(232,148,1)" fg:x="47228" fg:w="401"/><text x="44.2370%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (401 samples, 0.37%)</title><rect x="43.9870%" y="1653" width="0.3735%" height="15" fill="rgb(249,41,3)" fg:x="47228" fg:w="401"/><text x="44.2370%" y="1663.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (16 samples, 0.01%)</title><rect x="44.3456%" y="1637" width="0.0149%" height="15" fill="rgb(215,14,33)" fg:x="47613" fg:w="16"/><text x="44.5956%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (410 samples, 0.38%)</title><rect x="43.9870%" y="1685" width="0.3819%" height="15" fill="rgb(209,146,24)" fg:x="47228" fg:w="410"/><text x="44.2370%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.03%)</title><rect x="44.3717%" y="1605" width="0.0335%" height="15" fill="rgb(219,51,47)" fg:x="47641" fg:w="36"/><text x="44.6217%" y="1615.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.03%)</title><rect x="44.3717%" y="1589" width="0.0335%" height="15" fill="rgb(234,217,40)" fg:x="47641" fg:w="36"/><text x="44.6217%" y="1599.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 0.03%)</title><rect x="44.3717%" y="1573" width="0.0335%" height="15" fill="rgb(228,34,26)" fg:x="47641" fg:w="36"/><text x="44.6217%" y="1583.50"></text></g><g><title>realloc (36 samples, 0.03%)</title><rect x="44.3717%" y="1557" width="0.0335%" height="15" fill="rgb(224,50,29)" fg:x="47641" fg:w="36"/><text x="44.6217%" y="1567.50"></text></g><g><title>[libc.so.6] (30 samples, 0.03%)</title><rect x="44.3773%" y="1541" width="0.0279%" height="15" fill="rgb(205,79,51)" fg:x="47647" fg:w="30"/><text x="44.6273%" y="1551.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="44.3838%" y="1525" width="0.0214%" height="15" fill="rgb(218,136,28)" fg:x="47654" fg:w="23"/><text x="44.6338%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (40 samples, 0.04%)</title><rect x="44.3689%" y="1685" width="0.0373%" height="15" fill="rgb(220,150,10)" fg:x="47638" fg:w="40"/><text x="44.6189%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (40 samples, 0.04%)</title><rect x="44.3689%" y="1669" width="0.0373%" height="15" fill="rgb(242,158,47)" fg:x="47638" fg:w="40"/><text x="44.6189%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.04%)</title><rect x="44.3708%" y="1653" width="0.0354%" height="15" fill="rgb(209,68,0)" fg:x="47640" fg:w="38"/><text x="44.6208%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.04%)</title><rect x="44.3708%" y="1637" width="0.0354%" height="15" fill="rgb(208,13,41)" fg:x="47640" fg:w="38"/><text x="44.6208%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.03%)</title><rect x="44.3717%" y="1621" width="0.0345%" height="15" fill="rgb(226,201,7)" fg:x="47641" fg:w="37"/><text x="44.6217%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="44.4062%" y="1685" width="0.0149%" height="15" fill="rgb(236,103,26)" fg:x="47678" fg:w="16"/><text x="44.6562%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="44.4062%" y="1669" width="0.0149%" height="15" fill="rgb(243,162,8)" fg:x="47678" fg:w="16"/><text x="44.6562%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="44.4062%" y="1653" width="0.0149%" height="15" fill="rgb(237,225,11)" fg:x="47678" fg:w="16"/><text x="44.6562%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="44.4062%" y="1637" width="0.0149%" height="15" fill="rgb(247,186,32)" fg:x="47678" fg:w="16"/><text x="44.6562%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (503 samples, 0.47%)</title><rect x="43.9665%" y="1717" width="0.4685%" height="15" fill="rgb(215,26,28)" fg:x="47206" fg:w="503"/><text x="44.2165%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (503 samples, 0.47%)</title><rect x="43.9665%" y="1701" width="0.4685%" height="15" fill="rgb(208,121,6)" fg:x="47206" fg:w="503"/><text x="44.2165%" y="1711.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="44.4211%" y="1685" width="0.0140%" height="15" fill="rgb(225,91,3)" fg:x="47694" fg:w="15"/><text x="44.6711%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (25 samples, 0.02%)</title><rect x="44.4676%" y="1557" width="0.0233%" height="15" fill="rgb(246,119,36)" fg:x="47744" fg:w="25"/><text x="44.7176%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (15 samples, 0.01%)</title><rect x="44.4769%" y="1541" width="0.0140%" height="15" fill="rgb(254,173,2)" fg:x="47754" fg:w="15"/><text x="44.7269%" y="1551.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::is_human_readable (11 samples, 0.01%)</title><rect x="44.5095%" y="1493" width="0.0102%" height="15" fill="rgb(209,87,54)" fg:x="47789" fg:w="11"/><text x="44.7595%" y="1503.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (57 samples, 0.05%)</title><rect x="44.5319%" y="1413" width="0.0531%" height="15" fill="rgb(223,216,20)" fg:x="47813" fg:w="57"/><text x="44.7819%" y="1423.50"></text></g><g><title>serde::de::SeqAccess::next_element (42 samples, 0.04%)</title><rect x="44.5459%" y="1397" width="0.0391%" height="15" fill="rgb(220,31,8)" fg:x="47828" fg:w="42"/><text x="44.7959%" y="1407.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (42 samples, 0.04%)</title><rect x="44.5459%" y="1381" width="0.0391%" height="15" fill="rgb(220,185,15)" fg:x="47828" fg:w="42"/><text x="44.7959%" y="1391.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 0.04%)</title><rect x="44.5459%" y="1365" width="0.0391%" height="15" fill="rgb(247,190,50)" fg:x="47828" fg:w="42"/><text x="44.7959%" y="1375.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (42 samples, 0.04%)</title><rect x="44.5459%" y="1349" width="0.0391%" height="15" fill="rgb(239,173,47)" fg:x="47828" fg:w="42"/><text x="44.7959%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (42 samples, 0.04%)</title><rect x="44.5459%" y="1333" width="0.0391%" height="15" fill="rgb(218,190,42)" fg:x="47828" fg:w="42"/><text x="44.7959%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (37 samples, 0.03%)</title><rect x="44.5505%" y="1317" width="0.0345%" height="15" fill="rgb(251,207,16)" fg:x="47833" fg:w="37"/><text x="44.8005%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::next (16 samples, 0.01%)</title><rect x="44.5701%" y="1301" width="0.0149%" height="15" fill="rgb(222,199,47)" fg:x="47854" fg:w="16"/><text x="44.8201%" y="1311.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.01%)</title><rect x="44.5729%" y="1285" width="0.0121%" height="15" fill="rgb(245,190,7)" fg:x="47857" fg:w="13"/><text x="44.8229%" y="1295.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.01%)</title><rect x="44.5729%" y="1269" width="0.0121%" height="15" fill="rgb(239,85,38)" fg:x="47857" fg:w="13"/><text x="44.8229%" y="1279.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="44.5729%" y="1253" width="0.0121%" height="15" fill="rgb(229,69,51)" fg:x="47857" fg:w="13"/><text x="44.8229%" y="1263.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="44.5729%" y="1237" width="0.0121%" height="15" fill="rgb(231,104,51)" fg:x="47857" fg:w="13"/><text x="44.8229%" y="1247.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (13 samples, 0.01%)</title><rect x="44.5729%" y="1221" width="0.0121%" height="15" fill="rgb(235,49,4)" fg:x="47857" fg:w="13"/><text x="44.8229%" y="1231.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (13 samples, 0.01%)</title><rect x="44.5729%" y="1205" width="0.0121%" height="15" fill="rgb(246,166,20)" fg:x="47857" fg:w="13"/><text x="44.8229%" y="1215.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (66 samples, 0.06%)</title><rect x="44.5291%" y="1461" width="0.0615%" height="15" fill="rgb(230,119,37)" fg:x="47810" fg:w="66"/><text x="44.7791%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (65 samples, 0.06%)</title><rect x="44.5300%" y="1445" width="0.0605%" height="15" fill="rgb(234,77,34)" fg:x="47811" fg:w="65"/><text x="44.7800%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (65 samples, 0.06%)</title><rect x="44.5300%" y="1429" width="0.0605%" height="15" fill="rgb(211,222,33)" fg:x="47811" fg:w="65"/><text x="44.7800%" y="1439.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (96 samples, 0.09%)</title><rect x="44.5039%" y="1509" width="0.0894%" height="15" fill="rgb(226,45,42)" fg:x="47783" fg:w="96"/><text x="44.7539%" y="1519.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (72 samples, 0.07%)</title><rect x="44.5263%" y="1493" width="0.0671%" height="15" fill="rgb(215,174,28)" fg:x="47807" fg:w="72"/><text x="44.7763%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (72 samples, 0.07%)</title><rect x="44.5263%" y="1477" width="0.0671%" height="15" fill="rgb(254,173,49)" fg:x="47807" fg:w="72"/><text x="44.7763%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (118 samples, 0.11%)</title><rect x="44.4974%" y="1525" width="0.1099%" height="15" fill="rgb(229,191,6)" fg:x="47776" fg:w="118"/><text x="44.7474%" y="1535.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (15 samples, 0.01%)</title><rect x="44.5934%" y="1509" width="0.0140%" height="15" fill="rgb(212,145,22)" fg:x="47879" fg:w="15"/><text x="44.8434%" y="1519.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="44.5934%" y="1493" width="0.0140%" height="15" fill="rgb(226,6,51)" fg:x="47879" fg:w="15"/><text x="44.8434%" y="1503.50"></text></g><g><title>move_vm_types::values::values_impl::Value::signer (15 samples, 0.01%)</title><rect x="44.5934%" y="1477" width="0.0140%" height="15" fill="rgb(227,128,8)" fg:x="47879" fg:w="15"/><text x="44.8434%" y="1487.50"></text></g><g><title>move_vm_types::values::values_impl::Container::signer (15 samples, 0.01%)</title><rect x="44.5934%" y="1461" width="0.0140%" height="15" fill="rgb(205,24,10)" fg:x="47879" fg:w="15"/><text x="44.8434%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (187 samples, 0.17%)</title><rect x="44.4360%" y="1621" width="0.1742%" height="15" fill="rgb(217,147,27)" fg:x="47710" fg:w="187"/><text x="44.6860%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (187 samples, 0.17%)</title><rect x="44.4360%" y="1605" width="0.1742%" height="15" fill="rgb(250,82,42)" fg:x="47710" fg:w="187"/><text x="44.6860%" y="1615.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (185 samples, 0.17%)</title><rect x="44.4378%" y="1589" width="0.1723%" height="15" fill="rgb(248,93,17)" fg:x="47712" fg:w="185"/><text x="44.6878%" y="1599.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (175 samples, 0.16%)</title><rect x="44.4471%" y="1573" width="0.1630%" height="15" fill="rgb(254,212,40)" fg:x="47722" fg:w="175"/><text x="44.6971%" y="1583.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (128 samples, 0.12%)</title><rect x="44.4909%" y="1557" width="0.1192%" height="15" fill="rgb(229,209,2)" fg:x="47769" fg:w="128"/><text x="44.7409%" y="1567.50"></text></g><g><title>bcs::de::from_bytes_seed (126 samples, 0.12%)</title><rect x="44.4928%" y="1541" width="0.1174%" height="15" fill="rgb(211,50,43)" fg:x="47771" fg:w="126"/><text x="44.7428%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (197 samples, 0.18%)</title><rect x="44.4350%" y="1669" width="0.1835%" height="15" fill="rgb(245,196,29)" fg:x="47709" fg:w="197"/><text x="44.6850%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (197 samples, 0.18%)</title><rect x="44.4350%" y="1653" width="0.1835%" height="15" fill="rgb(216,132,13)" fg:x="47709" fg:w="197"/><text x="44.6850%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (197 samples, 0.18%)</title><rect x="44.4350%" y="1637" width="0.1835%" height="15" fill="rgb(251,108,21)" fg:x="47709" fg:w="197"/><text x="44.6850%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (198 samples, 0.18%)</title><rect x="44.4350%" y="1701" width="0.1844%" height="15" fill="rgb(229,174,54)" fg:x="47709" fg:w="198"/><text x="44.6850%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (198 samples, 0.18%)</title><rect x="44.4350%" y="1685" width="0.1844%" height="15" fill="rgb(211,175,47)" fg:x="47709" fg:w="198"/><text x="44.6850%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (204 samples, 0.19%)</title><rect x="44.4350%" y="1717" width="0.1900%" height="15" fill="rgb(234,5,37)" fg:x="47709" fg:w="204"/><text x="44.6850%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (728 samples, 0.68%)</title><rect x="43.9507%" y="1845" width="0.6780%" height="15" fill="rgb(244,150,43)" fg:x="47189" fg:w="728"/><text x="44.2007%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (728 samples, 0.68%)</title><rect x="43.9507%" y="1829" width="0.6780%" height="15" fill="rgb(242,172,38)" fg:x="47189" fg:w="728"/><text x="44.2007%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (727 samples, 0.68%)</title><rect x="43.9516%" y="1813" width="0.6771%" height="15" fill="rgb(205,27,8)" fg:x="47190" fg:w="727"/><text x="44.2016%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (723 samples, 0.67%)</title><rect x="43.9554%" y="1797" width="0.6734%" height="15" fill="rgb(217,57,3)" fg:x="47194" fg:w="723"/><text x="44.2054%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (723 samples, 0.67%)</title><rect x="43.9554%" y="1781" width="0.6734%" height="15" fill="rgb(242,21,38)" fg:x="47194" fg:w="723"/><text x="44.2054%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (723 samples, 0.67%)</title><rect x="43.9554%" y="1765" width="0.6734%" height="15" fill="rgb(209,64,43)" fg:x="47194" fg:w="723"/><text x="44.2054%" y="1775.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (719 samples, 0.67%)</title><rect x="43.9591%" y="1749" width="0.6697%" height="15" fill="rgb(222,2,46)" fg:x="47198" fg:w="719"/><text x="44.2091%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (712 samples, 0.66%)</title><rect x="43.9656%" y="1733" width="0.6631%" height="15" fill="rgb(218,19,44)" fg:x="47205" fg:w="712"/><text x="44.2156%" y="1743.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (760 samples, 0.71%)</title><rect x="43.9414%" y="1861" width="0.7078%" height="15" fill="rgb(240,203,42)" fg:x="47179" fg:w="760"/><text x="44.1914%" y="1871.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (22 samples, 0.02%)</title><rect x="44.6288%" y="1845" width="0.0205%" height="15" fill="rgb(229,23,45)" fg:x="47917" fg:w="22"/><text x="44.8788%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="44.6371%" y="1829" width="0.0121%" height="15" fill="rgb(205,228,51)" fg:x="47926" fg:w="13"/><text x="44.8871%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="44.6371%" y="1813" width="0.0121%" height="15" fill="rgb(239,36,20)" fg:x="47926" fg:w="13"/><text x="44.8871%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="44.6371%" y="1797" width="0.0121%" height="15" fill="rgb(248,172,27)" fg:x="47926" fg:w="13"/><text x="44.8871%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="44.6371%" y="1781" width="0.0121%" height="15" fill="rgb(244,55,32)" fg:x="47926" fg:w="13"/><text x="44.8871%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="44.6390%" y="1765" width="0.0102%" height="15" fill="rgb(215,97,16)" fg:x="47928" fg:w="11"/><text x="44.8890%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="44.6390%" y="1749" width="0.0102%" height="15" fill="rgb(224,80,29)" fg:x="47928" fg:w="11"/><text x="44.8890%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="44.6390%" y="1733" width="0.0102%" height="15" fill="rgb(216,93,47)" fg:x="47928" fg:w="11"/><text x="44.8890%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="44.6390%" y="1717" width="0.0102%" height="15" fill="rgb(238,159,10)" fg:x="47928" fg:w="11"/><text x="44.8890%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="44.6390%" y="1701" width="0.0102%" height="15" fill="rgb(223,98,29)" fg:x="47928" fg:w="11"/><text x="44.8890%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="44.6390%" y="1685" width="0.0102%" height="15" fill="rgb(210,176,23)" fg:x="47928" fg:w="11"/><text x="44.8890%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="44.6390%" y="1669" width="0.0102%" height="15" fill="rgb(242,162,27)" fg:x="47928" fg:w="11"/><text x="44.8890%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (16,108 samples, 15.00%)</title><rect x="29.6932%" y="1941" width="15.0026%" height="15" fill="rgb(245,109,32)" fg:x="31881" fg:w="16108"/><text x="29.9432%" y="1951.50">aptos_vm::aptos_vm::Apt..</text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue (16,108 samples, 15.00%)</title><rect x="29.6932%" y="1925" width="15.0026%" height="15" fill="rgb(248,87,8)" fg:x="31881" fg:w="16108"/><text x="29.9432%" y="1935.50">aptos_vm::aptos_vm_impl..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (15,284 samples, 14.24%)</title><rect x="30.4607%" y="1909" width="14.2352%" height="15" fill="rgb(250,160,50)" fg:x="32705" fg:w="15284"/><text x="30.7107%" y="1919.50">move_vm_runtime::sessi..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (15,284 samples, 14.24%)</title><rect x="30.4607%" y="1893" width="14.2352%" height="15" fill="rgb(246,165,25)" fg:x="32705" fg:w="15284"/><text x="30.7107%" y="1903.50">move_vm_runtime::runti..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (14,600 samples, 13.60%)</title><rect x="31.0977%" y="1877" width="13.5981%" height="15" fill="rgb(249,219,3)" fg:x="33389" fg:w="14600"/><text x="31.3477%" y="1887.50">move_vm_runtime::runt..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (50 samples, 0.05%)</title><rect x="44.6492%" y="1861" width="0.0466%" height="15" fill="rgb(226,66,5)" fg:x="47939" fg:w="50"/><text x="44.8992%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (39 samples, 0.04%)</title><rect x="44.6595%" y="1845" width="0.0363%" height="15" fill="rgb(250,220,43)" fg:x="47950" fg:w="39"/><text x="44.9095%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (39 samples, 0.04%)</title><rect x="44.6595%" y="1829" width="0.0363%" height="15" fill="rgb(225,111,31)" fg:x="47950" fg:w="39"/><text x="44.9095%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (38 samples, 0.04%)</title><rect x="44.6604%" y="1813" width="0.0354%" height="15" fill="rgb(248,106,18)" fg:x="47951" fg:w="38"/><text x="44.9104%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (34 samples, 0.03%)</title><rect x="44.6641%" y="1797" width="0.0317%" height="15" fill="rgb(220,226,45)" fg:x="47955" fg:w="34"/><text x="44.9141%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.03%)</title><rect x="44.6641%" y="1781" width="0.0317%" height="15" fill="rgb(208,58,53)" fg:x="47955" fg:w="34"/><text x="44.9141%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34 samples, 0.03%)</title><rect x="44.6641%" y="1765" width="0.0317%" height="15" fill="rgb(209,133,1)" fg:x="47955" fg:w="34"/><text x="44.9141%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.03%)</title><rect x="44.6660%" y="1749" width="0.0298%" height="15" fill="rgb(228,216,27)" fg:x="47957" fg:w="32"/><text x="44.9160%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="44.6763%" y="1733" width="0.0196%" height="15" fill="rgb(238,155,2)" fg:x="47968" fg:w="21"/><text x="44.9263%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="44.6763%" y="1717" width="0.0196%" height="15" fill="rgb(244,99,37)" fg:x="47968" fg:w="21"/><text x="44.9263%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="44.6763%" y="1701" width="0.0196%" height="15" fill="rgb(254,32,3)" fg:x="47968" fg:w="21"/><text x="44.9263%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="44.6763%" y="1685" width="0.0196%" height="15" fill="rgb(234,46,50)" fg:x="47968" fg:w="21"/><text x="44.9263%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="44.6763%" y="1669" width="0.0196%" height="15" fill="rgb(232,118,51)" fg:x="47968" fg:w="21"/><text x="44.9263%" y="1679.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="44.6856%" y="1653" width="0.0102%" height="15" fill="rgb(207,24,32)" fg:x="47978" fg:w="11"/><text x="44.9356%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.02%)</title><rect x="44.7340%" y="1477" width="0.0186%" height="15" fill="rgb(208,107,43)" fg:x="48030" fg:w="20"/><text x="44.9840%" y="1487.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.02%)</title><rect x="44.7340%" y="1461" width="0.0186%" height="15" fill="rgb(231,28,9)" fg:x="48030" fg:w="20"/><text x="44.9840%" y="1471.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.02%)</title><rect x="44.7340%" y="1445" width="0.0186%" height="15" fill="rgb(241,204,15)" fg:x="48030" fg:w="20"/><text x="44.9840%" y="1455.50"></text></g><g><title>realloc (19 samples, 0.02%)</title><rect x="44.7349%" y="1429" width="0.0177%" height="15" fill="rgb(214,54,15)" fg:x="48031" fg:w="19"/><text x="44.9849%" y="1439.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="44.7396%" y="1413" width="0.0130%" height="15" fill="rgb(230,12,28)" fg:x="48036" fg:w="14"/><text x="44.9896%" y="1423.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="44.7414%" y="1397" width="0.0112%" height="15" fill="rgb(221,171,5)" fg:x="48038" fg:w="12"/><text x="44.9914%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (40 samples, 0.04%)</title><rect x="44.7191%" y="1669" width="0.0373%" height="15" fill="rgb(207,72,25)" fg:x="48014" fg:w="40"/><text x="44.9691%" y="1679.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (40 samples, 0.04%)</title><rect x="44.7191%" y="1653" width="0.0373%" height="15" fill="rgb(249,79,37)" fg:x="48014" fg:w="40"/><text x="44.9691%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (40 samples, 0.04%)</title><rect x="44.7191%" y="1637" width="0.0373%" height="15" fill="rgb(209,98,49)" fg:x="48014" fg:w="40"/><text x="44.9691%" y="1647.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (40 samples, 0.04%)</title><rect x="44.7191%" y="1621" width="0.0373%" height="15" fill="rgb(221,62,13)" fg:x="48014" fg:w="40"/><text x="44.9691%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 0.04%)</title><rect x="44.7191%" y="1605" width="0.0373%" height="15" fill="rgb(223,39,6)" fg:x="48014" fg:w="40"/><text x="44.9691%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 0.04%)</title><rect x="44.7191%" y="1589" width="0.0373%" height="15" fill="rgb(246,163,20)" fg:x="48014" fg:w="40"/><text x="44.9691%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 0.04%)</title><rect x="44.7191%" y="1573" width="0.0373%" height="15" fill="rgb(211,111,29)" fg:x="48014" fg:w="40"/><text x="44.9691%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="44.7265%" y="1557" width="0.0298%" height="15" fill="rgb(243,118,5)" fg:x="48022" fg:w="32"/><text x="44.9765%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="44.7265%" y="1541" width="0.0298%" height="15" fill="rgb(240,144,52)" fg:x="48022" fg:w="32"/><text x="44.9765%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect x="44.7312%" y="1525" width="0.0251%" height="15" fill="rgb(244,158,36)" fg:x="48027" fg:w="27"/><text x="44.9812%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.03%)</title><rect x="44.7312%" y="1509" width="0.0251%" height="15" fill="rgb(241,109,37)" fg:x="48027" fg:w="27"/><text x="44.9812%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="44.7340%" y="1493" width="0.0224%" height="15" fill="rgb(213,95,32)" fg:x="48030" fg:w="24"/><text x="44.9840%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (41 samples, 0.04%)</title><rect x="44.7191%" y="1717" width="0.0382%" height="15" fill="rgb(252,193,9)" fg:x="48014" fg:w="41"/><text x="44.9691%" y="1727.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (41 samples, 0.04%)</title><rect x="44.7191%" y="1701" width="0.0382%" height="15" fill="rgb(225,213,21)" fg:x="48014" fg:w="41"/><text x="44.9691%" y="1711.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (41 samples, 0.04%)</title><rect x="44.7191%" y="1685" width="0.0382%" height="15" fill="rgb(220,172,46)" fg:x="48014" fg:w="41"/><text x="44.9691%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="44.7619%" y="1509" width="0.0177%" height="15" fill="rgb(235,75,41)" fg:x="48060" fg:w="19"/><text x="45.0119%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="44.7619%" y="1493" width="0.0177%" height="15" fill="rgb(213,86,9)" fg:x="48060" fg:w="19"/><text x="45.0119%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="44.7619%" y="1477" width="0.0177%" height="15" fill="rgb(238,127,51)" fg:x="48060" fg:w="19"/><text x="45.0119%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="44.7638%" y="1461" width="0.0158%" height="15" fill="rgb(215,2,54)" fg:x="48062" fg:w="17"/><text x="45.0138%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="44.7638%" y="1445" width="0.0158%" height="15" fill="rgb(245,80,6)" fg:x="48062" fg:w="17"/><text x="45.0138%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.01%)</title><rect x="44.7647%" y="1429" width="0.0149%" height="15" fill="rgb(233,106,42)" fg:x="48063" fg:w="16"/><text x="45.0147%" y="1439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.01%)</title><rect x="44.7647%" y="1413" width="0.0149%" height="15" fill="rgb(244,86,38)" fg:x="48063" fg:w="16"/><text x="45.0147%" y="1423.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.01%)</title><rect x="44.7647%" y="1397" width="0.0149%" height="15" fill="rgb(242,167,7)" fg:x="48063" fg:w="16"/><text x="45.0147%" y="1407.50"></text></g><g><title>realloc (16 samples, 0.01%)</title><rect x="44.7647%" y="1381" width="0.0149%" height="15" fill="rgb(218,216,3)" fg:x="48063" fg:w="16"/><text x="45.0147%" y="1391.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="44.7647%" y="1365" width="0.0149%" height="15" fill="rgb(206,136,36)" fg:x="48063" fg:w="16"/><text x="45.0147%" y="1375.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="44.7685%" y="1349" width="0.0112%" height="15" fill="rgb(206,206,15)" fg:x="48067" fg:w="12"/><text x="45.0185%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (24 samples, 0.02%)</title><rect x="44.7601%" y="1621" width="0.0224%" height="15" fill="rgb(207,163,34)" fg:x="48058" fg:w="24"/><text x="45.0101%" y="1631.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (24 samples, 0.02%)</title><rect x="44.7601%" y="1605" width="0.0224%" height="15" fill="rgb(240,127,22)" fg:x="48058" fg:w="24"/><text x="45.0101%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (24 samples, 0.02%)</title><rect x="44.7601%" y="1589" width="0.0224%" height="15" fill="rgb(227,49,5)" fg:x="48058" fg:w="24"/><text x="45.0101%" y="1599.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (22 samples, 0.02%)</title><rect x="44.7619%" y="1573" width="0.0205%" height="15" fill="rgb(231,8,6)" fg:x="48060" fg:w="22"/><text x="45.0119%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.02%)</title><rect x="44.7619%" y="1557" width="0.0205%" height="15" fill="rgb(223,21,24)" fg:x="48060" fg:w="22"/><text x="45.0119%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.02%)</title><rect x="44.7619%" y="1541" width="0.0205%" height="15" fill="rgb(244,44,52)" fg:x="48060" fg:w="22"/><text x="45.0119%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.02%)</title><rect x="44.7619%" y="1525" width="0.0205%" height="15" fill="rgb(207,73,28)" fg:x="48060" fg:w="22"/><text x="45.0119%" y="1535.50"></text></g><g><title>&lt;aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (26 samples, 0.02%)</title><rect x="44.7591%" y="1653" width="0.0242%" height="15" fill="rgb(234,215,10)" fg:x="48057" fg:w="26"/><text x="45.0091%" y="1663.50"></text></g><g><title>aptos_types::serde_helper::vec_bytes::serialize (26 samples, 0.02%)</title><rect x="44.7591%" y="1637" width="0.0242%" height="15" fill="rgb(236,85,3)" fg:x="48057" fg:w="26"/><text x="45.0091%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="44.7890%" y="1461" width="0.0261%" height="15" fill="rgb(236,102,39)" fg:x="48089" fg:w="28"/><text x="45.0390%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="44.7890%" y="1445" width="0.0261%" height="15" fill="rgb(243,50,8)" fg:x="48089" fg:w="28"/><text x="45.0390%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.02%)</title><rect x="44.7927%" y="1429" width="0.0224%" height="15" fill="rgb(207,111,4)" fg:x="48093" fg:w="24"/><text x="45.0427%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.02%)</title><rect x="44.7936%" y="1413" width="0.0214%" height="15" fill="rgb(230,52,42)" fg:x="48094" fg:w="23"/><text x="45.0436%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="44.7945%" y="1397" width="0.0205%" height="15" fill="rgb(252,178,50)" fg:x="48095" fg:w="22"/><text x="45.0445%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.02%)</title><rect x="44.7964%" y="1381" width="0.0186%" height="15" fill="rgb(234,46,35)" fg:x="48097" fg:w="20"/><text x="45.0464%" y="1391.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.02%)</title><rect x="44.7964%" y="1365" width="0.0186%" height="15" fill="rgb(228,69,37)" fg:x="48097" fg:w="20"/><text x="45.0464%" y="1375.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.02%)</title><rect x="44.7964%" y="1349" width="0.0186%" height="15" fill="rgb(221,21,11)" fg:x="48097" fg:w="20"/><text x="45.0464%" y="1359.50"></text></g><g><title>realloc (20 samples, 0.02%)</title><rect x="44.7964%" y="1333" width="0.0186%" height="15" fill="rgb(223,56,9)" fg:x="48097" fg:w="20"/><text x="45.0464%" y="1343.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="44.8011%" y="1317" width="0.0140%" height="15" fill="rgb(234,30,19)" fg:x="48102" fg:w="15"/><text x="45.0511%" y="1327.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="44.8029%" y="1301" width="0.0121%" height="15" fill="rgb(211,64,54)" fg:x="48104" fg:w="13"/><text x="45.0529%" y="1311.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (33 samples, 0.03%)</title><rect x="44.7871%" y="1621" width="0.0307%" height="15" fill="rgb(250,189,5)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 0.03%)</title><rect x="44.7871%" y="1605" width="0.0307%" height="15" fill="rgb(214,180,13)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (33 samples, 0.03%)</title><rect x="44.7871%" y="1589" width="0.0307%" height="15" fill="rgb(238,40,40)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (33 samples, 0.03%)</title><rect x="44.7871%" y="1573" width="0.0307%" height="15" fill="rgb(214,101,38)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (33 samples, 0.03%)</title><rect x="44.7871%" y="1557" width="0.0307%" height="15" fill="rgb(242,65,53)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (33 samples, 0.03%)</title><rect x="44.7871%" y="1541" width="0.0307%" height="15" fill="rgb(230,22,45)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1551.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (33 samples, 0.03%)</title><rect x="44.7871%" y="1525" width="0.0307%" height="15" fill="rgb(223,77,1)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (33 samples, 0.03%)</title><rect x="44.7871%" y="1509" width="0.0307%" height="15" fill="rgb(227,33,37)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (33 samples, 0.03%)</title><rect x="44.7871%" y="1493" width="0.0307%" height="15" fill="rgb(224,148,39)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 0.03%)</title><rect x="44.7871%" y="1477" width="0.0307%" height="15" fill="rgb(232,212,39)" fg:x="48087" fg:w="33"/><text x="45.0371%" y="1487.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::ModuleId&gt;::serialize (35 samples, 0.03%)</title><rect x="44.7871%" y="1653" width="0.0326%" height="15" fill="rgb(251,172,7)" fg:x="48087" fg:w="35"/><text x="45.0371%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (35 samples, 0.03%)</title><rect x="44.7871%" y="1637" width="0.0326%" height="15" fill="rgb(219,39,9)" fg:x="48087" fg:w="35"/><text x="45.0371%" y="1647.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (68 samples, 0.06%)</title><rect x="44.7573%" y="1717" width="0.0633%" height="15" fill="rgb(228,118,14)" fg:x="48055" fg:w="68"/><text x="45.0073%" y="1727.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (68 samples, 0.06%)</title><rect x="44.7573%" y="1701" width="0.0633%" height="15" fill="rgb(207,140,10)" fg:x="48055" fg:w="68"/><text x="45.0073%" y="1711.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (68 samples, 0.06%)</title><rect x="44.7573%" y="1685" width="0.0633%" height="15" fill="rgb(227,111,53)" fg:x="48055" fg:w="68"/><text x="45.0073%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (66 samples, 0.06%)</title><rect x="44.7591%" y="1669" width="0.0615%" height="15" fill="rgb(216,165,16)" fg:x="48057" fg:w="66"/><text x="45.0091%" y="1679.50"></text></g><g><title>bcs::ser::to_bytes (125 samples, 0.12%)</title><rect x="44.7182%" y="1781" width="0.1164%" height="15" fill="rgb(226,111,18)" fg:x="48013" fg:w="125"/><text x="44.9682%" y="1791.50"></text></g><g><title>bcs::ser::serialize_into (125 samples, 0.12%)</title><rect x="44.7182%" y="1765" width="0.1164%" height="15" fill="rgb(251,27,17)" fg:x="48013" fg:w="125"/><text x="44.9682%" y="1775.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (125 samples, 0.12%)</title><rect x="44.7182%" y="1749" width="0.1164%" height="15" fill="rgb(254,69,9)" fg:x="48013" fg:w="125"/><text x="44.9682%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (124 samples, 0.12%)</title><rect x="44.7191%" y="1733" width="0.1155%" height="15" fill="rgb(234,140,37)" fg:x="48014" fg:w="124"/><text x="44.9691%" y="1743.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (15 samples, 0.01%)</title><rect x="44.8206%" y="1717" width="0.0140%" height="15" fill="rgb(220,93,8)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1727.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (15 samples, 0.01%)</title><rect x="44.8206%" y="1701" width="0.0140%" height="15" fill="rgb(236,113,3)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1711.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.01%)</title><rect x="44.8206%" y="1685" width="0.0140%" height="15" fill="rgb(234,108,23)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.01%)</title><rect x="44.8206%" y="1669" width="0.0140%" height="15" fill="rgb(205,114,34)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.01%)</title><rect x="44.8206%" y="1653" width="0.0140%" height="15" fill="rgb(236,200,45)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.01%)</title><rect x="44.8206%" y="1637" width="0.0140%" height="15" fill="rgb(227,194,29)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.01%)</title><rect x="44.8206%" y="1621" width="0.0140%" height="15" fill="rgb(250,76,42)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.01%)</title><rect x="44.8206%" y="1605" width="0.0140%" height="15" fill="rgb(208,128,8)" fg:x="48123" fg:w="15"/><text x="45.0706%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.01%)</title><rect x="44.8234%" y="1589" width="0.0112%" height="15" fill="rgb(229,209,35)" fg:x="48126" fg:w="12"/><text x="45.0734%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="44.8234%" y="1573" width="0.0112%" height="15" fill="rgb(215,39,53)" fg:x="48126" fg:w="12"/><text x="45.0734%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="44.8234%" y="1557" width="0.0112%" height="15" fill="rgb(219,123,41)" fg:x="48126" fg:w="12"/><text x="45.0734%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.01%)</title><rect x="44.8234%" y="1541" width="0.0112%" height="15" fill="rgb(212,158,18)" fg:x="48126" fg:w="12"/><text x="45.0734%" y="1551.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.01%)</title><rect x="44.8234%" y="1525" width="0.0112%" height="15" fill="rgb(234,196,53)" fg:x="48126" fg:w="12"/><text x="45.0734%" y="1535.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.01%)</title><rect x="44.8234%" y="1509" width="0.0112%" height="15" fill="rgb(210,139,12)" fg:x="48126" fg:w="12"/><text x="45.0734%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (127 samples, 0.12%)</title><rect x="44.7172%" y="1845" width="0.1183%" height="15" fill="rgb(220,116,54)" fg:x="48012" fg:w="127"/><text x="44.9672%" y="1855.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (127 samples, 0.12%)</title><rect x="44.7172%" y="1829" width="0.1183%" height="15" fill="rgb(247,103,28)" fg:x="48012" fg:w="127"/><text x="44.9672%" y="1839.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (126 samples, 0.12%)</title><rect x="44.7182%" y="1813" width="0.1174%" height="15" fill="rgb(253,156,45)" fg:x="48013" fg:w="126"/><text x="44.9682%" y="1823.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len::{{closure}} (126 samples, 0.12%)</title><rect x="44.7182%" y="1797" width="0.1174%" height="15" fill="rgb(237,157,52)" fg:x="48013" fg:w="126"/><text x="44.9682%" y="1807.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len (135 samples, 0.13%)</title><rect x="44.7126%" y="1925" width="0.1257%" height="15" fill="rgb(253,112,16)" fg:x="48007" fg:w="135"/><text x="44.9626%" y="1935.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (133 samples, 0.12%)</title><rect x="44.7144%" y="1909" width="0.1239%" height="15" fill="rgb(234,70,18)" fg:x="48009" fg:w="133"/><text x="44.9644%" y="1919.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (133 samples, 0.12%)</title><rect x="44.7144%" y="1893" width="0.1239%" height="15" fill="rgb(247,138,19)" fg:x="48009" fg:w="133"/><text x="44.9644%" y="1903.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (133 samples, 0.12%)</title><rect x="44.7144%" y="1877" width="0.1239%" height="15" fill="rgb(207,171,1)" fg:x="48009" fg:w="133"/><text x="44.9644%" y="1887.50"></text></g><g><title>once_cell::imp::initialize_or_wait (132 samples, 0.12%)</title><rect x="44.7154%" y="1861" width="0.1229%" height="15" fill="rgb(239,213,3)" fg:x="48010" fg:w="132"/><text x="44.9654%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.02%)</title><rect x="44.8458%" y="1861" width="0.0168%" height="15" fill="rgb(226,112,4)" fg:x="48150" fg:w="18"/><text x="45.0958%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="44.8458%" y="1845" width="0.0168%" height="15" fill="rgb(252,170,12)" fg:x="48150" fg:w="18"/><text x="45.0958%" y="1855.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="44.8467%" y="1829" width="0.0158%" height="15" fill="rgb(241,106,13)" fg:x="48151" fg:w="17"/><text x="45.0967%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.02%)</title><rect x="44.8467%" y="1813" width="0.0158%" height="15" fill="rgb(225,73,23)" fg:x="48151" fg:w="17"/><text x="45.0967%" y="1823.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.02%)</title><rect x="44.8467%" y="1797" width="0.0158%" height="15" fill="rgb(251,227,29)" fg:x="48151" fg:w="17"/><text x="45.0967%" y="1807.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.02%)</title><rect x="44.8467%" y="1781" width="0.0158%" height="15" fill="rgb(237,144,13)" fg:x="48151" fg:w="17"/><text x="45.0967%" y="1791.50"></text></g><g><title>realloc (16 samples, 0.01%)</title><rect x="44.8476%" y="1765" width="0.0149%" height="15" fill="rgb(232,106,46)" fg:x="48152" fg:w="16"/><text x="45.0976%" y="1775.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="44.8523%" y="1749" width="0.0102%" height="15" fill="rgb(245,154,53)" fg:x="48157" fg:w="11"/><text x="45.1023%" y="1759.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key_preimage (24 samples, 0.02%)</title><rect x="44.8411%" y="1909" width="0.0224%" height="15" fill="rgb(212,119,47)" fg:x="48145" fg:w="24"/><text x="45.0911%" y="1919.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (19 samples, 0.02%)</title><rect x="44.8458%" y="1893" width="0.0177%" height="15" fill="rgb(253,135,25)" fg:x="48150" fg:w="19"/><text x="45.0958%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="44.8458%" y="1877" width="0.0177%" height="15" fill="rgb(253,208,39)" fg:x="48150" fg:w="19"/><text x="45.0958%" y="1887.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (164 samples, 0.15%)</title><rect x="44.8690%" y="1813" width="0.1527%" height="15" fill="rgb(226,64,12)" fg:x="48175" fg:w="164"/><text x="45.1190%" y="1823.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (164 samples, 0.15%)</title><rect x="44.8690%" y="1797" width="0.1527%" height="15" fill="rgb(214,162,37)" fg:x="48175" fg:w="164"/><text x="45.1190%" y="1807.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (164 samples, 0.15%)</title><rect x="44.8690%" y="1781" width="0.1527%" height="15" fill="rgb(250,104,5)" fg:x="48175" fg:w="164"/><text x="45.1190%" y="1791.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (163 samples, 0.15%)</title><rect x="44.8700%" y="1765" width="0.1518%" height="15" fill="rgb(220,202,50)" fg:x="48176" fg:w="163"/><text x="45.1200%" y="1775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.03%)</title><rect x="44.9939%" y="1749" width="0.0279%" height="15" fill="rgb(248,67,38)" fg:x="48309" fg:w="30"/><text x="45.2439%" y="1759.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (167 samples, 0.16%)</title><rect x="44.8681%" y="1861" width="0.1555%" height="15" fill="rgb(242,94,35)" fg:x="48174" fg:w="167"/><text x="45.1181%" y="1871.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (167 samples, 0.16%)</title><rect x="44.8681%" y="1845" width="0.1555%" height="15" fill="rgb(209,78,37)" fg:x="48174" fg:w="167"/><text x="45.1181%" y="1855.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (167 samples, 0.16%)</title><rect x="44.8681%" y="1829" width="0.1555%" height="15" fill="rgb(230,126,47)" fg:x="48174" fg:w="167"/><text x="45.1181%" y="1839.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (168 samples, 0.16%)</title><rect x="44.8681%" y="1877" width="0.1565%" height="15" fill="rgb(222,110,35)" fg:x="48174" fg:w="168"/><text x="45.1181%" y="1887.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (178 samples, 0.17%)</title><rect x="44.8635%" y="1909" width="0.1658%" height="15" fill="rgb(233,154,20)" fg:x="48169" fg:w="178"/><text x="45.1135%" y="1919.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (174 samples, 0.16%)</title><rect x="44.8672%" y="1893" width="0.1621%" height="15" fill="rgb(223,53,50)" fg:x="48173" fg:w="174"/><text x="45.1172%" y="1903.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (212 samples, 0.20%)</title><rect x="44.8402%" y="1925" width="0.1975%" height="15" fill="rgb(251,27,26)" fg:x="48144" fg:w="212"/><text x="45.0902%" y="1935.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (16,493 samples, 15.36%)</title><rect x="29.6932%" y="1973" width="15.3612%" height="15" fill="rgb(223,189,16)" fg:x="31881" fg:w="16493"/><text x="29.9432%" y="1983.50">aptos_vm::adapter_common..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (16,493 samples, 15.36%)</title><rect x="29.6932%" y="1957" width="15.3612%" height="15" fill="rgb(207,5,54)" fg:x="31881" fg:w="16493"/><text x="29.9432%" y="1967.50">&lt;aptos_vm::aptos_vm::Apt..</text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (385 samples, 0.36%)</title><rect x="44.6958%" y="1941" width="0.3586%" height="15" fill="rgb(254,124,50)" fg:x="47989" fg:w="385"/><text x="44.9458%" y="1951.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="45.0889%" y="1941" width="0.0233%" height="15" fill="rgb(253,193,24)" fg:x="48411" fg:w="25"/><text x="45.3389%" y="1951.50"></text></g><g><title>__udivti3 (28 samples, 0.03%)</title><rect x="45.1121%" y="1941" width="0.0261%" height="15" fill="rgb(235,170,24)" fg:x="48436" fg:w="28"/><text x="45.3621%" y="1951.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (20 samples, 0.02%)</title><rect x="45.1196%" y="1925" width="0.0186%" height="15" fill="rgb(222,212,52)" fg:x="48444" fg:w="20"/><text x="45.3696%" y="1935.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (20 samples, 0.02%)</title><rect x="45.1196%" y="1909" width="0.0186%" height="15" fill="rgb(223,17,45)" fg:x="48444" fg:w="20"/><text x="45.3696%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="45.1522%" y="1925" width="0.0140%" height="15" fill="rgb(227,103,26)" fg:x="48479" fg:w="15"/><text x="45.4022%" y="1935.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaChangeSet::try_into_write_set_mut (58 samples, 0.05%)</title><rect x="45.1382%" y="1941" width="0.0540%" height="15" fill="rgb(251,151,25)" fg:x="48464" fg:w="58"/><text x="45.3882%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_aggregator::delta_change_set::DeltaOp&gt;&gt; (18 samples, 0.02%)</title><rect x="45.1755%" y="1925" width="0.0168%" height="15" fill="rgb(248,144,29)" fg:x="48504" fg:w="18"/><text x="45.4255%" y="1935.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::into_inner (12 samples, 0.01%)</title><rect x="45.1932%" y="1941" width="0.0112%" height="15" fill="rgb(245,97,16)" fg:x="48523" fg:w="12"/><text x="45.4432%" y="1951.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (23 samples, 0.02%)</title><rect x="45.2174%" y="1877" width="0.0214%" height="15" fill="rgb(220,200,29)" fg:x="48549" fg:w="23"/><text x="45.4674%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn aptos_types::transaction::change_set::CheckChangeSet&gt; (11 samples, 0.01%)</title><rect x="45.2286%" y="1861" width="0.0102%" height="15" fill="rgb(206,38,29)" fg:x="48561" fg:w="11"/><text x="45.4786%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;&amp;u8&gt; (11 samples, 0.01%)</title><rect x="45.2286%" y="1845" width="0.0102%" height="15" fill="rgb(245,19,52)" fg:x="48561" fg:w="11"/><text x="45.4786%" y="1855.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::into_inner (34 samples, 0.03%)</title><rect x="45.2165%" y="1925" width="0.0317%" height="15" fill="rgb(205,67,43)" fg:x="48548" fg:w="34"/><text x="45.4665%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn aptos_types::transaction::change_set::CheckChangeSet&gt;&gt; (33 samples, 0.03%)</title><rect x="45.2174%" y="1909" width="0.0307%" height="15" fill="rgb(217,128,23)" fg:x="48549" fg:w="33"/><text x="45.4674%" y="1919.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="45.2174%" y="1893" width="0.0307%" height="15" fill="rgb(210,109,28)" fg:x="48549" fg:w="33"/><text x="45.4674%" y="1903.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (17 samples, 0.02%)</title><rect x="45.2882%" y="1861" width="0.0158%" height="15" fill="rgb(233,181,7)" fg:x="48625" fg:w="17"/><text x="45.5382%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (17 samples, 0.02%)</title><rect x="45.2882%" y="1845" width="0.0158%" height="15" fill="rgb(244,11,22)" fg:x="48625" fg:w="17"/><text x="45.5382%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="45.2891%" y="1829" width="0.0149%" height="15" fill="rgb(205,124,54)" fg:x="48626" fg:w="16"/><text x="45.5391%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="45.2891%" y="1813" width="0.0149%" height="15" fill="rgb(218,21,27)" fg:x="48626" fg:w="16"/><text x="45.5391%" y="1823.50"></text></g><g><title>cfree (16 samples, 0.01%)</title><rect x="45.2891%" y="1797" width="0.0149%" height="15" fill="rgb(224,153,33)" fg:x="48626" fg:w="16"/><text x="45.5391%" y="1807.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="45.2910%" y="1781" width="0.0130%" height="15" fill="rgb(240,219,28)" fg:x="48628" fg:w="14"/><text x="45.5410%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (22 samples, 0.02%)</title><rect x="45.2863%" y="1877" width="0.0205%" height="15" fill="rgb(214,80,29)" fg:x="48623" fg:w="22"/><text x="45.5363%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (18 samples, 0.02%)</title><rect x="45.3068%" y="1861" width="0.0168%" height="15" fill="rgb(247,148,44)" fg:x="48645" fg:w="18"/><text x="45.5568%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (45 samples, 0.04%)</title><rect x="45.2854%" y="1893" width="0.0419%" height="15" fill="rgb(243,110,30)" fg:x="48622" fg:w="45"/><text x="45.5354%" y="1903.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (22 samples, 0.02%)</title><rect x="45.3068%" y="1877" width="0.0205%" height="15" fill="rgb(243,173,41)" fg:x="48645" fg:w="22"/><text x="45.5568%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.06%)</title><rect x="45.2789%" y="1909" width="0.0605%" height="15" fill="rgb(225,160,47)" fg:x="48615" fg:w="65"/><text x="45.5289%" y="1919.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="45.3273%" y="1893" width="0.0121%" height="15" fill="rgb(215,44,21)" fg:x="48667" fg:w="13"/><text x="45.5773%" y="1903.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="45.3291%" y="1877" width="0.0102%" height="15" fill="rgb(248,90,3)" fg:x="48669" fg:w="11"/><text x="45.5791%" y="1887.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="45.3394%" y="1909" width="0.0102%" height="15" fill="rgb(220,196,49)" fg:x="48680" fg:w="11"/><text x="45.5894%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (11 samples, 0.01%)</title><rect x="45.3496%" y="1909" width="0.0102%" height="15" fill="rgb(217,138,14)" fg:x="48691" fg:w="11"/><text x="45.5996%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="45.3496%" y="1893" width="0.0102%" height="15" fill="rgb(219,111,20)" fg:x="48691" fg:w="11"/><text x="45.5996%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (13 samples, 0.01%)</title><rect x="45.3739%" y="1909" width="0.0121%" height="15" fill="rgb(218,114,4)" fg:x="48717" fg:w="13"/><text x="45.6239%" y="1919.50"></text></g><g><title>core::intrinsics::copy (13 samples, 0.01%)</title><rect x="45.4120%" y="1829" width="0.0121%" height="15" fill="rgb(238,133,3)" fg:x="48758" fg:w="13"/><text x="45.6620%" y="1839.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="45.4120%" y="1813" width="0.0121%" height="15" fill="rgb(224,95,0)" fg:x="48758" fg:w="13"/><text x="45.6620%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (45 samples, 0.04%)</title><rect x="45.3860%" y="1909" width="0.0419%" height="15" fill="rgb(220,169,35)" fg:x="48730" fg:w="45"/><text x="45.6360%" y="1919.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (33 samples, 0.03%)</title><rect x="45.3971%" y="1893" width="0.0307%" height="15" fill="rgb(242,116,47)" fg:x="48742" fg:w="33"/><text x="45.6471%" y="1903.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (17 samples, 0.02%)</title><rect x="45.4120%" y="1877" width="0.0158%" height="15" fill="rgb(251,42,20)" fg:x="48758" fg:w="17"/><text x="45.6620%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (17 samples, 0.02%)</title><rect x="45.4120%" y="1861" width="0.0158%" height="15" fill="rgb(234,7,34)" fg:x="48758" fg:w="17"/><text x="45.6620%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (17 samples, 0.02%)</title><rect x="45.4120%" y="1845" width="0.0158%" height="15" fill="rgb(243,208,13)" fg:x="48758" fg:w="17"/><text x="45.6620%" y="1855.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::new (17 samples, 0.02%)</title><rect x="45.4400%" y="1909" width="0.0158%" height="15" fill="rgb(227,33,28)" fg:x="48788" fg:w="17"/><text x="45.6900%" y="1919.50"></text></g><g><title>&lt;aptos_gas::transaction::storage::ChangeSetConfigs as aptos_types::transaction::change_set::CheckChangeSet&gt;::check_change_set (13 samples, 0.01%)</title><rect x="45.4437%" y="1893" width="0.0121%" height="15" fill="rgb(250,47,37)" fg:x="48792" fg:w="13"/><text x="45.6937%" y="1903.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash_change_set (247 samples, 0.23%)</title><rect x="45.2481%" y="1925" width="0.2300%" height="15" fill="rgb(235,111,52)" fg:x="48582" fg:w="247"/><text x="45.4981%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (15 samples, 0.01%)</title><rect x="45.4642%" y="1909" width="0.0140%" height="15" fill="rgb(223,64,28)" fg:x="48814" fg:w="15"/><text x="45.7142%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="45.4642%" y="1893" width="0.0140%" height="15" fill="rgb(236,67,22)" fg:x="48814" fg:w="15"/><text x="45.7142%" y="1903.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash (356 samples, 0.33%)</title><rect x="45.2043%" y="1941" width="0.3316%" height="15" fill="rgb(243,79,24)" fg:x="48535" fg:w="356"/><text x="45.4543%" y="1951.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash_delta_change_set (62 samples, 0.06%)</title><rect x="45.4782%" y="1925" width="0.0577%" height="15" fill="rgb(241,225,22)" fg:x="48829" fg:w="62"/><text x="45.7282%" y="1935.50"></text></g><g><title>aptos_aggregator::transaction::TransactionOutputExt::new (11 samples, 0.01%)</title><rect x="45.5424%" y="1941" width="0.0102%" height="15" fill="rgb(228,214,26)" fg:x="48898" fg:w="11"/><text x="45.7924%" y="1951.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::balance (30 samples, 0.03%)</title><rect x="45.5527%" y="1941" width="0.0279%" height="15" fill="rgb(219,84,52)" fg:x="48909" fg:w="30"/><text x="45.8027%" y="1951.50"></text></g><g><title>move_core_types::gas_algebra::GasQuantity&lt;U&gt;::to_unit_round_down_with_params (11 samples, 0.01%)</title><rect x="45.5704%" y="1925" width="0.0102%" height="15" fill="rgb(220,12,22)" fg:x="48928" fg:w="11"/><text x="45.8204%" y="1935.50"></text></g><g><title>aptos_gas::transaction::&lt;impl move_core_types::gas_algebra::ToUnitFractionalWithParams&lt;aptos_gas::algebra::GasUnit&gt; for move_core_types::gas_algebra::InternalGasUnit&gt;::ratio (11 samples, 0.01%)</title><rect x="45.5704%" y="1909" width="0.0102%" height="15" fill="rgb(219,9,49)" fg:x="48928" fg:w="11"/><text x="45.8204%" y="1919.50"></text></g><g><title>aptos_gas::transaction::TransactionGasParameters::scaling_factor (11 samples, 0.01%)</title><rect x="45.5704%" y="1893" width="0.0102%" height="15" fill="rgb(237,40,43)" fg:x="48928" fg:w="11"/><text x="45.8204%" y="1903.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::change_set_configs (15 samples, 0.01%)</title><rect x="45.5806%" y="1941" width="0.0140%" height="15" fill="rgb(212,189,32)" fg:x="48939" fg:w="15"/><text x="45.8306%" y="1951.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="45.6132%" y="1893" width="0.0102%" height="15" fill="rgb(247,48,9)" fg:x="48974" fg:w="11"/><text x="45.8632%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="45.6132%" y="1877" width="0.0102%" height="15" fill="rgb(247,112,3)" fg:x="48974" fg:w="11"/><text x="45.8632%" y="1887.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge_write_set_gas (41 samples, 0.04%)</title><rect x="45.5946%" y="1941" width="0.0382%" height="15" fill="rgb(243,110,18)" fg:x="48954" fg:w="41"/><text x="45.8446%" y="1951.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricing::calculate_write_set_gas (40 samples, 0.04%)</title><rect x="45.5955%" y="1925" width="0.0373%" height="15" fill="rgb(233,223,44)" fg:x="48955" fg:w="40"/><text x="45.8455%" y="1935.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricingV2::calculate_write_set_gas (22 samples, 0.02%)</title><rect x="45.6123%" y="1909" width="0.0205%" height="15" fill="rgb(245,160,20)" fg:x="48973" fg:w="22"/><text x="45.8623%" y="1919.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_move_resolver (11 samples, 0.01%)</title><rect x="45.6477%" y="1941" width="0.0102%" height="15" fill="rgb(225,37,1)" fg:x="49011" fg:w="11"/><text x="45.8977%" y="1951.50"></text></g><g><title>aptos_crypto::hash::HashValue::to_vec (14 samples, 0.01%)</title><rect x="45.6821%" y="1909" width="0.0130%" height="15" fill="rgb(253,227,39)" fg:x="49048" fg:w="14"/><text x="45.9321%" y="1919.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::new (14 samples, 0.01%)</title><rect x="45.6952%" y="1909" width="0.0130%" height="15" fill="rgb(240,179,26)" fg:x="49062" fg:w="14"/><text x="45.9452%" y="1919.50"></text></g><g><title>aptos_framework::natives::cryptography::ristretto255_point::NativeRistrettoPointContext::new (11 samples, 0.01%)</title><rect x="45.7082%" y="1909" width="0.0102%" height="15" fill="rgb(237,212,23)" fg:x="49076" fg:w="11"/><text x="45.9582%" y="1919.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (165 samples, 0.15%)</title><rect x="45.7641%" y="1797" width="0.1537%" height="15" fill="rgb(221,38,11)" fg:x="49136" fg:w="165"/><text x="46.0141%" y="1807.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (165 samples, 0.15%)</title><rect x="45.7641%" y="1781" width="0.1537%" height="15" fill="rgb(215,85,6)" fg:x="49136" fg:w="165"/><text x="46.0141%" y="1791.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (165 samples, 0.15%)</title><rect x="45.7641%" y="1765" width="0.1537%" height="15" fill="rgb(239,64,14)" fg:x="49136" fg:w="165"/><text x="46.0141%" y="1775.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (165 samples, 0.15%)</title><rect x="45.7641%" y="1749" width="0.1537%" height="15" fill="rgb(215,150,32)" fg:x="49136" fg:w="165"/><text x="46.0141%" y="1759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.03%)</title><rect x="45.8898%" y="1733" width="0.0279%" height="15" fill="rgb(238,15,13)" fg:x="49271" fg:w="30"/><text x="46.1398%" y="1743.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (172 samples, 0.16%)</title><rect x="45.7585%" y="1845" width="0.1602%" height="15" fill="rgb(251,87,8)" fg:x="49130" fg:w="172"/><text x="46.0085%" y="1855.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (168 samples, 0.16%)</title><rect x="45.7622%" y="1829" width="0.1565%" height="15" fill="rgb(206,86,1)" fg:x="49134" fg:w="168"/><text x="46.0122%" y="1839.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (168 samples, 0.16%)</title><rect x="45.7622%" y="1813" width="0.1565%" height="15" fill="rgb(208,151,45)" fg:x="49134" fg:w="168"/><text x="46.0122%" y="1823.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (187 samples, 0.17%)</title><rect x="45.7455%" y="1877" width="0.1742%" height="15" fill="rgb(231,181,24)" fg:x="49116" fg:w="187"/><text x="45.9955%" y="1887.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (180 samples, 0.17%)</title><rect x="45.7520%" y="1861" width="0.1676%" height="15" fill="rgb(240,106,29)" fg:x="49123" fg:w="180"/><text x="46.0020%" y="1871.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (34 samples, 0.03%)</title><rect x="45.9522%" y="1685" width="0.0317%" height="15" fill="rgb(227,166,11)" fg:x="49338" fg:w="34"/><text x="46.2022%" y="1695.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (11 samples, 0.01%)</title><rect x="46.0081%" y="1637" width="0.0102%" height="15" fill="rgb(254,14,34)" fg:x="49398" fg:w="11"/><text x="46.2581%" y="1647.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (11 samples, 0.01%)</title><rect x="46.0081%" y="1621" width="0.0102%" height="15" fill="rgb(223,222,6)" fg:x="49398" fg:w="11"/><text x="46.2581%" y="1631.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (11 samples, 0.01%)</title><rect x="46.0081%" y="1605" width="0.0102%" height="15" fill="rgb(245,69,24)" fg:x="49398" fg:w="11"/><text x="46.2581%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (122 samples, 0.11%)</title><rect x="45.9280%" y="1813" width="0.1136%" height="15" fill="rgb(213,193,7)" fg:x="49312" fg:w="122"/><text x="46.1780%" y="1823.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (122 samples, 0.11%)</title><rect x="45.9280%" y="1797" width="0.1136%" height="15" fill="rgb(237,92,51)" fg:x="49312" fg:w="122"/><text x="46.1780%" y="1807.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (113 samples, 0.11%)</title><rect x="45.9364%" y="1781" width="0.1052%" height="15" fill="rgb(225,194,6)" fg:x="49321" fg:w="113"/><text x="46.1864%" y="1791.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (104 samples, 0.10%)</title><rect x="45.9448%" y="1765" width="0.0969%" height="15" fill="rgb(205,159,49)" fg:x="49330" fg:w="104"/><text x="46.1948%" y="1775.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (104 samples, 0.10%)</title><rect x="45.9448%" y="1749" width="0.0969%" height="15" fill="rgb(219,69,2)" fg:x="49330" fg:w="104"/><text x="46.1948%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (104 samples, 0.10%)</title><rect x="45.9448%" y="1733" width="0.0969%" height="15" fill="rgb(215,107,24)" fg:x="49330" fg:w="104"/><text x="46.1948%" y="1743.50"></text></g><g><title>std::io::Write::write_all (103 samples, 0.10%)</title><rect x="45.9457%" y="1717" width="0.0959%" height="15" fill="rgb(249,208,29)" fg:x="49331" fg:w="103"/><text x="46.1957%" y="1727.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (103 samples, 0.10%)</title><rect x="45.9457%" y="1701" width="0.0959%" height="15" fill="rgb(213,147,10)" fg:x="49331" fg:w="103"/><text x="46.1957%" y="1711.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (62 samples, 0.06%)</title><rect x="45.9839%" y="1685" width="0.0577%" height="15" fill="rgb(254,140,42)" fg:x="49372" fg:w="62"/><text x="46.2339%" y="1695.50"></text></g><g><title>tiny_keccak::Buffer::xorin (36 samples, 0.03%)</title><rect x="46.0081%" y="1669" width="0.0335%" height="15" fill="rgb(249,9,15)" fg:x="49398" fg:w="36"/><text x="46.2581%" y="1679.50"></text></g><g><title>tiny_keccak::Buffer::execute (36 samples, 0.03%)</title><rect x="46.0081%" y="1653" width="0.0335%" height="15" fill="rgb(210,19,33)" fg:x="49398" fg:w="36"/><text x="46.2581%" y="1663.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (24 samples, 0.02%)</title><rect x="46.0193%" y="1637" width="0.0224%" height="15" fill="rgb(241,121,22)" fg:x="49410" fg:w="24"/><text x="46.2693%" y="1647.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.01%)</title><rect x="46.0295%" y="1621" width="0.0121%" height="15" fill="rgb(244,69,52)" fg:x="49421" fg:w="13"/><text x="46.2795%" y="1631.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.01%)</title><rect x="46.0295%" y="1605" width="0.0121%" height="15" fill="rgb(244,191,54)" fg:x="49421" fg:w="13"/><text x="46.2795%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (132 samples, 0.12%)</title><rect x="45.9271%" y="1829" width="0.1229%" height="15" fill="rgb(250,3,53)" fg:x="49311" fg:w="132"/><text x="46.1771%" y="1839.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (345 samples, 0.32%)</title><rect x="45.7352%" y="1909" width="0.3213%" height="15" fill="rgb(205,77,3)" fg:x="49105" fg:w="345"/><text x="45.9852%" y="1919.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (343 samples, 0.32%)</title><rect x="45.7371%" y="1893" width="0.3195%" height="15" fill="rgb(207,155,3)" fg:x="49107" fg:w="343"/><text x="45.9871%" y="1903.50"></text></g><g><title>bcs::ser::serialize_into (142 samples, 0.13%)</title><rect x="45.9243%" y="1877" width="0.1323%" height="15" fill="rgb(224,79,2)" fg:x="49308" fg:w="142"/><text x="46.1743%" y="1887.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (142 samples, 0.13%)</title><rect x="45.9243%" y="1861" width="0.1323%" height="15" fill="rgb(243,172,5)" fg:x="49308" fg:w="142"/><text x="46.1743%" y="1871.50"></text></g><g><title>aptos_vm::move_vm_ext::session::_::&lt;impl serde::ser::Serialize for aptos_vm::move_vm_ext::session::SessionId&gt;::serialize (142 samples, 0.13%)</title><rect x="45.9243%" y="1845" width="0.1323%" height="15" fill="rgb(217,23,43)" fg:x="49308" fg:w="142"/><text x="46.1743%" y="1855.50"></text></g><g><title>move_table_extension::NativeTableContext::new (13 samples, 0.01%)</title><rect x="46.0566%" y="1909" width="0.0121%" height="15" fill="rgb(223,109,20)" fg:x="49450" fg:w="13"/><text x="46.3066%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::flush_if_invalidated (21 samples, 0.02%)</title><rect x="46.0687%" y="1909" width="0.0196%" height="15" fill="rgb(232,159,21)" fg:x="49463" fg:w="21"/><text x="46.3187%" y="1919.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (31 samples, 0.03%)</title><rect x="46.1078%" y="1893" width="0.0289%" height="15" fill="rgb(219,58,2)" fg:x="49505" fg:w="31"/><text x="46.3578%" y="1903.50"></text></g><g><title>alloc::alloc::exchange_malloc (30 samples, 0.03%)</title><rect x="46.1087%" y="1877" width="0.0279%" height="15" fill="rgb(241,56,8)" fg:x="49506" fg:w="30"/><text x="46.3587%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.03%)</title><rect x="46.1096%" y="1861" width="0.0270%" height="15" fill="rgb(249,10,27)" fg:x="49507" fg:w="29"/><text x="46.3596%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.03%)</title><rect x="46.1096%" y="1845" width="0.0270%" height="15" fill="rgb(248,177,5)" fg:x="49507" fg:w="29"/><text x="46.3596%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.03%)</title><rect x="46.1096%" y="1829" width="0.0270%" height="15" fill="rgb(239,12,30)" fg:x="49507" fg:w="29"/><text x="46.3596%" y="1839.50"></text></g><g><title>malloc (22 samples, 0.02%)</title><rect x="46.1162%" y="1813" width="0.0205%" height="15" fill="rgb(229,164,25)" fg:x="49514" fg:w="22"/><text x="46.3662%" y="1823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="46.1478%" y="1829" width="0.0196%" height="15" fill="rgb(231,217,50)" fg:x="49548" fg:w="21"/><text x="46.3978%" y="1839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="46.1478%" y="1813" width="0.0196%" height="15" fill="rgb(247,99,32)" fg:x="49548" fg:w="21"/><text x="46.3978%" y="1823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="46.1478%" y="1797" width="0.0196%" height="15" fill="rgb(240,74,50)" fg:x="49548" fg:w="21"/><text x="46.3978%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.01%)</title><rect x="46.1562%" y="1781" width="0.0112%" height="15" fill="rgb(218,54,8)" fg:x="49557" fg:w="12"/><text x="46.4062%" y="1791.50"></text></g><g><title>hashbrown::map::make_insert_hash (32 samples, 0.03%)</title><rect x="46.1460%" y="1861" width="0.0298%" height="15" fill="rgb(227,132,20)" fg:x="49546" fg:w="32"/><text x="46.3960%" y="1871.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 0.03%)</title><rect x="46.1460%" y="1845" width="0.0298%" height="15" fill="rgb(232,134,12)" fg:x="49546" fg:w="32"/><text x="46.3960%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (17 samples, 0.02%)</title><rect x="46.1758%" y="1861" width="0.0158%" height="15" fill="rgb(250,129,18)" fg:x="49578" fg:w="17"/><text x="46.4258%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="46.1758%" y="1845" width="0.0158%" height="15" fill="rgb(232,129,47)" fg:x="49578" fg:w="17"/><text x="46.4258%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.02%)</title><rect x="46.1758%" y="1829" width="0.0158%" height="15" fill="rgb(230,31,40)" fg:x="49578" fg:w="17"/><text x="46.4258%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (14 samples, 0.01%)</title><rect x="46.2242%" y="1781" width="0.0130%" height="15" fill="rgb(232,126,10)" fg:x="49630" fg:w="14"/><text x="46.4742%" y="1791.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (14 samples, 0.01%)</title><rect x="46.2242%" y="1765" width="0.0130%" height="15" fill="rgb(205,46,31)" fg:x="49630" fg:w="14"/><text x="46.4742%" y="1775.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.01%)</title><rect x="46.2242%" y="1749" width="0.0130%" height="15" fill="rgb(232,37,37)" fg:x="49630" fg:w="14"/><text x="46.4742%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.01%)</title><rect x="46.2242%" y="1733" width="0.0130%" height="15" fill="rgb(240,91,16)" fg:x="49630" fg:w="14"/><text x="46.4742%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (57 samples, 0.05%)</title><rect x="46.2084%" y="1797" width="0.0531%" height="15" fill="rgb(224,160,9)" fg:x="49613" fg:w="57"/><text x="46.4584%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (17 samples, 0.02%)</title><rect x="46.2456%" y="1781" width="0.0158%" height="15" fill="rgb(215,116,14)" fg:x="49653" fg:w="17"/><text x="46.4956%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (17 samples, 0.02%)</title><rect x="46.2456%" y="1765" width="0.0158%" height="15" fill="rgb(235,46,36)" fg:x="49653" fg:w="17"/><text x="46.4956%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (60 samples, 0.06%)</title><rect x="46.2065%" y="1845" width="0.0559%" height="15" fill="rgb(238,39,28)" fg:x="49611" fg:w="60"/><text x="46.4565%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (60 samples, 0.06%)</title><rect x="46.2065%" y="1829" width="0.0559%" height="15" fill="rgb(242,125,29)" fg:x="49611" fg:w="60"/><text x="46.4565%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (58 samples, 0.05%)</title><rect x="46.2084%" y="1813" width="0.0540%" height="15" fill="rgb(238,211,30)" fg:x="49613" fg:w="58"/><text x="46.4584%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (12 samples, 0.01%)</title><rect x="46.2624%" y="1845" width="0.0112%" height="15" fill="rgb(227,201,28)" fg:x="49671" fg:w="12"/><text x="46.5124%" y="1855.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (662 samples, 0.62%)</title><rect x="45.6579%" y="1941" width="0.6166%" height="15" fill="rgb(238,77,29)" fg:x="49022" fg:w="662"/><text x="45.9079%" y="1951.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (658 samples, 0.61%)</title><rect x="45.6616%" y="1925" width="0.6128%" height="15" fill="rgb(213,221,40)" fg:x="49026" fg:w="658"/><text x="45.9116%" y="1935.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (192 samples, 0.18%)</title><rect x="46.0957%" y="1909" width="0.1788%" height="15" fill="rgb(226,220,44)" fg:x="49492" fg:w="192"/><text x="46.3457%" y="1919.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (148 samples, 0.14%)</title><rect x="46.1367%" y="1893" width="0.1378%" height="15" fill="rgb(228,90,23)" fg:x="49536" fg:w="148"/><text x="46.3867%" y="1903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (148 samples, 0.14%)</title><rect x="46.1367%" y="1877" width="0.1378%" height="15" fill="rgb(235,72,29)" fg:x="49536" fg:w="148"/><text x="46.3867%" y="1887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (89 samples, 0.08%)</title><rect x="46.1916%" y="1861" width="0.0829%" height="15" fill="rgb(248,117,39)" fg:x="49595" fg:w="89"/><text x="46.4416%" y="1871.50"></text></g><g><title>aptos_types::account_config::resources::transaction_validation::TransactionValidation::module_id (39 samples, 0.04%)</title><rect x="46.2894%" y="1925" width="0.0363%" height="15" fill="rgb(225,43,28)" fg:x="49700" fg:w="39"/><text x="46.5394%" y="1935.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="46.3052%" y="1909" width="0.0205%" height="15" fill="rgb(240,93,4)" fg:x="49717" fg:w="22"/><text x="46.5552%" y="1919.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="46.3052%" y="1893" width="0.0205%" height="15" fill="rgb(234,178,27)" fg:x="49717" fg:w="22"/><text x="46.5552%" y="1903.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.02%)</title><rect x="46.3099%" y="1877" width="0.0158%" height="15" fill="rgb(254,88,22)" fg:x="49722" fg:w="17"/><text x="46.5599%" y="1887.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (17 samples, 0.02%)</title><rect x="46.3099%" y="1861" width="0.0158%" height="15" fill="rgb(240,206,50)" fg:x="49722" fg:w="17"/><text x="46.5599%" y="1871.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::transaction_validation (19 samples, 0.02%)</title><rect x="46.3257%" y="1925" width="0.0177%" height="15" fill="rgb(249,103,8)" fg:x="49739" fg:w="19"/><text x="46.5757%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="46.3602%" y="1909" width="0.0158%" height="15" fill="rgb(241,178,36)" fg:x="49776" fg:w="17"/><text x="46.6102%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveValue]&gt; (17 samples, 0.02%)</title><rect x="46.3602%" y="1893" width="0.0158%" height="15" fill="rgb(246,110,15)" fg:x="49776" fg:w="17"/><text x="46.6102%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (17 samples, 0.02%)</title><rect x="46.3602%" y="1877" width="0.0158%" height="15" fill="rgb(207,14,43)" fg:x="49776" fg:w="17"/><text x="46.6102%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveValue&gt;&gt; (23 samples, 0.02%)</title><rect x="46.3602%" y="1925" width="0.0214%" height="15" fill="rgb(253,219,19)" fg:x="49776" fg:w="23"/><text x="46.6102%" y="1935.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (17 samples, 0.02%)</title><rect x="46.3863%" y="1925" width="0.0158%" height="15" fill="rgb(216,126,5)" fg:x="49804" fg:w="17"/><text x="46.6363%" y="1935.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue::{{closure}} (15 samples, 0.01%)</title><rect x="46.3881%" y="1909" width="0.0140%" height="15" fill="rgb(218,78,42)" fg:x="49806" fg:w="15"/><text x="46.6381%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::SerializedReturnValues&gt; (15 samples, 0.01%)</title><rect x="46.3881%" y="1893" width="0.0140%" height="15" fill="rgb(215,154,40)" fg:x="49806" fg:w="15"/><text x="46.6381%" y="1903.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.04%)</title><rect x="46.4403%" y="1541" width="0.0428%" height="15" fill="rgb(235,129,32)" fg:x="49862" fg:w="46"/><text x="46.6903%" y="1551.50"></text></g><g><title>malloc (42 samples, 0.04%)</title><rect x="46.4440%" y="1525" width="0.0391%" height="15" fill="rgb(218,51,8)" fg:x="49866" fg:w="42"/><text x="46.6940%" y="1535.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="46.4636%" y="1509" width="0.0196%" height="15" fill="rgb(245,48,4)" fg:x="49887" fg:w="21"/><text x="46.7136%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (54 samples, 0.05%)</title><rect x="46.4366%" y="1605" width="0.0503%" height="15" fill="rgb(250,175,12)" fg:x="49858" fg:w="54"/><text x="46.6866%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (54 samples, 0.05%)</title><rect x="46.4366%" y="1589" width="0.0503%" height="15" fill="rgb(237,95,40)" fg:x="49858" fg:w="54"/><text x="46.6866%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52 samples, 0.05%)</title><rect x="46.4384%" y="1573" width="0.0484%" height="15" fill="rgb(244,120,0)" fg:x="49860" fg:w="52"/><text x="46.6884%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.05%)</title><rect x="46.4384%" y="1557" width="0.0484%" height="15" fill="rgb(241,19,42)" fg:x="49860" fg:w="52"/><text x="46.6884%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (55 samples, 0.05%)</title><rect x="46.4366%" y="1685" width="0.0512%" height="15" fill="rgb(217,174,48)" fg:x="49858" fg:w="55"/><text x="46.6866%" y="1695.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (55 samples, 0.05%)</title><rect x="46.4366%" y="1669" width="0.0512%" height="15" fill="rgb(239,36,38)" fg:x="49858" fg:w="55"/><text x="46.6866%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (55 samples, 0.05%)</title><rect x="46.4366%" y="1653" width="0.0512%" height="15" fill="rgb(220,63,49)" fg:x="49858" fg:w="55"/><text x="46.6866%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (55 samples, 0.05%)</title><rect x="46.4366%" y="1637" width="0.0512%" height="15" fill="rgb(240,101,13)" fg:x="49858" fg:w="55"/><text x="46.6866%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (55 samples, 0.05%)</title><rect x="46.4366%" y="1621" width="0.0512%" height="15" fill="rgb(209,184,51)" fg:x="49858" fg:w="55"/><text x="46.6866%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (43 samples, 0.04%)</title><rect x="46.5073%" y="1445" width="0.0400%" height="15" fill="rgb(206,136,39)" fg:x="49934" fg:w="43"/><text x="46.7573%" y="1455.50"></text></g><g><title>alloc::alloc::Global::grow_impl (43 samples, 0.04%)</title><rect x="46.5073%" y="1429" width="0.0400%" height="15" fill="rgb(254,47,45)" fg:x="49934" fg:w="43"/><text x="46.7573%" y="1439.50"></text></g><g><title>alloc::alloc::realloc (43 samples, 0.04%)</title><rect x="46.5073%" y="1413" width="0.0400%" height="15" fill="rgb(252,103,20)" fg:x="49934" fg:w="43"/><text x="46.7573%" y="1423.50"></text></g><g><title>realloc (40 samples, 0.04%)</title><rect x="46.5101%" y="1397" width="0.0373%" height="15" fill="rgb(230,69,12)" fg:x="49937" fg:w="40"/><text x="46.7601%" y="1407.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="46.5260%" y="1381" width="0.0214%" height="15" fill="rgb(219,2,28)" fg:x="49954" fg:w="23"/><text x="46.7760%" y="1391.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="46.5316%" y="1365" width="0.0158%" height="15" fill="rgb(210,9,12)" fg:x="49960" fg:w="17"/><text x="46.7816%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (67 samples, 0.06%)</title><rect x="46.4971%" y="1525" width="0.0624%" height="15" fill="rgb(235,99,33)" fg:x="49923" fg:w="67"/><text x="46.7471%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (67 samples, 0.06%)</title><rect x="46.4971%" y="1509" width="0.0624%" height="15" fill="rgb(230,11,38)" fg:x="49923" fg:w="67"/><text x="46.7471%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (67 samples, 0.06%)</title><rect x="46.4971%" y="1493" width="0.0624%" height="15" fill="rgb(217,129,0)" fg:x="49923" fg:w="67"/><text x="46.7471%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (63 samples, 0.06%)</title><rect x="46.5008%" y="1477" width="0.0587%" height="15" fill="rgb(222,198,4)" fg:x="49927" fg:w="63"/><text x="46.7508%" y="1487.50"></text></g><g><title>alloc::raw_vec::finish_grow (61 samples, 0.06%)</title><rect x="46.5027%" y="1461" width="0.0568%" height="15" fill="rgb(246,170,27)" fg:x="49929" fg:w="61"/><text x="46.7527%" y="1471.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="46.5493%" y="1445" width="0.0102%" height="15" fill="rgb(229,17,28)" fg:x="49979" fg:w="11"/><text x="46.7993%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (83 samples, 0.08%)</title><rect x="46.4896%" y="1637" width="0.0773%" height="15" fill="rgb(233,198,48)" fg:x="49915" fg:w="83"/><text x="46.7396%" y="1647.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (83 samples, 0.08%)</title><rect x="46.4896%" y="1621" width="0.0773%" height="15" fill="rgb(238,103,23)" fg:x="49915" fg:w="83"/><text x="46.7396%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (83 samples, 0.08%)</title><rect x="46.4896%" y="1605" width="0.0773%" height="15" fill="rgb(206,91,41)" fg:x="49915" fg:w="83"/><text x="46.7396%" y="1615.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (83 samples, 0.08%)</title><rect x="46.4896%" y="1589" width="0.0773%" height="15" fill="rgb(227,34,25)" fg:x="49915" fg:w="83"/><text x="46.7396%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (83 samples, 0.08%)</title><rect x="46.4896%" y="1573" width="0.0773%" height="15" fill="rgb(210,110,44)" fg:x="49915" fg:w="83"/><text x="46.7396%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (83 samples, 0.08%)</title><rect x="46.4896%" y="1557" width="0.0773%" height="15" fill="rgb(216,189,8)" fg:x="49915" fg:w="83"/><text x="46.7396%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (83 samples, 0.08%)</title><rect x="46.4896%" y="1541" width="0.0773%" height="15" fill="rgb(234,9,46)" fg:x="49915" fg:w="83"/><text x="46.7396%" y="1551.50"></text></g><g><title>move_core_types::value::serialize_values (176 samples, 0.16%)</title><rect x="46.4049%" y="1925" width="0.1639%" height="15" fill="rgb(251,200,5)" fg:x="49824" fg:w="176"/><text x="46.6549%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (173 samples, 0.16%)</title><rect x="46.4077%" y="1909" width="0.1611%" height="15" fill="rgb(238,165,37)" fg:x="49827" fg:w="173"/><text x="46.6577%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (173 samples, 0.16%)</title><rect x="46.4077%" y="1893" width="0.1611%" height="15" fill="rgb(232,77,38)" fg:x="49827" fg:w="173"/><text x="46.6577%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (173 samples, 0.16%)</title><rect x="46.4077%" y="1877" width="0.1611%" height="15" fill="rgb(253,179,33)" fg:x="49827" fg:w="173"/><text x="46.6577%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (172 samples, 0.16%)</title><rect x="46.4086%" y="1861" width="0.1602%" height="15" fill="rgb(240,13,35)" fg:x="49828" fg:w="172"/><text x="46.6586%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (172 samples, 0.16%)</title><rect x="46.4086%" y="1845" width="0.1602%" height="15" fill="rgb(242,150,49)" fg:x="49828" fg:w="172"/><text x="46.6586%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (172 samples, 0.16%)</title><rect x="46.4086%" y="1829" width="0.1602%" height="15" fill="rgb(237,176,28)" fg:x="49828" fg:w="172"/><text x="46.6586%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172 samples, 0.16%)</title><rect x="46.4086%" y="1813" width="0.1602%" height="15" fill="rgb(214,176,33)" fg:x="49828" fg:w="172"/><text x="46.6586%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172 samples, 0.16%)</title><rect x="46.4086%" y="1797" width="0.1602%" height="15" fill="rgb(214,25,12)" fg:x="49828" fg:w="172"/><text x="46.6586%" y="1807.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (172 samples, 0.16%)</title><rect x="46.4086%" y="1781" width="0.1602%" height="15" fill="rgb(238,190,20)" fg:x="49828" fg:w="172"/><text x="46.6586%" y="1791.50"></text></g><g><title>move_core_types::value::serialize_values::{{closure}} (169 samples, 0.16%)</title><rect x="46.4114%" y="1765" width="0.1574%" height="15" fill="rgb(208,11,19)" fg:x="49831" fg:w="169"/><text x="46.6614%" y="1775.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (168 samples, 0.16%)</title><rect x="46.4123%" y="1749" width="0.1565%" height="15" fill="rgb(239,90,4)" fg:x="49832" fg:w="168"/><text x="46.6623%" y="1759.50"></text></g><g><title>bcs::ser::to_bytes (163 samples, 0.15%)</title><rect x="46.4170%" y="1733" width="0.1518%" height="15" fill="rgb(248,110,3)" fg:x="49837" fg:w="163"/><text x="46.6670%" y="1743.50"></text></g><g><title>bcs::ser::serialize_into (158 samples, 0.15%)</title><rect x="46.4217%" y="1717" width="0.1472%" height="15" fill="rgb(210,41,30)" fg:x="49842" fg:w="158"/><text x="46.6717%" y="1727.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (158 samples, 0.15%)</title><rect x="46.4217%" y="1701" width="0.1472%" height="15" fill="rgb(239,36,8)" fg:x="49842" fg:w="158"/><text x="46.6717%" y="1711.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (87 samples, 0.08%)</title><rect x="46.4878%" y="1685" width="0.0810%" height="15" fill="rgb(237,201,47)" fg:x="49913" fg:w="87"/><text x="46.7378%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (87 samples, 0.08%)</title><rect x="46.4878%" y="1669" width="0.0810%" height="15" fill="rgb(224,140,29)" fg:x="49913" fg:w="87"/><text x="46.7378%" y="1679.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (85 samples, 0.08%)</title><rect x="46.4896%" y="1653" width="0.0792%" height="15" fill="rgb(231,209,17)" fg:x="49915" fg:w="85"/><text x="46.7396%" y="1663.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (11 samples, 0.01%)</title><rect x="46.6107%" y="1781" width="0.0102%" height="15" fill="rgb(249,196,1)" fg:x="50045" fg:w="11"/><text x="46.8607%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (38 samples, 0.04%)</title><rect x="46.5940%" y="1877" width="0.0354%" height="15" fill="rgb(223,207,51)" fg:x="50027" fg:w="38"/><text x="46.8440%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 0.04%)</title><rect x="46.5940%" y="1861" width="0.0354%" height="15" fill="rgb(210,14,40)" fg:x="50027" fg:w="38"/><text x="46.8440%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 0.04%)</title><rect x="46.5940%" y="1845" width="0.0354%" height="15" fill="rgb(250,20,52)" fg:x="50027" fg:w="38"/><text x="46.8440%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (38 samples, 0.04%)</title><rect x="46.5940%" y="1829" width="0.0354%" height="15" fill="rgb(241,46,11)" fg:x="50027" fg:w="38"/><text x="46.8440%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (38 samples, 0.04%)</title><rect x="46.5940%" y="1813" width="0.0354%" height="15" fill="rgb(219,105,5)" fg:x="50027" fg:w="38"/><text x="46.8440%" y="1823.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (38 samples, 0.04%)</title><rect x="46.5940%" y="1797" width="0.0354%" height="15" fill="rgb(252,77,35)" fg:x="50027" fg:w="38"/><text x="46.8440%" y="1807.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (51 samples, 0.05%)</title><rect x="46.5884%" y="1893" width="0.0475%" height="15" fill="rgb(243,119,2)" fg:x="50021" fg:w="51"/><text x="46.8384%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="46.6983%" y="1669" width="0.0251%" height="15" fill="rgb(206,82,28)" fg:x="50139" fg:w="27"/><text x="46.9483%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="46.6983%" y="1653" width="0.0251%" height="15" fill="rgb(227,120,12)" fg:x="50139" fg:w="27"/><text x="46.9483%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.02%)</title><rect x="46.7048%" y="1637" width="0.0186%" height="15" fill="rgb(229,134,41)" fg:x="50146" fg:w="20"/><text x="46.9548%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (18 samples, 0.02%)</title><rect x="46.7067%" y="1621" width="0.0168%" height="15" fill="rgb(239,96,32)" fg:x="50148" fg:w="18"/><text x="46.9567%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (41 samples, 0.04%)</title><rect x="46.6983%" y="1701" width="0.0382%" height="15" fill="rgb(225,46,27)" fg:x="50139" fg:w="41"/><text x="46.9483%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.04%)</title><rect x="46.6983%" y="1685" width="0.0382%" height="15" fill="rgb(215,168,2)" fg:x="50139" fg:w="41"/><text x="46.9483%" y="1695.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (14 samples, 0.01%)</title><rect x="46.7234%" y="1669" width="0.0130%" height="15" fill="rgb(207,170,52)" fg:x="50166" fg:w="14"/><text x="46.9734%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="46.6983%" y="1717" width="0.0410%" height="15" fill="rgb(237,198,36)" fg:x="50139" fg:w="44"/><text x="46.9483%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.03%)</title><rect x="46.7411%" y="1653" width="0.0326%" height="15" fill="rgb(213,27,14)" fg:x="50185" fg:w="35"/><text x="46.9911%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (32 samples, 0.03%)</title><rect x="46.7439%" y="1637" width="0.0298%" height="15" fill="rgb(218,77,5)" fg:x="50188" fg:w="32"/><text x="46.9939%" y="1647.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.03%)</title><rect x="46.7439%" y="1621" width="0.0298%" height="15" fill="rgb(230,219,39)" fg:x="50188" fg:w="32"/><text x="46.9939%" y="1631.50"></text></g><g><title>alloc::alloc::realloc (32 samples, 0.03%)</title><rect x="46.7439%" y="1605" width="0.0298%" height="15" fill="rgb(245,177,7)" fg:x="50188" fg:w="32"/><text x="46.9939%" y="1615.50"></text></g><g><title>realloc (30 samples, 0.03%)</title><rect x="46.7458%" y="1589" width="0.0279%" height="15" fill="rgb(246,44,46)" fg:x="50190" fg:w="30"/><text x="46.9958%" y="1599.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="46.7486%" y="1573" width="0.0251%" height="15" fill="rgb(207,173,15)" fg:x="50193" fg:w="27"/><text x="46.9986%" y="1583.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="46.7514%" y="1557" width="0.0224%" height="15" fill="rgb(245,170,50)" fg:x="50196" fg:w="24"/><text x="47.0014%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.03%)</title><rect x="46.7402%" y="1717" width="0.0345%" height="15" fill="rgb(233,156,21)" fg:x="50184" fg:w="37"/><text x="46.9902%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.03%)</title><rect x="46.7402%" y="1701" width="0.0345%" height="15" fill="rgb(253,146,27)" fg:x="50184" fg:w="37"/><text x="46.9902%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.03%)</title><rect x="46.7402%" y="1685" width="0.0345%" height="15" fill="rgb(247,66,29)" fg:x="50184" fg:w="37"/><text x="46.9902%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (37 samples, 0.03%)</title><rect x="46.7402%" y="1669" width="0.0345%" height="15" fill="rgb(218,207,26)" fg:x="50184" fg:w="37"/><text x="46.9902%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (92 samples, 0.09%)</title><rect x="46.6983%" y="1749" width="0.0857%" height="15" fill="rgb(234,93,26)" fg:x="50139" fg:w="92"/><text x="46.9483%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (92 samples, 0.09%)</title><rect x="46.6983%" y="1733" width="0.0857%" height="15" fill="rgb(214,75,48)" fg:x="50139" fg:w="92"/><text x="46.9483%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.04%)</title><rect x="46.7923%" y="1701" width="0.0373%" height="15" fill="rgb(229,119,22)" fg:x="50240" fg:w="40"/><text x="47.0423%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.03%)</title><rect x="46.7951%" y="1685" width="0.0345%" height="15" fill="rgb(226,153,19)" fg:x="50243" fg:w="37"/><text x="47.0451%" y="1695.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (35 samples, 0.03%)</title><rect x="46.7970%" y="1669" width="0.0326%" height="15" fill="rgb(220,204,36)" fg:x="50245" fg:w="35"/><text x="47.0470%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (35 samples, 0.03%)</title><rect x="46.7970%" y="1653" width="0.0326%" height="15" fill="rgb(253,181,43)" fg:x="50245" fg:w="35"/><text x="47.0470%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (21 samples, 0.02%)</title><rect x="46.8100%" y="1637" width="0.0196%" height="15" fill="rgb(211,41,51)" fg:x="50259" fg:w="21"/><text x="47.0600%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (18 samples, 0.02%)</title><rect x="46.8128%" y="1621" width="0.0168%" height="15" fill="rgb(207,215,0)" fg:x="50262" fg:w="18"/><text x="47.0628%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (43 samples, 0.04%)</title><rect x="46.7923%" y="1733" width="0.0400%" height="15" fill="rgb(212,153,10)" fg:x="50240" fg:w="43"/><text x="47.0423%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 0.04%)</title><rect x="46.7923%" y="1717" width="0.0400%" height="15" fill="rgb(251,171,36)" fg:x="50240" fg:w="43"/><text x="47.0423%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.05%)</title><rect x="46.7840%" y="1749" width="0.0512%" height="15" fill="rgb(225,219,41)" fg:x="50231" fg:w="55"/><text x="47.0340%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (192 samples, 0.18%)</title><rect x="46.6601%" y="1877" width="0.1788%" height="15" fill="rgb(208,200,1)" fg:x="50098" fg:w="192"/><text x="46.9101%" y="1887.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (192 samples, 0.18%)</title><rect x="46.6601%" y="1861" width="0.1788%" height="15" fill="rgb(206,75,47)" fg:x="50098" fg:w="192"/><text x="46.9101%" y="1871.50"></text></g><g><title>core::iter::adapters::try_process (192 samples, 0.18%)</title><rect x="46.6601%" y="1845" width="0.1788%" height="15" fill="rgb(248,3,16)" fg:x="50098" fg:w="192"/><text x="46.9101%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (171 samples, 0.16%)</title><rect x="46.6796%" y="1829" width="0.1593%" height="15" fill="rgb(242,157,36)" fg:x="50119" fg:w="171"/><text x="46.9296%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (171 samples, 0.16%)</title><rect x="46.6796%" y="1813" width="0.1593%" height="15" fill="rgb(215,175,11)" fg:x="50119" fg:w="171"/><text x="46.9296%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (171 samples, 0.16%)</title><rect x="46.6796%" y="1797" width="0.1593%" height="15" fill="rgb(252,222,22)" fg:x="50119" fg:w="171"/><text x="46.9296%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (168 samples, 0.16%)</title><rect x="46.6824%" y="1781" width="0.1565%" height="15" fill="rgb(250,121,35)" fg:x="50122" fg:w="168"/><text x="46.9324%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (153 samples, 0.14%)</title><rect x="46.6964%" y="1765" width="0.1425%" height="15" fill="rgb(233,120,49)" fg:x="50137" fg:w="153"/><text x="46.9464%" y="1775.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="46.8827%" y="1845" width="0.0102%" height="15" fill="rgb(205,201,14)" fg:x="50337" fg:w="11"/><text x="47.1327%" y="1855.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (11 samples, 0.01%)</title><rect x="46.8929%" y="1845" width="0.0102%" height="15" fill="rgb(219,58,45)" fg:x="50348" fg:w="11"/><text x="47.1429%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.01%)</title><rect x="46.8929%" y="1829" width="0.0102%" height="15" fill="rgb(251,65,12)" fg:x="50348" fg:w="11"/><text x="47.1429%" y="1839.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.01%)</title><rect x="46.9237%" y="1765" width="0.0149%" height="15" fill="rgb(224,47,31)" fg:x="50381" fg:w="16"/><text x="47.1737%" y="1775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.01%)</title><rect x="46.9237%" y="1749" width="0.0149%" height="15" fill="rgb(233,74,26)" fg:x="50381" fg:w="16"/><text x="47.1737%" y="1759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.01%)</title><rect x="46.9246%" y="1733" width="0.0140%" height="15" fill="rgb(231,211,31)" fg:x="50382" fg:w="15"/><text x="47.1746%" y="1743.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="46.9246%" y="1717" width="0.0140%" height="15" fill="rgb(239,167,5)" fg:x="50382" fg:w="15"/><text x="47.1746%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.01%)</title><rect x="46.9395%" y="1717" width="0.0140%" height="15" fill="rgb(241,85,0)" fg:x="50398" fg:w="15"/><text x="47.1895%" y="1727.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.01%)</title><rect x="46.9404%" y="1701" width="0.0130%" height="15" fill="rgb(229,130,21)" fg:x="50399" fg:w="14"/><text x="47.1904%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="46.9404%" y="1685" width="0.0130%" height="15" fill="rgb(254,84,49)" fg:x="50399" fg:w="14"/><text x="47.1904%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (118 samples, 0.11%)</title><rect x="46.8492%" y="1877" width="0.1099%" height="15" fill="rgb(235,85,21)" fg:x="50301" fg:w="118"/><text x="47.0992%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (84 samples, 0.08%)</title><rect x="46.8808%" y="1861" width="0.0782%" height="15" fill="rgb(246,128,52)" fg:x="50335" fg:w="84"/><text x="47.1308%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (56 samples, 0.05%)</title><rect x="46.9069%" y="1845" width="0.0522%" height="15" fill="rgb(243,114,49)" fg:x="50363" fg:w="56"/><text x="47.1569%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (45 samples, 0.04%)</title><rect x="46.9171%" y="1829" width="0.0419%" height="15" fill="rgb(240,224,22)" fg:x="50374" fg:w="45"/><text x="47.1671%" y="1839.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.04%)</title><rect x="46.9171%" y="1813" width="0.0419%" height="15" fill="rgb(247,201,52)" fg:x="50374" fg:w="45"/><text x="47.1671%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (45 samples, 0.04%)</title><rect x="46.9171%" y="1797" width="0.0419%" height="15" fill="rgb(231,70,45)" fg:x="50374" fg:w="45"/><text x="47.1671%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.04%)</title><rect x="46.9171%" y="1781" width="0.0419%" height="15" fill="rgb(217,215,20)" fg:x="50374" fg:w="45"/><text x="47.1671%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.02%)</title><rect x="46.9386%" y="1765" width="0.0205%" height="15" fill="rgb(226,170,30)" fg:x="50397" fg:w="22"/><text x="47.1886%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.02%)</title><rect x="46.9386%" y="1749" width="0.0205%" height="15" fill="rgb(220,190,43)" fg:x="50397" fg:w="22"/><text x="47.1886%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (22 samples, 0.02%)</title><rect x="46.9386%" y="1733" width="0.0205%" height="15" fill="rgb(218,20,18)" fg:x="50397" fg:w="22"/><text x="47.1886%" y="1743.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.01%)</title><rect x="46.9777%" y="1781" width="0.0112%" height="15" fill="rgb(245,37,26)" fg:x="50439" fg:w="12"/><text x="47.2277%" y="1791.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.01%)</title><rect x="46.9777%" y="1765" width="0.0112%" height="15" fill="rgb(241,127,29)" fg:x="50439" fg:w="12"/><text x="47.2277%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.01%)</title><rect x="46.9917%" y="1733" width="0.0112%" height="15" fill="rgb(241,33,26)" fg:x="50454" fg:w="12"/><text x="47.2417%" y="1743.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.01%)</title><rect x="46.9917%" y="1717" width="0.0112%" height="15" fill="rgb(220,106,21)" fg:x="50454" fg:w="12"/><text x="47.2417%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (40 samples, 0.04%)</title><rect x="46.9768%" y="1861" width="0.0373%" height="15" fill="rgb(225,125,35)" fg:x="50438" fg:w="40"/><text x="47.2268%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (40 samples, 0.04%)</title><rect x="46.9768%" y="1845" width="0.0373%" height="15" fill="rgb(248,80,22)" fg:x="50438" fg:w="40"/><text x="47.2268%" y="1855.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (40 samples, 0.04%)</title><rect x="46.9768%" y="1829" width="0.0373%" height="15" fill="rgb(231,117,39)" fg:x="50438" fg:w="40"/><text x="47.2268%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (40 samples, 0.04%)</title><rect x="46.9768%" y="1813" width="0.0373%" height="15" fill="rgb(239,183,16)" fg:x="50438" fg:w="40"/><text x="47.2268%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (40 samples, 0.04%)</title><rect x="46.9768%" y="1797" width="0.0373%" height="15" fill="rgb(221,61,19)" fg:x="50438" fg:w="40"/><text x="47.2268%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (27 samples, 0.03%)</title><rect x="46.9889%" y="1781" width="0.0251%" height="15" fill="rgb(239,196,44)" fg:x="50451" fg:w="27"/><text x="47.2389%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.03%)</title><rect x="46.9889%" y="1765" width="0.0251%" height="15" fill="rgb(206,113,19)" fg:x="50451" fg:w="27"/><text x="47.2389%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (27 samples, 0.03%)</title><rect x="46.9889%" y="1749" width="0.0251%" height="15" fill="rgb(245,114,12)" fg:x="50451" fg:w="27"/><text x="47.2389%" y="1759.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.01%)</title><rect x="47.0140%" y="1797" width="0.0121%" height="15" fill="rgb(247,89,39)" fg:x="50478" fg:w="13"/><text x="47.2640%" y="1807.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.01%)</title><rect x="47.0140%" y="1781" width="0.0121%" height="15" fill="rgb(213,85,14)" fg:x="50478" fg:w="13"/><text x="47.2640%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (426 samples, 0.40%)</title><rect x="46.6359%" y="1893" width="0.3968%" height="15" fill="rgb(249,206,33)" fg:x="50072" fg:w="426"/><text x="46.8859%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (70 samples, 0.07%)</title><rect x="46.9674%" y="1877" width="0.0652%" height="15" fill="rgb(235,167,47)" fg:x="50428" fg:w="70"/><text x="47.2174%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (20 samples, 0.02%)</title><rect x="47.0140%" y="1861" width="0.0186%" height="15" fill="rgb(217,177,16)" fg:x="50478" fg:w="20"/><text x="47.2640%" y="1871.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.02%)</title><rect x="47.0140%" y="1845" width="0.0186%" height="15" fill="rgb(250,228,29)" fg:x="50478" fg:w="20"/><text x="47.2640%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.02%)</title><rect x="47.0140%" y="1829" width="0.0186%" height="15" fill="rgb(216,195,42)" fg:x="50478" fg:w="20"/><text x="47.2640%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.02%)</title><rect x="47.0140%" y="1813" width="0.0186%" height="15" fill="rgb(232,192,32)" fg:x="50478" fg:w="20"/><text x="47.2640%" y="1823.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (39 samples, 0.04%)</title><rect x="47.1053%" y="1765" width="0.0363%" height="15" fill="rgb(211,8,47)" fg:x="50576" fg:w="39"/><text x="47.3553%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.04%)</title><rect x="47.1053%" y="1749" width="0.0363%" height="15" fill="rgb(251,201,9)" fg:x="50576" fg:w="39"/><text x="47.3553%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.04%)</title><rect x="47.1053%" y="1733" width="0.0363%" height="15" fill="rgb(206,185,47)" fg:x="50576" fg:w="39"/><text x="47.3553%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (32 samples, 0.03%)</title><rect x="47.1118%" y="1717" width="0.0298%" height="15" fill="rgb(245,54,32)" fg:x="50583" fg:w="32"/><text x="47.3618%" y="1727.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (30 samples, 0.03%)</title><rect x="47.1137%" y="1701" width="0.0279%" height="15" fill="rgb(208,1,8)" fg:x="50585" fg:w="30"/><text x="47.3637%" y="1711.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (27 samples, 0.03%)</title><rect x="47.1165%" y="1685" width="0.0251%" height="15" fill="rgb(228,57,24)" fg:x="50588" fg:w="27"/><text x="47.3665%" y="1695.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (18 samples, 0.02%)</title><rect x="47.1248%" y="1669" width="0.0168%" height="15" fill="rgb(251,24,8)" fg:x="50597" fg:w="18"/><text x="47.3748%" y="1679.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (13 samples, 0.01%)</title><rect x="47.1295%" y="1653" width="0.0121%" height="15" fill="rgb(236,196,50)" fg:x="50602" fg:w="13"/><text x="47.3795%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="47.1416%" y="1765" width="0.0149%" height="15" fill="rgb(246,222,29)" fg:x="50615" fg:w="16"/><text x="47.3916%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (125 samples, 0.12%)</title><rect x="47.0494%" y="1877" width="0.1164%" height="15" fill="rgb(211,34,40)" fg:x="50516" fg:w="125"/><text x="47.2994%" y="1887.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (116 samples, 0.11%)</title><rect x="47.0578%" y="1861" width="0.1080%" height="15" fill="rgb(210,66,51)" fg:x="50525" fg:w="116"/><text x="47.3078%" y="1871.50"></text></g><g><title>core::iter::adapters::try_process (115 samples, 0.11%)</title><rect x="47.0587%" y="1845" width="0.1071%" height="15" fill="rgb(250,56,43)" fg:x="50526" fg:w="115"/><text x="47.3087%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (96 samples, 0.09%)</title><rect x="47.0764%" y="1829" width="0.0894%" height="15" fill="rgb(240,111,50)" fg:x="50545" fg:w="96"/><text x="47.3264%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (96 samples, 0.09%)</title><rect x="47.0764%" y="1813" width="0.0894%" height="15" fill="rgb(209,117,13)" fg:x="50545" fg:w="96"/><text x="47.3264%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (96 samples, 0.09%)</title><rect x="47.0764%" y="1797" width="0.0894%" height="15" fill="rgb(232,164,45)" fg:x="50545" fg:w="96"/><text x="47.3264%" y="1807.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (90 samples, 0.08%)</title><rect x="47.0820%" y="1781" width="0.0838%" height="15" fill="rgb(205,69,32)" fg:x="50551" fg:w="90"/><text x="47.3320%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="47.1658%" y="1845" width="0.0177%" height="15" fill="rgb(240,147,45)" fg:x="50641" fg:w="19"/><text x="47.4158%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (15 samples, 0.01%)</title><rect x="47.1695%" y="1829" width="0.0140%" height="15" fill="rgb(221,94,48)" fg:x="50645" fg:w="15"/><text x="47.4195%" y="1839.50"></text></g><g><title>core::mem::drop (31 samples, 0.03%)</title><rect x="47.1658%" y="1877" width="0.0289%" height="15" fill="rgb(249,209,17)" fg:x="50641" fg:w="31"/><text x="47.4158%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (31 samples, 0.03%)</title><rect x="47.1658%" y="1861" width="0.0289%" height="15" fill="rgb(228,57,28)" fg:x="50641" fg:w="31"/><text x="47.4158%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="47.1835%" y="1845" width="0.0112%" height="15" fill="rgb(250,133,26)" fg:x="50660" fg:w="12"/><text x="47.4335%" y="1855.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="47.2878%" y="1797" width="0.0410%" height="15" fill="rgb(254,15,16)" fg:x="50772" fg:w="44"/><text x="47.5378%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (30 samples, 0.03%)</title><rect x="47.3009%" y="1781" width="0.0279%" height="15" fill="rgb(209,147,42)" fg:x="50786" fg:w="30"/><text x="47.5509%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (18 samples, 0.02%)</title><rect x="47.3120%" y="1765" width="0.0168%" height="15" fill="rgb(208,5,29)" fg:x="50798" fg:w="18"/><text x="47.5620%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (18 samples, 0.02%)</title><rect x="47.3120%" y="1749" width="0.0168%" height="15" fill="rgb(250,73,31)" fg:x="50798" fg:w="18"/><text x="47.5620%" y="1759.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (52 samples, 0.05%)</title><rect x="47.2860%" y="1845" width="0.0484%" height="15" fill="rgb(238,45,10)" fg:x="50770" fg:w="52"/><text x="47.5360%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;,move_vm_runtime::interpreter::Interpreter::execute_main&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (52 samples, 0.05%)</title><rect x="47.2860%" y="1829" width="0.0484%" height="15" fill="rgb(214,104,5)" fg:x="50770" fg:w="52"/><text x="47.5360%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (52 samples, 0.05%)</title><rect x="47.2860%" y="1813" width="0.0484%" height="15" fill="rgb(242,217,19)" fg:x="50770" fg:w="52"/><text x="47.5360%" y="1823.50"></text></g><g><title>cfree (23 samples, 0.02%)</title><rect x="47.3419%" y="1845" width="0.0214%" height="15" fill="rgb(246,113,27)" fg:x="50830" fg:w="23"/><text x="47.5919%" y="1855.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="47.3502%" y="1829" width="0.0130%" height="15" fill="rgb(221,34,27)" fg:x="50839" fg:w="14"/><text x="47.6002%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (19 samples, 0.02%)</title><rect x="47.3633%" y="1845" width="0.0177%" height="15" fill="rgb(246,109,6)" fg:x="50853" fg:w="19"/><text x="47.6133%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="47.3894%" y="1829" width="0.0158%" height="15" fill="rgb(217,12,25)" fg:x="50881" fg:w="17"/><text x="47.6394%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (27 samples, 0.03%)</title><rect x="47.3894%" y="1845" width="0.0251%" height="15" fill="rgb(250,195,5)" fg:x="50881" fg:w="27"/><text x="47.6394%" y="1855.50"></text></g><g><title>cfree (16 samples, 0.01%)</title><rect x="47.4704%" y="1765" width="0.0149%" height="15" fill="rgb(244,140,45)" fg:x="50968" fg:w="16"/><text x="47.7204%" y="1775.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="47.4750%" y="1749" width="0.0102%" height="15" fill="rgb(230,64,14)" fg:x="50973" fg:w="11"/><text x="47.7250%" y="1759.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="47.4899%" y="1749" width="0.0112%" height="15" fill="rgb(206,27,27)" fg:x="50989" fg:w="12"/><text x="47.7399%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.08%)</title><rect x="47.4350%" y="1813" width="0.0838%" height="15" fill="rgb(230,14,50)" fg:x="50930" fg:w="90"/><text x="47.6850%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (89 samples, 0.08%)</title><rect x="47.4359%" y="1797" width="0.0829%" height="15" fill="rgb(237,172,14)" fg:x="50931" fg:w="89"/><text x="47.6859%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (79 samples, 0.07%)</title><rect x="47.4452%" y="1781" width="0.0736%" height="15" fill="rgb(209,25,21)" fg:x="50941" fg:w="79"/><text x="47.6952%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (36 samples, 0.03%)</title><rect x="47.4853%" y="1765" width="0.0335%" height="15" fill="rgb(248,148,22)" fg:x="50984" fg:w="36"/><text x="47.7353%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (19 samples, 0.02%)</title><rect x="47.5011%" y="1749" width="0.0177%" height="15" fill="rgb(234,100,22)" fg:x="51001" fg:w="19"/><text x="47.7511%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (96 samples, 0.09%)</title><rect x="47.4350%" y="1829" width="0.0894%" height="15" fill="rgb(210,20,30)" fg:x="50930" fg:w="96"/><text x="47.6850%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="47.5328%" y="1797" width="0.0177%" height="15" fill="rgb(232,58,0)" fg:x="51035" fg:w="19"/><text x="47.7828%" y="1807.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="47.5346%" y="1781" width="0.0158%" height="15" fill="rgb(221,68,13)" fg:x="51037" fg:w="17"/><text x="47.7846%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="47.5244%" y="1813" width="0.0540%" height="15" fill="rgb(231,194,11)" fg:x="51026" fg:w="58"/><text x="47.7744%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (30 samples, 0.03%)</title><rect x="47.5505%" y="1797" width="0.0279%" height="15" fill="rgb(235,51,41)" fg:x="51054" fg:w="30"/><text x="47.8005%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="47.5877%" y="1733" width="0.0177%" height="15" fill="rgb(240,50,32)" fg:x="51094" fg:w="19"/><text x="47.8377%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (19 samples, 0.02%)</title><rect x="47.5877%" y="1717" width="0.0177%" height="15" fill="rgb(240,185,36)" fg:x="51094" fg:w="19"/><text x="47.8377%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (16 samples, 0.01%)</title><rect x="47.5905%" y="1701" width="0.0149%" height="15" fill="rgb(211,168,15)" fg:x="51097" fg:w="16"/><text x="47.8405%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.04%)</title><rect x="47.6054%" y="1701" width="0.0354%" height="15" fill="rgb(221,70,0)" fg:x="51113" fg:w="38"/><text x="47.8554%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.04%)</title><rect x="47.6054%" y="1685" width="0.0354%" height="15" fill="rgb(205,21,33)" fg:x="51113" fg:w="38"/><text x="47.8554%" y="1695.50"></text></g><g><title>cfree (37 samples, 0.03%)</title><rect x="47.6064%" y="1669" width="0.0345%" height="15" fill="rgb(225,106,10)" fg:x="51114" fg:w="37"/><text x="47.8564%" y="1679.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="47.6231%" y="1653" width="0.0177%" height="15" fill="rgb(236,200,50)" fg:x="51132" fg:w="19"/><text x="47.8731%" y="1663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="47.5794%" y="1797" width="0.0624%" height="15" fill="rgb(249,93,23)" fg:x="51085" fg:w="67"/><text x="47.8294%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="47.5877%" y="1781" width="0.0540%" height="15" fill="rgb(244,115,35)" fg:x="51094" fg:w="58"/><text x="47.8377%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="47.5877%" y="1765" width="0.0540%" height="15" fill="rgb(231,129,47)" fg:x="51094" fg:w="58"/><text x="47.8377%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (58 samples, 0.05%)</title><rect x="47.5877%" y="1749" width="0.0540%" height="15" fill="rgb(225,160,50)" fg:x="51094" fg:w="58"/><text x="47.8377%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (39 samples, 0.04%)</title><rect x="47.6054%" y="1733" width="0.0363%" height="15" fill="rgb(218,135,23)" fg:x="51113" fg:w="39"/><text x="47.8554%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="47.6054%" y="1717" width="0.0363%" height="15" fill="rgb(227,119,14)" fg:x="51113" fg:w="39"/><text x="47.8554%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (269 samples, 0.25%)</title><rect x="47.4229%" y="1845" width="0.2505%" height="15" fill="rgb(242,138,13)" fg:x="50917" fg:w="269"/><text x="47.6729%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (160 samples, 0.15%)</title><rect x="47.5244%" y="1829" width="0.1490%" height="15" fill="rgb(215,11,16)" fg:x="51026" fg:w="160"/><text x="47.7744%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (102 samples, 0.10%)</title><rect x="47.5784%" y="1813" width="0.0950%" height="15" fill="rgb(234,170,50)" fg:x="51084" fg:w="102"/><text x="47.8284%" y="1823.50"></text></g><g><title>cfree (34 samples, 0.03%)</title><rect x="47.6418%" y="1797" width="0.0317%" height="15" fill="rgb(233,34,20)" fg:x="51152" fg:w="34"/><text x="47.8918%" y="1807.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="47.6557%" y="1781" width="0.0177%" height="15" fill="rgb(237,100,45)" fg:x="51167" fg:w="19"/><text x="47.9057%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (35 samples, 0.03%)</title><rect x="47.6734%" y="1845" width="0.0326%" height="15" fill="rgb(231,184,36)" fg:x="51186" fg:w="35"/><text x="47.9234%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (35 samples, 0.03%)</title><rect x="47.6734%" y="1829" width="0.0326%" height="15" fill="rgb(252,93,2)" fg:x="51186" fg:w="35"/><text x="47.9234%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (26 samples, 0.02%)</title><rect x="47.6818%" y="1813" width="0.0242%" height="15" fill="rgb(248,176,47)" fg:x="51195" fg:w="26"/><text x="47.9318%" y="1823.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="47.6818%" y="1797" width="0.0242%" height="15" fill="rgb(249,125,23)" fg:x="51195" fg:w="26"/><text x="47.9318%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="47.7060%" y="1829" width="0.0205%" height="15" fill="rgb(239,67,42)" fg:x="51221" fg:w="22"/><text x="47.9560%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (13 samples, 0.01%)</title><rect x="47.7144%" y="1813" width="0.0121%" height="15" fill="rgb(244,162,4)" fg:x="51230" fg:w="13"/><text x="47.9644%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="47.7265%" y="1813" width="0.0196%" height="15" fill="rgb(214,150,38)" fg:x="51243" fg:w="21"/><text x="47.9765%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="47.7274%" y="1797" width="0.0186%" height="15" fill="rgb(228,211,28)" fg:x="51244" fg:w="20"/><text x="47.9774%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="47.7274%" y="1781" width="0.0186%" height="15" fill="rgb(212,98,48)" fg:x="51244" fg:w="20"/><text x="47.9774%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (20 samples, 0.02%)</title><rect x="47.7274%" y="1765" width="0.0186%" height="15" fill="rgb(213,45,13)" fg:x="51244" fg:w="20"/><text x="47.9774%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (11 samples, 0.01%)</title><rect x="47.7358%" y="1749" width="0.0102%" height="15" fill="rgb(218,35,29)" fg:x="51253" fg:w="11"/><text x="47.9858%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="47.7358%" y="1733" width="0.0102%" height="15" fill="rgb(244,13,3)" fg:x="51253" fg:w="11"/><text x="47.9858%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (48 samples, 0.04%)</title><rect x="47.7060%" y="1845" width="0.0447%" height="15" fill="rgb(235,170,19)" fg:x="51221" fg:w="48"/><text x="47.9560%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="47.7265%" y="1829" width="0.0242%" height="15" fill="rgb(233,193,43)" fg:x="51243" fg:w="26"/><text x="47.9765%" y="1839.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (23 samples, 0.02%)</title><rect x="47.7507%" y="1845" width="0.0214%" height="15" fill="rgb(228,223,20)" fg:x="51269" fg:w="23"/><text x="48.0007%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (21 samples, 0.02%)</title><rect x="47.7721%" y="1845" width="0.0196%" height="15" fill="rgb(208,85,54)" fg:x="51292" fg:w="21"/><text x="48.0221%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (12 samples, 0.01%)</title><rect x="47.7805%" y="1829" width="0.0112%" height="15" fill="rgb(254,14,45)" fg:x="51301" fg:w="12"/><text x="48.0305%" y="1839.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="47.7805%" y="1813" width="0.0112%" height="15" fill="rgb(247,99,29)" fg:x="51301" fg:w="12"/><text x="48.0305%" y="1823.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (12 samples, 0.01%)</title><rect x="47.7805%" y="1797" width="0.0112%" height="15" fill="rgb(225,180,54)" fg:x="51301" fg:w="12"/><text x="48.0305%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (26 samples, 0.02%)</title><rect x="47.7917%" y="1845" width="0.0242%" height="15" fill="rgb(239,88,43)" fg:x="51313" fg:w="26"/><text x="48.0417%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="47.8029%" y="1829" width="0.0130%" height="15" fill="rgb(209,47,11)" fg:x="51325" fg:w="14"/><text x="48.0529%" y="1839.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (29 samples, 0.03%)</title><rect x="47.8196%" y="1829" width="0.0270%" height="15" fill="rgb(219,179,23)" fg:x="51343" fg:w="29"/><text x="48.0696%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (103 samples, 0.10%)</title><rect x="48.5843%" y="1813" width="0.0959%" height="15" fill="rgb(213,183,19)" fg:x="52164" fg:w="103"/><text x="48.8343%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (24 samples, 0.02%)</title><rect x="48.6951%" y="1765" width="0.0224%" height="15" fill="rgb(210,11,9)" fg:x="52283" fg:w="24"/><text x="48.9451%" y="1775.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_pop (36 samples, 0.03%)</title><rect x="48.6877%" y="1813" width="0.0335%" height="15" fill="rgb(239,194,16)" fg:x="52275" fg:w="36"/><text x="48.9377%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (36 samples, 0.03%)</title><rect x="48.6877%" y="1797" width="0.0335%" height="15" fill="rgb(246,23,50)" fg:x="52275" fg:w="36"/><text x="48.9377%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (36 samples, 0.03%)</title><rect x="48.6877%" y="1781" width="0.0335%" height="15" fill="rgb(245,10,41)" fg:x="52275" fg:w="36"/><text x="48.9377%" y="1791.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (56 samples, 0.05%)</title><rect x="48.7212%" y="1813" width="0.0522%" height="15" fill="rgb(228,43,24)" fg:x="52311" fg:w="56"/><text x="48.9712%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (41 samples, 0.04%)</title><rect x="48.7743%" y="1813" width="0.0382%" height="15" fill="rgb(220,151,0)" fg:x="52368" fg:w="41"/><text x="49.0243%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (17 samples, 0.02%)</title><rect x="48.8246%" y="1813" width="0.0158%" height="15" fill="rgb(232,219,10)" fg:x="52422" fg:w="17"/><text x="49.0746%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (16 samples, 0.01%)</title><rect x="48.8404%" y="1813" width="0.0149%" height="15" fill="rgb(227,217,48)" fg:x="52439" fg:w="16"/><text x="49.0904%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (102 samples, 0.10%)</title><rect x="49.2223%" y="1797" width="0.0950%" height="15" fill="rgb(210,66,35)" fg:x="52849" fg:w="102"/><text x="49.4723%" y="1807.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="49.3723%" y="1733" width="0.0112%" height="15" fill="rgb(254,6,7)" fg:x="53010" fg:w="12"/><text x="49.6223%" y="1743.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="49.3639%" y="1749" width="0.0242%" height="15" fill="rgb(235,222,42)" fg:x="53001" fg:w="26"/><text x="49.6139%" y="1759.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (35 samples, 0.03%)</title><rect x="49.3639%" y="1765" width="0.0326%" height="15" fill="rgb(245,126,5)" fg:x="53001" fg:w="35"/><text x="49.6139%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (121 samples, 0.11%)</title><rect x="49.3173%" y="1797" width="0.1127%" height="15" fill="rgb(215,73,17)" fg:x="52951" fg:w="121"/><text x="49.5673%" y="1807.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (72 samples, 0.07%)</title><rect x="49.3629%" y="1781" width="0.0671%" height="15" fill="rgb(219,198,52)" fg:x="53000" fg:w="72"/><text x="49.6129%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (36 samples, 0.03%)</title><rect x="49.3965%" y="1765" width="0.0335%" height="15" fill="rgb(217,159,18)" fg:x="53036" fg:w="36"/><text x="49.6465%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (36 samples, 0.03%)</title><rect x="49.3965%" y="1749" width="0.0335%" height="15" fill="rgb(212,177,18)" fg:x="53036" fg:w="36"/><text x="49.6465%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.03%)</title><rect x="49.3965%" y="1733" width="0.0335%" height="15" fill="rgb(241,10,11)" fg:x="53036" fg:w="36"/><text x="49.6465%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.03%)</title><rect x="49.3965%" y="1717" width="0.0335%" height="15" fill="rgb(232,114,35)" fg:x="53036" fg:w="36"/><text x="49.6465%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.03%)</title><rect x="49.3965%" y="1701" width="0.0335%" height="15" fill="rgb(238,222,8)" fg:x="53036" fg:w="36"/><text x="49.6465%" y="1711.50"></text></g><g><title>malloc (21 samples, 0.02%)</title><rect x="49.4104%" y="1685" width="0.0196%" height="15" fill="rgb(251,153,44)" fg:x="53051" fg:w="21"/><text x="49.6604%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (47 samples, 0.04%)</title><rect x="49.4309%" y="1797" width="0.0438%" height="15" fill="rgb(210,140,51)" fg:x="53073" fg:w="47"/><text x="49.6809%" y="1807.50"></text></g><g><title>alloc::alloc::exchange_malloc (43 samples, 0.04%)</title><rect x="49.4347%" y="1781" width="0.0400%" height="15" fill="rgb(222,63,0)" fg:x="53077" fg:w="43"/><text x="49.6847%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.03%)</title><rect x="49.4449%" y="1765" width="0.0298%" height="15" fill="rgb(240,18,40)" fg:x="53088" fg:w="32"/><text x="49.6949%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.03%)</title><rect x="49.4449%" y="1749" width="0.0298%" height="15" fill="rgb(237,88,16)" fg:x="53088" fg:w="32"/><text x="49.6949%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.03%)</title><rect x="49.4449%" y="1733" width="0.0298%" height="15" fill="rgb(251,117,13)" fg:x="53088" fg:w="32"/><text x="49.6949%" y="1743.50"></text></g><g><title>malloc (24 samples, 0.02%)</title><rect x="49.4524%" y="1717" width="0.0224%" height="15" fill="rgb(251,228,8)" fg:x="53096" fg:w="24"/><text x="49.7024%" y="1727.50"></text></g><g><title>cfree (52 samples, 0.05%)</title><rect x="49.4747%" y="1797" width="0.0484%" height="15" fill="rgb(205,107,49)" fg:x="53120" fg:w="52"/><text x="49.7247%" y="1807.50"></text></g><g><title>[libc.so.6] (30 samples, 0.03%)</title><rect x="49.4952%" y="1781" width="0.0279%" height="15" fill="rgb(238,72,41)" fg:x="53142" fg:w="30"/><text x="49.7452%" y="1791.50"></text></g><g><title>cfree (26 samples, 0.02%)</title><rect x="49.5976%" y="1765" width="0.0242%" height="15" fill="rgb(248,183,52)" fg:x="53252" fg:w="26"/><text x="49.8476%" y="1775.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="49.6107%" y="1749" width="0.0112%" height="15" fill="rgb(215,58,20)" fg:x="53266" fg:w="12"/><text x="49.8607%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (52 samples, 0.05%)</title><rect x="49.5958%" y="1781" width="0.0484%" height="15" fill="rgb(209,49,13)" fg:x="53250" fg:w="52"/><text x="49.8458%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (24 samples, 0.02%)</title><rect x="49.6219%" y="1765" width="0.0224%" height="15" fill="rgb(208,113,17)" fg:x="53278" fg:w="24"/><text x="49.8719%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (116 samples, 0.11%)</title><rect x="49.5371%" y="1797" width="0.1080%" height="15" fill="rgb(208,14,22)" fg:x="53187" fg:w="116"/><text x="49.7871%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (23 samples, 0.02%)</title><rect x="49.7029%" y="1781" width="0.0214%" height="15" fill="rgb(222,95,2)" fg:x="53365" fg:w="23"/><text x="49.9529%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (101 samples, 0.09%)</title><rect x="49.6619%" y="1797" width="0.0941%" height="15" fill="rgb(253,180,37)" fg:x="53321" fg:w="101"/><text x="49.9119%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (34 samples, 0.03%)</title><rect x="49.7243%" y="1781" width="0.0317%" height="15" fill="rgb(250,81,33)" fg:x="53388" fg:w="34"/><text x="49.9743%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (175 samples, 0.16%)</title><rect x="49.7560%" y="1797" width="0.1630%" height="15" fill="rgb(251,151,41)" fg:x="53422" fg:w="175"/><text x="50.0060%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (56 samples, 0.05%)</title><rect x="49.8668%" y="1781" width="0.0522%" height="15" fill="rgb(210,135,17)" fg:x="53541" fg:w="56"/><text x="50.1168%" y="1791.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="49.8994%" y="1765" width="0.0196%" height="15" fill="rgb(239,21,29)" fg:x="53576" fg:w="21"/><text x="50.1494%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::check_ability (16 samples, 0.01%)</title><rect x="49.9190%" y="1797" width="0.0149%" height="15" fill="rgb(231,215,16)" fg:x="53597" fg:w="16"/><text x="50.1690%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="50.0112%" y="1653" width="0.0112%" height="15" fill="rgb(239,151,54)" fg:x="53696" fg:w="12"/><text x="50.2612%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (12 samples, 0.01%)</title><rect x="50.0112%" y="1637" width="0.0112%" height="15" fill="rgb(222,122,38)" fg:x="53696" fg:w="12"/><text x="50.2612%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.01%)</title><rect x="50.0112%" y="1621" width="0.0112%" height="15" fill="rgb(243,128,1)" fg:x="53696" fg:w="12"/><text x="50.2612%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.01%)</title><rect x="50.0112%" y="1605" width="0.0112%" height="15" fill="rgb(225,74,21)" fg:x="53696" fg:w="12"/><text x="50.2612%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.01%)</title><rect x="50.0112%" y="1589" width="0.0112%" height="15" fill="rgb(216,210,10)" fg:x="53696" fg:w="12"/><text x="50.2612%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (12 samples, 0.01%)</title><rect x="50.0112%" y="1573" width="0.0112%" height="15" fill="rgb(228,76,19)" fg:x="53696" fg:w="12"/><text x="50.2612%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (12 samples, 0.01%)</title><rect x="50.0112%" y="1557" width="0.0112%" height="15" fill="rgb(236,80,34)" fg:x="53696" fg:w="12"/><text x="50.2612%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (11 samples, 0.01%)</title><rect x="50.0121%" y="1541" width="0.0102%" height="15" fill="rgb(225,173,23)" fg:x="53697" fg:w="11"/><text x="50.2621%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.02%)</title><rect x="50.0056%" y="1781" width="0.0214%" height="15" fill="rgb(253,38,1)" fg:x="53690" fg:w="23"/><text x="50.2556%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="50.0056%" y="1765" width="0.0214%" height="15" fill="rgb(206,155,35)" fg:x="53690" fg:w="23"/><text x="50.2556%" y="1775.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 0.02%)</title><rect x="50.0056%" y="1749" width="0.0214%" height="15" fill="rgb(254,27,53)" fg:x="53690" fg:w="23"/><text x="50.2556%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (22 samples, 0.02%)</title><rect x="50.0065%" y="1733" width="0.0205%" height="15" fill="rgb(225,52,41)" fg:x="53691" fg:w="22"/><text x="50.2565%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.02%)</title><rect x="50.0065%" y="1717" width="0.0205%" height="15" fill="rgb(244,53,18)" fg:x="53691" fg:w="22"/><text x="50.2565%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (22 samples, 0.02%)</title><rect x="50.0065%" y="1701" width="0.0205%" height="15" fill="rgb(254,206,48)" fg:x="53691" fg:w="22"/><text x="50.2565%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.02%)</title><rect x="50.0065%" y="1685" width="0.0205%" height="15" fill="rgb(236,182,23)" fg:x="53691" fg:w="22"/><text x="50.2565%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="50.0075%" y="1669" width="0.0196%" height="15" fill="rgb(236,191,37)" fg:x="53692" fg:w="21"/><text x="50.2575%" y="1679.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (11 samples, 0.01%)</title><rect x="50.0326%" y="1781" width="0.0102%" height="15" fill="rgb(245,53,8)" fg:x="53719" fg:w="11"/><text x="50.2826%" y="1791.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (11 samples, 0.01%)</title><rect x="50.0326%" y="1765" width="0.0102%" height="15" fill="rgb(245,147,9)" fg:x="53719" fg:w="11"/><text x="50.2826%" y="1775.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (29 samples, 0.03%)</title><rect x="50.0428%" y="1781" width="0.0270%" height="15" fill="rgb(218,24,48)" fg:x="53730" fg:w="29"/><text x="50.2928%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.02%)</title><rect x="50.0466%" y="1765" width="0.0233%" height="15" fill="rgb(254,23,9)" fg:x="53734" fg:w="25"/><text x="50.2966%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="50.0540%" y="1749" width="0.0158%" height="15" fill="rgb(244,105,9)" fg:x="53742" fg:w="17"/><text x="50.3040%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.01%)</title><rect x="50.0550%" y="1733" width="0.0149%" height="15" fill="rgb(212,142,22)" fg:x="53743" fg:w="16"/><text x="50.3050%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (194 samples, 0.18%)</title><rect x="49.9339%" y="1797" width="0.1807%" height="15" fill="rgb(221,114,49)" fg:x="53613" fg:w="194"/><text x="50.1839%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (48 samples, 0.04%)</title><rect x="50.0699%" y="1781" width="0.0447%" height="15" fill="rgb(223,210,25)" fg:x="53759" fg:w="48"/><text x="50.3199%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.04%)</title><rect x="50.0699%" y="1765" width="0.0447%" height="15" fill="rgb(235,162,44)" fg:x="53759" fg:w="48"/><text x="50.3199%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.01%)</title><rect x="50.0997%" y="1749" width="0.0149%" height="15" fill="rgb(237,65,45)" fg:x="53791" fg:w="16"/><text x="50.3497%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.01%)</title><rect x="50.0997%" y="1733" width="0.0149%" height="15" fill="rgb(208,79,9)" fg:x="53791" fg:w="16"/><text x="50.3497%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (11 samples, 0.01%)</title><rect x="50.1146%" y="1797" width="0.0102%" height="15" fill="rgb(215,228,8)" fg:x="53807" fg:w="11"/><text x="50.3646%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="50.1546%" y="1653" width="0.0279%" height="15" fill="rgb(205,185,17)" fg:x="53850" fg:w="30"/><text x="50.4046%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (30 samples, 0.03%)</title><rect x="50.1546%" y="1637" width="0.0279%" height="15" fill="rgb(213,62,36)" fg:x="53850" fg:w="30"/><text x="50.4046%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.03%)</title><rect x="50.1546%" y="1621" width="0.0279%" height="15" fill="rgb(209,34,9)" fg:x="53850" fg:w="30"/><text x="50.4046%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.03%)</title><rect x="50.1546%" y="1605" width="0.0279%" height="15" fill="rgb(246,151,27)" fg:x="53850" fg:w="30"/><text x="50.4046%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (30 samples, 0.03%)</title><rect x="50.1546%" y="1589" width="0.0279%" height="15" fill="rgb(218,206,3)" fg:x="53850" fg:w="30"/><text x="50.4046%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (28 samples, 0.03%)</title><rect x="50.1565%" y="1573" width="0.0261%" height="15" fill="rgb(242,202,1)" fg:x="53852" fg:w="28"/><text x="50.4065%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (27 samples, 0.03%)</title><rect x="50.1574%" y="1557" width="0.0251%" height="15" fill="rgb(227,185,16)" fg:x="53853" fg:w="27"/><text x="50.4074%" y="1567.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (26 samples, 0.02%)</title><rect x="50.1583%" y="1541" width="0.0242%" height="15" fill="rgb(241,1,14)" fg:x="53854" fg:w="26"/><text x="50.4083%" y="1551.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (26 samples, 0.02%)</title><rect x="50.1583%" y="1525" width="0.0242%" height="15" fill="rgb(212,113,25)" fg:x="53854" fg:w="26"/><text x="50.4083%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.05%)</title><rect x="50.1406%" y="1781" width="0.0503%" height="15" fill="rgb(247,37,43)" fg:x="53835" fg:w="54"/><text x="50.3906%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (54 samples, 0.05%)</title><rect x="50.1406%" y="1765" width="0.0503%" height="15" fill="rgb(226,54,8)" fg:x="53835" fg:w="54"/><text x="50.3906%" y="1775.50"></text></g><g><title>core::iter::adapters::try_process (51 samples, 0.05%)</title><rect x="50.1434%" y="1749" width="0.0475%" height="15" fill="rgb(251,205,25)" fg:x="53838" fg:w="51"/><text x="50.3934%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (49 samples, 0.05%)</title><rect x="50.1453%" y="1733" width="0.0456%" height="15" fill="rgb(246,87,35)" fg:x="53840" fg:w="49"/><text x="50.3953%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (49 samples, 0.05%)</title><rect x="50.1453%" y="1717" width="0.0456%" height="15" fill="rgb(251,145,46)" fg:x="53840" fg:w="49"/><text x="50.3953%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="50.1453%" y="1701" width="0.0456%" height="15" fill="rgb(210,210,33)" fg:x="53840" fg:w="49"/><text x="50.3953%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.04%)</title><rect x="50.1509%" y="1685" width="0.0400%" height="15" fill="rgb(221,151,11)" fg:x="53846" fg:w="43"/><text x="50.4009%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (42 samples, 0.04%)</title><rect x="50.1518%" y="1669" width="0.0391%" height="15" fill="rgb(208,160,28)" fg:x="53847" fg:w="42"/><text x="50.4018%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (68 samples, 0.06%)</title><rect x="50.1285%" y="1797" width="0.0633%" height="15" fill="rgb(243,69,29)" fg:x="53822" fg:w="68"/><text x="50.3785%" y="1807.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="50.2384%" y="1765" width="0.0121%" height="15" fill="rgb(224,144,4)" fg:x="53940" fg:w="13"/><text x="50.4884%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="50.2580%" y="1701" width="0.0130%" height="15" fill="rgb(211,140,38)" fg:x="53961" fg:w="14"/><text x="50.5080%" y="1711.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (72 samples, 0.07%)</title><rect x="50.2096%" y="1781" width="0.0671%" height="15" fill="rgb(252,189,15)" fg:x="53909" fg:w="72"/><text x="50.4596%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="50.2505%" y="1765" width="0.0261%" height="15" fill="rgb(251,175,23)" fg:x="53953" fg:w="28"/><text x="50.5005%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="50.2561%" y="1749" width="0.0205%" height="15" fill="rgb(212,184,11)" fg:x="53959" fg:w="22"/><text x="50.5061%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="50.2561%" y="1733" width="0.0205%" height="15" fill="rgb(217,205,6)" fg:x="53959" fg:w="22"/><text x="50.5061%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="50.2561%" y="1717" width="0.0205%" height="15" fill="rgb(235,45,45)" fg:x="53959" fg:w="22"/><text x="50.5061%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (107 samples, 0.10%)</title><rect x="50.1919%" y="1797" width="0.0997%" height="15" fill="rgb(211,157,53)" fg:x="53890" fg:w="107"/><text x="50.4419%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (11 samples, 0.01%)</title><rect x="50.2813%" y="1781" width="0.0102%" height="15" fill="rgb(212,13,8)" fg:x="53986" fg:w="11"/><text x="50.5313%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="50.3111%" y="1653" width="0.0102%" height="15" fill="rgb(218,80,36)" fg:x="54018" fg:w="11"/><text x="50.5611%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.01%)</title><rect x="50.3111%" y="1637" width="0.0102%" height="15" fill="rgb(211,123,43)" fg:x="54018" fg:w="11"/><text x="50.5611%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="50.3111%" y="1621" width="0.0102%" height="15" fill="rgb(206,165,2)" fg:x="54018" fg:w="11"/><text x="50.5611%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="50.3111%" y="1605" width="0.0102%" height="15" fill="rgb(248,63,35)" fg:x="54018" fg:w="11"/><text x="50.5611%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="50.3111%" y="1589" width="0.0102%" height="15" fill="rgb(219,133,41)" fg:x="54018" fg:w="11"/><text x="50.5611%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.01%)</title><rect x="50.3111%" y="1573" width="0.0102%" height="15" fill="rgb(206,175,46)" fg:x="54018" fg:w="11"/><text x="50.5611%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.02%)</title><rect x="50.3018%" y="1781" width="0.0233%" height="15" fill="rgb(224,41,35)" fg:x="54008" fg:w="25"/><text x="50.5518%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (25 samples, 0.02%)</title><rect x="50.3018%" y="1765" width="0.0233%" height="15" fill="rgb(226,113,24)" fg:x="54008" fg:w="25"/><text x="50.5518%" y="1775.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 0.02%)</title><rect x="50.3018%" y="1749" width="0.0233%" height="15" fill="rgb(219,51,41)" fg:x="54008" fg:w="25"/><text x="50.5518%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (17 samples, 0.02%)</title><rect x="50.3092%" y="1733" width="0.0158%" height="15" fill="rgb(220,145,47)" fg:x="54016" fg:w="17"/><text x="50.5592%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="50.3092%" y="1717" width="0.0158%" height="15" fill="rgb(239,121,47)" fg:x="54016" fg:w="17"/><text x="50.5592%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="50.3092%" y="1701" width="0.0158%" height="15" fill="rgb(207,60,40)" fg:x="54016" fg:w="17"/><text x="50.5592%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="50.3092%" y="1685" width="0.0158%" height="15" fill="rgb(224,229,11)" fg:x="54016" fg:w="17"/><text x="50.5592%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="50.3101%" y="1669" width="0.0149%" height="15" fill="rgb(252,28,32)" fg:x="54017" fg:w="16"/><text x="50.5601%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (12 samples, 0.01%)</title><rect x="50.3251%" y="1781" width="0.0112%" height="15" fill="rgb(207,52,49)" fg:x="54033" fg:w="12"/><text x="50.5751%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (11 samples, 0.01%)</title><rect x="50.3260%" y="1765" width="0.0102%" height="15" fill="rgb(243,51,50)" fg:x="54034" fg:w="11"/><text x="50.5760%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="50.3260%" y="1749" width="0.0102%" height="15" fill="rgb(212,92,21)" fg:x="54034" fg:w="11"/><text x="50.5760%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="50.3260%" y="1733" width="0.0102%" height="15" fill="rgb(230,183,50)" fg:x="54034" fg:w="11"/><text x="50.5760%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="50.3260%" y="1717" width="0.0102%" height="15" fill="rgb(225,48,9)" fg:x="54034" fg:w="11"/><text x="50.5760%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (89 samples, 0.08%)</title><rect x="50.2990%" y="1797" width="0.0829%" height="15" fill="rgb(254,44,4)" fg:x="54005" fg:w="89"/><text x="50.5490%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (43 samples, 0.04%)</title><rect x="50.3418%" y="1781" width="0.0400%" height="15" fill="rgb(252,128,37)" fg:x="54051" fg:w="43"/><text x="50.5918%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (42 samples, 0.04%)</title><rect x="50.3427%" y="1765" width="0.0391%" height="15" fill="rgb(227,178,8)" fg:x="54052" fg:w="42"/><text x="50.5927%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (22 samples, 0.02%)</title><rect x="50.3819%" y="1797" width="0.0205%" height="15" fill="rgb(205,206,32)" fg:x="54094" fg:w="22"/><text x="50.6319%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (12 samples, 0.01%)</title><rect x="50.3912%" y="1781" width="0.0112%" height="15" fill="rgb(220,218,22)" fg:x="54104" fg:w="12"/><text x="50.6412%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (17 samples, 0.02%)</title><rect x="50.4024%" y="1797" width="0.0158%" height="15" fill="rgb(236,41,28)" fg:x="54116" fg:w="17"/><text x="50.6524%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (11 samples, 0.01%)</title><rect x="50.4182%" y="1797" width="0.0102%" height="15" fill="rgb(219,37,7)" fg:x="54133" fg:w="11"/><text x="50.6682%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (67 samples, 0.06%)</title><rect x="50.4284%" y="1797" width="0.0624%" height="15" fill="rgb(206,160,15)" fg:x="54144" fg:w="67"/><text x="50.6784%" y="1807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (46 samples, 0.04%)</title><rect x="50.4480%" y="1781" width="0.0428%" height="15" fill="rgb(208,82,21)" fg:x="54165" fg:w="46"/><text x="50.6980%" y="1791.50"></text></g><g><title>core::cmp::PartialEq::ne (46 samples, 0.04%)</title><rect x="50.4480%" y="1765" width="0.0428%" height="15" fill="rgb(226,130,25)" fg:x="54165" fg:w="46"/><text x="50.6980%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (45 samples, 0.04%)</title><rect x="50.4489%" y="1749" width="0.0419%" height="15" fill="rgb(212,72,24)" fg:x="54166" fg:w="45"/><text x="50.6989%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_vec_ref (29 samples, 0.03%)</title><rect x="50.4964%" y="1797" width="0.0270%" height="15" fill="rgb(206,28,16)" fg:x="54217" fg:w="29"/><text x="50.7464%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (1,799 samples, 1.68%)</title><rect x="48.8693%" y="1813" width="1.6755%" height="15" fill="rgb(249,41,5)" fg:x="52470" fg:w="1799"/><text x="49.1193%" y="1823.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::from_const_signature (23 samples, 0.02%)</title><rect x="50.5234%" y="1797" width="0.0214%" height="15" fill="rgb(233,96,48)" fg:x="54246" fg:w="23"/><text x="50.7734%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="50.9314%" y="1797" width="0.0205%" height="15" fill="rgb(240,198,11)" fg:x="54684" fg:w="22"/><text x="51.1814%" y="1807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="50.9314%" y="1781" width="0.0205%" height="15" fill="rgb(209,175,35)" fg:x="54684" fg:w="22"/><text x="51.1814%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.02%)</title><rect x="50.9519%" y="1797" width="0.0224%" height="15" fill="rgb(214,40,51)" fg:x="54706" fg:w="24"/><text x="51.2019%" y="1807.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="50.9742%" y="1797" width="0.0270%" height="15" fill="rgb(252,56,4)" fg:x="54730" fg:w="29"/><text x="51.2242%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (18 samples, 0.02%)</title><rect x="51.0022%" y="1797" width="0.0168%" height="15" fill="rgb(219,131,5)" fg:x="54760" fg:w="18"/><text x="51.2522%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (22 samples, 0.02%)</title><rect x="51.0227%" y="1781" width="0.0205%" height="15" fill="rgb(223,67,53)" fg:x="54782" fg:w="22"/><text x="51.2727%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (40 samples, 0.04%)</title><rect x="51.0199%" y="1797" width="0.0373%" height="15" fill="rgb(227,154,8)" fg:x="54779" fg:w="40"/><text x="51.2699%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (15 samples, 0.01%)</title><rect x="51.0431%" y="1781" width="0.0140%" height="15" fill="rgb(216,174,51)" fg:x="54804" fg:w="15"/><text x="51.2931%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (639 samples, 0.60%)</title><rect x="50.5449%" y="1813" width="0.5951%" height="15" fill="rgb(239,60,34)" fg:x="54269" fg:w="639"/><text x="50.7949%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (72 samples, 0.07%)</title><rect x="51.0729%" y="1797" width="0.0671%" height="15" fill="rgb(236,165,48)" fg:x="54836" fg:w="72"/><text x="51.3229%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (57 samples, 0.05%)</title><rect x="51.1400%" y="1813" width="0.0531%" height="15" fill="rgb(210,37,26)" fg:x="54908" fg:w="57"/><text x="51.3900%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (30 samples, 0.03%)</title><rect x="51.2136%" y="1781" width="0.0279%" height="15" fill="rgb(211,3,17)" fg:x="54987" fg:w="30"/><text x="51.4636%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::ge (17 samples, 0.02%)</title><rect x="51.2657%" y="1749" width="0.0158%" height="15" fill="rgb(234,88,49)" fg:x="55043" fg:w="17"/><text x="51.5157%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::le (11 samples, 0.01%)</title><rect x="51.2816%" y="1749" width="0.0102%" height="15" fill="rgb(233,40,17)" fg:x="55060" fg:w="11"/><text x="51.5316%" y="1759.50"></text></g><g><title>core::ops::function::FnOnce::call_once (36 samples, 0.03%)</title><rect x="51.2657%" y="1765" width="0.0335%" height="15" fill="rgb(235,127,31)" fg:x="55043" fg:w="36"/><text x="51.5157%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (68 samples, 0.06%)</title><rect x="51.2415%" y="1781" width="0.0633%" height="15" fill="rgb(248,167,17)" fg:x="55017" fg:w="68"/><text x="51.4915%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (27 samples, 0.03%)</title><rect x="51.3049%" y="1765" width="0.0251%" height="15" fill="rgb(218,179,8)" fg:x="55085" fg:w="27"/><text x="51.5549%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (26 samples, 0.02%)</title><rect x="51.3300%" y="1765" width="0.0242%" height="15" fill="rgb(216,92,14)" fg:x="55112" fg:w="26"/><text x="51.5800%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (95 samples, 0.09%)</title><rect x="51.3049%" y="1781" width="0.0885%" height="15" fill="rgb(221,198,46)" fg:x="55085" fg:w="95"/><text x="51.5549%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (42 samples, 0.04%)</title><rect x="51.3542%" y="1765" width="0.0391%" height="15" fill="rgb(244,7,25)" fg:x="55138" fg:w="42"/><text x="51.6042%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (36 samples, 0.03%)</title><rect x="51.3598%" y="1749" width="0.0335%" height="15" fill="rgb(233,75,6)" fg:x="55144" fg:w="36"/><text x="51.6098%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (233 samples, 0.22%)</title><rect x="51.1931%" y="1813" width="0.2170%" height="15" fill="rgb(240,189,41)" fg:x="54965" fg:w="233"/><text x="51.4431%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (219 samples, 0.20%)</title><rect x="51.2061%" y="1797" width="0.2040%" height="15" fill="rgb(237,157,21)" fg:x="54979" fg:w="219"/><text x="51.4561%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (18 samples, 0.02%)</title><rect x="51.3933%" y="1781" width="0.0168%" height="15" fill="rgb(210,136,49)" fg:x="55180" fg:w="18"/><text x="51.6433%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.04%)</title><rect x="51.4353%" y="1781" width="0.0419%" height="15" fill="rgb(210,68,29)" fg:x="55225" fg:w="45"/><text x="51.6853%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="51.5107%" y="1765" width="0.0196%" height="15" fill="rgb(247,207,20)" fg:x="55306" fg:w="21"/><text x="51.7607%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::bit_and (11 samples, 0.01%)</title><rect x="51.5358%" y="1749" width="0.0102%" height="15" fill="rgb(224,73,48)" fg:x="55333" fg:w="11"/><text x="51.7858%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::div_checked (11 samples, 0.01%)</title><rect x="51.5461%" y="1749" width="0.0102%" height="15" fill="rgb(215,136,47)" fg:x="55344" fg:w="11"/><text x="51.7961%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::mul_checked (19 samples, 0.02%)</title><rect x="51.5563%" y="1749" width="0.0177%" height="15" fill="rgb(232,222,16)" fg:x="55355" fg:w="19"/><text x="51.8063%" y="1759.50"></text></g><g><title>core::ops::function::FnOnce::call_once (70 samples, 0.07%)</title><rect x="51.5303%" y="1765" width="0.0652%" height="15" fill="rgb(249,202,47)" fg:x="55327" fg:w="70"/><text x="51.7803%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::sub_checked (13 samples, 0.01%)</title><rect x="51.5833%" y="1749" width="0.0121%" height="15" fill="rgb(236,56,8)" fg:x="55384" fg:w="13"/><text x="51.8333%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (141 samples, 0.13%)</title><rect x="51.4772%" y="1781" width="0.1313%" height="15" fill="rgb(222,6,3)" fg:x="55270" fg:w="141"/><text x="51.7272%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::u64 (12 samples, 0.01%)</title><rect x="51.5973%" y="1765" width="0.0112%" height="15" fill="rgb(254,222,28)" fg:x="55399" fg:w="12"/><text x="51.8473%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (35 samples, 0.03%)</title><rect x="51.6094%" y="1765" width="0.0326%" height="15" fill="rgb(219,57,23)" fg:x="55412" fg:w="35"/><text x="51.8594%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (53 samples, 0.05%)</title><rect x="51.6420%" y="1765" width="0.0494%" height="15" fill="rgb(251,106,48)" fg:x="55447" fg:w="53"/><text x="51.8920%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (14 samples, 0.01%)</title><rect x="51.6783%" y="1749" width="0.0130%" height="15" fill="rgb(242,2,23)" fg:x="55486" fg:w="14"/><text x="51.9283%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (156 samples, 0.15%)</title><rect x="51.6085%" y="1781" width="0.1453%" height="15" fill="rgb(212,109,31)" fg:x="55411" fg:w="156"/><text x="51.8585%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (67 samples, 0.06%)</title><rect x="51.6914%" y="1765" width="0.0624%" height="15" fill="rgb(241,9,22)" fg:x="55500" fg:w="67"/><text x="51.9414%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (52 samples, 0.05%)</title><rect x="51.7053%" y="1749" width="0.0484%" height="15" fill="rgb(209,64,27)" fg:x="55515" fg:w="52"/><text x="51.9553%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (14 samples, 0.01%)</title><rect x="51.7407%" y="1733" width="0.0130%" height="15" fill="rgb(248,13,44)" fg:x="55553" fg:w="14"/><text x="51.9907%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (396 samples, 0.37%)</title><rect x="51.4101%" y="1813" width="0.3688%" height="15" fill="rgb(213,86,6)" fg:x="55198" fg:w="396"/><text x="51.6601%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (385 samples, 0.36%)</title><rect x="51.4203%" y="1797" width="0.3586%" height="15" fill="rgb(247,11,18)" fg:x="55209" fg:w="385"/><text x="51.6703%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (27 samples, 0.03%)</title><rect x="51.7538%" y="1781" width="0.0251%" height="15" fill="rgb(252,31,11)" fg:x="55567" fg:w="27"/><text x="52.0038%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.01%)</title><rect x="51.8618%" y="1605" width="0.0130%" height="15" fill="rgb(215,63,51)" fg:x="55683" fg:w="14"/><text x="52.1118%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="51.8618%" y="1589" width="0.0130%" height="15" fill="rgb(222,180,4)" fg:x="55683" fg:w="14"/><text x="52.1118%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="51.8618%" y="1573" width="0.0130%" height="15" fill="rgb(233,4,23)" fg:x="55683" fg:w="14"/><text x="52.1118%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="51.8618%" y="1557" width="0.0130%" height="15" fill="rgb(230,116,22)" fg:x="55683" fg:w="14"/><text x="52.1118%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="51.8618%" y="1541" width="0.0130%" height="15" fill="rgb(222,20,14)" fg:x="55683" fg:w="14"/><text x="52.1118%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="51.8618%" y="1525" width="0.0130%" height="15" fill="rgb(210,176,43)" fg:x="55683" fg:w="14"/><text x="52.1118%" y="1535.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="51.8646%" y="1509" width="0.0102%" height="15" fill="rgb(219,67,32)" fg:x="55686" fg:w="11"/><text x="52.1146%" y="1519.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="51.8488%" y="1685" width="0.0326%" height="15" fill="rgb(228,91,39)" fg:x="55669" fg:w="35"/><text x="52.0988%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="51.8590%" y="1669" width="0.0224%" height="15" fill="rgb(254,63,14)" fg:x="55680" fg:w="24"/><text x="52.1090%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="51.8590%" y="1653" width="0.0224%" height="15" fill="rgb(216,171,39)" fg:x="55680" fg:w="24"/><text x="52.1090%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.02%)</title><rect x="51.8618%" y="1637" width="0.0196%" height="15" fill="rgb(248,68,25)" fg:x="55683" fg:w="21"/><text x="52.1118%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (21 samples, 0.02%)</title><rect x="51.8618%" y="1621" width="0.0196%" height="15" fill="rgb(239,63,16)" fg:x="55683" fg:w="21"/><text x="52.1118%" y="1631.50"></text></g><g><title>bcs::ser::to_bytes (11 samples, 0.01%)</title><rect x="51.8916%" y="1653" width="0.0102%" height="15" fill="rgb(225,111,43)" fg:x="55715" fg:w="11"/><text x="52.1416%" y="1663.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (40 samples, 0.04%)</title><rect x="51.8814%" y="1685" width="0.0373%" height="15" fill="rgb(246,165,17)" fg:x="55704" fg:w="40"/><text x="52.1314%" y="1695.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (32 samples, 0.03%)</title><rect x="51.8888%" y="1669" width="0.0298%" height="15" fill="rgb(208,124,1)" fg:x="55712" fg:w="32"/><text x="52.1388%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (18 samples, 0.02%)</title><rect x="51.9019%" y="1653" width="0.0168%" height="15" fill="rgb(234,147,33)" fg:x="55726" fg:w="18"/><text x="52.1519%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (17 samples, 0.02%)</title><rect x="51.9028%" y="1637" width="0.0158%" height="15" fill="rgb(240,86,30)" fg:x="55727" fg:w="17"/><text x="52.1528%" y="1647.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.01%)</title><rect x="51.9214%" y="1621" width="0.0121%" height="15" fill="rgb(237,34,51)" fg:x="55747" fg:w="13"/><text x="52.1714%" y="1631.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (14 samples, 0.01%)</title><rect x="51.9214%" y="1653" width="0.0130%" height="15" fill="rgb(232,131,41)" fg:x="55747" fg:w="14"/><text x="52.1714%" y="1663.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (14 samples, 0.01%)</title><rect x="51.9214%" y="1637" width="0.0130%" height="15" fill="rgb(227,129,53)" fg:x="55747" fg:w="14"/><text x="52.1714%" y="1647.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (29 samples, 0.03%)</title><rect x="51.9196%" y="1669" width="0.0270%" height="15" fill="rgb(230,90,35)" fg:x="55745" fg:w="29"/><text x="52.1696%" y="1679.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::access_path (12 samples, 0.01%)</title><rect x="51.9466%" y="1669" width="0.0112%" height="15" fill="rgb(248,88,27)" fg:x="55774" fg:w="12"/><text x="52.1966%" y="1679.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (54 samples, 0.05%)</title><rect x="51.9186%" y="1685" width="0.0503%" height="15" fill="rgb(223,18,17)" fg:x="55744" fg:w="54"/><text x="52.1686%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (140 samples, 0.13%)</title><rect x="51.8413%" y="1733" width="0.1304%" height="15" fill="rgb(241,11,10)" fg:x="55661" fg:w="140"/><text x="52.0913%" y="1743.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (140 samples, 0.13%)</title><rect x="51.8413%" y="1717" width="0.1304%" height="15" fill="rgb(232,111,52)" fg:x="55661" fg:w="140"/><text x="52.0913%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (140 samples, 0.13%)</title><rect x="51.8413%" y="1701" width="0.1304%" height="15" fill="rgb(228,67,8)" fg:x="55661" fg:w="140"/><text x="52.0913%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (11 samples, 0.01%)</title><rect x="52.0025%" y="1557" width="0.0102%" height="15" fill="rgb(251,168,31)" fg:x="55834" fg:w="11"/><text x="52.2525%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (11 samples, 0.01%)</title><rect x="52.0025%" y="1541" width="0.0102%" height="15" fill="rgb(249,164,11)" fg:x="55834" fg:w="11"/><text x="52.2525%" y="1551.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="52.0025%" y="1573" width="0.0121%" height="15" fill="rgb(239,81,9)" fg:x="55834" fg:w="13"/><text x="52.2525%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (21 samples, 0.02%)</title><rect x="52.0304%" y="1525" width="0.0196%" height="15" fill="rgb(222,145,38)" fg:x="55864" fg:w="21"/><text x="52.2804%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (21 samples, 0.02%)</title><rect x="52.0304%" y="1509" width="0.0196%" height="15" fill="rgb(238,80,54)" fg:x="55864" fg:w="21"/><text x="52.2804%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (13 samples, 0.01%)</title><rect x="52.0379%" y="1493" width="0.0121%" height="15" fill="rgb(237,116,16)" fg:x="55872" fg:w="13"/><text x="52.2879%" y="1503.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (45 samples, 0.04%)</title><rect x="52.0146%" y="1557" width="0.0419%" height="15" fill="rgb(218,135,19)" fg:x="55847" fg:w="45"/><text x="52.2646%" y="1567.50"></text></g><g><title>alloc::collections::btree::mem::replace (32 samples, 0.03%)</title><rect x="52.0267%" y="1541" width="0.0298%" height="15" fill="rgb(216,207,44)" fg:x="55860" fg:w="32"/><text x="52.2767%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (71 samples, 0.07%)</title><rect x="51.9959%" y="1589" width="0.0661%" height="15" fill="rgb(226,152,40)" fg:x="55827" fg:w="71"/><text x="52.2459%" y="1599.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (51 samples, 0.05%)</title><rect x="52.0146%" y="1573" width="0.0475%" height="15" fill="rgb(219,98,35)" fg:x="55847" fg:w="51"/><text x="52.2646%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (187 samples, 0.17%)</title><rect x="52.0658%" y="1477" width="0.1742%" height="15" fill="rgb(222,136,46)" fg:x="55902" fg:w="187"/><text x="52.3158%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (187 samples, 0.17%)</title><rect x="52.0658%" y="1461" width="0.1742%" height="15" fill="rgb(222,71,8)" fg:x="55902" fg:w="187"/><text x="52.3158%" y="1471.50"></text></g><g><title>cfree (183 samples, 0.17%)</title><rect x="52.0695%" y="1445" width="0.1704%" height="15" fill="rgb(209,89,53)" fg:x="55906" fg:w="183"/><text x="52.3195%" y="1455.50"></text></g><g><title>[libc.so.6] (128 samples, 0.12%)</title><rect x="52.1207%" y="1429" width="0.1192%" height="15" fill="rgb(210,97,51)" fg:x="55961" fg:w="128"/><text x="52.3707%" y="1439.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (197 samples, 0.18%)</title><rect x="52.0621%" y="1573" width="0.1835%" height="15" fill="rgb(248,65,21)" fg:x="55898" fg:w="197"/><text x="52.3121%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (197 samples, 0.18%)</title><rect x="52.0621%" y="1557" width="0.1835%" height="15" fill="rgb(222,5,31)" fg:x="55898" fg:w="197"/><text x="52.3121%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (197 samples, 0.18%)</title><rect x="52.0621%" y="1541" width="0.1835%" height="15" fill="rgb(241,16,30)" fg:x="55898" fg:w="197"/><text x="52.3121%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (197 samples, 0.18%)</title><rect x="52.0621%" y="1525" width="0.1835%" height="15" fill="rgb(215,86,30)" fg:x="55898" fg:w="197"/><text x="52.3121%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (197 samples, 0.18%)</title><rect x="52.0621%" y="1509" width="0.1835%" height="15" fill="rgb(235,26,44)" fg:x="55898" fg:w="197"/><text x="52.3121%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (197 samples, 0.18%)</title><rect x="52.0621%" y="1493" width="0.1835%" height="15" fill="rgb(228,147,14)" fg:x="55898" fg:w="197"/><text x="52.3121%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (285 samples, 0.27%)</title><rect x="51.9810%" y="1685" width="0.2654%" height="15" fill="rgb(253,38,50)" fg:x="55811" fg:w="285"/><text x="52.2310%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (276 samples, 0.26%)</title><rect x="51.9894%" y="1669" width="0.2571%" height="15" fill="rgb(251,151,16)" fg:x="55820" fg:w="276"/><text x="52.2394%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (275 samples, 0.26%)</title><rect x="51.9904%" y="1653" width="0.2561%" height="15" fill="rgb(224,64,19)" fg:x="55821" fg:w="275"/><text x="52.2404%" y="1663.50"></text></g><g><title>core::mem::drop (269 samples, 0.25%)</title><rect x="51.9959%" y="1637" width="0.2505%" height="15" fill="rgb(235,214,47)" fg:x="55827" fg:w="269"/><text x="52.2459%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (269 samples, 0.25%)</title><rect x="51.9959%" y="1621" width="0.2505%" height="15" fill="rgb(218,15,19)" fg:x="55827" fg:w="269"/><text x="52.2459%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (269 samples, 0.25%)</title><rect x="51.9959%" y="1605" width="0.2505%" height="15" fill="rgb(247,209,3)" fg:x="55827" fg:w="269"/><text x="52.2459%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (198 samples, 0.18%)</title><rect x="52.0621%" y="1589" width="0.1844%" height="15" fill="rgb(217,29,2)" fg:x="55898" fg:w="198"/><text x="52.3121%" y="1599.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (297 samples, 0.28%)</title><rect x="51.9717%" y="1733" width="0.2766%" height="15" fill="rgb(234,9,9)" fg:x="55801" fg:w="297"/><text x="52.2217%" y="1743.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (297 samples, 0.28%)</title><rect x="51.9717%" y="1717" width="0.2766%" height="15" fill="rgb(207,43,14)" fg:x="55801" fg:w="297"/><text x="52.2217%" y="1727.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (295 samples, 0.27%)</title><rect x="51.9736%" y="1701" width="0.2748%" height="15" fill="rgb(216,219,36)" fg:x="55803" fg:w="295"/><text x="52.2236%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (450 samples, 0.42%)</title><rect x="51.8329%" y="1765" width="0.4191%" height="15" fill="rgb(238,12,26)" fg:x="55652" fg:w="450"/><text x="52.0829%" y="1775.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (449 samples, 0.42%)</title><rect x="51.8339%" y="1749" width="0.4182%" height="15" fill="rgb(226,67,30)" fg:x="55653" fg:w="449"/><text x="52.0839%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="52.2735%" y="1685" width="0.0112%" height="15" fill="rgb(229,154,7)" fg:x="56125" fg:w="12"/><text x="52.5235%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (31 samples, 0.03%)</title><rect x="52.2595%" y="1733" width="0.0289%" height="15" fill="rgb(249,90,18)" fg:x="56110" fg:w="31"/><text x="52.5095%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="52.2726%" y="1717" width="0.0158%" height="15" fill="rgb(223,53,15)" fg:x="56124" fg:w="17"/><text x="52.5226%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="52.2726%" y="1701" width="0.0158%" height="15" fill="rgb(253,86,38)" fg:x="56124" fg:w="17"/><text x="52.5226%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (34 samples, 0.03%)</title><rect x="52.2595%" y="1765" width="0.0317%" height="15" fill="rgb(222,198,9)" fg:x="56110" fg:w="34"/><text x="52.5095%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (34 samples, 0.03%)</title><rect x="52.2595%" y="1749" width="0.0317%" height="15" fill="rgb(240,146,25)" fg:x="56110" fg:w="34"/><text x="52.5095%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22 samples, 0.02%)</title><rect x="52.2949%" y="1749" width="0.0205%" height="15" fill="rgb(225,38,10)" fg:x="56148" fg:w="22"/><text x="52.5449%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.01%)</title><rect x="52.3005%" y="1733" width="0.0149%" height="15" fill="rgb(246,93,4)" fg:x="56154" fg:w="16"/><text x="52.5505%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.01%)</title><rect x="52.3005%" y="1717" width="0.0149%" height="15" fill="rgb(222,55,18)" fg:x="56154" fg:w="16"/><text x="52.5505%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="52.3033%" y="1701" width="0.0121%" height="15" fill="rgb(233,137,48)" fg:x="56157" fg:w="13"/><text x="52.5533%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (28 samples, 0.03%)</title><rect x="52.2912%" y="1765" width="0.0261%" height="15" fill="rgb(214,8,54)" fg:x="56144" fg:w="28"/><text x="52.5412%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (26 samples, 0.02%)</title><rect x="52.3359%" y="1749" width="0.0242%" height="15" fill="rgb(206,75,4)" fg:x="56192" fg:w="26"/><text x="52.5859%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.01%)</title><rect x="52.3461%" y="1733" width="0.0140%" height="15" fill="rgb(238,171,14)" fg:x="56203" fg:w="15"/><text x="52.5961%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (69 samples, 0.06%)</title><rect x="52.3173%" y="1765" width="0.0643%" height="15" fill="rgb(233,70,41)" fg:x="56172" fg:w="69"/><text x="52.5673%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (23 samples, 0.02%)</title><rect x="52.3601%" y="1749" width="0.0214%" height="15" fill="rgb(214,68,36)" fg:x="56218" fg:w="23"/><text x="52.6101%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (38 samples, 0.04%)</title><rect x="52.3853%" y="1765" width="0.0354%" height="15" fill="rgb(223,29,5)" fg:x="56245" fg:w="38"/><text x="52.6353%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (37 samples, 0.03%)</title><rect x="52.3862%" y="1749" width="0.0345%" height="15" fill="rgb(251,22,40)" fg:x="56246" fg:w="37"/><text x="52.6362%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (34 samples, 0.03%)</title><rect x="52.3890%" y="1733" width="0.0317%" height="15" fill="rgb(210,67,41)" fg:x="56249" fg:w="34"/><text x="52.6390%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (34 samples, 0.03%)</title><rect x="52.3890%" y="1717" width="0.0317%" height="15" fill="rgb(225,177,31)" fg:x="56249" fg:w="34"/><text x="52.6390%" y="1727.50"></text></g><g><title>alloc::alloc::box_free (34 samples, 0.03%)</title><rect x="52.3890%" y="1701" width="0.0317%" height="15" fill="rgb(221,229,11)" fg:x="56249" fg:w="34"/><text x="52.6390%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.03%)</title><rect x="52.3890%" y="1685" width="0.0317%" height="15" fill="rgb(247,172,52)" fg:x="56249" fg:w="34"/><text x="52.6390%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.03%)</title><rect x="52.3908%" y="1669" width="0.0298%" height="15" fill="rgb(212,73,19)" fg:x="56251" fg:w="32"/><text x="52.6408%" y="1679.50"></text></g><g><title>cfree (28 samples, 0.03%)</title><rect x="52.3946%" y="1653" width="0.0261%" height="15" fill="rgb(244,7,46)" fg:x="56255" fg:w="28"/><text x="52.6446%" y="1663.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="52.4030%" y="1637" width="0.0177%" height="15" fill="rgb(230,113,20)" fg:x="56264" fg:w="19"/><text x="52.6530%" y="1647.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="52.4383%" y="1589" width="0.0205%" height="15" fill="rgb(209,97,30)" fg:x="56302" fg:w="22"/><text x="52.6883%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (24 samples, 0.02%)</title><rect x="52.4374%" y="1669" width="0.0224%" height="15" fill="rgb(243,89,12)" fg:x="56301" fg:w="24"/><text x="52.6874%" y="1679.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (24 samples, 0.02%)</title><rect x="52.4374%" y="1653" width="0.0224%" height="15" fill="rgb(228,32,19)" fg:x="56301" fg:w="24"/><text x="52.6874%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (24 samples, 0.02%)</title><rect x="52.4374%" y="1637" width="0.0224%" height="15" fill="rgb(248,25,17)" fg:x="56301" fg:w="24"/><text x="52.6874%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (24 samples, 0.02%)</title><rect x="52.4374%" y="1621" width="0.0224%" height="15" fill="rgb(232,161,29)" fg:x="56301" fg:w="24"/><text x="52.6874%" y="1631.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (24 samples, 0.02%)</title><rect x="52.4374%" y="1605" width="0.0224%" height="15" fill="rgb(251,192,11)" fg:x="56301" fg:w="24"/><text x="52.6874%" y="1615.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (33 samples, 0.03%)</title><rect x="52.4337%" y="1717" width="0.0307%" height="15" fill="rgb(240,47,32)" fg:x="56297" fg:w="33"/><text x="52.6837%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (33 samples, 0.03%)</title><rect x="52.4337%" y="1701" width="0.0307%" height="15" fill="rgb(250,16,45)" fg:x="56297" fg:w="33"/><text x="52.6837%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (33 samples, 0.03%)</title><rect x="52.4337%" y="1685" width="0.0307%" height="15" fill="rgb(227,217,42)" fg:x="56297" fg:w="33"/><text x="52.6837%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (36 samples, 0.03%)</title><rect x="52.4328%" y="1749" width="0.0335%" height="15" fill="rgb(206,82,54)" fg:x="56296" fg:w="36"/><text x="52.6828%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (36 samples, 0.03%)</title><rect x="52.4328%" y="1733" width="0.0335%" height="15" fill="rgb(243,145,25)" fg:x="56296" fg:w="36"/><text x="52.6828%" y="1743.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="52.4728%" y="1605" width="0.0102%" height="15" fill="rgb(207,166,24)" fg:x="56339" fg:w="11"/><text x="52.7228%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (21 samples, 0.02%)</title><rect x="52.4709%" y="1685" width="0.0196%" height="15" fill="rgb(215,191,44)" fg:x="56337" fg:w="21"/><text x="52.7209%" y="1695.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (21 samples, 0.02%)</title><rect x="52.4709%" y="1669" width="0.0196%" height="15" fill="rgb(234,218,51)" fg:x="56337" fg:w="21"/><text x="52.7209%" y="1679.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (21 samples, 0.02%)</title><rect x="52.4709%" y="1653" width="0.0196%" height="15" fill="rgb(245,133,21)" fg:x="56337" fg:w="21"/><text x="52.7209%" y="1663.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (21 samples, 0.02%)</title><rect x="52.4709%" y="1637" width="0.0196%" height="15" fill="rgb(230,136,45)" fg:x="56337" fg:w="21"/><text x="52.7209%" y="1647.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (21 samples, 0.02%)</title><rect x="52.4709%" y="1621" width="0.0196%" height="15" fill="rgb(247,63,43)" fg:x="56337" fg:w="21"/><text x="52.7209%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.02%)</title><rect x="52.4691%" y="1733" width="0.0242%" height="15" fill="rgb(254,223,31)" fg:x="56335" fg:w="26"/><text x="52.7191%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (26 samples, 0.02%)</title><rect x="52.4691%" y="1717" width="0.0242%" height="15" fill="rgb(236,185,0)" fg:x="56335" fg:w="26"/><text x="52.7191%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.02%)</title><rect x="52.4691%" y="1701" width="0.0242%" height="15" fill="rgb(231,139,46)" fg:x="56335" fg:w="26"/><text x="52.7191%" y="1711.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (66 samples, 0.06%)</title><rect x="52.4328%" y="1765" width="0.0615%" height="15" fill="rgb(236,147,31)" fg:x="56296" fg:w="66"/><text x="52.6828%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (30 samples, 0.03%)</title><rect x="52.4663%" y="1749" width="0.0279%" height="15" fill="rgb(225,222,22)" fg:x="56332" fg:w="30"/><text x="52.7163%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (16 samples, 0.01%)</title><rect x="52.4942%" y="1765" width="0.0149%" height="15" fill="rgb(225,193,14)" fg:x="56362" fg:w="16"/><text x="52.7442%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (13 samples, 0.01%)</title><rect x="52.4970%" y="1749" width="0.0121%" height="15" fill="rgb(253,193,46)" fg:x="56365" fg:w="13"/><text x="52.7470%" y="1759.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="52.5268%" y="1717" width="0.0363%" height="15" fill="rgb(218,187,39)" fg:x="56397" fg:w="39"/><text x="52.7768%" y="1727.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="52.5333%" y="1701" width="0.0298%" height="15" fill="rgb(227,162,48)" fg:x="56404" fg:w="32"/><text x="52.7833%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="52.5333%" y="1685" width="0.0298%" height="15" fill="rgb(222,25,5)" fg:x="56404" fg:w="32"/><text x="52.7833%" y="1695.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.03%)</title><rect x="52.5380%" y="1669" width="0.0251%" height="15" fill="rgb(211,205,16)" fg:x="56409" fg:w="27"/><text x="52.7880%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (27 samples, 0.03%)</title><rect x="52.5380%" y="1653" width="0.0251%" height="15" fill="rgb(244,191,2)" fg:x="56409" fg:w="27"/><text x="52.7880%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="52.5455%" y="1637" width="0.0177%" height="15" fill="rgb(248,159,12)" fg:x="56417" fg:w="19"/><text x="52.7955%" y="1647.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="52.5455%" y="1621" width="0.0177%" height="15" fill="rgb(235,204,17)" fg:x="56417" fg:w="19"/><text x="52.7955%" y="1631.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.02%)</title><rect x="52.5725%" y="1669" width="0.0214%" height="15" fill="rgb(240,21,27)" fg:x="56446" fg:w="23"/><text x="52.8225%" y="1679.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.02%)</title><rect x="52.5725%" y="1653" width="0.0214%" height="15" fill="rgb(224,170,31)" fg:x="56446" fg:w="23"/><text x="52.8225%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.01%)</title><rect x="52.6088%" y="1621" width="0.0102%" height="15" fill="rgb(223,145,32)" fg:x="56485" fg:w="11"/><text x="52.8588%" y="1631.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.01%)</title><rect x="52.6200%" y="1621" width="0.0121%" height="15" fill="rgb(243,100,5)" fg:x="56497" fg:w="13"/><text x="52.8700%" y="1631.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.01%)</title><rect x="52.6200%" y="1605" width="0.0121%" height="15" fill="rgb(242,131,51)" fg:x="56497" fg:w="13"/><text x="52.8700%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="52.6200%" y="1589" width="0.0121%" height="15" fill="rgb(223,156,46)" fg:x="56497" fg:w="13"/><text x="52.8700%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (145 samples, 0.14%)</title><rect x="52.5091%" y="1765" width="0.1350%" height="15" fill="rgb(215,10,40)" fg:x="56378" fg:w="145"/><text x="52.7591%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (138 samples, 0.13%)</title><rect x="52.5156%" y="1749" width="0.1285%" height="15" fill="rgb(233,155,0)" fg:x="56385" fg:w="138"/><text x="52.7656%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (127 samples, 0.12%)</title><rect x="52.5259%" y="1733" width="0.1183%" height="15" fill="rgb(247,78,6)" fg:x="56396" fg:w="127"/><text x="52.7759%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (84 samples, 0.08%)</title><rect x="52.5659%" y="1717" width="0.0782%" height="15" fill="rgb(237,217,21)" fg:x="56439" fg:w="84"/><text x="52.8159%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (84 samples, 0.08%)</title><rect x="52.5659%" y="1701" width="0.0782%" height="15" fill="rgb(212,1,21)" fg:x="56439" fg:w="84"/><text x="52.8159%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (84 samples, 0.08%)</title><rect x="52.5659%" y="1685" width="0.0782%" height="15" fill="rgb(213,7,14)" fg:x="56439" fg:w="84"/><text x="52.8159%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (54 samples, 0.05%)</title><rect x="52.5939%" y="1669" width="0.0503%" height="15" fill="rgb(225,84,14)" fg:x="56469" fg:w="54"/><text x="52.8439%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (54 samples, 0.05%)</title><rect x="52.5939%" y="1653" width="0.0503%" height="15" fill="rgb(239,216,39)" fg:x="56469" fg:w="54"/><text x="52.8439%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (54 samples, 0.05%)</title><rect x="52.5939%" y="1637" width="0.0503%" height="15" fill="rgb(253,29,23)" fg:x="56469" fg:w="54"/><text x="52.8439%" y="1647.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.01%)</title><rect x="52.6321%" y="1621" width="0.0121%" height="15" fill="rgb(220,167,50)" fg:x="56510" fg:w="13"/><text x="52.8821%" y="1631.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.01%)</title><rect x="52.6321%" y="1605" width="0.0121%" height="15" fill="rgb(232,141,1)" fg:x="56510" fg:w="13"/><text x="52.8821%" y="1615.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (11 samples, 0.01%)</title><rect x="52.6442%" y="1765" width="0.0102%" height="15" fill="rgb(222,210,1)" fg:x="56523" fg:w="11"/><text x="52.8942%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.01%)</title><rect x="52.7345%" y="1637" width="0.0121%" height="15" fill="rgb(219,84,10)" fg:x="56620" fg:w="13"/><text x="52.9845%" y="1647.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (19 samples, 0.02%)</title><rect x="52.7513%" y="1637" width="0.0177%" height="15" fill="rgb(245,188,6)" fg:x="56638" fg:w="19"/><text x="53.0013%" y="1647.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="52.7513%" y="1621" width="0.0177%" height="15" fill="rgb(252,139,39)" fg:x="56638" fg:w="19"/><text x="53.0013%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="52.7587%" y="1605" width="0.0102%" height="15" fill="rgb(218,42,26)" fg:x="56646" fg:w="11"/><text x="53.0087%" y="1615.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="52.7587%" y="1589" width="0.0102%" height="15" fill="rgb(237,226,51)" fg:x="56646" fg:w="11"/><text x="53.0087%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (69 samples, 0.06%)</title><rect x="52.7178%" y="1653" width="0.0643%" height="15" fill="rgb(246,15,17)" fg:x="56602" fg:w="69"/><text x="52.9678%" y="1663.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (12 samples, 0.01%)</title><rect x="52.7708%" y="1637" width="0.0112%" height="15" fill="rgb(228,170,42)" fg:x="56659" fg:w="12"/><text x="53.0208%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (12 samples, 0.01%)</title><rect x="52.7708%" y="1621" width="0.0112%" height="15" fill="rgb(248,118,53)" fg:x="56659" fg:w="12"/><text x="53.0208%" y="1631.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (11 samples, 0.01%)</title><rect x="52.7718%" y="1605" width="0.0102%" height="15" fill="rgb(207,30,10)" fg:x="56660" fg:w="11"/><text x="53.0218%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (99 samples, 0.09%)</title><rect x="52.7140%" y="1669" width="0.0922%" height="15" fill="rgb(217,104,38)" fg:x="56598" fg:w="99"/><text x="52.9640%" y="1679.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (26 samples, 0.02%)</title><rect x="52.7820%" y="1653" width="0.0242%" height="15" fill="rgb(211,165,26)" fg:x="56671" fg:w="26"/><text x="53.0320%" y="1663.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.02%)</title><rect x="52.8062%" y="1669" width="0.0242%" height="15" fill="rgb(247,38,9)" fg:x="56697" fg:w="26"/><text x="53.0562%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (70 samples, 0.07%)</title><rect x="52.8305%" y="1653" width="0.0652%" height="15" fill="rgb(218,187,8)" fg:x="56723" fg:w="70"/><text x="53.0805%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (70 samples, 0.07%)</title><rect x="52.8305%" y="1637" width="0.0652%" height="15" fill="rgb(247,94,28)" fg:x="56723" fg:w="70"/><text x="53.0805%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (69 samples, 0.06%)</title><rect x="52.8314%" y="1621" width="0.0643%" height="15" fill="rgb(218,173,30)" fg:x="56724" fg:w="69"/><text x="53.0814%" y="1631.50"></text></g><g><title>malloc (59 samples, 0.05%)</title><rect x="52.8407%" y="1605" width="0.0550%" height="15" fill="rgb(245,45,36)" fg:x="56734" fg:w="59"/><text x="53.0907%" y="1615.50"></text></g><g><title>[libc.so.6] (58 samples, 0.05%)</title><rect x="52.8416%" y="1589" width="0.0540%" height="15" fill="rgb(221,172,44)" fg:x="56735" fg:w="58"/><text x="53.0916%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (249 samples, 0.23%)</title><rect x="52.6861%" y="1701" width="0.2319%" height="15" fill="rgb(222,45,12)" fg:x="56568" fg:w="249"/><text x="52.9361%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (249 samples, 0.23%)</title><rect x="52.6861%" y="1685" width="0.2319%" height="15" fill="rgb(250,10,22)" fg:x="56568" fg:w="249"/><text x="52.9361%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (94 samples, 0.09%)</title><rect x="52.8305%" y="1669" width="0.0875%" height="15" fill="rgb(239,27,0)" fg:x="56723" fg:w="94"/><text x="53.0805%" y="1679.50"></text></g><g><title>core::ptr::write (24 samples, 0.02%)</title><rect x="52.8956%" y="1653" width="0.0224%" height="15" fill="rgb(223,118,22)" fg:x="56793" fg:w="24"/><text x="53.1456%" y="1663.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (21 samples, 0.02%)</title><rect x="52.9227%" y="1637" width="0.0196%" height="15" fill="rgb(251,81,25)" fg:x="56822" fg:w="21"/><text x="53.1727%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.02%)</title><rect x="52.9227%" y="1621" width="0.0196%" height="15" fill="rgb(237,225,53)" fg:x="56822" fg:w="21"/><text x="53.1727%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.02%)</title><rect x="52.9227%" y="1605" width="0.0196%" height="15" fill="rgb(237,186,51)" fg:x="56822" fg:w="21"/><text x="53.1727%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.02%)</title><rect x="52.9245%" y="1589" width="0.0177%" height="15" fill="rgb(247,209,11)" fg:x="56824" fg:w="19"/><text x="53.1745%" y="1599.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (19 samples, 0.02%)</title><rect x="52.9245%" y="1573" width="0.0177%" height="15" fill="rgb(223,109,27)" fg:x="56824" fg:w="19"/><text x="53.1745%" y="1583.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="52.9264%" y="1557" width="0.0158%" height="15" fill="rgb(246,181,13)" fg:x="56826" fg:w="17"/><text x="53.1764%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (280 samples, 0.26%)</title><rect x="52.6852%" y="1717" width="0.2608%" height="15" fill="rgb(234,57,44)" fg:x="56567" fg:w="280"/><text x="52.9352%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (27 samples, 0.03%)</title><rect x="52.9208%" y="1701" width="0.0251%" height="15" fill="rgb(211,227,50)" fg:x="56820" fg:w="27"/><text x="53.1708%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.03%)</title><rect x="52.9208%" y="1685" width="0.0251%" height="15" fill="rgb(254,57,34)" fg:x="56820" fg:w="27"/><text x="53.1708%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="52.9208%" y="1669" width="0.0251%" height="15" fill="rgb(227,212,26)" fg:x="56820" fg:w="27"/><text x="53.1708%" y="1679.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="52.9208%" y="1653" width="0.0251%" height="15" fill="rgb(244,169,44)" fg:x="56820" fg:w="27"/><text x="53.1708%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (302 samples, 0.28%)</title><rect x="52.6768%" y="1733" width="0.2813%" height="15" fill="rgb(236,135,50)" fg:x="56558" fg:w="302"/><text x="52.9268%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (13 samples, 0.01%)</title><rect x="52.9459%" y="1717" width="0.0121%" height="15" fill="rgb(241,89,30)" fg:x="56847" fg:w="13"/><text x="53.1959%" y="1727.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="52.9459%" y="1701" width="0.0121%" height="15" fill="rgb(206,113,34)" fg:x="56847" fg:w="13"/><text x="53.1959%" y="1711.50"></text></g><g><title>bcs::de::from_bytes_seed (324 samples, 0.30%)</title><rect x="52.6572%" y="1749" width="0.3018%" height="15" fill="rgb(218,104,52)" fg:x="56537" fg:w="324"/><text x="52.9072%" y="1759.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,230 samples, 1.15%)</title><rect x="51.8162%" y="1781" width="1.1456%" height="15" fill="rgb(223,82,32)" fg:x="55634" fg:w="1230"/><text x="52.0662%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (330 samples, 0.31%)</title><rect x="52.6544%" y="1765" width="0.3074%" height="15" fill="rgb(249,219,30)" fg:x="56534" fg:w="330"/><text x="52.9044%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,257 samples, 1.17%)</title><rect x="51.7948%" y="1797" width="1.1707%" height="15" fill="rgb(233,141,21)" fg:x="55611" fg:w="1257"/><text x="52.0448%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (13 samples, 0.01%)</title><rect x="52.9655%" y="1797" width="0.0121%" height="15" fill="rgb(252,87,44)" fg:x="56868" fg:w="13"/><text x="53.2155%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (1,306 samples, 1.22%)</title><rect x="51.7789%" y="1813" width="1.2164%" height="15" fill="rgb(229,48,33)" fg:x="55594" fg:w="1306"/><text x="52.0289%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (19 samples, 0.02%)</title><rect x="52.9776%" y="1797" width="0.0177%" height="15" fill="rgb(229,23,22)" fg:x="56881" fg:w="19"/><text x="53.2276%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (23 samples, 0.02%)</title><rect x="53.0894%" y="1477" width="0.0214%" height="15" fill="rgb(244,116,16)" fg:x="57001" fg:w="23"/><text x="53.3394%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="53.0894%" y="1461" width="0.0214%" height="15" fill="rgb(247,45,10)" fg:x="57001" fg:w="23"/><text x="53.3394%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="53.0894%" y="1445" width="0.0214%" height="15" fill="rgb(228,60,29)" fg:x="57001" fg:w="23"/><text x="53.3394%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="53.0894%" y="1429" width="0.0214%" height="15" fill="rgb(205,129,15)" fg:x="57001" fg:w="23"/><text x="53.3394%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="53.0894%" y="1413" width="0.0214%" height="15" fill="rgb(206,229,4)" fg:x="57001" fg:w="23"/><text x="53.3394%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="53.0894%" y="1397" width="0.0214%" height="15" fill="rgb(249,191,30)" fg:x="57001" fg:w="23"/><text x="53.3394%" y="1407.50"></text></g><g><title>malloc (22 samples, 0.02%)</title><rect x="53.0903%" y="1381" width="0.0205%" height="15" fill="rgb(250,84,54)" fg:x="57002" fg:w="22"/><text x="53.3403%" y="1391.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="53.0968%" y="1365" width="0.0140%" height="15" fill="rgb(207,25,53)" fg:x="57009" fg:w="15"/><text x="53.3468%" y="1375.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (32 samples, 0.03%)</title><rect x="53.0838%" y="1573" width="0.0298%" height="15" fill="rgb(235,40,8)" fg:x="56995" fg:w="32"/><text x="53.3338%" y="1583.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="53.0838%" y="1557" width="0.0298%" height="15" fill="rgb(226,169,33)" fg:x="56995" fg:w="32"/><text x="53.3338%" y="1567.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="53.0856%" y="1541" width="0.0279%" height="15" fill="rgb(238,110,8)" fg:x="56997" fg:w="30"/><text x="53.3356%" y="1551.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="53.0856%" y="1525" width="0.0279%" height="15" fill="rgb(251,206,12)" fg:x="56997" fg:w="30"/><text x="53.3356%" y="1535.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.02%)</title><rect x="53.0894%" y="1509" width="0.0242%" height="15" fill="rgb(248,171,18)" fg:x="57001" fg:w="26"/><text x="53.3394%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (26 samples, 0.02%)</title><rect x="53.0894%" y="1493" width="0.0242%" height="15" fill="rgb(213,65,46)" fg:x="57001" fg:w="26"/><text x="53.3394%" y="1503.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="53.0819%" y="1605" width="0.0382%" height="15" fill="rgb(211,154,15)" fg:x="56993" fg:w="41"/><text x="53.3319%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="53.0838%" y="1589" width="0.0363%" height="15" fill="rgb(217,75,43)" fg:x="56995" fg:w="39"/><text x="53.3338%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="53.1201%" y="1605" width="0.0130%" height="15" fill="rgb(230,32,33)" fg:x="57034" fg:w="14"/><text x="53.3701%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="53.1201%" y="1589" width="0.0130%" height="15" fill="rgb(221,100,16)" fg:x="57034" fg:w="14"/><text x="53.3701%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="53.1201%" y="1573" width="0.0130%" height="15" fill="rgb(212,129,47)" fg:x="57034" fg:w="14"/><text x="53.3701%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="53.1201%" y="1557" width="0.0130%" height="15" fill="rgb(239,217,47)" fg:x="57034" fg:w="14"/><text x="53.3701%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="53.1201%" y="1541" width="0.0130%" height="15" fill="rgb(230,84,24)" fg:x="57034" fg:w="14"/><text x="53.3701%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="53.1201%" y="1525" width="0.0130%" height="15" fill="rgb(214,153,51)" fg:x="57034" fg:w="14"/><text x="53.3701%" y="1535.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="53.1220%" y="1509" width="0.0112%" height="15" fill="rgb(231,6,35)" fg:x="57036" fg:w="12"/><text x="53.3720%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61 samples, 0.06%)</title><rect x="53.0773%" y="1669" width="0.0568%" height="15" fill="rgb(229,122,30)" fg:x="56988" fg:w="61"/><text x="53.3273%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56 samples, 0.05%)</title><rect x="53.0819%" y="1653" width="0.0522%" height="15" fill="rgb(234,71,10)" fg:x="56993" fg:w="56"/><text x="53.3319%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (56 samples, 0.05%)</title><rect x="53.0819%" y="1637" width="0.0522%" height="15" fill="rgb(215,173,26)" fg:x="56993" fg:w="56"/><text x="53.3319%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56 samples, 0.05%)</title><rect x="53.0819%" y="1621" width="0.0522%" height="15" fill="rgb(248,118,52)" fg:x="56993" fg:w="56"/><text x="53.3319%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (29 samples, 0.03%)</title><rect x="53.1425%" y="1605" width="0.0270%" height="15" fill="rgb(237,55,46)" fg:x="57058" fg:w="29"/><text x="53.3925%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.03%)</title><rect x="53.1425%" y="1589" width="0.0270%" height="15" fill="rgb(243,214,43)" fg:x="57058" fg:w="29"/><text x="53.3925%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.03%)</title><rect x="53.1425%" y="1573" width="0.0270%" height="15" fill="rgb(252,123,30)" fg:x="57058" fg:w="29"/><text x="53.3925%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.03%)</title><rect x="53.1434%" y="1557" width="0.0261%" height="15" fill="rgb(215,73,39)" fg:x="57059" fg:w="28"/><text x="53.3934%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.03%)</title><rect x="53.1434%" y="1541" width="0.0261%" height="15" fill="rgb(251,194,29)" fg:x="57059" fg:w="28"/><text x="53.3934%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.03%)</title><rect x="53.1434%" y="1525" width="0.0261%" height="15" fill="rgb(224,58,52)" fg:x="57059" fg:w="28"/><text x="53.3934%" y="1535.50"></text></g><g><title>malloc (27 samples, 0.03%)</title><rect x="53.1443%" y="1509" width="0.0251%" height="15" fill="rgb(248,106,46)" fg:x="57060" fg:w="27"/><text x="53.3943%" y="1519.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="53.1499%" y="1493" width="0.0196%" height="15" fill="rgb(223,80,29)" fg:x="57066" fg:w="21"/><text x="53.3999%" y="1503.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (106 samples, 0.10%)</title><rect x="53.0745%" y="1685" width="0.0987%" height="15" fill="rgb(243,137,9)" fg:x="56985" fg:w="106"/><text x="53.3245%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="53.1341%" y="1669" width="0.0391%" height="15" fill="rgb(235,121,28)" fg:x="57049" fg:w="42"/><text x="53.3841%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="53.1350%" y="1653" width="0.0382%" height="15" fill="rgb(219,121,41)" fg:x="57050" fg:w="41"/><text x="53.3850%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (33 samples, 0.03%)</title><rect x="53.1425%" y="1637" width="0.0307%" height="15" fill="rgb(251,60,6)" fg:x="57058" fg:w="33"/><text x="53.3925%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (33 samples, 0.03%)</title><rect x="53.1425%" y="1621" width="0.0307%" height="15" fill="rgb(208,12,30)" fg:x="57058" fg:w="33"/><text x="53.3925%" y="1631.50"></text></g><g><title>bcs::ser::to_bytes (14 samples, 0.01%)</title><rect x="53.1956%" y="1653" width="0.0130%" height="15" fill="rgb(207,176,36)" fg:x="57115" fg:w="14"/><text x="53.4456%" y="1663.50"></text></g><g><title>bcs::ser::serialize_into (13 samples, 0.01%)</title><rect x="53.1965%" y="1637" width="0.0121%" height="15" fill="rgb(211,188,29)" fg:x="57116" fg:w="13"/><text x="53.4465%" y="1647.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (13 samples, 0.01%)</title><rect x="53.1965%" y="1621" width="0.0121%" height="15" fill="rgb(220,184,37)" fg:x="57116" fg:w="13"/><text x="53.4465%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (25 samples, 0.02%)</title><rect x="53.2188%" y="1621" width="0.0233%" height="15" fill="rgb(239,87,37)" fg:x="57140" fg:w="25"/><text x="53.4688%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="53.2188%" y="1605" width="0.0233%" height="15" fill="rgb(232,113,44)" fg:x="57140" fg:w="25"/><text x="53.4688%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (23 samples, 0.02%)</title><rect x="53.2207%" y="1589" width="0.0214%" height="15" fill="rgb(246,25,39)" fg:x="57142" fg:w="23"/><text x="53.4707%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (22 samples, 0.02%)</title><rect x="53.2216%" y="1573" width="0.0205%" height="15" fill="rgb(247,30,13)" fg:x="57143" fg:w="22"/><text x="53.4716%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (15 samples, 0.01%)</title><rect x="53.2281%" y="1557" width="0.0140%" height="15" fill="rgb(230,176,35)" fg:x="57150" fg:w="15"/><text x="53.4781%" y="1567.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (87 samples, 0.08%)</title><rect x="53.1732%" y="1685" width="0.0810%" height="15" fill="rgb(222,23,18)" fg:x="57091" fg:w="87"/><text x="53.4232%" y="1695.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (69 samples, 0.06%)</title><rect x="53.1900%" y="1669" width="0.0643%" height="15" fill="rgb(234,86,8)" fg:x="57109" fg:w="69"/><text x="53.4400%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (47 samples, 0.04%)</title><rect x="53.2105%" y="1653" width="0.0438%" height="15" fill="rgb(206,218,47)" fg:x="57131" fg:w="47"/><text x="53.4605%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (39 samples, 0.04%)</title><rect x="53.2179%" y="1637" width="0.0363%" height="15" fill="rgb(229,35,31)" fg:x="57139" fg:w="39"/><text x="53.4679%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (13 samples, 0.01%)</title><rect x="53.2421%" y="1621" width="0.0121%" height="15" fill="rgb(242,81,7)" fg:x="57165" fg:w="13"/><text x="53.4921%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (13 samples, 0.01%)</title><rect x="53.2421%" y="1605" width="0.0121%" height="15" fill="rgb(231,11,35)" fg:x="57165" fg:w="13"/><text x="53.4921%" y="1615.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="53.2421%" y="1589" width="0.0121%" height="15" fill="rgb(219,218,17)" fg:x="57165" fg:w="13"/><text x="53.4921%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="53.2421%" y="1573" width="0.0121%" height="15" fill="rgb(221,83,32)" fg:x="57165" fg:w="13"/><text x="53.4921%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="53.2431%" y="1557" width="0.0112%" height="15" fill="rgb(233,49,54)" fg:x="57166" fg:w="12"/><text x="53.4931%" y="1567.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (11 samples, 0.01%)</title><rect x="53.2719%" y="1621" width="0.0102%" height="15" fill="rgb(206,18,51)" fg:x="57197" fg:w="11"/><text x="53.5219%" y="1631.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (26 samples, 0.02%)</title><rect x="53.2635%" y="1653" width="0.0242%" height="15" fill="rgb(249,193,15)" fg:x="57188" fg:w="26"/><text x="53.5135%" y="1663.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (26 samples, 0.02%)</title><rect x="53.2635%" y="1637" width="0.0242%" height="15" fill="rgb(245,186,19)" fg:x="57188" fg:w="26"/><text x="53.5135%" y="1647.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (48 samples, 0.04%)</title><rect x="53.2598%" y="1669" width="0.0447%" height="15" fill="rgb(230,4,24)" fg:x="57184" fg:w="48"/><text x="53.5098%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.01%)</title><rect x="53.2896%" y="1653" width="0.0149%" height="15" fill="rgb(234,75,27)" fg:x="57216" fg:w="16"/><text x="53.5396%" y="1663.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes::{{closure}} (12 samples, 0.01%)</title><rect x="53.2933%" y="1637" width="0.0112%" height="15" fill="rgb(244,187,35)" fg:x="57220" fg:w="12"/><text x="53.5433%" y="1647.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::into_bytes (11 samples, 0.01%)</title><rect x="53.2943%" y="1621" width="0.0102%" height="15" fill="rgb(241,97,43)" fg:x="57221" fg:w="11"/><text x="53.5443%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (20 samples, 0.02%)</title><rect x="53.3129%" y="1669" width="0.0186%" height="15" fill="rgb(236,94,2)" fg:x="57241" fg:w="20"/><text x="53.5629%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (20 samples, 0.02%)</title><rect x="53.3129%" y="1653" width="0.0186%" height="15" fill="rgb(231,175,7)" fg:x="57241" fg:w="20"/><text x="53.5629%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="53.3129%" y="1637" width="0.0186%" height="15" fill="rgb(236,89,47)" fg:x="57241" fg:w="20"/><text x="53.5629%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="53.3129%" y="1621" width="0.0186%" height="15" fill="rgb(213,191,37)" fg:x="57241" fg:w="20"/><text x="53.5629%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="53.3129%" y="1605" width="0.0186%" height="15" fill="rgb(252,0,34)" fg:x="57241" fg:w="20"/><text x="53.5629%" y="1615.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="53.3157%" y="1589" width="0.0158%" height="15" fill="rgb(208,145,44)" fg:x="57244" fg:w="17"/><text x="53.5657%" y="1599.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="53.3185%" y="1573" width="0.0130%" height="15" fill="rgb(227,95,50)" fg:x="57247" fg:w="14"/><text x="53.5685%" y="1583.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (88 samples, 0.08%)</title><rect x="53.2542%" y="1685" width="0.0820%" height="15" fill="rgb(222,136,24)" fg:x="57178" fg:w="88"/><text x="53.5042%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (298 samples, 0.28%)</title><rect x="53.0652%" y="1733" width="0.2776%" height="15" fill="rgb(218,105,10)" fg:x="56975" fg:w="298"/><text x="53.3152%" y="1743.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (298 samples, 0.28%)</title><rect x="53.0652%" y="1717" width="0.2776%" height="15" fill="rgb(216,65,28)" fg:x="56975" fg:w="298"/><text x="53.3152%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (298 samples, 0.28%)</title><rect x="53.0652%" y="1701" width="0.2776%" height="15" fill="rgb(229,6,28)" fg:x="56975" fg:w="298"/><text x="53.3152%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (24 samples, 0.02%)</title><rect x="53.3688%" y="1589" width="0.0224%" height="15" fill="rgb(222,160,42)" fg:x="57301" fg:w="24"/><text x="53.6188%" y="1599.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (13 samples, 0.01%)</title><rect x="53.3790%" y="1573" width="0.0121%" height="15" fill="rgb(235,83,49)" fg:x="57312" fg:w="13"/><text x="53.6290%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (11 samples, 0.01%)</title><rect x="53.3930%" y="1557" width="0.0102%" height="15" fill="rgb(236,86,36)" fg:x="57327" fg:w="11"/><text x="53.6430%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="53.3930%" y="1541" width="0.0102%" height="15" fill="rgb(236,19,41)" fg:x="57327" fg:w="11"/><text x="53.6430%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="53.3930%" y="1525" width="0.0102%" height="15" fill="rgb(217,71,31)" fg:x="57327" fg:w="11"/><text x="53.6430%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="53.3930%" y="1509" width="0.0102%" height="15" fill="rgb(236,209,25)" fg:x="57327" fg:w="11"/><text x="53.6430%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="53.3930%" y="1493" width="0.0102%" height="15" fill="rgb(247,104,21)" fg:x="57327" fg:w="11"/><text x="53.6430%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="53.3930%" y="1477" width="0.0102%" height="15" fill="rgb(243,80,38)" fg:x="57327" fg:w="11"/><text x="53.6430%" y="1487.50"></text></g><g><title>core::mem::drop (42 samples, 0.04%)</title><rect x="53.3688%" y="1637" width="0.0391%" height="15" fill="rgb(232,109,38)" fg:x="57301" fg:w="42"/><text x="53.6188%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="53.3688%" y="1621" width="0.0391%" height="15" fill="rgb(212,177,53)" fg:x="57301" fg:w="42"/><text x="53.6188%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="53.3688%" y="1605" width="0.0391%" height="15" fill="rgb(227,30,34)" fg:x="57301" fg:w="42"/><text x="53.6188%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (18 samples, 0.02%)</title><rect x="53.3911%" y="1589" width="0.0168%" height="15" fill="rgb(205,175,25)" fg:x="57325" fg:w="18"/><text x="53.6411%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (16 samples, 0.01%)</title><rect x="53.3930%" y="1573" width="0.0149%" height="15" fill="rgb(249,39,54)" fg:x="57327" fg:w="16"/><text x="53.6430%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (66 samples, 0.06%)</title><rect x="53.3502%" y="1669" width="0.0615%" height="15" fill="rgb(215,54,37)" fg:x="57281" fg:w="66"/><text x="53.6002%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="53.3511%" y="1653" width="0.0605%" height="15" fill="rgb(205,60,46)" fg:x="57282" fg:w="65"/><text x="53.6011%" y="1663.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (11 samples, 0.01%)</title><rect x="53.4228%" y="1557" width="0.0102%" height="15" fill="rgb(238,89,29)" fg:x="57359" fg:w="11"/><text x="53.6728%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (11 samples, 0.01%)</title><rect x="53.4228%" y="1541" width="0.0102%" height="15" fill="rgb(212,48,10)" fg:x="57359" fg:w="11"/><text x="53.6728%" y="1551.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (14 samples, 0.01%)</title><rect x="53.4219%" y="1573" width="0.0130%" height="15" fill="rgb(237,186,28)" fg:x="57358" fg:w="14"/><text x="53.6719%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (15 samples, 0.01%)</title><rect x="53.4470%" y="1525" width="0.0140%" height="15" fill="rgb(237,204,4)" fg:x="57385" fg:w="15"/><text x="53.6970%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (15 samples, 0.01%)</title><rect x="53.4470%" y="1509" width="0.0140%" height="15" fill="rgb(237,15,47)" fg:x="57385" fg:w="15"/><text x="53.6970%" y="1519.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (31 samples, 0.03%)</title><rect x="53.4349%" y="1557" width="0.0289%" height="15" fill="rgb(244,110,25)" fg:x="57372" fg:w="31"/><text x="53.6849%" y="1567.50"></text></g><g><title>alloc::collections::btree::mem::replace (21 samples, 0.02%)</title><rect x="53.4442%" y="1541" width="0.0196%" height="15" fill="rgb(241,12,16)" fg:x="57382" fg:w="21"/><text x="53.6942%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (54 samples, 0.05%)</title><rect x="53.4182%" y="1589" width="0.0503%" height="15" fill="rgb(235,25,9)" fg:x="57354" fg:w="54"/><text x="53.6682%" y="1599.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (36 samples, 0.03%)</title><rect x="53.4349%" y="1573" width="0.0335%" height="15" fill="rgb(245,159,19)" fg:x="57372" fg:w="36"/><text x="53.6849%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (105 samples, 0.10%)</title><rect x="53.4703%" y="1477" width="0.0978%" height="15" fill="rgb(236,63,32)" fg:x="57410" fg:w="105"/><text x="53.7203%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (105 samples, 0.10%)</title><rect x="53.4703%" y="1461" width="0.0978%" height="15" fill="rgb(235,32,52)" fg:x="57410" fg:w="105"/><text x="53.7203%" y="1471.50"></text></g><g><title>cfree (102 samples, 0.10%)</title><rect x="53.4731%" y="1445" width="0.0950%" height="15" fill="rgb(209,176,21)" fg:x="57413" fg:w="102"/><text x="53.7231%" y="1455.50"></text></g><g><title>[libc.so.6] (65 samples, 0.06%)</title><rect x="53.5076%" y="1429" width="0.0605%" height="15" fill="rgb(205,90,42)" fg:x="57450" fg:w="65"/><text x="53.7576%" y="1439.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (113 samples, 0.11%)</title><rect x="53.4684%" y="1573" width="0.1052%" height="15" fill="rgb(213,132,16)" fg:x="57408" fg:w="113"/><text x="53.7184%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (113 samples, 0.11%)</title><rect x="53.4684%" y="1557" width="0.1052%" height="15" fill="rgb(232,11,22)" fg:x="57408" fg:w="113"/><text x="53.7184%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (113 samples, 0.11%)</title><rect x="53.4684%" y="1541" width="0.1052%" height="15" fill="rgb(248,167,41)" fg:x="57408" fg:w="113"/><text x="53.7184%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (113 samples, 0.11%)</title><rect x="53.4684%" y="1525" width="0.1052%" height="15" fill="rgb(209,127,6)" fg:x="57408" fg:w="113"/><text x="53.7184%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (113 samples, 0.11%)</title><rect x="53.4684%" y="1509" width="0.1052%" height="15" fill="rgb(246,210,34)" fg:x="57408" fg:w="113"/><text x="53.7184%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.11%)</title><rect x="53.4684%" y="1493" width="0.1052%" height="15" fill="rgb(238,165,13)" fg:x="57408" fg:w="113"/><text x="53.7184%" y="1503.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (249 samples, 0.23%)</title><rect x="53.3427%" y="1733" width="0.2319%" height="15" fill="rgb(233,98,15)" fg:x="57273" fg:w="249"/><text x="53.5927%" y="1743.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (249 samples, 0.23%)</title><rect x="53.3427%" y="1717" width="0.2319%" height="15" fill="rgb(215,215,51)" fg:x="57273" fg:w="249"/><text x="53.5927%" y="1727.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (247 samples, 0.23%)</title><rect x="53.3446%" y="1701" width="0.2300%" height="15" fill="rgb(217,161,25)" fg:x="57275" fg:w="247"/><text x="53.5946%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (241 samples, 0.22%)</title><rect x="53.3502%" y="1685" width="0.2245%" height="15" fill="rgb(217,167,48)" fg:x="57281" fg:w="241"/><text x="53.6002%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (175 samples, 0.16%)</title><rect x="53.4116%" y="1669" width="0.1630%" height="15" fill="rgb(205,163,34)" fg:x="57347" fg:w="175"/><text x="53.6616%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 0.16%)</title><rect x="53.4116%" y="1653" width="0.1630%" height="15" fill="rgb(241,197,31)" fg:x="57347" fg:w="175"/><text x="53.6616%" y="1663.50"></text></g><g><title>core::mem::drop (169 samples, 0.16%)</title><rect x="53.4172%" y="1637" width="0.1574%" height="15" fill="rgb(225,123,11)" fg:x="57353" fg:w="169"/><text x="53.6672%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (169 samples, 0.16%)</title><rect x="53.4172%" y="1621" width="0.1574%" height="15" fill="rgb(217,4,20)" fg:x="57353" fg:w="169"/><text x="53.6672%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.16%)</title><rect x="53.4172%" y="1605" width="0.1574%" height="15" fill="rgb(215,55,9)" fg:x="57353" fg:w="169"/><text x="53.6672%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (114 samples, 0.11%)</title><rect x="53.4684%" y="1589" width="0.1062%" height="15" fill="rgb(218,165,5)" fg:x="57408" fg:w="114"/><text x="53.7184%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (17 samples, 0.02%)</title><rect x="53.5867%" y="1637" width="0.0158%" height="15" fill="rgb(222,175,15)" fg:x="57535" fg:w="17"/><text x="53.8367%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="53.5867%" y="1621" width="0.0158%" height="15" fill="rgb(223,85,34)" fg:x="57535" fg:w="17"/><text x="53.8367%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="53.5867%" y="1605" width="0.0158%" height="15" fill="rgb(234,228,29)" fg:x="57535" fg:w="17"/><text x="53.8367%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="53.5877%" y="1589" width="0.0149%" height="15" fill="rgb(239,7,28)" fg:x="57536" fg:w="16"/><text x="53.8377%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="53.5877%" y="1573" width="0.0149%" height="15" fill="rgb(252,222,53)" fg:x="57536" fg:w="16"/><text x="53.8377%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="53.5877%" y="1557" width="0.0149%" height="15" fill="rgb(232,146,44)" fg:x="57536" fg:w="16"/><text x="53.8377%" y="1567.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="53.5905%" y="1541" width="0.0121%" height="15" fill="rgb(243,223,53)" fg:x="57539" fg:w="13"/><text x="53.8405%" y="1551.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (21 samples, 0.02%)</title><rect x="53.5858%" y="1717" width="0.0196%" height="15" fill="rgb(219,128,25)" fg:x="57534" fg:w="21"/><text x="53.8358%" y="1727.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="53.5858%" y="1701" width="0.0196%" height="15" fill="rgb(223,56,32)" fg:x="57534" fg:w="21"/><text x="53.8358%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="53.5858%" y="1685" width="0.0196%" height="15" fill="rgb(237,41,3)" fg:x="57534" fg:w="21"/><text x="53.8358%" y="1695.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="53.5867%" y="1669" width="0.0186%" height="15" fill="rgb(235,138,9)" fg:x="57535" fg:w="20"/><text x="53.8367%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (20 samples, 0.02%)</title><rect x="53.5867%" y="1653" width="0.0186%" height="15" fill="rgb(214,131,10)" fg:x="57535" fg:w="20"/><text x="53.8367%" y="1663.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (596 samples, 0.56%)</title><rect x="53.0512%" y="1765" width="0.5551%" height="15" fill="rgb(229,89,7)" fg:x="56960" fg:w="596"/><text x="53.3012%" y="1775.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (591 samples, 0.55%)</title><rect x="53.0558%" y="1749" width="0.5504%" height="15" fill="rgb(240,24,42)" fg:x="56965" fg:w="591"/><text x="53.3058%" y="1759.50"></text></g><g><title>move_core_types::language_storage::StructTag::module_id (34 samples, 0.03%)</title><rect x="53.5746%" y="1733" width="0.0317%" height="15" fill="rgb(243,188,54)" fg:x="57522" fg:w="34"/><text x="53.8246%" y="1743.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="53.6147%" y="1765" width="0.0400%" height="15" fill="rgb(246,92,22)" fg:x="57565" fg:w="43"/><text x="53.8647%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="53.6407%" y="1749" width="0.0140%" height="15" fill="rgb(211,176,51)" fg:x="57593" fg:w="15"/><text x="53.8907%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="53.6417%" y="1733" width="0.0130%" height="15" fill="rgb(246,207,34)" fg:x="57594" fg:w="14"/><text x="53.8917%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="53.6417%" y="1717" width="0.0130%" height="15" fill="rgb(239,95,2)" fg:x="57594" fg:w="14"/><text x="53.8917%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="53.6417%" y="1701" width="0.0130%" height="15" fill="rgb(211,124,25)" fg:x="57594" fg:w="14"/><text x="53.8917%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (15 samples, 0.01%)</title><rect x="53.6678%" y="1685" width="0.0140%" height="15" fill="rgb(231,221,19)" fg:x="57622" fg:w="15"/><text x="53.9178%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (13 samples, 0.01%)</title><rect x="53.6696%" y="1669" width="0.0121%" height="15" fill="rgb(239,183,19)" fg:x="57624" fg:w="13"/><text x="53.9196%" y="1679.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.01%)</title><rect x="53.6715%" y="1653" width="0.0102%" height="15" fill="rgb(221,130,29)" fg:x="57626" fg:w="11"/><text x="53.9215%" y="1663.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (25 samples, 0.02%)</title><rect x="53.6640%" y="1701" width="0.0233%" height="15" fill="rgb(206,130,36)" fg:x="57618" fg:w="25"/><text x="53.9140%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (36 samples, 0.03%)</title><rect x="53.6547%" y="1765" width="0.0335%" height="15" fill="rgb(215,70,19)" fg:x="57608" fg:w="36"/><text x="53.9047%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (30 samples, 0.03%)</title><rect x="53.6603%" y="1749" width="0.0279%" height="15" fill="rgb(244,16,43)" fg:x="57614" fg:w="30"/><text x="53.9103%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (26 samples, 0.02%)</title><rect x="53.6640%" y="1733" width="0.0242%" height="15" fill="rgb(222,115,32)" fg:x="57618" fg:w="26"/><text x="53.9140%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.02%)</title><rect x="53.6640%" y="1717" width="0.0242%" height="15" fill="rgb(247,48,25)" fg:x="57618" fg:w="26"/><text x="53.9140%" y="1727.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="53.7143%" y="1733" width="0.0112%" height="15" fill="rgb(226,180,51)" fg:x="57672" fg:w="12"/><text x="53.9643%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (58 samples, 0.05%)</title><rect x="53.6882%" y="1765" width="0.0540%" height="15" fill="rgb(217,142,42)" fg:x="57644" fg:w="58"/><text x="53.9382%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (49 samples, 0.05%)</title><rect x="53.6966%" y="1749" width="0.0456%" height="15" fill="rgb(220,178,3)" fg:x="57653" fg:w="49"/><text x="53.9466%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (18 samples, 0.02%)</title><rect x="53.7255%" y="1733" width="0.0168%" height="15" fill="rgb(217,221,4)" fg:x="57684" fg:w="18"/><text x="53.9755%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (18 samples, 0.02%)</title><rect x="53.7255%" y="1717" width="0.0168%" height="15" fill="rgb(237,63,43)" fg:x="57684" fg:w="18"/><text x="53.9755%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (18 samples, 0.02%)</title><rect x="53.7255%" y="1701" width="0.0168%" height="15" fill="rgb(220,57,8)" fg:x="57684" fg:w="18"/><text x="53.9755%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (18 samples, 0.02%)</title><rect x="53.7255%" y="1685" width="0.0168%" height="15" fill="rgb(254,186,27)" fg:x="57684" fg:w="18"/><text x="53.9755%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="53.7255%" y="1669" width="0.0168%" height="15" fill="rgb(251,57,28)" fg:x="57684" fg:w="18"/><text x="53.9755%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="53.7255%" y="1653" width="0.0168%" height="15" fill="rgb(215,228,0)" fg:x="57684" fg:w="18"/><text x="53.9755%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="53.7255%" y="1637" width="0.0168%" height="15" fill="rgb(237,218,39)" fg:x="57684" fg:w="18"/><text x="53.9755%" y="1647.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="53.7320%" y="1621" width="0.0102%" height="15" fill="rgb(207,2,54)" fg:x="57691" fg:w="11"/><text x="53.9820%" y="1631.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="53.7423%" y="1765" width="0.0112%" height="15" fill="rgb(232,76,50)" fg:x="57702" fg:w="12"/><text x="53.9923%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="53.7572%" y="1717" width="0.0345%" height="15" fill="rgb(211,85,31)" fg:x="57718" fg:w="37"/><text x="54.0072%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (33 samples, 0.03%)</title><rect x="53.7609%" y="1701" width="0.0307%" height="15" fill="rgb(223,210,27)" fg:x="57722" fg:w="33"/><text x="54.0109%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (33 samples, 0.03%)</title><rect x="53.7609%" y="1685" width="0.0307%" height="15" fill="rgb(254,36,8)" fg:x="57722" fg:w="33"/><text x="54.0109%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (25 samples, 0.02%)</title><rect x="53.7683%" y="1669" width="0.0233%" height="15" fill="rgb(213,4,25)" fg:x="57730" fg:w="25"/><text x="54.0183%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (17 samples, 0.02%)</title><rect x="53.7758%" y="1653" width="0.0158%" height="15" fill="rgb(224,2,39)" fg:x="57738" fg:w="17"/><text x="54.0258%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (43 samples, 0.04%)</title><rect x="53.7572%" y="1733" width="0.0400%" height="15" fill="rgb(208,8,39)" fg:x="57718" fg:w="43"/><text x="54.0072%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (63 samples, 0.06%)</title><rect x="53.7534%" y="1765" width="0.0587%" height="15" fill="rgb(216,226,3)" fg:x="57714" fg:w="63"/><text x="54.0034%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (59 samples, 0.05%)</title><rect x="53.7572%" y="1749" width="0.0550%" height="15" fill="rgb(249,139,31)" fg:x="57718" fg:w="59"/><text x="54.0072%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (16 samples, 0.01%)</title><rect x="53.7972%" y="1733" width="0.0149%" height="15" fill="rgb(242,170,35)" fg:x="57761" fg:w="16"/><text x="54.0472%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (16 samples, 0.01%)</title><rect x="53.7972%" y="1717" width="0.0149%" height="15" fill="rgb(238,14,9)" fg:x="57761" fg:w="16"/><text x="54.0472%" y="1727.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.01%)</title><rect x="53.7972%" y="1701" width="0.0149%" height="15" fill="rgb(251,81,46)" fg:x="57761" fg:w="16"/><text x="54.0472%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="53.7972%" y="1685" width="0.0149%" height="15" fill="rgb(230,23,4)" fg:x="57761" fg:w="16"/><text x="54.0472%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="53.7991%" y="1669" width="0.0130%" height="15" fill="rgb(211,85,25)" fg:x="57763" fg:w="14"/><text x="54.0491%" y="1679.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="53.8000%" y="1653" width="0.0121%" height="15" fill="rgb(252,23,31)" fg:x="57764" fg:w="13"/><text x="54.0500%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="53.8121%" y="1765" width="0.0130%" height="15" fill="rgb(234,163,38)" fg:x="57777" fg:w="14"/><text x="54.0621%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="53.8121%" y="1749" width="0.0130%" height="15" fill="rgb(210,190,50)" fg:x="57777" fg:w="14"/><text x="54.0621%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="53.8121%" y="1733" width="0.0130%" height="15" fill="rgb(228,158,3)" fg:x="57777" fg:w="14"/><text x="54.0621%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="53.8131%" y="1717" width="0.0121%" height="15" fill="rgb(216,130,0)" fg:x="57778" fg:w="13"/><text x="54.0631%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="53.8131%" y="1701" width="0.0121%" height="15" fill="rgb(224,184,10)" fg:x="57778" fg:w="13"/><text x="54.0631%" y="1711.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="53.8149%" y="1685" width="0.0102%" height="15" fill="rgb(214,202,18)" fg:x="57780" fg:w="11"/><text x="54.0649%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (12 samples, 0.01%)</title><rect x="53.8252%" y="1765" width="0.0112%" height="15" fill="rgb(213,229,54)" fg:x="57791" fg:w="12"/><text x="54.0752%" y="1775.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource::{{closure}} (25 samples, 0.02%)</title><rect x="53.8466%" y="1749" width="0.0233%" height="15" fill="rgb(246,120,0)" fg:x="57814" fg:w="25"/><text x="54.0966%" y="1759.50"></text></g><g><title>move_vm_runtime::data_cache::AccountDataCache::new (21 samples, 0.02%)</title><rect x="53.8503%" y="1733" width="0.0196%" height="15" fill="rgb(237,6,15)" fg:x="57818" fg:w="21"/><text x="54.1003%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (42 samples, 0.04%)</title><rect x="53.8866%" y="1749" width="0.0391%" height="15" fill="rgb(252,156,15)" fg:x="57857" fg:w="42"/><text x="54.1366%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (29 samples, 0.03%)</title><rect x="53.8987%" y="1733" width="0.0270%" height="15" fill="rgb(249,78,18)" fg:x="57870" fg:w="29"/><text x="54.1487%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (13 samples, 0.01%)</title><rect x="53.9136%" y="1717" width="0.0121%" height="15" fill="rgb(230,223,44)" fg:x="57886" fg:w="13"/><text x="54.1636%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (13 samples, 0.01%)</title><rect x="53.9136%" y="1701" width="0.0121%" height="15" fill="rgb(230,222,32)" fg:x="57886" fg:w="13"/><text x="54.1636%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (13 samples, 0.01%)</title><rect x="53.9136%" y="1685" width="0.0121%" height="15" fill="rgb(247,54,6)" fg:x="57886" fg:w="13"/><text x="54.1636%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13 samples, 0.01%)</title><rect x="53.9136%" y="1669" width="0.0121%" height="15" fill="rgb(247,115,45)" fg:x="57886" fg:w="13"/><text x="54.1636%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="53.9136%" y="1653" width="0.0121%" height="15" fill="rgb(213,203,37)" fg:x="57886" fg:w="13"/><text x="54.1636%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="53.9136%" y="1637" width="0.0121%" height="15" fill="rgb(248,188,18)" fg:x="57886" fg:w="13"/><text x="54.1636%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="53.9136%" y="1621" width="0.0121%" height="15" fill="rgb(206,80,8)" fg:x="57886" fg:w="13"/><text x="54.1636%" y="1631.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="53.9146%" y="1605" width="0.0112%" height="15" fill="rgb(245,217,31)" fg:x="57887" fg:w="12"/><text x="54.1646%" y="1615.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (98 samples, 0.09%)</title><rect x="53.8363%" y="1765" width="0.0913%" height="15" fill="rgb(220,193,15)" fg:x="57803" fg:w="98"/><text x="54.0863%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (14 samples, 0.01%)</title><rect x="53.9276%" y="1765" width="0.0130%" height="15" fill="rgb(226,7,19)" fg:x="57901" fg:w="14"/><text x="54.1776%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (12 samples, 0.01%)</title><rect x="53.9295%" y="1749" width="0.0112%" height="15" fill="rgb(222,145,31)" fg:x="57903" fg:w="12"/><text x="54.1795%" y="1759.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (18 samples, 0.02%)</title><rect x="53.9909%" y="1605" width="0.0168%" height="15" fill="rgb(241,193,36)" fg:x="57969" fg:w="18"/><text x="54.2409%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="53.9909%" y="1589" width="0.0168%" height="15" fill="rgb(225,123,33)" fg:x="57969" fg:w="18"/><text x="54.2409%" y="1599.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="53.9798%" y="1637" width="0.0382%" height="15" fill="rgb(246,136,38)" fg:x="57957" fg:w="41"/><text x="54.2298%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="53.9909%" y="1621" width="0.0270%" height="15" fill="rgb(243,56,24)" fg:x="57969" fg:w="29"/><text x="54.2409%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="54.0077%" y="1605" width="0.0102%" height="15" fill="rgb(215,147,2)" fg:x="57987" fg:w="11"/><text x="54.2577%" y="1615.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.01%)</title><rect x="54.0077%" y="1589" width="0.0102%" height="15" fill="rgb(209,155,27)" fg:x="57987" fg:w="11"/><text x="54.2577%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="54.0077%" y="1573" width="0.0102%" height="15" fill="rgb(222,177,11)" fg:x="57987" fg:w="11"/><text x="54.2577%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="54.0077%" y="1557" width="0.0102%" height="15" fill="rgb(212,227,15)" fg:x="57987" fg:w="11"/><text x="54.2577%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="54.0077%" y="1541" width="0.0102%" height="15" fill="rgb(214,138,20)" fg:x="57987" fg:w="11"/><text x="54.2577%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="53.9779%" y="1701" width="0.0484%" height="15" fill="rgb(221,170,31)" fg:x="57955" fg:w="52"/><text x="54.2279%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.05%)</title><rect x="53.9779%" y="1685" width="0.0484%" height="15" fill="rgb(253,207,5)" fg:x="57955" fg:w="52"/><text x="54.2279%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.05%)</title><rect x="53.9779%" y="1669" width="0.0484%" height="15" fill="rgb(212,64,37)" fg:x="57955" fg:w="52"/><text x="54.2279%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.05%)</title><rect x="53.9779%" y="1653" width="0.0484%" height="15" fill="rgb(208,113,51)" fg:x="57955" fg:w="52"/><text x="54.2279%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (86 samples, 0.08%)</title><rect x="53.9770%" y="1717" width="0.0801%" height="15" fill="rgb(237,15,5)" fg:x="57954" fg:w="86"/><text x="54.2270%" y="1727.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="54.0273%" y="1701" width="0.0298%" height="15" fill="rgb(238,33,18)" fg:x="58008" fg:w="32"/><text x="54.2773%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="54.0273%" y="1685" width="0.0298%" height="15" fill="rgb(253,206,50)" fg:x="58008" fg:w="32"/><text x="54.2773%" y="1695.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.03%)</title><rect x="54.0301%" y="1669" width="0.0270%" height="15" fill="rgb(242,158,43)" fg:x="58011" fg:w="29"/><text x="54.2801%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (29 samples, 0.03%)</title><rect x="54.0301%" y="1653" width="0.0270%" height="15" fill="rgb(213,125,27)" fg:x="58011" fg:w="29"/><text x="54.2801%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="54.0375%" y="1637" width="0.0196%" height="15" fill="rgb(233,161,31)" fg:x="58019" fg:w="21"/><text x="54.2875%" y="1647.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="54.0375%" y="1621" width="0.0196%" height="15" fill="rgb(218,135,6)" fg:x="58019" fg:w="21"/><text x="54.2875%" y="1631.50"></text></g><g><title>core::hash::Hash::hash_slice (12 samples, 0.01%)</title><rect x="54.0804%" y="1605" width="0.0112%" height="15" fill="rgb(222,73,53)" fg:x="58065" fg:w="12"/><text x="54.3304%" y="1615.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.03%)</title><rect x="54.0673%" y="1669" width="0.0251%" height="15" fill="rgb(229,66,53)" fg:x="58051" fg:w="27"/><text x="54.3173%" y="1679.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.03%)</title><rect x="54.0673%" y="1653" width="0.0251%" height="15" fill="rgb(208,128,19)" fg:x="58051" fg:w="27"/><text x="54.3173%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.02%)</title><rect x="54.0757%" y="1637" width="0.0168%" height="15" fill="rgb(235,70,27)" fg:x="58060" fg:w="18"/><text x="54.3257%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.01%)</title><rect x="54.0804%" y="1621" width="0.0121%" height="15" fill="rgb(241,130,30)" fg:x="58065" fg:w="13"/><text x="54.3304%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.01%)</title><rect x="54.1130%" y="1621" width="0.0112%" height="15" fill="rgb(222,57,48)" fg:x="58100" fg:w="12"/><text x="54.3630%" y="1631.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (19 samples, 0.02%)</title><rect x="54.1251%" y="1621" width="0.0177%" height="15" fill="rgb(225,204,29)" fg:x="58113" fg:w="19"/><text x="54.3751%" y="1631.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.02%)</title><rect x="54.1251%" y="1605" width="0.0177%" height="15" fill="rgb(240,196,35)" fg:x="58113" fg:w="19"/><text x="54.3751%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="54.1251%" y="1589" width="0.0177%" height="15" fill="rgb(215,150,16)" fg:x="58113" fg:w="19"/><text x="54.3751%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (231 samples, 0.22%)</title><rect x="53.9407%" y="1765" width="0.2151%" height="15" fill="rgb(209,170,13)" fg:x="57915" fg:w="231"/><text x="54.1907%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (225 samples, 0.21%)</title><rect x="53.9462%" y="1749" width="0.2096%" height="15" fill="rgb(235,75,31)" fg:x="57921" fg:w="225"/><text x="54.1962%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (196 samples, 0.18%)</title><rect x="53.9733%" y="1733" width="0.1825%" height="15" fill="rgb(252,1,47)" fg:x="57950" fg:w="196"/><text x="54.2233%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (99 samples, 0.09%)</title><rect x="54.0636%" y="1717" width="0.0922%" height="15" fill="rgb(241,2,36)" fg:x="58047" fg:w="99"/><text x="54.3136%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (99 samples, 0.09%)</title><rect x="54.0636%" y="1701" width="0.0922%" height="15" fill="rgb(236,191,4)" fg:x="58047" fg:w="99"/><text x="54.3136%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (99 samples, 0.09%)</title><rect x="54.0636%" y="1685" width="0.0922%" height="15" fill="rgb(212,65,35)" fg:x="58047" fg:w="99"/><text x="54.3136%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (68 samples, 0.06%)</title><rect x="54.0925%" y="1669" width="0.0633%" height="15" fill="rgb(209,49,33)" fg:x="58078" fg:w="68"/><text x="54.3425%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (68 samples, 0.06%)</title><rect x="54.0925%" y="1653" width="0.0633%" height="15" fill="rgb(208,36,46)" fg:x="58078" fg:w="68"/><text x="54.3425%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (68 samples, 0.06%)</title><rect x="54.0925%" y="1637" width="0.0633%" height="15" fill="rgb(210,125,2)" fg:x="58078" fg:w="68"/><text x="54.3425%" y="1647.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.01%)</title><rect x="54.1428%" y="1621" width="0.0130%" height="15" fill="rgb(225,62,6)" fg:x="58132" fg:w="14"/><text x="54.3928%" y="1631.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.01%)</title><rect x="54.1428%" y="1605" width="0.0130%" height="15" fill="rgb(210,54,27)" fg:x="58132" fg:w="14"/><text x="54.3928%" y="1615.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (15 samples, 0.01%)</title><rect x="54.1558%" y="1765" width="0.0140%" height="15" fill="rgb(249,189,52)" fg:x="58146" fg:w="15"/><text x="54.4058%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (11 samples, 0.01%)</title><rect x="54.2555%" y="1637" width="0.0102%" height="15" fill="rgb(225,134,40)" fg:x="58253" fg:w="11"/><text x="54.5055%" y="1647.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="54.2555%" y="1621" width="0.0102%" height="15" fill="rgb(206,13,37)" fg:x="58253" fg:w="11"/><text x="54.5055%" y="1631.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (12 samples, 0.01%)</title><rect x="54.2657%" y="1637" width="0.0112%" height="15" fill="rgb(232,114,28)" fg:x="58264" fg:w="12"/><text x="54.5157%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (65 samples, 0.06%)</title><rect x="54.2191%" y="1653" width="0.0605%" height="15" fill="rgb(253,215,8)" fg:x="58214" fg:w="65"/><text x="54.4691%" y="1663.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (83 samples, 0.08%)</title><rect x="54.2182%" y="1669" width="0.0773%" height="15" fill="rgb(254,64,19)" fg:x="58213" fg:w="83"/><text x="54.4682%" y="1679.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (17 samples, 0.02%)</title><rect x="54.2797%" y="1653" width="0.0158%" height="15" fill="rgb(242,18,46)" fg:x="58279" fg:w="17"/><text x="54.5297%" y="1663.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.01%)</title><rect x="54.2974%" y="1669" width="0.0149%" height="15" fill="rgb(239,192,30)" fg:x="58298" fg:w="16"/><text x="54.5474%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.02%)</title><rect x="54.3132%" y="1621" width="0.0196%" height="15" fill="rgb(232,73,14)" fg:x="58315" fg:w="21"/><text x="54.5632%" y="1631.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="54.3151%" y="1605" width="0.0177%" height="15" fill="rgb(225,51,9)" fg:x="58317" fg:w="19"/><text x="54.5651%" y="1615.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="54.3188%" y="1589" width="0.0140%" height="15" fill="rgb(242,217,54)" fg:x="58321" fg:w="15"/><text x="54.5688%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 0.02%)</title><rect x="54.3123%" y="1653" width="0.0214%" height="15" fill="rgb(216,93,3)" fg:x="58314" fg:w="23"/><text x="54.5623%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.02%)</title><rect x="54.3123%" y="1637" width="0.0214%" height="15" fill="rgb(230,119,33)" fg:x="58314" fg:w="23"/><text x="54.5623%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (155 samples, 0.14%)</title><rect x="54.1986%" y="1685" width="0.1444%" height="15" fill="rgb(238,170,27)" fg:x="58192" fg:w="155"/><text x="54.4486%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.03%)</title><rect x="54.3123%" y="1669" width="0.0307%" height="15" fill="rgb(229,8,2)" fg:x="58314" fg:w="33"/><text x="54.5623%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (159 samples, 0.15%)</title><rect x="54.1977%" y="1701" width="0.1481%" height="15" fill="rgb(205,214,42)" fg:x="58191" fg:w="159"/><text x="54.4477%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (182 samples, 0.17%)</title><rect x="54.1940%" y="1717" width="0.1695%" height="15" fill="rgb(245,113,1)" fg:x="58187" fg:w="182"/><text x="54.4440%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (14 samples, 0.01%)</title><rect x="54.3505%" y="1701" width="0.0130%" height="15" fill="rgb(252,50,2)" fg:x="58355" fg:w="14"/><text x="54.6005%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.01%)</title><rect x="54.3505%" y="1685" width="0.0130%" height="15" fill="rgb(225,122,24)" fg:x="58355" fg:w="14"/><text x="54.6005%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="54.3505%" y="1669" width="0.0130%" height="15" fill="rgb(234,129,31)" fg:x="58355" fg:w="14"/><text x="54.6005%" y="1679.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="54.3505%" y="1653" width="0.0130%" height="15" fill="rgb(219,177,4)" fg:x="58355" fg:w="14"/><text x="54.6005%" y="1663.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (13 samples, 0.01%)</title><rect x="54.3514%" y="1637" width="0.0121%" height="15" fill="rgb(225,142,27)" fg:x="58356" fg:w="13"/><text x="54.6014%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="54.3514%" y="1621" width="0.0121%" height="15" fill="rgb(205,107,51)" fg:x="58356" fg:w="13"/><text x="54.6014%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="54.3514%" y="1605" width="0.0121%" height="15" fill="rgb(236,223,15)" fg:x="58356" fg:w="13"/><text x="54.6014%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.01%)</title><rect x="54.3514%" y="1589" width="0.0121%" height="15" fill="rgb(235,133,11)" fg:x="58356" fg:w="13"/><text x="54.6014%" y="1599.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (13 samples, 0.01%)</title><rect x="54.3514%" y="1573" width="0.0121%" height="15" fill="rgb(247,172,13)" fg:x="58356" fg:w="13"/><text x="54.6014%" y="1583.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="54.3533%" y="1557" width="0.0102%" height="15" fill="rgb(233,191,41)" fg:x="58358" fg:w="11"/><text x="54.6033%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (213 samples, 0.20%)</title><rect x="54.1875%" y="1733" width="0.1984%" height="15" fill="rgb(250,65,16)" fg:x="58180" fg:w="213"/><text x="54.4375%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (24 samples, 0.02%)</title><rect x="54.3635%" y="1717" width="0.0224%" height="15" fill="rgb(206,10,27)" fg:x="58369" fg:w="24"/><text x="54.6135%" y="1727.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="54.3635%" y="1701" width="0.0224%" height="15" fill="rgb(212,96,22)" fg:x="58369" fg:w="24"/><text x="54.6135%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="54.3682%" y="1685" width="0.0177%" height="15" fill="rgb(206,50,0)" fg:x="58374" fg:w="19"/><text x="54.6182%" y="1695.50"></text></g><g><title>alloc::alloc::exchange_malloc (19 samples, 0.02%)</title><rect x="54.3682%" y="1669" width="0.0177%" height="15" fill="rgb(249,105,52)" fg:x="58374" fg:w="19"/><text x="54.6182%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="54.3682%" y="1653" width="0.0177%" height="15" fill="rgb(216,93,51)" fg:x="58374" fg:w="19"/><text x="54.6182%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="54.3682%" y="1637" width="0.0177%" height="15" fill="rgb(217,172,13)" fg:x="58374" fg:w="19"/><text x="54.6182%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="54.3682%" y="1621" width="0.0177%" height="15" fill="rgb(235,199,38)" fg:x="58374" fg:w="19"/><text x="54.6182%" y="1631.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="54.3682%" y="1605" width="0.0177%" height="15" fill="rgb(221,97,33)" fg:x="58374" fg:w="19"/><text x="54.6182%" y="1615.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="54.3709%" y="1589" width="0.0149%" height="15" fill="rgb(205,156,50)" fg:x="58377" fg:w="16"/><text x="54.6209%" y="1599.50"></text></g><g><title>bcs::de::from_bytes_seed (229 samples, 0.21%)</title><rect x="54.1744%" y="1749" width="0.2133%" height="15" fill="rgb(215,142,19)" fg:x="58166" fg:w="229"/><text x="54.4244%" y="1759.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,472 samples, 1.37%)</title><rect x="53.0195%" y="1781" width="1.3710%" height="15" fill="rgb(232,170,7)" fg:x="56926" fg:w="1472"/><text x="53.2695%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (237 samples, 0.22%)</title><rect x="54.1698%" y="1765" width="0.2207%" height="15" fill="rgb(223,50,17)" fg:x="58161" fg:w="237"/><text x="54.4198%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,508 samples, 1.40%)</title><rect x="53.0018%" y="1797" width="1.4045%" height="15" fill="rgb(230,103,46)" fg:x="56907" fg:w="1508"/><text x="53.2518%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::view (17 samples, 0.02%)</title><rect x="54.3905%" y="1781" width="0.0158%" height="15" fill="rgb(254,30,34)" fg:x="58398" fg:w="17"/><text x="54.6405%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (19 samples, 0.02%)</title><rect x="54.4063%" y="1797" width="0.0177%" height="15" fill="rgb(235,198,1)" fg:x="58415" fg:w="19"/><text x="54.6563%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::exists (17 samples, 0.02%)</title><rect x="54.4240%" y="1797" width="0.0158%" height="15" fill="rgb(217,105,47)" fg:x="58434" fg:w="17"/><text x="54.6740%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (1,566 samples, 1.46%)</title><rect x="52.9953%" y="1813" width="1.4585%" height="15" fill="rgb(231,18,12)" fg:x="56900" fg:w="1566"/><text x="53.2453%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::bool (15 samples, 0.01%)</title><rect x="54.4399%" y="1797" width="0.0140%" height="15" fill="rgb(218,196,1)" fg:x="58451" fg:w="15"/><text x="54.6899%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (153 samples, 0.14%)</title><rect x="54.4538%" y="1813" width="0.1425%" height="15" fill="rgb(210,32,3)" fg:x="58466" fg:w="153"/><text x="54.7038%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (41 samples, 0.04%)</title><rect x="54.5963%" y="1813" width="0.0382%" height="15" fill="rgb(227,178,30)" fg:x="58619" fg:w="41"/><text x="54.8463%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (12 samples, 0.01%)</title><rect x="54.6234%" y="1797" width="0.0112%" height="15" fill="rgb(231,140,27)" fg:x="58648" fg:w="12"/><text x="54.8734%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (79 samples, 0.07%)</title><rect x="54.6681%" y="1797" width="0.0736%" height="15" fill="rgb(206,66,35)" fg:x="58696" fg:w="79"/><text x="54.9181%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (77 samples, 0.07%)</title><rect x="54.7416%" y="1797" width="0.0717%" height="15" fill="rgb(212,34,2)" fg:x="58775" fg:w="77"/><text x="54.9916%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (23 samples, 0.02%)</title><rect x="54.7919%" y="1781" width="0.0214%" height="15" fill="rgb(207,201,33)" fg:x="58829" fg:w="23"/><text x="55.0419%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (15 samples, 0.01%)</title><rect x="54.8469%" y="1781" width="0.0140%" height="15" fill="rgb(221,135,32)" fg:x="58888" fg:w="15"/><text x="55.0969%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (14 samples, 0.01%)</title><rect x="54.8609%" y="1781" width="0.0130%" height="15" fill="rgb(206,77,31)" fg:x="58903" fg:w="14"/><text x="55.1109%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (16 samples, 0.01%)</title><rect x="54.8739%" y="1781" width="0.0149%" height="15" fill="rgb(252,198,50)" fg:x="58917" fg:w="16"/><text x="55.1239%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (13 samples, 0.01%)</title><rect x="54.8888%" y="1781" width="0.0121%" height="15" fill="rgb(206,79,27)" fg:x="58933" fg:w="13"/><text x="55.1388%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (28 samples, 0.03%)</title><rect x="54.9009%" y="1781" width="0.0261%" height="15" fill="rgb(228,108,9)" fg:x="58946" fg:w="28"/><text x="55.1509%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (12 samples, 0.01%)</title><rect x="54.9158%" y="1765" width="0.0112%" height="15" fill="rgb(213,9,39)" fg:x="58962" fg:w="12"/><text x="55.1658%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::VectorRef&gt;&gt;::cast (11 samples, 0.01%)</title><rect x="54.9270%" y="1781" width="0.0102%" height="15" fill="rgb(252,51,13)" fg:x="58974" fg:w="11"/><text x="55.1770%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;u64&gt;&gt;::cast (16 samples, 0.01%)</title><rect x="54.9372%" y="1781" width="0.0149%" height="15" fill="rgb(218,202,39)" fg:x="58985" fg:w="16"/><text x="55.1872%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (352 samples, 0.33%)</title><rect x="54.6345%" y="1813" width="0.3278%" height="15" fill="rgb(214,122,21)" fg:x="58660" fg:w="352"/><text x="54.8845%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (160 samples, 0.15%)</title><rect x="54.8134%" y="1797" width="0.1490%" height="15" fill="rgb(217,205,48)" fg:x="58852" fg:w="160"/><text x="55.0634%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;u8&gt;&gt;::cast (11 samples, 0.01%)</title><rect x="54.9521%" y="1781" width="0.0102%" height="15" fill="rgb(230,216,13)" fg:x="59001" fg:w="11"/><text x="55.2021%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="55.1263%" y="1781" width="0.0112%" height="15" fill="rgb(249,118,4)" fg:x="59188" fg:w="12"/><text x="55.3763%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (202 samples, 0.19%)</title><rect x="54.9624%" y="1813" width="0.1881%" height="15" fill="rgb(212,207,40)" fg:x="59012" fg:w="202"/><text x="55.2124%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.03%)</title><rect x="55.1170%" y="1797" width="0.0335%" height="15" fill="rgb(217,156,26)" fg:x="59178" fg:w="36"/><text x="55.3670%" y="1807.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="55.1384%" y="1781" width="0.0121%" height="15" fill="rgb(226,86,34)" fg:x="59201" fg:w="13"/><text x="55.3884%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Function::code (14 samples, 0.01%)</title><rect x="55.1505%" y="1813" width="0.0130%" height="15" fill="rgb(217,111,30)" fg:x="59214" fg:w="14"/><text x="55.4005%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (25 samples, 0.02%)</title><rect x="55.1850%" y="1781" width="0.0233%" height="15" fill="rgb(228,64,18)" fg:x="59251" fg:w="25"/><text x="55.4350%" y="1791.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (25 samples, 0.02%)</title><rect x="55.1850%" y="1765" width="0.0233%" height="15" fill="rgb(254,217,48)" fg:x="59251" fg:w="25"/><text x="55.4350%" y="1775.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (25 samples, 0.02%)</title><rect x="55.1850%" y="1749" width="0.0233%" height="15" fill="rgb(226,156,48)" fg:x="59251" fg:w="25"/><text x="55.4350%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (54 samples, 0.05%)</title><rect x="55.1635%" y="1813" width="0.0503%" height="15" fill="rgb(236,168,20)" fg:x="59228" fg:w="54"/><text x="55.4135%" y="1823.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (32 samples, 0.03%)</title><rect x="55.1840%" y="1797" width="0.0298%" height="15" fill="rgb(239,210,33)" fg:x="59250" fg:w="32"/><text x="55.4340%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_offset (14 samples, 0.01%)</title><rect x="55.2138%" y="1813" width="0.0130%" height="15" fill="rgb(242,85,17)" fg:x="59282" fg:w="14"/><text x="55.4638%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (23 samples, 0.02%)</title><rect x="55.2269%" y="1813" width="0.0214%" height="15" fill="rgb(221,196,15)" fg:x="59296" fg:w="23"/><text x="55.4769%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_type (26 samples, 0.02%)</title><rect x="55.2483%" y="1813" width="0.0242%" height="15" fill="rgb(249,76,21)" fg:x="59319" fg:w="26"/><text x="55.4983%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (24 samples, 0.02%)</title><rect x="55.3331%" y="1653" width="0.0224%" height="15" fill="rgb(243,67,29)" fg:x="59410" fg:w="24"/><text x="55.5831%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="55.3331%" y="1637" width="0.0224%" height="15" fill="rgb(240,159,2)" fg:x="59410" fg:w="24"/><text x="55.5831%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="55.3331%" y="1621" width="0.0224%" height="15" fill="rgb(244,64,3)" fg:x="59410" fg:w="24"/><text x="55.5831%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.02%)</title><rect x="55.3331%" y="1605" width="0.0224%" height="15" fill="rgb(220,86,40)" fg:x="59410" fg:w="24"/><text x="55.5831%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.02%)</title><rect x="55.3368%" y="1589" width="0.0186%" height="15" fill="rgb(222,194,51)" fg:x="59414" fg:w="20"/><text x="55.5868%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type::{{closure}} (19 samples, 0.02%)</title><rect x="55.3377%" y="1573" width="0.0177%" height="15" fill="rgb(207,154,19)" fg:x="59415" fg:w="19"/><text x="55.5877%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (19 samples, 0.02%)</title><rect x="55.3377%" y="1557" width="0.0177%" height="15" fill="rgb(206,178,36)" fg:x="59415" fg:w="19"/><text x="55.5877%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (19 samples, 0.02%)</title><rect x="55.3377%" y="1541" width="0.0177%" height="15" fill="rgb(218,8,24)" fg:x="59415" fg:w="19"/><text x="55.5877%" y="1551.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (16 samples, 0.01%)</title><rect x="55.3405%" y="1525" width="0.0149%" height="15" fill="rgb(226,83,41)" fg:x="59418" fg:w="16"/><text x="55.5905%" y="1535.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (14 samples, 0.01%)</title><rect x="55.3424%" y="1509" width="0.0130%" height="15" fill="rgb(224,23,22)" fg:x="59420" fg:w="14"/><text x="55.5924%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="55.3331%" y="1669" width="0.0233%" height="15" fill="rgb(218,198,45)" fg:x="59410" fg:w="25"/><text x="55.5831%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 0.07%)</title><rect x="55.2977%" y="1797" width="0.0680%" height="15" fill="rgb(249,147,41)" fg:x="59372" fg:w="73"/><text x="55.5477%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (73 samples, 0.07%)</title><rect x="55.2977%" y="1781" width="0.0680%" height="15" fill="rgb(244,224,13)" fg:x="59372" fg:w="73"/><text x="55.5477%" y="1791.50"></text></g><g><title>core::iter::adapters::try_process (72 samples, 0.07%)</title><rect x="55.2986%" y="1765" width="0.0671%" height="15" fill="rgb(225,97,27)" fg:x="59373" fg:w="72"/><text x="55.5486%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (65 samples, 0.06%)</title><rect x="55.3051%" y="1749" width="0.0605%" height="15" fill="rgb(254,64,0)" fg:x="59380" fg:w="65"/><text x="55.5551%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.06%)</title><rect x="55.3051%" y="1733" width="0.0605%" height="15" fill="rgb(208,130,43)" fg:x="59380" fg:w="65"/><text x="55.5551%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.06%)</title><rect x="55.3051%" y="1717" width="0.0605%" height="15" fill="rgb(247,91,25)" fg:x="59380" fg:w="65"/><text x="55.5551%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (60 samples, 0.06%)</title><rect x="55.3098%" y="1701" width="0.0559%" height="15" fill="rgb(215,218,42)" fg:x="59385" fg:w="60"/><text x="55.5598%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (45 samples, 0.04%)</title><rect x="55.3237%" y="1685" width="0.0419%" height="15" fill="rgb(233,9,24)" fg:x="59400" fg:w="45"/><text x="55.5737%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (31 samples, 0.03%)</title><rect x="55.3685%" y="1797" width="0.0289%" height="15" fill="rgb(252,105,38)" fg:x="59448" fg:w="31"/><text x="55.6185%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (138 samples, 0.13%)</title><rect x="55.2725%" y="1813" width="0.1285%" height="15" fill="rgb(225,40,49)" fg:x="59345" fg:w="138"/><text x="55.5225%" y="1823.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="55.4169%" y="1797" width="0.0102%" height="15" fill="rgb(232,196,19)" fg:x="59500" fg:w="11"/><text x="55.6669%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="55.4281%" y="1749" width="0.0130%" height="15" fill="rgb(207,35,15)" fg:x="59512" fg:w="14"/><text x="55.6781%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="55.4281%" y="1733" width="0.0130%" height="15" fill="rgb(238,68,36)" fg:x="59512" fg:w="14"/><text x="55.6781%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="55.4281%" y="1717" width="0.0130%" height="15" fill="rgb(205,158,20)" fg:x="59512" fg:w="14"/><text x="55.6781%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (45 samples, 0.04%)</title><rect x="55.4011%" y="1813" width="0.0419%" height="15" fill="rgb(232,32,22)" fg:x="59483" fg:w="45"/><text x="55.6511%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Resolver::single_type_at (17 samples, 0.02%)</title><rect x="55.4271%" y="1797" width="0.0158%" height="15" fill="rgb(210,169,6)" fg:x="59511" fg:w="17"/><text x="55.6771%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Module::single_type_at (16 samples, 0.01%)</title><rect x="55.4281%" y="1781" width="0.0149%" height="15" fill="rgb(229,28,12)" fg:x="59512" fg:w="16"/><text x="55.6781%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (16 samples, 0.01%)</title><rect x="55.4281%" y="1765" width="0.0149%" height="15" fill="rgb(229,78,10)" fg:x="59512" fg:w="16"/><text x="55.6781%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (45 samples, 0.04%)</title><rect x="55.4430%" y="1813" width="0.0419%" height="15" fill="rgb(223,139,54)" fg:x="59528" fg:w="45"/><text x="55.6930%" y="1823.50"></text></g><g><title>move_vm_runtime::tracing::trace (125 samples, 0.12%)</title><rect x="55.4849%" y="1813" width="0.1164%" height="15" fill="rgb(207,110,4)" fg:x="59573" fg:w="125"/><text x="55.7349%" y="1823.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.02%)</title><rect x="55.5771%" y="1797" width="0.0242%" height="15" fill="rgb(248,30,41)" fg:x="59672" fg:w="26"/><text x="55.8271%" y="1807.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (26 samples, 0.02%)</title><rect x="55.5771%" y="1781" width="0.0242%" height="15" fill="rgb(235,54,25)" fg:x="59672" fg:w="26"/><text x="55.8271%" y="1791.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (26 samples, 0.02%)</title><rect x="55.5771%" y="1765" width="0.0242%" height="15" fill="rgb(213,107,41)" fg:x="59672" fg:w="26"/><text x="55.8271%" y="1775.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (26 samples, 0.02%)</title><rect x="55.5771%" y="1749" width="0.0242%" height="15" fill="rgb(237,102,9)" fg:x="59672" fg:w="26"/><text x="55.8271%" y="1759.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (26 samples, 0.02%)</title><rect x="55.5771%" y="1733" width="0.0242%" height="15" fill="rgb(252,137,49)" fg:x="59672" fg:w="26"/><text x="55.8271%" y="1743.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (21 samples, 0.02%)</title><rect x="55.5817%" y="1717" width="0.0196%" height="15" fill="rgb(233,202,33)" fg:x="59677" fg:w="21"/><text x="55.8317%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::cast_u128 (20 samples, 0.02%)</title><rect x="55.6013%" y="1813" width="0.0186%" height="15" fill="rgb(223,14,51)" fg:x="59698" fg:w="20"/><text x="55.8513%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::cast_u8 (14 samples, 0.01%)</title><rect x="55.6199%" y="1813" width="0.0130%" height="15" fill="rgb(248,70,23)" fg:x="59718" fg:w="14"/><text x="55.8699%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::shl_checked (11 samples, 0.01%)</title><rect x="55.6413%" y="1813" width="0.0102%" height="15" fill="rgb(209,207,47)" fg:x="59741" fg:w="11"/><text x="55.8913%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (17 samples, 0.02%)</title><rect x="55.6516%" y="1813" width="0.0158%" height="15" fill="rgb(245,124,2)" fg:x="59752" fg:w="17"/><text x="55.9016%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.04%)</title><rect x="55.6935%" y="1797" width="0.0419%" height="15" fill="rgb(249,208,11)" fg:x="59797" fg:w="45"/><text x="55.9435%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (146 samples, 0.14%)</title><rect x="55.6674%" y="1813" width="0.1360%" height="15" fill="rgb(247,112,7)" fg:x="59769" fg:w="146"/><text x="55.9174%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (68 samples, 0.06%)</title><rect x="55.7401%" y="1797" width="0.0633%" height="15" fill="rgb(209,192,31)" fg:x="59847" fg:w="68"/><text x="55.9901%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="55.8556%" y="1797" width="0.0102%" height="15" fill="rgb(236,55,19)" fg:x="59971" fg:w="11"/><text x="56.1056%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (119 samples, 0.11%)</title><rect x="55.8034%" y="1813" width="0.1108%" height="15" fill="rgb(252,89,41)" fg:x="59915" fg:w="119"/><text x="56.0534%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (52 samples, 0.05%)</title><rect x="55.8658%" y="1797" width="0.0484%" height="15" fill="rgb(220,172,14)" fg:x="59982" fg:w="52"/><text x="56.1158%" y="1807.50"></text></g><g><title>core::mem::replace (29 samples, 0.03%)</title><rect x="55.8872%" y="1781" width="0.0270%" height="15" fill="rgb(252,65,2)" fg:x="60005" fg:w="29"/><text x="56.1372%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (19 samples, 0.02%)</title><rect x="55.9142%" y="1813" width="0.0177%" height="15" fill="rgb(250,20,8)" fg:x="60034" fg:w="19"/><text x="56.1642%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="55.9496%" y="1765" width="0.0140%" height="15" fill="rgb(234,149,13)" fg:x="60072" fg:w="15"/><text x="56.1996%" y="1775.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (15 samples, 0.01%)</title><rect x="55.9496%" y="1749" width="0.0140%" height="15" fill="rgb(223,219,12)" fg:x="60072" fg:w="15"/><text x="56.1996%" y="1759.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="55.9496%" y="1733" width="0.0140%" height="15" fill="rgb(234,13,49)" fg:x="60072" fg:w="15"/><text x="56.1996%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::container (15 samples, 0.01%)</title><rect x="55.9841%" y="1765" width="0.0140%" height="15" fill="rgb(214,41,25)" fg:x="60109" fg:w="15"/><text x="56.2341%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (81 samples, 0.08%)</title><rect x="55.9319%" y="1813" width="0.0754%" height="15" fill="rgb(232,198,52)" fg:x="60053" fg:w="81"/><text x="56.1819%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (78 samples, 0.07%)</title><rect x="55.9347%" y="1797" width="0.0726%" height="15" fill="rgb(236,111,46)" fg:x="60056" fg:w="78"/><text x="56.1847%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (69 samples, 0.06%)</title><rect x="55.9431%" y="1781" width="0.0643%" height="15" fill="rgb(253,30,20)" fg:x="60065" fg:w="69"/><text x="56.1931%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::write_ref (17 samples, 0.02%)</title><rect x="56.0130%" y="1813" width="0.0158%" height="15" fill="rgb(247,141,17)" fg:x="60140" fg:w="17"/><text x="56.2630%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::write_ref (11 samples, 0.01%)</title><rect x="56.0186%" y="1797" width="0.0102%" height="15" fill="rgb(214,195,21)" fg:x="60146" fg:w="11"/><text x="56.2686%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (49 samples, 0.05%)</title><rect x="56.0288%" y="1813" width="0.0456%" height="15" fill="rgb(214,98,12)" fg:x="60157" fg:w="49"/><text x="56.2788%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (35 samples, 0.03%)</title><rect x="56.0418%" y="1797" width="0.0326%" height="15" fill="rgb(239,4,26)" fg:x="60171" fg:w="35"/><text x="56.2918%" y="1807.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="56.0865%" y="1797" width="0.0140%" height="15" fill="rgb(234,210,35)" fg:x="60219" fg:w="15"/><text x="56.3365%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (44 samples, 0.04%)</title><rect x="56.1033%" y="1797" width="0.0410%" height="15" fill="rgb(252,178,27)" fg:x="60237" fg:w="44"/><text x="56.3533%" y="1807.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (107 samples, 0.10%)</title><rect x="56.2197%" y="1701" width="0.0997%" height="15" fill="rgb(217,50,1)" fg:x="60362" fg:w="107"/><text x="56.4697%" y="1711.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (96 samples, 0.09%)</title><rect x="56.2300%" y="1685" width="0.0894%" height="15" fill="rgb(233,137,5)" fg:x="60373" fg:w="96"/><text x="56.4800%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (96 samples, 0.09%)</title><rect x="56.2300%" y="1669" width="0.0894%" height="15" fill="rgb(217,227,25)" fg:x="60373" fg:w="96"/><text x="56.4800%" y="1679.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (92 samples, 0.09%)</title><rect x="56.2337%" y="1653" width="0.0857%" height="15" fill="rgb(242,89,38)" fg:x="60377" fg:w="92"/><text x="56.4837%" y="1663.50"></text></g><g><title>serde::de::SeqAccess::next_element (65 samples, 0.06%)</title><rect x="56.2588%" y="1637" width="0.0605%" height="15" fill="rgb(212,190,30)" fg:x="60404" fg:w="65"/><text x="56.5088%" y="1647.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (65 samples, 0.06%)</title><rect x="56.2588%" y="1621" width="0.0605%" height="15" fill="rgb(222,120,8)" fg:x="60404" fg:w="65"/><text x="56.5088%" y="1631.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (65 samples, 0.06%)</title><rect x="56.2588%" y="1605" width="0.0605%" height="15" fill="rgb(227,181,9)" fg:x="60404" fg:w="65"/><text x="56.5088%" y="1615.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (65 samples, 0.06%)</title><rect x="56.2588%" y="1589" width="0.0605%" height="15" fill="rgb(222,125,29)" fg:x="60404" fg:w="65"/><text x="56.5088%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (65 samples, 0.06%)</title><rect x="56.2588%" y="1573" width="0.0605%" height="15" fill="rgb(215,153,31)" fg:x="60404" fg:w="65"/><text x="56.5088%" y="1583.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (51 samples, 0.05%)</title><rect x="56.2719%" y="1557" width="0.0475%" height="15" fill="rgb(228,77,30)" fg:x="60418" fg:w="51"/><text x="56.5219%" y="1567.50"></text></g><g><title>bcs::de::Deserializer::next (37 samples, 0.03%)</title><rect x="56.2849%" y="1541" width="0.0345%" height="15" fill="rgb(226,110,9)" fg:x="60432" fg:w="37"/><text x="56.5349%" y="1551.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (34 samples, 0.03%)</title><rect x="56.2877%" y="1525" width="0.0317%" height="15" fill="rgb(219,111,7)" fg:x="60435" fg:w="34"/><text x="56.5377%" y="1535.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (34 samples, 0.03%)</title><rect x="56.2877%" y="1509" width="0.0317%" height="15" fill="rgb(229,167,25)" fg:x="60435" fg:w="34"/><text x="56.5377%" y="1519.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (34 samples, 0.03%)</title><rect x="56.2877%" y="1493" width="0.0317%" height="15" fill="rgb(209,77,43)" fg:x="60435" fg:w="34"/><text x="56.5377%" y="1503.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (34 samples, 0.03%)</title><rect x="56.2877%" y="1477" width="0.0317%" height="15" fill="rgb(233,70,39)" fg:x="60435" fg:w="34"/><text x="56.5377%" y="1487.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (34 samples, 0.03%)</title><rect x="56.2877%" y="1461" width="0.0317%" height="15" fill="rgb(207,171,44)" fg:x="60435" fg:w="34"/><text x="56.5377%" y="1471.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (34 samples, 0.03%)</title><rect x="56.2877%" y="1445" width="0.0317%" height="15" fill="rgb(244,91,6)" fg:x="60435" fg:w="34"/><text x="56.5377%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (145 samples, 0.14%)</title><rect x="56.1890%" y="1749" width="0.1350%" height="15" fill="rgb(234,136,12)" fg:x="60329" fg:w="145"/><text x="56.4390%" y="1759.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (122 samples, 0.11%)</title><rect x="56.2104%" y="1733" width="0.1136%" height="15" fill="rgb(216,210,38)" fg:x="60352" fg:w="122"/><text x="56.4604%" y="1743.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (122 samples, 0.11%)</title><rect x="56.2104%" y="1717" width="0.1136%" height="15" fill="rgb(241,227,7)" fg:x="60352" fg:w="122"/><text x="56.4604%" y="1727.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u128&gt;::deserialize (35 samples, 0.03%)</title><rect x="56.3287%" y="1749" width="0.0326%" height="15" fill="rgb(241,222,11)" fg:x="60479" fg:w="35"/><text x="56.5787%" y="1759.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u128 (35 samples, 0.03%)</title><rect x="56.3287%" y="1733" width="0.0326%" height="15" fill="rgb(246,86,18)" fg:x="60479" fg:w="35"/><text x="56.5787%" y="1743.50"></text></g><g><title>bcs::de::Deserializer::parse_u128 (30 samples, 0.03%)</title><rect x="56.3334%" y="1717" width="0.0279%" height="15" fill="rgb(224,151,49)" fg:x="60484" fg:w="30"/><text x="56.5834%" y="1727.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (14 samples, 0.01%)</title><rect x="56.3483%" y="1701" width="0.0130%" height="15" fill="rgb(235,4,41)" fg:x="60500" fg:w="14"/><text x="56.5983%" y="1711.50"></text></g><g><title>bcs::de::Deserializer::next (14 samples, 0.01%)</title><rect x="56.3483%" y="1685" width="0.0130%" height="15" fill="rgb(218,30,52)" fg:x="60500" fg:w="14"/><text x="56.5983%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (202 samples, 0.19%)</title><rect x="56.1853%" y="1765" width="0.1881%" height="15" fill="rgb(205,124,51)" fg:x="60325" fg:w="202"/><text x="56.4353%" y="1775.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (13 samples, 0.01%)</title><rect x="56.3613%" y="1749" width="0.0121%" height="15" fill="rgb(237,126,51)" fg:x="60514" fg:w="13"/><text x="56.6113%" y="1759.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (13 samples, 0.01%)</title><rect x="56.3613%" y="1733" width="0.0121%" height="15" fill="rgb(225,32,46)" fg:x="60514" fg:w="13"/><text x="56.6113%" y="1743.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (11 samples, 0.01%)</title><rect x="56.3632%" y="1717" width="0.0102%" height="15" fill="rgb(251,60,49)" fg:x="60516" fg:w="11"/><text x="56.6132%" y="1727.50"></text></g><g><title>bcs::de::from_bytes_seed (252 samples, 0.23%)</title><rect x="56.1443%" y="1781" width="0.2347%" height="15" fill="rgb(234,18,23)" fg:x="60281" fg:w="252"/><text x="56.3943%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (324 samples, 0.30%)</title><rect x="56.0819%" y="1813" width="0.3018%" height="15" fill="rgb(234,25,23)" fg:x="60214" fg:w="324"/><text x="56.3319%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (257 samples, 0.24%)</title><rect x="56.1443%" y="1797" width="0.2394%" height="15" fill="rgb(210,43,52)" fg:x="60281" fg:w="257"/><text x="56.3943%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::equals (19 samples, 0.02%)</title><rect x="56.3837%" y="1813" width="0.0177%" height="15" fill="rgb(237,198,21)" fg:x="60538" fg:w="19"/><text x="56.6337%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::equals (16 samples, 0.01%)</title><rect x="56.3864%" y="1797" width="0.0149%" height="15" fill="rgb(211,20,34)" fg:x="60541" fg:w="16"/><text x="56.6364%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (14 samples, 0.01%)</title><rect x="56.4358%" y="1797" width="0.0130%" height="15" fill="rgb(221,155,50)" fg:x="60594" fg:w="14"/><text x="56.6858%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::borrow_elem (37 samples, 0.03%)</title><rect x="56.4172%" y="1813" width="0.0345%" height="15" fill="rgb(213,214,53)" fg:x="60574" fg:w="37"/><text x="56.6672%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (9,304 samples, 8.67%)</title><rect x="47.8159%" y="1845" width="8.6655%" height="15" fill="rgb(215,229,48)" fg:x="51339" fg:w="9304"/><text x="48.0659%" y="1855.50">move_vm_runt..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (9,271 samples, 8.63%)</title><rect x="47.8467%" y="1829" width="8.6348%" height="15" fill="rgb(243,88,5)" fg:x="51372" fg:w="9271"/><text x="48.0967%" y="1839.50">move_vm_runt..</text></g><g><title>move_vm_types::values::values_impl::VectorRef::len (32 samples, 0.03%)</title><rect x="56.4516%" y="1813" width="0.0298%" height="15" fill="rgb(216,199,8)" fg:x="60611" fg:w="32"/><text x="56.7016%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::check_elem_layout (18 samples, 0.02%)</title><rect x="56.4647%" y="1797" width="0.0168%" height="15" fill="rgb(241,22,4)" fg:x="60625" fg:w="18"/><text x="56.7147%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="56.5224%" y="1797" width="0.0158%" height="15" fill="rgb(209,190,22)" fg:x="60687" fg:w="17"/><text x="56.7724%" y="1807.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (19 samples, 0.02%)</title><rect x="56.5466%" y="1797" width="0.0177%" height="15" fill="rgb(251,138,45)" fg:x="60713" fg:w="19"/><text x="56.7966%" y="1807.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (19 samples, 0.02%)</title><rect x="56.5466%" y="1781" width="0.0177%" height="15" fill="rgb(219,111,22)" fg:x="60713" fg:w="19"/><text x="56.7966%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.02%)</title><rect x="56.6118%" y="1637" width="0.0168%" height="15" fill="rgb(253,29,49)" fg:x="60783" fg:w="18"/><text x="56.8618%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (58 samples, 0.05%)</title><rect x="56.5774%" y="1701" width="0.0540%" height="15" fill="rgb(238,129,49)" fg:x="60746" fg:w="58"/><text x="56.8274%" y="1711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (58 samples, 0.05%)</title><rect x="56.5774%" y="1685" width="0.0540%" height="15" fill="rgb(240,26,41)" fg:x="60746" fg:w="58"/><text x="56.8274%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (58 samples, 0.05%)</title><rect x="56.5774%" y="1669" width="0.0540%" height="15" fill="rgb(221,47,33)" fg:x="60746" fg:w="58"/><text x="56.8274%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.03%)</title><rect x="56.6044%" y="1653" width="0.0270%" height="15" fill="rgb(216,200,17)" fg:x="60775" fg:w="29"/><text x="56.8544%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.02%)</title><rect x="56.6314%" y="1701" width="0.0158%" height="15" fill="rgb(230,151,26)" fg:x="60804" fg:w="17"/><text x="56.8814%" y="1711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (39 samples, 0.04%)</title><rect x="56.6472%" y="1589" width="0.0363%" height="15" fill="rgb(242,182,16)" fg:x="60821" fg:w="39"/><text x="56.8972%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (39 samples, 0.04%)</title><rect x="56.6472%" y="1573" width="0.0363%" height="15" fill="rgb(236,35,53)" fg:x="60821" fg:w="39"/><text x="56.8972%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38 samples, 0.04%)</title><rect x="56.6482%" y="1557" width="0.0354%" height="15" fill="rgb(214,180,28)" fg:x="60822" fg:w="38"/><text x="56.8982%" y="1567.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (40 samples, 0.04%)</title><rect x="56.6472%" y="1621" width="0.0373%" height="15" fill="rgb(208,173,36)" fg:x="60821" fg:w="40"/><text x="56.8972%" y="1631.50"></text></g><g><title>core::hash::Hasher::write_usize (40 samples, 0.04%)</title><rect x="56.6472%" y="1605" width="0.0373%" height="15" fill="rgb(218,39,15)" fg:x="60821" fg:w="40"/><text x="56.8972%" y="1615.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.03%)</title><rect x="56.7124%" y="1541" width="0.0251%" height="15" fill="rgb(213,145,15)" fg:x="60891" fg:w="27"/><text x="56.9624%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48 samples, 0.04%)</title><rect x="56.7031%" y="1557" width="0.0447%" height="15" fill="rgb(242,110,37)" fg:x="60881" fg:w="48"/><text x="56.9531%" y="1567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.01%)</title><rect x="56.7376%" y="1541" width="0.0102%" height="15" fill="rgb(247,146,22)" fg:x="60918" fg:w="11"/><text x="56.9876%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (110 samples, 0.10%)</title><rect x="56.6472%" y="1669" width="0.1025%" height="15" fill="rgb(215,191,7)" fg:x="60821" fg:w="110"/><text x="56.8972%" y="1679.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (110 samples, 0.10%)</title><rect x="56.6472%" y="1653" width="0.1025%" height="15" fill="rgb(240,158,1)" fg:x="60821" fg:w="110"/><text x="56.8972%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (110 samples, 0.10%)</title><rect x="56.6472%" y="1637" width="0.1025%" height="15" fill="rgb(241,78,32)" fg:x="60821" fg:w="110"/><text x="56.8972%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (70 samples, 0.07%)</title><rect x="56.6845%" y="1621" width="0.0652%" height="15" fill="rgb(248,83,10)" fg:x="60861" fg:w="70"/><text x="56.9345%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (70 samples, 0.07%)</title><rect x="56.6845%" y="1605" width="0.0652%" height="15" fill="rgb(241,52,0)" fg:x="60861" fg:w="70"/><text x="56.9345%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (70 samples, 0.07%)</title><rect x="56.6845%" y="1589" width="0.0652%" height="15" fill="rgb(238,37,13)" fg:x="60861" fg:w="70"/><text x="56.9345%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.06%)</title><rect x="56.6863%" y="1573" width="0.0633%" height="15" fill="rgb(242,194,17)" fg:x="60863" fg:w="68"/><text x="56.9363%" y="1583.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.01%)</title><rect x="56.7990%" y="1541" width="0.0102%" height="15" fill="rgb(236,96,3)" fg:x="60984" fg:w="11"/><text x="57.0490%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (42 samples, 0.04%)</title><rect x="56.7748%" y="1557" width="0.0391%" height="15" fill="rgb(235,148,34)" fg:x="60958" fg:w="42"/><text x="57.0248%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (83 samples, 0.08%)</title><rect x="56.7497%" y="1573" width="0.0773%" height="15" fill="rgb(254,12,11)" fg:x="60931" fg:w="83"/><text x="56.9997%" y="1583.50"></text></g><g><title>core::hash::sip::u8to64_le (14 samples, 0.01%)</title><rect x="56.8139%" y="1557" width="0.0130%" height="15" fill="rgb(207,31,54)" fg:x="61000" fg:w="14"/><text x="57.0639%" y="1567.50"></text></g><g><title>hashbrown::map::make_hash (302 samples, 0.28%)</title><rect x="56.5718%" y="1733" width="0.2813%" height="15" fill="rgb(252,14,28)" fg:x="60740" fg:w="302"/><text x="56.8218%" y="1743.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 samples, 0.28%)</title><rect x="56.5737%" y="1717" width="0.2794%" height="15" fill="rgb(252,108,36)" fg:x="60742" fg:w="300"/><text x="56.8237%" y="1727.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (221 samples, 0.21%)</title><rect x="56.6472%" y="1701" width="0.2058%" height="15" fill="rgb(214,149,7)" fg:x="60821" fg:w="221"/><text x="56.8972%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (221 samples, 0.21%)</title><rect x="56.6472%" y="1685" width="0.2058%" height="15" fill="rgb(243,94,12)" fg:x="60821" fg:w="221"/><text x="56.8972%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (111 samples, 0.10%)</title><rect x="56.7497%" y="1669" width="0.1034%" height="15" fill="rgb(208,36,10)" fg:x="60931" fg:w="111"/><text x="56.9997%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (111 samples, 0.10%)</title><rect x="56.7497%" y="1653" width="0.1034%" height="15" fill="rgb(233,185,52)" fg:x="60931" fg:w="111"/><text x="56.9997%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (111 samples, 0.10%)</title><rect x="56.7497%" y="1637" width="0.1034%" height="15" fill="rgb(234,50,45)" fg:x="60931" fg:w="111"/><text x="56.9997%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (111 samples, 0.10%)</title><rect x="56.7497%" y="1621" width="0.1034%" height="15" fill="rgb(228,92,54)" fg:x="60931" fg:w="111"/><text x="56.9997%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (111 samples, 0.10%)</title><rect x="56.7497%" y="1605" width="0.1034%" height="15" fill="rgb(224,85,25)" fg:x="60931" fg:w="111"/><text x="56.9997%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (111 samples, 0.10%)</title><rect x="56.7497%" y="1589" width="0.1034%" height="15" fill="rgb(246,1,45)" fg:x="60931" fg:w="111"/><text x="56.9997%" y="1599.50"></text></g><g><title>core::hash::Hasher::write_u8 (28 samples, 0.03%)</title><rect x="56.8270%" y="1573" width="0.0261%" height="15" fill="rgb(240,66,23)" fg:x="61014" fg:w="28"/><text x="57.0770%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="56.8298%" y="1557" width="0.0233%" height="15" fill="rgb(222,96,27)" fg:x="61017" fg:w="25"/><text x="57.0798%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="56.8577%" y="1685" width="0.0158%" height="15" fill="rgb(212,136,10)" fg:x="61047" fg:w="17"/><text x="57.1077%" y="1695.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.02%)</title><rect x="56.8577%" y="1669" width="0.0158%" height="15" fill="rgb(226,192,50)" fg:x="61047" fg:w="17"/><text x="57.1077%" y="1679.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (50 samples, 0.05%)</title><rect x="56.8857%" y="1637" width="0.0466%" height="15" fill="rgb(241,182,31)" fg:x="61077" fg:w="50"/><text x="57.1357%" y="1647.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (50 samples, 0.05%)</title><rect x="56.8857%" y="1621" width="0.0466%" height="15" fill="rgb(219,205,47)" fg:x="61077" fg:w="50"/><text x="57.1357%" y="1631.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (50 samples, 0.05%)</title><rect x="56.8857%" y="1605" width="0.0466%" height="15" fill="rgb(207,96,14)" fg:x="61077" fg:w="50"/><text x="57.1357%" y="1615.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (90 samples, 0.08%)</title><rect x="56.8829%" y="1669" width="0.0838%" height="15" fill="rgb(216,119,9)" fg:x="61074" fg:w="90"/><text x="57.1329%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (90 samples, 0.08%)</title><rect x="56.8829%" y="1653" width="0.0838%" height="15" fill="rgb(235,62,36)" fg:x="61074" fg:w="90"/><text x="57.1329%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="56.9322%" y="1637" width="0.0345%" height="15" fill="rgb(214,41,27)" fg:x="61127" fg:w="37"/><text x="57.1822%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="56.9322%" y="1621" width="0.0345%" height="15" fill="rgb(214,174,37)" fg:x="61127" fg:w="37"/><text x="57.1822%" y="1631.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (37 samples, 0.03%)</title><rect x="56.9322%" y="1605" width="0.0345%" height="15" fill="rgb(212,11,25)" fg:x="61127" fg:w="37"/><text x="57.1822%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.03%)</title><rect x="56.9322%" y="1589" width="0.0345%" height="15" fill="rgb(217,71,35)" fg:x="61127" fg:w="37"/><text x="57.1822%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (37 samples, 0.03%)</title><rect x="56.9322%" y="1573" width="0.0345%" height="15" fill="rgb(234,152,9)" fg:x="61127" fg:w="37"/><text x="57.1822%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (37 samples, 0.03%)</title><rect x="56.9322%" y="1557" width="0.0345%" height="15" fill="rgb(228,32,51)" fg:x="61127" fg:w="37"/><text x="57.1822%" y="1567.50"></text></g><g><title>[libc.so.6] (37 samples, 0.03%)</title><rect x="56.9322%" y="1541" width="0.0345%" height="15" fill="rgb(209,14,47)" fg:x="61127" fg:w="37"/><text x="57.1822%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (102 samples, 0.10%)</title><rect x="56.8736%" y="1685" width="0.0950%" height="15" fill="rgb(218,201,17)" fg:x="61064" fg:w="102"/><text x="57.1236%" y="1695.50"></text></g><g><title>hashbrown::raw::h2 (13 samples, 0.01%)</title><rect x="56.9686%" y="1685" width="0.0121%" height="15" fill="rgb(218,98,15)" fg:x="61166" fg:w="13"/><text x="57.2186%" y="1695.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (25 samples, 0.02%)</title><rect x="56.9807%" y="1685" width="0.0233%" height="15" fill="rgb(233,202,29)" fg:x="61179" fg:w="25"/><text x="57.2307%" y="1695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (25 samples, 0.02%)</title><rect x="56.9807%" y="1669" width="0.0233%" height="15" fill="rgb(207,196,44)" fg:x="61179" fg:w="25"/><text x="57.2307%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="56.9807%" y="1653" width="0.0233%" height="15" fill="rgb(218,63,34)" fg:x="61179" fg:w="25"/><text x="57.2307%" y="1663.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (567 samples, 0.53%)</title><rect x="56.4814%" y="1845" width="0.5281%" height="15" fill="rgb(209,10,5)" fg:x="60643" fg:w="567"/><text x="56.7314%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (549 samples, 0.51%)</title><rect x="56.4982%" y="1829" width="0.5113%" height="15" fill="rgb(224,36,28)" fg:x="60661" fg:w="549"/><text x="56.7482%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (524 samples, 0.49%)</title><rect x="56.5215%" y="1813" width="0.4880%" height="15" fill="rgb(249,178,7)" fg:x="60686" fg:w="524"/><text x="56.7715%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (478 samples, 0.45%)</title><rect x="56.5643%" y="1797" width="0.4452%" height="15" fill="rgb(253,163,10)" fg:x="60732" fg:w="478"/><text x="56.8143%" y="1807.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (473 samples, 0.44%)</title><rect x="56.5690%" y="1781" width="0.4405%" height="15" fill="rgb(245,67,46)" fg:x="60737" fg:w="473"/><text x="56.8190%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (473 samples, 0.44%)</title><rect x="56.5690%" y="1765" width="0.4405%" height="15" fill="rgb(225,14,18)" fg:x="60737" fg:w="473"/><text x="56.8190%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (473 samples, 0.44%)</title><rect x="56.5690%" y="1749" width="0.4405%" height="15" fill="rgb(217,41,54)" fg:x="60737" fg:w="473"/><text x="56.8190%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (168 samples, 0.16%)</title><rect x="56.8531%" y="1733" width="0.1565%" height="15" fill="rgb(222,111,11)" fg:x="61042" fg:w="168"/><text x="57.1031%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (168 samples, 0.16%)</title><rect x="56.8531%" y="1717" width="0.1565%" height="15" fill="rgb(211,85,31)" fg:x="61042" fg:w="168"/><text x="57.1031%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (168 samples, 0.16%)</title><rect x="56.8531%" y="1701" width="0.1565%" height="15" fill="rgb(223,29,26)" fg:x="61042" fg:w="168"/><text x="57.1031%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="57.0310%" y="1813" width="0.0121%" height="15" fill="rgb(236,124,50)" fg:x="61233" fg:w="13"/><text x="57.2810%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="57.1027%" y="1781" width="0.0102%" height="15" fill="rgb(219,148,15)" fg:x="61310" fg:w="11"/><text x="57.3527%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::SignerRef&gt; (19 samples, 0.02%)</title><rect x="57.1250%" y="1781" width="0.0177%" height="15" fill="rgb(248,159,33)" fg:x="61334" fg:w="19"/><text x="57.3750%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (19 samples, 0.02%)</title><rect x="57.1250%" y="1765" width="0.0177%" height="15" fill="rgb(252,65,8)" fg:x="61334" fg:w="19"/><text x="57.3750%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (16 samples, 0.01%)</title><rect x="57.1278%" y="1749" width="0.0149%" height="15" fill="rgb(236,45,7)" fg:x="61337" fg:w="16"/><text x="57.3778%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::SignerRef::borrow_signer (23 samples, 0.02%)</title><rect x="57.1492%" y="1781" width="0.0214%" height="15" fill="rgb(244,3,48)" fg:x="61360" fg:w="23"/><text x="57.3992%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (15 samples, 0.01%)</title><rect x="57.1567%" y="1765" width="0.0140%" height="15" fill="rgb(224,123,53)" fg:x="61368" fg:w="15"/><text x="57.4067%" y="1775.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (106 samples, 0.10%)</title><rect x="57.0757%" y="1813" width="0.0987%" height="15" fill="rgb(223,173,15)" fg:x="61281" fg:w="106"/><text x="57.3257%" y="1823.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (97 samples, 0.09%)</title><rect x="57.0840%" y="1797" width="0.0903%" height="15" fill="rgb(254,181,5)" fg:x="61290" fg:w="97"/><text x="57.3340%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="57.2182%" y="1749" width="0.0130%" height="15" fill="rgb(243,124,33)" fg:x="61434" fg:w="14"/><text x="57.4682%" y="1759.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="57.2191%" y="1733" width="0.0121%" height="15" fill="rgb(253,220,11)" fg:x="61435" fg:w="13"/><text x="57.4691%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="57.2191%" y="1717" width="0.0121%" height="15" fill="rgb(217,14,4)" fg:x="61435" fg:w="13"/><text x="57.4691%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="57.2191%" y="1701" width="0.0121%" height="15" fill="rgb(209,196,12)" fg:x="61435" fg:w="13"/><text x="57.4691%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="57.2191%" y="1685" width="0.0121%" height="15" fill="rgb(237,108,29)" fg:x="61435" fg:w="13"/><text x="57.4691%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (45 samples, 0.04%)</title><rect x="57.1977%" y="1813" width="0.0419%" height="15" fill="rgb(216,173,20)" fg:x="61412" fg:w="45"/><text x="57.4477%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (40 samples, 0.04%)</title><rect x="57.2023%" y="1797" width="0.0373%" height="15" fill="rgb(245,27,6)" fg:x="61417" fg:w="40"/><text x="57.4523%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (34 samples, 0.03%)</title><rect x="57.2079%" y="1781" width="0.0317%" height="15" fill="rgb(210,181,20)" fg:x="61423" fg:w="34"/><text x="57.4579%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (32 samples, 0.03%)</title><rect x="57.2098%" y="1765" width="0.0298%" height="15" fill="rgb(235,213,1)" fg:x="61425" fg:w="32"/><text x="57.4598%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (254 samples, 0.24%)</title><rect x="57.0114%" y="1845" width="0.2366%" height="15" fill="rgb(239,68,43)" fg:x="61212" fg:w="254"/><text x="57.2614%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (251 samples, 0.23%)</title><rect x="57.0142%" y="1829" width="0.2338%" height="15" fill="rgb(254,137,43)" fg:x="61215" fg:w="251"/><text x="57.2642%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (26 samples, 0.02%)</title><rect x="57.2480%" y="1845" width="0.0242%" height="15" fill="rgb(252,170,38)" fg:x="61466" fg:w="26"/><text x="57.4980%" y="1855.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="57.3066%" y="1829" width="0.0158%" height="15" fill="rgb(234,21,42)" fg:x="61529" fg:w="17"/><text x="57.5566%" y="1839.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="57.3392%" y="1797" width="0.0102%" height="15" fill="rgb(216,145,40)" fg:x="61564" fg:w="11"/><text x="57.5892%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (33 samples, 0.03%)</title><rect x="57.3262%" y="1829" width="0.0307%" height="15" fill="rgb(251,73,9)" fg:x="61550" fg:w="33"/><text x="57.5762%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (20 samples, 0.02%)</title><rect x="57.3383%" y="1813" width="0.0186%" height="15" fill="rgb(242,54,6)" fg:x="61563" fg:w="20"/><text x="57.5883%" y="1823.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="57.4007%" y="1701" width="0.0205%" height="15" fill="rgb(239,70,7)" fg:x="61630" fg:w="22"/><text x="57.6507%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="57.4091%" y="1685" width="0.0121%" height="15" fill="rgb(216,159,35)" fg:x="61639" fg:w="13"/><text x="57.6591%" y="1695.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (27 samples, 0.03%)</title><rect x="57.4007%" y="1717" width="0.0251%" height="15" fill="rgb(224,50,39)" fg:x="61630" fg:w="27"/><text x="57.6507%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="57.3821%" y="1749" width="0.0550%" height="15" fill="rgb(235,9,35)" fg:x="61610" fg:w="59"/><text x="57.6321%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="57.4007%" y="1733" width="0.0363%" height="15" fill="rgb(239,34,21)" fg:x="61630" fg:w="39"/><text x="57.6507%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="57.4259%" y="1717" width="0.0112%" height="15" fill="rgb(218,162,43)" fg:x="61657" fg:w="12"/><text x="57.6759%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.01%)</title><rect x="57.4259%" y="1701" width="0.0112%" height="15" fill="rgb(219,89,33)" fg:x="61657" fg:w="12"/><text x="57.6759%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="57.4259%" y="1685" width="0.0112%" height="15" fill="rgb(226,125,37)" fg:x="61657" fg:w="12"/><text x="57.6759%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="57.4259%" y="1669" width="0.0112%" height="15" fill="rgb(233,149,30)" fg:x="61657" fg:w="12"/><text x="57.6759%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="57.4259%" y="1653" width="0.0112%" height="15" fill="rgb(236,8,18)" fg:x="61657" fg:w="12"/><text x="57.6759%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="57.4370%" y="1749" width="0.0326%" height="15" fill="rgb(205,176,9)" fg:x="61669" fg:w="35"/><text x="57.6870%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="57.4370%" y="1733" width="0.0326%" height="15" fill="rgb(252,103,44)" fg:x="61669" fg:w="35"/><text x="57.6870%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.03%)</title><rect x="57.4370%" y="1717" width="0.0326%" height="15" fill="rgb(207,68,53)" fg:x="61669" fg:w="35"/><text x="57.6870%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.03%)</title><rect x="57.4380%" y="1701" width="0.0317%" height="15" fill="rgb(218,193,48)" fg:x="61670" fg:w="34"/><text x="57.6880%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.03%)</title><rect x="57.4380%" y="1685" width="0.0317%" height="15" fill="rgb(234,121,52)" fg:x="61670" fg:w="34"/><text x="57.6880%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.03%)</title><rect x="57.4380%" y="1669" width="0.0317%" height="15" fill="rgb(227,218,49)" fg:x="61670" fg:w="34"/><text x="57.6880%" y="1679.50"></text></g><g><title>malloc (28 samples, 0.03%)</title><rect x="57.4436%" y="1653" width="0.0261%" height="15" fill="rgb(221,8,7)" fg:x="61676" fg:w="28"/><text x="57.6936%" y="1663.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="57.4566%" y="1637" width="0.0130%" height="15" fill="rgb(217,151,36)" fg:x="61690" fg:w="14"/><text x="57.7066%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (114 samples, 0.11%)</title><rect x="57.3793%" y="1813" width="0.1062%" height="15" fill="rgb(213,71,5)" fg:x="61607" fg:w="114"/><text x="57.6293%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114 samples, 0.11%)</title><rect x="57.3793%" y="1797" width="0.1062%" height="15" fill="rgb(225,145,43)" fg:x="61607" fg:w="114"/><text x="57.6293%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 0.11%)</title><rect x="57.3793%" y="1781" width="0.1062%" height="15" fill="rgb(235,118,19)" fg:x="61607" fg:w="114"/><text x="57.6293%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (114 samples, 0.11%)</title><rect x="57.3793%" y="1765" width="0.1062%" height="15" fill="rgb(214,102,36)" fg:x="61607" fg:w="114"/><text x="57.6293%" y="1775.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (17 samples, 0.02%)</title><rect x="57.4696%" y="1749" width="0.0158%" height="15" fill="rgb(220,56,43)" fg:x="61704" fg:w="17"/><text x="57.7196%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="57.5237%" y="1653" width="0.0233%" height="15" fill="rgb(246,136,46)" fg:x="61762" fg:w="25"/><text x="57.7737%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (23 samples, 0.02%)</title><rect x="57.5255%" y="1637" width="0.0214%" height="15" fill="rgb(249,99,12)" fg:x="61764" fg:w="23"/><text x="57.7755%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.02%)</title><rect x="57.5255%" y="1621" width="0.0214%" height="15" fill="rgb(224,31,42)" fg:x="61764" fg:w="23"/><text x="57.7755%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.02%)</title><rect x="57.5255%" y="1605" width="0.0214%" height="15" fill="rgb(208,96,21)" fg:x="61764" fg:w="23"/><text x="57.7755%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.02%)</title><rect x="57.5255%" y="1589" width="0.0214%" height="15" fill="rgb(237,229,7)" fg:x="61764" fg:w="23"/><text x="57.7755%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (18 samples, 0.02%)</title><rect x="57.5302%" y="1573" width="0.0168%" height="15" fill="rgb(210,12,6)" fg:x="61769" fg:w="18"/><text x="57.7802%" y="1583.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (17 samples, 0.02%)</title><rect x="57.5311%" y="1557" width="0.0158%" height="15" fill="rgb(240,9,34)" fg:x="61770" fg:w="17"/><text x="57.7811%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (17 samples, 0.02%)</title><rect x="57.5311%" y="1541" width="0.0158%" height="15" fill="rgb(211,68,37)" fg:x="61770" fg:w="17"/><text x="57.7811%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (17 samples, 0.02%)</title><rect x="57.5311%" y="1525" width="0.0158%" height="15" fill="rgb(249,138,50)" fg:x="61770" fg:w="17"/><text x="57.7811%" y="1535.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (17 samples, 0.02%)</title><rect x="57.5311%" y="1509" width="0.0158%" height="15" fill="rgb(243,185,40)" fg:x="61770" fg:w="17"/><text x="57.7811%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (17 samples, 0.02%)</title><rect x="57.5311%" y="1493" width="0.0158%" height="15" fill="rgb(242,92,35)" fg:x="61770" fg:w="17"/><text x="57.7811%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (12 samples, 0.01%)</title><rect x="57.5358%" y="1477" width="0.0112%" height="15" fill="rgb(244,98,5)" fg:x="61775" fg:w="12"/><text x="57.7858%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (36 samples, 0.03%)</title><rect x="57.5143%" y="1685" width="0.0335%" height="15" fill="rgb(228,186,29)" fg:x="61752" fg:w="36"/><text x="57.7643%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (35 samples, 0.03%)</title><rect x="57.5153%" y="1669" width="0.0326%" height="15" fill="rgb(253,7,44)" fg:x="61753" fg:w="35"/><text x="57.7653%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.01%)</title><rect x="57.5507%" y="1669" width="0.0121%" height="15" fill="rgb(216,11,45)" fg:x="61791" fg:w="13"/><text x="57.8007%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="57.5507%" y="1653" width="0.0121%" height="15" fill="rgb(205,67,3)" fg:x="61791" fg:w="13"/><text x="57.8007%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="57.5507%" y="1637" width="0.0121%" height="15" fill="rgb(250,18,3)" fg:x="61791" fg:w="13"/><text x="57.8007%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="57.5507%" y="1621" width="0.0121%" height="15" fill="rgb(241,222,43)" fg:x="61791" fg:w="13"/><text x="57.8007%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="57.5479%" y="1685" width="0.0158%" height="15" fill="rgb(233,115,3)" fg:x="61788" fg:w="17"/><text x="57.7979%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (94 samples, 0.09%)</title><rect x="57.4864%" y="1813" width="0.0875%" height="15" fill="rgb(215,165,25)" fg:x="61722" fg:w="94"/><text x="57.7364%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (94 samples, 0.09%)</title><rect x="57.4864%" y="1797" width="0.0875%" height="15" fill="rgb(234,179,6)" fg:x="61722" fg:w="94"/><text x="57.7364%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (94 samples, 0.09%)</title><rect x="57.4864%" y="1781" width="0.0875%" height="15" fill="rgb(215,82,23)" fg:x="61722" fg:w="94"/><text x="57.7364%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (91 samples, 0.08%)</title><rect x="57.4892%" y="1765" width="0.0848%" height="15" fill="rgb(211,47,18)" fg:x="61725" fg:w="91"/><text x="57.7392%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (91 samples, 0.08%)</title><rect x="57.4892%" y="1749" width="0.0848%" height="15" fill="rgb(248,17,9)" fg:x="61725" fg:w="91"/><text x="57.7392%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (91 samples, 0.08%)</title><rect x="57.4892%" y="1733" width="0.0848%" height="15" fill="rgb(210,212,12)" fg:x="61725" fg:w="91"/><text x="57.7392%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (84 samples, 0.08%)</title><rect x="57.4957%" y="1717" width="0.0782%" height="15" fill="rgb(230,135,45)" fg:x="61732" fg:w="84"/><text x="57.7457%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (72 samples, 0.07%)</title><rect x="57.5069%" y="1701" width="0.0671%" height="15" fill="rgb(214,121,41)" fg:x="61744" fg:w="72"/><text x="57.7569%" y="1711.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="57.6019%" y="1653" width="0.0121%" height="15" fill="rgb(239,165,45)" fg:x="61846" fg:w="13"/><text x="57.8519%" y="1663.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (13 samples, 0.01%)</title><rect x="57.6019%" y="1637" width="0.0121%" height="15" fill="rgb(214,85,51)" fg:x="61846" fg:w="13"/><text x="57.8519%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.01%)</title><rect x="57.6019%" y="1621" width="0.0121%" height="15" fill="rgb(223,90,27)" fg:x="61846" fg:w="13"/><text x="57.8519%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (11 samples, 0.01%)</title><rect x="57.6038%" y="1605" width="0.0102%" height="15" fill="rgb(244,84,11)" fg:x="61848" fg:w="11"/><text x="57.8538%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="57.6038%" y="1589" width="0.0102%" height="15" fill="rgb(253,41,47)" fg:x="61848" fg:w="11"/><text x="57.8538%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="57.6038%" y="1573" width="0.0102%" height="15" fill="rgb(232,39,5)" fg:x="61848" fg:w="11"/><text x="57.8538%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="57.6038%" y="1557" width="0.0102%" height="15" fill="rgb(211,93,4)" fg:x="61848" fg:w="11"/><text x="57.8538%" y="1567.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.03%)</title><rect x="57.5935%" y="1717" width="0.0270%" height="15" fill="rgb(219,50,49)" fg:x="61837" fg:w="29"/><text x="57.8435%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.03%)</title><rect x="57.5935%" y="1701" width="0.0270%" height="15" fill="rgb(232,80,19)" fg:x="61837" fg:w="29"/><text x="57.8435%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (20 samples, 0.02%)</title><rect x="57.6019%" y="1685" width="0.0186%" height="15" fill="rgb(215,227,39)" fg:x="61846" fg:w="20"/><text x="57.8519%" y="1695.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="57.6019%" y="1669" width="0.0186%" height="15" fill="rgb(211,99,12)" fg:x="61846" fg:w="20"/><text x="57.8519%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.01%)</title><rect x="57.6233%" y="1669" width="0.0112%" height="15" fill="rgb(214,158,5)" fg:x="61869" fg:w="12"/><text x="57.8733%" y="1679.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.01%)</title><rect x="57.6242%" y="1653" width="0.0102%" height="15" fill="rgb(242,19,53)" fg:x="61870" fg:w="11"/><text x="57.8742%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="57.6242%" y="1637" width="0.0102%" height="15" fill="rgb(208,18,20)" fg:x="61870" fg:w="11"/><text x="57.8742%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (64 samples, 0.06%)</title><rect x="57.5795%" y="1813" width="0.0596%" height="15" fill="rgb(250,44,11)" fg:x="61822" fg:w="64"/><text x="57.8295%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (60 samples, 0.06%)</title><rect x="57.5833%" y="1797" width="0.0559%" height="15" fill="rgb(238,159,13)" fg:x="61826" fg:w="60"/><text x="57.8333%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (52 samples, 0.05%)</title><rect x="57.5907%" y="1781" width="0.0484%" height="15" fill="rgb(231,74,18)" fg:x="61834" fg:w="52"/><text x="57.8407%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (52 samples, 0.05%)</title><rect x="57.5907%" y="1765" width="0.0484%" height="15" fill="rgb(229,219,45)" fg:x="61834" fg:w="52"/><text x="57.8407%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (52 samples, 0.05%)</title><rect x="57.5907%" y="1749" width="0.0484%" height="15" fill="rgb(210,221,1)" fg:x="61834" fg:w="52"/><text x="57.8407%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (52 samples, 0.05%)</title><rect x="57.5907%" y="1733" width="0.0484%" height="15" fill="rgb(209,60,51)" fg:x="61834" fg:w="52"/><text x="57.8407%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.02%)</title><rect x="57.6205%" y="1717" width="0.0186%" height="15" fill="rgb(252,97,34)" fg:x="61866" fg:w="20"/><text x="57.8705%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.02%)</title><rect x="57.6205%" y="1701" width="0.0186%" height="15" fill="rgb(243,211,37)" fg:x="61866" fg:w="20"/><text x="57.8705%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (20 samples, 0.02%)</title><rect x="57.6205%" y="1685" width="0.0186%" height="15" fill="rgb(210,229,37)" fg:x="61866" fg:w="20"/><text x="57.8705%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (304 samples, 0.28%)</title><rect x="57.3569%" y="1829" width="0.2831%" height="15" fill="rgb(220,208,43)" fg:x="61583" fg:w="304"/><text x="57.6069%" y="1839.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="57.6578%" y="1797" width="0.0335%" height="15" fill="rgb(218,118,50)" fg:x="61906" fg:w="36"/><text x="57.9078%" y="1807.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (12 samples, 0.01%)</title><rect x="57.6988%" y="1797" width="0.0112%" height="15" fill="rgb(254,169,52)" fg:x="61950" fg:w="12"/><text x="57.9488%" y="1807.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (12 samples, 0.01%)</title><rect x="57.6988%" y="1781" width="0.0112%" height="15" fill="rgb(221,214,37)" fg:x="61950" fg:w="12"/><text x="57.9488%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.02%)</title><rect x="57.7341%" y="1637" width="0.0168%" height="15" fill="rgb(254,186,32)" fg:x="61988" fg:w="18"/><text x="57.9841%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.03%)</title><rect x="57.7248%" y="1701" width="0.0289%" height="15" fill="rgb(215,144,43)" fg:x="61978" fg:w="31"/><text x="57.9748%" y="1711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.03%)</title><rect x="57.7248%" y="1685" width="0.0289%" height="15" fill="rgb(252,21,46)" fg:x="61978" fg:w="31"/><text x="57.9748%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.03%)</title><rect x="57.7248%" y="1669" width="0.0289%" height="15" fill="rgb(207,166,46)" fg:x="61978" fg:w="31"/><text x="57.9748%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="57.7323%" y="1653" width="0.0214%" height="15" fill="rgb(253,37,49)" fg:x="61986" fg:w="23"/><text x="57.9823%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (20 samples, 0.02%)</title><rect x="57.7537%" y="1701" width="0.0186%" height="15" fill="rgb(222,97,20)" fg:x="62009" fg:w="20"/><text x="58.0037%" y="1711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="57.7723%" y="1589" width="0.0149%" height="15" fill="rgb(244,181,26)" fg:x="62029" fg:w="16"/><text x="58.0223%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="57.7723%" y="1573" width="0.0149%" height="15" fill="rgb(241,22,29)" fg:x="62029" fg:w="16"/><text x="58.0223%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="57.7751%" y="1557" width="0.0121%" height="15" fill="rgb(206,200,43)" fg:x="62032" fg:w="13"/><text x="58.0251%" y="1567.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (18 samples, 0.02%)</title><rect x="57.7723%" y="1621" width="0.0168%" height="15" fill="rgb(226,224,43)" fg:x="62029" fg:w="18"/><text x="58.0223%" y="1631.50"></text></g><g><title>core::hash::Hasher::write_usize (18 samples, 0.02%)</title><rect x="57.7723%" y="1605" width="0.0168%" height="15" fill="rgb(253,129,28)" fg:x="62029" fg:w="18"/><text x="58.0223%" y="1615.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.01%)</title><rect x="57.8133%" y="1541" width="0.0149%" height="15" fill="rgb(252,99,33)" fg:x="62073" fg:w="16"/><text x="58.0633%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.02%)</title><rect x="57.8049%" y="1557" width="0.0242%" height="15" fill="rgb(208,123,45)" fg:x="62064" fg:w="26"/><text x="58.0549%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (65 samples, 0.06%)</title><rect x="57.7723%" y="1669" width="0.0605%" height="15" fill="rgb(251,106,12)" fg:x="62029" fg:w="65"/><text x="58.0223%" y="1679.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (65 samples, 0.06%)</title><rect x="57.7723%" y="1653" width="0.0605%" height="15" fill="rgb(240,209,35)" fg:x="62029" fg:w="65"/><text x="58.0223%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (65 samples, 0.06%)</title><rect x="57.7723%" y="1637" width="0.0605%" height="15" fill="rgb(214,52,50)" fg:x="62029" fg:w="65"/><text x="58.0223%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (47 samples, 0.04%)</title><rect x="57.7891%" y="1621" width="0.0438%" height="15" fill="rgb(234,119,4)" fg:x="62047" fg:w="47"/><text x="58.0391%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (47 samples, 0.04%)</title><rect x="57.7891%" y="1605" width="0.0438%" height="15" fill="rgb(228,181,36)" fg:x="62047" fg:w="47"/><text x="58.0391%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (47 samples, 0.04%)</title><rect x="57.7891%" y="1589" width="0.0438%" height="15" fill="rgb(213,171,42)" fg:x="62047" fg:w="47"/><text x="58.0391%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.04%)</title><rect x="57.7891%" y="1573" width="0.0438%" height="15" fill="rgb(239,14,41)" fg:x="62047" fg:w="47"/><text x="58.0391%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.02%)</title><rect x="57.8422%" y="1557" width="0.0214%" height="15" fill="rgb(239,111,46)" fg:x="62104" fg:w="23"/><text x="58.0922%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74 samples, 0.07%)</title><rect x="57.8329%" y="1573" width="0.0689%" height="15" fill="rgb(214,72,7)" fg:x="62094" fg:w="74"/><text x="58.0829%" y="1583.50"></text></g><g><title>core::hash::sip::u8to64_le (41 samples, 0.04%)</title><rect x="57.8636%" y="1557" width="0.0382%" height="15" fill="rgb(221,114,1)" fg:x="62127" fg:w="41"/><text x="58.1136%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.03%)</title><rect x="57.8757%" y="1541" width="0.0261%" height="15" fill="rgb(213,143,14)" fg:x="62140" fg:w="28"/><text x="58.1257%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (215 samples, 0.20%)</title><rect x="57.7165%" y="1733" width="0.2002%" height="15" fill="rgb(220,221,53)" fg:x="61969" fg:w="215"/><text x="57.9665%" y="1743.50"></text></g><g><title>core::hash::BuildHasher::hash_one (212 samples, 0.20%)</title><rect x="57.7192%" y="1717" width="0.1975%" height="15" fill="rgb(236,189,27)" fg:x="61972" fg:w="212"/><text x="57.9692%" y="1727.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (155 samples, 0.14%)</title><rect x="57.7723%" y="1701" width="0.1444%" height="15" fill="rgb(252,139,49)" fg:x="62029" fg:w="155"/><text x="58.0223%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (155 samples, 0.14%)</title><rect x="57.7723%" y="1685" width="0.1444%" height="15" fill="rgb(231,158,33)" fg:x="62029" fg:w="155"/><text x="58.0223%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (90 samples, 0.08%)</title><rect x="57.8329%" y="1669" width="0.0838%" height="15" fill="rgb(207,201,15)" fg:x="62094" fg:w="90"/><text x="58.0829%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (90 samples, 0.08%)</title><rect x="57.8329%" y="1653" width="0.0838%" height="15" fill="rgb(218,43,48)" fg:x="62094" fg:w="90"/><text x="58.0829%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (90 samples, 0.08%)</title><rect x="57.8329%" y="1637" width="0.0838%" height="15" fill="rgb(244,63,52)" fg:x="62094" fg:w="90"/><text x="58.0829%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (90 samples, 0.08%)</title><rect x="57.8329%" y="1621" width="0.0838%" height="15" fill="rgb(236,60,17)" fg:x="62094" fg:w="90"/><text x="58.0829%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (90 samples, 0.08%)</title><rect x="57.8329%" y="1605" width="0.0838%" height="15" fill="rgb(205,206,29)" fg:x="62094" fg:w="90"/><text x="58.0829%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (90 samples, 0.08%)</title><rect x="57.8329%" y="1589" width="0.0838%" height="15" fill="rgb(205,209,35)" fg:x="62094" fg:w="90"/><text x="58.0829%" y="1599.50"></text></g><g><title>core::hash::Hasher::write_u8 (16 samples, 0.01%)</title><rect x="57.9018%" y="1573" width="0.0149%" height="15" fill="rgb(227,112,14)" fg:x="62168" fg:w="16"/><text x="58.1518%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="57.9018%" y="1557" width="0.0149%" height="15" fill="rgb(248,151,9)" fg:x="62168" fg:w="16"/><text x="58.1518%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (44 samples, 0.04%)</title><rect x="57.9335%" y="1637" width="0.0410%" height="15" fill="rgb(247,45,40)" fg:x="62202" fg:w="44"/><text x="58.1835%" y="1647.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (44 samples, 0.04%)</title><rect x="57.9335%" y="1621" width="0.0410%" height="15" fill="rgb(232,185,16)" fg:x="62202" fg:w="44"/><text x="58.1835%" y="1631.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (44 samples, 0.04%)</title><rect x="57.9335%" y="1605" width="0.0410%" height="15" fill="rgb(215,45,44)" fg:x="62202" fg:w="44"/><text x="58.1835%" y="1615.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (88 samples, 0.08%)</title><rect x="57.9335%" y="1669" width="0.0820%" height="15" fill="rgb(206,69,32)" fg:x="62202" fg:w="88"/><text x="58.1835%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (88 samples, 0.08%)</title><rect x="57.9335%" y="1653" width="0.0820%" height="15" fill="rgb(233,98,50)" fg:x="62202" fg:w="88"/><text x="58.1835%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (44 samples, 0.04%)</title><rect x="57.9744%" y="1637" width="0.0410%" height="15" fill="rgb(232,217,52)" fg:x="62246" fg:w="44"/><text x="58.2244%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (44 samples, 0.04%)</title><rect x="57.9744%" y="1621" width="0.0410%" height="15" fill="rgb(250,42,51)" fg:x="62246" fg:w="44"/><text x="58.2244%" y="1631.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (44 samples, 0.04%)</title><rect x="57.9744%" y="1605" width="0.0410%" height="15" fill="rgb(241,200,26)" fg:x="62246" fg:w="44"/><text x="58.2244%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (44 samples, 0.04%)</title><rect x="57.9744%" y="1589" width="0.0410%" height="15" fill="rgb(207,10,32)" fg:x="62246" fg:w="44"/><text x="58.2244%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (44 samples, 0.04%)</title><rect x="57.9744%" y="1573" width="0.0410%" height="15" fill="rgb(214,63,15)" fg:x="62246" fg:w="44"/><text x="58.2244%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (44 samples, 0.04%)</title><rect x="57.9744%" y="1557" width="0.0410%" height="15" fill="rgb(234,176,14)" fg:x="62246" fg:w="44"/><text x="58.2244%" y="1567.50"></text></g><g><title>[libc.so.6] (43 samples, 0.04%)</title><rect x="57.9754%" y="1541" width="0.0400%" height="15" fill="rgb(226,104,52)" fg:x="62247" fg:w="43"/><text x="58.2254%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (98 samples, 0.09%)</title><rect x="57.9260%" y="1685" width="0.0913%" height="15" fill="rgb(211,222,1)" fg:x="62194" fg:w="98"/><text x="58.1760%" y="1695.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (15 samples, 0.01%)</title><rect x="58.0229%" y="1685" width="0.0140%" height="15" fill="rgb(237,7,3)" fg:x="62298" fg:w="15"/><text x="58.2729%" y="1695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.01%)</title><rect x="58.0229%" y="1669" width="0.0140%" height="15" fill="rgb(218,143,7)" fg:x="62298" fg:w="15"/><text x="58.2729%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="58.0229%" y="1653" width="0.0140%" height="15" fill="rgb(208,25,22)" fg:x="62298" fg:w="15"/><text x="58.2729%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (418 samples, 0.39%)</title><rect x="57.6531%" y="1829" width="0.3893%" height="15" fill="rgb(228,127,16)" fg:x="61901" fg:w="418"/><text x="57.9031%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (414 samples, 0.39%)</title><rect x="57.6568%" y="1813" width="0.3856%" height="15" fill="rgb(237,86,27)" fg:x="61905" fg:w="414"/><text x="57.9068%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (357 samples, 0.33%)</title><rect x="57.7099%" y="1797" width="0.3325%" height="15" fill="rgb(207,125,19)" fg:x="61962" fg:w="357"/><text x="57.9599%" y="1807.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (353 samples, 0.33%)</title><rect x="57.7137%" y="1781" width="0.3288%" height="15" fill="rgb(243,195,0)" fg:x="61966" fg:w="353"/><text x="57.9637%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (353 samples, 0.33%)</title><rect x="57.7137%" y="1765" width="0.3288%" height="15" fill="rgb(230,95,18)" fg:x="61966" fg:w="353"/><text x="57.9637%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (353 samples, 0.33%)</title><rect x="57.7137%" y="1749" width="0.3288%" height="15" fill="rgb(232,157,21)" fg:x="61966" fg:w="353"/><text x="57.9637%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (135 samples, 0.13%)</title><rect x="57.9167%" y="1733" width="0.1257%" height="15" fill="rgb(212,120,50)" fg:x="62184" fg:w="135"/><text x="58.1667%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (135 samples, 0.13%)</title><rect x="57.9167%" y="1717" width="0.1257%" height="15" fill="rgb(222,204,44)" fg:x="62184" fg:w="135"/><text x="58.1667%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (135 samples, 0.13%)</title><rect x="57.9167%" y="1701" width="0.1257%" height="15" fill="rgb(236,6,33)" fg:x="62184" fg:w="135"/><text x="58.1667%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (38 samples, 0.04%)</title><rect x="58.0434%" y="1829" width="0.0354%" height="15" fill="rgb(247,11,38)" fg:x="62320" fg:w="38"/><text x="58.2934%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (38 samples, 0.04%)</title><rect x="58.0434%" y="1813" width="0.0354%" height="15" fill="rgb(215,111,0)" fg:x="62320" fg:w="38"/><text x="58.2934%" y="1823.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (35 samples, 0.03%)</title><rect x="58.0462%" y="1797" width="0.0326%" height="15" fill="rgb(211,65,46)" fg:x="62323" fg:w="35"/><text x="58.2962%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (34 samples, 0.03%)</title><rect x="58.0471%" y="1781" width="0.0317%" height="15" fill="rgb(216,5,12)" fg:x="62324" fg:w="34"/><text x="58.2971%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (26 samples, 0.02%)</title><rect x="58.0545%" y="1765" width="0.0242%" height="15" fill="rgb(226,7,2)" fg:x="62332" fg:w="26"/><text x="58.3045%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (37 samples, 0.03%)</title><rect x="58.0788%" y="1829" width="0.0345%" height="15" fill="rgb(242,116,12)" fg:x="62358" fg:w="37"/><text x="58.3288%" y="1839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (33 samples, 0.03%)</title><rect x="58.0825%" y="1813" width="0.0307%" height="15" fill="rgb(249,209,7)" fg:x="62362" fg:w="33"/><text x="58.3325%" y="1823.50"></text></g><g><title>core::cmp::PartialEq::ne (33 samples, 0.03%)</title><rect x="58.0825%" y="1797" width="0.0307%" height="15" fill="rgb(232,73,17)" fg:x="62362" fg:w="33"/><text x="58.3325%" y="1807.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (33 samples, 0.03%)</title><rect x="58.0825%" y="1781" width="0.0307%" height="15" fill="rgb(214,13,32)" fg:x="62362" fg:w="33"/><text x="58.3325%" y="1791.50"></text></g><g><title>[libc.so.6] (42 samples, 0.04%)</title><rect x="58.1561%" y="1701" width="0.0391%" height="15" fill="rgb(221,125,10)" fg:x="62441" fg:w="42"/><text x="58.4061%" y="1711.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (81 samples, 0.08%)</title><rect x="58.1207%" y="1813" width="0.0754%" height="15" fill="rgb(246,7,44)" fg:x="62403" fg:w="81"/><text x="58.3707%" y="1823.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (76 samples, 0.07%)</title><rect x="58.1253%" y="1797" width="0.0708%" height="15" fill="rgb(239,18,35)" fg:x="62408" fg:w="76"/><text x="58.3753%" y="1807.50"></text></g><g><title>alloc::alloc::exchange_malloc (69 samples, 0.06%)</title><rect x="58.1318%" y="1781" width="0.0643%" height="15" fill="rgb(250,222,16)" fg:x="62415" fg:w="69"/><text x="58.3818%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.06%)</title><rect x="58.1318%" y="1765" width="0.0643%" height="15" fill="rgb(219,100,8)" fg:x="62415" fg:w="69"/><text x="58.3818%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 0.06%)</title><rect x="58.1318%" y="1749" width="0.0643%" height="15" fill="rgb(240,62,13)" fg:x="62415" fg:w="69"/><text x="58.3818%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (69 samples, 0.06%)</title><rect x="58.1318%" y="1733" width="0.0643%" height="15" fill="rgb(253,194,2)" fg:x="62415" fg:w="69"/><text x="58.3818%" y="1743.50"></text></g><g><title>malloc (67 samples, 0.06%)</title><rect x="58.1337%" y="1717" width="0.0624%" height="15" fill="rgb(235,58,31)" fg:x="62417" fg:w="67"/><text x="58.3837%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.08%)</title><rect x="58.2036%" y="1685" width="0.0801%" height="15" fill="rgb(231,37,11)" fg:x="62492" fg:w="86"/><text x="58.4536%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.08%)</title><rect x="58.2036%" y="1669" width="0.0801%" height="15" fill="rgb(235,133,0)" fg:x="62492" fg:w="86"/><text x="58.4536%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (85 samples, 0.08%)</title><rect x="58.2045%" y="1653" width="0.0792%" height="15" fill="rgb(212,185,40)" fg:x="62493" fg:w="85"/><text x="58.4545%" y="1663.50"></text></g><g><title>malloc (83 samples, 0.08%)</title><rect x="58.2064%" y="1637" width="0.0773%" height="15" fill="rgb(216,68,42)" fg:x="62495" fg:w="83"/><text x="58.4564%" y="1647.50"></text></g><g><title>[libc.so.6] (38 samples, 0.04%)</title><rect x="58.2483%" y="1621" width="0.0354%" height="15" fill="rgb(239,81,4)" fg:x="62540" fg:w="38"/><text x="58.4983%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (184 samples, 0.17%)</title><rect x="58.1132%" y="1829" width="0.1714%" height="15" fill="rgb(206,86,6)" fg:x="62395" fg:w="184"/><text x="58.3632%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (95 samples, 0.09%)</title><rect x="58.1961%" y="1813" width="0.0885%" height="15" fill="rgb(249,95,27)" fg:x="62484" fg:w="95"/><text x="58.4461%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (95 samples, 0.09%)</title><rect x="58.1961%" y="1797" width="0.0885%" height="15" fill="rgb(205,155,45)" fg:x="62484" fg:w="95"/><text x="58.4461%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (95 samples, 0.09%)</title><rect x="58.1961%" y="1781" width="0.0885%" height="15" fill="rgb(213,55,42)" fg:x="62484" fg:w="95"/><text x="58.4461%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (95 samples, 0.09%)</title><rect x="58.1961%" y="1765" width="0.0885%" height="15" fill="rgb(249,197,4)" fg:x="62484" fg:w="95"/><text x="58.4461%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (89 samples, 0.08%)</title><rect x="58.2017%" y="1749" width="0.0829%" height="15" fill="rgb(212,128,32)" fg:x="62490" fg:w="89"/><text x="58.4517%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (89 samples, 0.08%)</title><rect x="58.2017%" y="1733" width="0.0829%" height="15" fill="rgb(252,47,30)" fg:x="62490" fg:w="89"/><text x="58.4517%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (89 samples, 0.08%)</title><rect x="58.2017%" y="1717" width="0.0829%" height="15" fill="rgb(209,79,18)" fg:x="62490" fg:w="89"/><text x="58.4517%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (89 samples, 0.08%)</title><rect x="58.2017%" y="1701" width="0.0829%" height="15" fill="rgb(225,81,38)" fg:x="62490" fg:w="89"/><text x="58.4517%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (1,154 samples, 1.07%)</title><rect x="57.2722%" y="1845" width="1.0748%" height="15" fill="rgb(205,95,16)" fg:x="61492" fg:w="1154"/><text x="57.5222%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (67 samples, 0.06%)</title><rect x="58.2846%" y="1829" width="0.0624%" height="15" fill="rgb(214,30,4)" fg:x="62579" fg:w="67"/><text x="58.5346%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (17 samples, 0.02%)</title><rect x="58.3312%" y="1813" width="0.0158%" height="15" fill="rgb(232,137,22)" fg:x="62629" fg:w="17"/><text x="58.5812%" y="1823.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="58.3554%" y="1765" width="0.0168%" height="15" fill="rgb(232,156,19)" fg:x="62655" fg:w="18"/><text x="58.6054%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (43 samples, 0.04%)</title><rect x="58.3470%" y="1845" width="0.0400%" height="15" fill="rgb(248,157,26)" fg:x="62646" fg:w="43"/><text x="58.5970%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (38 samples, 0.04%)</title><rect x="58.3517%" y="1829" width="0.0354%" height="15" fill="rgb(242,24,3)" fg:x="62651" fg:w="38"/><text x="58.6017%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.04%)</title><rect x="58.3517%" y="1813" width="0.0354%" height="15" fill="rgb(218,195,48)" fg:x="62651" fg:w="38"/><text x="58.6017%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.04%)</title><rect x="58.3517%" y="1797" width="0.0354%" height="15" fill="rgb(214,193,36)" fg:x="62651" fg:w="38"/><text x="58.6017%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.04%)</title><rect x="58.3517%" y="1781" width="0.0354%" height="15" fill="rgb(242,110,40)" fg:x="62651" fg:w="38"/><text x="58.6017%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (18 samples, 0.02%)</title><rect x="58.3870%" y="1845" width="0.0168%" height="15" fill="rgb(233,150,26)" fg:x="62689" fg:w="18"/><text x="58.6370%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Function::local_count (14 samples, 0.01%)</title><rect x="58.4150%" y="1845" width="0.0130%" height="15" fill="rgb(239,200,30)" fg:x="62719" fg:w="14"/><text x="58.6650%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Function::name (26 samples, 0.02%)</title><rect x="58.4345%" y="1845" width="0.0242%" height="15" fill="rgb(226,28,11)" fg:x="62740" fg:w="26"/><text x="58.6845%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (12 samples, 0.01%)</title><rect x="58.4625%" y="1829" width="0.0112%" height="15" fill="rgb(220,26,48)" fg:x="62770" fg:w="12"/><text x="58.7125%" y="1839.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="58.4625%" y="1813" width="0.0112%" height="15" fill="rgb(232,10,11)" fg:x="62770" fg:w="12"/><text x="58.7125%" y="1823.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (12 samples, 0.01%)</title><rect x="58.4625%" y="1797" width="0.0112%" height="15" fill="rgb(252,143,50)" fg:x="62770" fg:w="12"/><text x="58.7125%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (160 samples, 0.15%)</title><rect x="58.4588%" y="1845" width="0.1490%" height="15" fill="rgb(206,58,22)" fg:x="62766" fg:w="160"/><text x="58.7088%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (140 samples, 0.13%)</title><rect x="58.4774%" y="1829" width="0.1304%" height="15" fill="rgb(250,9,45)" fg:x="62786" fg:w="140"/><text x="58.7274%" y="1839.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (139 samples, 0.13%)</title><rect x="58.4783%" y="1813" width="0.1295%" height="15" fill="rgb(225,148,14)" fg:x="62787" fg:w="139"/><text x="58.7283%" y="1823.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.03%)</title><rect x="58.5770%" y="1797" width="0.0307%" height="15" fill="rgb(205,178,40)" fg:x="62893" fg:w="33"/><text x="58.8270%" y="1807.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.03%)</title><rect x="58.5770%" y="1781" width="0.0307%" height="15" fill="rgb(215,201,4)" fg:x="62893" fg:w="33"/><text x="58.8270%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (55 samples, 0.05%)</title><rect x="58.6078%" y="1845" width="0.0512%" height="15" fill="rgb(219,223,24)" fg:x="62926" fg:w="55"/><text x="58.8578%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Module::function_at (13 samples, 0.01%)</title><rect x="58.6469%" y="1829" width="0.0121%" height="15" fill="rgb(217,19,31)" fg:x="62968" fg:w="13"/><text x="58.8969%" y="1839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="58.6851%" y="1829" width="0.0317%" height="15" fill="rgb(235,33,3)" fg:x="63009" fg:w="34"/><text x="58.9351%" y="1839.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.01%)</title><rect x="58.7167%" y="1781" width="0.0149%" height="15" fill="rgb(221,39,18)" fg:x="63043" fg:w="16"/><text x="58.9667%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="58.7167%" y="1813" width="0.0158%" height="15" fill="rgb(242,162,33)" fg:x="63043" fg:w="17"/><text x="58.9667%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="58.7167%" y="1797" width="0.0158%" height="15" fill="rgb(233,215,28)" fg:x="63043" fg:w="17"/><text x="58.9667%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.02%)</title><rect x="58.7167%" y="1829" width="0.0168%" height="15" fill="rgb(212,117,9)" fg:x="63043" fg:w="18"/><text x="58.9667%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="58.7577%" y="1765" width="0.0121%" height="15" fill="rgb(237,70,47)" fg:x="63087" fg:w="13"/><text x="59.0077%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="58.7577%" y="1749" width="0.0121%" height="15" fill="rgb(206,177,13)" fg:x="63087" fg:w="13"/><text x="59.0077%" y="1759.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="58.7577%" y="1733" width="0.0121%" height="15" fill="rgb(209,174,33)" fg:x="63087" fg:w="13"/><text x="59.0077%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (39 samples, 0.04%)</title><rect x="58.7344%" y="1829" width="0.0363%" height="15" fill="rgb(226,6,11)" fg:x="63062" fg:w="39"/><text x="58.9844%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (14 samples, 0.01%)</title><rect x="58.7577%" y="1813" width="0.0130%" height="15" fill="rgb(240,214,6)" fg:x="63087" fg:w="14"/><text x="59.0077%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (14 samples, 0.01%)</title><rect x="58.7577%" y="1797" width="0.0130%" height="15" fill="rgb(254,214,40)" fg:x="63087" fg:w="14"/><text x="59.0077%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="58.7577%" y="1781" width="0.0130%" height="15" fill="rgb(230,187,15)" fg:x="63087" fg:w="14"/><text x="59.0077%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (158 samples, 0.15%)</title><rect x="58.6627%" y="1845" width="0.1472%" height="15" fill="rgb(250,11,27)" fg:x="62985" fg:w="158"/><text x="58.9127%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (39 samples, 0.04%)</title><rect x="58.7736%" y="1829" width="0.0363%" height="15" fill="rgb(243,107,19)" fg:x="63104" fg:w="39"/><text x="59.0236%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (39 samples, 0.04%)</title><rect x="58.7736%" y="1813" width="0.0363%" height="15" fill="rgb(253,66,26)" fg:x="63104" fg:w="39"/><text x="59.0236%" y="1823.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (20 samples, 0.02%)</title><rect x="58.7913%" y="1797" width="0.0186%" height="15" fill="rgb(228,43,8)" fg:x="63123" fg:w="20"/><text x="59.0413%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (17 samples, 0.02%)</title><rect x="58.7941%" y="1781" width="0.0158%" height="15" fill="rgb(232,197,36)" fg:x="63126" fg:w="17"/><text x="59.0441%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="58.8443%" y="1813" width="0.0158%" height="15" fill="rgb(221,182,31)" fg:x="63180" fg:w="17"/><text x="59.0943%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="58.8471%" y="1797" width="0.0130%" height="15" fill="rgb(244,25,36)" fg:x="63183" fg:w="14"/><text x="59.0971%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.02%)</title><rect x="58.8434%" y="1829" width="0.0214%" height="15" fill="rgb(247,101,19)" fg:x="63179" fg:w="23"/><text x="59.0934%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (77 samples, 0.07%)</title><rect x="58.8099%" y="1845" width="0.0717%" height="15" fill="rgb(223,117,19)" fg:x="63143" fg:w="77"/><text x="59.0599%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (15 samples, 0.01%)</title><rect x="58.8816%" y="1845" width="0.0140%" height="15" fill="rgb(249,63,38)" fg:x="63220" fg:w="15"/><text x="59.1316%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (12,585 samples, 11.72%)</title><rect x="47.2105%" y="1861" width="11.7214%" height="15" fill="rgb(220,143,23)" fg:x="50689" fg:w="12585"/><text x="47.4605%" y="1871.50">move_vm_runtime::..</text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (39 samples, 0.04%)</title><rect x="58.8956%" y="1845" width="0.0363%" height="15" fill="rgb(252,183,22)" fg:x="63235" fg:w="39"/><text x="59.1456%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (12 samples, 0.01%)</title><rect x="58.9207%" y="1829" width="0.0112%" height="15" fill="rgb(243,176,15)" fg:x="63262" fg:w="12"/><text x="59.1707%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::new (12 samples, 0.01%)</title><rect x="58.9319%" y="1861" width="0.0112%" height="15" fill="rgb(244,204,46)" fg:x="63274" fg:w="12"/><text x="59.1819%" y="1871.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (12,610 samples, 11.74%)</title><rect x="47.2003%" y="1877" width="11.7447%" height="15" fill="rgb(227,28,54)" fg:x="50678" fg:w="12610"/><text x="47.4503%" y="1887.50">move_vm_runtime::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="59.0101%" y="1541" width="0.0102%" height="15" fill="rgb(231,10,15)" fg:x="63358" fg:w="11"/><text x="59.2601%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="59.0101%" y="1525" width="0.0102%" height="15" fill="rgb(210,200,17)" fg:x="63358" fg:w="11"/><text x="59.2601%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="59.0101%" y="1509" width="0.0102%" height="15" fill="rgb(251,106,46)" fg:x="63358" fg:w="11"/><text x="59.2601%" y="1519.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="59.0474%" y="1509" width="0.0140%" height="15" fill="rgb(218,211,15)" fg:x="63398" fg:w="15"/><text x="59.2974%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.01%)</title><rect x="59.0614%" y="1509" width="0.0149%" height="15" fill="rgb(239,62,10)" fg:x="63413" fg:w="16"/><text x="59.3114%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (13 samples, 0.01%)</title><rect x="59.0642%" y="1493" width="0.0121%" height="15" fill="rgb(225,53,53)" fg:x="63416" fg:w="13"/><text x="59.3142%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (13 samples, 0.01%)</title><rect x="59.0642%" y="1477" width="0.0121%" height="15" fill="rgb(207,16,24)" fg:x="63416" fg:w="13"/><text x="59.3142%" y="1487.50"></text></g><g><title>bcs::de::from_bytes_seed (55 samples, 0.05%)</title><rect x="59.0306%" y="1525" width="0.0512%" height="15" fill="rgb(217,52,28)" fg:x="63380" fg:w="55"/><text x="59.2806%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (111 samples, 0.10%)</title><rect x="58.9822%" y="1605" width="0.1034%" height="15" fill="rgb(246,1,5)" fg:x="63328" fg:w="111"/><text x="59.2322%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (111 samples, 0.10%)</title><rect x="58.9822%" y="1589" width="0.1034%" height="15" fill="rgb(221,29,26)" fg:x="63328" fg:w="111"/><text x="59.2322%" y="1599.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (108 samples, 0.10%)</title><rect x="58.9850%" y="1573" width="0.1006%" height="15" fill="rgb(250,133,32)" fg:x="63331" fg:w="108"/><text x="59.2350%" y="1583.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (103 samples, 0.10%)</title><rect x="58.9896%" y="1557" width="0.0959%" height="15" fill="rgb(236,63,16)" fg:x="63336" fg:w="103"/><text x="59.2396%" y="1567.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (64 samples, 0.06%)</title><rect x="59.0260%" y="1541" width="0.0596%" height="15" fill="rgb(231,159,14)" fg:x="63375" fg:w="64"/><text x="59.2760%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (134 samples, 0.12%)</title><rect x="58.9766%" y="1653" width="0.1248%" height="15" fill="rgb(207,102,36)" fg:x="63322" fg:w="134"/><text x="59.2266%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (133 samples, 0.12%)</title><rect x="58.9775%" y="1637" width="0.1239%" height="15" fill="rgb(230,224,31)" fg:x="63323" fg:w="133"/><text x="59.2275%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (133 samples, 0.12%)</title><rect x="58.9775%" y="1621" width="0.1239%" height="15" fill="rgb(215,182,16)" fg:x="63323" fg:w="133"/><text x="59.2275%" y="1631.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="59.0874%" y="1605" width="0.0140%" height="15" fill="rgb(226,113,2)" fg:x="63441" fg:w="15"/><text x="59.3374%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (139 samples, 0.13%)</title><rect x="58.9766%" y="1685" width="0.1295%" height="15" fill="rgb(241,18,35)" fg:x="63322" fg:w="139"/><text x="59.2266%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (139 samples, 0.13%)</title><rect x="58.9766%" y="1669" width="0.1295%" height="15" fill="rgb(240,165,44)" fg:x="63322" fg:w="139"/><text x="59.2266%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.14%)</title><rect x="58.9766%" y="1701" width="0.1388%" height="15" fill="rgb(229,130,47)" fg:x="63322" fg:w="149"/><text x="59.2266%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.03%)</title><rect x="59.1154%" y="1701" width="0.0317%" height="15" fill="rgb(223,93,7)" fg:x="63471" fg:w="34"/><text x="59.3654%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.03%)</title><rect x="59.1154%" y="1685" width="0.0317%" height="15" fill="rgb(205,180,36)" fg:x="63471" fg:w="34"/><text x="59.3654%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.03%)</title><rect x="59.1154%" y="1669" width="0.0317%" height="15" fill="rgb(221,103,28)" fg:x="63471" fg:w="34"/><text x="59.3654%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.03%)</title><rect x="59.1163%" y="1653" width="0.0307%" height="15" fill="rgb(212,4,3)" fg:x="63472" fg:w="33"/><text x="59.3663%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="59.1172%" y="1637" width="0.0298%" height="15" fill="rgb(209,221,53)" fg:x="63473" fg:w="32"/><text x="59.3672%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (32 samples, 0.03%)</title><rect x="59.1172%" y="1621" width="0.0298%" height="15" fill="rgb(233,229,52)" fg:x="63473" fg:w="32"/><text x="59.3672%" y="1631.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.03%)</title><rect x="59.1172%" y="1605" width="0.0298%" height="15" fill="rgb(254,127,37)" fg:x="63473" fg:w="32"/><text x="59.3672%" y="1615.50"></text></g><g><title>alloc::alloc::realloc (32 samples, 0.03%)</title><rect x="59.1172%" y="1589" width="0.0298%" height="15" fill="rgb(207,161,26)" fg:x="63473" fg:w="32"/><text x="59.3672%" y="1599.50"></text></g><g><title>realloc (31 samples, 0.03%)</title><rect x="59.1182%" y="1573" width="0.0289%" height="15" fill="rgb(223,75,5)" fg:x="63474" fg:w="31"/><text x="59.3682%" y="1583.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="59.1219%" y="1557" width="0.0251%" height="15" fill="rgb(235,115,52)" fg:x="63478" fg:w="27"/><text x="59.3719%" y="1567.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="59.1266%" y="1541" width="0.0205%" height="15" fill="rgb(240,91,46)" fg:x="63483" fg:w="22"/><text x="59.3766%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="59.1470%" y="1701" width="0.0289%" height="15" fill="rgb(251,144,21)" fg:x="63505" fg:w="31"/><text x="59.3970%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="59.1470%" y="1685" width="0.0289%" height="15" fill="rgb(247,220,47)" fg:x="63505" fg:w="31"/><text x="59.3970%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="59.1470%" y="1669" width="0.0289%" height="15" fill="rgb(253,122,1)" fg:x="63505" fg:w="31"/><text x="59.3970%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="59.1470%" y="1653" width="0.0289%" height="15" fill="rgb(221,0,24)" fg:x="63505" fg:w="31"/><text x="59.3970%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (23 samples, 0.02%)</title><rect x="59.1545%" y="1637" width="0.0214%" height="15" fill="rgb(220,204,54)" fg:x="63513" fg:w="23"/><text x="59.4045%" y="1647.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="59.1573%" y="1621" width="0.0186%" height="15" fill="rgb(205,96,25)" fg:x="63516" fg:w="20"/><text x="59.4073%" y="1631.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="59.1610%" y="1605" width="0.0149%" height="15" fill="rgb(247,77,20)" fg:x="63520" fg:w="16"/><text x="59.4110%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (234 samples, 0.22%)</title><rect x="58.9692%" y="1733" width="0.2179%" height="15" fill="rgb(245,151,8)" fg:x="63314" fg:w="234"/><text x="59.2192%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (233 samples, 0.22%)</title><rect x="58.9701%" y="1717" width="0.2170%" height="15" fill="rgb(242,158,39)" fg:x="63315" fg:w="233"/><text x="59.2201%" y="1727.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="59.1759%" y="1701" width="0.0112%" height="15" fill="rgb(222,214,50)" fg:x="63536" fg:w="12"/><text x="59.4259%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (13 samples, 0.01%)</title><rect x="59.2076%" y="1573" width="0.0121%" height="15" fill="rgb(229,60,39)" fg:x="63570" fg:w="13"/><text x="59.4576%" y="1583.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (54 samples, 0.05%)</title><rect x="59.2588%" y="1429" width="0.0503%" height="15" fill="rgb(240,148,18)" fg:x="63625" fg:w="54"/><text x="59.5088%" y="1439.50"></text></g><g><title>serde::de::SeqAccess::next_element (45 samples, 0.04%)</title><rect x="59.2672%" y="1413" width="0.0419%" height="15" fill="rgb(215,96,11)" fg:x="63634" fg:w="45"/><text x="59.5172%" y="1423.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (45 samples, 0.04%)</title><rect x="59.2672%" y="1397" width="0.0419%" height="15" fill="rgb(238,162,53)" fg:x="63634" fg:w="45"/><text x="59.5172%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (44 samples, 0.04%)</title><rect x="59.2681%" y="1381" width="0.0410%" height="15" fill="rgb(214,83,18)" fg:x="63635" fg:w="44"/><text x="59.5181%" y="1391.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (44 samples, 0.04%)</title><rect x="59.2681%" y="1365" width="0.0410%" height="15" fill="rgb(248,117,24)" fg:x="63635" fg:w="44"/><text x="59.5181%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (44 samples, 0.04%)</title><rect x="59.2681%" y="1349" width="0.0410%" height="15" fill="rgb(238,190,6)" fg:x="63635" fg:w="44"/><text x="59.5181%" y="1359.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (42 samples, 0.04%)</title><rect x="59.2700%" y="1333" width="0.0391%" height="15" fill="rgb(213,51,6)" fg:x="63637" fg:w="42"/><text x="59.5200%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::next (12 samples, 0.01%)</title><rect x="59.2979%" y="1317" width="0.0112%" height="15" fill="rgb(212,136,1)" fg:x="63667" fg:w="12"/><text x="59.5479%" y="1327.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.01%)</title><rect x="59.2989%" y="1301" width="0.0102%" height="15" fill="rgb(221,192,14)" fg:x="63668" fg:w="11"/><text x="59.5489%" y="1311.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.01%)</title><rect x="59.2989%" y="1285" width="0.0102%" height="15" fill="rgb(244,38,54)" fg:x="63668" fg:w="11"/><text x="59.5489%" y="1295.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="59.2989%" y="1269" width="0.0102%" height="15" fill="rgb(240,45,28)" fg:x="63668" fg:w="11"/><text x="59.5489%" y="1279.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="59.2989%" y="1253" width="0.0102%" height="15" fill="rgb(240,123,12)" fg:x="63668" fg:w="11"/><text x="59.5489%" y="1263.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.01%)</title><rect x="59.2989%" y="1237" width="0.0102%" height="15" fill="rgb(216,14,30)" fg:x="63668" fg:w="11"/><text x="59.5489%" y="1247.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (11 samples, 0.01%)</title><rect x="59.2989%" y="1221" width="0.0102%" height="15" fill="rgb(212,50,24)" fg:x="63668" fg:w="11"/><text x="59.5489%" y="1231.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (62 samples, 0.06%)</title><rect x="59.2523%" y="1477" width="0.0577%" height="15" fill="rgb(253,229,47)" fg:x="63618" fg:w="62"/><text x="59.5023%" y="1487.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (58 samples, 0.05%)</title><rect x="59.2560%" y="1461" width="0.0540%" height="15" fill="rgb(214,26,17)" fg:x="63622" fg:w="58"/><text x="59.5060%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (58 samples, 0.05%)</title><rect x="59.2560%" y="1445" width="0.0540%" height="15" fill="rgb(252,60,11)" fg:x="63622" fg:w="58"/><text x="59.5060%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (94 samples, 0.09%)</title><rect x="59.2299%" y="1525" width="0.0875%" height="15" fill="rgb(209,59,37)" fg:x="63594" fg:w="94"/><text x="59.4799%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (72 samples, 0.07%)</title><rect x="59.2504%" y="1509" width="0.0671%" height="15" fill="rgb(228,126,53)" fg:x="63616" fg:w="72"/><text x="59.5004%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (72 samples, 0.07%)</title><rect x="59.2504%" y="1493" width="0.0671%" height="15" fill="rgb(233,99,2)" fg:x="63616" fg:w="72"/><text x="59.5004%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (111 samples, 0.10%)</title><rect x="59.2243%" y="1541" width="0.1034%" height="15" fill="rgb(217,106,34)" fg:x="63588" fg:w="111"/><text x="59.4743%" y="1551.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (11 samples, 0.01%)</title><rect x="59.3175%" y="1525" width="0.0102%" height="15" fill="rgb(222,46,19)" fg:x="63688" fg:w="11"/><text x="59.5675%" y="1535.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="59.3175%" y="1509" width="0.0102%" height="15" fill="rgb(251,87,31)" fg:x="63688" fg:w="11"/><text x="59.5675%" y="1519.50"></text></g><g><title>move_vm_types::values::values_impl::Value::signer (11 samples, 0.01%)</title><rect x="59.3175%" y="1493" width="0.0102%" height="15" fill="rgb(213,70,51)" fg:x="63688" fg:w="11"/><text x="59.5675%" y="1503.50"></text></g><g><title>move_vm_types::values::values_impl::Container::signer (11 samples, 0.01%)</title><rect x="59.3175%" y="1477" width="0.0102%" height="15" fill="rgb(229,144,18)" fg:x="63688" fg:w="11"/><text x="59.5675%" y="1487.50"></text></g><g><title>bcs::de::from_bytes_seed (117 samples, 0.11%)</title><rect x="59.2216%" y="1557" width="0.1090%" height="15" fill="rgb(254,60,26)" fg:x="63585" fg:w="117"/><text x="59.4716%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (155 samples, 0.14%)</title><rect x="59.1880%" y="1637" width="0.1444%" height="15" fill="rgb(243,127,51)" fg:x="63549" fg:w="155"/><text x="59.4380%" y="1647.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (155 samples, 0.14%)</title><rect x="59.1880%" y="1621" width="0.1444%" height="15" fill="rgb(221,51,25)" fg:x="63549" fg:w="155"/><text x="59.4380%" y="1631.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (154 samples, 0.14%)</title><rect x="59.1890%" y="1605" width="0.1434%" height="15" fill="rgb(205,42,7)" fg:x="63550" fg:w="154"/><text x="59.4390%" y="1615.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (145 samples, 0.14%)</title><rect x="59.1973%" y="1589" width="0.1350%" height="15" fill="rgb(236,177,48)" fg:x="63559" fg:w="145"/><text x="59.4473%" y="1599.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (121 samples, 0.11%)</title><rect x="59.2197%" y="1573" width="0.1127%" height="15" fill="rgb(226,79,31)" fg:x="63583" fg:w="121"/><text x="59.4697%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (159 samples, 0.15%)</title><rect x="59.1871%" y="1685" width="0.1481%" height="15" fill="rgb(216,170,12)" fg:x="63548" fg:w="159"/><text x="59.4371%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (158 samples, 0.15%)</title><rect x="59.1880%" y="1669" width="0.1472%" height="15" fill="rgb(208,62,51)" fg:x="63549" fg:w="158"/><text x="59.4380%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (158 samples, 0.15%)</title><rect x="59.1880%" y="1653" width="0.1472%" height="15" fill="rgb(254,129,9)" fg:x="63549" fg:w="158"/><text x="59.4380%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (163 samples, 0.15%)</title><rect x="59.1871%" y="1717" width="0.1518%" height="15" fill="rgb(243,209,31)" fg:x="63548" fg:w="163"/><text x="59.4371%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.15%)</title><rect x="59.1871%" y="1701" width="0.1518%" height="15" fill="rgb(213,159,23)" fg:x="63548" fg:w="163"/><text x="59.4371%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (167 samples, 0.16%)</title><rect x="59.1871%" y="1733" width="0.1555%" height="15" fill="rgb(249,77,39)" fg:x="63548" fg:w="167"/><text x="59.4371%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (422 samples, 0.39%)</title><rect x="58.9524%" y="1861" width="0.3930%" height="15" fill="rgb(230,13,33)" fg:x="63296" fg:w="422"/><text x="59.2024%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (422 samples, 0.39%)</title><rect x="58.9524%" y="1845" width="0.3930%" height="15" fill="rgb(215,215,7)" fg:x="63296" fg:w="422"/><text x="59.2024%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (422 samples, 0.39%)</title><rect x="58.9524%" y="1829" width="0.3930%" height="15" fill="rgb(222,92,25)" fg:x="63296" fg:w="422"/><text x="59.2024%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (416 samples, 0.39%)</title><rect x="58.9580%" y="1813" width="0.3875%" height="15" fill="rgb(215,173,22)" fg:x="63302" fg:w="416"/><text x="59.2080%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (416 samples, 0.39%)</title><rect x="58.9580%" y="1797" width="0.3875%" height="15" fill="rgb(247,205,52)" fg:x="63302" fg:w="416"/><text x="59.2080%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (416 samples, 0.39%)</title><rect x="58.9580%" y="1781" width="0.3875%" height="15" fill="rgb(240,210,37)" fg:x="63302" fg:w="416"/><text x="59.2080%" y="1791.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (415 samples, 0.39%)</title><rect x="58.9589%" y="1765" width="0.3865%" height="15" fill="rgb(224,13,10)" fg:x="63303" fg:w="415"/><text x="59.2089%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (407 samples, 0.38%)</title><rect x="58.9664%" y="1749" width="0.3791%" height="15" fill="rgb(209,48,33)" fg:x="63311" fg:w="407"/><text x="59.2164%" y="1759.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (444 samples, 0.41%)</title><rect x="58.9449%" y="1877" width="0.4135%" height="15" fill="rgb(228,219,23)" fg:x="63288" fg:w="444"/><text x="59.1949%" y="1887.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (14 samples, 0.01%)</title><rect x="59.3454%" y="1861" width="0.0130%" height="15" fill="rgb(239,46,49)" fg:x="63718" fg:w="14"/><text x="59.5954%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="59.3482%" y="1845" width="0.0102%" height="15" fill="rgb(206,172,51)" fg:x="63721" fg:w="11"/><text x="59.5982%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="59.3482%" y="1829" width="0.0102%" height="15" fill="rgb(213,212,35)" fg:x="63721" fg:w="11"/><text x="59.5982%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="59.3482%" y="1813" width="0.0102%" height="15" fill="rgb(252,40,27)" fg:x="63721" fg:w="11"/><text x="59.5982%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="59.3482%" y="1797" width="0.0102%" height="15" fill="rgb(212,33,41)" fg:x="63721" fg:w="11"/><text x="59.5982%" y="1807.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue (14,074 samples, 13.11%)</title><rect x="46.2745%" y="1941" width="13.1082%" height="15" fill="rgb(232,160,27)" fg:x="49684" fg:w="14074"/><text x="46.5245%" y="1951.50">aptos_vm::aptos_vm_i..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (13,758 samples, 12.81%)</title><rect x="46.5688%" y="1925" width="12.8139%" height="15" fill="rgb(244,160,20)" fg:x="50000" fg:w="13758"/><text x="46.8188%" y="1935.50">move_vm_runtime::se..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (13,757 samples, 12.81%)</title><rect x="46.5697%" y="1909" width="12.8129%" height="15" fill="rgb(205,66,20)" fg:x="50001" fg:w="13757"/><text x="46.8197%" y="1919.50">move_vm_runtime::ru..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (13,258 samples, 12.35%)</title><rect x="47.0345%" y="1893" width="12.3482%" height="15" fill="rgb(236,158,6)" fg:x="50500" fg:w="13258"/><text x="47.2845%" y="1903.50">move_vm_runtime::r..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (26 samples, 0.02%)</title><rect x="59.3585%" y="1877" width="0.0242%" height="15" fill="rgb(232,25,36)" fg:x="63732" fg:w="26"/><text x="59.6085%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="59.3650%" y="1861" width="0.0177%" height="15" fill="rgb(220,153,35)" fg:x="63739" fg:w="19"/><text x="59.6150%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="59.3650%" y="1845" width="0.0177%" height="15" fill="rgb(216,5,8)" fg:x="63739" fg:w="19"/><text x="59.6150%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 0.02%)</title><rect x="59.3669%" y="1829" width="0.0158%" height="15" fill="rgb(240,97,3)" fg:x="63741" fg:w="17"/><text x="59.6169%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (14 samples, 0.01%)</title><rect x="59.3696%" y="1813" width="0.0130%" height="15" fill="rgb(220,99,26)" fg:x="63744" fg:w="14"/><text x="59.6196%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.01%)</title><rect x="59.3696%" y="1797" width="0.0130%" height="15" fill="rgb(237,96,2)" fg:x="63744" fg:w="14"/><text x="59.6196%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="59.3696%" y="1781" width="0.0130%" height="15" fill="rgb(217,197,47)" fg:x="63744" fg:w="14"/><text x="59.6196%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="59.3706%" y="1765" width="0.0121%" height="15" fill="rgb(252,133,54)" fg:x="63745" fg:w="13"/><text x="59.6206%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="59.4451%" y="1909" width="0.0186%" height="15" fill="rgb(233,37,30)" fg:x="63825" fg:w="20"/><text x="59.6951%" y="1919.50"></text></g><g><title>aptos_aggregator::aggregator_extension::AggregatorData::into (27 samples, 0.03%)</title><rect x="59.4721%" y="1909" width="0.0251%" height="15" fill="rgb(239,182,12)" fg:x="63854" fg:w="27"/><text x="59.7221%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_aggregator::aggregator_extension::AggregatorID,aptos_aggregator::aggregator_extension::Aggregator&gt;&gt; (11 samples, 0.01%)</title><rect x="59.5019%" y="1909" width="0.0102%" height="15" fill="rgb(245,83,39)" fg:x="63886" fg:w="11"/><text x="59.7519%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="59.5019%" y="1893" width="0.0102%" height="15" fill="rgb(222,109,36)" fg:x="63886" fg:w="11"/><text x="59.7519%" y="1903.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::into_change_set (119 samples, 0.11%)</title><rect x="59.4153%" y="1925" width="0.1108%" height="15" fill="rgb(237,95,44)" fg:x="63793" fg:w="119"/><text x="59.6653%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (55 samples, 0.05%)</title><rect x="59.6369%" y="1621" width="0.0512%" height="15" fill="rgb(216,36,54)" fg:x="64031" fg:w="55"/><text x="59.8869%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (55 samples, 0.05%)</title><rect x="59.6369%" y="1605" width="0.0512%" height="15" fill="rgb(236,164,3)" fg:x="64031" fg:w="55"/><text x="59.8869%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 0.05%)</title><rect x="59.6407%" y="1589" width="0.0475%" height="15" fill="rgb(223,15,21)" fg:x="64035" fg:w="51"/><text x="59.8907%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.05%)</title><rect x="59.6416%" y="1573" width="0.0466%" height="15" fill="rgb(239,191,12)" fg:x="64036" fg:w="50"/><text x="59.8916%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (45 samples, 0.04%)</title><rect x="59.6463%" y="1557" width="0.0419%" height="15" fill="rgb(231,191,37)" fg:x="64041" fg:w="45"/><text x="59.8963%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (43 samples, 0.04%)</title><rect x="59.6481%" y="1541" width="0.0400%" height="15" fill="rgb(209,155,36)" fg:x="64043" fg:w="43"/><text x="59.8981%" y="1551.50"></text></g><g><title>alloc::alloc::Global::grow_impl (43 samples, 0.04%)</title><rect x="59.6481%" y="1525" width="0.0400%" height="15" fill="rgb(216,222,49)" fg:x="64043" fg:w="43"/><text x="59.8981%" y="1535.50"></text></g><g><title>alloc::alloc::realloc (43 samples, 0.04%)</title><rect x="59.6481%" y="1509" width="0.0400%" height="15" fill="rgb(218,181,2)" fg:x="64043" fg:w="43"/><text x="59.8981%" y="1519.50"></text></g><g><title>realloc (42 samples, 0.04%)</title><rect x="59.6491%" y="1493" width="0.0391%" height="15" fill="rgb(239,125,9)" fg:x="64044" fg:w="42"/><text x="59.8991%" y="1503.50"></text></g><g><title>[libc.so.6] (39 samples, 0.04%)</title><rect x="59.6519%" y="1477" width="0.0363%" height="15" fill="rgb(233,103,7)" fg:x="64047" fg:w="39"/><text x="59.9019%" y="1487.50"></text></g><g><title>[libc.so.6] (31 samples, 0.03%)</title><rect x="59.6593%" y="1461" width="0.0289%" height="15" fill="rgb(209,223,5)" fg:x="64055" fg:w="31"/><text x="59.9093%" y="1471.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (66 samples, 0.06%)</title><rect x="59.6332%" y="1781" width="0.0615%" height="15" fill="rgb(234,71,27)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1791.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (66 samples, 0.06%)</title><rect x="59.6332%" y="1765" width="0.0615%" height="15" fill="rgb(251,202,16)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1775.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (66 samples, 0.06%)</title><rect x="59.6332%" y="1749" width="0.0615%" height="15" fill="rgb(231,180,0)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (66 samples, 0.06%)</title><rect x="59.6332%" y="1733" width="0.0615%" height="15" fill="rgb(223,58,28)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1743.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (66 samples, 0.06%)</title><rect x="59.6332%" y="1717" width="0.0615%" height="15" fill="rgb(250,34,24)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1727.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (66 samples, 0.06%)</title><rect x="59.6332%" y="1701" width="0.0615%" height="15" fill="rgb(235,24,16)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1711.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (66 samples, 0.06%)</title><rect x="59.6332%" y="1685" width="0.0615%" height="15" fill="rgb(219,28,33)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (66 samples, 0.06%)</title><rect x="59.6332%" y="1669" width="0.0615%" height="15" fill="rgb(228,150,43)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (66 samples, 0.06%)</title><rect x="59.6332%" y="1653" width="0.0615%" height="15" fill="rgb(221,228,36)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (66 samples, 0.06%)</title><rect x="59.6332%" y="1637" width="0.0615%" height="15" fill="rgb(232,116,17)" fg:x="64027" fg:w="66"/><text x="59.8832%" y="1647.50"></text></g><g><title>bcs::ser::to_bytes (89 samples, 0.08%)</title><rect x="59.6211%" y="1861" width="0.0829%" height="15" fill="rgb(220,110,51)" fg:x="64014" fg:w="89"/><text x="59.8711%" y="1871.50"></text></g><g><title>bcs::ser::serialize_into (88 samples, 0.08%)</title><rect x="59.6220%" y="1845" width="0.0820%" height="15" fill="rgb(207,26,25)" fg:x="64015" fg:w="88"/><text x="59.8720%" y="1855.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (88 samples, 0.08%)</title><rect x="59.6220%" y="1829" width="0.0820%" height="15" fill="rgb(223,58,19)" fg:x="64015" fg:w="88"/><text x="59.8720%" y="1839.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (78 samples, 0.07%)</title><rect x="59.6314%" y="1813" width="0.0726%" height="15" fill="rgb(234,125,39)" fg:x="64025" fg:w="78"/><text x="59.8814%" y="1823.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (78 samples, 0.07%)</title><rect x="59.6314%" y="1797" width="0.0726%" height="15" fill="rgb(241,48,36)" fg:x="64025" fg:w="78"/><text x="59.8814%" y="1807.50"></text></g><g><title>&lt;() as aptos_vm::access_path_cache::AccessPathCache&gt;::get_resource_path (125 samples, 0.12%)</title><rect x="59.6062%" y="1909" width="0.1164%" height="15" fill="rgb(217,148,51)" fg:x="63998" fg:w="125"/><text x="59.8562%" y="1919.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (113 samples, 0.11%)</title><rect x="59.6174%" y="1893" width="0.1052%" height="15" fill="rgb(247,17,25)" fg:x="64010" fg:w="113"/><text x="59.8674%" y="1903.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (111 samples, 0.10%)</title><rect x="59.6193%" y="1877" width="0.1034%" height="15" fill="rgb(219,89,38)" fg:x="64012" fg:w="111"/><text x="59.8693%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (20 samples, 0.02%)</title><rect x="59.7040%" y="1861" width="0.0186%" height="15" fill="rgb(220,145,2)" fg:x="64103" fg:w="20"/><text x="59.9540%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (20 samples, 0.02%)</title><rect x="59.7040%" y="1845" width="0.0186%" height="15" fill="rgb(244,66,47)" fg:x="64103" fg:w="20"/><text x="59.9540%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (17 samples, 0.02%)</title><rect x="59.7068%" y="1829" width="0.0158%" height="15" fill="rgb(226,182,5)" fg:x="64106" fg:w="17"/><text x="59.9568%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (17 samples, 0.02%)</title><rect x="59.7068%" y="1813" width="0.0158%" height="15" fill="rgb(211,98,20)" fg:x="64106" fg:w="17"/><text x="59.9568%" y="1823.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="59.7068%" y="1797" width="0.0158%" height="15" fill="rgb(217,103,52)" fg:x="64106" fg:w="17"/><text x="59.9568%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="59.7068%" y="1781" width="0.0158%" height="15" fill="rgb(208,125,52)" fg:x="64106" fg:w="17"/><text x="59.9568%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="59.7077%" y="1765" width="0.0149%" height="15" fill="rgb(244,70,13)" fg:x="64107" fg:w="16"/><text x="59.9577%" y="1775.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="59.7105%" y="1749" width="0.0121%" height="15" fill="rgb(253,124,3)" fg:x="64110" fg:w="13"/><text x="59.9605%" y="1759.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (53 samples, 0.05%)</title><rect x="59.7804%" y="1861" width="0.0494%" height="15" fill="rgb(222,145,32)" fg:x="64185" fg:w="53"/><text x="60.0304%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (53 samples, 0.05%)</title><rect x="59.7804%" y="1845" width="0.0494%" height="15" fill="rgb(232,183,47)" fg:x="64185" fg:w="53"/><text x="60.0304%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.05%)</title><rect x="59.7832%" y="1829" width="0.0466%" height="15" fill="rgb(246,226,4)" fg:x="64188" fg:w="50"/><text x="60.0332%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.05%)</title><rect x="59.7832%" y="1813" width="0.0466%" height="15" fill="rgb(228,185,46)" fg:x="64188" fg:w="50"/><text x="60.0332%" y="1823.50"></text></g><g><title>cfree (39 samples, 0.04%)</title><rect x="59.7934%" y="1797" width="0.0363%" height="15" fill="rgb(213,196,4)" fg:x="64199" fg:w="39"/><text x="60.0434%" y="1807.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="59.8139%" y="1781" width="0.0158%" height="15" fill="rgb(212,2,45)" fg:x="64221" fg:w="17"/><text x="60.0639%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (70 samples, 0.07%)</title><rect x="59.7776%" y="1877" width="0.0652%" height="15" fill="rgb(217,145,50)" fg:x="64182" fg:w="70"/><text x="60.0276%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (14 samples, 0.01%)</title><rect x="59.8297%" y="1861" width="0.0130%" height="15" fill="rgb(242,10,46)" fg:x="64238" fg:w="14"/><text x="60.0797%" y="1871.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (31 samples, 0.03%)</title><rect x="59.8428%" y="1861" width="0.0289%" height="15" fill="rgb(252,91,48)" fg:x="64252" fg:w="31"/><text x="60.0928%" y="1871.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="59.8605%" y="1845" width="0.0112%" height="15" fill="rgb(216,72,13)" fg:x="64271" fg:w="12"/><text x="60.1105%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (111 samples, 0.10%)</title><rect x="59.7729%" y="1893" width="0.1034%" height="15" fill="rgb(219,6,37)" fg:x="64177" fg:w="111"/><text x="60.0229%" y="1903.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (36 samples, 0.03%)</title><rect x="59.8428%" y="1877" width="0.0335%" height="15" fill="rgb(236,185,40)" fg:x="64252" fg:w="36"/><text x="60.0928%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (152 samples, 0.14%)</title><rect x="59.7357%" y="1909" width="0.1416%" height="15" fill="rgb(208,81,48)" fg:x="64137" fg:w="152"/><text x="59.9857%" y="1919.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaChangeSet::empty (28 samples, 0.03%)</title><rect x="59.8931%" y="1909" width="0.0261%" height="15" fill="rgb(211,42,33)" fg:x="64306" fg:w="28"/><text x="60.1431%" y="1919.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::new (32 samples, 0.03%)</title><rect x="59.9192%" y="1909" width="0.0298%" height="15" fill="rgb(211,90,39)" fg:x="64334" fg:w="32"/><text x="60.1692%" y="1919.50"></text></g><g><title>&lt;&amp;aptos_types::write_set::WriteSet as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="60.0374%" y="1877" width="0.0102%" height="15" fill="rgb(218,136,12)" fg:x="64461" fg:w="11"/><text x="60.2874%" y="1887.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::size (33 samples, 0.03%)</title><rect x="60.0533%" y="1877" width="0.0307%" height="15" fill="rgb(234,12,32)" fg:x="64478" fg:w="33"/><text x="60.3033%" y="1887.50"></text></g><g><title>aptos_types::access_path::AccessPath::size (14 samples, 0.01%)</title><rect x="60.0710%" y="1861" width="0.0130%" height="15" fill="rgb(221,164,18)" fg:x="64497" fg:w="14"/><text x="60.3210%" y="1871.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (14 samples, 0.01%)</title><rect x="60.0710%" y="1845" width="0.0130%" height="15" fill="rgb(239,135,14)" fg:x="64497" fg:w="14"/><text x="60.3210%" y="1855.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::events (12 samples, 0.01%)</title><rect x="60.0840%" y="1877" width="0.0112%" height="15" fill="rgb(226,198,47)" fg:x="64511" fg:w="12"/><text x="60.3340%" y="1887.50"></text></g><g><title>&lt;aptos_gas::transaction::storage::ChangeSetConfigs as aptos_types::transaction::change_set::CheckChangeSet&gt;::check_change_set (114 samples, 0.11%)</title><rect x="60.0002%" y="1893" width="0.1062%" height="15" fill="rgb(244,121,47)" fg:x="64421" fg:w="114"/><text x="60.2502%" y="1903.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::write_set (12 samples, 0.01%)</title><rect x="60.0952%" y="1877" width="0.0112%" height="15" fill="rgb(226,21,48)" fg:x="64523" fg:w="12"/><text x="60.3452%" y="1887.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::new (143 samples, 0.13%)</title><rect x="59.9750%" y="1909" width="0.1332%" height="15" fill="rgb(215,178,47)" fg:x="64394" fg:w="143"/><text x="60.2250%" y="1919.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::freeze (13 samples, 0.01%)</title><rect x="60.1082%" y="1909" width="0.0121%" height="15" fill="rgb(206,212,19)" fg:x="64537" fg:w="13"/><text x="60.3582%" y="1919.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (293 samples, 0.27%)</title><rect x="60.1203%" y="1909" width="0.2729%" height="15" fill="rgb(230,104,34)" fg:x="64550" fg:w="293"/><text x="60.3703%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (277 samples, 0.26%)</title><rect x="60.1352%" y="1893" width="0.2580%" height="15" fill="rgb(210,96,51)" fg:x="64566" fg:w="277"/><text x="60.3852%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (255 samples, 0.24%)</title><rect x="60.1557%" y="1877" width="0.2375%" height="15" fill="rgb(229,111,47)" fg:x="64588" fg:w="255"/><text x="60.4057%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (235 samples, 0.22%)</title><rect x="60.1744%" y="1861" width="0.2189%" height="15" fill="rgb(218,174,45)" fg:x="64608" fg:w="235"/><text x="60.4244%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (235 samples, 0.22%)</title><rect x="60.1744%" y="1845" width="0.2189%" height="15" fill="rgb(215,21,32)" fg:x="64608" fg:w="235"/><text x="60.4244%" y="1855.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (235 samples, 0.22%)</title><rect x="60.1744%" y="1829" width="0.2189%" height="15" fill="rgb(235,72,21)" fg:x="64608" fg:w="235"/><text x="60.4244%" y="1839.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (234 samples, 0.22%)</title><rect x="60.1753%" y="1813" width="0.2179%" height="15" fill="rgb(250,113,30)" fg:x="64609" fg:w="234"/><text x="60.4253%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (234 samples, 0.22%)</title><rect x="60.1753%" y="1797" width="0.2179%" height="15" fill="rgb(244,136,34)" fg:x="64609" fg:w="234"/><text x="60.4253%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (234 samples, 0.22%)</title><rect x="60.1753%" y="1781" width="0.2179%" height="15" fill="rgb(213,226,47)" fg:x="64609" fg:w="234"/><text x="60.4253%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (234 samples, 0.22%)</title><rect x="60.1753%" y="1765" width="0.2179%" height="15" fill="rgb(224,136,40)" fg:x="64609" fg:w="234"/><text x="60.4253%" y="1775.50"></text></g><g><title>malloc (225 samples, 0.21%)</title><rect x="60.1837%" y="1749" width="0.2096%" height="15" fill="rgb(253,124,12)" fg:x="64618" fg:w="225"/><text x="60.4337%" y="1759.50"></text></g><g><title>[libc.so.6] (213 samples, 0.20%)</title><rect x="60.1948%" y="1733" width="0.1984%" height="15" fill="rgb(210,67,8)" fg:x="64630" fg:w="213"/><text x="60.4448%" y="1743.50"></text></g><g><title>[libc.so.6] (102 samples, 0.10%)</title><rect x="60.2982%" y="1717" width="0.0950%" height="15" fill="rgb(210,204,0)" fg:x="64741" fg:w="102"/><text x="60.5482%" y="1727.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="60.3783%" y="1701" width="0.0149%" height="15" fill="rgb(217,179,22)" fg:x="64827" fg:w="16"/><text x="60.6283%" y="1711.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (39 samples, 0.04%)</title><rect x="60.3932%" y="1909" width="0.0363%" height="15" fill="rgb(237,192,33)" fg:x="64843" fg:w="39"/><text x="60.6432%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.03%)</title><rect x="60.3979%" y="1893" width="0.0317%" height="15" fill="rgb(211,104,28)" fg:x="64848" fg:w="34"/><text x="60.6479%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (34 samples, 0.03%)</title><rect x="60.3979%" y="1877" width="0.0317%" height="15" fill="rgb(214,75,30)" fg:x="64848" fg:w="34"/><text x="60.6479%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.02%)</title><rect x="60.4100%" y="1861" width="0.0196%" height="15" fill="rgb(220,227,12)" fg:x="64861" fg:w="21"/><text x="60.6600%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="60.4100%" y="1845" width="0.0196%" height="15" fill="rgb(233,134,28)" fg:x="64861" fg:w="21"/><text x="60.6600%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="60.4128%" y="1829" width="0.0168%" height="15" fill="rgb(215,146,24)" fg:x="64864" fg:w="18"/><text x="60.6628%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.01%)</title><rect x="60.4621%" y="1733" width="0.0149%" height="15" fill="rgb(248,227,20)" fg:x="64917" fg:w="16"/><text x="60.7121%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="60.4621%" y="1781" width="0.0177%" height="15" fill="rgb(250,44,42)" fg:x="64917" fg:w="19"/><text x="60.7121%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (19 samples, 0.02%)</title><rect x="60.4621%" y="1765" width="0.0177%" height="15" fill="rgb(219,5,35)" fg:x="64917" fg:w="19"/><text x="60.7121%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="60.4621%" y="1749" width="0.0177%" height="15" fill="rgb(241,132,32)" fg:x="64917" fg:w="19"/><text x="60.7121%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (74 samples, 0.07%)</title><rect x="60.4296%" y="1909" width="0.0689%" height="15" fill="rgb(234,212,51)" fg:x="64882" fg:w="74"/><text x="60.6796%" y="1919.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (74 samples, 0.07%)</title><rect x="60.4296%" y="1893" width="0.0689%" height="15" fill="rgb(242,173,29)" fg:x="64882" fg:w="74"/><text x="60.6796%" y="1903.50"></text></g><g><title>core::iter::adapters::try_process (74 samples, 0.07%)</title><rect x="60.4296%" y="1877" width="0.0689%" height="15" fill="rgb(212,159,2)" fg:x="64882" fg:w="74"/><text x="60.6796%" y="1887.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (60 samples, 0.06%)</title><rect x="60.4426%" y="1861" width="0.0559%" height="15" fill="rgb(238,165,31)" fg:x="64896" fg:w="60"/><text x="60.6926%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (60 samples, 0.06%)</title><rect x="60.4426%" y="1845" width="0.0559%" height="15" fill="rgb(241,57,36)" fg:x="64896" fg:w="60"/><text x="60.6926%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (60 samples, 0.06%)</title><rect x="60.4426%" y="1829" width="0.0559%" height="15" fill="rgb(249,7,4)" fg:x="64896" fg:w="60"/><text x="60.6926%" y="1839.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (59 samples, 0.05%)</title><rect x="60.4435%" y="1813" width="0.0550%" height="15" fill="rgb(250,137,44)" fg:x="64897" fg:w="59"/><text x="60.6935%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (39 samples, 0.04%)</title><rect x="60.4621%" y="1797" width="0.0363%" height="15" fill="rgb(244,185,1)" fg:x="64917" fg:w="39"/><text x="60.7121%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_table_extension::TableHandle,move_table_extension::TableInfo&gt;&gt; (17 samples, 0.02%)</title><rect x="60.4985%" y="1909" width="0.0158%" height="15" fill="rgb(216,5,53)" fg:x="64956" fg:w="17"/><text x="60.7485%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="60.4994%" y="1893" width="0.0149%" height="15" fill="rgb(234,89,21)" fg:x="64957" fg:w="16"/><text x="60.7494%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_aggregator::aggregator_extension::AggregatorID,aptos_framework::natives::aggregator_natives::context::AggregatorChange&gt;&gt; (18 samples, 0.02%)</title><rect x="60.5190%" y="1909" width="0.0168%" height="15" fill="rgb(250,81,43)" fg:x="64978" fg:w="18"/><text x="60.7690%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="60.5190%" y="1893" width="0.0168%" height="15" fill="rgb(243,132,11)" fg:x="64978" fg:w="18"/><text x="60.7690%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_core_types::effects::AccountChangeSet&gt;&gt; (24 samples, 0.02%)</title><rect x="60.5357%" y="1909" width="0.0224%" height="15" fill="rgb(253,159,28)" fg:x="64996" fg:w="24"/><text x="60.7857%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="60.5357%" y="1893" width="0.0224%" height="15" fill="rgb(237,167,34)" fg:x="64996" fg:w="24"/><text x="60.7857%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_table_extension::TableHandle,move_table_extension::TableChange&gt;&gt; (14 samples, 0.01%)</title><rect x="60.5609%" y="1909" width="0.0130%" height="15" fill="rgb(237,16,50)" fg:x="65023" fg:w="14"/><text x="60.8109%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="60.5609%" y="1893" width="0.0130%" height="15" fill="rgb(247,125,2)" fg:x="65023" fg:w="14"/><text x="60.8109%" y="1903.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::convert_change_set (1,141 samples, 1.06%)</title><rect x="59.5261%" y="1925" width="1.0627%" height="15" fill="rgb(254,35,3)" fg:x="63912" fg:w="1141"/><text x="59.7761%" y="1935.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (26 samples, 0.02%)</title><rect x="60.6680%" y="1861" width="0.0242%" height="15" fill="rgb(237,209,21)" fg:x="65138" fg:w="26"/><text x="60.9180%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (26 samples, 0.02%)</title><rect x="60.6680%" y="1845" width="0.0242%" height="15" fill="rgb(224,122,20)" fg:x="65138" fg:w="26"/><text x="60.9180%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="60.6764%" y="1829" width="0.0158%" height="15" fill="rgb(224,11,46)" fg:x="65147" fg:w="17"/><text x="60.9264%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="60.6764%" y="1813" width="0.0158%" height="15" fill="rgb(248,21,33)" fg:x="65147" fg:w="17"/><text x="60.9264%" y="1823.50"></text></g><g><title>cfree (16 samples, 0.01%)</title><rect x="60.6773%" y="1797" width="0.0149%" height="15" fill="rgb(222,144,7)" fg:x="65148" fg:w="16"/><text x="60.9273%" y="1807.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="60.6820%" y="1781" width="0.0102%" height="15" fill="rgb(205,141,37)" fg:x="65153" fg:w="11"/><text x="60.9320%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (45 samples, 0.04%)</title><rect x="60.6671%" y="1877" width="0.0419%" height="15" fill="rgb(237,130,8)" fg:x="65137" fg:w="45"/><text x="60.9171%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (18 samples, 0.02%)</title><rect x="60.6922%" y="1861" width="0.0168%" height="15" fill="rgb(209,179,39)" fg:x="65164" fg:w="18"/><text x="60.9422%" y="1871.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="60.6969%" y="1845" width="0.0121%" height="15" fill="rgb(207,52,17)" fg:x="65169" fg:w="13"/><text x="60.9469%" y="1855.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="60.6969%" y="1829" width="0.0121%" height="15" fill="rgb(253,158,17)" fg:x="65169" fg:w="13"/><text x="60.9469%" y="1839.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="60.6969%" y="1813" width="0.0121%" height="15" fill="rgb(208,19,53)" fg:x="65169" fg:w="13"/><text x="60.9469%" y="1823.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (13 samples, 0.01%)</title><rect x="60.6969%" y="1797" width="0.0121%" height="15" fill="rgb(233,152,13)" fg:x="65169" fg:w="13"/><text x="60.9469%" y="1807.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (23 samples, 0.02%)</title><rect x="60.7090%" y="1861" width="0.0214%" height="15" fill="rgb(231,84,1)" fg:x="65182" fg:w="23"/><text x="60.9590%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (93 samples, 0.09%)</title><rect x="60.6540%" y="1893" width="0.0866%" height="15" fill="rgb(229,142,48)" fg:x="65123" fg:w="93"/><text x="60.9040%" y="1903.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (34 samples, 0.03%)</title><rect x="60.7090%" y="1877" width="0.0317%" height="15" fill="rgb(248,70,29)" fg:x="65182" fg:w="34"/><text x="60.9590%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (11 samples, 0.01%)</title><rect x="60.7304%" y="1861" width="0.0102%" height="15" fill="rgb(250,85,7)" fg:x="65205" fg:w="11"/><text x="60.9804%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.11%)</title><rect x="60.6298%" y="1909" width="0.1136%" height="15" fill="rgb(235,140,43)" fg:x="65097" fg:w="122"/><text x="60.8798%" y="1919.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="60.7621%" y="1861" width="0.0102%" height="15" fill="rgb(216,0,5)" fg:x="65239" fg:w="11"/><text x="61.0121%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (15 samples, 0.01%)</title><rect x="60.8068%" y="1685" width="0.0140%" height="15" fill="rgb(223,167,29)" fg:x="65287" fg:w="15"/><text x="61.0568%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.01%)</title><rect x="60.8068%" y="1669" width="0.0140%" height="15" fill="rgb(229,150,33)" fg:x="65287" fg:w="15"/><text x="61.0568%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="60.8077%" y="1653" width="0.0130%" height="15" fill="rgb(227,26,52)" fg:x="65288" fg:w="14"/><text x="61.0577%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="60.8077%" y="1637" width="0.0130%" height="15" fill="rgb(250,60,52)" fg:x="65288" fg:w="14"/><text x="61.0577%" y="1647.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.01%)</title><rect x="60.9288%" y="1605" width="0.0130%" height="15" fill="rgb(228,81,46)" fg:x="65418" fg:w="14"/><text x="61.1788%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (24 samples, 0.02%)</title><rect x="60.9204%" y="1637" width="0.0224%" height="15" fill="rgb(225,218,31)" fg:x="65409" fg:w="24"/><text x="61.1704%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (15 samples, 0.01%)</title><rect x="60.9288%" y="1621" width="0.0140%" height="15" fill="rgb(230,35,16)" fg:x="65418" fg:w="15"/><text x="61.1788%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (67 samples, 0.06%)</title><rect x="60.8887%" y="1669" width="0.0624%" height="15" fill="rgb(247,100,0)" fg:x="65375" fg:w="67"/><text x="61.1387%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (36 samples, 0.03%)</title><rect x="60.9176%" y="1653" width="0.0335%" height="15" fill="rgb(223,135,11)" fg:x="65406" fg:w="36"/><text x="61.1676%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (175 samples, 0.16%)</title><rect x="60.7956%" y="1701" width="0.1630%" height="15" fill="rgb(207,136,0)" fg:x="65275" fg:w="175"/><text x="61.0456%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (148 samples, 0.14%)</title><rect x="60.8207%" y="1685" width="0.1378%" height="15" fill="rgb(246,131,25)" fg:x="65302" fg:w="148"/><text x="61.0707%" y="1695.50"></text></g><g><title>bcs::de::Deserializer::peek (14 samples, 0.01%)</title><rect x="61.0200%" y="1557" width="0.0130%" height="15" fill="rgb(209,47,12)" fg:x="65516" fg:w="14"/><text x="61.2700%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (44 samples, 0.04%)</title><rect x="60.9958%" y="1653" width="0.0410%" height="15" fill="rgb(221,25,16)" fg:x="65490" fg:w="44"/><text x="61.2458%" y="1663.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (44 samples, 0.04%)</title><rect x="60.9958%" y="1637" width="0.0410%" height="15" fill="rgb(223,164,33)" fg:x="65490" fg:w="44"/><text x="61.2458%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (44 samples, 0.04%)</title><rect x="60.9958%" y="1621" width="0.0410%" height="15" fill="rgb(220,26,23)" fg:x="65490" fg:w="44"/><text x="61.2458%" y="1631.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (39 samples, 0.04%)</title><rect x="61.0005%" y="1605" width="0.0363%" height="15" fill="rgb(231,224,1)" fg:x="65495" fg:w="39"/><text x="61.2505%" y="1615.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (22 samples, 0.02%)</title><rect x="61.0163%" y="1589" width="0.0205%" height="15" fill="rgb(229,221,24)" fg:x="65512" fg:w="22"/><text x="61.2663%" y="1599.50"></text></g><g><title>bcs::de::Deserializer::next (22 samples, 0.02%)</title><rect x="61.0163%" y="1573" width="0.0205%" height="15" fill="rgb(213,34,10)" fg:x="65512" fg:w="22"/><text x="61.2663%" y="1583.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (38 samples, 0.04%)</title><rect x="61.0368%" y="1653" width="0.0354%" height="15" fill="rgb(215,33,11)" fg:x="65534" fg:w="38"/><text x="61.2868%" y="1663.50"></text></g><g><title>core::cmp::PartialOrd::ge (38 samples, 0.04%)</title><rect x="61.0368%" y="1637" width="0.0354%" height="15" fill="rgb(216,20,41)" fg:x="65534" fg:w="38"/><text x="61.2868%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (32 samples, 0.03%)</title><rect x="61.0424%" y="1621" width="0.0298%" height="15" fill="rgb(228,43,31)" fg:x="65540" fg:w="32"/><text x="61.2924%" y="1631.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (32 samples, 0.03%)</title><rect x="61.0424%" y="1605" width="0.0298%" height="15" fill="rgb(227,83,26)" fg:x="65540" fg:w="32"/><text x="61.2924%" y="1615.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (32 samples, 0.03%)</title><rect x="61.0424%" y="1589" width="0.0298%" height="15" fill="rgb(217,168,19)" fg:x="65540" fg:w="32"/><text x="61.2924%" y="1599.50"></text></g><g><title>[libc.so.6] (31 samples, 0.03%)</title><rect x="61.0433%" y="1573" width="0.0289%" height="15" fill="rgb(231,34,33)" fg:x="65541" fg:w="31"/><text x="61.2933%" y="1583.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (93 samples, 0.09%)</title><rect x="60.9940%" y="1669" width="0.0866%" height="15" fill="rgb(230,120,51)" fg:x="65488" fg:w="93"/><text x="61.2440%" y="1679.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.02%)</title><rect x="61.1393%" y="1493" width="0.0242%" height="15" fill="rgb(215,138,27)" fg:x="65644" fg:w="26"/><text x="61.3893%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (33 samples, 0.03%)</title><rect x="61.2007%" y="1477" width="0.0307%" height="15" fill="rgb(246,80,47)" fg:x="65710" fg:w="33"/><text x="61.4507%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::parse_length (24 samples, 0.02%)</title><rect x="61.2091%" y="1461" width="0.0224%" height="15" fill="rgb(215,57,53)" fg:x="65719" fg:w="24"/><text x="61.4591%" y="1471.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (20 samples, 0.02%)</title><rect x="61.2128%" y="1445" width="0.0186%" height="15" fill="rgb(229,137,5)" fg:x="65723" fg:w="20"/><text x="61.4628%" y="1455.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (61 samples, 0.06%)</title><rect x="61.2315%" y="1477" width="0.0568%" height="15" fill="rgb(210,86,2)" fg:x="65743" fg:w="61"/><text x="61.4815%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::parse_string (279 samples, 0.26%)</title><rect x="61.1635%" y="1493" width="0.2599%" height="15" fill="rgb(231,226,51)" fg:x="65670" fg:w="279"/><text x="61.4135%" y="1503.50"></text></g><g><title>core::str::converts::from_utf8 (145 samples, 0.14%)</title><rect x="61.2883%" y="1477" width="0.1350%" height="15" fill="rgb(216,62,29)" fg:x="65804" fg:w="145"/><text x="61.5383%" y="1487.50"></text></g><g><title>core::str::validations::run_utf8_validation (111 samples, 0.10%)</title><rect x="61.3199%" y="1461" width="0.1034%" height="15" fill="rgb(248,202,3)" fg:x="65838" fg:w="111"/><text x="61.5699%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (225 samples, 0.21%)</title><rect x="61.4233%" y="1365" width="0.2096%" height="15" fill="rgb(225,181,7)" fg:x="65949" fg:w="225"/><text x="61.6733%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (225 samples, 0.21%)</title><rect x="61.4233%" y="1349" width="0.2096%" height="15" fill="rgb(247,170,54)" fg:x="65949" fg:w="225"/><text x="61.6733%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (225 samples, 0.21%)</title><rect x="61.4233%" y="1333" width="0.2096%" height="15" fill="rgb(236,204,33)" fg:x="65949" fg:w="225"/><text x="61.6733%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (206 samples, 0.19%)</title><rect x="61.4410%" y="1317" width="0.1919%" height="15" fill="rgb(216,45,30)" fg:x="65968" fg:w="206"/><text x="61.6910%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (206 samples, 0.19%)</title><rect x="61.4410%" y="1301" width="0.1919%" height="15" fill="rgb(213,203,16)" fg:x="65968" fg:w="206"/><text x="61.6910%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (206 samples, 0.19%)</title><rect x="61.4410%" y="1285" width="0.1919%" height="15" fill="rgb(215,46,16)" fg:x="65968" fg:w="206"/><text x="61.6910%" y="1295.50"></text></g><g><title>malloc (193 samples, 0.18%)</title><rect x="61.4531%" y="1269" width="0.1798%" height="15" fill="rgb(217,162,46)" fg:x="65981" fg:w="193"/><text x="61.7031%" y="1279.50"></text></g><g><title>[libc.so.6] (78 samples, 0.07%)</title><rect x="61.5602%" y="1253" width="0.0726%" height="15" fill="rgb(224,189,20)" fg:x="66096" fg:w="78"/><text x="61.8102%" y="1263.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="61.6189%" y="1237" width="0.0140%" height="15" fill="rgb(232,35,51)" fg:x="66159" fg:w="15"/><text x="61.8689%" y="1247.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (568 samples, 0.53%)</title><rect x="61.1327%" y="1605" width="0.5290%" height="15" fill="rgb(243,221,46)" fg:x="65637" fg:w="568"/><text x="61.3827%" y="1615.50"></text></g><g><title>serde::de::SeqAccess::next_element (563 samples, 0.52%)</title><rect x="61.1374%" y="1589" width="0.5244%" height="15" fill="rgb(248,16,16)" fg:x="65642" fg:w="563"/><text x="61.3874%" y="1599.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (563 samples, 0.52%)</title><rect x="61.1374%" y="1573" width="0.5244%" height="15" fill="rgb(220,168,13)" fg:x="65642" fg:w="563"/><text x="61.3874%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (563 samples, 0.52%)</title><rect x="61.1374%" y="1557" width="0.5244%" height="15" fill="rgb(243,102,39)" fg:x="65642" fg:w="563"/><text x="61.3874%" y="1567.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (563 samples, 0.52%)</title><rect x="61.1374%" y="1541" width="0.5244%" height="15" fill="rgb(245,82,32)" fg:x="65642" fg:w="563"/><text x="61.3874%" y="1551.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (563 samples, 0.52%)</title><rect x="61.1374%" y="1525" width="0.5244%" height="15" fill="rgb(230,164,19)" fg:x="65642" fg:w="563"/><text x="61.3874%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (563 samples, 0.52%)</title><rect x="61.1374%" y="1509" width="0.5244%" height="15" fill="rgb(221,9,41)" fg:x="65642" fg:w="563"/><text x="61.3874%" y="1519.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (256 samples, 0.24%)</title><rect x="61.4233%" y="1493" width="0.2384%" height="15" fill="rgb(216,93,0)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1503.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (256 samples, 0.24%)</title><rect x="61.4233%" y="1477" width="0.2384%" height="15" fill="rgb(235,113,9)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1487.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (256 samples, 0.24%)</title><rect x="61.4233%" y="1461" width="0.2384%" height="15" fill="rgb(209,224,10)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (256 samples, 0.24%)</title><rect x="61.4233%" y="1445" width="0.2384%" height="15" fill="rgb(226,54,34)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (256 samples, 0.24%)</title><rect x="61.4233%" y="1429" width="0.2384%" height="15" fill="rgb(222,60,8)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (256 samples, 0.24%)</title><rect x="61.4233%" y="1413" width="0.2384%" height="15" fill="rgb(248,228,41)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (256 samples, 0.24%)</title><rect x="61.4233%" y="1397" width="0.2384%" height="15" fill="rgb(226,31,32)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (256 samples, 0.24%)</title><rect x="61.4233%" y="1381" width="0.2384%" height="15" fill="rgb(242,132,49)" fg:x="65949" fg:w="256"/><text x="61.6733%" y="1391.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (31 samples, 0.03%)</title><rect x="61.6329%" y="1365" width="0.0289%" height="15" fill="rgb(224,194,19)" fg:x="66174" fg:w="31"/><text x="61.8829%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.03%)</title><rect x="61.6329%" y="1349" width="0.0289%" height="15" fill="rgb(232,200,51)" fg:x="66174" fg:w="31"/><text x="61.8829%" y="1359.50"></text></g><g><title>[libc.so.6] (31 samples, 0.03%)</title><rect x="61.6329%" y="1333" width="0.0289%" height="15" fill="rgb(235,60,46)" fg:x="66174" fg:w="31"/><text x="61.8829%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::leave_named_container (15 samples, 0.01%)</title><rect x="61.6655%" y="1605" width="0.0140%" height="15" fill="rgb(240,109,52)" fg:x="66209" fg:w="15"/><text x="61.9155%" y="1615.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (961 samples, 0.90%)</title><rect x="60.7919%" y="1717" width="0.8951%" height="15" fill="rgb(215,78,37)" fg:x="65271" fg:w="961"/><text x="61.0419%" y="1727.50"></text></g><g><title>serde::de::MapAccess::next_entry (782 samples, 0.73%)</title><rect x="60.9586%" y="1701" width="0.7283%" height="15" fill="rgb(225,141,7)" fg:x="65450" fg:w="782"/><text x="61.2086%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (781 samples, 0.73%)</title><rect x="60.9595%" y="1685" width="0.7274%" height="15" fill="rgb(216,102,54)" fg:x="65451" fg:w="781"/><text x="61.2095%" y="1695.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (651 samples, 0.61%)</title><rect x="61.0806%" y="1669" width="0.6063%" height="15" fill="rgb(238,143,13)" fg:x="65581" fg:w="651"/><text x="61.3306%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (651 samples, 0.61%)</title><rect x="61.0806%" y="1653" width="0.6063%" height="15" fill="rgb(219,45,51)" fg:x="65581" fg:w="651"/><text x="61.3306%" y="1663.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (651 samples, 0.61%)</title><rect x="61.0806%" y="1637" width="0.6063%" height="15" fill="rgb(242,105,46)" fg:x="65581" fg:w="651"/><text x="61.3306%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (651 samples, 0.61%)</title><rect x="61.0806%" y="1621" width="0.6063%" height="15" fill="rgb(206,154,49)" fg:x="65581" fg:w="651"/><text x="61.3306%" y="1631.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (975 samples, 0.91%)</title><rect x="60.7881%" y="1765" width="0.9081%" height="15" fill="rgb(239,215,4)" fg:x="65267" fg:w="975"/><text x="61.0381%" y="1775.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (975 samples, 0.91%)</title><rect x="60.7881%" y="1749" width="0.9081%" height="15" fill="rgb(238,82,17)" fg:x="65267" fg:w="975"/><text x="61.0381%" y="1759.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (975 samples, 0.91%)</title><rect x="60.7881%" y="1733" width="0.9081%" height="15" fill="rgb(242,49,30)" fg:x="65267" fg:w="975"/><text x="61.0381%" y="1743.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (984 samples, 0.92%)</title><rect x="60.7835%" y="1845" width="0.9165%" height="15" fill="rgb(248,5,16)" fg:x="65262" fg:w="984"/><text x="61.0335%" y="1855.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (984 samples, 0.92%)</title><rect x="60.7835%" y="1829" width="0.9165%" height="15" fill="rgb(237,138,32)" fg:x="65262" fg:w="984"/><text x="61.0335%" y="1839.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (983 samples, 0.92%)</title><rect x="60.7844%" y="1813" width="0.9155%" height="15" fill="rgb(235,79,45)" fg:x="65263" fg:w="983"/><text x="61.0344%" y="1823.50"></text></g><g><title>serde::de::SeqAccess::next_element (979 samples, 0.91%)</title><rect x="60.7881%" y="1797" width="0.9118%" height="15" fill="rgb(213,105,25)" fg:x="65267" fg:w="979"/><text x="61.0381%" y="1807.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (979 samples, 0.91%)</title><rect x="60.7881%" y="1781" width="0.9118%" height="15" fill="rgb(251,131,7)" fg:x="65267" fg:w="979"/><text x="61.0381%" y="1791.50"></text></g><g><title>bcs::de::from_bytes (989 samples, 0.92%)</title><rect x="60.7797%" y="1861" width="0.9211%" height="15" fill="rgb(211,155,7)" fg:x="65258" fg:w="989"/><text x="61.0297%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (255 samples, 0.24%)</title><rect x="61.7158%" y="1733" width="0.2375%" height="15" fill="rgb(243,70,15)" fg:x="66263" fg:w="255"/><text x="61.9658%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (255 samples, 0.24%)</title><rect x="61.7158%" y="1717" width="0.2375%" height="15" fill="rgb(215,171,2)" fg:x="66263" fg:w="255"/><text x="61.9658%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (255 samples, 0.24%)</title><rect x="61.7158%" y="1701" width="0.2375%" height="15" fill="rgb(244,121,35)" fg:x="66263" fg:w="255"/><text x="61.9658%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (255 samples, 0.24%)</title><rect x="61.7158%" y="1685" width="0.2375%" height="15" fill="rgb(249,147,17)" fg:x="66263" fg:w="255"/><text x="61.9658%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (255 samples, 0.24%)</title><rect x="61.7158%" y="1669" width="0.2375%" height="15" fill="rgb(241,193,52)" fg:x="66263" fg:w="255"/><text x="61.9658%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (255 samples, 0.24%)</title><rect x="61.7158%" y="1653" width="0.2375%" height="15" fill="rgb(217,159,39)" fg:x="66263" fg:w="255"/><text x="61.9658%" y="1663.50"></text></g><g><title>malloc (255 samples, 0.24%)</title><rect x="61.7158%" y="1637" width="0.2375%" height="15" fill="rgb(248,110,0)" fg:x="66263" fg:w="255"/><text x="61.9658%" y="1647.50"></text></g><g><title>[libc.so.6] (247 samples, 0.23%)</title><rect x="61.7232%" y="1621" width="0.2300%" height="15" fill="rgb(233,227,0)" fg:x="66271" fg:w="247"/><text x="61.9732%" y="1631.50"></text></g><g><title>[libc.so.6] (165 samples, 0.15%)</title><rect x="61.7996%" y="1605" width="0.1537%" height="15" fill="rgb(252,55,2)" fg:x="66353" fg:w="165"/><text x="62.0496%" y="1615.50"></text></g><g><title>[libc.so.6] (33 samples, 0.03%)</title><rect x="61.9225%" y="1589" width="0.0307%" height="15" fill="rgb(224,194,24)" fg:x="66485" fg:w="33"/><text x="62.1725%" y="1599.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (289 samples, 0.27%)</title><rect x="61.7148%" y="1829" width="0.2692%" height="15" fill="rgb(247,5,33)" fg:x="66262" fg:w="289"/><text x="61.9648%" y="1839.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (288 samples, 0.27%)</title><rect x="61.7158%" y="1813" width="0.2682%" height="15" fill="rgb(242,66,47)" fg:x="66263" fg:w="288"/><text x="61.9658%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (288 samples, 0.27%)</title><rect x="61.7158%" y="1797" width="0.2682%" height="15" fill="rgb(213,107,12)" fg:x="66263" fg:w="288"/><text x="61.9658%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (288 samples, 0.27%)</title><rect x="61.7158%" y="1781" width="0.2682%" height="15" fill="rgb(206,131,1)" fg:x="66263" fg:w="288"/><text x="61.9658%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (288 samples, 0.27%)</title><rect x="61.7158%" y="1765" width="0.2682%" height="15" fill="rgb(214,9,36)" fg:x="66263" fg:w="288"/><text x="61.9658%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (288 samples, 0.27%)</title><rect x="61.7158%" y="1749" width="0.2682%" height="15" fill="rgb(251,215,18)" fg:x="66263" fg:w="288"/><text x="61.9658%" y="1759.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (33 samples, 0.03%)</title><rect x="61.9533%" y="1733" width="0.0307%" height="15" fill="rgb(251,64,9)" fg:x="66518" fg:w="33"/><text x="62.2033%" y="1743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.03%)</title><rect x="61.9533%" y="1717" width="0.0307%" height="15" fill="rgb(235,68,21)" fg:x="66518" fg:w="33"/><text x="62.2033%" y="1727.50"></text></g><g><title>[libc.so.6] (33 samples, 0.03%)</title><rect x="61.9533%" y="1701" width="0.0307%" height="15" fill="rgb(240,69,38)" fg:x="66518" fg:w="33"/><text x="62.2033%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (1,355 samples, 1.26%)</title><rect x="60.7565%" y="1893" width="1.2620%" height="15" fill="rgb(231,18,27)" fg:x="65233" fg:w="1355"/><text x="61.0065%" y="1903.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (1,354 samples, 1.26%)</title><rect x="60.7574%" y="1877" width="1.2611%" height="15" fill="rgb(215,154,25)" fg:x="65234" fg:w="1354"/><text x="61.0074%" y="1887.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (329 samples, 0.31%)</title><rect x="61.7121%" y="1861" width="0.3064%" height="15" fill="rgb(224,33,46)" fg:x="66259" fg:w="329"/><text x="61.9621%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (328 samples, 0.31%)</title><rect x="61.7130%" y="1845" width="0.3055%" height="15" fill="rgb(248,191,53)" fg:x="66260" fg:w="328"/><text x="61.9630%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (18 samples, 0.02%)</title><rect x="62.0017%" y="1829" width="0.0168%" height="15" fill="rgb(231,3,37)" fg:x="66570" fg:w="18"/><text x="62.2517%" y="1839.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.02%)</title><rect x="62.0017%" y="1813" width="0.0168%" height="15" fill="rgb(209,152,2)" fg:x="66570" fg:w="18"/><text x="62.2517%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.02%)</title><rect x="62.0017%" y="1797" width="0.0168%" height="15" fill="rgb(212,208,43)" fg:x="66570" fg:w="18"/><text x="62.2517%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.02%)</title><rect x="62.0017%" y="1781" width="0.0168%" height="15" fill="rgb(208,60,49)" fg:x="66570" fg:w="18"/><text x="62.2517%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (14 samples, 0.01%)</title><rect x="62.0567%" y="1685" width="0.0130%" height="15" fill="rgb(245,135,6)" fg:x="66629" fg:w="14"/><text x="62.3067%" y="1695.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (14 samples, 0.01%)</title><rect x="62.0567%" y="1669" width="0.0130%" height="15" fill="rgb(243,86,23)" fg:x="66629" fg:w="14"/><text x="62.3067%" y="1679.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (35 samples, 0.03%)</title><rect x="62.0446%" y="1717" width="0.0326%" height="15" fill="rgb(223,7,20)" fg:x="66616" fg:w="35"/><text x="62.2946%" y="1727.50"></text></g><g><title>alloc::collections::btree::mem::replace (29 samples, 0.03%)</title><rect x="62.0501%" y="1701" width="0.0270%" height="15" fill="rgb(212,182,17)" fg:x="66622" fg:w="29"/><text x="62.3001%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (43 samples, 0.04%)</title><rect x="62.0399%" y="1749" width="0.0400%" height="15" fill="rgb(237,94,50)" fg:x="66611" fg:w="43"/><text x="62.2899%" y="1759.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (38 samples, 0.04%)</title><rect x="62.0446%" y="1733" width="0.0354%" height="15" fill="rgb(232,185,44)" fg:x="66616" fg:w="38"/><text x="62.2946%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (137 samples, 0.13%)</title><rect x="62.0827%" y="1637" width="0.1276%" height="15" fill="rgb(205,50,36)" fg:x="66657" fg:w="137"/><text x="62.3327%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (137 samples, 0.13%)</title><rect x="62.0827%" y="1621" width="0.1276%" height="15" fill="rgb(252,32,32)" fg:x="66657" fg:w="137"/><text x="62.3327%" y="1631.50"></text></g><g><title>cfree (130 samples, 0.12%)</title><rect x="62.0893%" y="1605" width="0.1211%" height="15" fill="rgb(241,123,33)" fg:x="66664" fg:w="130"/><text x="62.3393%" y="1615.50"></text></g><g><title>[libc.so.6] (70 samples, 0.07%)</title><rect x="62.1451%" y="1589" width="0.0652%" height="15" fill="rgb(212,140,16)" fg:x="66724" fg:w="70"/><text x="62.3951%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (143 samples, 0.13%)</title><rect x="62.0799%" y="1733" width="0.1332%" height="15" fill="rgb(247,132,5)" fg:x="66654" fg:w="143"/><text x="62.3299%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (143 samples, 0.13%)</title><rect x="62.0799%" y="1717" width="0.1332%" height="15" fill="rgb(209,137,38)" fg:x="66654" fg:w="143"/><text x="62.3299%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (143 samples, 0.13%)</title><rect x="62.0799%" y="1701" width="0.1332%" height="15" fill="rgb(248,32,42)" fg:x="66654" fg:w="143"/><text x="62.3299%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (143 samples, 0.13%)</title><rect x="62.0799%" y="1685" width="0.1332%" height="15" fill="rgb(216,188,40)" fg:x="66654" fg:w="143"/><text x="62.3299%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (143 samples, 0.13%)</title><rect x="62.0799%" y="1669" width="0.1332%" height="15" fill="rgb(209,127,53)" fg:x="66654" fg:w="143"/><text x="62.3299%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 0.13%)</title><rect x="62.0799%" y="1653" width="0.1332%" height="15" fill="rgb(254,162,9)" fg:x="66654" fg:w="143"/><text x="62.3299%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (203 samples, 0.19%)</title><rect x="62.0259%" y="1845" width="0.1891%" height="15" fill="rgb(219,183,10)" fg:x="66596" fg:w="203"/><text x="62.2759%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (194 samples, 0.18%)</title><rect x="62.0343%" y="1829" width="0.1807%" height="15" fill="rgb(217,192,21)" fg:x="66605" fg:w="194"/><text x="62.2843%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.18%)</title><rect x="62.0343%" y="1813" width="0.1807%" height="15" fill="rgb(251,89,27)" fg:x="66605" fg:w="194"/><text x="62.2843%" y="1823.50"></text></g><g><title>core::mem::drop (190 samples, 0.18%)</title><rect x="62.0380%" y="1797" width="0.1770%" height="15" fill="rgb(253,55,28)" fg:x="66609" fg:w="190"/><text x="62.2880%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (190 samples, 0.18%)</title><rect x="62.0380%" y="1781" width="0.1770%" height="15" fill="rgb(216,159,8)" fg:x="66609" fg:w="190"/><text x="62.2880%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.18%)</title><rect x="62.0380%" y="1765" width="0.1770%" height="15" fill="rgb(231,228,44)" fg:x="66609" fg:w="190"/><text x="62.2880%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (145 samples, 0.14%)</title><rect x="62.0799%" y="1749" width="0.1350%" height="15" fill="rgb(247,34,48)" fg:x="66654" fg:w="145"/><text x="62.3299%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (218 samples, 0.20%)</title><rect x="62.0185%" y="1893" width="0.2030%" height="15" fill="rgb(247,222,18)" fg:x="66588" fg:w="218"/><text x="62.2685%" y="1903.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (218 samples, 0.20%)</title><rect x="62.0185%" y="1877" width="0.2030%" height="15" fill="rgb(227,49,4)" fg:x="66588" fg:w="218"/><text x="62.2685%" y="1887.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (218 samples, 0.20%)</title><rect x="62.0185%" y="1861" width="0.2030%" height="15" fill="rgb(219,189,53)" fg:x="66588" fg:w="218"/><text x="62.2685%" y="1871.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group (1,597 samples, 1.49%)</title><rect x="60.7471%" y="1909" width="1.4874%" height="15" fill="rgb(241,160,53)" fg:x="65223" fg:w="1597"/><text x="60.9971%" y="1919.50"></text></g><g><title>move_core_types::language_storage::StructTag::module_id (14 samples, 0.01%)</title><rect x="62.2215%" y="1893" width="0.0130%" height="15" fill="rgb(227,115,4)" fg:x="66806" fg:w="14"/><text x="62.4715%" y="1903.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="62.2346%" y="1909" width="0.0158%" height="15" fill="rgb(215,28,28)" fg:x="66820" fg:w="17"/><text x="62.4846%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_core_types::effects::AccountChangeSet&gt;&gt; (26 samples, 0.02%)</title><rect x="62.2504%" y="1909" width="0.0242%" height="15" fill="rgb(237,143,40)" fg:x="66837" fg:w="26"/><text x="62.5004%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="62.2504%" y="1893" width="0.0242%" height="15" fill="rgb(205,107,24)" fg:x="66837" fg:w="26"/><text x="62.5004%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::errors::VMError&gt; (31 samples, 0.03%)</title><rect x="62.2960%" y="1909" width="0.0289%" height="15" fill="rgb(209,112,35)" fg:x="66886" fg:w="31"/><text x="62.5460%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::errors::VMError_&gt;&gt; (11 samples, 0.01%)</title><rect x="62.3147%" y="1893" width="0.0102%" height="15" fill="rgb(206,135,5)" fg:x="66906" fg:w="11"/><text x="62.5647%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::errors::VMError_&gt; (11 samples, 0.01%)</title><rect x="62.3147%" y="1877" width="0.0102%" height="15" fill="rgb(227,217,38)" fg:x="66906" fg:w="11"/><text x="62.5647%" y="1887.50"></text></g><g><title>move_binary_format::errors::PartialVMError::finish (39 samples, 0.04%)</title><rect x="62.3268%" y="1909" width="0.0363%" height="15" fill="rgb(205,0,41)" fg:x="66919" fg:w="39"/><text x="62.5768%" y="1919.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="62.3473%" y="1893" width="0.0158%" height="15" fill="rgb(220,20,40)" fg:x="66941" fg:w="17"/><text x="62.5973%" y="1903.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="62.3491%" y="1877" width="0.0140%" height="15" fill="rgb(216,145,3)" fg:x="66943" fg:w="15"/><text x="62.5991%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="62.3491%" y="1861" width="0.0140%" height="15" fill="rgb(207,130,51)" fg:x="66943" fg:w="15"/><text x="62.5991%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="62.3491%" y="1845" width="0.0140%" height="15" fill="rgb(252,93,13)" fg:x="66943" fg:w="15"/><text x="62.5991%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="62.3491%" y="1829" width="0.0140%" height="15" fill="rgb(210,105,15)" fg:x="66943" fg:w="15"/><text x="62.5991%" y="1839.50"></text></g><g><title>malloc (14 samples, 0.01%)</title><rect x="62.3500%" y="1813" width="0.0130%" height="15" fill="rgb(212,126,31)" fg:x="66944" fg:w="14"/><text x="62.6000%" y="1823.50"></text></g><g><title>move_binary_format::errors::PartialVMError::new (15 samples, 0.01%)</title><rect x="62.3631%" y="1909" width="0.0140%" height="15" fill="rgb(241,167,46)" fg:x="66958" fg:w="15"/><text x="62.6131%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (12 samples, 0.01%)</title><rect x="62.3985%" y="1877" width="0.0112%" height="15" fill="rgb(217,143,19)" fg:x="66996" fg:w="12"/><text x="62.6485%" y="1887.50"></text></g><g><title>move_core_types::effects::AccountChangeSet::add_resource_op (123 samples, 0.11%)</title><rect x="62.3920%" y="1893" width="0.1146%" height="15" fill="rgb(235,117,33)" fg:x="66989" fg:w="123"/><text x="62.6420%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (104 samples, 0.10%)</title><rect x="62.4097%" y="1877" width="0.0969%" height="15" fill="rgb(247,95,6)" fg:x="67008" fg:w="104"/><text x="62.6597%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (98 samples, 0.09%)</title><rect x="62.4152%" y="1861" width="0.0913%" height="15" fill="rgb(243,206,43)" fg:x="67014" fg:w="98"/><text x="62.6652%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (98 samples, 0.09%)</title><rect x="62.4152%" y="1845" width="0.0913%" height="15" fill="rgb(229,65,54)" fg:x="67014" fg:w="98"/><text x="62.6652%" y="1855.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (98 samples, 0.09%)</title><rect x="62.4152%" y="1829" width="0.0913%" height="15" fill="rgb(247,137,34)" fg:x="67014" fg:w="98"/><text x="62.6652%" y="1839.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (98 samples, 0.09%)</title><rect x="62.4152%" y="1813" width="0.0913%" height="15" fill="rgb(245,174,44)" fg:x="67014" fg:w="98"/><text x="62.6652%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.09%)</title><rect x="62.4152%" y="1797" width="0.0913%" height="15" fill="rgb(223,64,15)" fg:x="67014" fg:w="98"/><text x="62.6652%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.09%)</title><rect x="62.4152%" y="1781" width="0.0913%" height="15" fill="rgb(243,153,36)" fg:x="67014" fg:w="98"/><text x="62.6652%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.09%)</title><rect x="62.4152%" y="1765" width="0.0913%" height="15" fill="rgb(252,23,4)" fg:x="67014" fg:w="98"/><text x="62.6652%" y="1775.50"></text></g><g><title>malloc (90 samples, 0.08%)</title><rect x="62.4227%" y="1749" width="0.0838%" height="15" fill="rgb(209,132,13)" fg:x="67022" fg:w="90"/><text x="62.6727%" y="1759.50"></text></g><g><title>[libc.so.6] (87 samples, 0.08%)</title><rect x="62.4255%" y="1733" width="0.0810%" height="15" fill="rgb(209,196,21)" fg:x="67025" fg:w="87"/><text x="62.6755%" y="1743.50"></text></g><g><title>[libc.so.6] (42 samples, 0.04%)</title><rect x="62.4674%" y="1717" width="0.0391%" height="15" fill="rgb(252,197,1)" fg:x="67070" fg:w="42"/><text x="62.7174%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (11 samples, 0.01%)</title><rect x="62.5084%" y="1877" width="0.0102%" height="15" fill="rgb(229,42,46)" fg:x="67114" fg:w="11"/><text x="62.7584%" y="1887.50"></text></g><g><title>move_core_types::effects::ChangeSet::add_resource_op (147 samples, 0.14%)</title><rect x="62.3845%" y="1909" width="0.1369%" height="15" fill="rgb(219,85,8)" fg:x="66981" fg:w="147"/><text x="62.6345%" y="1919.50"></text></g><g><title>move_core_types::effects::ChangeSet::get_or_insert_account_changeset (16 samples, 0.01%)</title><rect x="62.5065%" y="1893" width="0.0149%" height="15" fill="rgb(223,185,14)" fg:x="67112" fg:w="16"/><text x="62.7565%" y="1903.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::split_and_merge_resource_groups (2,105 samples, 1.96%)</title><rect x="60.5888%" y="1925" width="1.9605%" height="15" fill="rgb(217,196,18)" fg:x="65053" fg:w="2105"/><text x="60.8388%" y="1935.50">a..</text></g><g><title>move_core_types::effects::ChangeSet::new (22 samples, 0.02%)</title><rect x="62.5289%" y="1909" width="0.0205%" height="15" fill="rgb(220,122,37)" fg:x="67136" fg:w="22"/><text x="62.7789%" y="1919.50"></text></g><g><title>alloc::alloc::box_free (70 samples, 0.07%)</title><rect x="62.5745%" y="1765" width="0.0652%" height="15" fill="rgb(236,135,33)" fg:x="67185" fg:w="70"/><text x="62.8245%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.07%)</title><rect x="62.5745%" y="1749" width="0.0652%" height="15" fill="rgb(222,86,54)" fg:x="67185" fg:w="70"/><text x="62.8245%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (67 samples, 0.06%)</title><rect x="62.5773%" y="1733" width="0.0624%" height="15" fill="rgb(227,42,22)" fg:x="67188" fg:w="67"/><text x="62.8273%" y="1743.50"></text></g><g><title>cfree (63 samples, 0.06%)</title><rect x="62.5810%" y="1717" width="0.0587%" height="15" fill="rgb(243,101,27)" fg:x="67192" fg:w="63"/><text x="62.8310%" y="1727.50"></text></g><g><title>[libc.so.6] (39 samples, 0.04%)</title><rect x="62.6034%" y="1701" width="0.0363%" height="15" fill="rgb(229,100,8)" fg:x="67216" fg:w="39"/><text x="62.8534%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::code::NativeCodeContext&gt; (20 samples, 0.02%)</title><rect x="62.6397%" y="1765" width="0.0186%" height="15" fill="rgb(252,68,10)" fg:x="67255" fg:w="20"/><text x="62.8897%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::cryptography::ristretto255_point::NativeRistrettoPointContext&gt; (12 samples, 0.01%)</title><rect x="62.6583%" y="1765" width="0.0112%" height="15" fill="rgb(219,19,31)" fg:x="67275" fg:w="12"/><text x="62.9083%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::transaction_context::NativeTransactionContext&gt; (13 samples, 0.01%)</title><rect x="62.6695%" y="1765" width="0.0121%" height="15" fill="rgb(246,150,44)" fg:x="67287" fg:w="13"/><text x="62.9195%" y="1775.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (126 samples, 0.12%)</title><rect x="62.5671%" y="1829" width="0.1174%" height="15" fill="rgb(211,14,39)" fg:x="67177" fg:w="126"/><text x="62.8171%" y="1839.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (126 samples, 0.12%)</title><rect x="62.5671%" y="1813" width="0.1174%" height="15" fill="rgb(221,98,29)" fg:x="67177" fg:w="126"/><text x="62.8171%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (126 samples, 0.12%)</title><rect x="62.5671%" y="1797" width="0.1174%" height="15" fill="rgb(221,70,26)" fg:x="67177" fg:w="126"/><text x="62.8171%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (126 samples, 0.12%)</title><rect x="62.5671%" y="1781" width="0.1174%" height="15" fill="rgb(236,146,30)" fg:x="67177" fg:w="126"/><text x="62.8171%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (135 samples, 0.13%)</title><rect x="62.5624%" y="1845" width="0.1257%" height="15" fill="rgb(226,94,34)" fg:x="67172" fg:w="135"/><text x="62.8124%" y="1855.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (153 samples, 0.14%)</title><rect x="62.5503%" y="1861" width="0.1425%" height="15" fill="rgb(248,132,21)" fg:x="67159" fg:w="153"/><text x="62.8003%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (169 samples, 0.16%)</title><rect x="62.5494%" y="1925" width="0.1574%" height="15" fill="rgb(245,43,50)" fg:x="67158" fg:w="169"/><text x="62.7994%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (169 samples, 0.16%)</title><rect x="62.5494%" y="1909" width="0.1574%" height="15" fill="rgb(245,132,31)" fg:x="67158" fg:w="169"/><text x="62.7994%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::collections::hash::map::RandomState&gt;&gt; (169 samples, 0.16%)</title><rect x="62.5494%" y="1893" width="0.1574%" height="15" fill="rgb(230,171,4)" fg:x="67158" fg:w="169"/><text x="62.7994%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (169 samples, 0.16%)</title><rect x="62.5494%" y="1877" width="0.1574%" height="15" fill="rgb(235,6,45)" fg:x="67158" fg:w="169"/><text x="62.7994%" y="1887.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="62.6965%" y="1861" width="0.0102%" height="15" fill="rgb(220,80,28)" fg:x="67316" fg:w="11"/><text x="62.9465%" y="1871.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.01%)</title><rect x="62.7068%" y="1925" width="0.0121%" height="15" fill="rgb(242,171,9)" fg:x="67327" fg:w="13"/><text x="62.9568%" y="1935.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (26 samples, 0.02%)</title><rect x="62.7785%" y="1861" width="0.0242%" height="15" fill="rgb(214,135,29)" fg:x="67404" fg:w="26"/><text x="63.0285%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (26 samples, 0.02%)</title><rect x="62.7785%" y="1845" width="0.0242%" height="15" fill="rgb(221,229,16)" fg:x="67404" fg:w="26"/><text x="63.0285%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="62.7803%" y="1829" width="0.0224%" height="15" fill="rgb(253,59,46)" fg:x="67406" fg:w="24"/><text x="63.0303%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="62.7803%" y="1813" width="0.0224%" height="15" fill="rgb(250,147,20)" fg:x="67406" fg:w="24"/><text x="63.0303%" y="1823.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="62.7850%" y="1797" width="0.0177%" height="15" fill="rgb(236,64,48)" fg:x="67411" fg:w="19"/><text x="63.0350%" y="1807.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="62.7878%" y="1781" width="0.0149%" height="15" fill="rgb(240,37,42)" fg:x="67414" fg:w="16"/><text x="63.0378%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (32 samples, 0.03%)</title><rect x="62.7748%" y="1877" width="0.0298%" height="15" fill="rgb(220,41,50)" fg:x="67400" fg:w="32"/><text x="63.0248%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (12 samples, 0.01%)</title><rect x="62.8269%" y="1829" width="0.0112%" height="15" fill="rgb(216,51,14)" fg:x="67456" fg:w="12"/><text x="63.0769%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (12 samples, 0.01%)</title><rect x="62.8269%" y="1813" width="0.0112%" height="15" fill="rgb(215,83,10)" fg:x="67456" fg:w="12"/><text x="63.0769%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (38 samples, 0.04%)</title><rect x="62.8046%" y="1861" width="0.0354%" height="15" fill="rgb(206,144,17)" fg:x="67432" fg:w="38"/><text x="63.0546%" y="1871.50"></text></g><g><title>alloc::collections::btree::mem::replace (18 samples, 0.02%)</title><rect x="62.8232%" y="1845" width="0.0168%" height="15" fill="rgb(219,196,37)" fg:x="67452" fg:w="18"/><text x="63.0732%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (77 samples, 0.07%)</title><rect x="62.7729%" y="1893" width="0.0717%" height="15" fill="rgb(226,135,26)" fg:x="67398" fg:w="77"/><text x="63.0229%" y="1903.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (43 samples, 0.04%)</title><rect x="62.8046%" y="1877" width="0.0400%" height="15" fill="rgb(237,195,40)" fg:x="67432" fg:w="43"/><text x="63.0546%" y="1887.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="62.8474%" y="1845" width="0.0130%" height="15" fill="rgb(228,182,42)" fg:x="67478" fg:w="14"/><text x="63.0974%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (17 samples, 0.02%)</title><rect x="62.8455%" y="1877" width="0.0158%" height="15" fill="rgb(224,135,50)" fg:x="67476" fg:w="17"/><text x="63.0955%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (17 samples, 0.02%)</title><rect x="62.8455%" y="1861" width="0.0158%" height="15" fill="rgb(236,215,34)" fg:x="67476" fg:w="17"/><text x="63.0955%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.11%)</title><rect x="62.7552%" y="1909" width="0.1090%" height="15" fill="rgb(244,213,27)" fg:x="67379" fg:w="117"/><text x="63.0052%" y="1919.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="62.8446%" y="1893" width="0.0196%" height="15" fill="rgb(233,37,53)" fg:x="67475" fg:w="21"/><text x="63.0946%" y="1903.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (45 samples, 0.04%)</title><rect x="62.9042%" y="1845" width="0.0419%" height="15" fill="rgb(222,132,14)" fg:x="67539" fg:w="45"/><text x="63.1542%" y="1855.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (45 samples, 0.04%)</title><rect x="62.9042%" y="1829" width="0.0419%" height="15" fill="rgb(219,202,29)" fg:x="67539" fg:w="45"/><text x="63.1542%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.04%)</title><rect x="62.9042%" y="1813" width="0.0419%" height="15" fill="rgb(226,157,39)" fg:x="67539" fg:w="45"/><text x="63.1542%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.04%)</title><rect x="62.9042%" y="1797" width="0.0419%" height="15" fill="rgb(235,213,2)" fg:x="67539" fg:w="45"/><text x="63.1542%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.04%)</title><rect x="62.9042%" y="1781" width="0.0419%" height="15" fill="rgb(250,121,2)" fg:x="67539" fg:w="45"/><text x="63.1542%" y="1791.50"></text></g><g><title>malloc (30 samples, 0.03%)</title><rect x="62.9182%" y="1765" width="0.0279%" height="15" fill="rgb(206,192,33)" fg:x="67554" fg:w="30"/><text x="63.1682%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (86 samples, 0.08%)</title><rect x="62.8670%" y="1909" width="0.0801%" height="15" fill="rgb(240,161,6)" fg:x="67499" fg:w="86"/><text x="63.1170%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (71 samples, 0.07%)</title><rect x="62.8809%" y="1893" width="0.0661%" height="15" fill="rgb(246,53,30)" fg:x="67514" fg:w="71"/><text x="63.1309%" y="1903.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (46 samples, 0.04%)</title><rect x="62.9042%" y="1877" width="0.0428%" height="15" fill="rgb(219,123,43)" fg:x="67539" fg:w="46"/><text x="63.1542%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (46 samples, 0.04%)</title><rect x="62.9042%" y="1861" width="0.0428%" height="15" fill="rgb(236,53,49)" fg:x="67539" fg:w="46"/><text x="63.1542%" y="1871.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::into_inner (12 samples, 0.01%)</title><rect x="62.9545%" y="1909" width="0.0112%" height="15" fill="rgb(241,156,1)" fg:x="67593" fg:w="12"/><text x="63.2045%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_table_extension::TableHandle,move_table_extension::Table&gt;&gt; (17 samples, 0.02%)</title><rect x="62.9750%" y="1909" width="0.0158%" height="15" fill="rgb(209,73,26)" fg:x="67615" fg:w="17"/><text x="63.2250%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="62.9778%" y="1893" width="0.0130%" height="15" fill="rgb(206,114,3)" fg:x="67618" fg:w="14"/><text x="63.2278%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="63.0001%" y="1861" width="0.0102%" height="15" fill="rgb(230,214,9)" fg:x="67642" fg:w="11"/><text x="63.2501%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (23 samples, 0.02%)</title><rect x="62.9908%" y="1909" width="0.0214%" height="15" fill="rgb(240,184,46)" fg:x="67632" fg:w="23"/><text x="63.2408%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (13 samples, 0.01%)</title><rect x="63.0001%" y="1893" width="0.0121%" height="15" fill="rgb(242,169,54)" fg:x="67642" fg:w="13"/><text x="63.2501%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (13 samples, 0.01%)</title><rect x="63.0001%" y="1877" width="0.0121%" height="15" fill="rgb(207,168,50)" fg:x="67642" fg:w="13"/><text x="63.2501%" y="1887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="63.0132%" y="1877" width="0.0140%" height="15" fill="rgb(240,114,2)" fg:x="67656" fg:w="15"/><text x="63.2632%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="63.0169%" y="1861" width="0.0102%" height="15" fill="rgb(211,17,40)" fg:x="67660" fg:w="11"/><text x="63.2669%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="63.0169%" y="1845" width="0.0102%" height="15" fill="rgb(235,97,36)" fg:x="67660" fg:w="11"/><text x="63.2669%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (11 samples, 0.01%)</title><rect x="63.0169%" y="1829" width="0.0102%" height="15" fill="rgb(208,164,11)" fg:x="67660" fg:w="11"/><text x="63.2669%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (26 samples, 0.02%)</title><rect x="63.0123%" y="1909" width="0.0242%" height="15" fill="rgb(242,11,17)" fg:x="67655" fg:w="26"/><text x="63.2623%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (26 samples, 0.02%)</title><rect x="63.0123%" y="1893" width="0.0242%" height="15" fill="rgb(215,86,33)" fg:x="67655" fg:w="26"/><text x="63.2623%" y="1903.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (22 samples, 0.02%)</title><rect x="63.0495%" y="1829" width="0.0205%" height="15" fill="rgb(245,185,28)" fg:x="67695" fg:w="22"/><text x="63.2995%" y="1839.50"></text></g><g><title>move_table_extension::serialize (37 samples, 0.03%)</title><rect x="63.0365%" y="1909" width="0.0345%" height="15" fill="rgb(231,89,42)" fg:x="67681" fg:w="37"/><text x="63.2865%" y="1919.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (36 samples, 0.03%)</title><rect x="63.0374%" y="1893" width="0.0335%" height="15" fill="rgb(210,18,47)" fg:x="67682" fg:w="36"/><text x="63.2874%" y="1903.50"></text></g><g><title>bcs::ser::to_bytes (35 samples, 0.03%)</title><rect x="63.0383%" y="1877" width="0.0326%" height="15" fill="rgb(214,84,8)" fg:x="67683" fg:w="35"/><text x="63.2883%" y="1887.50"></text></g><g><title>bcs::ser::serialize_into (32 samples, 0.03%)</title><rect x="63.0411%" y="1861" width="0.0298%" height="15" fill="rgb(214,222,23)" fg:x="67686" fg:w="32"/><text x="63.2911%" y="1871.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (32 samples, 0.03%)</title><rect x="63.0411%" y="1845" width="0.0298%" height="15" fill="rgb(213,104,21)" fg:x="67686" fg:w="32"/><text x="63.2911%" y="1855.50"></text></g><g><title>move_table_extension::NativeTableContext::into_change_set (392 samples, 0.37%)</title><rect x="62.7189%" y="1925" width="0.3651%" height="15" fill="rgb(238,138,6)" fg:x="67340" fg:w="392"/><text x="62.9689%" y="1935.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::into_effect (14 samples, 0.01%)</title><rect x="63.0709%" y="1909" width="0.0130%" height="15" fill="rgb(205,167,50)" fg:x="67718" fg:w="14"/><text x="63.3209%" y="1919.50"></text></g><g><title>&lt;X as better_any::TidExt&gt;::downcast_box (19 samples, 0.02%)</title><rect x="63.1091%" y="1909" width="0.0177%" height="15" fill="rgb(230,105,27)" fg:x="67759" fg:w="19"/><text x="63.3591%" y="1919.50"></text></g><g><title>&lt;T as better_any::Tid&gt;::self_id (19 samples, 0.02%)</title><rect x="63.1091%" y="1893" width="0.0177%" height="15" fill="rgb(222,97,48)" fg:x="67759" fg:w="19"/><text x="63.3591%" y="1903.50"></text></g><g><title>alloc::alloc::box_free (30 samples, 0.03%)</title><rect x="63.1268%" y="1909" width="0.0279%" height="15" fill="rgb(222,197,14)" fg:x="67778" fg:w="30"/><text x="63.3768%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.03%)</title><rect x="63.1268%" y="1893" width="0.0279%" height="15" fill="rgb(210,105,47)" fg:x="67778" fg:w="30"/><text x="63.3768%" y="1903.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.03%)</title><rect x="63.1268%" y="1877" width="0.0279%" height="15" fill="rgb(238,158,19)" fg:x="67778" fg:w="30"/><text x="63.3768%" y="1887.50"></text></g><g><title>cfree (29 samples, 0.03%)</title><rect x="63.1277%" y="1861" width="0.0270%" height="15" fill="rgb(226,176,23)" fg:x="67779" fg:w="29"/><text x="63.3777%" y="1871.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="63.1296%" y="1845" width="0.0251%" height="15" fill="rgb(208,79,31)" fg:x="67781" fg:w="27"/><text x="63.3796%" y="1855.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.03%)</title><rect x="63.1548%" y="1861" width="0.0298%" height="15" fill="rgb(221,154,21)" fg:x="67808" fg:w="32"/><text x="63.4048%" y="1871.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.03%)</title><rect x="63.1576%" y="1845" width="0.0270%" height="15" fill="rgb(213,61,41)" fg:x="67811" fg:w="29"/><text x="63.4076%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.02%)</title><rect x="63.1846%" y="1845" width="0.0186%" height="15" fill="rgb(215,28,33)" fg:x="67840" fg:w="20"/><text x="63.4346%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.02%)</title><rect x="63.1855%" y="1829" width="0.0177%" height="15" fill="rgb(231,139,26)" fg:x="67841" fg:w="19"/><text x="63.4355%" y="1839.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::remove (136 samples, 0.13%)</title><rect x="63.0840%" y="1925" width="0.1267%" height="15" fill="rgb(232,159,16)" fg:x="67732" fg:w="136"/><text x="63.3340%" y="1935.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (60 samples, 0.06%)</title><rect x="63.1548%" y="1909" width="0.0559%" height="15" fill="rgb(233,80,10)" fg:x="67808" fg:w="60"/><text x="63.4048%" y="1919.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (60 samples, 0.06%)</title><rect x="63.1548%" y="1893" width="0.0559%" height="15" fill="rgb(208,147,29)" fg:x="67808" fg:w="60"/><text x="63.4048%" y="1903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (60 samples, 0.06%)</title><rect x="63.1548%" y="1877" width="0.0559%" height="15" fill="rgb(213,10,12)" fg:x="67808" fg:w="60"/><text x="63.4048%" y="1887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (28 samples, 0.03%)</title><rect x="63.1846%" y="1861" width="0.0261%" height="15" fill="rgb(231,218,13)" fg:x="67840" fg:w="28"/><text x="63.4346%" y="1871.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (57 samples, 0.05%)</title><rect x="63.3075%" y="1845" width="0.0531%" height="15" fill="rgb(244,199,44)" fg:x="67972" fg:w="57"/><text x="63.5575%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (57 samples, 0.05%)</title><rect x="63.3075%" y="1829" width="0.0531%" height="15" fill="rgb(240,144,53)" fg:x="67972" fg:w="57"/><text x="63.5575%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.05%)</title><rect x="63.3131%" y="1813" width="0.0475%" height="15" fill="rgb(223,57,28)" fg:x="67978" fg:w="51"/><text x="63.5631%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.05%)</title><rect x="63.3131%" y="1797" width="0.0475%" height="15" fill="rgb(213,134,38)" fg:x="67978" fg:w="51"/><text x="63.5631%" y="1807.50"></text></g><g><title>cfree (49 samples, 0.05%)</title><rect x="63.3150%" y="1781" width="0.0456%" height="15" fill="rgb(251,182,42)" fg:x="67980" fg:w="49"/><text x="63.5650%" y="1791.50"></text></g><g><title>[libc.so.6] (33 samples, 0.03%)</title><rect x="63.3299%" y="1765" width="0.0307%" height="15" fill="rgb(229,93,13)" fg:x="67996" fg:w="33"/><text x="63.5799%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (73 samples, 0.07%)</title><rect x="63.3019%" y="1861" width="0.0680%" height="15" fill="rgb(234,171,3)" fg:x="67966" fg:w="73"/><text x="63.5519%" y="1871.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (18 samples, 0.02%)</title><rect x="63.4025%" y="1813" width="0.0168%" height="15" fill="rgb(241,105,32)" fg:x="68074" fg:w="18"/><text x="63.6525%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (18 samples, 0.02%)</title><rect x="63.4025%" y="1797" width="0.0168%" height="15" fill="rgb(221,66,3)" fg:x="68074" fg:w="18"/><text x="63.6525%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (17 samples, 0.02%)</title><rect x="63.4034%" y="1781" width="0.0158%" height="15" fill="rgb(248,155,29)" fg:x="68075" fg:w="17"/><text x="63.6534%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (61 samples, 0.06%)</title><rect x="63.3699%" y="1845" width="0.0568%" height="15" fill="rgb(231,31,5)" fg:x="68039" fg:w="61"/><text x="63.6199%" y="1855.50"></text></g><g><title>alloc::collections::btree::mem::replace (34 samples, 0.03%)</title><rect x="63.3951%" y="1829" width="0.0317%" height="15" fill="rgb(213,188,31)" fg:x="68066" fg:w="34"/><text x="63.6451%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (159 samples, 0.15%)</title><rect x="63.2963%" y="1877" width="0.1481%" height="15" fill="rgb(212,104,33)" fg:x="67960" fg:w="159"/><text x="63.5463%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (80 samples, 0.07%)</title><rect x="63.3699%" y="1861" width="0.0745%" height="15" fill="rgb(254,77,51)" fg:x="68039" fg:w="80"/><text x="63.6199%" y="1871.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (19 samples, 0.02%)</title><rect x="63.4267%" y="1845" width="0.0177%" height="15" fill="rgb(234,39,26)" fg:x="68100" fg:w="19"/><text x="63.6767%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (28 samples, 0.03%)</title><rect x="63.4472%" y="1861" width="0.0261%" height="15" fill="rgb(208,88,36)" fg:x="68122" fg:w="28"/><text x="63.6972%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (28 samples, 0.03%)</title><rect x="63.4472%" y="1845" width="0.0261%" height="15" fill="rgb(243,222,10)" fg:x="68122" fg:w="28"/><text x="63.6972%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (214 samples, 0.20%)</title><rect x="63.2945%" y="1893" width="0.1993%" height="15" fill="rgb(218,133,52)" fg:x="67958" fg:w="214"/><text x="63.5445%" y="1903.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.05%)</title><rect x="63.4444%" y="1877" width="0.0494%" height="15" fill="rgb(222,25,26)" fg:x="68119" fg:w="53"/><text x="63.6944%" y="1887.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="63.4733%" y="1861" width="0.0205%" height="15" fill="rgb(243,174,24)" fg:x="68150" fg:w="22"/><text x="63.7233%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (180 samples, 0.17%)</title><rect x="63.5003%" y="1893" width="0.1676%" height="15" fill="rgb(233,188,52)" fg:x="68179" fg:w="180"/><text x="63.7503%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (168 samples, 0.16%)</title><rect x="63.5115%" y="1877" width="0.1565%" height="15" fill="rgb(208,89,14)" fg:x="68191" fg:w="168"/><text x="63.7615%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (158 samples, 0.15%)</title><rect x="63.5208%" y="1861" width="0.1472%" height="15" fill="rgb(205,204,21)" fg:x="68201" fg:w="158"/><text x="63.7708%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (158 samples, 0.15%)</title><rect x="63.5208%" y="1845" width="0.1472%" height="15" fill="rgb(246,39,28)" fg:x="68201" fg:w="158"/><text x="63.7708%" y="1855.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (158 samples, 0.15%)</title><rect x="63.5208%" y="1829" width="0.1472%" height="15" fill="rgb(235,71,19)" fg:x="68201" fg:w="158"/><text x="63.7708%" y="1839.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (158 samples, 0.15%)</title><rect x="63.5208%" y="1813" width="0.1472%" height="15" fill="rgb(211,62,39)" fg:x="68201" fg:w="158"/><text x="63.7708%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (158 samples, 0.15%)</title><rect x="63.5208%" y="1797" width="0.1472%" height="15" fill="rgb(246,118,20)" fg:x="68201" fg:w="158"/><text x="63.7708%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (158 samples, 0.15%)</title><rect x="63.5208%" y="1781" width="0.1472%" height="15" fill="rgb(230,82,12)" fg:x="68201" fg:w="158"/><text x="63.7708%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (158 samples, 0.15%)</title><rect x="63.5208%" y="1765" width="0.1472%" height="15" fill="rgb(205,212,34)" fg:x="68201" fg:w="158"/><text x="63.7708%" y="1775.50"></text></g><g><title>malloc (151 samples, 0.14%)</title><rect x="63.5273%" y="1749" width="0.1406%" height="15" fill="rgb(239,90,1)" fg:x="68208" fg:w="151"/><text x="63.7773%" y="1759.50"></text></g><g><title>[libc.so.6] (145 samples, 0.14%)</title><rect x="63.5329%" y="1733" width="0.1350%" height="15" fill="rgb(225,198,50)" fg:x="68214" fg:w="145"/><text x="63.7829%" y="1743.50"></text></g><g><title>[libc.so.6] (92 samples, 0.09%)</title><rect x="63.5823%" y="1717" width="0.0857%" height="15" fill="rgb(227,208,48)" fg:x="68267" fg:w="92"/><text x="63.8323%" y="1727.50"></text></g><g><title>cfree (26 samples, 0.02%)</title><rect x="63.6717%" y="1893" width="0.0242%" height="15" fill="rgb(238,134,41)" fg:x="68363" fg:w="26"/><text x="63.9217%" y="1903.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="63.6819%" y="1877" width="0.0140%" height="15" fill="rgb(241,58,39)" fg:x="68374" fg:w="15"/><text x="63.9319%" y="1887.50"></text></g><g><title>core::mem::drop (21 samples, 0.02%)</title><rect x="63.6987%" y="1861" width="0.0196%" height="15" fill="rgb(214,126,4)" fg:x="68392" fg:w="21"/><text x="63.9487%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::identifier::Identifier,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="63.6987%" y="1845" width="0.0196%" height="15" fill="rgb(235,149,4)" fg:x="68392" fg:w="21"/><text x="63.9487%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="63.6987%" y="1829" width="0.0196%" height="15" fill="rgb(236,59,29)" fg:x="68392" fg:w="21"/><text x="63.9487%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::identifier::Identifier,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="63.6968%" y="1893" width="0.0224%" height="15" fill="rgb(246,11,33)" fg:x="68390" fg:w="24"/><text x="63.9468%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="63.6968%" y="1877" width="0.0224%" height="15" fill="rgb(232,180,35)" fg:x="68390" fg:w="24"/><text x="63.9468%" y="1887.50"></text></g><g><title>core::mem::drop (30 samples, 0.03%)</title><rect x="63.7220%" y="1861" width="0.0279%" height="15" fill="rgb(220,35,37)" fg:x="68417" fg:w="30"/><text x="63.9720%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::language_storage::StructTag,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="63.7220%" y="1845" width="0.0279%" height="15" fill="rgb(238,107,48)" fg:x="68417" fg:w="30"/><text x="63.9720%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="63.7220%" y="1829" width="0.0279%" height="15" fill="rgb(205,65,21)" fg:x="68417" fg:w="30"/><text x="63.9720%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::StructTag,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="63.7192%" y="1893" width="0.0317%" height="15" fill="rgb(246,138,48)" fg:x="68414" fg:w="34"/><text x="63.9692%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="63.7192%" y="1877" width="0.0317%" height="15" fill="rgb(209,220,47)" fg:x="68414" fg:w="34"/><text x="63.9692%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (29 samples, 0.03%)</title><rect x="63.7508%" y="1893" width="0.0270%" height="15" fill="rgb(222,162,49)" fg:x="68448" fg:w="29"/><text x="64.0008%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="63.7536%" y="1877" width="0.0242%" height="15" fill="rgb(243,123,11)" fg:x="68451" fg:w="26"/><text x="64.0036%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::identifier::Identifier,(alloc::vec::Vec&lt;u8&gt;,bool)&gt;&gt; (17 samples, 0.02%)</title><rect x="63.7778%" y="1893" width="0.0158%" height="15" fill="rgb(221,229,41)" fg:x="68477" fg:w="17"/><text x="64.0278%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="63.7788%" y="1877" width="0.0149%" height="15" fill="rgb(216,68,4)" fg:x="68478" fg:w="16"/><text x="64.0288%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (18 samples, 0.02%)</title><rect x="63.7937%" y="1893" width="0.0168%" height="15" fill="rgb(207,88,35)" fg:x="68494" fg:w="18"/><text x="64.0437%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="63.7965%" y="1877" width="0.0140%" height="15" fill="rgb(252,2,5)" fg:x="68497" fg:w="15"/><text x="64.0465%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;u8&gt;,u64,move_vm_types::loaded_data::runtime_types::Type,move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="63.8104%" y="1893" width="0.0121%" height="15" fill="rgb(209,173,7)" fg:x="68512" fg:w="13"/><text x="64.0604%" y="1903.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="63.8104%" y="1877" width="0.0121%" height="15" fill="rgb(210,198,52)" fg:x="68512" fg:w="13"/><text x="64.0604%" y="1887.50"></text></g><g><title>cfree (62 samples, 0.06%)</title><rect x="63.8486%" y="1813" width="0.0577%" height="15" fill="rgb(228,152,32)" fg:x="68553" fg:w="62"/><text x="64.0986%" y="1823.50"></text></g><g><title>[libc.so.6] (47 samples, 0.04%)</title><rect x="63.8626%" y="1797" width="0.0438%" height="15" fill="rgb(249,98,29)" fg:x="68568" fg:w="47"/><text x="64.1126%" y="1807.50"></text></g><g><title>cfree (30 samples, 0.03%)</title><rect x="63.9595%" y="1733" width="0.0279%" height="15" fill="rgb(205,148,48)" fg:x="68672" fg:w="30"/><text x="64.2095%" y="1743.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="63.9678%" y="1717" width="0.0196%" height="15" fill="rgb(236,69,34)" fg:x="68681" fg:w="21"/><text x="64.2178%" y="1727.50"></text></g><g><title>cfree (31 samples, 0.03%)</title><rect x="64.0163%" y="1653" width="0.0289%" height="15" fill="rgb(220,151,41)" fg:x="68733" fg:w="31"/><text x="64.2663%" y="1663.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="64.0219%" y="1637" width="0.0233%" height="15" fill="rgb(254,106,24)" fg:x="68739" fg:w="25"/><text x="64.2719%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.12%)</title><rect x="63.9502%" y="1765" width="0.1220%" height="15" fill="rgb(210,37,48)" fg:x="68662" fg:w="131"/><text x="64.2002%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (129 samples, 0.12%)</title><rect x="63.9520%" y="1749" width="0.1201%" height="15" fill="rgb(254,131,5)" fg:x="68664" fg:w="129"/><text x="64.2020%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (91 samples, 0.08%)</title><rect x="63.9874%" y="1733" width="0.0848%" height="15" fill="rgb(216,55,41)" fg:x="68702" fg:w="91"/><text x="64.2374%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (66 samples, 0.06%)</title><rect x="64.0107%" y="1717" width="0.0615%" height="15" fill="rgb(250,35,31)" fg:x="68727" fg:w="66"/><text x="64.2607%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (66 samples, 0.06%)</title><rect x="64.0107%" y="1701" width="0.0615%" height="15" fill="rgb(207,124,33)" fg:x="68727" fg:w="66"/><text x="64.2607%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="64.0107%" y="1685" width="0.0615%" height="15" fill="rgb(249,175,17)" fg:x="68727" fg:w="66"/><text x="64.2607%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (65 samples, 0.06%)</title><rect x="64.0116%" y="1669" width="0.0605%" height="15" fill="rgb(224,175,39)" fg:x="68728" fg:w="65"/><text x="64.2616%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (29 samples, 0.03%)</title><rect x="64.0452%" y="1653" width="0.0270%" height="15" fill="rgb(208,67,49)" fg:x="68764" fg:w="29"/><text x="64.2952%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (17 samples, 0.02%)</title><rect x="64.0563%" y="1637" width="0.0158%" height="15" fill="rgb(222,188,41)" fg:x="68776" fg:w="17"/><text x="64.3063%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (17 samples, 0.02%)</title><rect x="64.0563%" y="1621" width="0.0158%" height="15" fill="rgb(243,213,30)" fg:x="68776" fg:w="17"/><text x="64.3063%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="64.0563%" y="1605" width="0.0158%" height="15" fill="rgb(253,100,45)" fg:x="68776" fg:w="17"/><text x="64.3063%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (17 samples, 0.02%)</title><rect x="64.0563%" y="1589" width="0.0158%" height="15" fill="rgb(226,24,44)" fg:x="68776" fg:w="17"/><text x="64.3063%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (14 samples, 0.01%)</title><rect x="64.0591%" y="1573" width="0.0130%" height="15" fill="rgb(215,41,24)" fg:x="68779" fg:w="14"/><text x="64.3091%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (255 samples, 0.24%)</title><rect x="63.8375%" y="1845" width="0.2375%" height="15" fill="rgb(254,53,33)" fg:x="68541" fg:w="255"/><text x="64.0875%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (253 samples, 0.24%)</title><rect x="63.8393%" y="1829" width="0.2356%" height="15" fill="rgb(242,103,10)" fg:x="68543" fg:w="253"/><text x="64.0893%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (181 samples, 0.17%)</title><rect x="63.9064%" y="1813" width="0.1686%" height="15" fill="rgb(246,29,21)" fg:x="68615" fg:w="181"/><text x="64.1564%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (135 samples, 0.13%)</title><rect x="63.9492%" y="1797" width="0.1257%" height="15" fill="rgb(251,154,1)" fg:x="68661" fg:w="135"/><text x="64.1992%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (134 samples, 0.12%)</title><rect x="63.9502%" y="1781" width="0.1248%" height="15" fill="rgb(254,212,26)" fg:x="68662" fg:w="134"/><text x="64.2002%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (272 samples, 0.25%)</title><rect x="63.8253%" y="1893" width="0.2533%" height="15" fill="rgb(251,187,46)" fg:x="68528" fg:w="272"/><text x="64.0753%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (260 samples, 0.24%)</title><rect x="63.8365%" y="1877" width="0.2422%" height="15" fill="rgb(224,208,14)" fg:x="68540" fg:w="260"/><text x="64.0865%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (259 samples, 0.24%)</title><rect x="63.8375%" y="1861" width="0.2412%" height="15" fill="rgb(222,176,26)" fg:x="68541" fg:w="259"/><text x="64.0875%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="64.0973%" y="1861" width="0.0158%" height="15" fill="rgb(241,219,52)" fg:x="68820" fg:w="17"/><text x="64.3473%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (12 samples, 0.01%)</title><rect x="64.1020%" y="1845" width="0.0112%" height="15" fill="rgb(252,198,21)" fg:x="68825" fg:w="12"/><text x="64.3520%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (39 samples, 0.04%)</title><rect x="64.0787%" y="1893" width="0.0363%" height="15" fill="rgb(244,196,23)" fg:x="68800" fg:w="39"/><text x="64.3287%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (19 samples, 0.02%)</title><rect x="64.0973%" y="1877" width="0.0177%" height="15" fill="rgb(239,121,44)" fg:x="68820" fg:w="19"/><text x="64.3473%" y="1887.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="64.1262%" y="1765" width="0.0186%" height="15" fill="rgb(249,203,23)" fg:x="68851" fg:w="20"/><text x="64.3762%" y="1775.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="64.1327%" y="1749" width="0.0121%" height="15" fill="rgb(238,219,10)" fg:x="68858" fg:w="13"/><text x="64.3827%" y="1759.50"></text></g><g><title>cfree (34 samples, 0.03%)</title><rect x="64.1662%" y="1749" width="0.0317%" height="15" fill="rgb(241,35,46)" fg:x="68894" fg:w="34"/><text x="64.4162%" y="1759.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="64.1783%" y="1733" width="0.0196%" height="15" fill="rgb(218,28,6)" fg:x="68907" fg:w="21"/><text x="64.4283%" y="1743.50"></text></g><g><title>cfree (23 samples, 0.02%)</title><rect x="64.2175%" y="1621" width="0.0214%" height="15" fill="rgb(233,151,50)" fg:x="68949" fg:w="23"/><text x="64.4675%" y="1631.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="64.2193%" y="1605" width="0.0196%" height="15" fill="rgb(208,57,8)" fg:x="68951" fg:w="21"/><text x="64.4693%" y="1615.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="64.2417%" y="1509" width="0.0186%" height="15" fill="rgb(253,99,10)" fg:x="68975" fg:w="20"/><text x="64.4917%" y="1519.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="64.2463%" y="1493" width="0.0140%" height="15" fill="rgb(237,196,49)" fg:x="68980" fg:w="15"/><text x="64.4963%" y="1503.50"></text></g><g><title>cfree (16 samples, 0.01%)</title><rect x="64.2715%" y="1493" width="0.0149%" height="15" fill="rgb(209,51,3)" fg:x="69007" fg:w="16"/><text x="64.5215%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (39 samples, 0.04%)</title><rect x="64.2603%" y="1509" width="0.0363%" height="15" fill="rgb(238,129,10)" fg:x="68995" fg:w="39"/><text x="64.5103%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (97 samples, 0.09%)</title><rect x="64.2091%" y="1637" width="0.0903%" height="15" fill="rgb(246,201,16)" fg:x="68940" fg:w="97"/><text x="64.4591%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (65 samples, 0.06%)</title><rect x="64.2389%" y="1621" width="0.0605%" height="15" fill="rgb(250,160,20)" fg:x="68972" fg:w="65"/><text x="64.4889%" y="1631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="64.2389%" y="1605" width="0.0605%" height="15" fill="rgb(251,107,25)" fg:x="68972" fg:w="65"/><text x="64.4889%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (62 samples, 0.06%)</title><rect x="64.2417%" y="1589" width="0.0577%" height="15" fill="rgb(212,103,39)" fg:x="68975" fg:w="62"/><text x="64.4917%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (62 samples, 0.06%)</title><rect x="64.2417%" y="1573" width="0.0577%" height="15" fill="rgb(207,9,29)" fg:x="68975" fg:w="62"/><text x="64.4917%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (62 samples, 0.06%)</title><rect x="64.2417%" y="1557" width="0.0577%" height="15" fill="rgb(227,84,3)" fg:x="68975" fg:w="62"/><text x="64.4917%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.06%)</title><rect x="64.2417%" y="1541" width="0.0577%" height="15" fill="rgb(242,194,7)" fg:x="68975" fg:w="62"/><text x="64.4917%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (62 samples, 0.06%)</title><rect x="64.2417%" y="1525" width="0.0577%" height="15" fill="rgb(230,40,4)" fg:x="68975" fg:w="62"/><text x="64.4917%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (172 samples, 0.16%)</title><rect x="64.1448%" y="1765" width="0.1602%" height="15" fill="rgb(243,229,33)" fg:x="68871" fg:w="172"/><text x="64.3948%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (115 samples, 0.11%)</title><rect x="64.1979%" y="1749" width="0.1071%" height="15" fill="rgb(240,65,24)" fg:x="68928" fg:w="115"/><text x="64.4479%" y="1759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.11%)</title><rect x="64.1979%" y="1733" width="0.1071%" height="15" fill="rgb(212,28,20)" fg:x="68928" fg:w="115"/><text x="64.4479%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (114 samples, 0.11%)</title><rect x="64.1988%" y="1717" width="0.1062%" height="15" fill="rgb(209,72,3)" fg:x="68929" fg:w="114"/><text x="64.4488%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (114 samples, 0.11%)</title><rect x="64.1988%" y="1701" width="0.1062%" height="15" fill="rgb(238,170,36)" fg:x="68929" fg:w="114"/><text x="64.4488%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (114 samples, 0.11%)</title><rect x="64.1988%" y="1685" width="0.1062%" height="15" fill="rgb(236,19,38)" fg:x="68929" fg:w="114"/><text x="64.4488%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.11%)</title><rect x="64.1988%" y="1669" width="0.1062%" height="15" fill="rgb(230,67,43)" fg:x="68929" fg:w="114"/><text x="64.4488%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (114 samples, 0.11%)</title><rect x="64.1988%" y="1653" width="0.1062%" height="15" fill="rgb(227,14,36)" fg:x="68929" fg:w="114"/><text x="64.4488%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (207 samples, 0.19%)</title><rect x="64.1225%" y="1797" width="0.1928%" height="15" fill="rgb(247,171,49)" fg:x="68847" fg:w="207"/><text x="64.3725%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (207 samples, 0.19%)</title><rect x="64.1225%" y="1781" width="0.1928%" height="15" fill="rgb(235,164,51)" fg:x="68847" fg:w="207"/><text x="64.3725%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (11 samples, 0.01%)</title><rect x="64.3050%" y="1765" width="0.0102%" height="15" fill="rgb(246,107,20)" fg:x="69043" fg:w="11"/><text x="64.5550%" y="1775.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (220 samples, 0.20%)</title><rect x="64.1206%" y="1861" width="0.2049%" height="15" fill="rgb(226,88,18)" fg:x="68845" fg:w="220"/><text x="64.3706%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (218 samples, 0.20%)</title><rect x="64.1225%" y="1845" width="0.2030%" height="15" fill="rgb(235,136,9)" fg:x="68847" fg:w="218"/><text x="64.3725%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (218 samples, 0.20%)</title><rect x="64.1225%" y="1829" width="0.2030%" height="15" fill="rgb(209,3,34)" fg:x="68847" fg:w="218"/><text x="64.3725%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (218 samples, 0.20%)</title><rect x="64.1225%" y="1813" width="0.2030%" height="15" fill="rgb(213,38,19)" fg:x="68847" fg:w="218"/><text x="64.3725%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (11 samples, 0.01%)</title><rect x="64.3153%" y="1797" width="0.0102%" height="15" fill="rgb(254,24,24)" fg:x="69054" fg:w="11"/><text x="64.5653%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="64.3153%" y="1781" width="0.0102%" height="15" fill="rgb(219,122,42)" fg:x="69054" fg:w="11"/><text x="64.5653%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (242 samples, 0.23%)</title><rect x="64.1150%" y="1893" width="0.2254%" height="15" fill="rgb(205,128,31)" fg:x="68839" fg:w="242"/><text x="64.3650%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (242 samples, 0.23%)</title><rect x="64.1150%" y="1877" width="0.2254%" height="15" fill="rgb(212,142,0)" fg:x="68839" fg:w="242"/><text x="64.3650%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (11 samples, 0.01%)</title><rect x="64.3302%" y="1861" width="0.0102%" height="15" fill="rgb(211,25,35)" fg:x="69070" fg:w="11"/><text x="64.5802%" y="1871.50"></text></g><g><title>move_core_types::effects::ChangeSet::add_account_changeset (40 samples, 0.04%)</title><rect x="64.3432%" y="1893" width="0.0373%" height="15" fill="rgb(220,150,53)" fg:x="69084" fg:w="40"/><text x="64.5932%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (32 samples, 0.03%)</title><rect x="64.3506%" y="1877" width="0.0298%" height="15" fill="rgb(220,30,24)" fg:x="69092" fg:w="32"/><text x="64.6006%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (21 samples, 0.02%)</title><rect x="64.3609%" y="1861" width="0.0196%" height="15" fill="rgb(218,86,23)" fg:x="69103" fg:w="21"/><text x="64.6109%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (21 samples, 0.02%)</title><rect x="64.3609%" y="1845" width="0.0196%" height="15" fill="rgb(206,62,27)" fg:x="69103" fg:w="21"/><text x="64.6109%" y="1855.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (21 samples, 0.02%)</title><rect x="64.3609%" y="1829" width="0.0196%" height="15" fill="rgb(249,174,0)" fg:x="69103" fg:w="21"/><text x="64.6109%" y="1839.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (21 samples, 0.02%)</title><rect x="64.3609%" y="1813" width="0.0196%" height="15" fill="rgb(246,67,27)" fg:x="69103" fg:w="21"/><text x="64.6109%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="64.3609%" y="1797" width="0.0196%" height="15" fill="rgb(250,195,30)" fg:x="69103" fg:w="21"/><text x="64.6109%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="64.3609%" y="1781" width="0.0196%" height="15" fill="rgb(251,171,50)" fg:x="69103" fg:w="21"/><text x="64.6109%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="64.3609%" y="1765" width="0.0196%" height="15" fill="rgb(236,196,10)" fg:x="69103" fg:w="21"/><text x="64.6109%" y="1775.50"></text></g><g><title>malloc (15 samples, 0.01%)</title><rect x="64.3665%" y="1749" width="0.0140%" height="15" fill="rgb(249,228,52)" fg:x="69109" fg:w="15"/><text x="64.6165%" y="1759.50"></text></g><g><title>move_core_types::effects::ChangeSet::new (17 samples, 0.02%)</title><rect x="64.3804%" y="1893" width="0.0158%" height="15" fill="rgb(219,60,51)" fg:x="69124" fg:w="17"/><text x="64.6304%" y="1903.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.01%)</title><rect x="64.4214%" y="1797" width="0.0130%" height="15" fill="rgb(240,198,24)" fg:x="69168" fg:w="14"/><text x="64.6714%" y="1807.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.01%)</title><rect x="64.4214%" y="1781" width="0.0130%" height="15" fill="rgb(240,192,40)" fg:x="69168" fg:w="14"/><text x="64.6714%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (52 samples, 0.05%)</title><rect x="64.3963%" y="1893" width="0.0484%" height="15" fill="rgb(219,118,5)" fg:x="69141" fg:w="52"/><text x="64.6463%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (51 samples, 0.05%)</title><rect x="64.3972%" y="1877" width="0.0475%" height="15" fill="rgb(205,202,34)" fg:x="69142" fg:w="51"/><text x="64.6472%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (41 samples, 0.04%)</title><rect x="64.4065%" y="1861" width="0.0382%" height="15" fill="rgb(234,153,26)" fg:x="69152" fg:w="41"/><text x="64.6565%" y="1871.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (27 samples, 0.03%)</title><rect x="64.4196%" y="1845" width="0.0251%" height="15" fill="rgb(229,26,29)" fg:x="69166" fg:w="27"/><text x="64.6696%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (27 samples, 0.03%)</title><rect x="64.4196%" y="1829" width="0.0251%" height="15" fill="rgb(237,115,21)" fg:x="69166" fg:w="27"/><text x="64.6696%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (27 samples, 0.03%)</title><rect x="64.4196%" y="1813" width="0.0251%" height="15" fill="rgb(252,144,15)" fg:x="69166" fg:w="27"/><text x="64.6696%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.01%)</title><rect x="64.4345%" y="1797" width="0.0102%" height="15" fill="rgb(232,26,13)" fg:x="69182" fg:w="11"/><text x="64.6845%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.01%)</title><rect x="64.4345%" y="1781" width="0.0102%" height="15" fill="rgb(206,44,19)" fg:x="69182" fg:w="11"/><text x="64.6845%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.01%)</title><rect x="64.4345%" y="1765" width="0.0102%" height="15" fill="rgb(249,159,2)" fg:x="69182" fg:w="11"/><text x="64.6845%" y="1775.50"></text></g><g><title>cfree (31 samples, 0.03%)</title><rect x="64.4810%" y="1749" width="0.0289%" height="15" fill="rgb(231,5,32)" fg:x="69232" fg:w="31"/><text x="64.7310%" y="1759.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="64.4885%" y="1733" width="0.0214%" height="15" fill="rgb(249,210,18)" fg:x="69240" fg:w="23"/><text x="64.7385%" y="1743.50"></text></g><g><title>cfree (45 samples, 0.04%)</title><rect x="64.5528%" y="1733" width="0.0419%" height="15" fill="rgb(215,223,36)" fg:x="69309" fg:w="45"/><text x="64.8028%" y="1743.50"></text></g><g><title>[libc.so.6] (35 samples, 0.03%)</title><rect x="64.5621%" y="1717" width="0.0326%" height="15" fill="rgb(245,185,20)" fg:x="69319" fg:w="35"/><text x="64.8121%" y="1727.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="64.6114%" y="1605" width="0.0130%" height="15" fill="rgb(206,224,11)" fg:x="69372" fg:w="14"/><text x="64.8614%" y="1615.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="64.6124%" y="1589" width="0.0121%" height="15" fill="rgb(248,73,42)" fg:x="69373" fg:w="13"/><text x="64.8624%" y="1599.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="64.6347%" y="1477" width="0.0177%" height="15" fill="rgb(219,149,31)" fg:x="69397" fg:w="19"/><text x="64.8847%" y="1487.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="64.6356%" y="1461" width="0.0168%" height="15" fill="rgb(243,104,17)" fg:x="69398" fg:w="18"/><text x="64.8856%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (31 samples, 0.03%)</title><rect x="64.6347%" y="1493" width="0.0289%" height="15" fill="rgb(244,117,33)" fg:x="69397" fg:w="31"/><text x="64.8847%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="64.6524%" y="1477" width="0.0112%" height="15" fill="rgb(251,25,47)" fg:x="69416" fg:w="12"/><text x="64.9024%" y="1487.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="64.6524%" y="1461" width="0.0112%" height="15" fill="rgb(249,70,13)" fg:x="69416" fg:w="12"/><text x="64.9024%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (67 samples, 0.06%)</title><rect x="64.6077%" y="1621" width="0.0624%" height="15" fill="rgb(217,133,18)" fg:x="69368" fg:w="67"/><text x="64.8577%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (49 samples, 0.05%)</title><rect x="64.6245%" y="1605" width="0.0456%" height="15" fill="rgb(248,97,28)" fg:x="69386" fg:w="49"/><text x="64.8745%" y="1615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="64.6245%" y="1589" width="0.0456%" height="15" fill="rgb(237,193,4)" fg:x="69386" fg:w="49"/><text x="64.8745%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (44 samples, 0.04%)</title><rect x="64.6291%" y="1573" width="0.0410%" height="15" fill="rgb(247,198,45)" fg:x="69391" fg:w="44"/><text x="64.8791%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="64.6301%" y="1557" width="0.0400%" height="15" fill="rgb(245,2,20)" fg:x="69392" fg:w="43"/><text x="64.8801%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (43 samples, 0.04%)</title><rect x="64.6301%" y="1541" width="0.0400%" height="15" fill="rgb(210,71,36)" fg:x="69392" fg:w="43"/><text x="64.8801%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="64.6301%" y="1525" width="0.0400%" height="15" fill="rgb(238,114,30)" fg:x="69392" fg:w="43"/><text x="64.8801%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (43 samples, 0.04%)</title><rect x="64.6301%" y="1509" width="0.0400%" height="15" fill="rgb(241,200,2)" fg:x="69392" fg:w="43"/><text x="64.8801%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (184 samples, 0.17%)</title><rect x="64.5099%" y="1749" width="0.1714%" height="15" fill="rgb(232,106,18)" fg:x="69263" fg:w="184"/><text x="64.7599%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (93 samples, 0.09%)</title><rect x="64.5947%" y="1733" width="0.0866%" height="15" fill="rgb(211,141,18)" fg:x="69354" fg:w="93"/><text x="64.8447%" y="1743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.09%)</title><rect x="64.5947%" y="1717" width="0.0866%" height="15" fill="rgb(224,9,9)" fg:x="69354" fg:w="93"/><text x="64.8447%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (85 samples, 0.08%)</title><rect x="64.6021%" y="1701" width="0.0792%" height="15" fill="rgb(249,137,46)" fg:x="69362" fg:w="85"/><text x="64.8521%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (85 samples, 0.08%)</title><rect x="64.6021%" y="1685" width="0.0792%" height="15" fill="rgb(236,44,45)" fg:x="69362" fg:w="85"/><text x="64.8521%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (85 samples, 0.08%)</title><rect x="64.6021%" y="1669" width="0.0792%" height="15" fill="rgb(205,68,40)" fg:x="69362" fg:w="85"/><text x="64.8521%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.08%)</title><rect x="64.6021%" y="1653" width="0.0792%" height="15" fill="rgb(214,198,49)" fg:x="69362" fg:w="85"/><text x="64.8521%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (85 samples, 0.08%)</title><rect x="64.6021%" y="1637" width="0.0792%" height="15" fill="rgb(226,140,45)" fg:x="69362" fg:w="85"/><text x="64.8521%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (12 samples, 0.01%)</title><rect x="64.6701%" y="1621" width="0.0112%" height="15" fill="rgb(209,109,20)" fg:x="69435" fg:w="12"/><text x="64.9201%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (256 samples, 0.24%)</title><rect x="64.4727%" y="1781" width="0.2384%" height="15" fill="rgb(217,33,46)" fg:x="69223" fg:w="256"/><text x="64.7227%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (252 samples, 0.23%)</title><rect x="64.4764%" y="1765" width="0.2347%" height="15" fill="rgb(232,150,33)" fg:x="69227" fg:w="252"/><text x="64.7264%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (32 samples, 0.03%)</title><rect x="64.6813%" y="1749" width="0.0298%" height="15" fill="rgb(233,76,25)" fg:x="69447" fg:w="32"/><text x="64.9313%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="64.7111%" y="1749" width="0.0233%" height="15" fill="rgb(254,219,23)" fg:x="69479" fg:w="25"/><text x="64.9611%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="64.7111%" y="1733" width="0.0233%" height="15" fill="rgb(233,108,4)" fg:x="69479" fg:w="25"/><text x="64.9611%" y="1743.50"></text></g><g><title>cfree (22 samples, 0.02%)</title><rect x="64.7139%" y="1717" width="0.0205%" height="15" fill="rgb(229,98,6)" fg:x="69482" fg:w="22"/><text x="64.9639%" y="1727.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="64.7223%" y="1701" width="0.0121%" height="15" fill="rgb(217,40,27)" fg:x="69491" fg:w="13"/><text x="64.9723%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (298 samples, 0.28%)</title><rect x="64.4587%" y="1845" width="0.2776%" height="15" fill="rgb(221,35,43)" fg:x="69208" fg:w="298"/><text x="64.7087%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (283 samples, 0.26%)</title><rect x="64.4727%" y="1829" width="0.2636%" height="15" fill="rgb(212,107,11)" fg:x="69223" fg:w="283"/><text x="64.7227%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (283 samples, 0.26%)</title><rect x="64.4727%" y="1813" width="0.2636%" height="15" fill="rgb(245,42,44)" fg:x="69223" fg:w="283"/><text x="64.7227%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (283 samples, 0.26%)</title><rect x="64.4727%" y="1797" width="0.2636%" height="15" fill="rgb(209,31,12)" fg:x="69223" fg:w="283"/><text x="64.7227%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (27 samples, 0.03%)</title><rect x="64.7111%" y="1781" width="0.0251%" height="15" fill="rgb(210,228,54)" fg:x="69479" fg:w="27"/><text x="64.9611%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="64.7111%" y="1765" width="0.0251%" height="15" fill="rgb(241,19,33)" fg:x="69479" fg:w="27"/><text x="64.9611%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (314 samples, 0.29%)</title><rect x="64.4578%" y="1861" width="0.2925%" height="15" fill="rgb(229,51,27)" fg:x="69207" fg:w="314"/><text x="64.7078%" y="1871.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="64.7372%" y="1845" width="0.0130%" height="15" fill="rgb(214,167,49)" fg:x="69507" fg:w="14"/><text x="64.9872%" y="1855.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="64.7400%" y="1829" width="0.0102%" height="15" fill="rgb(248,140,47)" fg:x="69510" fg:w="11"/><text x="64.9900%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::into_effect (355 samples, 0.33%)</title><rect x="64.4447%" y="1893" width="0.3306%" height="15" fill="rgb(228,6,51)" fg:x="69193" fg:w="355"/><text x="64.6947%" y="1903.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::into_effect (345 samples, 0.32%)</title><rect x="64.4540%" y="1877" width="0.3213%" height="15" fill="rgb(242,44,53)" fg:x="69203" fg:w="345"/><text x="64.7040%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;move_vm_types::values::values_impl::GlobalDataStatus&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="64.7502%" y="1861" width="0.0251%" height="15" fill="rgb(249,90,50)" fg:x="69521" fg:w="27"/><text x="65.0002%" y="1871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="64.7502%" y="1845" width="0.0251%" height="15" fill="rgb(222,84,19)" fg:x="69521" fg:w="27"/><text x="65.0002%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.03%)</title><rect x="64.7502%" y="1829" width="0.0251%" height="15" fill="rgb(214,140,12)" fg:x="69521" fg:w="27"/><text x="65.0002%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.03%)</title><rect x="64.7502%" y="1813" width="0.0251%" height="15" fill="rgb(210,20,43)" fg:x="69521" fg:w="27"/><text x="65.0002%" y="1823.50"></text></g><g><title>cfree (21 samples, 0.02%)</title><rect x="64.7558%" y="1797" width="0.0196%" height="15" fill="rgb(243,1,40)" fg:x="69527" fg:w="21"/><text x="65.0058%" y="1807.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="64.7605%" y="1781" width="0.0149%" height="15" fill="rgb(224,102,26)" fg:x="69532" fg:w="16"/><text x="65.0105%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (12 samples, 0.01%)</title><rect x="64.8443%" y="1733" width="0.0112%" height="15" fill="rgb(221,179,1)" fg:x="69622" fg:w="12"/><text x="65.0943%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (37 samples, 0.03%)</title><rect x="64.8238%" y="1765" width="0.0345%" height="15" fill="rgb(216,209,47)" fg:x="69600" fg:w="37"/><text x="65.0738%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (37 samples, 0.03%)</title><rect x="64.8238%" y="1749" width="0.0345%" height="15" fill="rgb(251,135,9)" fg:x="69600" fg:w="37"/><text x="65.0738%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (48 samples, 0.04%)</title><rect x="64.8210%" y="1781" width="0.0447%" height="15" fill="rgb(242,9,36)" fg:x="69597" fg:w="48"/><text x="65.0710%" y="1791.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_seq (13 samples, 0.01%)</title><rect x="64.8806%" y="1749" width="0.0121%" height="15" fill="rgb(249,60,37)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1759.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (13 samples, 0.01%)</title><rect x="64.8806%" y="1733" width="0.0121%" height="15" fill="rgb(230,66,45)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1743.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (13 samples, 0.01%)</title><rect x="64.8806%" y="1717" width="0.0121%" height="15" fill="rgb(216,1,47)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1727.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.01%)</title><rect x="64.8806%" y="1701" width="0.0121%" height="15" fill="rgb(235,8,23)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.01%)</title><rect x="64.8806%" y="1685" width="0.0121%" height="15" fill="rgb(225,136,11)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="64.8806%" y="1669" width="0.0121%" height="15" fill="rgb(228,63,44)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.01%)</title><rect x="64.8806%" y="1653" width="0.0121%" height="15" fill="rgb(240,43,52)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="64.8806%" y="1637" width="0.0121%" height="15" fill="rgb(217,167,36)" fg:x="69661" fg:w="13"/><text x="65.1306%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (57 samples, 0.05%)</title><rect x="64.9234%" y="1493" width="0.0531%" height="15" fill="rgb(250,19,6)" fg:x="69707" fg:w="57"/><text x="65.1734%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (53 samples, 0.05%)</title><rect x="64.9272%" y="1477" width="0.0494%" height="15" fill="rgb(236,60,51)" fg:x="69711" fg:w="53"/><text x="65.1772%" y="1487.50"></text></g><g><title>alloc::alloc::Global::grow_impl (53 samples, 0.05%)</title><rect x="64.9272%" y="1461" width="0.0494%" height="15" fill="rgb(222,217,20)" fg:x="69711" fg:w="53"/><text x="65.1772%" y="1471.50"></text></g><g><title>alloc::alloc::realloc (53 samples, 0.05%)</title><rect x="64.9272%" y="1445" width="0.0494%" height="15" fill="rgb(242,65,52)" fg:x="69711" fg:w="53"/><text x="65.1772%" y="1455.50"></text></g><g><title>realloc (52 samples, 0.05%)</title><rect x="64.9281%" y="1429" width="0.0484%" height="15" fill="rgb(217,5,41)" fg:x="69712" fg:w="52"/><text x="65.1781%" y="1439.50"></text></g><g><title>[libc.so.6] (39 samples, 0.04%)</title><rect x="64.9402%" y="1413" width="0.0363%" height="15" fill="rgb(223,208,53)" fg:x="69725" fg:w="39"/><text x="65.1902%" y="1423.50"></text></g><g><title>[libc.so.6] (29 samples, 0.03%)</title><rect x="64.9495%" y="1397" width="0.0270%" height="15" fill="rgb(221,104,30)" fg:x="69735" fg:w="29"/><text x="65.1995%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (83 samples, 0.08%)</title><rect x="64.9002%" y="1557" width="0.0773%" height="15" fill="rgb(230,210,42)" fg:x="69682" fg:w="83"/><text x="65.1502%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (83 samples, 0.08%)</title><rect x="64.9002%" y="1541" width="0.0773%" height="15" fill="rgb(206,205,27)" fg:x="69682" fg:w="83"/><text x="65.1502%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.06%)</title><rect x="64.9160%" y="1525" width="0.0615%" height="15" fill="rgb(233,114,38)" fg:x="69699" fg:w="66"/><text x="65.1660%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (60 samples, 0.06%)</title><rect x="64.9216%" y="1509" width="0.0559%" height="15" fill="rgb(216,174,36)" fg:x="69705" fg:w="60"/><text x="65.1716%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (210 samples, 0.20%)</title><rect x="64.7828%" y="1813" width="0.1956%" height="15" fill="rgb(211,30,9)" fg:x="69556" fg:w="210"/><text x="65.0328%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (210 samples, 0.20%)</title><rect x="64.7828%" y="1797" width="0.1956%" height="15" fill="rgb(216,8,21)" fg:x="69556" fg:w="210"/><text x="65.0328%" y="1807.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (111 samples, 0.10%)</title><rect x="64.8750%" y="1781" width="0.1034%" height="15" fill="rgb(237,209,39)" fg:x="69655" fg:w="111"/><text x="65.1250%" y="1791.50"></text></g><g><title>serde::ser::Serializer::collect_seq (111 samples, 0.10%)</title><rect x="64.8750%" y="1765" width="0.1034%" height="15" fill="rgb(235,111,47)" fg:x="69655" fg:w="111"/><text x="65.1250%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (92 samples, 0.09%)</title><rect x="64.8927%" y="1749" width="0.0857%" height="15" fill="rgb(216,139,9)" fg:x="69674" fg:w="92"/><text x="65.1427%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (92 samples, 0.09%)</title><rect x="64.8927%" y="1733" width="0.0857%" height="15" fill="rgb(248,185,4)" fg:x="69674" fg:w="92"/><text x="65.1427%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (91 samples, 0.08%)</title><rect x="64.8936%" y="1717" width="0.0848%" height="15" fill="rgb(239,185,25)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1727.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (91 samples, 0.08%)</title><rect x="64.8936%" y="1701" width="0.0848%" height="15" fill="rgb(233,207,8)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (91 samples, 0.08%)</title><rect x="64.8936%" y="1685" width="0.0848%" height="15" fill="rgb(249,220,24)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (91 samples, 0.08%)</title><rect x="64.8936%" y="1669" width="0.0848%" height="15" fill="rgb(221,50,14)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1679.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (91 samples, 0.08%)</title><rect x="64.8936%" y="1653" width="0.0848%" height="15" fill="rgb(227,79,42)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (91 samples, 0.08%)</title><rect x="64.8936%" y="1637" width="0.0848%" height="15" fill="rgb(228,218,49)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1647.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (91 samples, 0.08%)</title><rect x="64.8936%" y="1621" width="0.0848%" height="15" fill="rgb(249,18,15)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (91 samples, 0.08%)</title><rect x="64.8936%" y="1605" width="0.0848%" height="15" fill="rgb(212,84,27)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (91 samples, 0.08%)</title><rect x="64.8936%" y="1589" width="0.0848%" height="15" fill="rgb(207,83,24)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (91 samples, 0.08%)</title><rect x="64.8936%" y="1573" width="0.0848%" height="15" fill="rgb(219,61,7)" fg:x="69675" fg:w="91"/><text x="65.1436%" y="1583.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::finish (6,016 samples, 5.60%)</title><rect x="59.3827%" y="1941" width="5.6032%" height="15" fill="rgb(211,43,29)" fg:x="63758" fg:w="6016"/><text x="59.6327%" y="1951.50">aptos_v..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (1,906 samples, 1.78%)</title><rect x="63.2106%" y="1925" width="1.7752%" height="15" fill="rgb(243,15,23)" fg:x="67868" fg:w="1906"/><text x="63.4606%" y="1935.50">m..</text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (1,903 samples, 1.77%)</title><rect x="63.2134%" y="1909" width="1.7724%" height="15" fill="rgb(217,52,28)" fg:x="67871" fg:w="1903"/><text x="63.4634%" y="1919.50">m..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (226 samples, 0.21%)</title><rect x="64.7754%" y="1893" width="0.2105%" height="15" fill="rgb(210,35,6)" fg:x="69548" fg:w="226"/><text x="65.0254%" y="1903.50"></text></g><g><title>bcs::ser::to_bytes (224 samples, 0.21%)</title><rect x="64.7772%" y="1877" width="0.2086%" height="15" fill="rgb(237,187,28)" fg:x="69550" fg:w="224"/><text x="65.0272%" y="1887.50"></text></g><g><title>bcs::ser::serialize_into (224 samples, 0.21%)</title><rect x="64.7772%" y="1861" width="0.2086%" height="15" fill="rgb(231,136,24)" fg:x="69550" fg:w="224"/><text x="65.0272%" y="1871.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (224 samples, 0.21%)</title><rect x="64.7772%" y="1845" width="0.2086%" height="15" fill="rgb(205,176,52)" fg:x="69550" fg:w="224"/><text x="65.0272%" y="1855.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (222 samples, 0.21%)</title><rect x="64.7791%" y="1829" width="0.2068%" height="15" fill="rgb(218,65,12)" fg:x="69552" fg:w="222"/><text x="65.0291%" y="1839.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn_meta (22 samples, 0.02%)</title><rect x="64.9858%" y="1941" width="0.0205%" height="15" fill="rgb(234,101,21)" fg:x="69774" fg:w="22"/><text x="65.2358%" y="1951.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::max_gas_amount (14 samples, 0.01%)</title><rect x="65.0063%" y="1941" width="0.0130%" height="15" fill="rgb(206,13,20)" fg:x="69796" fg:w="14"/><text x="65.2563%" y="1951.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::success_transaction_cleanup (21,470 samples, 20.00%)</title><rect x="45.0544%" y="1957" width="19.9966%" height="15" fill="rgb(236,89,44)" fg:x="48374" fg:w="21470"/><text x="45.3044%" y="1967.50">aptos_vm::aptos_vm::AptosVM::su..</text></g><g><title>move_core_types::gas_algebra::apply_ratio_round_down (16 samples, 0.01%)</title><rect x="65.0361%" y="1941" width="0.0149%" height="15" fill="rgb(225,52,17)" fg:x="69828" fg:w="16"/><text x="65.2861%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.03%)</title><rect x="65.0957%" y="1461" width="0.0335%" height="15" fill="rgb(214,27,25)" fg:x="69892" fg:w="36"/><text x="65.3457%" y="1471.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.03%)</title><rect x="65.0957%" y="1445" width="0.0335%" height="15" fill="rgb(240,141,35)" fg:x="69892" fg:w="36"/><text x="65.3457%" y="1455.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 0.03%)</title><rect x="65.0957%" y="1429" width="0.0335%" height="15" fill="rgb(216,126,3)" fg:x="69892" fg:w="36"/><text x="65.3457%" y="1439.50"></text></g><g><title>realloc (32 samples, 0.03%)</title><rect x="65.0995%" y="1413" width="0.0298%" height="15" fill="rgb(249,196,23)" fg:x="69896" fg:w="32"/><text x="65.3495%" y="1423.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="65.1069%" y="1397" width="0.0224%" height="15" fill="rgb(215,185,43)" fg:x="69904" fg:w="24"/><text x="65.3569%" y="1407.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="65.1097%" y="1381" width="0.0196%" height="15" fill="rgb(208,194,36)" fg:x="69907" fg:w="21"/><text x="65.3597%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.04%)</title><rect x="65.0920%" y="1477" width="0.0391%" height="15" fill="rgb(245,182,12)" fg:x="69888" fg:w="42"/><text x="65.3420%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (53 samples, 0.05%)</title><rect x="65.0864%" y="1541" width="0.0494%" height="15" fill="rgb(244,222,52)" fg:x="69882" fg:w="53"/><text x="65.3364%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (53 samples, 0.05%)</title><rect x="65.0864%" y="1525" width="0.0494%" height="15" fill="rgb(236,222,51)" fg:x="69882" fg:w="53"/><text x="65.3364%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.05%)</title><rect x="65.0892%" y="1509" width="0.0466%" height="15" fill="rgb(254,71,22)" fg:x="69885" fg:w="50"/><text x="65.3392%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.04%)</title><rect x="65.0911%" y="1493" width="0.0447%" height="15" fill="rgb(250,104,15)" fg:x="69887" fg:w="48"/><text x="65.3411%" y="1503.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args::{{closure}} (93 samples, 0.09%)</title><rect x="65.0529%" y="1781" width="0.0866%" height="15" fill="rgb(229,223,46)" fg:x="69846" fg:w="93"/><text x="65.3029%" y="1791.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (79 samples, 0.07%)</title><rect x="65.0659%" y="1765" width="0.0736%" height="15" fill="rgb(209,129,18)" fg:x="69860" fg:w="79"/><text x="65.3159%" y="1775.50"></text></g><g><title>bcs::ser::to_bytes (71 samples, 0.07%)</title><rect x="65.0734%" y="1749" width="0.0661%" height="15" fill="rgb(224,160,1)" fg:x="69868" fg:w="71"/><text x="65.3234%" y="1759.50"></text></g><g><title>bcs::ser::serialize_into (70 samples, 0.07%)</title><rect x="65.0743%" y="1733" width="0.0652%" height="15" fill="rgb(237,112,21)" fg:x="69869" fg:w="70"/><text x="65.3243%" y="1743.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (70 samples, 0.07%)</title><rect x="65.0743%" y="1717" width="0.0652%" height="15" fill="rgb(215,198,53)" fg:x="69869" fg:w="70"/><text x="65.3243%" y="1727.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (65 samples, 0.06%)</title><rect x="65.0790%" y="1701" width="0.0605%" height="15" fill="rgb(218,227,35)" fg:x="69874" fg:w="65"/><text x="65.3290%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (65 samples, 0.06%)</title><rect x="65.0790%" y="1685" width="0.0605%" height="15" fill="rgb(232,121,22)" fg:x="69874" fg:w="65"/><text x="65.3290%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (63 samples, 0.06%)</title><rect x="65.0808%" y="1669" width="0.0587%" height="15" fill="rgb(235,52,54)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (63 samples, 0.06%)</title><rect x="65.0808%" y="1653" width="0.0587%" height="15" fill="rgb(219,21,44)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (63 samples, 0.06%)</title><rect x="65.0808%" y="1637" width="0.0587%" height="15" fill="rgb(221,51,43)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (63 samples, 0.06%)</title><rect x="65.0808%" y="1621" width="0.0587%" height="15" fill="rgb(225,77,42)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1631.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (63 samples, 0.06%)</title><rect x="65.0808%" y="1605" width="0.0587%" height="15" fill="rgb(214,117,53)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (63 samples, 0.06%)</title><rect x="65.0808%" y="1589" width="0.0587%" height="15" fill="rgb(218,227,27)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (63 samples, 0.06%)</title><rect x="65.0808%" y="1573" width="0.0587%" height="15" fill="rgb(223,214,36)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (63 samples, 0.06%)</title><rect x="65.0808%" y="1557" width="0.0587%" height="15" fill="rgb(235,21,7)" fg:x="69876" fg:w="63"/><text x="65.3308%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (95 samples, 0.09%)</title><rect x="65.0529%" y="1797" width="0.0885%" height="15" fill="rgb(244,216,4)" fg:x="69846" fg:w="95"/><text x="65.3029%" y="1807.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args (106 samples, 0.10%)</title><rect x="65.0510%" y="1957" width="0.0987%" height="15" fill="rgb(249,197,24)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 0.10%)</title><rect x="65.0510%" y="1941" width="0.0987%" height="15" fill="rgb(222,169,49)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (106 samples, 0.10%)</title><rect x="65.0510%" y="1925" width="0.0987%" height="15" fill="rgb(207,137,33)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 0.10%)</title><rect x="65.0510%" y="1909" width="0.0987%" height="15" fill="rgb(219,180,40)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (106 samples, 0.10%)</title><rect x="65.0510%" y="1893" width="0.0987%" height="15" fill="rgb(250,163,42)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (106 samples, 0.10%)</title><rect x="65.0510%" y="1877" width="0.0987%" height="15" fill="rgb(239,163,0)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (106 samples, 0.10%)</title><rect x="65.0510%" y="1861" width="0.0987%" height="15" fill="rgb(252,38,28)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (106 samples, 0.10%)</title><rect x="65.0510%" y="1845" width="0.0987%" height="15" fill="rgb(254,203,26)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (106 samples, 0.10%)</title><rect x="65.0510%" y="1829" width="0.0987%" height="15" fill="rgb(209,129,32)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (106 samples, 0.10%)</title><rect x="65.0510%" y="1813" width="0.0987%" height="15" fill="rgb(207,177,52)" fg:x="69844" fg:w="106"/><text x="65.3010%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.01%)</title><rect x="65.1526%" y="1733" width="0.0121%" height="15" fill="rgb(230,209,36)" fg:x="69953" fg:w="13"/><text x="65.4026%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="65.1526%" y="1717" width="0.0121%" height="15" fill="rgb(238,131,0)" fg:x="69953" fg:w="13"/><text x="65.4026%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="65.1526%" y="1749" width="0.0140%" height="15" fill="rgb(218,61,31)" fg:x="69953" fg:w="15"/><text x="65.4026%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21 samples, 0.02%)</title><rect x="65.1526%" y="1781" width="0.0196%" height="15" fill="rgb(232,6,53)" fg:x="69953" fg:w="21"/><text x="65.4026%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (21 samples, 0.02%)</title><rect x="65.1526%" y="1765" width="0.0196%" height="15" fill="rgb(254,100,32)" fg:x="69953" fg:w="21"/><text x="65.4026%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.02%)</title><rect x="65.1730%" y="1733" width="0.0205%" height="15" fill="rgb(229,194,49)" fg:x="69975" fg:w="22"/><text x="65.4230%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.02%)</title><rect x="65.1740%" y="1717" width="0.0196%" height="15" fill="rgb(206,208,39)" fg:x="69976" fg:w="21"/><text x="65.4240%" y="1727.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.02%)</title><rect x="65.1758%" y="1701" width="0.0177%" height="15" fill="rgb(246,226,14)" fg:x="69978" fg:w="19"/><text x="65.4258%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (18 samples, 0.02%)</title><rect x="65.1768%" y="1685" width="0.0168%" height="15" fill="rgb(226,48,32)" fg:x="69979" fg:w="18"/><text x="65.4268%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (14 samples, 0.01%)</title><rect x="65.1805%" y="1669" width="0.0130%" height="15" fill="rgb(252,43,54)" fg:x="69983" fg:w="14"/><text x="65.4305%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (12 samples, 0.01%)</title><rect x="65.1824%" y="1653" width="0.0112%" height="15" fill="rgb(207,124,0)" fg:x="69985" fg:w="12"/><text x="65.4324%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (25 samples, 0.02%)</title><rect x="65.1730%" y="1765" width="0.0233%" height="15" fill="rgb(248,188,30)" fg:x="69975" fg:w="25"/><text x="65.4230%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.02%)</title><rect x="65.1730%" y="1749" width="0.0233%" height="15" fill="rgb(232,14,43)" fg:x="69975" fg:w="25"/><text x="65.4230%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="65.1721%" y="1781" width="0.0251%" height="15" fill="rgb(218,52,29)" fg:x="69974" fg:w="27"/><text x="65.4221%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 0.05%)</title><rect x="65.1498%" y="1909" width="0.0494%" height="15" fill="rgb(218,176,50)" fg:x="69950" fg:w="53"/><text x="65.3998%" y="1919.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (53 samples, 0.05%)</title><rect x="65.1498%" y="1893" width="0.0494%" height="15" fill="rgb(213,112,0)" fg:x="69950" fg:w="53"/><text x="65.3998%" y="1903.50"></text></g><g><title>core::iter::adapters::try_process (53 samples, 0.05%)</title><rect x="65.1498%" y="1877" width="0.0494%" height="15" fill="rgb(244,216,8)" fg:x="69950" fg:w="53"/><text x="65.3998%" y="1887.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (53 samples, 0.05%)</title><rect x="65.1498%" y="1861" width="0.0494%" height="15" fill="rgb(224,148,53)" fg:x="69950" fg:w="53"/><text x="65.3998%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 0.05%)</title><rect x="65.1498%" y="1845" width="0.0494%" height="15" fill="rgb(241,133,40)" fg:x="69950" fg:w="53"/><text x="65.3998%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (53 samples, 0.05%)</title><rect x="65.1498%" y="1829" width="0.0494%" height="15" fill="rgb(232,17,44)" fg:x="69950" fg:w="53"/><text x="65.3998%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 0.05%)</title><rect x="65.1498%" y="1813" width="0.0494%" height="15" fill="rgb(213,32,25)" fg:x="69950" fg:w="53"/><text x="65.3998%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (51 samples, 0.05%)</title><rect x="65.1516%" y="1797" width="0.0475%" height="15" fill="rgb(249,115,27)" fg:x="69952" fg:w="51"/><text x="65.4016%" y="1807.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (13 samples, 0.01%)</title><rect x="65.2075%" y="1877" width="0.0121%" height="15" fill="rgb(241,50,1)" fg:x="70012" fg:w="13"/><text x="65.4575%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.01%)</title><rect x="65.2075%" y="1861" width="0.0121%" height="15" fill="rgb(244,175,40)" fg:x="70012" fg:w="13"/><text x="65.4575%" y="1871.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.01%)</title><rect x="65.2215%" y="1797" width="0.0140%" height="15" fill="rgb(230,94,34)" fg:x="70027" fg:w="15"/><text x="65.4715%" y="1807.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.01%)</title><rect x="65.2224%" y="1781" width="0.0130%" height="15" fill="rgb(223,185,29)" fg:x="70028" fg:w="14"/><text x="65.4724%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (44 samples, 0.04%)</title><rect x="65.1991%" y="1909" width="0.0410%" height="15" fill="rgb(225,193,15)" fg:x="70003" fg:w="44"/><text x="65.4491%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (37 samples, 0.03%)</title><rect x="65.2056%" y="1893" width="0.0345%" height="15" fill="rgb(252,121,38)" fg:x="70010" fg:w="37"/><text x="65.4556%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (21 samples, 0.02%)</title><rect x="65.2205%" y="1877" width="0.0196%" height="15" fill="rgb(232,44,12)" fg:x="70026" fg:w="21"/><text x="65.4705%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (20 samples, 0.02%)</title><rect x="65.2215%" y="1861" width="0.0186%" height="15" fill="rgb(226,45,54)" fg:x="70027" fg:w="20"/><text x="65.4715%" y="1871.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.02%)</title><rect x="65.2215%" y="1845" width="0.0186%" height="15" fill="rgb(209,67,17)" fg:x="70027" fg:w="20"/><text x="65.4715%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.02%)</title><rect x="65.2215%" y="1829" width="0.0186%" height="15" fill="rgb(219,108,52)" fg:x="70027" fg:w="20"/><text x="65.4715%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.02%)</title><rect x="65.2215%" y="1813" width="0.0186%" height="15" fill="rgb(216,118,19)" fg:x="70027" fg:w="20"/><text x="65.4715%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (19 samples, 0.02%)</title><rect x="65.2410%" y="1893" width="0.0177%" height="15" fill="rgb(228,120,40)" fg:x="70048" fg:w="19"/><text x="65.4910%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (19 samples, 0.02%)</title><rect x="65.2410%" y="1877" width="0.0177%" height="15" fill="rgb(221,218,34)" fg:x="70048" fg:w="19"/><text x="65.4910%" y="1887.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (19 samples, 0.02%)</title><rect x="65.2410%" y="1861" width="0.0177%" height="15" fill="rgb(235,89,14)" fg:x="70048" fg:w="19"/><text x="65.4910%" y="1871.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (19 samples, 0.02%)</title><rect x="65.2410%" y="1845" width="0.0177%" height="15" fill="rgb(248,89,7)" fg:x="70048" fg:w="19"/><text x="65.4910%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19 samples, 0.02%)</title><rect x="65.2410%" y="1829" width="0.0177%" height="15" fill="rgb(212,114,34)" fg:x="70048" fg:w="19"/><text x="65.4910%" y="1839.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.01%)</title><rect x="65.2597%" y="1829" width="0.0140%" height="15" fill="rgb(246,88,32)" fg:x="70068" fg:w="15"/><text x="65.5097%" y="1839.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.01%)</title><rect x="65.2597%" y="1813" width="0.0140%" height="15" fill="rgb(237,135,0)" fg:x="70068" fg:w="15"/><text x="65.5097%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (137 samples, 0.13%)</title><rect x="65.1498%" y="1925" width="0.1276%" height="15" fill="rgb(220,201,54)" fg:x="69950" fg:w="137"/><text x="65.3998%" y="1935.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (40 samples, 0.04%)</title><rect x="65.2401%" y="1909" width="0.0373%" height="15" fill="rgb(210,142,36)" fg:x="70047" fg:w="40"/><text x="65.4901%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (20 samples, 0.02%)</title><rect x="65.2587%" y="1893" width="0.0186%" height="15" fill="rgb(247,189,26)" fg:x="70067" fg:w="20"/><text x="65.5087%" y="1903.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.02%)</title><rect x="65.2587%" y="1877" width="0.0186%" height="15" fill="rgb(223,89,24)" fg:x="70067" fg:w="20"/><text x="65.5087%" y="1887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.02%)</title><rect x="65.2587%" y="1861" width="0.0186%" height="15" fill="rgb(205,90,19)" fg:x="70067" fg:w="20"/><text x="65.5087%" y="1871.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.02%)</title><rect x="65.2587%" y="1845" width="0.0186%" height="15" fill="rgb(234,57,40)" fg:x="70067" fg:w="20"/><text x="65.5087%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (12 samples, 0.01%)</title><rect x="65.3006%" y="1701" width="0.0112%" height="15" fill="rgb(213,109,10)" fg:x="70112" fg:w="12"/><text x="65.5506%" y="1711.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (48 samples, 0.04%)</title><rect x="65.2904%" y="1797" width="0.0447%" height="15" fill="rgb(214,189,23)" fg:x="70101" fg:w="48"/><text x="65.5404%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.04%)</title><rect x="65.2904%" y="1781" width="0.0447%" height="15" fill="rgb(234,200,10)" fg:x="70101" fg:w="48"/><text x="65.5404%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.04%)</title><rect x="65.2904%" y="1765" width="0.0447%" height="15" fill="rgb(221,148,16)" fg:x="70101" fg:w="48"/><text x="65.5404%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (44 samples, 0.04%)</title><rect x="65.2941%" y="1749" width="0.0410%" height="15" fill="rgb(230,115,10)" fg:x="70105" fg:w="44"/><text x="65.5441%" y="1759.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (41 samples, 0.04%)</title><rect x="65.2969%" y="1733" width="0.0382%" height="15" fill="rgb(220,106,42)" fg:x="70108" fg:w="41"/><text x="65.5469%" y="1743.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (41 samples, 0.04%)</title><rect x="65.2969%" y="1717" width="0.0382%" height="15" fill="rgb(225,105,39)" fg:x="70108" fg:w="41"/><text x="65.5469%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (25 samples, 0.02%)</title><rect x="65.3118%" y="1701" width="0.0233%" height="15" fill="rgb(211,161,38)" fg:x="70124" fg:w="25"/><text x="65.5618%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (21 samples, 0.02%)</title><rect x="65.3156%" y="1685" width="0.0196%" height="15" fill="rgb(213,23,19)" fg:x="70128" fg:w="21"/><text x="65.5656%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="65.3351%" y="1797" width="0.0158%" height="15" fill="rgb(240,2,33)" fg:x="70149" fg:w="17"/><text x="65.5851%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (91 samples, 0.08%)</title><rect x="65.2774%" y="1909" width="0.0848%" height="15" fill="rgb(221,29,45)" fg:x="70087" fg:w="91"/><text x="65.5274%" y="1919.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (85 samples, 0.08%)</title><rect x="65.2830%" y="1893" width="0.0792%" height="15" fill="rgb(242,10,19)" fg:x="70093" fg:w="85"/><text x="65.5330%" y="1903.50"></text></g><g><title>core::iter::adapters::try_process (85 samples, 0.08%)</title><rect x="65.2830%" y="1877" width="0.0792%" height="15" fill="rgb(250,84,37)" fg:x="70093" fg:w="85"/><text x="65.5330%" y="1887.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (82 samples, 0.08%)</title><rect x="65.2857%" y="1861" width="0.0764%" height="15" fill="rgb(214,136,7)" fg:x="70096" fg:w="82"/><text x="65.5357%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (82 samples, 0.08%)</title><rect x="65.2857%" y="1845" width="0.0764%" height="15" fill="rgb(231,189,12)" fg:x="70096" fg:w="82"/><text x="65.5357%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (82 samples, 0.08%)</title><rect x="65.2857%" y="1829" width="0.0764%" height="15" fill="rgb(244,40,16)" fg:x="70096" fg:w="82"/><text x="65.5357%" y="1839.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (80 samples, 0.07%)</title><rect x="65.2876%" y="1813" width="0.0745%" height="15" fill="rgb(217,29,15)" fg:x="70098" fg:w="80"/><text x="65.5376%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,aptos_gas::gas_meter::AptosGasMeter&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="65.3519%" y="1797" width="0.0102%" height="15" fill="rgb(235,172,33)" fg:x="70167" fg:w="11"/><text x="65.6019%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,aptos_gas::gas_meter::AptosGasMeter&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="65.3519%" y="1781" width="0.0102%" height="15" fill="rgb(206,148,28)" fg:x="70167" fg:w="11"/><text x="65.6019%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (11 samples, 0.01%)</title><rect x="65.3519%" y="1765" width="0.0102%" height="15" fill="rgb(251,167,37)" fg:x="70167" fg:w="11"/><text x="65.6019%" y="1775.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="65.3519%" y="1749" width="0.0102%" height="15" fill="rgb(229,94,52)" fg:x="70167" fg:w="11"/><text x="65.6019%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="65.3649%" y="1717" width="0.0168%" height="15" fill="rgb(216,132,9)" fg:x="70181" fg:w="18"/><text x="65.6149%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (12 samples, 0.01%)</title><rect x="65.3705%" y="1701" width="0.0112%" height="15" fill="rgb(208,110,29)" fg:x="70187" fg:w="12"/><text x="65.6205%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (11 samples, 0.01%)</title><rect x="65.3714%" y="1685" width="0.0102%" height="15" fill="rgb(241,23,8)" fg:x="70188" fg:w="11"/><text x="65.6214%" y="1695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="65.3621%" y="1781" width="0.0326%" height="15" fill="rgb(208,26,35)" fg:x="70178" fg:w="35"/><text x="65.6121%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="65.3649%" y="1765" width="0.0298%" height="15" fill="rgb(242,165,34)" fg:x="70181" fg:w="32"/><text x="65.6149%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="65.3649%" y="1749" width="0.0298%" height="15" fill="rgb(222,222,33)" fg:x="70181" fg:w="32"/><text x="65.6149%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (32 samples, 0.03%)</title><rect x="65.3649%" y="1733" width="0.0298%" height="15" fill="rgb(227,16,52)" fg:x="70181" fg:w="32"/><text x="65.6149%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (14 samples, 0.01%)</title><rect x="65.3817%" y="1717" width="0.0130%" height="15" fill="rgb(213,93,12)" fg:x="70199" fg:w="14"/><text x="65.6317%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="65.3817%" y="1701" width="0.0130%" height="15" fill="rgb(238,41,5)" fg:x="70199" fg:w="14"/><text x="65.6317%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="65.3817%" y="1685" width="0.0130%" height="15" fill="rgb(211,60,15)" fg:x="70199" fg:w="14"/><text x="65.6317%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="65.3817%" y="1669" width="0.0130%" height="15" fill="rgb(209,11,34)" fg:x="70199" fg:w="14"/><text x="65.6317%" y="1679.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="65.3835%" y="1653" width="0.0112%" height="15" fill="rgb(254,155,53)" fg:x="70201" fg:w="12"/><text x="65.6335%" y="1663.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="65.3621%" y="1845" width="0.0391%" height="15" fill="rgb(236,174,8)" fg:x="70178" fg:w="42"/><text x="65.6121%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (42 samples, 0.04%)</title><rect x="65.3621%" y="1829" width="0.0391%" height="15" fill="rgb(229,31,27)" fg:x="70178" fg:w="42"/><text x="65.6121%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (42 samples, 0.04%)</title><rect x="65.3621%" y="1813" width="0.0391%" height="15" fill="rgb(242,226,26)" fg:x="70178" fg:w="42"/><text x="65.6121%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (42 samples, 0.04%)</title><rect x="65.3621%" y="1797" width="0.0391%" height="15" fill="rgb(234,32,40)" fg:x="70178" fg:w="42"/><text x="65.6121%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (43 samples, 0.04%)</title><rect x="65.3621%" y="1861" width="0.0400%" height="15" fill="rgb(249,226,47)" fg:x="70178" fg:w="43"/><text x="65.6121%" y="1871.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="65.3621%" y="1877" width="0.0522%" height="15" fill="rgb(212,6,26)" fg:x="70178" fg:w="56"/><text x="65.6121%" y="1887.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (13 samples, 0.01%)</title><rect x="65.4022%" y="1861" width="0.0121%" height="15" fill="rgb(249,202,29)" fg:x="70221" fg:w="13"/><text x="65.6522%" y="1871.50"></text></g><g><title>core::mem::drop (62 samples, 0.06%)</title><rect x="65.3621%" y="1909" width="0.0577%" height="15" fill="rgb(226,106,4)" fg:x="70178" fg:w="62"/><text x="65.6121%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (62 samples, 0.06%)</title><rect x="65.3621%" y="1893" width="0.0577%" height="15" fill="rgb(251,2,27)" fg:x="70178" fg:w="62"/><text x="65.6121%" y="1903.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.02%)</title><rect x="65.5484%" y="1861" width="0.0233%" height="15" fill="rgb(236,208,0)" fg:x="70378" fg:w="25"/><text x="65.7984%" y="1871.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (25 samples, 0.02%)</title><rect x="65.5484%" y="1845" width="0.0233%" height="15" fill="rgb(211,66,17)" fg:x="70378" fg:w="25"/><text x="65.7984%" y="1855.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.02%)</title><rect x="65.5484%" y="1829" width="0.0233%" height="15" fill="rgb(216,129,9)" fg:x="70378" fg:w="25"/><text x="65.7984%" y="1839.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25 samples, 0.02%)</title><rect x="65.5484%" y="1813" width="0.0233%" height="15" fill="rgb(215,130,23)" fg:x="70378" fg:w="25"/><text x="65.7984%" y="1823.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.02%)</title><rect x="65.5484%" y="1797" width="0.0233%" height="15" fill="rgb(253,157,11)" fg:x="70378" fg:w="25"/><text x="65.7984%" y="1807.50"></text></g><g><title>move_core_types::language_storage::ModuleId::address (16 samples, 0.01%)</title><rect x="65.5773%" y="1861" width="0.0149%" height="15" fill="rgb(224,25,14)" fg:x="70409" fg:w="16"/><text x="65.8273%" y="1871.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_call_generic (101 samples, 0.09%)</title><rect x="65.5065%" y="1877" width="0.0941%" height="15" fill="rgb(238,16,7)" fg:x="70333" fg:w="101"/><text x="65.7565%" y="1887.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="65.6052%" y="1829" width="0.0102%" height="15" fill="rgb(228,74,11)" fg:x="70439" fg:w="11"/><text x="65.8552%" y="1839.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (22 samples, 0.02%)</title><rect x="65.6155%" y="1829" width="0.0205%" height="15" fill="rgb(239,221,27)" fg:x="70450" fg:w="22"/><text x="65.8655%" y="1839.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame::{{closure}} (22 samples, 0.02%)</title><rect x="65.6155%" y="1813" width="0.0205%" height="15" fill="rgb(229,166,18)" fg:x="70450" fg:w="22"/><text x="65.8655%" y="1823.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (20 samples, 0.02%)</title><rect x="65.6173%" y="1797" width="0.0186%" height="15" fill="rgb(254,94,46)" fg:x="70452" fg:w="20"/><text x="65.8673%" y="1807.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="65.6359%" y="1813" width="0.0233%" height="15" fill="rgb(241,79,19)" fg:x="70472" fg:w="25"/><text x="65.8859%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (78 samples, 0.07%)</title><rect x="65.6006%" y="1861" width="0.0726%" height="15" fill="rgb(228,99,51)" fg:x="70434" fg:w="78"/><text x="65.8506%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (77 samples, 0.07%)</title><rect x="65.6015%" y="1845" width="0.0717%" height="15" fill="rgb(211,15,6)" fg:x="70435" fg:w="77"/><text x="65.8515%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (40 samples, 0.04%)</title><rect x="65.6359%" y="1829" width="0.0373%" height="15" fill="rgb(245,107,54)" fg:x="70472" fg:w="40"/><text x="65.8859%" y="1839.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="65.6602%" y="1813" width="0.0130%" height="15" fill="rgb(243,3,2)" fg:x="70498" fg:w="14"/><text x="65.9102%" y="1823.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (82 samples, 0.08%)</title><rect x="65.6006%" y="1877" width="0.0764%" height="15" fill="rgb(206,122,10)" fg:x="70434" fg:w="82"/><text x="65.8506%" y="1887.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="65.6788%" y="1877" width="0.0177%" height="15" fill="rgb(224,88,4)" fg:x="70518" fg:w="19"/><text x="65.9288%" y="1887.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="65.6862%" y="1861" width="0.0102%" height="15" fill="rgb(230,1,41)" fg:x="70526" fg:w="11"/><text x="65.9362%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (20 samples, 0.02%)</title><rect x="65.6965%" y="1877" width="0.0186%" height="15" fill="rgb(230,1,31)" fg:x="70537" fg:w="20"/><text x="65.9465%" y="1887.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="65.7384%" y="1813" width="0.0112%" height="15" fill="rgb(232,67,19)" fg:x="70582" fg:w="12"/><text x="65.9884%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="65.7188%" y="1861" width="0.0447%" height="15" fill="rgb(222,206,20)" fg:x="70561" fg:w="48"/><text x="65.9688%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (42 samples, 0.04%)</title><rect x="65.7244%" y="1845" width="0.0391%" height="15" fill="rgb(217,225,19)" fg:x="70567" fg:w="42"/><text x="65.9744%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (37 samples, 0.03%)</title><rect x="65.7291%" y="1829" width="0.0345%" height="15" fill="rgb(234,13,33)" fg:x="70572" fg:w="37"/><text x="65.9791%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.01%)</title><rect x="65.7496%" y="1813" width="0.0140%" height="15" fill="rgb(254,5,1)" fg:x="70594" fg:w="15"/><text x="65.9996%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="65.7654%" y="1829" width="0.0196%" height="15" fill="rgb(211,121,41)" fg:x="70611" fg:w="21"/><text x="66.0154%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="65.7654%" y="1813" width="0.0196%" height="15" fill="rgb(213,199,35)" fg:x="70611" fg:w="21"/><text x="66.0154%" y="1823.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="65.7719%" y="1797" width="0.0130%" height="15" fill="rgb(240,118,22)" fg:x="70618" fg:w="14"/><text x="66.0219%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (72 samples, 0.07%)</title><rect x="65.7188%" y="1877" width="0.0671%" height="15" fill="rgb(238,184,25)" fg:x="70561" fg:w="72"/><text x="65.9688%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (24 samples, 0.02%)</title><rect x="65.7635%" y="1861" width="0.0224%" height="15" fill="rgb(210,165,6)" fg:x="70609" fg:w="24"/><text x="66.0135%" y="1871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="65.7635%" y="1845" width="0.0224%" height="15" fill="rgb(235,149,5)" fg:x="70609" fg:w="24"/><text x="66.0135%" y="1855.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="65.8390%" y="1797" width="0.0186%" height="15" fill="rgb(221,63,5)" fg:x="70690" fg:w="20"/><text x="66.0890%" y="1807.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="65.8697%" y="1781" width="0.0177%" height="15" fill="rgb(250,44,41)" fg:x="70723" fg:w="19"/><text x="66.1197%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="65.9005%" y="1749" width="0.0130%" height="15" fill="rgb(235,112,47)" fg:x="70756" fg:w="14"/><text x="66.1505%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (120 samples, 0.11%)</title><rect x="65.8027%" y="1845" width="0.1118%" height="15" fill="rgb(252,176,34)" fg:x="70651" fg:w="120"/><text x="66.0527%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (120 samples, 0.11%)</title><rect x="65.8027%" y="1829" width="0.1118%" height="15" fill="rgb(234,50,19)" fg:x="70651" fg:w="120"/><text x="66.0527%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (109 samples, 0.10%)</title><rect x="65.8129%" y="1813" width="0.1015%" height="15" fill="rgb(241,195,31)" fg:x="70662" fg:w="109"/><text x="66.0629%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (61 samples, 0.06%)</title><rect x="65.8576%" y="1797" width="0.0568%" height="15" fill="rgb(212,93,11)" fg:x="70710" fg:w="61"/><text x="66.1076%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (29 samples, 0.03%)</title><rect x="65.8874%" y="1781" width="0.0270%" height="15" fill="rgb(254,98,51)" fg:x="70742" fg:w="29"/><text x="66.1374%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.01%)</title><rect x="65.9005%" y="1765" width="0.0140%" height="15" fill="rgb(246,18,45)" fg:x="70756" fg:w="15"/><text x="66.1505%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="65.9144%" y="1813" width="0.0205%" height="15" fill="rgb(215,148,23)" fg:x="70771" fg:w="22"/><text x="66.1644%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="65.9144%" y="1797" width="0.0205%" height="15" fill="rgb(227,22,7)" fg:x="70771" fg:w="22"/><text x="66.1644%" y="1807.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="65.9172%" y="1781" width="0.0177%" height="15" fill="rgb(207,210,37)" fg:x="70774" fg:w="19"/><text x="66.1672%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (145 samples, 0.14%)</title><rect x="65.8027%" y="1861" width="0.1350%" height="15" fill="rgb(247,147,42)" fg:x="70651" fg:w="145"/><text x="66.0527%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (25 samples, 0.02%)</title><rect x="65.9144%" y="1845" width="0.0233%" height="15" fill="rgb(226,213,14)" fg:x="70771" fg:w="25"/><text x="66.1644%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="65.9144%" y="1829" width="0.0233%" height="15" fill="rgb(223,18,10)" fg:x="70771" fg:w="25"/><text x="66.1644%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (16 samples, 0.01%)</title><rect x="65.9405%" y="1829" width="0.0149%" height="15" fill="rgb(253,34,22)" fg:x="70799" fg:w="16"/><text x="66.1905%" y="1839.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="65.9414%" y="1813" width="0.0140%" height="15" fill="rgb(222,90,31)" fg:x="70800" fg:w="15"/><text x="66.1914%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="65.9377%" y="1845" width="0.0289%" height="15" fill="rgb(220,182,30)" fg:x="70796" fg:w="31"/><text x="66.1877%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (12 samples, 0.01%)</title><rect x="65.9554%" y="1829" width="0.0112%" height="15" fill="rgb(229,170,12)" fg:x="70815" fg:w="12"/><text x="66.2054%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="65.9806%" y="1765" width="0.0158%" height="15" fill="rgb(210,101,21)" fg:x="70842" fg:w="17"/><text x="66.2306%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (17 samples, 0.02%)</title><rect x="65.9806%" y="1749" width="0.0158%" height="15" fill="rgb(237,177,31)" fg:x="70842" fg:w="17"/><text x="66.2306%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (15 samples, 0.01%)</title><rect x="65.9824%" y="1733" width="0.0140%" height="15" fill="rgb(215,91,34)" fg:x="70844" fg:w="15"/><text x="66.2324%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.03%)</title><rect x="65.9964%" y="1733" width="0.0251%" height="15" fill="rgb(229,206,16)" fg:x="70859" fg:w="27"/><text x="66.2464%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.03%)</title><rect x="65.9964%" y="1717" width="0.0251%" height="15" fill="rgb(235,207,10)" fg:x="70859" fg:w="27"/><text x="66.2464%" y="1727.50"></text></g><g><title>cfree (25 samples, 0.02%)</title><rect x="65.9982%" y="1701" width="0.0233%" height="15" fill="rgb(247,18,10)" fg:x="70861" fg:w="25"/><text x="66.2482%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="65.9666%" y="1829" width="0.0605%" height="15" fill="rgb(232,4,6)" fg:x="70827" fg:w="65"/><text x="66.2166%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (50 samples, 0.05%)</title><rect x="65.9806%" y="1813" width="0.0466%" height="15" fill="rgb(247,93,45)" fg:x="70842" fg:w="50"/><text x="66.2306%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (50 samples, 0.05%)</title><rect x="65.9806%" y="1797" width="0.0466%" height="15" fill="rgb(240,181,18)" fg:x="70842" fg:w="50"/><text x="66.2306%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (50 samples, 0.05%)</title><rect x="65.9806%" y="1781" width="0.0466%" height="15" fill="rgb(208,224,0)" fg:x="70842" fg:w="50"/><text x="66.2306%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (33 samples, 0.03%)</title><rect x="65.9964%" y="1765" width="0.0307%" height="15" fill="rgb(224,207,54)" fg:x="70859" fg:w="33"/><text x="66.2464%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="65.9964%" y="1749" width="0.0307%" height="15" fill="rgb(217,152,29)" fg:x="70859" fg:w="33"/><text x="66.2464%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (277 samples, 0.26%)</title><rect x="65.7943%" y="1877" width="0.2580%" height="15" fill="rgb(243,78,27)" fg:x="70642" fg:w="277"/><text x="66.0443%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (123 samples, 0.11%)</title><rect x="65.9377%" y="1861" width="0.1146%" height="15" fill="rgb(228,111,9)" fg:x="70796" fg:w="123"/><text x="66.1877%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (92 samples, 0.09%)</title><rect x="65.9666%" y="1845" width="0.0857%" height="15" fill="rgb(230,213,21)" fg:x="70827" fg:w="92"/><text x="66.2166%" y="1855.50"></text></g><g><title>cfree (27 samples, 0.03%)</title><rect x="66.0271%" y="1829" width="0.0251%" height="15" fill="rgb(248,50,36)" fg:x="70892" fg:w="27"/><text x="66.2771%" y="1839.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="66.0420%" y="1813" width="0.0102%" height="15" fill="rgb(226,19,31)" fg:x="70908" fg:w="11"/><text x="66.2920%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (34 samples, 0.03%)</title><rect x="66.0523%" y="1877" width="0.0317%" height="15" fill="rgb(205,132,21)" fg:x="70919" fg:w="34"/><text x="66.3023%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (34 samples, 0.03%)</title><rect x="66.0523%" y="1861" width="0.0317%" height="15" fill="rgb(207,42,19)" fg:x="70919" fg:w="34"/><text x="66.3023%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (31 samples, 0.03%)</title><rect x="66.0551%" y="1845" width="0.0289%" height="15" fill="rgb(229,69,35)" fg:x="70922" fg:w="31"/><text x="66.3051%" y="1855.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="66.0551%" y="1829" width="0.0289%" height="15" fill="rgb(226,96,11)" fg:x="70922" fg:w="31"/><text x="66.3051%" y="1839.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="66.0839%" y="1861" width="0.0130%" height="15" fill="rgb(236,133,54)" fg:x="70953" fg:w="14"/><text x="66.3339%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (27 samples, 0.03%)</title><rect x="66.0839%" y="1877" width="0.0251%" height="15" fill="rgb(247,166,21)" fg:x="70953" fg:w="27"/><text x="66.3339%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="66.0970%" y="1861" width="0.0121%" height="15" fill="rgb(220,132,12)" fg:x="70967" fg:w="13"/><text x="66.3470%" y="1871.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (26 samples, 0.02%)</title><rect x="66.1091%" y="1877" width="0.0242%" height="15" fill="rgb(233,27,30)" fg:x="70980" fg:w="26"/><text x="66.3591%" y="1887.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (14 samples, 0.01%)</title><rect x="66.1342%" y="1877" width="0.0130%" height="15" fill="rgb(246,161,27)" fg:x="71007" fg:w="14"/><text x="66.3842%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (11 samples, 0.01%)</title><rect x="66.1370%" y="1861" width="0.0102%" height="15" fill="rgb(240,56,3)" fg:x="71010" fg:w="11"/><text x="66.3870%" y="1871.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="66.1370%" y="1845" width="0.0102%" height="15" fill="rgb(242,190,9)" fg:x="71010" fg:w="11"/><text x="66.3870%" y="1855.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (11 samples, 0.01%)</title><rect x="66.1370%" y="1829" width="0.0102%" height="15" fill="rgb(234,3,52)" fg:x="71010" fg:w="11"/><text x="66.3870%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="66.1575%" y="1845" width="0.0112%" height="15" fill="rgb(220,221,19)" fg:x="71032" fg:w="12"/><text x="66.4075%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (27 samples, 0.03%)</title><rect x="66.1473%" y="1877" width="0.0251%" height="15" fill="rgb(247,178,30)" fg:x="71021" fg:w="27"/><text x="66.3973%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.02%)</title><rect x="66.1557%" y="1861" width="0.0168%" height="15" fill="rgb(234,212,27)" fg:x="71030" fg:w="18"/><text x="66.4057%" y="1871.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (27 samples, 0.03%)</title><rect x="66.1780%" y="1861" width="0.0251%" height="15" fill="rgb(226,199,38)" fg:x="71054" fg:w="27"/><text x="66.4280%" y="1871.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="66.8495%" y="1845" width="0.0102%" height="15" fill="rgb(248,114,22)" fg:x="71775" fg:w="11"/><text x="67.0995%" y="1855.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (37 samples, 0.03%)</title><rect x="66.8868%" y="1797" width="0.0345%" height="15" fill="rgb(221,180,4)" fg:x="71815" fg:w="37"/><text x="67.1368%" y="1807.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (37 samples, 0.03%)</title><rect x="66.8868%" y="1781" width="0.0345%" height="15" fill="rgb(220,229,24)" fg:x="71815" fg:w="37"/><text x="67.1368%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (37 samples, 0.03%)</title><rect x="66.8868%" y="1765" width="0.0345%" height="15" fill="rgb(226,184,27)" fg:x="71815" fg:w="37"/><text x="67.1368%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (37 samples, 0.03%)</title><rect x="66.8868%" y="1749" width="0.0345%" height="15" fill="rgb(232,99,15)" fg:x="71815" fg:w="37"/><text x="67.1368%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (37 samples, 0.03%)</title><rect x="66.8868%" y="1733" width="0.0345%" height="15" fill="rgb(250,167,16)" fg:x="71815" fg:w="37"/><text x="67.1368%" y="1743.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size::Visitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (11 samples, 0.01%)</title><rect x="66.9110%" y="1717" width="0.0102%" height="15" fill="rgb(243,113,6)" fg:x="71841" fg:w="11"/><text x="67.1610%" y="1727.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (47 samples, 0.04%)</title><rect x="66.8821%" y="1813" width="0.0438%" height="15" fill="rgb(244,147,52)" fg:x="71810" fg:w="47"/><text x="67.1321%" y="1823.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (29 samples, 0.03%)</title><rect x="66.9669%" y="1797" width="0.0270%" height="15" fill="rgb(235,59,50)" fg:x="71901" fg:w="29"/><text x="67.2169%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (29 samples, 0.03%)</title><rect x="66.9669%" y="1781" width="0.0270%" height="15" fill="rgb(250,188,6)" fg:x="71901" fg:w="29"/><text x="67.2169%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (29 samples, 0.03%)</title><rect x="66.9669%" y="1765" width="0.0270%" height="15" fill="rgb(236,173,11)" fg:x="71901" fg:w="29"/><text x="67.2169%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (29 samples, 0.03%)</title><rect x="66.9669%" y="1749" width="0.0270%" height="15" fill="rgb(233,64,3)" fg:x="71901" fg:w="29"/><text x="67.2169%" y="1759.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeVisitor::finish (13 samples, 0.01%)</title><rect x="66.9939%" y="1797" width="0.0121%" height="15" fill="rgb(207,92,7)" fg:x="71930" fg:w="13"/><text x="67.2439%" y="1807.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (94 samples, 0.09%)</title><rect x="66.9259%" y="1813" width="0.0875%" height="15" fill="rgb(221,30,19)" fg:x="71857" fg:w="94"/><text x="67.1759%" y="1823.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_copy_loc (175 samples, 0.16%)</title><rect x="66.8598%" y="1845" width="0.1630%" height="15" fill="rgb(245,22,49)" fg:x="71786" fg:w="175"/><text x="67.1098%" y="1855.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (151 samples, 0.14%)</title><rect x="66.8821%" y="1829" width="0.1406%" height="15" fill="rgb(218,39,20)" fg:x="71810" fg:w="151"/><text x="67.1321%" y="1839.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (43 samples, 0.04%)</title><rect x="67.0386%" y="1797" width="0.0400%" height="15" fill="rgb(222,144,21)" fg:x="71978" fg:w="43"/><text x="67.2886%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (37 samples, 0.03%)</title><rect x="67.0442%" y="1781" width="0.0345%" height="15" fill="rgb(222,78,51)" fg:x="71984" fg:w="37"/><text x="67.2942%" y="1791.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (45 samples, 0.04%)</title><rect x="67.0386%" y="1813" width="0.0419%" height="15" fill="rgb(248,213,53)" fg:x="71978" fg:w="45"/><text x="67.2886%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (15 samples, 0.01%)</title><rect x="67.1019%" y="1781" width="0.0140%" height="15" fill="rgb(245,28,34)" fg:x="72046" fg:w="15"/><text x="67.3519%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (33 samples, 0.03%)</title><rect x="67.0870%" y="1797" width="0.0307%" height="15" fill="rgb(229,186,26)" fg:x="72030" fg:w="33"/><text x="67.3370%" y="1807.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_read_ref (101 samples, 0.09%)</title><rect x="67.0293%" y="1845" width="0.0941%" height="15" fill="rgb(224,0,41)" fg:x="71968" fg:w="101"/><text x="67.2793%" y="1855.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (94 samples, 0.09%)</title><rect x="67.0358%" y="1829" width="0.0875%" height="15" fill="rgb(223,136,51)" fg:x="71975" fg:w="94"/><text x="67.2858%" y="1839.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (46 samples, 0.04%)</title><rect x="67.0805%" y="1813" width="0.0428%" height="15" fill="rgb(234,50,9)" fg:x="72023" fg:w="46"/><text x="67.3305%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.03%)</title><rect x="67.1559%" y="1829" width="0.0289%" height="15" fill="rgb(242,164,20)" fg:x="72104" fg:w="31"/><text x="67.4059%" y="1839.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge (54 samples, 0.05%)</title><rect x="67.1848%" y="1829" width="0.0503%" height="15" fill="rgb(230,169,22)" fg:x="72135" fg:w="54"/><text x="67.4348%" y="1839.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (273 samples, 0.25%)</title><rect x="67.1234%" y="1845" width="0.2543%" height="15" fill="rgb(228,82,26)" fg:x="72069" fg:w="273"/><text x="67.3734%" y="1855.50"></text></g><g><title>aptos_gas::instr::InstructionGasParameters::simple_instr_cost (153 samples, 0.14%)</title><rect x="67.2351%" y="1829" width="0.1425%" height="15" fill="rgb(244,220,31)" fg:x="72189" fg:w="153"/><text x="67.4851%" y="1839.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (13 samples, 0.01%)</title><rect x="67.3869%" y="1797" width="0.0121%" height="15" fill="rgb(214,35,25)" fg:x="72352" fg:w="13"/><text x="67.6369%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (11 samples, 0.01%)</title><rect x="67.3888%" y="1781" width="0.0102%" height="15" fill="rgb(245,162,54)" fg:x="72354" fg:w="11"/><text x="67.6388%" y="1791.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (17 samples, 0.02%)</title><rect x="67.3851%" y="1813" width="0.0158%" height="15" fill="rgb(210,43,24)" fg:x="72350" fg:w="17"/><text x="67.6351%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (19 samples, 0.02%)</title><rect x="67.4046%" y="1797" width="0.0177%" height="15" fill="rgb(226,145,51)" fg:x="72371" fg:w="19"/><text x="67.6546%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (14 samples, 0.01%)</title><rect x="67.4093%" y="1781" width="0.0130%" height="15" fill="rgb(237,52,53)" fg:x="72376" fg:w="14"/><text x="67.6593%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (11 samples, 0.01%)</title><rect x="67.4121%" y="1765" width="0.0102%" height="15" fill="rgb(216,226,7)" fg:x="72379" fg:w="11"/><text x="67.6621%" y="1775.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_write_ref (59 samples, 0.05%)</title><rect x="67.3776%" y="1845" width="0.0550%" height="15" fill="rgb(206,223,18)" fg:x="72342" fg:w="59"/><text x="67.6276%" y="1855.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (53 samples, 0.05%)</title><rect x="67.3832%" y="1829" width="0.0494%" height="15" fill="rgb(221,1,10)" fg:x="72348" fg:w="53"/><text x="67.6332%" y="1839.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (34 samples, 0.03%)</title><rect x="67.4009%" y="1813" width="0.0317%" height="15" fill="rgb(221,151,42)" fg:x="72367" fg:w="34"/><text x="67.6509%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (162 samples, 0.15%)</title><rect x="67.4326%" y="1845" width="0.1509%" height="15" fill="rgb(205,183,46)" fg:x="72401" fg:w="162"/><text x="67.6826%" y="1855.50"></text></g><g><title>aptos_gas::instr::InstructionGasParameters::simple_instr_cost (35 samples, 0.03%)</title><rect x="67.5928%" y="1845" width="0.0326%" height="15" fill="rgb(239,229,1)" fg:x="72573" fg:w="35"/><text x="67.8428%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (101 samples, 0.09%)</title><rect x="68.0072%" y="1829" width="0.0941%" height="15" fill="rgb(236,192,23)" fg:x="73018" fg:w="101"/><text x="68.2572%" y="1839.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="68.2186%" y="1701" width="0.0242%" height="15" fill="rgb(215,146,3)" fg:x="73245" fg:w="26"/><text x="68.4686%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.03%)</title><rect x="68.2429%" y="1701" width="0.0335%" height="15" fill="rgb(235,52,27)" fg:x="73271" fg:w="36"/><text x="68.4929%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36 samples, 0.03%)</title><rect x="68.2429%" y="1685" width="0.0335%" height="15" fill="rgb(236,45,20)" fg:x="73271" fg:w="36"/><text x="68.4929%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (36 samples, 0.03%)</title><rect x="68.2429%" y="1669" width="0.0335%" height="15" fill="rgb(235,86,41)" fg:x="73271" fg:w="36"/><text x="68.4929%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.03%)</title><rect x="68.2475%" y="1653" width="0.0289%" height="15" fill="rgb(235,27,27)" fg:x="73276" fg:w="31"/><text x="68.4975%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.03%)</title><rect x="68.2475%" y="1637" width="0.0289%" height="15" fill="rgb(232,4,34)" fg:x="73276" fg:w="31"/><text x="68.4975%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.03%)</title><rect x="68.2475%" y="1621" width="0.0289%" height="15" fill="rgb(215,22,10)" fg:x="73276" fg:w="31"/><text x="68.4975%" y="1631.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="68.2587%" y="1605" width="0.0177%" height="15" fill="rgb(230,228,27)" fg:x="73288" fg:w="19"/><text x="68.5087%" y="1615.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (179 samples, 0.17%)</title><rect x="68.1674%" y="1781" width="0.1667%" height="15" fill="rgb(216,26,51)" fg:x="73190" fg:w="179"/><text x="68.4174%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (146 samples, 0.14%)</title><rect x="68.1982%" y="1765" width="0.1360%" height="15" fill="rgb(225,180,50)" fg:x="73223" fg:w="146"/><text x="68.4482%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (134 samples, 0.12%)</title><rect x="68.2093%" y="1749" width="0.1248%" height="15" fill="rgb(236,211,2)" fg:x="73235" fg:w="134"/><text x="68.4593%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (134 samples, 0.12%)</title><rect x="68.2093%" y="1733" width="0.1248%" height="15" fill="rgb(250,51,20)" fg:x="73235" fg:w="134"/><text x="68.4593%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (134 samples, 0.12%)</title><rect x="68.2093%" y="1717" width="0.1248%" height="15" fill="rgb(232,70,37)" fg:x="73235" fg:w="134"/><text x="68.4593%" y="1727.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (62 samples, 0.06%)</title><rect x="68.2764%" y="1701" width="0.0577%" height="15" fill="rgb(226,183,39)" fg:x="73307" fg:w="62"/><text x="68.5264%" y="1711.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (222 samples, 0.21%)</title><rect x="68.1674%" y="1797" width="0.2068%" height="15" fill="rgb(232,228,21)" fg:x="73190" fg:w="222"/><text x="68.4174%" y="1807.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (43 samples, 0.04%)</title><rect x="68.3341%" y="1781" width="0.0400%" height="15" fill="rgb(251,118,32)" fg:x="73369" fg:w="43"/><text x="68.5841%" y="1791.50"></text></g><g><title>core::ptr::write (43 samples, 0.04%)</title><rect x="68.3341%" y="1765" width="0.0400%" height="15" fill="rgb(235,172,38)" fg:x="73369" fg:w="43"/><text x="68.5841%" y="1775.50"></text></g><g><title>__rdl_alloc (11 samples, 0.01%)</title><rect x="68.3863%" y="1717" width="0.0102%" height="15" fill="rgb(235,63,18)" fg:x="73425" fg:w="11"/><text x="68.6363%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (342 samples, 0.32%)</title><rect x="68.1013%" y="1829" width="0.3185%" height="15" fill="rgb(225,4,7)" fg:x="73119" fg:w="342"/><text x="68.3513%" y="1839.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (272 samples, 0.25%)</title><rect x="68.1665%" y="1813" width="0.2533%" height="15" fill="rgb(231,61,1)" fg:x="73189" fg:w="272"/><text x="68.4165%" y="1823.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (49 samples, 0.05%)</title><rect x="68.3742%" y="1797" width="0.0456%" height="15" fill="rgb(241,155,22)" fg:x="73412" fg:w="49"/><text x="68.6242%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (49 samples, 0.05%)</title><rect x="68.3742%" y="1781" width="0.0456%" height="15" fill="rgb(209,100,26)" fg:x="73412" fg:w="49"/><text x="68.6242%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.05%)</title><rect x="68.3742%" y="1765" width="0.0456%" height="15" fill="rgb(248,181,15)" fg:x="73412" fg:w="49"/><text x="68.6242%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.05%)</title><rect x="68.3742%" y="1749" width="0.0456%" height="15" fill="rgb(214,94,31)" fg:x="73412" fg:w="49"/><text x="68.6242%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.05%)</title><rect x="68.3742%" y="1733" width="0.0456%" height="15" fill="rgb(207,16,42)" fg:x="73412" fg:w="49"/><text x="68.6242%" y="1743.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="68.4021%" y="1717" width="0.0177%" height="15" fill="rgb(208,127,13)" fg:x="73442" fg:w="19"/><text x="68.6521%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (41 samples, 0.04%)</title><rect x="68.4291%" y="1829" width="0.0382%" height="15" fill="rgb(220,211,18)" fg:x="73471" fg:w="41"/><text x="68.6791%" y="1839.50"></text></g><g><title>alloc::alloc::exchange_malloc (32 samples, 0.03%)</title><rect x="68.4375%" y="1813" width="0.0298%" height="15" fill="rgb(221,55,38)" fg:x="73480" fg:w="32"/><text x="68.6875%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="68.4450%" y="1797" width="0.0224%" height="15" fill="rgb(252,219,45)" fg:x="73488" fg:w="24"/><text x="68.6950%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="68.4450%" y="1781" width="0.0224%" height="15" fill="rgb(248,53,35)" fg:x="73488" fg:w="24"/><text x="68.6950%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="68.4450%" y="1765" width="0.0224%" height="15" fill="rgb(210,87,2)" fg:x="73488" fg:w="24"/><text x="68.6950%" y="1775.50"></text></g><g><title>malloc (16 samples, 0.01%)</title><rect x="68.4524%" y="1749" width="0.0149%" height="15" fill="rgb(239,133,9)" fg:x="73496" fg:w="16"/><text x="68.7024%" y="1759.50"></text></g><g><title>cfree (58 samples, 0.05%)</title><rect x="68.4673%" y="1829" width="0.0540%" height="15" fill="rgb(214,114,5)" fg:x="73512" fg:w="58"/><text x="68.7173%" y="1839.50"></text></g><g><title>[libc.so.6] (33 samples, 0.03%)</title><rect x="68.4906%" y="1813" width="0.0307%" height="15" fill="rgb(206,124,24)" fg:x="73537" fg:w="33"/><text x="68.7406%" y="1823.50"></text></g><g><title>cfree (22 samples, 0.02%)</title><rect x="68.5558%" y="1797" width="0.0205%" height="15" fill="rgb(212,57,33)" fg:x="73607" fg:w="22"/><text x="68.8058%" y="1807.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="68.5586%" y="1781" width="0.0177%" height="15" fill="rgb(246,21,20)" fg:x="73610" fg:w="19"/><text x="68.8086%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (72 samples, 0.07%)</title><rect x="68.5297%" y="1829" width="0.0671%" height="15" fill="rgb(253,210,39)" fg:x="73579" fg:w="72"/><text x="68.7797%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (44 samples, 0.04%)</title><rect x="68.5558%" y="1813" width="0.0410%" height="15" fill="rgb(209,187,24)" fg:x="73607" fg:w="44"/><text x="68.8058%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (22 samples, 0.02%)</title><rect x="68.5763%" y="1797" width="0.0205%" height="15" fill="rgb(246,136,17)" fg:x="73629" fg:w="22"/><text x="68.8263%" y="1807.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::has_copy (20 samples, 0.02%)</title><rect x="68.5968%" y="1829" width="0.0186%" height="15" fill="rgb(211,0,30)" fg:x="73651" fg:w="20"/><text x="68.8468%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (15 samples, 0.01%)</title><rect x="68.6489%" y="1813" width="0.0140%" height="15" fill="rgb(216,199,7)" fg:x="73707" fg:w="15"/><text x="68.8989%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (66 samples, 0.06%)</title><rect x="68.6229%" y="1829" width="0.0615%" height="15" fill="rgb(207,210,19)" fg:x="73679" fg:w="66"/><text x="68.8729%" y="1839.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (23 samples, 0.02%)</title><rect x="68.6629%" y="1813" width="0.0214%" height="15" fill="rgb(237,187,39)" fg:x="73722" fg:w="23"/><text x="68.9129%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (185 samples, 0.17%)</title><rect x="68.6853%" y="1829" width="0.1723%" height="15" fill="rgb(243,194,42)" fg:x="73746" fg:w="185"/><text x="68.9353%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (55 samples, 0.05%)</title><rect x="68.8063%" y="1813" width="0.0512%" height="15" fill="rgb(225,194,19)" fg:x="73876" fg:w="55"/><text x="69.0563%" y="1823.50"></text></g><g><title>core::ptr::write (33 samples, 0.03%)</title><rect x="68.8268%" y="1797" width="0.0307%" height="15" fill="rgb(224,192,14)" fg:x="73898" fg:w="33"/><text x="69.0768%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::check_ability (15 samples, 0.01%)</title><rect x="68.8576%" y="1829" width="0.0140%" height="15" fill="rgb(252,21,18)" fg:x="73931" fg:w="15"/><text x="69.1076%" y="1839.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="68.9405%" y="1797" width="0.0224%" height="15" fill="rgb(229,69,19)" fg:x="74020" fg:w="24"/><text x="69.1905%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (99 samples, 0.09%)</title><rect x="68.8715%" y="1829" width="0.0922%" height="15" fill="rgb(251,31,53)" fg:x="73946" fg:w="99"/><text x="69.1215%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (25 samples, 0.02%)</title><rect x="68.9405%" y="1813" width="0.0233%" height="15" fill="rgb(218,39,50)" fg:x="74020" fg:w="25"/><text x="69.1905%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="69.0038%" y="1685" width="0.0307%" height="15" fill="rgb(231,50,17)" fg:x="74088" fg:w="33"/><text x="69.2538%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (33 samples, 0.03%)</title><rect x="69.0038%" y="1669" width="0.0307%" height="15" fill="rgb(223,217,31)" fg:x="74088" fg:w="33"/><text x="69.2538%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 0.03%)</title><rect x="69.0038%" y="1653" width="0.0307%" height="15" fill="rgb(225,91,12)" fg:x="74088" fg:w="33"/><text x="69.2538%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 0.03%)</title><rect x="69.0038%" y="1637" width="0.0307%" height="15" fill="rgb(242,58,43)" fg:x="74088" fg:w="33"/><text x="69.2538%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33 samples, 0.03%)</title><rect x="69.0038%" y="1621" width="0.0307%" height="15" fill="rgb(242,32,21)" fg:x="74088" fg:w="33"/><text x="69.2538%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (27 samples, 0.03%)</title><rect x="69.0094%" y="1605" width="0.0251%" height="15" fill="rgb(211,127,1)" fg:x="74094" fg:w="27"/><text x="69.2594%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (25 samples, 0.02%)</title><rect x="69.0113%" y="1589" width="0.0233%" height="15" fill="rgb(231,93,13)" fg:x="74096" fg:w="25"/><text x="69.2613%" y="1599.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (23 samples, 0.02%)</title><rect x="69.0131%" y="1573" width="0.0214%" height="15" fill="rgb(218,83,4)" fg:x="74098" fg:w="23"/><text x="69.2631%" y="1583.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (22 samples, 0.02%)</title><rect x="69.0140%" y="1557" width="0.0205%" height="15" fill="rgb(230,218,10)" fg:x="74099" fg:w="22"/><text x="69.2640%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (82 samples, 0.08%)</title><rect x="68.9656%" y="1829" width="0.0764%" height="15" fill="rgb(235,127,18)" fg:x="74047" fg:w="82"/><text x="69.2156%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (70 samples, 0.07%)</title><rect x="68.9768%" y="1813" width="0.0652%" height="15" fill="rgb(213,137,46)" fg:x="74059" fg:w="70"/><text x="69.2268%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (70 samples, 0.07%)</title><rect x="68.9768%" y="1797" width="0.0652%" height="15" fill="rgb(235,179,24)" fg:x="74059" fg:w="70"/><text x="69.2268%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (70 samples, 0.07%)</title><rect x="68.9768%" y="1781" width="0.0652%" height="15" fill="rgb(247,58,49)" fg:x="74059" fg:w="70"/><text x="69.2268%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (61 samples, 0.06%)</title><rect x="68.9852%" y="1765" width="0.0568%" height="15" fill="rgb(242,222,5)" fg:x="74068" fg:w="61"/><text x="69.2352%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (61 samples, 0.06%)</title><rect x="68.9852%" y="1749" width="0.0568%" height="15" fill="rgb(230,16,48)" fg:x="74068" fg:w="61"/><text x="69.2352%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (61 samples, 0.06%)</title><rect x="68.9852%" y="1733" width="0.0568%" height="15" fill="rgb(241,192,16)" fg:x="74068" fg:w="61"/><text x="69.2352%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 0.05%)</title><rect x="68.9926%" y="1717" width="0.0494%" height="15" fill="rgb(209,25,37)" fg:x="74076" fg:w="53"/><text x="69.2426%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="68.9963%" y="1701" width="0.0456%" height="15" fill="rgb(229,215,13)" fg:x="74080" fg:w="49"/><text x="69.2463%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="69.0960%" y="1733" width="0.0130%" height="15" fill="rgb(213,199,8)" fg:x="74187" fg:w="14"/><text x="69.3460%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="69.0960%" y="1717" width="0.0130%" height="15" fill="rgb(226,151,19)" fg:x="74187" fg:w="14"/><text x="69.3460%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="69.0960%" y="1701" width="0.0130%" height="15" fill="rgb(254,183,12)" fg:x="74187" fg:w="14"/><text x="69.3460%" y="1711.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (68 samples, 0.06%)</title><rect x="69.0578%" y="1813" width="0.0633%" height="15" fill="rgb(245,8,3)" fg:x="74146" fg:w="68"/><text x="69.3078%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="69.0811%" y="1797" width="0.0400%" height="15" fill="rgb(229,159,35)" fg:x="74171" fg:w="43"/><text x="69.3311%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.04%)</title><rect x="69.0848%" y="1781" width="0.0363%" height="15" fill="rgb(209,145,1)" fg:x="74175" fg:w="39"/><text x="69.3348%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.04%)</title><rect x="69.0848%" y="1765" width="0.0363%" height="15" fill="rgb(228,183,16)" fg:x="74175" fg:w="39"/><text x="69.3348%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.04%)</title><rect x="69.0848%" y="1749" width="0.0363%" height="15" fill="rgb(222,68,0)" fg:x="74175" fg:w="39"/><text x="69.3348%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.01%)</title><rect x="69.1090%" y="1733" width="0.0121%" height="15" fill="rgb(209,130,50)" fg:x="74201" fg:w="13"/><text x="69.3590%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (98 samples, 0.09%)</title><rect x="69.0420%" y="1829" width="0.0913%" height="15" fill="rgb(228,176,44)" fg:x="74129" fg:w="98"/><text x="69.2920%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="69.1668%" y="1685" width="0.0168%" height="15" fill="rgb(221,164,2)" fg:x="74263" fg:w="18"/><text x="69.4168%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (18 samples, 0.02%)</title><rect x="69.1668%" y="1669" width="0.0168%" height="15" fill="rgb(249,199,49)" fg:x="74263" fg:w="18"/><text x="69.4168%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="69.1668%" y="1653" width="0.0168%" height="15" fill="rgb(228,205,53)" fg:x="74263" fg:w="18"/><text x="69.4168%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="69.1668%" y="1637" width="0.0168%" height="15" fill="rgb(235,77,20)" fg:x="74263" fg:w="18"/><text x="69.4168%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="69.1668%" y="1621" width="0.0168%" height="15" fill="rgb(227,147,34)" fg:x="74263" fg:w="18"/><text x="69.4168%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (16 samples, 0.01%)</title><rect x="69.1687%" y="1605" width="0.0149%" height="15" fill="rgb(226,203,52)" fg:x="74265" fg:w="16"/><text x="69.4187%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (14 samples, 0.01%)</title><rect x="69.1705%" y="1589" width="0.0130%" height="15" fill="rgb(226,186,23)" fg:x="74267" fg:w="14"/><text x="69.4205%" y="1599.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (14 samples, 0.01%)</title><rect x="69.1705%" y="1573" width="0.0130%" height="15" fill="rgb(236,13,30)" fg:x="74267" fg:w="14"/><text x="69.4205%" y="1583.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (14 samples, 0.01%)</title><rect x="69.1705%" y="1557" width="0.0130%" height="15" fill="rgb(228,121,22)" fg:x="74267" fg:w="14"/><text x="69.4205%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.03%)</title><rect x="69.1547%" y="1813" width="0.0335%" height="15" fill="rgb(248,222,26)" fg:x="74250" fg:w="36"/><text x="69.4047%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (36 samples, 0.03%)</title><rect x="69.1547%" y="1797" width="0.0335%" height="15" fill="rgb(251,72,25)" fg:x="74250" fg:w="36"/><text x="69.4047%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (35 samples, 0.03%)</title><rect x="69.1556%" y="1781" width="0.0326%" height="15" fill="rgb(223,114,24)" fg:x="74251" fg:w="35"/><text x="69.4056%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (31 samples, 0.03%)</title><rect x="69.1593%" y="1765" width="0.0289%" height="15" fill="rgb(232,190,43)" fg:x="74255" fg:w="31"/><text x="69.4093%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.03%)</title><rect x="69.1593%" y="1749" width="0.0289%" height="15" fill="rgb(208,90,0)" fg:x="74255" fg:w="31"/><text x="69.4093%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="69.1593%" y="1733" width="0.0289%" height="15" fill="rgb(234,149,31)" fg:x="74255" fg:w="31"/><text x="69.4093%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.02%)</title><rect x="69.1640%" y="1717" width="0.0242%" height="15" fill="rgb(235,188,36)" fg:x="74260" fg:w="26"/><text x="69.4140%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="69.1668%" y="1701" width="0.0214%" height="15" fill="rgb(219,59,51)" fg:x="74263" fg:w="23"/><text x="69.4168%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (17 samples, 0.02%)</title><rect x="69.1882%" y="1813" width="0.0158%" height="15" fill="rgb(236,101,40)" fg:x="74286" fg:w="17"/><text x="69.4382%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.01%)</title><rect x="69.1901%" y="1797" width="0.0140%" height="15" fill="rgb(235,33,7)" fg:x="74288" fg:w="15"/><text x="69.4401%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="69.1901%" y="1781" width="0.0140%" height="15" fill="rgb(213,169,26)" fg:x="74288" fg:w="15"/><text x="69.4401%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="69.1901%" y="1765" width="0.0140%" height="15" fill="rgb(218,99,34)" fg:x="74288" fg:w="15"/><text x="69.4401%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="69.1901%" y="1749" width="0.0140%" height="15" fill="rgb(210,57,24)" fg:x="74288" fg:w="15"/><text x="69.4401%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27 samples, 0.03%)</title><rect x="69.2059%" y="1797" width="0.0251%" height="15" fill="rgb(231,181,54)" fg:x="74305" fg:w="27"/><text x="69.4559%" y="1807.50"></text></g><g><title>core::ops::function::FnOnce::call_once (26 samples, 0.02%)</title><rect x="69.2068%" y="1781" width="0.0242%" height="15" fill="rgb(251,188,48)" fg:x="74306" fg:w="26"/><text x="69.4568%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="69.2068%" y="1765" width="0.0242%" height="15" fill="rgb(243,12,45)" fg:x="74306" fg:w="26"/><text x="69.4568%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="69.2208%" y="1749" width="0.0102%" height="15" fill="rgb(250,197,9)" fg:x="74321" fg:w="11"/><text x="69.4708%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="69.2208%" y="1733" width="0.0102%" height="15" fill="rgb(235,149,35)" fg:x="74321" fg:w="11"/><text x="69.4708%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (36 samples, 0.03%)</title><rect x="69.2050%" y="1813" width="0.0335%" height="15" fill="rgb(219,27,19)" fg:x="74304" fg:w="36"/><text x="69.4550%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (120 samples, 0.11%)</title><rect x="69.1379%" y="1829" width="0.1118%" height="15" fill="rgb(244,78,31)" fg:x="74232" fg:w="120"/><text x="69.3879%" y="1839.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (12 samples, 0.01%)</title><rect x="69.2385%" y="1813" width="0.0112%" height="15" fill="rgb(241,13,4)" fg:x="74340" fg:w="12"/><text x="69.4885%" y="1823.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (12 samples, 0.01%)</title><rect x="69.2385%" y="1797" width="0.0112%" height="15" fill="rgb(212,194,26)" fg:x="74340" fg:w="12"/><text x="69.4885%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (1,795 samples, 1.67%)</title><rect x="67.6459%" y="1845" width="1.6718%" height="15" fill="rgb(236,80,11)" fg:x="72630" fg:w="1795"/><text x="67.8959%" y="1855.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (61 samples, 0.06%)</title><rect x="69.2609%" y="1829" width="0.0568%" height="15" fill="rgb(206,1,24)" fg:x="74364" fg:w="61"/><text x="69.5109%" y="1839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (44 samples, 0.04%)</title><rect x="69.2767%" y="1813" width="0.0410%" height="15" fill="rgb(238,215,50)" fg:x="74381" fg:w="44"/><text x="69.5267%" y="1823.50"></text></g><g><title>core::cmp::PartialEq::ne (44 samples, 0.04%)</title><rect x="69.2767%" y="1797" width="0.0410%" height="15" fill="rgb(254,126,32)" fg:x="74381" fg:w="44"/><text x="69.5267%" y="1807.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (43 samples, 0.04%)</title><rect x="69.2776%" y="1781" width="0.0400%" height="15" fill="rgb(206,111,53)" fg:x="74382" fg:w="43"/><text x="69.5276%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (35 samples, 0.03%)</title><rect x="69.6306%" y="1829" width="0.0326%" height="15" fill="rgb(218,72,44)" fg:x="74761" fg:w="35"/><text x="69.8806%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="69.7191%" y="1701" width="0.0130%" height="15" fill="rgb(238,25,3)" fg:x="74856" fg:w="14"/><text x="69.9691%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="69.7200%" y="1685" width="0.0121%" height="15" fill="rgb(250,191,7)" fg:x="74857" fg:w="13"/><text x="69.9700%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="69.7200%" y="1669" width="0.0121%" height="15" fill="rgb(238,56,30)" fg:x="74857" fg:w="13"/><text x="69.9700%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="69.7200%" y="1653" width="0.0121%" height="15" fill="rgb(210,27,45)" fg:x="74857" fg:w="13"/><text x="69.9700%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="69.7200%" y="1637" width="0.0121%" height="15" fill="rgb(207,10,50)" fg:x="74857" fg:w="13"/><text x="69.9700%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="69.7200%" y="1621" width="0.0121%" height="15" fill="rgb(249,30,23)" fg:x="74857" fg:w="13"/><text x="69.9700%" y="1631.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (64 samples, 0.06%)</title><rect x="69.6893%" y="1781" width="0.0596%" height="15" fill="rgb(250,80,12)" fg:x="74824" fg:w="64"/><text x="69.9393%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="69.7107%" y="1765" width="0.0382%" height="15" fill="rgb(210,221,37)" fg:x="74847" fg:w="41"/><text x="69.9607%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.04%)</title><rect x="69.7126%" y="1749" width="0.0363%" height="15" fill="rgb(205,96,24)" fg:x="74849" fg:w="39"/><text x="69.9626%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.04%)</title><rect x="69.7126%" y="1733" width="0.0363%" height="15" fill="rgb(247,104,22)" fg:x="74849" fg:w="39"/><text x="69.9626%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.04%)</title><rect x="69.7126%" y="1717" width="0.0363%" height="15" fill="rgb(222,61,53)" fg:x="74849" fg:w="39"/><text x="69.9626%" y="1727.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18 samples, 0.02%)</title><rect x="69.7321%" y="1701" width="0.0168%" height="15" fill="rgb(241,11,53)" fg:x="74870" fg:w="18"/><text x="69.9821%" y="1711.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (83 samples, 0.08%)</title><rect x="69.6893%" y="1797" width="0.0773%" height="15" fill="rgb(230,111,47)" fg:x="74824" fg:w="83"/><text x="69.9393%" y="1807.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (19 samples, 0.02%)</title><rect x="69.7489%" y="1781" width="0.0177%" height="15" fill="rgb(218,187,29)" fg:x="74888" fg:w="19"/><text x="69.9989%" y="1791.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="69.7489%" y="1765" width="0.0177%" height="15" fill="rgb(210,121,46)" fg:x="74888" fg:w="19"/><text x="69.9989%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (139 samples, 0.13%)</title><rect x="69.6632%" y="1829" width="0.1295%" height="15" fill="rgb(250,43,19)" fg:x="74796" fg:w="139"/><text x="69.9132%" y="1839.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (111 samples, 0.10%)</title><rect x="69.6893%" y="1813" width="0.1034%" height="15" fill="rgb(238,61,12)" fg:x="74824" fg:w="111"/><text x="69.9393%" y="1823.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (28 samples, 0.03%)</title><rect x="69.7666%" y="1797" width="0.0261%" height="15" fill="rgb(251,198,9)" fg:x="74907" fg:w="28"/><text x="70.0166%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (25 samples, 0.02%)</title><rect x="69.7694%" y="1781" width="0.0233%" height="15" fill="rgb(214,192,38)" fg:x="74910" fg:w="25"/><text x="70.0194%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="69.7694%" y="1765" width="0.0233%" height="15" fill="rgb(214,73,19)" fg:x="74910" fg:w="25"/><text x="70.0194%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="69.7694%" y="1749" width="0.0233%" height="15" fill="rgb(249,222,49)" fg:x="74910" fg:w="25"/><text x="70.0194%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="69.7694%" y="1733" width="0.0233%" height="15" fill="rgb(231,181,54)" fg:x="74910" fg:w="25"/><text x="70.0194%" y="1743.50"></text></g><g><title>cfree (28 samples, 0.03%)</title><rect x="69.7936%" y="1829" width="0.0261%" height="15" fill="rgb(240,1,13)" fg:x="74936" fg:w="28"/><text x="70.0436%" y="1839.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="69.8029%" y="1813" width="0.0168%" height="15" fill="rgb(225,21,16)" fg:x="74946" fg:w="18"/><text x="70.0529%" y="1823.50"></text></g><g><title>cfree (22 samples, 0.02%)</title><rect x="69.8486%" y="1797" width="0.0205%" height="15" fill="rgb(246,176,50)" fg:x="74995" fg:w="22"/><text x="70.0986%" y="1807.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="69.8560%" y="1781" width="0.0130%" height="15" fill="rgb(208,96,50)" fg:x="75003" fg:w="14"/><text x="70.1060%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (74 samples, 0.07%)</title><rect x="69.8197%" y="1829" width="0.0689%" height="15" fill="rgb(240,219,19)" fg:x="74964" fg:w="74"/><text x="70.0697%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (45 samples, 0.04%)</title><rect x="69.8467%" y="1813" width="0.0419%" height="15" fill="rgb(234,73,5)" fg:x="74993" fg:w="45"/><text x="70.0967%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (21 samples, 0.02%)</title><rect x="69.8690%" y="1797" width="0.0196%" height="15" fill="rgb(225,52,53)" fg:x="75017" fg:w="21"/><text x="70.1190%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (13 samples, 0.01%)</title><rect x="69.8765%" y="1781" width="0.0121%" height="15" fill="rgb(250,12,14)" fg:x="75025" fg:w="13"/><text x="70.1265%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.01%)</title><rect x="69.8951%" y="1813" width="0.0121%" height="15" fill="rgb(242,185,54)" fg:x="75045" fg:w="13"/><text x="70.1451%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (25 samples, 0.02%)</title><rect x="69.8905%" y="1829" width="0.0233%" height="15" fill="rgb(211,206,31)" fg:x="75040" fg:w="25"/><text x="70.1405%" y="1839.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (30 samples, 0.03%)</title><rect x="69.9203%" y="1829" width="0.0279%" height="15" fill="rgb(252,10,33)" fg:x="75072" fg:w="30"/><text x="70.1703%" y="1839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (21 samples, 0.02%)</title><rect x="69.9287%" y="1813" width="0.0196%" height="15" fill="rgb(216,26,7)" fg:x="75081" fg:w="21"/><text x="70.1787%" y="1823.50"></text></g><g><title>core::cmp::PartialEq::ne (21 samples, 0.02%)</title><rect x="69.9287%" y="1797" width="0.0196%" height="15" fill="rgb(228,112,40)" fg:x="75081" fg:w="21"/><text x="70.1787%" y="1807.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="69.9287%" y="1781" width="0.0196%" height="15" fill="rgb(212,21,16)" fg:x="75081" fg:w="21"/><text x="70.1787%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (760 samples, 0.71%)</title><rect x="69.3177%" y="1845" width="0.7078%" height="15" fill="rgb(249,3,29)" fg:x="74425" fg:w="760"/><text x="69.5677%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (83 samples, 0.08%)</title><rect x="69.9482%" y="1829" width="0.0773%" height="15" fill="rgb(221,42,51)" fg:x="75102" fg:w="83"/><text x="70.1982%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (42 samples, 0.04%)</title><rect x="70.0255%" y="1845" width="0.0391%" height="15" fill="rgb(225,90,21)" fg:x="75185" fg:w="42"/><text x="70.2755%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.02%)</title><rect x="70.0805%" y="1813" width="0.0214%" height="15" fill="rgb(242,131,5)" fg:x="75244" fg:w="23"/><text x="70.3305%" y="1823.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.02%)</title><rect x="70.1131%" y="1797" width="0.0158%" height="15" fill="rgb(220,187,28)" fg:x="75279" fg:w="17"/><text x="70.3631%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::lt (17 samples, 0.02%)</title><rect x="70.1131%" y="1781" width="0.0158%" height="15" fill="rgb(210,75,48)" fg:x="75279" fg:w="17"/><text x="70.3631%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (33 samples, 0.03%)</title><rect x="70.1019%" y="1813" width="0.0307%" height="15" fill="rgb(211,91,40)" fg:x="75267" fg:w="33"/><text x="70.3519%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="70.1326%" y="1797" width="0.0196%" height="15" fill="rgb(205,43,18)" fg:x="75300" fg:w="21"/><text x="70.3826%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (16 samples, 0.01%)</title><rect x="70.1522%" y="1797" width="0.0149%" height="15" fill="rgb(207,123,11)" fg:x="75321" fg:w="16"/><text x="70.4022%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (55 samples, 0.05%)</title><rect x="70.1326%" y="1813" width="0.0512%" height="15" fill="rgb(235,89,39)" fg:x="75300" fg:w="55"/><text x="70.3826%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (18 samples, 0.02%)</title><rect x="70.1671%" y="1797" width="0.0168%" height="15" fill="rgb(245,217,27)" fg:x="75337" fg:w="18"/><text x="70.4171%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (136 samples, 0.13%)</title><rect x="70.0646%" y="1845" width="0.1267%" height="15" fill="rgb(216,55,17)" fg:x="75227" fg:w="136"/><text x="70.3146%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (124 samples, 0.12%)</title><rect x="70.0758%" y="1829" width="0.1155%" height="15" fill="rgb(252,116,44)" fg:x="75239" fg:w="124"/><text x="70.3258%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (39 samples, 0.04%)</title><rect x="70.2081%" y="1813" width="0.0363%" height="15" fill="rgb(229,153,4)" fg:x="75381" fg:w="39"/><text x="70.4581%" y="1823.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.02%)</title><rect x="70.2658%" y="1797" width="0.0205%" height="15" fill="rgb(222,24,35)" fg:x="75443" fg:w="22"/><text x="70.5158%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::add_checked (22 samples, 0.02%)</title><rect x="70.2658%" y="1781" width="0.0205%" height="15" fill="rgb(214,26,20)" fg:x="75443" fg:w="22"/><text x="70.5158%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (49 samples, 0.05%)</title><rect x="70.2444%" y="1813" width="0.0456%" height="15" fill="rgb(215,14,45)" fg:x="75420" fg:w="49"/><text x="70.4944%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.02%)</title><rect x="70.2900%" y="1797" width="0.0224%" height="15" fill="rgb(217,212,50)" fg:x="75469" fg:w="24"/><text x="70.5400%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (19 samples, 0.02%)</title><rect x="70.3124%" y="1797" width="0.0177%" height="15" fill="rgb(230,172,52)" fg:x="75493" fg:w="19"/><text x="70.5624%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (83 samples, 0.08%)</title><rect x="70.2900%" y="1813" width="0.0773%" height="15" fill="rgb(210,48,36)" fg:x="75469" fg:w="83"/><text x="70.5400%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (40 samples, 0.04%)</title><rect x="70.3301%" y="1797" width="0.0373%" height="15" fill="rgb(216,213,32)" fg:x="75512" fg:w="40"/><text x="70.5801%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (23 samples, 0.02%)</title><rect x="70.3459%" y="1781" width="0.0214%" height="15" fill="rgb(237,202,41)" fg:x="75529" fg:w="23"/><text x="70.5959%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (209 samples, 0.19%)</title><rect x="70.1913%" y="1845" width="0.1947%" height="15" fill="rgb(209,14,29)" fg:x="75363" fg:w="209"/><text x="70.4413%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (198 samples, 0.18%)</title><rect x="70.2015%" y="1829" width="0.1844%" height="15" fill="rgb(219,29,3)" fg:x="75374" fg:w="198"/><text x="70.4515%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (20 samples, 0.02%)</title><rect x="70.3673%" y="1813" width="0.0186%" height="15" fill="rgb(229,13,49)" fg:x="75552" fg:w="20"/><text x="70.6173%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (38 samples, 0.04%)</title><rect x="70.4251%" y="1733" width="0.0354%" height="15" fill="rgb(210,206,2)" fg:x="75614" fg:w="38"/><text x="70.6751%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (12 samples, 0.01%)</title><rect x="70.4493%" y="1717" width="0.0112%" height="15" fill="rgb(216,154,46)" fg:x="75640" fg:w="12"/><text x="70.6993%" y="1727.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (42 samples, 0.04%)</title><rect x="70.4232%" y="1765" width="0.0391%" height="15" fill="rgb(211,170,52)" fg:x="75612" fg:w="42"/><text x="70.6732%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (42 samples, 0.04%)</title><rect x="70.4232%" y="1749" width="0.0391%" height="15" fill="rgb(233,109,47)" fg:x="75612" fg:w="42"/><text x="70.6732%" y="1759.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (58 samples, 0.05%)</title><rect x="70.4176%" y="1797" width="0.0540%" height="15" fill="rgb(208,212,30)" fg:x="75606" fg:w="58"/><text x="70.6676%" y="1807.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (54 samples, 0.05%)</title><rect x="70.4214%" y="1781" width="0.0503%" height="15" fill="rgb(215,190,19)" fg:x="75610" fg:w="54"/><text x="70.6714%" y="1791.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricing::calculate_read_gas (12 samples, 0.01%)</title><rect x="70.4716%" y="1797" width="0.0112%" height="15" fill="rgb(207,164,53)" fg:x="75664" fg:w="12"/><text x="70.7216%" y="1807.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (76 samples, 0.07%)</title><rect x="70.4130%" y="1813" width="0.0708%" height="15" fill="rgb(213,87,49)" fg:x="75601" fg:w="76"/><text x="70.6630%" y="1823.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="70.5126%" y="1733" width="0.0102%" height="15" fill="rgb(241,216,24)" fg:x="75708" fg:w="11"/><text x="70.7626%" y="1743.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.02%)</title><rect x="70.5396%" y="1637" width="0.0186%" height="15" fill="rgb(241,123,45)" fg:x="75737" fg:w="20"/><text x="70.7896%" y="1647.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.02%)</title><rect x="70.5396%" y="1621" width="0.0186%" height="15" fill="rgb(220,36,15)" fg:x="75737" fg:w="20"/><text x="70.7896%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.01%)</title><rect x="70.5443%" y="1605" width="0.0140%" height="15" fill="rgb(215,202,9)" fg:x="75742" fg:w="15"/><text x="70.7943%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="70.5443%" y="1589" width="0.0140%" height="15" fill="rgb(252,71,26)" fg:x="75742" fg:w="15"/><text x="70.7943%" y="1599.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (66 samples, 0.06%)</title><rect x="70.5024%" y="1765" width="0.0615%" height="15" fill="rgb(243,195,19)" fg:x="75697" fg:w="66"/><text x="70.7524%" y="1775.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (61 samples, 0.06%)</title><rect x="70.5070%" y="1749" width="0.0568%" height="15" fill="rgb(207,167,27)" fg:x="75702" fg:w="61"/><text x="70.7570%" y="1759.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (41 samples, 0.04%)</title><rect x="70.5257%" y="1733" width="0.0382%" height="15" fill="rgb(250,146,54)" fg:x="75722" fg:w="41"/><text x="70.7757%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (39 samples, 0.04%)</title><rect x="70.5275%" y="1717" width="0.0363%" height="15" fill="rgb(245,79,9)" fg:x="75724" fg:w="39"/><text x="70.7775%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (26 samples, 0.02%)</title><rect x="70.5396%" y="1701" width="0.0242%" height="15" fill="rgb(234,197,22)" fg:x="75737" fg:w="26"/><text x="70.7896%" y="1711.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.02%)</title><rect x="70.5396%" y="1685" width="0.0242%" height="15" fill="rgb(221,52,48)" fg:x="75737" fg:w="26"/><text x="70.7896%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.02%)</title><rect x="70.5396%" y="1669" width="0.0242%" height="15" fill="rgb(235,80,0)" fg:x="75737" fg:w="26"/><text x="70.7896%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.02%)</title><rect x="70.5396%" y="1653" width="0.0242%" height="15" fill="rgb(221,117,53)" fg:x="75737" fg:w="26"/><text x="70.7896%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="70.5685%" y="1733" width="0.0112%" height="15" fill="rgb(239,48,47)" fg:x="75768" fg:w="12"/><text x="70.8185%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (12 samples, 0.01%)</title><rect x="70.5853%" y="1653" width="0.0112%" height="15" fill="rgb(227,191,52)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1663.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (12 samples, 0.01%)</title><rect x="70.5853%" y="1637" width="0.0112%" height="15" fill="rgb(241,118,1)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1647.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (12 samples, 0.01%)</title><rect x="70.5853%" y="1621" width="0.0112%" height="15" fill="rgb(240,85,3)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1631.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.01%)</title><rect x="70.5853%" y="1605" width="0.0112%" height="15" fill="rgb(237,68,37)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.01%)</title><rect x="70.5853%" y="1589" width="0.0112%" height="15" fill="rgb(212,9,20)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="70.5853%" y="1573" width="0.0112%" height="15" fill="rgb(218,84,17)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.01%)</title><rect x="70.5853%" y="1557" width="0.0112%" height="15" fill="rgb(235,147,20)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="70.5853%" y="1541" width="0.0112%" height="15" fill="rgb(208,224,1)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="70.5853%" y="1525" width="0.0112%" height="15" fill="rgb(232,97,50)" fg:x="75786" fg:w="12"/><text x="70.8353%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="70.5862%" y="1509" width="0.0102%" height="15" fill="rgb(238,15,45)" fg:x="75787" fg:w="11"/><text x="70.8362%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.05%)</title><rect x="70.6207%" y="1397" width="0.0484%" height="15" fill="rgb(231,46,18)" fg:x="75824" fg:w="52"/><text x="70.8707%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (51 samples, 0.05%)</title><rect x="70.6216%" y="1381" width="0.0475%" height="15" fill="rgb(254,169,10)" fg:x="75825" fg:w="51"/><text x="70.8716%" y="1391.50"></text></g><g><title>alloc::alloc::Global::grow_impl (51 samples, 0.05%)</title><rect x="70.6216%" y="1365" width="0.0475%" height="15" fill="rgb(243,169,30)" fg:x="75825" fg:w="51"/><text x="70.8716%" y="1375.50"></text></g><g><title>alloc::alloc::realloc (51 samples, 0.05%)</title><rect x="70.6216%" y="1349" width="0.0475%" height="15" fill="rgb(236,90,49)" fg:x="75825" fg:w="51"/><text x="70.8716%" y="1359.50"></text></g><g><title>realloc (46 samples, 0.04%)</title><rect x="70.6263%" y="1333" width="0.0428%" height="15" fill="rgb(218,80,15)" fg:x="75830" fg:w="46"/><text x="70.8763%" y="1343.50"></text></g><g><title>[libc.so.6] (35 samples, 0.03%)</title><rect x="70.6365%" y="1317" width="0.0326%" height="15" fill="rgb(222,115,37)" fg:x="75841" fg:w="35"/><text x="70.8865%" y="1327.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="70.6440%" y="1301" width="0.0251%" height="15" fill="rgb(227,0,6)" fg:x="75849" fg:w="27"/><text x="70.8940%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (65 samples, 0.06%)</title><rect x="70.6104%" y="1461" width="0.0605%" height="15" fill="rgb(217,189,13)" fg:x="75813" fg:w="65"/><text x="70.8604%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (65 samples, 0.06%)</title><rect x="70.6104%" y="1445" width="0.0605%" height="15" fill="rgb(220,74,19)" fg:x="75813" fg:w="65"/><text x="70.8604%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.05%)</title><rect x="70.6160%" y="1429" width="0.0550%" height="15" fill="rgb(224,81,18)" fg:x="75819" fg:w="59"/><text x="70.8660%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (58 samples, 0.05%)</title><rect x="70.6169%" y="1413" width="0.0540%" height="15" fill="rgb(245,178,48)" fg:x="75820" fg:w="58"/><text x="70.8669%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (74 samples, 0.07%)</title><rect x="70.6058%" y="1573" width="0.0689%" height="15" fill="rgb(207,78,24)" fg:x="75808" fg:w="74"/><text x="70.8558%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (74 samples, 0.07%)</title><rect x="70.6058%" y="1557" width="0.0689%" height="15" fill="rgb(223,222,30)" fg:x="75808" fg:w="74"/><text x="70.8558%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (74 samples, 0.07%)</title><rect x="70.6058%" y="1541" width="0.0689%" height="15" fill="rgb(234,101,12)" fg:x="75808" fg:w="74"/><text x="70.8558%" y="1551.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (74 samples, 0.07%)</title><rect x="70.6058%" y="1525" width="0.0689%" height="15" fill="rgb(209,80,46)" fg:x="75808" fg:w="74"/><text x="70.8558%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (74 samples, 0.07%)</title><rect x="70.6058%" y="1509" width="0.0689%" height="15" fill="rgb(228,79,14)" fg:x="75808" fg:w="74"/><text x="70.8558%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74 samples, 0.07%)</title><rect x="70.6058%" y="1493" width="0.0689%" height="15" fill="rgb(220,219,34)" fg:x="75808" fg:w="74"/><text x="70.8558%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (74 samples, 0.07%)</title><rect x="70.6058%" y="1477" width="0.0689%" height="15" fill="rgb(207,80,21)" fg:x="75808" fg:w="74"/><text x="70.8558%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (75 samples, 0.07%)</title><rect x="70.6058%" y="1621" width="0.0699%" height="15" fill="rgb(210,154,44)" fg:x="75808" fg:w="75"/><text x="70.8558%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (75 samples, 0.07%)</title><rect x="70.6058%" y="1605" width="0.0699%" height="15" fill="rgb(246,44,39)" fg:x="75808" fg:w="75"/><text x="70.8558%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (75 samples, 0.07%)</title><rect x="70.6058%" y="1589" width="0.0699%" height="15" fill="rgb(252,175,13)" fg:x="75808" fg:w="75"/><text x="70.8558%" y="1599.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (12 samples, 0.01%)</title><rect x="70.6756%" y="1621" width="0.0112%" height="15" fill="rgb(211,50,39)" fg:x="75883" fg:w="12"/><text x="70.9256%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.01%)</title><rect x="70.6756%" y="1605" width="0.0112%" height="15" fill="rgb(231,204,27)" fg:x="75883" fg:w="12"/><text x="70.9256%" y="1615.50"></text></g><g><title>bcs::ser::to_bytes (111 samples, 0.10%)</title><rect x="70.5853%" y="1701" width="0.1034%" height="15" fill="rgb(253,26,34)" fg:x="75786" fg:w="111"/><text x="70.8353%" y="1711.50"></text></g><g><title>bcs::ser::serialize_into (111 samples, 0.10%)</title><rect x="70.5853%" y="1685" width="0.1034%" height="15" fill="rgb(207,139,38)" fg:x="75786" fg:w="111"/><text x="70.8353%" y="1695.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (111 samples, 0.10%)</title><rect x="70.5853%" y="1669" width="0.1034%" height="15" fill="rgb(248,54,27)" fg:x="75786" fg:w="111"/><text x="70.8353%" y="1679.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (99 samples, 0.09%)</title><rect x="70.5965%" y="1653" width="0.0922%" height="15" fill="rgb(234,25,33)" fg:x="75798" fg:w="99"/><text x="70.8465%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (97 samples, 0.09%)</title><rect x="70.5983%" y="1637" width="0.0903%" height="15" fill="rgb(249,107,47)" fg:x="75800" fg:w="97"/><text x="70.8483%" y="1647.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (127 samples, 0.12%)</title><rect x="70.5797%" y="1733" width="0.1183%" height="15" fill="rgb(230,190,31)" fg:x="75780" fg:w="127"/><text x="70.8297%" y="1743.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (123 samples, 0.11%)</title><rect x="70.5834%" y="1717" width="0.1146%" height="15" fill="rgb(238,173,45)" fg:x="75784" fg:w="123"/><text x="70.8334%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="70.7119%" y="1669" width="0.0130%" height="15" fill="rgb(222,16,50)" fg:x="75922" fg:w="14"/><text x="70.9619%" y="1679.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="70.7129%" y="1653" width="0.0121%" height="15" fill="rgb(251,204,47)" fg:x="75923" fg:w="13"/><text x="70.9629%" y="1663.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (13 samples, 0.01%)</title><rect x="70.7129%" y="1637" width="0.0121%" height="15" fill="rgb(225,12,3)" fg:x="75923" fg:w="13"/><text x="70.9629%" y="1647.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (11 samples, 0.01%)</title><rect x="70.7147%" y="1621" width="0.0102%" height="15" fill="rgb(214,208,22)" fg:x="75925" fg:w="11"/><text x="70.9647%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="70.7287%" y="1573" width="0.0112%" height="15" fill="rgb(240,57,32)" fg:x="75940" fg:w="12"/><text x="70.9787%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="70.7287%" y="1557" width="0.0112%" height="15" fill="rgb(243,113,48)" fg:x="75940" fg:w="12"/><text x="70.9787%" y="1567.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.02%)</title><rect x="70.7250%" y="1621" width="0.0214%" height="15" fill="rgb(225,135,30)" fg:x="75936" fg:w="23"/><text x="70.9750%" y="1631.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.02%)</title><rect x="70.7250%" y="1605" width="0.0214%" height="15" fill="rgb(222,3,53)" fg:x="75936" fg:w="23"/><text x="70.9750%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.02%)</title><rect x="70.7287%" y="1589" width="0.0177%" height="15" fill="rgb(243,142,2)" fg:x="75940" fg:w="19"/><text x="70.9787%" y="1599.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (17 samples, 0.02%)</title><rect x="70.7473%" y="1557" width="0.0158%" height="15" fill="rgb(233,67,14)" fg:x="75960" fg:w="17"/><text x="70.9973%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="70.7473%" y="1541" width="0.0158%" height="15" fill="rgb(245,125,36)" fg:x="75960" fg:w="17"/><text x="70.9973%" y="1551.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="70.7473%" y="1525" width="0.0158%" height="15" fill="rgb(225,199,6)" fg:x="75960" fg:w="17"/><text x="70.9973%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="70.7473%" y="1509" width="0.0158%" height="15" fill="rgb(244,71,6)" fg:x="75960" fg:w="17"/><text x="70.9973%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (18 samples, 0.02%)</title><rect x="70.7473%" y="1573" width="0.0168%" height="15" fill="rgb(225,62,9)" fg:x="75960" fg:w="18"/><text x="70.9973%" y="1583.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (75 samples, 0.07%)</title><rect x="70.7036%" y="1685" width="0.0699%" height="15" fill="rgb(246,139,53)" fg:x="75913" fg:w="75"/><text x="70.9536%" y="1695.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (52 samples, 0.05%)</title><rect x="70.7250%" y="1669" width="0.0484%" height="15" fill="rgb(243,161,46)" fg:x="75936" fg:w="52"/><text x="70.9750%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (52 samples, 0.05%)</title><rect x="70.7250%" y="1653" width="0.0484%" height="15" fill="rgb(236,153,7)" fg:x="75936" fg:w="52"/><text x="70.9750%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (52 samples, 0.05%)</title><rect x="70.7250%" y="1637" width="0.0484%" height="15" fill="rgb(248,42,35)" fg:x="75936" fg:w="52"/><text x="70.9750%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.03%)</title><rect x="70.7464%" y="1621" width="0.0270%" height="15" fill="rgb(250,17,31)" fg:x="75959" fg:w="29"/><text x="70.9964%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.03%)</title><rect x="70.7464%" y="1605" width="0.0270%" height="15" fill="rgb(248,138,14)" fg:x="75959" fg:w="29"/><text x="70.9964%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (29 samples, 0.03%)</title><rect x="70.7464%" y="1589" width="0.0270%" height="15" fill="rgb(228,161,3)" fg:x="75959" fg:w="29"/><text x="70.9964%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (480 samples, 0.45%)</title><rect x="70.7892%" y="1621" width="0.4471%" height="15" fill="rgb(248,116,17)" fg:x="76005" fg:w="480"/><text x="71.0392%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (477 samples, 0.44%)</title><rect x="70.7920%" y="1605" width="0.4443%" height="15" fill="rgb(207,78,24)" fg:x="76008" fg:w="477"/><text x="71.0420%" y="1615.50"></text></g><g><title>alloc::alloc::Global::grow_impl (477 samples, 0.44%)</title><rect x="70.7920%" y="1589" width="0.4443%" height="15" fill="rgb(234,99,48)" fg:x="76008" fg:w="477"/><text x="71.0420%" y="1599.50"></text></g><g><title>alloc::alloc::realloc (477 samples, 0.44%)</title><rect x="70.7920%" y="1573" width="0.4443%" height="15" fill="rgb(242,22,26)" fg:x="76008" fg:w="477"/><text x="71.0420%" y="1583.50"></text></g><g><title>realloc (470 samples, 0.44%)</title><rect x="70.7986%" y="1557" width="0.4377%" height="15" fill="rgb(227,78,32)" fg:x="76015" fg:w="470"/><text x="71.0486%" y="1567.50"></text></g><g><title>[libc.so.6] (455 samples, 0.42%)</title><rect x="70.8125%" y="1541" width="0.4238%" height="15" fill="rgb(226,189,43)" fg:x="76030" fg:w="455"/><text x="71.0625%" y="1551.50"></text></g><g><title>[libc.so.6] (450 samples, 0.42%)</title><rect x="70.8172%" y="1525" width="0.4191%" height="15" fill="rgb(227,218,35)" fg:x="76035" fg:w="450"/><text x="71.0672%" y="1535.50"></text></g><g><title>[libc.so.6] (277 samples, 0.26%)</title><rect x="70.9783%" y="1509" width="0.2580%" height="15" fill="rgb(206,111,40)" fg:x="76208" fg:w="277"/><text x="71.2283%" y="1519.50"></text></g><g><title>[libc.so.6] (38 samples, 0.04%)</title><rect x="71.2009%" y="1493" width="0.0354%" height="15" fill="rgb(208,217,22)" fg:x="76447" fg:w="38"/><text x="71.4509%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (487 samples, 0.45%)</title><rect x="70.7846%" y="1653" width="0.4536%" height="15" fill="rgb(248,20,20)" fg:x="76000" fg:w="487"/><text x="71.0346%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (485 samples, 0.45%)</title><rect x="70.7865%" y="1637" width="0.4517%" height="15" fill="rgb(239,155,16)" fg:x="76002" fg:w="485"/><text x="71.0365%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (492 samples, 0.46%)</title><rect x="70.7837%" y="1669" width="0.4582%" height="15" fill="rgb(238,171,46)" fg:x="75999" fg:w="492"/><text x="71.0337%" y="1679.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.01%)</title><rect x="71.2559%" y="1557" width="0.0102%" height="15" fill="rgb(248,11,36)" fg:x="76506" fg:w="11"/><text x="71.5059%" y="1567.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.01%)</title><rect x="71.2559%" y="1541" width="0.0102%" height="15" fill="rgb(220,148,37)" fg:x="76506" fg:w="11"/><text x="71.5059%" y="1551.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (15 samples, 0.01%)</title><rect x="71.2531%" y="1621" width="0.0140%" height="15" fill="rgb(218,144,42)" fg:x="76503" fg:w="15"/><text x="71.5031%" y="1631.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (14 samples, 0.01%)</title><rect x="71.2540%" y="1605" width="0.0130%" height="15" fill="rgb(245,20,20)" fg:x="76504" fg:w="14"/><text x="71.5040%" y="1615.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (14 samples, 0.01%)</title><rect x="71.2540%" y="1589" width="0.0130%" height="15" fill="rgb(240,111,48)" fg:x="76504" fg:w="14"/><text x="71.5040%" y="1599.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (12 samples, 0.01%)</title><rect x="71.2559%" y="1573" width="0.0112%" height="15" fill="rgb(237,225,32)" fg:x="76506" fg:w="12"/><text x="71.5059%" y="1583.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="71.2792%" y="1557" width="0.0102%" height="15" fill="rgb(228,161,46)" fg:x="76531" fg:w="11"/><text x="71.5292%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="71.2782%" y="1589" width="0.0130%" height="15" fill="rgb(235,196,21)" fg:x="76530" fg:w="14"/><text x="71.5282%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="71.2782%" y="1573" width="0.0130%" height="15" fill="rgb(250,133,21)" fg:x="76530" fg:w="14"/><text x="71.5282%" y="1583.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (34 samples, 0.03%)</title><rect x="71.2689%" y="1621" width="0.0317%" height="15" fill="rgb(236,94,32)" fg:x="76520" fg:w="34"/><text x="71.5189%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="71.2782%" y="1605" width="0.0224%" height="15" fill="rgb(219,176,25)" fg:x="76530" fg:w="24"/><text x="71.5282%" y="1615.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.02%)</title><rect x="71.3015%" y="1589" width="0.0168%" height="15" fill="rgb(211,17,43)" fg:x="76555" fg:w="18"/><text x="71.5515%" y="1599.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (670 samples, 0.62%)</title><rect x="70.6998%" y="1701" width="0.6240%" height="15" fill="rgb(220,75,23)" fg:x="75909" fg:w="670"/><text x="70.9498%" y="1711.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (591 samples, 0.55%)</title><rect x="70.7734%" y="1685" width="0.5504%" height="15" fill="rgb(215,122,32)" fg:x="75988" fg:w="591"/><text x="71.0234%" y="1695.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (82 samples, 0.08%)</title><rect x="71.2475%" y="1669" width="0.0764%" height="15" fill="rgb(218,57,38)" fg:x="76497" fg:w="82"/><text x="71.4975%" y="1679.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (80 samples, 0.07%)</title><rect x="71.2493%" y="1653" width="0.0745%" height="15" fill="rgb(233,208,46)" fg:x="76499" fg:w="80"/><text x="71.4993%" y="1663.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (80 samples, 0.07%)</title><rect x="71.2493%" y="1637" width="0.0745%" height="15" fill="rgb(221,35,50)" fg:x="76499" fg:w="80"/><text x="71.4993%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (25 samples, 0.02%)</title><rect x="71.3006%" y="1621" width="0.0233%" height="15" fill="rgb(229,213,29)" fg:x="76554" fg:w="25"/><text x="71.5506%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (25 samples, 0.02%)</title><rect x="71.3006%" y="1605" width="0.0233%" height="15" fill="rgb(229,110,40)" fg:x="76554" fg:w="25"/><text x="71.5506%" y="1615.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (679 samples, 0.63%)</title><rect x="70.6998%" y="1717" width="0.6324%" height="15" fill="rgb(247,206,19)" fg:x="75909" fg:w="679"/><text x="70.9498%" y="1727.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (693 samples, 0.65%)</title><rect x="70.6980%" y="1733" width="0.6454%" height="15" fill="rgb(216,229,45)" fg:x="75907" fg:w="693"/><text x="70.9480%" y="1743.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (839 samples, 0.78%)</title><rect x="70.5639%" y="1765" width="0.7814%" height="15" fill="rgb(205,184,31)" fg:x="75763" fg:w="839"/><text x="70.8139%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (836 samples, 0.78%)</title><rect x="70.5666%" y="1749" width="0.7786%" height="15" fill="rgb(213,91,10)" fg:x="75766" fg:w="836"/><text x="70.8166%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (919 samples, 0.86%)</title><rect x="70.4987%" y="1797" width="0.8559%" height="15" fill="rgb(250,49,8)" fg:x="75693" fg:w="919"/><text x="70.7487%" y="1807.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (915 samples, 0.85%)</title><rect x="70.5024%" y="1781" width="0.8522%" height="15" fill="rgb(207,26,8)" fg:x="75697" fg:w="915"/><text x="70.7524%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.01%)</title><rect x="71.3658%" y="1765" width="0.0149%" height="15" fill="rgb(224,2,13)" fg:x="76624" fg:w="16"/><text x="71.6158%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="71.3704%" y="1749" width="0.0102%" height="15" fill="rgb(219,108,27)" fg:x="76629" fg:w="11"/><text x="71.6204%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="71.3704%" y="1733" width="0.0102%" height="15" fill="rgb(240,89,32)" fg:x="76629" fg:w="11"/><text x="71.6204%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (22 samples, 0.02%)</title><rect x="71.3630%" y="1797" width="0.0205%" height="15" fill="rgb(248,205,3)" fg:x="76621" fg:w="22"/><text x="71.6130%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (22 samples, 0.02%)</title><rect x="71.3630%" y="1781" width="0.0205%" height="15" fill="rgb(236,197,47)" fg:x="76621" fg:w="22"/><text x="71.6130%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.01%)</title><rect x="71.3853%" y="1781" width="0.0149%" height="15" fill="rgb(244,185,52)" fg:x="76645" fg:w="16"/><text x="71.6353%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (19 samples, 0.02%)</title><rect x="71.3835%" y="1797" width="0.0177%" height="15" fill="rgb(210,206,23)" fg:x="76643" fg:w="19"/><text x="71.6335%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (61 samples, 0.06%)</title><rect x="71.4012%" y="1797" width="0.0568%" height="15" fill="rgb(251,177,30)" fg:x="76662" fg:w="61"/><text x="71.6512%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (57 samples, 0.05%)</title><rect x="71.4049%" y="1781" width="0.0531%" height="15" fill="rgb(243,27,45)" fg:x="76666" fg:w="57"/><text x="71.6549%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (48 samples, 0.04%)</title><rect x="71.4133%" y="1765" width="0.0447%" height="15" fill="rgb(248,141,51)" fg:x="76675" fg:w="48"/><text x="71.6633%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (48 samples, 0.04%)</title><rect x="71.4133%" y="1749" width="0.0447%" height="15" fill="rgb(235,102,15)" fg:x="76675" fg:w="48"/><text x="71.6633%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (48 samples, 0.04%)</title><rect x="71.4133%" y="1733" width="0.0447%" height="15" fill="rgb(214,164,53)" fg:x="76675" fg:w="48"/><text x="71.6633%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (48 samples, 0.04%)</title><rect x="71.4133%" y="1717" width="0.0447%" height="15" fill="rgb(228,18,51)" fg:x="76675" fg:w="48"/><text x="71.6633%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.04%)</title><rect x="71.4133%" y="1701" width="0.0447%" height="15" fill="rgb(205,211,11)" fg:x="76675" fg:w="48"/><text x="71.6633%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.04%)</title><rect x="71.4133%" y="1685" width="0.0447%" height="15" fill="rgb(208,63,6)" fg:x="76675" fg:w="48"/><text x="71.6633%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.04%)</title><rect x="71.4133%" y="1669" width="0.0447%" height="15" fill="rgb(245,76,14)" fg:x="76675" fg:w="48"/><text x="71.6633%" y="1679.50"></text></g><g><title>malloc (47 samples, 0.04%)</title><rect x="71.4142%" y="1653" width="0.0438%" height="15" fill="rgb(234,176,34)" fg:x="76676" fg:w="47"/><text x="71.6642%" y="1663.50"></text></g><g><title>[libc.so.6] (41 samples, 0.04%)</title><rect x="71.4198%" y="1637" width="0.0382%" height="15" fill="rgb(243,156,42)" fg:x="76682" fg:w="41"/><text x="71.6698%" y="1647.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="71.4403%" y="1621" width="0.0177%" height="15" fill="rgb(237,182,10)" fg:x="76704" fg:w="19"/><text x="71.6903%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (16 samples, 0.01%)</title><rect x="71.4636%" y="1797" width="0.0149%" height="15" fill="rgb(244,117,0)" fg:x="76729" fg:w="16"/><text x="71.7136%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (15 samples, 0.01%)</title><rect x="71.4645%" y="1781" width="0.0140%" height="15" fill="rgb(239,91,50)" fg:x="76730" fg:w="15"/><text x="71.7145%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (14 samples, 0.01%)</title><rect x="71.4654%" y="1765" width="0.0130%" height="15" fill="rgb(206,38,9)" fg:x="76731" fg:w="14"/><text x="71.7154%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.01%)</title><rect x="71.4654%" y="1749" width="0.0130%" height="15" fill="rgb(205,25,10)" fg:x="76731" fg:w="14"/><text x="71.7154%" y="1759.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="71.4654%" y="1733" width="0.0130%" height="15" fill="rgb(206,224,7)" fg:x="76731" fg:w="14"/><text x="71.7154%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="71.4654%" y="1717" width="0.0130%" height="15" fill="rgb(227,157,10)" fg:x="76731" fg:w="14"/><text x="71.7154%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="71.4682%" y="1701" width="0.0102%" height="15" fill="rgb(214,157,37)" fg:x="76734" fg:w="11"/><text x="71.7182%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.01%)</title><rect x="71.4990%" y="1749" width="0.0140%" height="15" fill="rgb(209,180,35)" fg:x="76767" fg:w="15"/><text x="71.7490%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.01%)</title><rect x="71.4990%" y="1733" width="0.0140%" height="15" fill="rgb(216,174,49)" fg:x="76767" fg:w="15"/><text x="71.7490%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.01%)</title><rect x="71.4990%" y="1717" width="0.0140%" height="15" fill="rgb(205,96,20)" fg:x="76767" fg:w="15"/><text x="71.7490%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (19 samples, 0.02%)</title><rect x="71.4962%" y="1781" width="0.0177%" height="15" fill="rgb(214,220,39)" fg:x="76764" fg:w="19"/><text x="71.7462%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (19 samples, 0.02%)</title><rect x="71.4962%" y="1765" width="0.0177%" height="15" fill="rgb(245,126,30)" fg:x="76764" fg:w="19"/><text x="71.7462%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.01%)</title><rect x="71.5213%" y="1781" width="0.0149%" height="15" fill="rgb(215,88,33)" fg:x="76791" fg:w="16"/><text x="71.7713%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (13 samples, 0.01%)</title><rect x="71.5241%" y="1765" width="0.0121%" height="15" fill="rgb(210,1,49)" fg:x="76794" fg:w="13"/><text x="71.7741%" y="1775.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (56 samples, 0.05%)</title><rect x="71.4850%" y="1797" width="0.0522%" height="15" fill="rgb(207,133,3)" fg:x="76752" fg:w="56"/><text x="71.7350%" y="1807.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="71.5455%" y="1669" width="0.0298%" height="15" fill="rgb(231,47,43)" fg:x="76817" fg:w="32"/><text x="71.7955%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="71.5558%" y="1653" width="0.0196%" height="15" fill="rgb(245,64,1)" fg:x="76828" fg:w="21"/><text x="71.8058%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="71.5586%" y="1637" width="0.0168%" height="15" fill="rgb(253,145,20)" fg:x="76831" fg:w="18"/><text x="71.8086%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="71.5604%" y="1621" width="0.0149%" height="15" fill="rgb(211,39,18)" fg:x="76833" fg:w="16"/><text x="71.8104%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="71.5604%" y="1605" width="0.0149%" height="15" fill="rgb(223,225,18)" fg:x="76833" fg:w="16"/><text x="71.8104%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="71.5604%" y="1589" width="0.0149%" height="15" fill="rgb(210,202,44)" fg:x="76833" fg:w="16"/><text x="71.8104%" y="1599.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="71.5427%" y="1749" width="0.0391%" height="15" fill="rgb(231,138,36)" fg:x="76814" fg:w="42"/><text x="71.7927%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.04%)</title><rect x="71.5446%" y="1733" width="0.0373%" height="15" fill="rgb(237,115,25)" fg:x="76816" fg:w="40"/><text x="71.7946%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.04%)</title><rect x="71.5455%" y="1717" width="0.0363%" height="15" fill="rgb(215,53,48)" fg:x="76817" fg:w="39"/><text x="71.7955%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.04%)</title><rect x="71.5455%" y="1701" width="0.0363%" height="15" fill="rgb(243,193,24)" fg:x="76817" fg:w="39"/><text x="71.7955%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.04%)</title><rect x="71.5455%" y="1685" width="0.0363%" height="15" fill="rgb(210,106,28)" fg:x="76817" fg:w="39"/><text x="71.7955%" y="1695.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.01%)</title><rect x="71.5846%" y="1701" width="0.0130%" height="15" fill="rgb(249,192,0)" fg:x="76859" fg:w="14"/><text x="71.8346%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.01%)</title><rect x="71.5846%" y="1685" width="0.0130%" height="15" fill="rgb(224,96,21)" fg:x="76859" fg:w="14"/><text x="71.8346%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (68 samples, 0.06%)</title><rect x="71.5371%" y="1797" width="0.0633%" height="15" fill="rgb(243,160,19)" fg:x="76808" fg:w="68"/><text x="71.7871%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (68 samples, 0.06%)</title><rect x="71.5371%" y="1781" width="0.0633%" height="15" fill="rgb(219,205,50)" fg:x="76808" fg:w="68"/><text x="71.7871%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (67 samples, 0.06%)</title><rect x="71.5381%" y="1765" width="0.0624%" height="15" fill="rgb(218,175,44)" fg:x="76809" fg:w="67"/><text x="71.7881%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.02%)</title><rect x="71.5837%" y="1749" width="0.0168%" height="15" fill="rgb(251,84,47)" fg:x="76858" fg:w="18"/><text x="71.8337%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.02%)</title><rect x="71.5837%" y="1733" width="0.0168%" height="15" fill="rgb(241,14,16)" fg:x="76858" fg:w="18"/><text x="71.8337%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.02%)</title><rect x="71.5837%" y="1717" width="0.0168%" height="15" fill="rgb(207,142,28)" fg:x="76858" fg:w="18"/><text x="71.8337%" y="1727.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="71.6070%" y="1749" width="0.0112%" height="15" fill="rgb(208,116,22)" fg:x="76883" fg:w="12"/><text x="71.8570%" y="1759.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="71.6228%" y="1701" width="0.0158%" height="15" fill="rgb(210,0,43)" fg:x="76900" fg:w="17"/><text x="71.8728%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="71.6228%" y="1685" width="0.0158%" height="15" fill="rgb(246,33,21)" fg:x="76900" fg:w="17"/><text x="71.8728%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.01%)</title><rect x="71.6284%" y="1669" width="0.0102%" height="15" fill="rgb(208,158,54)" fg:x="76906" fg:w="11"/><text x="71.8784%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (62 samples, 0.06%)</title><rect x="71.6005%" y="1797" width="0.0577%" height="15" fill="rgb(218,99,29)" fg:x="76876" fg:w="62"/><text x="71.8505%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (62 samples, 0.06%)</title><rect x="71.6005%" y="1781" width="0.0577%" height="15" fill="rgb(226,29,7)" fg:x="76876" fg:w="62"/><text x="71.8505%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (57 samples, 0.05%)</title><rect x="71.6051%" y="1765" width="0.0531%" height="15" fill="rgb(206,178,46)" fg:x="76881" fg:w="57"/><text x="71.8551%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (39 samples, 0.04%)</title><rect x="71.6219%" y="1749" width="0.0363%" height="15" fill="rgb(205,169,32)" fg:x="76899" fg:w="39"/><text x="71.8719%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (39 samples, 0.04%)</title><rect x="71.6219%" y="1733" width="0.0363%" height="15" fill="rgb(217,4,13)" fg:x="76899" fg:w="39"/><text x="71.8719%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.04%)</title><rect x="71.6219%" y="1717" width="0.0363%" height="15" fill="rgb(210,140,37)" fg:x="76899" fg:w="39"/><text x="71.8719%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.02%)</title><rect x="71.6387%" y="1701" width="0.0196%" height="15" fill="rgb(229,80,10)" fg:x="76917" fg:w="21"/><text x="71.8887%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.02%)</title><rect x="71.6387%" y="1685" width="0.0196%" height="15" fill="rgb(212,175,34)" fg:x="76917" fg:w="21"/><text x="71.8887%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.02%)</title><rect x="71.6387%" y="1669" width="0.0196%" height="15" fill="rgb(216,207,24)" fg:x="76917" fg:w="21"/><text x="71.8887%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (45 samples, 0.04%)</title><rect x="71.6908%" y="1605" width="0.0419%" height="15" fill="rgb(234,163,3)" fg:x="76973" fg:w="45"/><text x="71.9408%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (43 samples, 0.04%)</title><rect x="71.6927%" y="1589" width="0.0400%" height="15" fill="rgb(248,101,16)" fg:x="76975" fg:w="43"/><text x="71.9427%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (35 samples, 0.03%)</title><rect x="71.7001%" y="1573" width="0.0326%" height="15" fill="rgb(209,152,54)" fg:x="76983" fg:w="35"/><text x="71.9501%" y="1583.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (35 samples, 0.03%)</title><rect x="71.7001%" y="1557" width="0.0326%" height="15" fill="rgb(229,124,51)" fg:x="76983" fg:w="35"/><text x="71.9501%" y="1567.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (34 samples, 0.03%)</title><rect x="71.7011%" y="1541" width="0.0317%" height="15" fill="rgb(219,83,18)" fg:x="76984" fg:w="34"/><text x="71.9511%" y="1551.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (33 samples, 0.03%)</title><rect x="71.7020%" y="1525" width="0.0307%" height="15" fill="rgb(206,29,38)" fg:x="76985" fg:w="33"/><text x="71.9520%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (33 samples, 0.03%)</title><rect x="71.7020%" y="1509" width="0.0307%" height="15" fill="rgb(245,123,23)" fg:x="76985" fg:w="33"/><text x="71.9520%" y="1519.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (32 samples, 0.03%)</title><rect x="71.7029%" y="1493" width="0.0298%" height="15" fill="rgb(238,50,33)" fg:x="76986" fg:w="32"/><text x="71.9529%" y="1503.50"></text></g><g><title>serde::de::SeqAccess::next_element (21 samples, 0.02%)</title><rect x="71.7132%" y="1477" width="0.0196%" height="15" fill="rgb(234,165,23)" fg:x="76997" fg:w="21"/><text x="71.9632%" y="1487.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (21 samples, 0.02%)</title><rect x="71.7132%" y="1461" width="0.0196%" height="15" fill="rgb(211,82,31)" fg:x="76997" fg:w="21"/><text x="71.9632%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21 samples, 0.02%)</title><rect x="71.7132%" y="1445" width="0.0196%" height="15" fill="rgb(224,166,46)" fg:x="76997" fg:w="21"/><text x="71.9632%" y="1455.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (21 samples, 0.02%)</title><rect x="71.7132%" y="1429" width="0.0196%" height="15" fill="rgb(211,13,8)" fg:x="76997" fg:w="21"/><text x="71.9632%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (21 samples, 0.02%)</title><rect x="71.7132%" y="1413" width="0.0196%" height="15" fill="rgb(212,7,42)" fg:x="76997" fg:w="21"/><text x="71.9632%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (17 samples, 0.02%)</title><rect x="71.7169%" y="1397" width="0.0158%" height="15" fill="rgb(249,102,19)" fg:x="77001" fg:w="17"/><text x="71.9669%" y="1407.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (46 samples, 0.04%)</title><rect x="71.6908%" y="1621" width="0.0428%" height="15" fill="rgb(225,41,13)" fg:x="76973" fg:w="46"/><text x="71.9408%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (54 samples, 0.05%)</title><rect x="71.6852%" y="1653" width="0.0503%" height="15" fill="rgb(220,65,27)" fg:x="76967" fg:w="54"/><text x="71.9352%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (54 samples, 0.05%)</title><rect x="71.6852%" y="1637" width="0.0503%" height="15" fill="rgb(206,4,41)" fg:x="76967" fg:w="54"/><text x="71.9352%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (64 samples, 0.06%)</title><rect x="71.6852%" y="1669" width="0.0596%" height="15" fill="rgb(219,60,39)" fg:x="76967" fg:w="64"/><text x="71.9352%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (70 samples, 0.07%)</title><rect x="71.6824%" y="1685" width="0.0652%" height="15" fill="rgb(226,4,38)" fg:x="76964" fg:w="70"/><text x="71.9324%" y="1695.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (73 samples, 0.07%)</title><rect x="71.6815%" y="1701" width="0.0680%" height="15" fill="rgb(250,52,3)" fg:x="76963" fg:w="73"/><text x="71.9315%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (83 samples, 0.08%)</title><rect x="71.6787%" y="1733" width="0.0773%" height="15" fill="rgb(234,93,0)" fg:x="76960" fg:w="83"/><text x="71.9287%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (82 samples, 0.08%)</title><rect x="71.6796%" y="1717" width="0.0764%" height="15" fill="rgb(251,47,47)" fg:x="76961" fg:w="82"/><text x="71.9296%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (91 samples, 0.08%)</title><rect x="71.6778%" y="1749" width="0.0848%" height="15" fill="rgb(205,166,47)" fg:x="76959" fg:w="91"/><text x="71.9278%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (95 samples, 0.09%)</title><rect x="71.6750%" y="1765" width="0.0885%" height="15" fill="rgb(231,148,8)" fg:x="76956" fg:w="95"/><text x="71.9250%" y="1775.50"></text></g><g><title>bcs::de::from_bytes_seed (105 samples, 0.10%)</title><rect x="71.6685%" y="1781" width="0.0978%" height="15" fill="rgb(244,185,19)" fg:x="76949" fg:w="105"/><text x="71.9185%" y="1791.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,378 samples, 1.28%)</title><rect x="70.4838%" y="1813" width="1.2834%" height="15" fill="rgb(224,201,45)" fg:x="75677" fg:w="1378"/><text x="70.7338%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (107 samples, 0.10%)</title><rect x="71.6675%" y="1797" width="0.0997%" height="15" fill="rgb(240,77,39)" fg:x="76948" fg:w="107"/><text x="71.9175%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,483 samples, 1.38%)</title><rect x="70.3953%" y="1829" width="1.3812%" height="15" fill="rgb(248,211,29)" fg:x="75582" fg:w="1483"/><text x="70.6453%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (1,519 samples, 1.41%)</title><rect x="70.3860%" y="1845" width="1.4148%" height="15" fill="rgb(232,214,46)" fg:x="75572" fg:w="1519"/><text x="70.6360%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (18 samples, 0.02%)</title><rect x="71.7840%" y="1829" width="0.0168%" height="15" fill="rgb(213,99,54)" fg:x="77073" fg:w="18"/><text x="72.0340%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (162 samples, 0.15%)</title><rect x="71.8007%" y="1845" width="0.1509%" height="15" fill="rgb(240,19,46)" fg:x="77091" fg:w="162"/><text x="72.0507%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (32 samples, 0.03%)</title><rect x="71.9516%" y="1845" width="0.0298%" height="15" fill="rgb(243,89,10)" fg:x="77253" fg:w="32"/><text x="72.2016%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (14 samples, 0.01%)</title><rect x="71.9684%" y="1829" width="0.0130%" height="15" fill="rgb(249,28,32)" fg:x="77271" fg:w="14"/><text x="72.2184%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (56 samples, 0.05%)</title><rect x="71.9823%" y="1829" width="0.0522%" height="15" fill="rgb(253,30,9)" fg:x="77286" fg:w="56"/><text x="72.2323%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (55 samples, 0.05%)</title><rect x="72.0345%" y="1829" width="0.0512%" height="15" fill="rgb(217,2,26)" fg:x="77342" fg:w="55"/><text x="72.2845%" y="1839.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (18 samples, 0.02%)</title><rect x="72.0690%" y="1813" width="0.0168%" height="15" fill="rgb(220,28,10)" fg:x="77379" fg:w="18"/><text x="72.3190%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (16 samples, 0.01%)</title><rect x="72.1062%" y="1813" width="0.0149%" height="15" fill="rgb(228,167,49)" fg:x="77419" fg:w="16"/><text x="72.3562%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (12 samples, 0.01%)</title><rect x="72.1211%" y="1813" width="0.0112%" height="15" fill="rgb(238,212,3)" fg:x="77435" fg:w="12"/><text x="72.3711%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (25 samples, 0.02%)</title><rect x="72.1323%" y="1813" width="0.0233%" height="15" fill="rgb(229,134,44)" fg:x="77447" fg:w="25"/><text x="72.3823%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (222 samples, 0.21%)</title><rect x="71.9814%" y="1845" width="0.2068%" height="15" fill="rgb(208,71,4)" fg:x="77285" fg:w="222"/><text x="72.2314%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (110 samples, 0.10%)</title><rect x="72.0857%" y="1829" width="0.1025%" height="15" fill="rgb(221,205,45)" fg:x="77397" fg:w="110"/><text x="72.3357%" y="1839.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (35 samples, 0.03%)</title><rect x="72.1556%" y="1813" width="0.0326%" height="15" fill="rgb(215,132,38)" fg:x="77472" fg:w="35"/><text x="72.4056%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (21 samples, 0.02%)</title><rect x="72.1686%" y="1797" width="0.0196%" height="15" fill="rgb(227,158,6)" fg:x="77486" fg:w="21"/><text x="72.4186%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (181 samples, 0.17%)</title><rect x="72.1882%" y="1845" width="0.1686%" height="15" fill="rgb(250,10,38)" fg:x="77507" fg:w="181"/><text x="72.4382%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.04%)</title><rect x="72.3214%" y="1829" width="0.0354%" height="15" fill="rgb(225,171,40)" fg:x="77650" fg:w="38"/><text x="72.5714%" y="1839.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="72.3400%" y="1813" width="0.0168%" height="15" fill="rgb(238,17,43)" fg:x="77670" fg:w="18"/><text x="72.5900%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_offset (12 samples, 0.01%)</title><rect x="72.3661%" y="1845" width="0.0112%" height="15" fill="rgb(208,145,4)" fg:x="77698" fg:w="12"/><text x="72.6161%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (16 samples, 0.01%)</title><rect x="72.3772%" y="1845" width="0.0149%" height="15" fill="rgb(232,82,7)" fg:x="77710" fg:w="16"/><text x="72.6272%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_type (18 samples, 0.02%)</title><rect x="72.3921%" y="1845" width="0.0168%" height="15" fill="rgb(205,166,38)" fg:x="77726" fg:w="18"/><text x="72.6421%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (51 samples, 0.05%)</title><rect x="72.4089%" y="1845" width="0.0475%" height="15" fill="rgb(240,228,4)" fg:x="77744" fg:w="51"/><text x="72.6589%" y="1855.50"></text></g><g><title>move_vm_runtime::tracing::trace (104 samples, 0.10%)</title><rect x="72.4564%" y="1845" width="0.0969%" height="15" fill="rgb(233,121,40)" fg:x="77795" fg:w="104"/><text x="72.7064%" y="1855.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.02%)</title><rect x="72.5309%" y="1829" width="0.0224%" height="15" fill="rgb(243,84,30)" fg:x="77875" fg:w="24"/><text x="72.7809%" y="1839.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (24 samples, 0.02%)</title><rect x="72.5309%" y="1813" width="0.0224%" height="15" fill="rgb(235,81,48)" fg:x="77875" fg:w="24"/><text x="72.7809%" y="1823.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (24 samples, 0.02%)</title><rect x="72.5309%" y="1797" width="0.0224%" height="15" fill="rgb(218,137,0)" fg:x="77875" fg:w="24"/><text x="72.7809%" y="1807.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (24 samples, 0.02%)</title><rect x="72.5309%" y="1781" width="0.0224%" height="15" fill="rgb(223,151,48)" fg:x="77875" fg:w="24"/><text x="72.7809%" y="1791.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (24 samples, 0.02%)</title><rect x="72.5309%" y="1765" width="0.0224%" height="15" fill="rgb(247,30,19)" fg:x="77875" fg:w="24"/><text x="72.7809%" y="1775.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (16 samples, 0.01%)</title><rect x="72.5384%" y="1749" width="0.0149%" height="15" fill="rgb(205,129,29)" fg:x="77883" fg:w="16"/><text x="72.7884%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (53 samples, 0.05%)</title><rect x="72.5970%" y="1829" width="0.0494%" height="15" fill="rgb(222,29,2)" fg:x="77946" fg:w="53"/><text x="72.8470%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (14 samples, 0.01%)</title><rect x="72.6995%" y="1813" width="0.0130%" height="15" fill="rgb(232,145,33)" fg:x="78056" fg:w="14"/><text x="72.9495%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (183 samples, 0.17%)</title><rect x="72.5533%" y="1845" width="0.1704%" height="15" fill="rgb(217,30,31)" fg:x="77899" fg:w="183"/><text x="72.8033%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (72 samples, 0.07%)</title><rect x="72.6567%" y="1829" width="0.0671%" height="15" fill="rgb(243,22,52)" fg:x="78010" fg:w="72"/><text x="72.9067%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::copy_value (12 samples, 0.01%)</title><rect x="72.7125%" y="1813" width="0.0112%" height="15" fill="rgb(254,228,14)" fg:x="78070" fg:w="12"/><text x="72.9625%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (12 samples, 0.01%)</title><rect x="72.7125%" y="1797" width="0.0112%" height="15" fill="rgb(231,45,50)" fg:x="78070" fg:w="12"/><text x="72.9625%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="72.8131%" y="1829" width="0.0112%" height="15" fill="rgb(248,125,3)" fg:x="78178" fg:w="12"/><text x="73.0631%" y="1839.50"></text></g><g><title>core::mem::replace (31 samples, 0.03%)</title><rect x="72.8653%" y="1813" width="0.0289%" height="15" fill="rgb(213,76,9)" fg:x="78234" fg:w="31"/><text x="73.1153%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (185 samples, 0.17%)</title><rect x="72.7237%" y="1845" width="0.1723%" height="15" fill="rgb(238,108,21)" fg:x="78082" fg:w="185"/><text x="72.9737%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (77 samples, 0.07%)</title><rect x="72.8243%" y="1829" width="0.0717%" height="15" fill="rgb(229,214,19)" fg:x="78190" fg:w="77"/><text x="73.0743%" y="1839.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="72.9333%" y="1813" width="0.0102%" height="15" fill="rgb(252,201,5)" fg:x="78307" fg:w="11"/><text x="73.1833%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (52 samples, 0.05%)</title><rect x="72.8960%" y="1845" width="0.0484%" height="15" fill="rgb(233,165,49)" fg:x="78267" fg:w="52"/><text x="73.1460%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (18 samples, 0.02%)</title><rect x="72.9277%" y="1829" width="0.0168%" height="15" fill="rgb(208,165,19)" fg:x="78301" fg:w="18"/><text x="73.1777%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (25 samples, 0.02%)</title><rect x="72.9445%" y="1845" width="0.0233%" height="15" fill="rgb(216,220,31)" fg:x="78319" fg:w="25"/><text x="73.1945%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (22 samples, 0.02%)</title><rect x="72.9472%" y="1829" width="0.0205%" height="15" fill="rgb(214,8,31)" fg:x="78322" fg:w="22"/><text x="73.1972%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (20 samples, 0.02%)</title><rect x="72.9491%" y="1813" width="0.0186%" height="15" fill="rgb(220,32,32)" fg:x="78324" fg:w="20"/><text x="73.1991%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::write_ref (54 samples, 0.05%)</title><rect x="72.9733%" y="1845" width="0.0503%" height="15" fill="rgb(237,172,34)" fg:x="78350" fg:w="54"/><text x="73.2233%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::write_ref (48 samples, 0.04%)</title><rect x="72.9789%" y="1829" width="0.0447%" height="15" fill="rgb(240,209,5)" fg:x="78356" fg:w="48"/><text x="73.2289%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::write_ref (26 samples, 0.02%)</title><rect x="72.9994%" y="1813" width="0.0242%" height="15" fill="rgb(221,219,1)" fg:x="78378" fg:w="26"/><text x="73.2494%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="73.0264%" y="1829" width="0.0196%" height="15" fill="rgb(237,90,36)" fg:x="78407" fg:w="21"/><text x="73.2764%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Container::len (17 samples, 0.02%)</title><rect x="73.0665%" y="1813" width="0.0158%" height="15" fill="rgb(245,14,51)" fg:x="78450" fg:w="17"/><text x="73.3165%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (65 samples, 0.06%)</title><rect x="73.0236%" y="1845" width="0.0605%" height="15" fill="rgb(211,71,49)" fg:x="78404" fg:w="65"/><text x="73.2736%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (41 samples, 0.04%)</title><rect x="73.0460%" y="1829" width="0.0382%" height="15" fill="rgb(230,223,9)" fg:x="78428" fg:w="41"/><text x="73.2960%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (7,438 samples, 6.93%)</title><rect x="66.1724%" y="1877" width="6.9276%" height="15" fill="rgb(212,33,31)" fg:x="71048" fg:w="7438"/><text x="66.4224%" y="1887.50">move_vm_r..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (7,405 samples, 6.90%)</title><rect x="66.2032%" y="1861" width="6.8968%" height="15" fill="rgb(218,141,5)" fg:x="71081" fg:w="7405"/><text x="66.4532%" y="1871.50">move_vm_r..</text></g><g><title>move_vm_types::values::values_impl::Value::u64 (12 samples, 0.01%)</title><rect x="73.0888%" y="1845" width="0.0112%" height="15" fill="rgb(239,194,8)" fg:x="78474" fg:w="12"/><text x="73.3388%" y="1855.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="73.1400%" y="1829" width="0.0140%" height="15" fill="rgb(225,119,29)" fg:x="78529" fg:w="15"/><text x="73.3900%" y="1839.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (16 samples, 0.01%)</title><rect x="73.1605%" y="1829" width="0.0149%" height="15" fill="rgb(233,32,3)" fg:x="78551" fg:w="16"/><text x="73.4105%" y="1839.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (16 samples, 0.01%)</title><rect x="73.1605%" y="1813" width="0.0149%" height="15" fill="rgb(248,126,40)" fg:x="78551" fg:w="16"/><text x="73.4105%" y="1823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.02%)</title><rect x="73.2248%" y="1669" width="0.0177%" height="15" fill="rgb(213,102,53)" fg:x="78620" fg:w="19"/><text x="73.4748%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (62 samples, 0.06%)</title><rect x="73.1894%" y="1733" width="0.0577%" height="15" fill="rgb(212,69,15)" fg:x="78582" fg:w="62"/><text x="73.4394%" y="1743.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (62 samples, 0.06%)</title><rect x="73.1894%" y="1717" width="0.0577%" height="15" fill="rgb(253,39,34)" fg:x="78582" fg:w="62"/><text x="73.4394%" y="1727.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (62 samples, 0.06%)</title><rect x="73.1894%" y="1701" width="0.0577%" height="15" fill="rgb(205,189,54)" fg:x="78582" fg:w="62"/><text x="73.4394%" y="1711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.03%)</title><rect x="73.2201%" y="1685" width="0.0270%" height="15" fill="rgb(234,229,45)" fg:x="78615" fg:w="29"/><text x="73.4701%" y="1695.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (19 samples, 0.02%)</title><rect x="73.2471%" y="1733" width="0.0177%" height="15" fill="rgb(243,79,48)" fg:x="78644" fg:w="19"/><text x="73.4971%" y="1743.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (33 samples, 0.03%)</title><rect x="73.2648%" y="1653" width="0.0307%" height="15" fill="rgb(206,71,50)" fg:x="78663" fg:w="33"/><text x="73.5148%" y="1663.50"></text></g><g><title>core::hash::Hasher::write_usize (33 samples, 0.03%)</title><rect x="73.2648%" y="1637" width="0.0307%" height="15" fill="rgb(209,32,17)" fg:x="78663" fg:w="33"/><text x="73.5148%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (33 samples, 0.03%)</title><rect x="73.2648%" y="1621" width="0.0307%" height="15" fill="rgb(219,229,6)" fg:x="78663" fg:w="33"/><text x="73.5148%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (33 samples, 0.03%)</title><rect x="73.2648%" y="1605" width="0.0307%" height="15" fill="rgb(226,25,27)" fg:x="78663" fg:w="33"/><text x="73.5148%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.03%)</title><rect x="73.2658%" y="1589" width="0.0298%" height="15" fill="rgb(218,185,23)" fg:x="78664" fg:w="32"/><text x="73.5158%" y="1599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29 samples, 0.03%)</title><rect x="73.3217%" y="1573" width="0.0270%" height="15" fill="rgb(242,123,5)" fg:x="78724" fg:w="29"/><text x="73.5717%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (50 samples, 0.05%)</title><rect x="73.3114%" y="1589" width="0.0466%" height="15" fill="rgb(215,53,19)" fg:x="78713" fg:w="50"/><text x="73.5614%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (104 samples, 0.10%)</title><rect x="73.2648%" y="1701" width="0.0969%" height="15" fill="rgb(233,20,30)" fg:x="78663" fg:w="104"/><text x="73.5148%" y="1711.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (104 samples, 0.10%)</title><rect x="73.2648%" y="1685" width="0.0969%" height="15" fill="rgb(209,67,20)" fg:x="78663" fg:w="104"/><text x="73.5148%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (104 samples, 0.10%)</title><rect x="73.2648%" y="1669" width="0.0969%" height="15" fill="rgb(227,181,50)" fg:x="78663" fg:w="104"/><text x="73.5148%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (71 samples, 0.07%)</title><rect x="73.2956%" y="1653" width="0.0661%" height="15" fill="rgb(252,75,38)" fg:x="78696" fg:w="71"/><text x="73.5456%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (71 samples, 0.07%)</title><rect x="73.2956%" y="1637" width="0.0661%" height="15" fill="rgb(235,9,33)" fg:x="78696" fg:w="71"/><text x="73.5456%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71 samples, 0.07%)</title><rect x="73.2956%" y="1621" width="0.0661%" height="15" fill="rgb(208,87,30)" fg:x="78696" fg:w="71"/><text x="73.5456%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (71 samples, 0.07%)</title><rect x="73.2956%" y="1605" width="0.0661%" height="15" fill="rgb(215,199,39)" fg:x="78696" fg:w="71"/><text x="73.5456%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="73.3794%" y="1589" width="0.0140%" height="15" fill="rgb(246,208,12)" fg:x="78786" fg:w="15"/><text x="73.6294%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.05%)</title><rect x="73.3617%" y="1605" width="0.0484%" height="15" fill="rgb(206,195,10)" fg:x="78767" fg:w="52"/><text x="73.6117%" y="1615.50"></text></g><g><title>core::hash::sip::u8to64_le (18 samples, 0.02%)</title><rect x="73.3934%" y="1589" width="0.0168%" height="15" fill="rgb(244,1,30)" fg:x="78801" fg:w="18"/><text x="73.6434%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (261 samples, 0.24%)</title><rect x="73.1820%" y="1765" width="0.2431%" height="15" fill="rgb(230,83,5)" fg:x="78574" fg:w="261"/><text x="73.4320%" y="1775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (260 samples, 0.24%)</title><rect x="73.1829%" y="1749" width="0.2422%" height="15" fill="rgb(239,62,17)" fg:x="78575" fg:w="260"/><text x="73.4329%" y="1759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (172 samples, 0.16%)</title><rect x="73.2648%" y="1733" width="0.1602%" height="15" fill="rgb(252,193,41)" fg:x="78663" fg:w="172"/><text x="73.5148%" y="1743.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (172 samples, 0.16%)</title><rect x="73.2648%" y="1717" width="0.1602%" height="15" fill="rgb(216,142,19)" fg:x="78663" fg:w="172"/><text x="73.5148%" y="1727.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (68 samples, 0.06%)</title><rect x="73.3617%" y="1701" width="0.0633%" height="15" fill="rgb(240,81,38)" fg:x="78767" fg:w="68"/><text x="73.6117%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (68 samples, 0.06%)</title><rect x="73.3617%" y="1685" width="0.0633%" height="15" fill="rgb(240,109,40)" fg:x="78767" fg:w="68"/><text x="73.6117%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (68 samples, 0.06%)</title><rect x="73.3617%" y="1669" width="0.0633%" height="15" fill="rgb(230,123,10)" fg:x="78767" fg:w="68"/><text x="73.6117%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (68 samples, 0.06%)</title><rect x="73.3617%" y="1653" width="0.0633%" height="15" fill="rgb(253,42,32)" fg:x="78767" fg:w="68"/><text x="73.6117%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (68 samples, 0.06%)</title><rect x="73.3617%" y="1637" width="0.0633%" height="15" fill="rgb(218,154,8)" fg:x="78767" fg:w="68"/><text x="73.6117%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (68 samples, 0.06%)</title><rect x="73.3617%" y="1621" width="0.0633%" height="15" fill="rgb(216,197,10)" fg:x="78767" fg:w="68"/><text x="73.6117%" y="1631.50"></text></g><g><title>core::hash::Hasher::write_u8 (16 samples, 0.01%)</title><rect x="73.4101%" y="1605" width="0.0149%" height="15" fill="rgb(223,107,12)" fg:x="78819" fg:w="16"/><text x="73.6601%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="73.4120%" y="1589" width="0.0130%" height="15" fill="rgb(241,174,42)" fg:x="78821" fg:w="14"/><text x="73.6620%" y="1599.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="73.4325%" y="1717" width="0.0149%" height="15" fill="rgb(231,78,20)" fg:x="78843" fg:w="16"/><text x="73.6825%" y="1727.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (16 samples, 0.01%)</title><rect x="73.4325%" y="1701" width="0.0149%" height="15" fill="rgb(230,208,49)" fg:x="78843" fg:w="16"/><text x="73.6825%" y="1711.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (51 samples, 0.05%)</title><rect x="73.4539%" y="1669" width="0.0475%" height="15" fill="rgb(238,11,34)" fg:x="78866" fg:w="51"/><text x="73.7039%" y="1679.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (51 samples, 0.05%)</title><rect x="73.4539%" y="1653" width="0.0475%" height="15" fill="rgb(210,130,26)" fg:x="78866" fg:w="51"/><text x="73.7039%" y="1663.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (51 samples, 0.05%)</title><rect x="73.4539%" y="1637" width="0.0475%" height="15" fill="rgb(242,131,11)" fg:x="78866" fg:w="51"/><text x="73.7039%" y="1647.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (95 samples, 0.09%)</title><rect x="73.4530%" y="1701" width="0.0885%" height="15" fill="rgb(237,38,28)" fg:x="78865" fg:w="95"/><text x="73.7030%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (95 samples, 0.09%)</title><rect x="73.4530%" y="1685" width="0.0885%" height="15" fill="rgb(244,180,43)" fg:x="78865" fg:w="95"/><text x="73.7030%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (43 samples, 0.04%)</title><rect x="73.5014%" y="1669" width="0.0400%" height="15" fill="rgb(214,171,19)" fg:x="78917" fg:w="43"/><text x="73.7514%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (43 samples, 0.04%)</title><rect x="73.5014%" y="1653" width="0.0400%" height="15" fill="rgb(252,101,45)" fg:x="78917" fg:w="43"/><text x="73.7514%" y="1663.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (42 samples, 0.04%)</title><rect x="73.5023%" y="1637" width="0.0391%" height="15" fill="rgb(211,96,33)" fg:x="78918" fg:w="42"/><text x="73.7523%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (42 samples, 0.04%)</title><rect x="73.5023%" y="1621" width="0.0391%" height="15" fill="rgb(207,80,25)" fg:x="78918" fg:w="42"/><text x="73.7523%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (42 samples, 0.04%)</title><rect x="73.5023%" y="1605" width="0.0391%" height="15" fill="rgb(225,15,35)" fg:x="78918" fg:w="42"/><text x="73.7523%" y="1615.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (42 samples, 0.04%)</title><rect x="73.5023%" y="1589" width="0.0391%" height="15" fill="rgb(214,93,43)" fg:x="78918" fg:w="42"/><text x="73.7523%" y="1599.50"></text></g><g><title>[libc.so.6] (42 samples, 0.04%)</title><rect x="73.5023%" y="1573" width="0.0391%" height="15" fill="rgb(248,42,37)" fg:x="78918" fg:w="42"/><text x="73.7523%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (108 samples, 0.10%)</title><rect x="73.4474%" y="1717" width="0.1006%" height="15" fill="rgb(217,135,32)" fg:x="78859" fg:w="108"/><text x="73.6974%" y="1727.50"></text></g><g><title>hashbrown::raw::h2 (12 samples, 0.01%)</title><rect x="73.5480%" y="1717" width="0.0112%" height="15" fill="rgb(216,74,28)" fg:x="78967" fg:w="12"/><text x="73.7980%" y="1727.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (33 samples, 0.03%)</title><rect x="73.5592%" y="1717" width="0.0307%" height="15" fill="rgb(247,108,16)" fg:x="78979" fg:w="33"/><text x="73.8092%" y="1727.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (33 samples, 0.03%)</title><rect x="73.5592%" y="1701" width="0.0307%" height="15" fill="rgb(205,219,30)" fg:x="78979" fg:w="33"/><text x="73.8092%" y="1711.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.03%)</title><rect x="73.5592%" y="1685" width="0.0307%" height="15" fill="rgb(241,122,9)" fg:x="78979" fg:w="33"/><text x="73.8092%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (531 samples, 0.49%)</title><rect x="73.1000%" y="1877" width="0.4946%" height="15" fill="rgb(216,148,50)" fg:x="78486" fg:w="531"/><text x="73.3500%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (512 samples, 0.48%)</title><rect x="73.1177%" y="1861" width="0.4769%" height="15" fill="rgb(226,154,2)" fg:x="78505" fg:w="512"/><text x="73.3677%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (490 samples, 0.46%)</title><rect x="73.1382%" y="1845" width="0.4564%" height="15" fill="rgb(220,128,1)" fg:x="78527" fg:w="490"/><text x="73.3882%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (450 samples, 0.42%)</title><rect x="73.1754%" y="1829" width="0.4191%" height="15" fill="rgb(245,185,29)" fg:x="78567" fg:w="450"/><text x="73.4254%" y="1839.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (449 samples, 0.42%)</title><rect x="73.1764%" y="1813" width="0.4182%" height="15" fill="rgb(243,161,2)" fg:x="78568" fg:w="449"/><text x="73.4264%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (449 samples, 0.42%)</title><rect x="73.1764%" y="1797" width="0.4182%" height="15" fill="rgb(249,215,17)" fg:x="78568" fg:w="449"/><text x="73.4264%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (449 samples, 0.42%)</title><rect x="73.1764%" y="1781" width="0.4182%" height="15" fill="rgb(237,67,11)" fg:x="78568" fg:w="449"/><text x="73.4264%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (182 samples, 0.17%)</title><rect x="73.4250%" y="1765" width="0.1695%" height="15" fill="rgb(239,17,24)" fg:x="78835" fg:w="182"/><text x="73.6750%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (182 samples, 0.17%)</title><rect x="73.4250%" y="1749" width="0.1695%" height="15" fill="rgb(215,97,29)" fg:x="78835" fg:w="182"/><text x="73.6750%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (182 samples, 0.17%)</title><rect x="73.4250%" y="1733" width="0.1695%" height="15" fill="rgb(253,228,42)" fg:x="78835" fg:w="182"/><text x="73.6750%" y="1743.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="73.7166%" y="1781" width="0.0466%" height="15" fill="rgb(240,85,2)" fg:x="79148" fg:w="50"/><text x="73.9666%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="73.7371%" y="1765" width="0.0261%" height="15" fill="rgb(214,155,4)" fg:x="79170" fg:w="28"/><text x="73.9871%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="73.7426%" y="1749" width="0.0205%" height="15" fill="rgb(247,120,22)" fg:x="79176" fg:w="22"/><text x="73.9926%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="73.7426%" y="1733" width="0.0205%" height="15" fill="rgb(211,208,6)" fg:x="79176" fg:w="22"/><text x="73.9926%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="73.7426%" y="1717" width="0.0205%" height="15" fill="rgb(235,99,41)" fg:x="79176" fg:w="22"/><text x="73.9926%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="73.7631%" y="1781" width="0.0205%" height="15" fill="rgb(223,28,8)" fg:x="79198" fg:w="22"/><text x="74.0131%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="73.7641%" y="1765" width="0.0196%" height="15" fill="rgb(212,71,20)" fg:x="79199" fg:w="21"/><text x="74.0141%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.02%)</title><rect x="73.7641%" y="1749" width="0.0196%" height="15" fill="rgb(206,85,3)" fg:x="79199" fg:w="21"/><text x="74.0141%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="73.7678%" y="1733" width="0.0158%" height="15" fill="rgb(244,180,11)" fg:x="79203" fg:w="17"/><text x="74.0178%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="73.7678%" y="1717" width="0.0158%" height="15" fill="rgb(223,16,21)" fg:x="79203" fg:w="17"/><text x="74.0178%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="73.7678%" y="1701" width="0.0158%" height="15" fill="rgb(238,85,42)" fg:x="79203" fg:w="17"/><text x="74.0178%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (124 samples, 0.12%)</title><rect x="73.7045%" y="1845" width="0.1155%" height="15" fill="rgb(205,85,8)" fg:x="79135" fg:w="124"/><text x="73.9545%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (117 samples, 0.11%)</title><rect x="73.7110%" y="1829" width="0.1090%" height="15" fill="rgb(217,190,15)" fg:x="79142" fg:w="117"/><text x="73.9610%" y="1839.50"></text></g><g><title>alloc::slice::hack::to_vec (117 samples, 0.11%)</title><rect x="73.7110%" y="1813" width="0.1090%" height="15" fill="rgb(243,192,23)" fg:x="79142" fg:w="117"/><text x="73.9610%" y="1823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (117 samples, 0.11%)</title><rect x="73.7110%" y="1797" width="0.1090%" height="15" fill="rgb(223,220,37)" fg:x="79142" fg:w="117"/><text x="73.9610%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (39 samples, 0.04%)</title><rect x="73.7836%" y="1781" width="0.0363%" height="15" fill="rgb(208,41,17)" fg:x="79220" fg:w="39"/><text x="74.0336%" y="1791.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.02%)</title><rect x="73.8283%" y="1765" width="0.0224%" height="15" fill="rgb(224,188,7)" fg:x="79268" fg:w="24"/><text x="74.0783%" y="1775.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.02%)</title><rect x="73.8283%" y="1749" width="0.0224%" height="15" fill="rgb(236,16,50)" fg:x="79268" fg:w="24"/><text x="74.0783%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.02%)</title><rect x="73.8283%" y="1733" width="0.0224%" height="15" fill="rgb(238,6,24)" fg:x="79268" fg:w="24"/><text x="74.0783%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.02%)</title><rect x="73.8283%" y="1717" width="0.0224%" height="15" fill="rgb(253,67,45)" fg:x="79268" fg:w="24"/><text x="74.0783%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (24 samples, 0.02%)</title><rect x="73.8283%" y="1701" width="0.0224%" height="15" fill="rgb(210,89,32)" fg:x="79268" fg:w="24"/><text x="74.0783%" y="1711.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (30 samples, 0.03%)</title><rect x="73.8237%" y="1781" width="0.0279%" height="15" fill="rgb(208,89,9)" fg:x="79263" fg:w="30"/><text x="74.0737%" y="1791.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (14 samples, 0.01%)</title><rect x="73.8628%" y="1765" width="0.0130%" height="15" fill="rgb(222,180,44)" fg:x="79305" fg:w="14"/><text x="74.1128%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (14 samples, 0.01%)</title><rect x="73.8628%" y="1749" width="0.0130%" height="15" fill="rgb(250,181,46)" fg:x="79305" fg:w="14"/><text x="74.1128%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (14 samples, 0.01%)</title><rect x="73.8628%" y="1733" width="0.0130%" height="15" fill="rgb(210,190,26)" fg:x="79305" fg:w="14"/><text x="74.1128%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (14 samples, 0.01%)</title><rect x="73.8628%" y="1717" width="0.0130%" height="15" fill="rgb(253,49,13)" fg:x="79305" fg:w="14"/><text x="74.1128%" y="1727.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function::{{closure}} (72 samples, 0.07%)</title><rect x="73.8227%" y="1813" width="0.0671%" height="15" fill="rgb(240,184,42)" fg:x="79262" fg:w="72"/><text x="74.0727%" y="1823.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (71 samples, 0.07%)</title><rect x="73.8237%" y="1797" width="0.0661%" height="15" fill="rgb(246,59,37)" fg:x="79263" fg:w="71"/><text x="74.0737%" y="1807.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (41 samples, 0.04%)</title><rect x="73.8516%" y="1781" width="0.0382%" height="15" fill="rgb(207,134,54)" fg:x="79293" fg:w="41"/><text x="74.1016%" y="1791.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function (83 samples, 0.08%)</title><rect x="73.8199%" y="1845" width="0.0773%" height="15" fill="rgb(250,122,24)" fg:x="79259" fg:w="83"/><text x="74.0699%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (80 samples, 0.07%)</title><rect x="73.8227%" y="1829" width="0.0745%" height="15" fill="rgb(239,206,3)" fg:x="79262" fg:w="80"/><text x="74.0727%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (69 samples, 0.06%)</title><rect x="73.8982%" y="1845" width="0.0643%" height="15" fill="rgb(253,220,32)" fg:x="79343" fg:w="69"/><text x="74.1482%" y="1855.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="73.9624%" y="1845" width="0.0149%" height="15" fill="rgb(209,217,48)" fg:x="79412" fg:w="16"/><text x="74.2124%" y="1855.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (32 samples, 0.03%)</title><rect x="73.9923%" y="1829" width="0.0298%" height="15" fill="rgb(242,91,39)" fg:x="79444" fg:w="32"/><text x="74.2423%" y="1839.50"></text></g><g><title>core::ptr::write (32 samples, 0.03%)</title><rect x="73.9923%" y="1813" width="0.0298%" height="15" fill="rgb(228,4,13)" fg:x="79444" fg:w="32"/><text x="74.2423%" y="1823.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (33 samples, 0.03%)</title><rect x="73.9923%" y="1845" width="0.0307%" height="15" fill="rgb(223,133,4)" fg:x="79444" fg:w="33"/><text x="74.2423%" y="1855.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="74.0230%" y="1845" width="0.0186%" height="15" fill="rgb(215,105,30)" fg:x="79477" fg:w="20"/><text x="74.2730%" y="1855.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (20 samples, 0.02%)</title><rect x="74.0230%" y="1829" width="0.0186%" height="15" fill="rgb(230,9,4)" fg:x="79477" fg:w="20"/><text x="74.2730%" y="1839.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="74.0230%" y="1813" width="0.0186%" height="15" fill="rgb(248,15,2)" fg:x="79477" fg:w="20"/><text x="74.2730%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="74.0239%" y="1797" width="0.0177%" height="15" fill="rgb(208,210,22)" fg:x="79478" fg:w="19"/><text x="74.2739%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="74.0239%" y="1781" width="0.0177%" height="15" fill="rgb(208,112,41)" fg:x="79478" fg:w="19"/><text x="74.2739%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="74.0239%" y="1765" width="0.0177%" height="15" fill="rgb(232,83,14)" fg:x="79478" fg:w="19"/><text x="74.2739%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="74.0239%" y="1749" width="0.0177%" height="15" fill="rgb(229,65,11)" fg:x="79478" fg:w="19"/><text x="74.2739%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="74.0239%" y="1733" width="0.0177%" height="15" fill="rgb(228,126,24)" fg:x="79478" fg:w="19"/><text x="74.2739%" y="1743.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="74.0304%" y="1717" width="0.0112%" height="15" fill="rgb(218,66,33)" fg:x="79485" fg:w="12"/><text x="74.2804%" y="1727.50"></text></g><g><title>cfree (41 samples, 0.04%)</title><rect x="74.0416%" y="1845" width="0.0382%" height="15" fill="rgb(251,49,52)" fg:x="79497" fg:w="41"/><text x="74.2916%" y="1855.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="74.0593%" y="1829" width="0.0205%" height="15" fill="rgb(219,46,37)" fg:x="79516" fg:w="22"/><text x="74.3093%" y="1839.50"></text></g><g><title>cfree (25 samples, 0.02%)</title><rect x="74.1143%" y="1781" width="0.0233%" height="15" fill="rgb(213,53,49)" fg:x="79575" fg:w="25"/><text x="74.3643%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="74.1375%" y="1765" width="0.0140%" height="15" fill="rgb(214,134,1)" fg:x="79600" fg:w="15"/><text x="74.3875%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.06%)</title><rect x="74.0900%" y="1829" width="0.0643%" height="15" fill="rgb(208,139,43)" fg:x="79549" fg:w="69"/><text x="74.3400%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (69 samples, 0.06%)</title><rect x="74.0900%" y="1813" width="0.0643%" height="15" fill="rgb(231,105,35)" fg:x="79549" fg:w="69"/><text x="74.3400%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (65 samples, 0.06%)</title><rect x="74.0938%" y="1797" width="0.0605%" height="15" fill="rgb(247,189,9)" fg:x="79553" fg:w="65"/><text x="74.3438%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (18 samples, 0.02%)</title><rect x="74.1375%" y="1781" width="0.0168%" height="15" fill="rgb(252,48,51)" fg:x="79600" fg:w="18"/><text x="74.3875%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="74.1562%" y="1797" width="0.0177%" height="15" fill="rgb(209,121,1)" fg:x="79620" fg:w="19"/><text x="74.4062%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="74.1562%" y="1781" width="0.0177%" height="15" fill="rgb(231,40,26)" fg:x="79620" fg:w="19"/><text x="74.4062%" y="1791.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="74.1627%" y="1765" width="0.0112%" height="15" fill="rgb(251,8,13)" fg:x="79627" fg:w="12"/><text x="74.4127%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (91 samples, 0.08%)</title><rect x="74.0900%" y="1845" width="0.0848%" height="15" fill="rgb(231,110,2)" fg:x="79549" fg:w="91"/><text x="74.3400%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (22 samples, 0.02%)</title><rect x="74.1543%" y="1829" width="0.0205%" height="15" fill="rgb(216,153,22)" fg:x="79618" fg:w="22"/><text x="74.4043%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="74.1543%" y="1813" width="0.0205%" height="15" fill="rgb(249,116,49)" fg:x="79618" fg:w="22"/><text x="74.4043%" y="1823.50"></text></g><g><title>cfree (44 samples, 0.04%)</title><rect x="74.2093%" y="1813" width="0.0410%" height="15" fill="rgb(230,89,2)" fg:x="79677" fg:w="44"/><text x="74.4593%" y="1823.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="74.2270%" y="1797" width="0.0233%" height="15" fill="rgb(231,125,23)" fg:x="79696" fg:w="25"/><text x="74.4770%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="74.2596%" y="1781" width="0.0270%" height="15" fill="rgb(212,217,18)" fg:x="79731" fg:w="29"/><text x="74.5096%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (27 samples, 0.03%)</title><rect x="74.2614%" y="1765" width="0.0251%" height="15" fill="rgb(210,21,33)" fg:x="79733" fg:w="27"/><text x="74.5114%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (91 samples, 0.08%)</title><rect x="74.2074%" y="1829" width="0.0848%" height="15" fill="rgb(241,97,9)" fg:x="79675" fg:w="91"/><text x="74.4574%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (45 samples, 0.04%)</title><rect x="74.2502%" y="1813" width="0.0419%" height="15" fill="rgb(221,35,31)" fg:x="79721" fg:w="45"/><text x="74.5002%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (35 samples, 0.03%)</title><rect x="74.2596%" y="1797" width="0.0326%" height="15" fill="rgb(251,23,23)" fg:x="79731" fg:w="35"/><text x="74.5096%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (127 samples, 0.12%)</title><rect x="74.1748%" y="1845" width="0.1183%" height="15" fill="rgb(227,165,2)" fg:x="79640" fg:w="127"/><text x="74.4248%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="74.3415%" y="1797" width="0.0102%" height="15" fill="rgb(242,24,2)" fg:x="79819" fg:w="11"/><text x="74.5915%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="74.3415%" y="1781" width="0.0102%" height="15" fill="rgb(242,138,51)" fg:x="79819" fg:w="11"/><text x="74.5915%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="74.3415%" y="1813" width="0.0112%" height="15" fill="rgb(220,219,5)" fg:x="79819" fg:w="12"/><text x="74.5915%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.03%)</title><rect x="74.3639%" y="1813" width="0.0279%" height="15" fill="rgb(247,53,29)" fg:x="79843" fg:w="30"/><text x="74.6139%" y="1823.50"></text></g><g><title>move_table_extension::native_borrow_box::{{closure}} (28 samples, 0.03%)</title><rect x="74.3657%" y="1797" width="0.0261%" height="15" fill="rgb(233,43,39)" fg:x="79845" fg:w="28"/><text x="74.6157%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (28 samples, 0.03%)</title><rect x="74.3657%" y="1781" width="0.0261%" height="15" fill="rgb(230,128,54)" fg:x="79845" fg:w="28"/><text x="74.6157%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (27 samples, 0.03%)</title><rect x="74.3667%" y="1765" width="0.0251%" height="15" fill="rgb(218,20,12)" fg:x="79846" fg:w="27"/><text x="74.6167%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (12 samples, 0.01%)</title><rect x="74.3918%" y="1813" width="0.0112%" height="15" fill="rgb(206,51,14)" fg:x="79873" fg:w="12"/><text x="74.6418%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;move_vm_types::values::values_impl::Value&gt;&gt; (17 samples, 0.02%)</title><rect x="74.4030%" y="1813" width="0.0158%" height="15" fill="rgb(223,16,35)" fg:x="79885" fg:w="17"/><text x="74.6530%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (23 samples, 0.02%)</title><rect x="74.4188%" y="1813" width="0.0214%" height="15" fill="rgb(226,165,37)" fg:x="79902" fg:w="23"/><text x="74.6688%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="74.4188%" y="1797" width="0.0214%" height="15" fill="rgb(240,26,21)" fg:x="79902" fg:w="23"/><text x="74.6688%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (22 samples, 0.02%)</title><rect x="74.4198%" y="1781" width="0.0205%" height="15" fill="rgb(240,72,46)" fg:x="79903" fg:w="22"/><text x="74.6698%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (20 samples, 0.02%)</title><rect x="74.4617%" y="1733" width="0.0186%" height="15" fill="rgb(211,33,41)" fg:x="79948" fg:w="20"/><text x="74.7117%" y="1743.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (20 samples, 0.02%)</title><rect x="74.4617%" y="1717" width="0.0186%" height="15" fill="rgb(224,157,46)" fg:x="79948" fg:w="20"/><text x="74.7117%" y="1727.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.02%)</title><rect x="74.4617%" y="1701" width="0.0186%" height="15" fill="rgb(223,59,19)" fg:x="79948" fg:w="20"/><text x="74.7117%" y="1711.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="74.4635%" y="1685" width="0.0168%" height="15" fill="rgb(239,187,1)" fg:x="79950" fg:w="18"/><text x="74.7135%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.02%)</title><rect x="74.4589%" y="1781" width="0.0242%" height="15" fill="rgb(226,95,9)" fg:x="79945" fg:w="26"/><text x="74.7089%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (26 samples, 0.02%)</title><rect x="74.4589%" y="1765" width="0.0242%" height="15" fill="rgb(234,61,54)" fg:x="79945" fg:w="26"/><text x="74.7089%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.02%)</title><rect x="74.4589%" y="1749" width="0.0242%" height="15" fill="rgb(205,209,47)" fg:x="79945" fg:w="26"/><text x="74.7089%" y="1759.50"></text></g><g><title>move_table_extension::Table::get_or_create_global_value (44 samples, 0.04%)</title><rect x="74.4514%" y="1813" width="0.0410%" height="15" fill="rgb(228,7,43)" fg:x="79937" fg:w="44"/><text x="74.7014%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (39 samples, 0.04%)</title><rect x="74.4561%" y="1797" width="0.0363%" height="15" fill="rgb(240,217,52)" fg:x="79942" fg:w="39"/><text x="74.7061%" y="1807.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="74.5129%" y="1637" width="0.0121%" height="15" fill="rgb(211,178,21)" fg:x="80003" fg:w="13"/><text x="74.7629%" y="1647.50"></text></g><g><title>&lt;move_table_extension::TableHandle as core::cmp::Ord&gt;::cmp (15 samples, 0.01%)</title><rect x="74.5129%" y="1733" width="0.0140%" height="15" fill="rgb(205,25,34)" fg:x="80003" fg:w="15"/><text x="74.7629%" y="1743.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (15 samples, 0.01%)</title><rect x="74.5129%" y="1717" width="0.0140%" height="15" fill="rgb(209,57,11)" fg:x="80003" fg:w="15"/><text x="74.7629%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (15 samples, 0.01%)</title><rect x="74.5129%" y="1701" width="0.0140%" height="15" fill="rgb(221,99,2)" fg:x="80003" fg:w="15"/><text x="74.7629%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (15 samples, 0.01%)</title><rect x="74.5129%" y="1685" width="0.0140%" height="15" fill="rgb(232,79,22)" fg:x="80003" fg:w="15"/><text x="74.7629%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (15 samples, 0.01%)</title><rect x="74.5129%" y="1669" width="0.0140%" height="15" fill="rgb(221,145,32)" fg:x="80003" fg:w="15"/><text x="74.7629%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (15 samples, 0.01%)</title><rect x="74.5129%" y="1653" width="0.0140%" height="15" fill="rgb(236,133,36)" fg:x="80003" fg:w="15"/><text x="74.7629%" y="1663.50"></text></g><g><title>move_table_extension::TableData::get_or_create_table (40 samples, 0.04%)</title><rect x="74.4924%" y="1813" width="0.0373%" height="15" fill="rgb(208,224,44)" fg:x="79981" fg:w="40"/><text x="74.7424%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (24 samples, 0.02%)</title><rect x="74.5073%" y="1797" width="0.0224%" height="15" fill="rgb(235,143,15)" fg:x="79997" fg:w="24"/><text x="74.7573%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.02%)</title><rect x="74.5110%" y="1781" width="0.0186%" height="15" fill="rgb(249,83,27)" fg:x="80001" fg:w="20"/><text x="74.7610%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20 samples, 0.02%)</title><rect x="74.5110%" y="1765" width="0.0186%" height="15" fill="rgb(238,226,19)" fg:x="80001" fg:w="20"/><text x="74.7610%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.02%)</title><rect x="74.5110%" y="1749" width="0.0186%" height="15" fill="rgb(226,206,27)" fg:x="80001" fg:w="20"/><text x="74.7610%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.02%)</title><rect x="74.5315%" y="1797" width="0.0186%" height="15" fill="rgb(251,182,9)" fg:x="80023" fg:w="20"/><text x="74.7815%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (43 samples, 0.04%)</title><rect x="74.5501%" y="1797" width="0.0400%" height="15" fill="rgb(212,140,41)" fg:x="80043" fg:w="43"/><text x="74.8001%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (40 samples, 0.04%)</title><rect x="74.5529%" y="1781" width="0.0373%" height="15" fill="rgb(220,106,18)" fg:x="80046" fg:w="40"/><text x="74.8029%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (30 samples, 0.03%)</title><rect x="74.5623%" y="1765" width="0.0279%" height="15" fill="rgb(252,46,41)" fg:x="80056" fg:w="30"/><text x="74.8123%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (46 samples, 0.04%)</title><rect x="74.5902%" y="1797" width="0.0428%" height="15" fill="rgb(209,222,15)" fg:x="80086" fg:w="46"/><text x="74.8402%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (29 samples, 0.03%)</title><rect x="74.6060%" y="1781" width="0.0270%" height="15" fill="rgb(233,83,50)" fg:x="80103" fg:w="29"/><text x="74.8560%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (17 samples, 0.02%)</title><rect x="74.6479%" y="1781" width="0.0158%" height="15" fill="rgb(205,212,0)" fg:x="80148" fg:w="17"/><text x="74.8979%" y="1791.50"></text></g><g><title>move_table_extension::get_table_handle (151 samples, 0.14%)</title><rect x="74.5297%" y="1813" width="0.1406%" height="15" fill="rgb(235,117,51)" fg:x="80021" fg:w="151"/><text x="74.7797%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (40 samples, 0.04%)</title><rect x="74.6330%" y="1797" width="0.0373%" height="15" fill="rgb(233,133,48)" fg:x="80132" fg:w="40"/><text x="74.8830%" y="1807.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="74.7038%" y="1589" width="0.0112%" height="15" fill="rgb(219,3,2)" fg:x="80208" fg:w="12"/><text x="74.9538%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="74.7001%" y="1653" width="0.0158%" height="15" fill="rgb(225,80,52)" fg:x="80204" fg:w="17"/><text x="74.9501%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.01%)</title><rect x="74.7020%" y="1637" width="0.0140%" height="15" fill="rgb(235,195,42)" fg:x="80206" fg:w="15"/><text x="74.9520%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.01%)</title><rect x="74.7020%" y="1621" width="0.0140%" height="15" fill="rgb(240,207,46)" fg:x="80206" fg:w="15"/><text x="74.9520%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="74.7029%" y="1605" width="0.0130%" height="15" fill="rgb(236,112,50)" fg:x="80207" fg:w="14"/><text x="74.9529%" y="1615.50"></text></g><g><title>move_table_extension::serialize (52 samples, 0.05%)</title><rect x="74.6703%" y="1813" width="0.0484%" height="15" fill="rgb(249,151,27)" fg:x="80172" fg:w="52"/><text x="74.9203%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (51 samples, 0.05%)</title><rect x="74.6712%" y="1797" width="0.0475%" height="15" fill="rgb(253,223,52)" fg:x="80173" fg:w="51"/><text x="74.9212%" y="1807.50"></text></g><g><title>bcs::ser::to_bytes (44 samples, 0.04%)</title><rect x="74.6777%" y="1781" width="0.0410%" height="15" fill="rgb(215,55,33)" fg:x="80180" fg:w="44"/><text x="74.9277%" y="1791.50"></text></g><g><title>bcs::ser::serialize_into (36 samples, 0.03%)</title><rect x="74.6852%" y="1765" width="0.0335%" height="15" fill="rgb(207,24,17)" fg:x="80188" fg:w="36"/><text x="74.9352%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (35 samples, 0.03%)</title><rect x="74.6861%" y="1749" width="0.0326%" height="15" fill="rgb(218,169,32)" fg:x="80189" fg:w="35"/><text x="74.9361%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (21 samples, 0.02%)</title><rect x="74.6992%" y="1733" width="0.0196%" height="15" fill="rgb(209,210,6)" fg:x="80203" fg:w="21"/><text x="74.9492%" y="1743.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.02%)</title><rect x="74.6992%" y="1717" width="0.0196%" height="15" fill="rgb(225,208,8)" fg:x="80203" fg:w="21"/><text x="74.9492%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.02%)</title><rect x="74.6992%" y="1701" width="0.0196%" height="15" fill="rgb(238,14,32)" fg:x="80203" fg:w="21"/><text x="74.9492%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.02%)</title><rect x="74.6992%" y="1685" width="0.0196%" height="15" fill="rgb(211,137,3)" fg:x="80203" fg:w="21"/><text x="74.9492%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.02%)</title><rect x="74.6992%" y="1669" width="0.0196%" height="15" fill="rgb(207,171,19)" fg:x="80203" fg:w="21"/><text x="74.9492%" y="1679.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="74.7262%" y="1749" width="0.0158%" height="15" fill="rgb(250,80,8)" fg:x="80232" fg:w="17"/><text x="74.9762%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="74.7262%" y="1733" width="0.0158%" height="15" fill="rgb(209,103,53)" fg:x="80232" fg:w="17"/><text x="74.9762%" y="1743.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get (42 samples, 0.04%)</title><rect x="74.7187%" y="1813" width="0.0391%" height="15" fill="rgb(233,198,10)" fg:x="80224" fg:w="42"/><text x="74.9687%" y="1823.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.03%)</title><rect x="74.7262%" y="1797" width="0.0317%" height="15" fill="rgb(236,125,25)" fg:x="80232" fg:w="34"/><text x="74.9762%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.03%)</title><rect x="74.7262%" y="1781" width="0.0317%" height="15" fill="rgb(254,182,48)" fg:x="80232" fg:w="34"/><text x="74.9762%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.03%)</title><rect x="74.7262%" y="1765" width="0.0317%" height="15" fill="rgb(216,108,44)" fg:x="80232" fg:w="34"/><text x="74.9762%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.02%)</title><rect x="74.7420%" y="1749" width="0.0158%" height="15" fill="rgb(222,72,39)" fg:x="80249" fg:w="17"/><text x="74.9920%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="74.7420%" y="1733" width="0.0158%" height="15" fill="rgb(252,70,39)" fg:x="80249" fg:w="17"/><text x="74.9920%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.02%)</title><rect x="74.7420%" y="1717" width="0.0158%" height="15" fill="rgb(243,99,34)" fg:x="80249" fg:w="17"/><text x="74.9920%" y="1727.50"></text></g><g><title>move_table_extension::make_native_borrow_box::{{closure}} (513 samples, 0.48%)</title><rect x="74.3043%" y="1845" width="0.4778%" height="15" fill="rgb(252,109,12)" fg:x="79779" fg:w="513"/><text x="74.5543%" y="1855.50"></text></g><g><title>move_table_extension::native_borrow_box (500 samples, 0.47%)</title><rect x="74.3164%" y="1829" width="0.4657%" height="15" fill="rgb(211,186,10)" fg:x="79792" fg:w="500"/><text x="74.5664%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (18 samples, 0.02%)</title><rect x="74.7653%" y="1813" width="0.0168%" height="15" fill="rgb(246,90,8)" fg:x="80274" fg:w="18"/><text x="75.0153%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::borrow_global (14 samples, 0.01%)</title><rect x="74.7690%" y="1797" width="0.0130%" height="15" fill="rgb(226,91,24)" fg:x="80278" fg:w="14"/><text x="75.0190%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="74.8389%" y="1813" width="0.0112%" height="15" fill="rgb(216,28,44)" fg:x="80353" fg:w="12"/><text x="75.0889%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="74.8389%" y="1797" width="0.0112%" height="15" fill="rgb(229,36,0)" fg:x="80353" fg:w="12"/><text x="75.0889%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="74.8389%" y="1781" width="0.0112%" height="15" fill="rgb(245,97,18)" fg:x="80353" fg:w="12"/><text x="75.0889%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.02%)</title><rect x="74.8659%" y="1813" width="0.0224%" height="15" fill="rgb(241,97,54)" fg:x="80382" fg:w="24"/><text x="75.1159%" y="1823.50"></text></g><g><title>move_table_extension::native_contains_box::{{closure}} (22 samples, 0.02%)</title><rect x="74.8677%" y="1797" width="0.0205%" height="15" fill="rgb(234,125,17)" fg:x="80384" fg:w="22"/><text x="75.1177%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (22 samples, 0.02%)</title><rect x="74.8677%" y="1781" width="0.0205%" height="15" fill="rgb(228,172,39)" fg:x="80384" fg:w="22"/><text x="75.1177%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (22 samples, 0.02%)</title><rect x="74.8677%" y="1765" width="0.0205%" height="15" fill="rgb(227,169,1)" fg:x="80384" fg:w="22"/><text x="75.1177%" y="1775.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="74.8938%" y="1797" width="0.0112%" height="15" fill="rgb(206,13,35)" fg:x="80412" fg:w="12"/><text x="75.1438%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;move_vm_types::values::values_impl::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="74.8938%" y="1813" width="0.0242%" height="15" fill="rgb(211,117,30)" fg:x="80412" fg:w="26"/><text x="75.1438%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="74.9050%" y="1797" width="0.0130%" height="15" fill="rgb(230,198,4)" fg:x="80424" fg:w="14"/><text x="75.1550%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="74.9050%" y="1781" width="0.0130%" height="15" fill="rgb(213,87,54)" fg:x="80424" fg:w="14"/><text x="75.1550%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="74.9050%" y="1765" width="0.0130%" height="15" fill="rgb(248,43,22)" fg:x="80424" fg:w="14"/><text x="75.1550%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="74.9050%" y="1749" width="0.0130%" height="15" fill="rgb(213,175,48)" fg:x="80424" fg:w="14"/><text x="75.1550%" y="1759.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="74.9078%" y="1733" width="0.0102%" height="15" fill="rgb(252,55,9)" fg:x="80427" fg:w="11"/><text x="75.1578%" y="1743.50"></text></g><g><title>cfree (12 samples, 0.01%)</title><rect x="74.9274%" y="1765" width="0.0112%" height="15" fill="rgb(231,72,33)" fg:x="80448" fg:w="12"/><text x="75.1774%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (74 samples, 0.07%)</title><rect x="74.9180%" y="1813" width="0.0689%" height="15" fill="rgb(213,2,54)" fg:x="80438" fg:w="74"/><text x="75.1680%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.07%)</title><rect x="74.9180%" y="1797" width="0.0689%" height="15" fill="rgb(208,88,25)" fg:x="80438" fg:w="74"/><text x="75.1680%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (69 samples, 0.06%)</title><rect x="74.9227%" y="1781" width="0.0643%" height="15" fill="rgb(215,117,13)" fg:x="80443" fg:w="69"/><text x="75.1727%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (52 samples, 0.05%)</title><rect x="74.9385%" y="1765" width="0.0484%" height="15" fill="rgb(243,147,21)" fg:x="80460" fg:w="52"/><text x="75.1885%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (13 samples, 0.01%)</title><rect x="74.9749%" y="1749" width="0.0121%" height="15" fill="rgb(208,215,36)" fg:x="80499" fg:w="13"/><text x="75.2249%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::StructRef&gt; (20 samples, 0.02%)</title><rect x="74.9907%" y="1813" width="0.0186%" height="15" fill="rgb(238,187,24)" fg:x="80516" fg:w="20"/><text x="75.2407%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (20 samples, 0.02%)</title><rect x="74.9907%" y="1797" width="0.0186%" height="15" fill="rgb(214,173,11)" fg:x="80516" fg:w="20"/><text x="75.2407%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (12 samples, 0.01%)</title><rect x="74.9981%" y="1781" width="0.0112%" height="15" fill="rgb(222,71,20)" fg:x="80524" fg:w="12"/><text x="75.2481%" y="1791.50"></text></g><g><title>move_table_extension::CommonGasParameters::calculate_load_cost (13 samples, 0.01%)</title><rect x="75.0093%" y="1813" width="0.0121%" height="15" fill="rgb(242,125,4)" fg:x="80536" fg:w="13"/><text x="75.2593%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.01%)</title><rect x="75.0624%" y="1765" width="0.0121%" height="15" fill="rgb(217,101,52)" fg:x="80593" fg:w="13"/><text x="75.3124%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="75.0624%" y="1749" width="0.0121%" height="15" fill="rgb(223,2,50)" fg:x="80593" fg:w="13"/><text x="75.3124%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="75.0624%" y="1733" width="0.0121%" height="15" fill="rgb(225,197,9)" fg:x="80593" fg:w="13"/><text x="75.3124%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="75.0624%" y="1717" width="0.0121%" height="15" fill="rgb(234,76,27)" fg:x="80593" fg:w="13"/><text x="75.3124%" y="1727.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (14 samples, 0.01%)</title><rect x="75.0838%" y="1733" width="0.0130%" height="15" fill="rgb(213,161,26)" fg:x="80616" fg:w="14"/><text x="75.3338%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="75.1201%" y="1653" width="0.0168%" height="15" fill="rgb(210,228,2)" fg:x="80655" fg:w="18"/><text x="75.3701%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="75.1201%" y="1637" width="0.0168%" height="15" fill="rgb(235,4,16)" fg:x="80655" fg:w="18"/><text x="75.3701%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="75.1201%" y="1621" width="0.0168%" height="15" fill="rgb(235,83,42)" fg:x="80655" fg:w="18"/><text x="75.3701%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="75.1239%" y="1605" width="0.0130%" height="15" fill="rgb(207,116,39)" fg:x="80659" fg:w="14"/><text x="75.3739%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="75.1239%" y="1589" width="0.0130%" height="15" fill="rgb(253,206,9)" fg:x="80659" fg:w="14"/><text x="75.3739%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="75.1239%" y="1573" width="0.0130%" height="15" fill="rgb(234,32,47)" fg:x="80659" fg:w="14"/><text x="75.3739%" y="1583.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as aptos_types::write_set::TransactionWrite&gt;::extract_raw_bytes (63 samples, 0.06%)</title><rect x="75.0969%" y="1733" width="0.0587%" height="15" fill="rgb(247,40,39)" fg:x="80630" fg:w="63"/><text x="75.3469%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="75.1164%" y="1717" width="0.0391%" height="15" fill="rgb(236,199,13)" fg:x="80651" fg:w="42"/><text x="75.3664%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.04%)</title><rect x="75.1201%" y="1701" width="0.0354%" height="15" fill="rgb(240,127,44)" fg:x="80655" fg:w="38"/><text x="75.3701%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.04%)</title><rect x="75.1201%" y="1685" width="0.0354%" height="15" fill="rgb(248,220,47)" fg:x="80655" fg:w="38"/><text x="75.3701%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.04%)</title><rect x="75.1201%" y="1669" width="0.0354%" height="15" fill="rgb(240,78,9)" fg:x="80655" fg:w="38"/><text x="75.3701%" y="1679.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.02%)</title><rect x="75.1369%" y="1653" width="0.0186%" height="15" fill="rgb(245,119,5)" fg:x="80673" fg:w="20"/><text x="75.3869%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="75.1369%" y="1637" width="0.0186%" height="15" fill="rgb(238,175,31)" fg:x="80673" fg:w="20"/><text x="75.3869%" y="1647.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="75.1369%" y="1621" width="0.0186%" height="15" fill="rgb(232,140,42)" fg:x="80673" fg:w="20"/><text x="75.3869%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="75.1611%" y="1717" width="0.0102%" height="15" fill="rgb(218,179,7)" fg:x="80699" fg:w="11"/><text x="75.4111%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.01%)</title><rect x="75.1714%" y="1717" width="0.0149%" height="15" fill="rgb(232,79,27)" fg:x="80710" fg:w="16"/><text x="75.4214%" y="1727.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="75.1732%" y="1701" width="0.0130%" height="15" fill="rgb(247,11,19)" fg:x="80712" fg:w="14"/><text x="75.4232%" y="1711.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="75.1732%" y="1685" width="0.0130%" height="15" fill="rgb(216,171,54)" fg:x="80712" fg:w="14"/><text x="75.4232%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="75.2105%" y="1685" width="0.0112%" height="15" fill="rgb(233,158,36)" fg:x="80752" fg:w="12"/><text x="75.4605%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.02%)</title><rect x="75.2040%" y="1701" width="0.0186%" height="15" fill="rgb(215,48,47)" fg:x="80745" fg:w="20"/><text x="75.4540%" y="1711.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="75.2347%" y="1701" width="0.0140%" height="15" fill="rgb(230,223,15)" fg:x="80778" fg:w="15"/><text x="75.4847%" y="1711.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="75.2347%" y="1685" width="0.0140%" height="15" fill="rgb(234,49,19)" fg:x="80778" fg:w="15"/><text x="75.4847%" y="1695.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="75.2384%" y="1669" width="0.0102%" height="15" fill="rgb(232,89,25)" fg:x="80782" fg:w="11"/><text x="75.4884%" y="1679.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="75.2384%" y="1653" width="0.0102%" height="15" fill="rgb(237,206,28)" fg:x="80782" fg:w="11"/><text x="75.4884%" y="1663.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::wait_for_dependency (68 samples, 0.06%)</title><rect x="75.1863%" y="1717" width="0.0633%" height="15" fill="rgb(249,68,37)" fg:x="80726" fg:w="68"/><text x="75.4363%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_lower_bound_edge (50 samples, 0.05%)</title><rect x="75.3437%" y="1653" width="0.0466%" height="15" fill="rgb(226,99,43)" fg:x="80895" fg:w="50"/><text x="75.5937%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (50 samples, 0.05%)</title><rect x="75.3437%" y="1637" width="0.0466%" height="15" fill="rgb(216,46,28)" fg:x="80895" fg:w="50"/><text x="75.5937%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (50 samples, 0.05%)</title><rect x="75.3437%" y="1621" width="0.0466%" height="15" fill="rgb(216,33,9)" fg:x="80895" fg:w="50"/><text x="75.5937%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (35 samples, 0.03%)</title><rect x="75.3902%" y="1653" width="0.0326%" height="15" fill="rgb(216,129,4)" fg:x="80945" fg:w="35"/><text x="75.6402%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (35 samples, 0.03%)</title><rect x="75.3902%" y="1637" width="0.0326%" height="15" fill="rgb(216,106,3)" fg:x="80945" fg:w="35"/><text x="75.6402%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (32 samples, 0.03%)</title><rect x="75.3930%" y="1621" width="0.0298%" height="15" fill="rgb(217,79,45)" fg:x="80948" fg:w="32"/><text x="75.6430%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (18 samples, 0.02%)</title><rect x="75.4247%" y="1637" width="0.0168%" height="15" fill="rgb(239,98,13)" fg:x="80982" fg:w="18"/><text x="75.6747%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (18 samples, 0.02%)</title><rect x="75.4247%" y="1621" width="0.0168%" height="15" fill="rgb(221,115,4)" fg:x="80982" fg:w="18"/><text x="75.6747%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (139 samples, 0.13%)</title><rect x="75.3185%" y="1701" width="0.1295%" height="15" fill="rgb(215,85,0)" fg:x="80868" fg:w="139"/><text x="75.5685%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (134 samples, 0.12%)</title><rect x="75.3232%" y="1685" width="0.1248%" height="15" fill="rgb(230,62,15)" fg:x="80873" fg:w="134"/><text x="75.5732%" y="1695.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (134 samples, 0.12%)</title><rect x="75.3232%" y="1669" width="0.1248%" height="15" fill="rgb(247,162,2)" fg:x="80873" fg:w="134"/><text x="75.5732%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (27 samples, 0.03%)</title><rect x="75.4228%" y="1653" width="0.0251%" height="15" fill="rgb(212,112,32)" fg:x="80980" fg:w="27"/><text x="75.6728%" y="1663.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (31 samples, 0.03%)</title><rect x="75.4620%" y="1669" width="0.0289%" height="15" fill="rgb(216,137,9)" fg:x="81022" fg:w="31"/><text x="75.7120%" y="1679.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (30 samples, 0.03%)</title><rect x="75.4629%" y="1653" width="0.0279%" height="15" fill="rgb(250,149,33)" fg:x="81023" fg:w="30"/><text x="75.7129%" y="1663.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (30 samples, 0.03%)</title><rect x="75.4629%" y="1637" width="0.0279%" height="15" fill="rgb(246,124,31)" fg:x="81023" fg:w="30"/><text x="75.7129%" y="1647.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (27 samples, 0.03%)</title><rect x="75.4657%" y="1621" width="0.0251%" height="15" fill="rgb(216,210,22)" fg:x="81026" fg:w="27"/><text x="75.7157%" y="1631.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (27 samples, 0.03%)</title><rect x="75.4657%" y="1605" width="0.0251%" height="15" fill="rgb(228,128,36)" fg:x="81026" fg:w="27"/><text x="75.7157%" y="1615.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (27 samples, 0.03%)</title><rect x="75.4657%" y="1589" width="0.0251%" height="15" fill="rgb(231,41,0)" fg:x="81026" fg:w="27"/><text x="75.7157%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="75.5011%" y="1509" width="0.0112%" height="15" fill="rgb(232,61,26)" fg:x="81064" fg:w="12"/><text x="75.7511%" y="1519.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="75.5011%" y="1541" width="0.0121%" height="15" fill="rgb(217,60,9)" fg:x="81064" fg:w="13"/><text x="75.7511%" y="1551.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.01%)</title><rect x="75.5011%" y="1525" width="0.0121%" height="15" fill="rgb(233,41,35)" fg:x="81064" fg:w="13"/><text x="75.7511%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::table::TableHandle as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="75.5011%" y="1605" width="0.0205%" height="15" fill="rgb(253,139,43)" fg:x="81064" fg:w="22"/><text x="75.7511%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="75.5011%" y="1589" width="0.0205%" height="15" fill="rgb(245,100,51)" fg:x="81064" fg:w="22"/><text x="75.7511%" y="1599.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (22 samples, 0.02%)</title><rect x="75.5011%" y="1573" width="0.0205%" height="15" fill="rgb(250,208,18)" fg:x="81064" fg:w="22"/><text x="75.7511%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (22 samples, 0.02%)</title><rect x="75.5011%" y="1557" width="0.0205%" height="15" fill="rgb(245,33,2)" fg:x="81064" fg:w="22"/><text x="75.7511%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="75.5001%" y="1637" width="0.0307%" height="15" fill="rgb(244,171,31)" fg:x="81063" fg:w="33"/><text x="75.7501%" y="1647.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="75.5001%" y="1621" width="0.0307%" height="15" fill="rgb(229,1,43)" fg:x="81063" fg:w="33"/><text x="75.7501%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="75.5327%" y="1589" width="0.0102%" height="15" fill="rgb(223,153,28)" fg:x="81098" fg:w="11"/><text x="75.7827%" y="1599.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (57 samples, 0.05%)</title><rect x="75.4908%" y="1669" width="0.0531%" height="15" fill="rgb(241,4,46)" fg:x="81053" fg:w="57"/><text x="75.7408%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (48 samples, 0.04%)</title><rect x="75.4992%" y="1653" width="0.0447%" height="15" fill="rgb(230,81,11)" fg:x="81062" fg:w="48"/><text x="75.7492%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="75.5309%" y="1637" width="0.0130%" height="15" fill="rgb(253,204,39)" fg:x="81096" fg:w="14"/><text x="75.7809%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="75.5309%" y="1621" width="0.0130%" height="15" fill="rgb(250,96,8)" fg:x="81096" fg:w="14"/><text x="75.7809%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="75.5309%" y="1605" width="0.0130%" height="15" fill="rgb(219,89,54)" fg:x="81096" fg:w="14"/><text x="75.7809%" y="1615.50"></text></g><g><title>&lt;aptos_types::state_store::table::TableHandle as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="75.5458%" y="1589" width="0.0130%" height="15" fill="rgb(235,136,39)" fg:x="81112" fg:w="14"/><text x="75.7958%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="75.5458%" y="1573" width="0.0130%" height="15" fill="rgb(230,155,37)" fg:x="81112" fg:w="14"/><text x="75.7958%" y="1583.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (14 samples, 0.01%)</title><rect x="75.5458%" y="1557" width="0.0130%" height="15" fill="rgb(235,199,50)" fg:x="81112" fg:w="14"/><text x="75.7958%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.01%)</title><rect x="75.5458%" y="1541" width="0.0130%" height="15" fill="rgb(227,81,32)" fg:x="81112" fg:w="14"/><text x="75.7958%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="75.5458%" y="1621" width="0.0177%" height="15" fill="rgb(225,6,28)" fg:x="81112" fg:w="19"/><text x="75.7958%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="75.5458%" y="1605" width="0.0177%" height="15" fill="rgb(207,211,17)" fg:x="81112" fg:w="19"/><text x="75.7958%" y="1615.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.03%)</title><rect x="75.5449%" y="1637" width="0.0251%" height="15" fill="rgb(228,31,49)" fg:x="81111" fg:w="27"/><text x="75.7949%" y="1647.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (60 samples, 0.06%)</title><rect x="75.5709%" y="1573" width="0.0559%" height="15" fill="rgb(230,185,3)" fg:x="81139" fg:w="60"/><text x="75.8209%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (59 samples, 0.05%)</title><rect x="75.5719%" y="1557" width="0.0550%" height="15" fill="rgb(206,167,15)" fg:x="81140" fg:w="59"/><text x="75.8219%" y="1567.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (56 samples, 0.05%)</title><rect x="75.5747%" y="1541" width="0.0522%" height="15" fill="rgb(234,2,36)" fg:x="81143" fg:w="56"/><text x="75.8247%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (56 samples, 0.05%)</title><rect x="75.5747%" y="1525" width="0.0522%" height="15" fill="rgb(239,160,29)" fg:x="81143" fg:w="56"/><text x="75.8247%" y="1535.50"></text></g><g><title>[libc.so.6] (33 samples, 0.03%)</title><rect x="75.5961%" y="1509" width="0.0307%" height="15" fill="rgb(236,117,2)" fg:x="81166" fg:w="33"/><text x="75.8461%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (61 samples, 0.06%)</title><rect x="75.5709%" y="1589" width="0.0568%" height="15" fill="rgb(215,117,37)" fg:x="81139" fg:w="61"/><text x="75.8209%" y="1599.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (12 samples, 0.01%)</title><rect x="75.6305%" y="1589" width="0.0112%" height="15" fill="rgb(244,48,36)" fg:x="81203" fg:w="12"/><text x="75.8805%" y="1599.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.01%)</title><rect x="75.6305%" y="1573" width="0.0112%" height="15" fill="rgb(223,101,37)" fg:x="81203" fg:w="12"/><text x="75.8805%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="75.6305%" y="1557" width="0.0112%" height="15" fill="rgb(205,200,1)" fg:x="81203" fg:w="12"/><text x="75.8805%" y="1567.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (415 samples, 0.39%)</title><rect x="75.2561%" y="1717" width="0.3865%" height="15" fill="rgb(209,193,20)" fg:x="80801" fg:w="415"/><text x="75.5061%" y="1727.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (204 samples, 0.19%)</title><rect x="75.4526%" y="1701" width="0.1900%" height="15" fill="rgb(214,63,13)" fg:x="81012" fg:w="204"/><text x="75.7026%" y="1711.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (202 samples, 0.19%)</title><rect x="75.4545%" y="1685" width="0.1881%" height="15" fill="rgb(253,113,46)" fg:x="81014" fg:w="202"/><text x="75.7045%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (106 samples, 0.10%)</title><rect x="75.5439%" y="1669" width="0.0987%" height="15" fill="rgb(237,103,34)" fg:x="81110" fg:w="106"/><text x="75.7939%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (106 samples, 0.10%)</title><rect x="75.5439%" y="1653" width="0.0987%" height="15" fill="rgb(223,38,25)" fg:x="81110" fg:w="106"/><text x="75.7939%" y="1663.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (78 samples, 0.07%)</title><rect x="75.5700%" y="1637" width="0.0726%" height="15" fill="rgb(251,32,32)" fg:x="81138" fg:w="78"/><text x="75.8200%" y="1647.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (78 samples, 0.07%)</title><rect x="75.5700%" y="1621" width="0.0726%" height="15" fill="rgb(228,65,22)" fg:x="81138" fg:w="78"/><text x="75.8200%" y="1631.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (78 samples, 0.07%)</title><rect x="75.5700%" y="1605" width="0.0726%" height="15" fill="rgb(205,11,46)" fg:x="81138" fg:w="78"/><text x="75.8200%" y="1615.50"></text></g><g><title>cfree (27 samples, 0.03%)</title><rect x="75.6529%" y="1685" width="0.0251%" height="15" fill="rgb(220,35,2)" fg:x="81227" fg:w="27"/><text x="75.9029%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;(aptos_infallible::mutex::Mutex&lt;bool&gt;,std::sync::condvar::Condvar)&gt;&gt; (40 samples, 0.04%)</title><rect x="75.6426%" y="1717" width="0.0373%" height="15" fill="rgb(217,151,17)" fg:x="81216" fg:w="40"/><text x="75.8926%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="75.6426%" y="1701" width="0.0373%" height="15" fill="rgb(243,227,35)" fg:x="81216" fg:w="40"/><text x="75.8926%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="75.7172%" y="1637" width="0.0130%" height="15" fill="rgb(214,0,34)" fg:x="81296" fg:w="14"/><text x="75.9672%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.01%)</title><rect x="75.7172%" y="1621" width="0.0130%" height="15" fill="rgb(209,42,37)" fg:x="81296" fg:w="14"/><text x="75.9672%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="75.7172%" y="1605" width="0.0130%" height="15" fill="rgb(251,176,30)" fg:x="81296" fg:w="14"/><text x="75.9672%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.01%)</title><rect x="75.7172%" y="1589" width="0.0130%" height="15" fill="rgb(223,64,40)" fg:x="81296" fg:w="14"/><text x="75.9672%" y="1599.50"></text></g><g><title>prometheus::histogram::Histogram::observe (34 samples, 0.03%)</title><rect x="75.7041%" y="1669" width="0.0317%" height="15" fill="rgb(227,180,23)" fg:x="81282" fg:w="34"/><text x="75.9541%" y="1679.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (34 samples, 0.03%)</title><rect x="75.7041%" y="1653" width="0.0317%" height="15" fill="rgb(220,137,31)" fg:x="81282" fg:w="34"/><text x="75.9541%" y="1663.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (69 samples, 0.06%)</title><rect x="75.7414%" y="1637" width="0.0643%" height="15" fill="rgb(245,124,25)" fg:x="81322" fg:w="69"/><text x="75.9914%" y="1647.50"></text></g><g><title>clock_gettime (63 samples, 0.06%)</title><rect x="75.7470%" y="1621" width="0.0587%" height="15" fill="rgb(217,157,5)" fg:x="81328" fg:w="63"/><text x="75.9970%" y="1631.50"></text></g><g><title>__vdso_clock_gettime (27 samples, 0.03%)</title><rect x="75.7805%" y="1605" width="0.0251%" height="15" fill="rgb(225,59,2)" fg:x="81364" fg:w="27"/><text x="76.0305%" y="1615.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (91 samples, 0.08%)</title><rect x="75.7358%" y="1653" width="0.0848%" height="15" fill="rgb(220,182,9)" fg:x="81316" fg:w="91"/><text x="75.9858%" y="1663.50"></text></g><g><title>std::time::Instant::now (12 samples, 0.01%)</title><rect x="75.8094%" y="1637" width="0.0112%" height="15" fill="rgb(249,54,24)" fg:x="81395" fg:w="12"/><text x="76.0594%" y="1647.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (12 samples, 0.01%)</title><rect x="75.8094%" y="1621" width="0.0112%" height="15" fill="rgb(216,89,17)" fg:x="81395" fg:w="12"/><text x="76.0594%" y="1631.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (178 samples, 0.17%)</title><rect x="75.6808%" y="1701" width="0.1658%" height="15" fill="rgb(245,20,45)" fg:x="81257" fg:w="178"/><text x="75.9308%" y="1711.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (153 samples, 0.14%)</title><rect x="75.7041%" y="1685" width="0.1425%" height="15" fill="rgb(230,83,14)" fg:x="81282" fg:w="153"/><text x="75.9541%" y="1695.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (119 samples, 0.11%)</title><rect x="75.7358%" y="1669" width="0.1108%" height="15" fill="rgb(246,109,11)" fg:x="81316" fg:w="119"/><text x="75.9858%" y="1679.50"></text></g><g><title>prometheus::histogram::duration_to_seconds (28 samples, 0.03%)</title><rect x="75.8205%" y="1653" width="0.0261%" height="15" fill="rgb(235,85,23)" fg:x="81407" fg:w="28"/><text x="76.0705%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (179 samples, 0.17%)</title><rect x="75.6808%" y="1717" width="0.1667%" height="15" fill="rgb(215,101,36)" fg:x="81257" fg:w="179"/><text x="75.9308%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (31 samples, 0.03%)</title><rect x="75.8476%" y="1717" width="0.0289%" height="15" fill="rgb(228,140,31)" fg:x="81436" fg:w="31"/><text x="76.0976%" y="1727.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="75.8476%" y="1701" width="0.0289%" height="15" fill="rgb(234,162,37)" fg:x="81436" fg:w="31"/><text x="76.0976%" y="1711.50"></text></g><g><title>std::sync::poison::Flag::done (31 samples, 0.03%)</title><rect x="75.8476%" y="1685" width="0.0289%" height="15" fill="rgb(221,0,24)" fg:x="81436" fg:w="31"/><text x="76.0976%" y="1695.50"></text></g><g><title>std::thread::panicking (17 samples, 0.02%)</title><rect x="75.8606%" y="1669" width="0.0158%" height="15" fill="rgb(230,161,41)" fg:x="81450" fg:w="17"/><text x="76.1106%" y="1679.50"></text></g><g><title>std::panicking::panicking (17 samples, 0.02%)</title><rect x="75.8606%" y="1653" width="0.0158%" height="15" fill="rgb(224,46,24)" fg:x="81450" fg:w="17"/><text x="76.1106%" y="1663.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (17 samples, 0.02%)</title><rect x="75.8606%" y="1637" width="0.0158%" height="15" fill="rgb(205,59,32)" fg:x="81450" fg:w="17"/><text x="76.1106%" y="1647.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (36 samples, 0.03%)</title><rect x="75.8764%" y="1717" width="0.0335%" height="15" fill="rgb(239,31,20)" fg:x="81467" fg:w="36"/><text x="76.1264%" y="1727.50"></text></g><g><title>prometheus::histogram::HistogramTimer::new (27 samples, 0.03%)</title><rect x="75.8848%" y="1701" width="0.0251%" height="15" fill="rgb(233,149,44)" fg:x="81476" fg:w="27"/><text x="76.1348%" y="1711.50"></text></g><g><title>prometheus::histogram::Instant::now (27 samples, 0.03%)</title><rect x="75.8848%" y="1685" width="0.0251%" height="15" fill="rgb(243,47,26)" fg:x="81476" fg:w="27"/><text x="76.1348%" y="1695.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (27 samples, 0.03%)</title><rect x="75.8848%" y="1669" width="0.0251%" height="15" fill="rgb(233,107,5)" fg:x="81476" fg:w="27"/><text x="76.1348%" y="1679.50"></text></g><g><title>clock_gettime (26 samples, 0.02%)</title><rect x="75.8857%" y="1653" width="0.0242%" height="15" fill="rgb(248,140,33)" fg:x="81477" fg:w="26"/><text x="76.1357%" y="1663.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.01%)</title><rect x="75.8960%" y="1637" width="0.0140%" height="15" fill="rgb(228,178,19)" fg:x="81488" fg:w="15"/><text x="76.1460%" y="1647.50"></text></g><g><title>std::sys::unix::futex::futex_wait (71 samples, 0.07%)</title><rect x="75.9193%" y="1653" width="0.0661%" height="15" fill="rgb(224,39,49)" fg:x="81513" fg:w="71"/><text x="76.1693%" y="1663.50"></text></g><g><title>syscall (62 samples, 0.06%)</title><rect x="75.9277%" y="1637" width="0.0577%" height="15" fill="rgb(246,56,47)" fg:x="81522" fg:w="62"/><text x="76.1777%" y="1647.50"></text></g><g><title>[unknown] (57 samples, 0.05%)</title><rect x="75.9323%" y="1621" width="0.0531%" height="15" fill="rgb(220,73,27)" fg:x="81527" fg:w="57"/><text x="76.1823%" y="1631.50"></text></g><g><title>[unknown] (48 samples, 0.04%)</title><rect x="75.9407%" y="1605" width="0.0447%" height="15" fill="rgb(239,112,21)" fg:x="81536" fg:w="48"/><text x="76.1907%" y="1615.50"></text></g><g><title>[unknown] (45 samples, 0.04%)</title><rect x="75.9435%" y="1589" width="0.0419%" height="15" fill="rgb(253,14,51)" fg:x="81539" fg:w="45"/><text x="76.1935%" y="1599.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="75.9602%" y="1573" width="0.0251%" height="15" fill="rgb(215,58,12)" fg:x="81557" fg:w="27"/><text x="76.2102%" y="1583.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="75.9640%" y="1557" width="0.0214%" height="15" fill="rgb(207,181,19)" fg:x="81561" fg:w="23"/><text x="76.2140%" y="1567.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="75.9705%" y="1541" width="0.0149%" height="15" fill="rgb(211,214,34)" fg:x="81568" fg:w="16"/><text x="76.2205%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (88 samples, 0.08%)</title><rect x="75.9127%" y="1685" width="0.0820%" height="15" fill="rgb(243,124,39)" fg:x="81506" fg:w="88"/><text x="76.1627%" y="1695.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (81 samples, 0.08%)</title><rect x="75.9193%" y="1669" width="0.0754%" height="15" fill="rgb(248,135,21)" fg:x="81513" fg:w="81"/><text x="76.1693%" y="1679.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (903 samples, 0.84%)</title><rect x="75.1555%" y="1733" width="0.8410%" height="15" fill="rgb(245,218,3)" fg:x="80693" fg:w="903"/><text x="75.4055%" y="1743.50"></text></g><g><title>std::sync::condvar::Condvar::wait (93 samples, 0.09%)</title><rect x="75.9100%" y="1717" width="0.0866%" height="15" fill="rgb(225,144,22)" fg:x="81503" fg:w="93"/><text x="76.1600%" y="1727.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (92 samples, 0.09%)</title><rect x="75.9109%" y="1701" width="0.0857%" height="15" fill="rgb(250,90,15)" fg:x="81504" fg:w="92"/><text x="76.1609%" y="1711.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (177 samples, 0.16%)</title><rect x="76.0282%" y="1589" width="0.1649%" height="15" fill="rgb(224,64,29)" fg:x="81630" fg:w="177"/><text x="76.2782%" y="1599.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (177 samples, 0.16%)</title><rect x="76.0282%" y="1573" width="0.1649%" height="15" fill="rgb(217,50,47)" fg:x="81630" fg:w="177"/><text x="76.2782%" y="1583.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (177 samples, 0.16%)</title><rect x="76.0282%" y="1557" width="0.1649%" height="15" fill="rgb(231,159,47)" fg:x="81630" fg:w="177"/><text x="76.2782%" y="1567.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (177 samples, 0.16%)</title><rect x="76.0282%" y="1541" width="0.1649%" height="15" fill="rgb(213,89,29)" fg:x="81630" fg:w="177"/><text x="76.2782%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29 samples, 0.03%)</title><rect x="76.1661%" y="1525" width="0.0270%" height="15" fill="rgb(243,90,23)" fg:x="81778" fg:w="29"/><text x="76.4161%" y="1535.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (189 samples, 0.18%)</title><rect x="76.0180%" y="1637" width="0.1760%" height="15" fill="rgb(213,21,6)" fg:x="81619" fg:w="189"/><text x="76.2680%" y="1647.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (183 samples, 0.17%)</title><rect x="76.0236%" y="1621" width="0.1704%" height="15" fill="rgb(237,139,17)" fg:x="81625" fg:w="183"/><text x="76.2736%" y="1631.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (183 samples, 0.17%)</title><rect x="76.0236%" y="1605" width="0.1704%" height="15" fill="rgb(250,147,17)" fg:x="81625" fg:w="183"/><text x="76.2736%" y="1615.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (196 samples, 0.18%)</title><rect x="76.0124%" y="1669" width="0.1825%" height="15" fill="rgb(212,208,42)" fg:x="81613" fg:w="196"/><text x="76.2624%" y="1679.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (196 samples, 0.18%)</title><rect x="76.0124%" y="1653" width="0.1825%" height="15" fill="rgb(215,229,40)" fg:x="81613" fg:w="196"/><text x="76.2624%" y="1663.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="76.2015%" y="1605" width="0.0121%" height="15" fill="rgb(206,204,1)" fg:x="81816" fg:w="13"/><text x="76.4515%" y="1615.50"></text></g><g><title>serde_bytes::serialize (13 samples, 0.01%)</title><rect x="76.2015%" y="1589" width="0.0121%" height="15" fill="rgb(230,62,32)" fg:x="81816" fg:w="13"/><text x="76.4515%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="76.2015%" y="1573" width="0.0121%" height="15" fill="rgb(223,22,42)" fg:x="81816" fg:w="13"/><text x="76.4515%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (13 samples, 0.01%)</title><rect x="76.2015%" y="1557" width="0.0121%" height="15" fill="rgb(244,6,23)" fg:x="81816" fg:w="13"/><text x="76.4515%" y="1567.50"></text></g><g><title>bcs::ser::serialize_into (15 samples, 0.01%)</title><rect x="76.2015%" y="1669" width="0.0140%" height="15" fill="rgb(240,221,42)" fg:x="81816" fg:w="15"/><text x="76.4515%" y="1679.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 0.01%)</title><rect x="76.2015%" y="1653" width="0.0140%" height="15" fill="rgb(222,74,7)" fg:x="81816" fg:w="15"/><text x="76.4515%" y="1663.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (15 samples, 0.01%)</title><rect x="76.2015%" y="1637" width="0.0140%" height="15" fill="rgb(227,191,38)" fg:x="81816" fg:w="15"/><text x="76.4515%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (15 samples, 0.01%)</title><rect x="76.2015%" y="1621" width="0.0140%" height="15" fill="rgb(227,89,34)" fg:x="81816" fg:w="15"/><text x="76.4515%" y="1631.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (1,227 samples, 1.14%)</title><rect x="75.0745%" y="1749" width="1.1428%" height="15" fill="rgb(215,153,25)" fg:x="80606" fg:w="1227"/><text x="75.3245%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (237 samples, 0.22%)</title><rect x="75.9966%" y="1733" width="0.2207%" height="15" fill="rgb(215,153,46)" fg:x="81596" fg:w="237"/><text x="76.2466%" y="1743.50"></text></g><g><title>core::ops::function::FnOnce::call_once (228 samples, 0.21%)</title><rect x="76.0050%" y="1717" width="0.2124%" height="15" fill="rgb(242,38,52)" fg:x="81605" fg:w="228"/><text x="76.2550%" y="1727.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (228 samples, 0.21%)</title><rect x="76.0050%" y="1701" width="0.2124%" height="15" fill="rgb(218,112,4)" fg:x="81605" fg:w="228"/><text x="76.2550%" y="1711.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (224 samples, 0.21%)</title><rect x="76.0087%" y="1685" width="0.2086%" height="15" fill="rgb(231,210,31)" fg:x="81609" fg:w="224"/><text x="76.2587%" y="1695.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (1,242 samples, 1.16%)</title><rect x="75.0745%" y="1765" width="1.1568%" height="15" fill="rgb(245,223,36)" fg:x="80606" fg:w="1242"/><text x="75.3245%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="76.2210%" y="1749" width="0.0102%" height="15" fill="rgb(246,41,2)" fg:x="81837" fg:w="11"/><text x="76.4710%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_table_extension::TableResolver&gt;::resolve_table_entry (1,302 samples, 1.21%)</title><rect x="75.0363%" y="1797" width="1.2127%" height="15" fill="rgb(227,51,31)" fg:x="80565" fg:w="1302"/><text x="75.2863%" y="1807.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_table_extension::TableResolver&gt;::resolve_table_entry (1,284 samples, 1.20%)</title><rect x="75.0531%" y="1781" width="1.1959%" height="15" fill="rgb(222,95,26)" fg:x="80583" fg:w="1284"/><text x="75.3031%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.01%)</title><rect x="76.2508%" y="1781" width="0.0112%" height="15" fill="rgb(224,190,1)" fg:x="81869" fg:w="12"/><text x="76.5008%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.01%)</title><rect x="76.2508%" y="1765" width="0.0112%" height="15" fill="rgb(209,90,42)" fg:x="81869" fg:w="12"/><text x="76.5008%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.01%)</title><rect x="76.2508%" y="1749" width="0.0112%" height="15" fill="rgb(232,225,50)" fg:x="81869" fg:w="12"/><text x="76.5008%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (18 samples, 0.02%)</title><rect x="76.2490%" y="1797" width="0.0168%" height="15" fill="rgb(239,89,47)" fg:x="81867" fg:w="18"/><text x="76.4990%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (24 samples, 0.02%)</title><rect x="76.2657%" y="1797" width="0.0224%" height="15" fill="rgb(230,212,50)" fg:x="81885" fg:w="24"/><text x="76.5157%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (17 samples, 0.02%)</title><rect x="76.2723%" y="1781" width="0.0158%" height="15" fill="rgb(252,1,27)" fg:x="81892" fg:w="17"/><text x="76.5223%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (17 samples, 0.02%)</title><rect x="76.2723%" y="1765" width="0.0158%" height="15" fill="rgb(237,179,41)" fg:x="81892" fg:w="17"/><text x="76.5223%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.02%)</title><rect x="76.2723%" y="1749" width="0.0158%" height="15" fill="rgb(214,151,37)" fg:x="81892" fg:w="17"/><text x="76.5223%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (17 samples, 0.02%)</title><rect x="76.2723%" y="1733" width="0.0158%" height="15" fill="rgb(211,74,11)" fg:x="81892" fg:w="17"/><text x="76.5223%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="76.2723%" y="1717" width="0.0158%" height="15" fill="rgb(242,21,21)" fg:x="81892" fg:w="17"/><text x="76.5223%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="76.2723%" y="1701" width="0.0158%" height="15" fill="rgb(226,106,43)" fg:x="81892" fg:w="17"/><text x="76.5223%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="76.2723%" y="1685" width="0.0158%" height="15" fill="rgb(229,162,39)" fg:x="81892" fg:w="17"/><text x="76.5223%" y="1695.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="76.2778%" y="1669" width="0.0102%" height="15" fill="rgb(228,159,25)" fg:x="81898" fg:w="11"/><text x="76.5278%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.02%)</title><rect x="76.3328%" y="1669" width="0.0168%" height="15" fill="rgb(237,32,23)" fg:x="81957" fg:w="18"/><text x="76.5828%" y="1679.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (11 samples, 0.01%)</title><rect x="76.3393%" y="1653" width="0.0102%" height="15" fill="rgb(212,35,32)" fg:x="81964" fg:w="11"/><text x="76.5893%" y="1663.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (11 samples, 0.01%)</title><rect x="76.3393%" y="1637" width="0.0102%" height="15" fill="rgb(215,199,1)" fg:x="81964" fg:w="11"/><text x="76.5893%" y="1647.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (11 samples, 0.01%)</title><rect x="76.3393%" y="1621" width="0.0102%" height="15" fill="rgb(215,67,13)" fg:x="81964" fg:w="11"/><text x="76.5893%" y="1631.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (21 samples, 0.02%)</title><rect x="76.3319%" y="1685" width="0.0196%" height="15" fill="rgb(216,20,47)" fg:x="81956" fg:w="21"/><text x="76.5819%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (38 samples, 0.04%)</title><rect x="76.3281%" y="1701" width="0.0354%" height="15" fill="rgb(249,183,48)" fg:x="81952" fg:w="38"/><text x="76.5781%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="76.3533%" y="1685" width="0.0102%" height="15" fill="rgb(208,86,37)" fg:x="81979" fg:w="11"/><text x="76.6033%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.01%)</title><rect x="76.3533%" y="1669" width="0.0102%" height="15" fill="rgb(251,192,7)" fg:x="81979" fg:w="11"/><text x="76.6033%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="76.3533%" y="1653" width="0.0102%" height="15" fill="rgb(234,196,3)" fg:x="81979" fg:w="11"/><text x="76.6033%" y="1663.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (39 samples, 0.04%)</title><rect x="76.3281%" y="1717" width="0.0363%" height="15" fill="rgb(229,150,39)" fg:x="81952" fg:w="39"/><text x="76.5781%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (49 samples, 0.05%)</title><rect x="76.3272%" y="1733" width="0.0456%" height="15" fill="rgb(226,19,29)" fg:x="81951" fg:w="49"/><text x="76.5772%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (61 samples, 0.06%)</title><rect x="76.3226%" y="1749" width="0.0568%" height="15" fill="rgb(226,222,2)" fg:x="81946" fg:w="61"/><text x="76.5726%" y="1759.50"></text></g><g><title>move_table_extension::deserialize (91 samples, 0.08%)</title><rect x="76.3002%" y="1797" width="0.0848%" height="15" fill="rgb(235,85,29)" fg:x="81922" fg:w="91"/><text x="76.5502%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (90 samples, 0.08%)</title><rect x="76.3011%" y="1781" width="0.0838%" height="15" fill="rgb(237,194,43)" fg:x="81923" fg:w="90"/><text x="76.5511%" y="1791.50"></text></g><g><title>bcs::de::from_bytes_seed (78 samples, 0.07%)</title><rect x="76.3123%" y="1765" width="0.0726%" height="15" fill="rgb(211,4,42)" fg:x="81935" fg:w="78"/><text x="76.5623%" y="1775.50"></text></g><g><title>move_table_extension::Table::get_or_create_global_value (1,474 samples, 1.37%)</title><rect x="75.0214%" y="1813" width="1.3728%" height="15" fill="rgb(221,80,37)" fg:x="80549" fg:w="1474"/><text x="75.2714%" y="1823.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="76.4176%" y="1637" width="0.0149%" height="15" fill="rgb(222,47,31)" fg:x="82048" fg:w="16"/><text x="76.6676%" y="1647.50"></text></g><g><title>&lt;move_table_extension::TableHandle as core::cmp::Ord&gt;::cmp (17 samples, 0.02%)</title><rect x="76.4176%" y="1733" width="0.0158%" height="15" fill="rgb(249,82,52)" fg:x="82048" fg:w="17"/><text x="76.6676%" y="1743.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (17 samples, 0.02%)</title><rect x="76.4176%" y="1717" width="0.0158%" height="15" fill="rgb(218,203,2)" fg:x="82048" fg:w="17"/><text x="76.6676%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (17 samples, 0.02%)</title><rect x="76.4176%" y="1701" width="0.0158%" height="15" fill="rgb(210,175,14)" fg:x="82048" fg:w="17"/><text x="76.6676%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (17 samples, 0.02%)</title><rect x="76.4176%" y="1685" width="0.0158%" height="15" fill="rgb(216,210,12)" fg:x="82048" fg:w="17"/><text x="76.6676%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (17 samples, 0.02%)</title><rect x="76.4176%" y="1669" width="0.0158%" height="15" fill="rgb(229,120,18)" fg:x="82048" fg:w="17"/><text x="76.6676%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (17 samples, 0.02%)</title><rect x="76.4176%" y="1653" width="0.0158%" height="15" fill="rgb(231,174,12)" fg:x="82048" fg:w="17"/><text x="76.6676%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (23 samples, 0.02%)</title><rect x="76.4129%" y="1797" width="0.0214%" height="15" fill="rgb(214,101,53)" fg:x="82043" fg:w="23"/><text x="76.6629%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.02%)</title><rect x="76.4157%" y="1781" width="0.0186%" height="15" fill="rgb(246,89,43)" fg:x="82046" fg:w="20"/><text x="76.6657%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20 samples, 0.02%)</title><rect x="76.4157%" y="1765" width="0.0186%" height="15" fill="rgb(222,9,51)" fg:x="82046" fg:w="20"/><text x="76.6657%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.02%)</title><rect x="76.4157%" y="1749" width="0.0186%" height="15" fill="rgb(252,221,9)" fg:x="82046" fg:w="20"/><text x="76.6657%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (76 samples, 0.07%)</title><rect x="76.4343%" y="1797" width="0.0708%" height="15" fill="rgb(248,28,15)" fg:x="82066" fg:w="76"/><text x="76.6843%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (51 samples, 0.05%)</title><rect x="76.4576%" y="1781" width="0.0475%" height="15" fill="rgb(213,54,52)" fg:x="82091" fg:w="51"/><text x="76.7076%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (51 samples, 0.05%)</title><rect x="76.4576%" y="1765" width="0.0475%" height="15" fill="rgb(240,3,45)" fg:x="82091" fg:w="51"/><text x="76.7076%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (51 samples, 0.05%)</title><rect x="76.4576%" y="1749" width="0.0475%" height="15" fill="rgb(239,138,24)" fg:x="82091" fg:w="51"/><text x="76.7076%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (51 samples, 0.05%)</title><rect x="76.4576%" y="1733" width="0.0475%" height="15" fill="rgb(233,45,54)" fg:x="82091" fg:w="51"/><text x="76.7076%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.05%)</title><rect x="76.4576%" y="1717" width="0.0475%" height="15" fill="rgb(220,131,2)" fg:x="82091" fg:w="51"/><text x="76.7076%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.05%)</title><rect x="76.4576%" y="1701" width="0.0475%" height="15" fill="rgb(240,154,36)" fg:x="82091" fg:w="51"/><text x="76.7076%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.05%)</title><rect x="76.4576%" y="1685" width="0.0475%" height="15" fill="rgb(251,221,1)" fg:x="82091" fg:w="51"/><text x="76.7076%" y="1695.50"></text></g><g><title>malloc (45 samples, 0.04%)</title><rect x="76.4632%" y="1669" width="0.0419%" height="15" fill="rgb(225,217,1)" fg:x="82097" fg:w="45"/><text x="76.7132%" y="1679.50"></text></g><g><title>[libc.so.6] (43 samples, 0.04%)</title><rect x="76.4651%" y="1653" width="0.0400%" height="15" fill="rgb(241,105,49)" fg:x="82099" fg:w="43"/><text x="76.7151%" y="1663.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="76.5489%" y="1701" width="0.0177%" height="15" fill="rgb(215,44,32)" fg:x="82189" fg:w="19"/><text x="76.7989%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="76.5498%" y="1685" width="0.0168%" height="15" fill="rgb(213,222,14)" fg:x="82190" fg:w="18"/><text x="76.7998%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="76.5498%" y="1669" width="0.0168%" height="15" fill="rgb(207,99,52)" fg:x="82190" fg:w="18"/><text x="76.7998%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="76.5498%" y="1653" width="0.0168%" height="15" fill="rgb(214,208,52)" fg:x="82190" fg:w="18"/><text x="76.7998%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="76.5498%" y="1637" width="0.0168%" height="15" fill="rgb(244,169,0)" fg:x="82190" fg:w="18"/><text x="76.7998%" y="1647.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.01%)</title><rect x="76.5722%" y="1653" width="0.0102%" height="15" fill="rgb(216,193,37)" fg:x="82214" fg:w="11"/><text x="76.8222%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="76.5722%" y="1637" width="0.0102%" height="15" fill="rgb(212,158,10)" fg:x="82214" fg:w="11"/><text x="76.8222%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (18 samples, 0.02%)</title><rect x="76.5927%" y="1605" width="0.0168%" height="15" fill="rgb(213,110,20)" fg:x="82236" fg:w="18"/><text x="76.8427%" y="1615.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (18 samples, 0.02%)</title><rect x="76.5927%" y="1589" width="0.0168%" height="15" fill="rgb(226,5,42)" fg:x="82236" fg:w="18"/><text x="76.8427%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (18 samples, 0.02%)</title><rect x="76.5927%" y="1573" width="0.0168%" height="15" fill="rgb(211,93,8)" fg:x="82236" fg:w="18"/><text x="76.8427%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18 samples, 0.02%)</title><rect x="76.5927%" y="1557" width="0.0168%" height="15" fill="rgb(240,208,12)" fg:x="82236" fg:w="18"/><text x="76.8427%" y="1567.50"></text></g><g><title>move_table_extension::TableData::get_or_create_table (240 samples, 0.22%)</title><rect x="76.3943%" y="1813" width="0.2235%" height="15" fill="rgb(233,127,50)" fg:x="82023" fg:w="240"/><text x="76.6443%" y="1823.50"></text></g><g><title>move_table_extension::get_type_layout (121 samples, 0.11%)</title><rect x="76.5051%" y="1797" width="0.1127%" height="15" fill="rgb(227,199,53)" fg:x="82142" fg:w="121"/><text x="76.7551%" y="1807.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_layout (110 samples, 0.10%)</title><rect x="76.5153%" y="1781" width="0.1025%" height="15" fill="rgb(235,199,10)" fg:x="82153" fg:w="110"/><text x="76.7653%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::type_to_type_layout (95 samples, 0.09%)</title><rect x="76.5293%" y="1765" width="0.0885%" height="15" fill="rgb(228,148,35)" fg:x="82168" fg:w="95"/><text x="76.7793%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (94 samples, 0.09%)</title><rect x="76.5303%" y="1749" width="0.0875%" height="15" fill="rgb(217,87,19)" fg:x="82169" fg:w="94"/><text x="76.7803%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (92 samples, 0.09%)</title><rect x="76.5321%" y="1733" width="0.0857%" height="15" fill="rgb(239,9,32)" fg:x="82171" fg:w="92"/><text x="76.7821%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (76 samples, 0.07%)</title><rect x="76.5470%" y="1717" width="0.0708%" height="15" fill="rgb(229,101,29)" fg:x="82187" fg:w="76"/><text x="76.7970%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (54 samples, 0.05%)</title><rect x="76.5675%" y="1701" width="0.0503%" height="15" fill="rgb(208,143,26)" fg:x="82209" fg:w="54"/><text x="76.8175%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (54 samples, 0.05%)</title><rect x="76.5675%" y="1685" width="0.0503%" height="15" fill="rgb(214,10,2)" fg:x="82209" fg:w="54"/><text x="76.8175%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (54 samples, 0.05%)</title><rect x="76.5675%" y="1669" width="0.0503%" height="15" fill="rgb(254,203,30)" fg:x="82209" fg:w="54"/><text x="76.8175%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.04%)</title><rect x="76.5824%" y="1653" width="0.0354%" height="15" fill="rgb(242,45,3)" fg:x="82225" fg:w="38"/><text x="76.8324%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.04%)</title><rect x="76.5824%" y="1637" width="0.0354%" height="15" fill="rgb(209,146,51)" fg:x="82225" fg:w="38"/><text x="76.8324%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.04%)</title><rect x="76.5824%" y="1621" width="0.0354%" height="15" fill="rgb(222,80,5)" fg:x="82225" fg:w="38"/><text x="76.8324%" y="1631.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.02%)</title><rect x="76.6197%" y="1797" width="0.0214%" height="15" fill="rgb(252,80,35)" fg:x="82265" fg:w="23"/><text x="76.8697%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (51 samples, 0.05%)</title><rect x="76.6411%" y="1797" width="0.0475%" height="15" fill="rgb(246,125,28)" fg:x="82288" fg:w="51"/><text x="76.8911%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (44 samples, 0.04%)</title><rect x="76.6476%" y="1781" width="0.0410%" height="15" fill="rgb(224,143,51)" fg:x="82295" fg:w="44"/><text x="76.8976%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (40 samples, 0.04%)</title><rect x="76.6513%" y="1765" width="0.0373%" height="15" fill="rgb(205,24,17)" fg:x="82299" fg:w="40"/><text x="76.9013%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (11 samples, 0.01%)</title><rect x="76.6783%" y="1749" width="0.0102%" height="15" fill="rgb(253,128,30)" fg:x="82328" fg:w="11"/><text x="76.9283%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (29 samples, 0.03%)</title><rect x="76.6886%" y="1797" width="0.0270%" height="15" fill="rgb(214,153,25)" fg:x="82339" fg:w="29"/><text x="76.9386%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (19 samples, 0.02%)</title><rect x="76.6979%" y="1781" width="0.0177%" height="15" fill="rgb(214,4,28)" fg:x="82349" fg:w="19"/><text x="76.9479%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (16 samples, 0.01%)</title><rect x="76.7296%" y="1781" width="0.0149%" height="15" fill="rgb(235,179,52)" fg:x="82383" fg:w="16"/><text x="76.9796%" y="1791.50"></text></g><g><title>move_table_extension::get_table_handle (148 samples, 0.14%)</title><rect x="76.6178%" y="1813" width="0.1378%" height="15" fill="rgb(233,27,42)" fg:x="82263" fg:w="148"/><text x="76.8678%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (43 samples, 0.04%)</title><rect x="76.7156%" y="1797" width="0.0400%" height="15" fill="rgb(238,35,25)" fg:x="82368" fg:w="43"/><text x="76.9656%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (12 samples, 0.01%)</title><rect x="76.7445%" y="1781" width="0.0112%" height="15" fill="rgb(227,44,31)" fg:x="82399" fg:w="12"/><text x="76.9945%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="76.8050%" y="1589" width="0.0130%" height="15" fill="rgb(232,201,13)" fg:x="82464" fg:w="14"/><text x="77.0550%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.03%)</title><rect x="76.7882%" y="1653" width="0.0317%" height="15" fill="rgb(224,172,52)" fg:x="82446" fg:w="34"/><text x="77.0382%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="76.7901%" y="1637" width="0.0298%" height="15" fill="rgb(214,27,26)" fg:x="82448" fg:w="32"/><text x="77.0401%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.02%)</title><rect x="76.7957%" y="1621" width="0.0242%" height="15" fill="rgb(210,185,52)" fg:x="82454" fg:w="26"/><text x="77.0457%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="76.8031%" y="1605" width="0.0168%" height="15" fill="rgb(249,59,32)" fg:x="82462" fg:w="18"/><text x="77.0531%" y="1615.50"></text></g><g><title>move_table_extension::serialize (71 samples, 0.07%)</title><rect x="76.7556%" y="1813" width="0.0661%" height="15" fill="rgb(242,209,18)" fg:x="82411" fg:w="71"/><text x="77.0056%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (69 samples, 0.06%)</title><rect x="76.7575%" y="1797" width="0.0643%" height="15" fill="rgb(229,0,18)" fg:x="82413" fg:w="69"/><text x="77.0075%" y="1807.50"></text></g><g><title>bcs::ser::to_bytes (57 samples, 0.05%)</title><rect x="76.7687%" y="1781" width="0.0531%" height="15" fill="rgb(217,138,29)" fg:x="82425" fg:w="57"/><text x="77.0187%" y="1791.50"></text></g><g><title>bcs::ser::serialize_into (53 samples, 0.05%)</title><rect x="76.7724%" y="1765" width="0.0494%" height="15" fill="rgb(215,72,42)" fg:x="82429" fg:w="53"/><text x="77.0224%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (52 samples, 0.05%)</title><rect x="76.7733%" y="1749" width="0.0484%" height="15" fill="rgb(254,115,11)" fg:x="82430" fg:w="52"/><text x="77.0233%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (36 samples, 0.03%)</title><rect x="76.7882%" y="1733" width="0.0335%" height="15" fill="rgb(205,133,39)" fg:x="82446" fg:w="36"/><text x="77.0382%" y="1743.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (36 samples, 0.03%)</title><rect x="76.7882%" y="1717" width="0.0335%" height="15" fill="rgb(211,36,27)" fg:x="82446" fg:w="36"/><text x="77.0382%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.03%)</title><rect x="76.7882%" y="1701" width="0.0335%" height="15" fill="rgb(221,48,10)" fg:x="82446" fg:w="36"/><text x="77.0382%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.03%)</title><rect x="76.7882%" y="1685" width="0.0335%" height="15" fill="rgb(230,172,50)" fg:x="82446" fg:w="36"/><text x="77.0382%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.03%)</title><rect x="76.7882%" y="1669" width="0.0335%" height="15" fill="rgb(249,72,18)" fg:x="82446" fg:w="36"/><text x="77.0382%" y="1679.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.03%)</title><rect x="76.8320%" y="1749" width="0.0270%" height="15" fill="rgb(237,58,48)" fg:x="82493" fg:w="29"/><text x="77.0820%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.03%)</title><rect x="76.8320%" y="1733" width="0.0270%" height="15" fill="rgb(242,123,3)" fg:x="82493" fg:w="29"/><text x="77.0820%" y="1743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.01%)</title><rect x="76.8441%" y="1717" width="0.0149%" height="15" fill="rgb(232,111,32)" fg:x="82506" fg:w="16"/><text x="77.0941%" y="1727.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (16 samples, 0.01%)</title><rect x="76.8441%" y="1701" width="0.0149%" height="15" fill="rgb(229,108,3)" fg:x="82506" fg:w="16"/><text x="77.0941%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (15 samples, 0.01%)</title><rect x="76.8451%" y="1685" width="0.0140%" height="15" fill="rgb(222,158,10)" fg:x="82507" fg:w="15"/><text x="77.0951%" y="1695.50"></text></g><g><title>core::hash::Hasher::write_u64 (14 samples, 0.01%)</title><rect x="76.8460%" y="1669" width="0.0130%" height="15" fill="rgb(205,34,49)" fg:x="82508" fg:w="14"/><text x="77.0960%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="76.8460%" y="1653" width="0.0130%" height="15" fill="rgb(232,21,14)" fg:x="82508" fg:w="14"/><text x="77.0960%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="76.8460%" y="1637" width="0.0130%" height="15" fill="rgb(229,127,44)" fg:x="82508" fg:w="14"/><text x="77.0960%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="76.8460%" y="1621" width="0.0130%" height="15" fill="rgb(232,171,4)" fg:x="82508" fg:w="14"/><text x="77.0960%" y="1631.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get (63 samples, 0.06%)</title><rect x="76.8227%" y="1813" width="0.0587%" height="15" fill="rgb(250,92,16)" fg:x="82483" fg:w="63"/><text x="77.0727%" y="1823.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (53 samples, 0.05%)</title><rect x="76.8320%" y="1797" width="0.0494%" height="15" fill="rgb(230,103,38)" fg:x="82493" fg:w="53"/><text x="77.0820%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (53 samples, 0.05%)</title><rect x="76.8320%" y="1781" width="0.0494%" height="15" fill="rgb(253,167,9)" fg:x="82493" fg:w="53"/><text x="77.0820%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (53 samples, 0.05%)</title><rect x="76.8320%" y="1765" width="0.0494%" height="15" fill="rgb(222,118,11)" fg:x="82493" fg:w="53"/><text x="77.0820%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (24 samples, 0.02%)</title><rect x="76.8590%" y="1749" width="0.0224%" height="15" fill="rgb(240,202,0)" fg:x="82522" fg:w="24"/><text x="77.1090%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (24 samples, 0.02%)</title><rect x="76.8590%" y="1733" width="0.0224%" height="15" fill="rgb(236,124,4)" fg:x="82522" fg:w="24"/><text x="77.1090%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (24 samples, 0.02%)</title><rect x="76.8590%" y="1717" width="0.0224%" height="15" fill="rgb(244,128,18)" fg:x="82522" fg:w="24"/><text x="77.1090%" y="1727.50"></text></g><g><title>move_table_extension::make_native_contains_box::{{closure}} (2,275 samples, 2.12%)</title><rect x="74.7821%" y="1845" width="2.1189%" height="15" fill="rgb(231,206,5)" fg:x="80292" fg:w="2275"/><text x="75.0321%" y="1855.50">m..</text></g><g><title>move_table_extension::native_contains_box (2,247 samples, 2.09%)</title><rect x="74.8081%" y="1829" width="2.0928%" height="15" fill="rgb(237,111,8)" fg:x="80320" fg:w="2247"/><text x="75.0581%" y="1839.50">m..</text></g><g><title>move_vm_runtime::interpreter::Stack::pop (43 samples, 0.04%)</title><rect x="76.9009%" y="1845" width="0.0400%" height="15" fill="rgb(225,127,3)" fg:x="82567" fg:w="43"/><text x="77.1509%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (35 samples, 0.03%)</title><rect x="76.9084%" y="1829" width="0.0326%" height="15" fill="rgb(222,85,48)" fg:x="82575" fg:w="35"/><text x="77.1584%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (46 samples, 0.04%)</title><rect x="76.9410%" y="1845" width="0.0428%" height="15" fill="rgb(221,108,37)" fg:x="82610" fg:w="46"/><text x="77.1910%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (37 samples, 0.03%)</title><rect x="76.9494%" y="1829" width="0.0345%" height="15" fill="rgb(226,169,36)" fg:x="82619" fg:w="37"/><text x="77.1994%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (24 samples, 0.02%)</title><rect x="76.9838%" y="1845" width="0.0224%" height="15" fill="rgb(237,76,12)" fg:x="82656" fg:w="24"/><text x="77.2338%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (27 samples, 0.03%)</title><rect x="77.0062%" y="1845" width="0.0251%" height="15" fill="rgb(210,227,32)" fg:x="82680" fg:w="27"/><text x="77.2562%" y="1855.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="77.0416%" y="1813" width="0.0168%" height="15" fill="rgb(214,117,20)" fg:x="82718" fg:w="18"/><text x="77.2916%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (19 samples, 0.02%)</title><rect x="77.0416%" y="1829" width="0.0177%" height="15" fill="rgb(234,119,41)" fg:x="82718" fg:w="19"/><text x="77.2916%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::get_native (31 samples, 0.03%)</title><rect x="77.0323%" y="1845" width="0.0289%" height="15" fill="rgb(230,130,47)" fg:x="82708" fg:w="31"/><text x="77.2823%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Function::return_types (17 samples, 0.02%)</title><rect x="77.0677%" y="1845" width="0.0158%" height="15" fill="rgb(215,21,41)" fg:x="82746" fg:w="17"/><text x="77.3177%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="77.1953%" y="1781" width="0.0121%" height="15" fill="rgb(226,26,53)" fg:x="82883" fg:w="13"/><text x="77.4453%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="77.2074%" y="1781" width="0.0130%" height="15" fill="rgb(221,92,23)" fg:x="82896" fg:w="14"/><text x="77.4574%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="77.2940%" y="1765" width="0.0121%" height="15" fill="rgb(213,156,21)" fg:x="82989" fg:w="13"/><text x="77.5440%" y="1775.50"></text></g><g><title>alloc::raw_vec::finish_grow (104 samples, 0.10%)</title><rect x="77.3182%" y="1717" width="0.0969%" height="15" fill="rgb(254,166,29)" fg:x="83015" fg:w="104"/><text x="77.5682%" y="1727.50"></text></g><g><title>malloc (87 samples, 0.08%)</title><rect x="77.3340%" y="1701" width="0.0810%" height="15" fill="rgb(213,71,1)" fg:x="83032" fg:w="87"/><text x="77.5840%" y="1711.50"></text></g><g><title>[libc.so.6] (55 samples, 0.05%)</title><rect x="77.3638%" y="1685" width="0.0512%" height="15" fill="rgb(245,8,13)" fg:x="83064" fg:w="55"/><text x="77.6138%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (112 samples, 0.10%)</title><rect x="77.3126%" y="1749" width="0.1043%" height="15" fill="rgb(213,32,32)" fg:x="83009" fg:w="112"/><text x="77.5626%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (111 samples, 0.10%)</title><rect x="77.3135%" y="1733" width="0.1034%" height="15" fill="rgb(251,86,50)" fg:x="83010" fg:w="111"/><text x="77.5635%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (152 samples, 0.14%)</title><rect x="77.3061%" y="1765" width="0.1416%" height="15" fill="rgb(252,92,41)" fg:x="83002" fg:w="152"/><text x="77.5561%" y="1775.50"></text></g><g><title>core::ptr::write (29 samples, 0.03%)</title><rect x="77.4206%" y="1749" width="0.0270%" height="15" fill="rgb(234,70,35)" fg:x="83125" fg:w="29"/><text x="77.6706%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="77.4896%" y="1749" width="0.0112%" height="15" fill="rgb(210,157,19)" fg:x="83199" fg:w="12"/><text x="77.7396%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (324 samples, 0.30%)</title><rect x="77.2223%" y="1781" width="0.3018%" height="15" fill="rgb(206,20,45)" fg:x="82912" fg:w="324"/><text x="77.4723%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (81 samples, 0.08%)</title><rect x="77.4486%" y="1765" width="0.0754%" height="15" fill="rgb(207,34,7)" fg:x="83155" fg:w="81"/><text x="77.6986%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (25 samples, 0.02%)</title><rect x="77.5007%" y="1749" width="0.0233%" height="15" fill="rgb(253,151,14)" fg:x="83211" fg:w="25"/><text x="77.7507%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (25 samples, 0.02%)</title><rect x="77.5007%" y="1733" width="0.0233%" height="15" fill="rgb(252,1,18)" fg:x="83211" fg:w="25"/><text x="77.7507%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (25 samples, 0.02%)</title><rect x="77.5007%" y="1717" width="0.0233%" height="15" fill="rgb(214,77,52)" fg:x="83211" fg:w="25"/><text x="77.7507%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (480 samples, 0.45%)</title><rect x="77.0835%" y="1845" width="0.4471%" height="15" fill="rgb(254,106,35)" fg:x="82763" fg:w="480"/><text x="77.3335%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (458 samples, 0.43%)</title><rect x="77.1040%" y="1829" width="0.4266%" height="15" fill="rgb(212,67,40)" fg:x="82785" fg:w="458"/><text x="77.3540%" y="1839.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (442 samples, 0.41%)</title><rect x="77.1189%" y="1813" width="0.4117%" height="15" fill="rgb(228,76,23)" fg:x="82801" fg:w="442"/><text x="77.3689%" y="1823.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (431 samples, 0.40%)</title><rect x="77.1291%" y="1797" width="0.4014%" height="15" fill="rgb(250,198,5)" fg:x="82812" fg:w="431"/><text x="77.3791%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (31 samples, 0.03%)</title><rect x="77.5399%" y="1845" width="0.0289%" height="15" fill="rgb(209,20,25)" fg:x="83253" fg:w="31"/><text x="77.7899%" y="1855.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (24 samples, 0.02%)</title><rect x="77.5464%" y="1829" width="0.0224%" height="15" fill="rgb(236,32,4)" fg:x="83260" fg:w="24"/><text x="77.7964%" y="1839.50"></text></g><g><title>core::cmp::PartialEq::ne (24 samples, 0.02%)</title><rect x="77.5464%" y="1813" width="0.0224%" height="15" fill="rgb(215,31,6)" fg:x="83260" fg:w="24"/><text x="77.7964%" y="1823.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="77.5464%" y="1797" width="0.0224%" height="15" fill="rgb(207,186,49)" fg:x="83260" fg:w="24"/><text x="77.7964%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (4,270 samples, 3.98%)</title><rect x="73.5992%" y="1877" width="3.9770%" height="15" fill="rgb(211,212,49)" fg:x="79022" fg:w="4270"/><text x="73.8492%" y="1887.50">move..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (4,232 samples, 3.94%)</title><rect x="73.6346%" y="1861" width="3.9416%" height="15" fill="rgb(229,51,41)" fg:x="79060" fg:w="4232"/><text x="73.8846%" y="1871.50">move..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (18 samples, 0.02%)</title><rect x="77.5762%" y="1877" width="0.0168%" height="15" fill="rgb(205,225,36)" fg:x="83292" fg:w="18"/><text x="77.8262%" y="1887.50"></text></g><g><title>cfree (39 samples, 0.04%)</title><rect x="77.6311%" y="1861" width="0.0363%" height="15" fill="rgb(209,213,45)" fg:x="83351" fg:w="39"/><text x="77.8811%" y="1871.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="77.6488%" y="1845" width="0.0186%" height="15" fill="rgb(219,35,49)" fg:x="83370" fg:w="20"/><text x="77.8988%" y="1855.50"></text></g><g><title>cfree (43 samples, 0.04%)</title><rect x="77.7131%" y="1829" width="0.0400%" height="15" fill="rgb(215,205,22)" fg:x="83439" fg:w="43"/><text x="77.9631%" y="1839.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="77.7289%" y="1813" width="0.0242%" height="15" fill="rgb(248,204,34)" fg:x="83456" fg:w="26"/><text x="77.9789%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="77.7681%" y="1797" width="0.0233%" height="15" fill="rgb(219,223,31)" fg:x="83498" fg:w="25"/><text x="78.0181%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (15 samples, 0.01%)</title><rect x="77.7774%" y="1781" width="0.0140%" height="15" fill="rgb(236,14,8)" fg:x="83508" fg:w="15"/><text x="78.0274%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (123 samples, 0.11%)</title><rect x="77.6777%" y="1861" width="0.1146%" height="15" fill="rgb(243,129,23)" fg:x="83401" fg:w="123"/><text x="77.9277%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (88 samples, 0.08%)</title><rect x="77.7103%" y="1845" width="0.0820%" height="15" fill="rgb(205,204,5)" fg:x="83436" fg:w="88"/><text x="77.9603%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (42 samples, 0.04%)</title><rect x="77.7531%" y="1829" width="0.0391%" height="15" fill="rgb(244,115,32)" fg:x="83482" fg:w="42"/><text x="78.0031%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (26 samples, 0.02%)</title><rect x="77.7681%" y="1813" width="0.0242%" height="15" fill="rgb(229,123,14)" fg:x="83498" fg:w="26"/><text x="78.0181%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (34 samples, 0.03%)</title><rect x="77.8966%" y="1669" width="0.0317%" height="15" fill="rgb(250,85,1)" fg:x="83636" fg:w="34"/><text x="78.1466%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.03%)</title><rect x="77.8966%" y="1653" width="0.0317%" height="15" fill="rgb(209,141,54)" fg:x="83636" fg:w="34"/><text x="78.1466%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.03%)</title><rect x="77.8966%" y="1637" width="0.0317%" height="15" fill="rgb(244,107,39)" fg:x="83636" fg:w="34"/><text x="78.1466%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.03%)</title><rect x="77.8966%" y="1621" width="0.0317%" height="15" fill="rgb(230,68,26)" fg:x="83636" fg:w="34"/><text x="78.1466%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (27 samples, 0.03%)</title><rect x="77.9031%" y="1605" width="0.0251%" height="15" fill="rgb(220,178,33)" fg:x="83643" fg:w="27"/><text x="78.1531%" y="1615.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (23 samples, 0.02%)</title><rect x="77.9068%" y="1589" width="0.0214%" height="15" fill="rgb(220,77,53)" fg:x="83647" fg:w="23"/><text x="78.1568%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (22 samples, 0.02%)</title><rect x="77.9078%" y="1573" width="0.0205%" height="15" fill="rgb(224,108,19)" fg:x="83648" fg:w="22"/><text x="78.1578%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (22 samples, 0.02%)</title><rect x="77.9078%" y="1557" width="0.0205%" height="15" fill="rgb(223,203,27)" fg:x="83648" fg:w="22"/><text x="78.1578%" y="1567.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (21 samples, 0.02%)</title><rect x="77.9087%" y="1541" width="0.0196%" height="15" fill="rgb(211,32,46)" fg:x="83649" fg:w="21"/><text x="78.1587%" y="1551.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (21 samples, 0.02%)</title><rect x="77.9087%" y="1525" width="0.0196%" height="15" fill="rgb(240,101,27)" fg:x="83649" fg:w="21"/><text x="78.1587%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="77.8901%" y="1685" width="0.0391%" height="15" fill="rgb(217,210,11)" fg:x="83629" fg:w="42"/><text x="78.1401%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (65 samples, 0.06%)</title><rect x="77.8733%" y="1717" width="0.0605%" height="15" fill="rgb(236,130,21)" fg:x="83611" fg:w="65"/><text x="78.1233%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (63 samples, 0.06%)</title><rect x="77.8752%" y="1701" width="0.0587%" height="15" fill="rgb(250,136,8)" fg:x="83613" fg:w="63"/><text x="78.1252%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="77.9776%" y="1541" width="0.0140%" height="15" fill="rgb(243,223,36)" fg:x="83723" fg:w="15"/><text x="78.2276%" y="1551.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="78.0242%" y="1525" width="0.0121%" height="15" fill="rgb(246,184,8)" fg:x="83773" fg:w="13"/><text x="78.2742%" y="1535.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="78.0428%" y="1477" width="0.0130%" height="15" fill="rgb(222,158,36)" fg:x="83793" fg:w="14"/><text x="78.2928%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.02%)</title><rect x="78.0372%" y="1509" width="0.0196%" height="15" fill="rgb(210,220,19)" fg:x="83787" fg:w="21"/><text x="78.2872%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="78.0391%" y="1493" width="0.0177%" height="15" fill="rgb(246,44,38)" fg:x="83789" fg:w="19"/><text x="78.2891%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (47 samples, 0.04%)</title><rect x="78.0363%" y="1525" width="0.0438%" height="15" fill="rgb(246,186,14)" fg:x="83786" fg:w="47"/><text x="78.2863%" y="1535.50"></text></g><g><title>core::ptr::write (22 samples, 0.02%)</title><rect x="78.0596%" y="1509" width="0.0205%" height="15" fill="rgb(233,193,20)" fg:x="83811" fg:w="22"/><text x="78.3096%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (200 samples, 0.19%)</title><rect x="77.9357%" y="1701" width="0.1863%" height="15" fill="rgb(215,60,5)" fg:x="83678" fg:w="200"/><text x="78.1857%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (200 samples, 0.19%)</title><rect x="77.9357%" y="1685" width="0.1863%" height="15" fill="rgb(207,128,10)" fg:x="83678" fg:w="200"/><text x="78.1857%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (200 samples, 0.19%)</title><rect x="77.9357%" y="1669" width="0.1863%" height="15" fill="rgb(238,84,54)" fg:x="83678" fg:w="200"/><text x="78.1857%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (200 samples, 0.19%)</title><rect x="77.9357%" y="1653" width="0.1863%" height="15" fill="rgb(213,130,11)" fg:x="83678" fg:w="200"/><text x="78.1857%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (196 samples, 0.18%)</title><rect x="77.9394%" y="1637" width="0.1825%" height="15" fill="rgb(235,62,9)" fg:x="83682" fg:w="196"/><text x="78.1894%" y="1647.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (195 samples, 0.18%)</title><rect x="77.9404%" y="1621" width="0.1816%" height="15" fill="rgb(222,64,24)" fg:x="83683" fg:w="195"/><text x="78.1904%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (191 samples, 0.18%)</title><rect x="77.9441%" y="1605" width="0.1779%" height="15" fill="rgb(238,193,42)" fg:x="83687" fg:w="191"/><text x="78.1941%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (191 samples, 0.18%)</title><rect x="77.9441%" y="1589" width="0.1779%" height="15" fill="rgb(243,204,46)" fg:x="83687" fg:w="191"/><text x="78.1941%" y="1599.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (187 samples, 0.17%)</title><rect x="77.9478%" y="1573" width="0.1742%" height="15" fill="rgb(243,196,11)" fg:x="83691" fg:w="187"/><text x="78.1978%" y="1583.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (186 samples, 0.17%)</title><rect x="77.9487%" y="1557" width="0.1732%" height="15" fill="rgb(232,77,22)" fg:x="83692" fg:w="186"/><text x="78.1987%" y="1567.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (140 samples, 0.13%)</title><rect x="77.9916%" y="1541" width="0.1304%" height="15" fill="rgb(215,80,25)" fg:x="83738" fg:w="140"/><text x="78.2416%" y="1551.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (45 samples, 0.04%)</title><rect x="78.0801%" y="1525" width="0.0419%" height="15" fill="rgb(210,173,7)" fg:x="83833" fg:w="45"/><text x="78.3301%" y="1535.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (16 samples, 0.01%)</title><rect x="78.1071%" y="1509" width="0.0149%" height="15" fill="rgb(207,101,10)" fg:x="83862" fg:w="16"/><text x="78.3571%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (16 samples, 0.01%)</title><rect x="78.1071%" y="1493" width="0.0149%" height="15" fill="rgb(246,57,48)" fg:x="83862" fg:w="16"/><text x="78.3571%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (16 samples, 0.01%)</title><rect x="78.1071%" y="1477" width="0.0149%" height="15" fill="rgb(236,184,40)" fg:x="83862" fg:w="16"/><text x="78.3571%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 0.19%)</title><rect x="77.9338%" y="1717" width="0.1909%" height="15" fill="rgb(210,205,13)" fg:x="83676" fg:w="205"/><text x="78.1838%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.01%)</title><rect x="78.1248%" y="1717" width="0.0121%" height="15" fill="rgb(231,129,42)" fg:x="83881" fg:w="13"/><text x="78.3748%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="78.1248%" y="1701" width="0.0121%" height="15" fill="rgb(220,229,54)" fg:x="83881" fg:w="13"/><text x="78.3748%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="78.1248%" y="1685" width="0.0121%" height="15" fill="rgb(230,192,26)" fg:x="83881" fg:w="13"/><text x="78.3748%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="78.1248%" y="1669" width="0.0121%" height="15" fill="rgb(253,18,30)" fg:x="83881" fg:w="13"/><text x="78.3748%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="78.1248%" y="1653" width="0.0121%" height="15" fill="rgb(216,62,53)" fg:x="83881" fg:w="13"/><text x="78.3748%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="78.1248%" y="1637" width="0.0121%" height="15" fill="rgb(230,79,29)" fg:x="83881" fg:w="13"/><text x="78.3748%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="78.1248%" y="1621" width="0.0121%" height="15" fill="rgb(242,26,26)" fg:x="83881" fg:w="13"/><text x="78.3748%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (342 samples, 0.32%)</title><rect x="77.8202%" y="1845" width="0.3185%" height="15" fill="rgb(227,125,21)" fg:x="83554" fg:w="342"/><text x="78.0702%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (342 samples, 0.32%)</title><rect x="77.8202%" y="1829" width="0.3185%" height="15" fill="rgb(229,93,26)" fg:x="83554" fg:w="342"/><text x="78.0702%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (338 samples, 0.31%)</title><rect x="77.8239%" y="1813" width="0.3148%" height="15" fill="rgb(227,228,8)" fg:x="83558" fg:w="338"/><text x="78.0739%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (324 samples, 0.30%)</title><rect x="77.8370%" y="1797" width="0.3018%" height="15" fill="rgb(233,56,0)" fg:x="83572" fg:w="324"/><text x="78.0870%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (324 samples, 0.30%)</title><rect x="77.8370%" y="1781" width="0.3018%" height="15" fill="rgb(225,185,17)" fg:x="83572" fg:w="324"/><text x="78.0870%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (324 samples, 0.30%)</title><rect x="77.8370%" y="1765" width="0.3018%" height="15" fill="rgb(238,202,30)" fg:x="83572" fg:w="324"/><text x="78.0870%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (311 samples, 0.29%)</title><rect x="77.8491%" y="1749" width="0.2897%" height="15" fill="rgb(236,60,13)" fg:x="83585" fg:w="311"/><text x="78.0991%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (303 samples, 0.28%)</title><rect x="77.8565%" y="1733" width="0.2822%" height="15" fill="rgb(244,92,0)" fg:x="83593" fg:w="303"/><text x="78.1065%" y="1743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="78.1667%" y="1717" width="0.0158%" height="15" fill="rgb(225,57,15)" fg:x="83926" fg:w="17"/><text x="78.4167%" y="1727.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="78.1667%" y="1701" width="0.0158%" height="15" fill="rgb(228,5,28)" fg:x="83926" fg:w="17"/><text x="78.4167%" y="1711.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="78.1667%" y="1685" width="0.0158%" height="15" fill="rgb(252,34,51)" fg:x="83926" fg:w="17"/><text x="78.4167%" y="1695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.01%)</title><rect x="78.2030%" y="1557" width="0.0102%" height="15" fill="rgb(235,58,7)" fg:x="83965" fg:w="11"/><text x="78.4530%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (29 samples, 0.03%)</title><rect x="78.1872%" y="1685" width="0.0270%" height="15" fill="rgb(250,132,20)" fg:x="83948" fg:w="29"/><text x="78.4372%" y="1695.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (29 samples, 0.03%)</title><rect x="78.1872%" y="1669" width="0.0270%" height="15" fill="rgb(217,164,0)" fg:x="83948" fg:w="29"/><text x="78.4372%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (29 samples, 0.03%)</title><rect x="78.1872%" y="1653" width="0.0270%" height="15" fill="rgb(208,220,35)" fg:x="83948" fg:w="29"/><text x="78.4372%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (22 samples, 0.02%)</title><rect x="78.1937%" y="1637" width="0.0205%" height="15" fill="rgb(227,42,51)" fg:x="83955" fg:w="22"/><text x="78.4437%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="78.1937%" y="1621" width="0.0205%" height="15" fill="rgb(225,146,38)" fg:x="83955" fg:w="22"/><text x="78.4437%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="78.1937%" y="1605" width="0.0205%" height="15" fill="rgb(252,108,37)" fg:x="83955" fg:w="22"/><text x="78.4437%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="78.1946%" y="1589" width="0.0196%" height="15" fill="rgb(244,101,24)" fg:x="83956" fg:w="21"/><text x="78.4446%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="78.2011%" y="1573" width="0.0130%" height="15" fill="rgb(213,161,50)" fg:x="83963" fg:w="14"/><text x="78.4511%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="78.2160%" y="1589" width="0.0121%" height="15" fill="rgb(248,159,19)" fg:x="83979" fg:w="13"/><text x="78.4660%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (80 samples, 0.07%)</title><rect x="78.1620%" y="1749" width="0.0745%" height="15" fill="rgb(233,179,15)" fg:x="83921" fg:w="80"/><text x="78.4120%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (78 samples, 0.07%)</title><rect x="78.1639%" y="1733" width="0.0726%" height="15" fill="rgb(248,178,3)" fg:x="83923" fg:w="78"/><text x="78.4139%" y="1743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (53 samples, 0.05%)</title><rect x="78.1872%" y="1717" width="0.0494%" height="15" fill="rgb(245,190,41)" fg:x="83948" fg:w="53"/><text x="78.4372%" y="1727.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (53 samples, 0.05%)</title><rect x="78.1872%" y="1701" width="0.0494%" height="15" fill="rgb(218,151,19)" fg:x="83948" fg:w="53"/><text x="78.4372%" y="1711.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="78.2142%" y="1685" width="0.0224%" height="15" fill="rgb(245,25,44)" fg:x="83977" fg:w="24"/><text x="78.4642%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="78.2142%" y="1669" width="0.0224%" height="15" fill="rgb(235,172,47)" fg:x="83977" fg:w="24"/><text x="78.4642%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (24 samples, 0.02%)</title><rect x="78.2142%" y="1653" width="0.0224%" height="15" fill="rgb(246,33,12)" fg:x="83977" fg:w="24"/><text x="78.4642%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (24 samples, 0.02%)</title><rect x="78.2142%" y="1637" width="0.0224%" height="15" fill="rgb(214,124,7)" fg:x="83977" fg:w="24"/><text x="78.4642%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (24 samples, 0.02%)</title><rect x="78.2142%" y="1621" width="0.0224%" height="15" fill="rgb(246,186,18)" fg:x="83977" fg:w="24"/><text x="78.4642%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (24 samples, 0.02%)</title><rect x="78.2142%" y="1605" width="0.0224%" height="15" fill="rgb(231,94,1)" fg:x="83977" fg:w="24"/><text x="78.4642%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="78.2477%" y="1653" width="0.0130%" height="15" fill="rgb(208,33,48)" fg:x="84013" fg:w="14"/><text x="78.4977%" y="1663.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (14 samples, 0.01%)</title><rect x="78.2477%" y="1637" width="0.0130%" height="15" fill="rgb(208,195,44)" fg:x="84013" fg:w="14"/><text x="78.4977%" y="1647.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (14 samples, 0.01%)</title><rect x="78.2477%" y="1621" width="0.0130%" height="15" fill="rgb(226,13,52)" fg:x="84013" fg:w="14"/><text x="78.4977%" y="1631.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (21 samples, 0.02%)</title><rect x="78.2477%" y="1685" width="0.0196%" height="15" fill="rgb(217,219,45)" fg:x="84013" fg:w="21"/><text x="78.4977%" y="1695.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="78.2477%" y="1669" width="0.0196%" height="15" fill="rgb(223,45,25)" fg:x="84013" fg:w="21"/><text x="78.4977%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (28 samples, 0.03%)</title><rect x="78.2421%" y="1701" width="0.0261%" height="15" fill="rgb(241,163,0)" fg:x="84007" fg:w="28"/><text x="78.4921%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (527 samples, 0.49%)</title><rect x="77.7923%" y="1861" width="0.4908%" height="15" fill="rgb(216,68,47)" fg:x="83524" fg:w="527"/><text x="78.0423%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (148 samples, 0.14%)</title><rect x="78.1453%" y="1845" width="0.1378%" height="15" fill="rgb(236,119,45)" fg:x="83903" fg:w="148"/><text x="78.3953%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (144 samples, 0.13%)</title><rect x="78.1490%" y="1829" width="0.1341%" height="15" fill="rgb(209,188,24)" fg:x="83907" fg:w="144"/><text x="78.3990%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (133 samples, 0.12%)</title><rect x="78.1592%" y="1813" width="0.1239%" height="15" fill="rgb(221,118,7)" fg:x="83918" fg:w="133"/><text x="78.4092%" y="1823.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (132 samples, 0.12%)</title><rect x="78.1602%" y="1797" width="0.1229%" height="15" fill="rgb(213,148,43)" fg:x="83919" fg:w="132"/><text x="78.4102%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (132 samples, 0.12%)</title><rect x="78.1602%" y="1781" width="0.1229%" height="15" fill="rgb(231,21,43)" fg:x="83919" fg:w="132"/><text x="78.4102%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (132 samples, 0.12%)</title><rect x="78.1602%" y="1765" width="0.1229%" height="15" fill="rgb(232,213,43)" fg:x="83919" fg:w="132"/><text x="78.4102%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (50 samples, 0.05%)</title><rect x="78.2365%" y="1749" width="0.0466%" height="15" fill="rgb(239,145,50)" fg:x="84001" fg:w="50"/><text x="78.4865%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50 samples, 0.05%)</title><rect x="78.2365%" y="1733" width="0.0466%" height="15" fill="rgb(222,131,18)" fg:x="84001" fg:w="50"/><text x="78.4865%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (50 samples, 0.05%)</title><rect x="78.2365%" y="1717" width="0.0466%" height="15" fill="rgb(243,181,13)" fg:x="84001" fg:w="50"/><text x="78.4865%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="78.3027%" y="1829" width="0.0158%" height="15" fill="rgb(212,74,41)" fg:x="84072" fg:w="17"/><text x="78.5527%" y="1839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.02%)</title><rect x="78.3632%" y="1669" width="0.0224%" height="15" fill="rgb(237,143,34)" fg:x="84137" fg:w="24"/><text x="78.6132%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (49 samples, 0.05%)</title><rect x="78.3436%" y="1733" width="0.0456%" height="15" fill="rgb(228,139,0)" fg:x="84116" fg:w="49"/><text x="78.5936%" y="1743.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (49 samples, 0.05%)</title><rect x="78.3436%" y="1717" width="0.0456%" height="15" fill="rgb(227,214,11)" fg:x="84116" fg:w="49"/><text x="78.5936%" y="1727.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (49 samples, 0.05%)</title><rect x="78.3436%" y="1701" width="0.0456%" height="15" fill="rgb(228,118,39)" fg:x="84116" fg:w="49"/><text x="78.5936%" y="1711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.03%)</title><rect x="78.3613%" y="1685" width="0.0279%" height="15" fill="rgb(207,117,22)" fg:x="84135" fg:w="30"/><text x="78.6113%" y="1695.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (26 samples, 0.02%)</title><rect x="78.3893%" y="1733" width="0.0242%" height="15" fill="rgb(225,91,8)" fg:x="84165" fg:w="26"/><text x="78.6393%" y="1743.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (24 samples, 0.02%)</title><rect x="78.4135%" y="1653" width="0.0224%" height="15" fill="rgb(230,219,48)" fg:x="84191" fg:w="24"/><text x="78.6635%" y="1663.50"></text></g><g><title>core::hash::Hasher::write_usize (24 samples, 0.02%)</title><rect x="78.4135%" y="1637" width="0.0224%" height="15" fill="rgb(244,0,23)" fg:x="84191" fg:w="24"/><text x="78.6635%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="78.4135%" y="1621" width="0.0224%" height="15" fill="rgb(206,212,23)" fg:x="84191" fg:w="24"/><text x="78.6635%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="78.4135%" y="1605" width="0.0224%" height="15" fill="rgb(254,62,10)" fg:x="84191" fg:w="24"/><text x="78.6635%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="78.4144%" y="1589" width="0.0214%" height="15" fill="rgb(236,58,8)" fg:x="84192" fg:w="23"/><text x="78.6644%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="78.4470%" y="1589" width="0.0121%" height="15" fill="rgb(232,212,17)" fg:x="84227" fg:w="13"/><text x="78.6970%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (50 samples, 0.05%)</title><rect x="78.4135%" y="1701" width="0.0466%" height="15" fill="rgb(206,132,9)" fg:x="84191" fg:w="50"/><text x="78.6635%" y="1711.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (50 samples, 0.05%)</title><rect x="78.4135%" y="1685" width="0.0466%" height="15" fill="rgb(234,97,28)" fg:x="84191" fg:w="50"/><text x="78.6635%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (50 samples, 0.05%)</title><rect x="78.4135%" y="1669" width="0.0466%" height="15" fill="rgb(254,144,9)" fg:x="84191" fg:w="50"/><text x="78.6635%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.02%)</title><rect x="78.4358%" y="1653" width="0.0242%" height="15" fill="rgb(244,204,43)" fg:x="84215" fg:w="26"/><text x="78.6858%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.02%)</title><rect x="78.4358%" y="1637" width="0.0242%" height="15" fill="rgb(248,177,16)" fg:x="84215" fg:w="26"/><text x="78.6858%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (26 samples, 0.02%)</title><rect x="78.4358%" y="1621" width="0.0242%" height="15" fill="rgb(219,110,15)" fg:x="84215" fg:w="26"/><text x="78.6858%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="78.4368%" y="1605" width="0.0233%" height="15" fill="rgb(212,203,25)" fg:x="84216" fg:w="25"/><text x="78.6868%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="78.4619%" y="1605" width="0.0177%" height="15" fill="rgb(205,50,1)" fg:x="84243" fg:w="19"/><text x="78.7119%" y="1615.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.01%)</title><rect x="78.4675%" y="1589" width="0.0121%" height="15" fill="rgb(222,152,41)" fg:x="84249" fg:w="13"/><text x="78.7175%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (165 samples, 0.15%)</title><rect x="78.3371%" y="1765" width="0.1537%" height="15" fill="rgb(236,83,3)" fg:x="84109" fg:w="165"/><text x="78.5871%" y="1775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (164 samples, 0.15%)</title><rect x="78.3381%" y="1749" width="0.1527%" height="15" fill="rgb(214,30,54)" fg:x="84110" fg:w="164"/><text x="78.5881%" y="1759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (83 samples, 0.08%)</title><rect x="78.4135%" y="1733" width="0.0773%" height="15" fill="rgb(250,117,31)" fg:x="84191" fg:w="83"/><text x="78.6635%" y="1743.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (83 samples, 0.08%)</title><rect x="78.4135%" y="1717" width="0.0773%" height="15" fill="rgb(228,77,14)" fg:x="84191" fg:w="83"/><text x="78.6635%" y="1727.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="78.4601%" y="1701" width="0.0307%" height="15" fill="rgb(241,3,28)" fg:x="84241" fg:w="33"/><text x="78.7101%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="78.4601%" y="1685" width="0.0307%" height="15" fill="rgb(221,175,52)" fg:x="84241" fg:w="33"/><text x="78.7101%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (33 samples, 0.03%)</title><rect x="78.4601%" y="1669" width="0.0307%" height="15" fill="rgb(237,91,6)" fg:x="84241" fg:w="33"/><text x="78.7101%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (33 samples, 0.03%)</title><rect x="78.4601%" y="1653" width="0.0307%" height="15" fill="rgb(246,46,42)" fg:x="84241" fg:w="33"/><text x="78.7101%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (33 samples, 0.03%)</title><rect x="78.4601%" y="1637" width="0.0307%" height="15" fill="rgb(235,199,0)" fg:x="84241" fg:w="33"/><text x="78.7101%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (33 samples, 0.03%)</title><rect x="78.4601%" y="1621" width="0.0307%" height="15" fill="rgb(224,44,40)" fg:x="84241" fg:w="33"/><text x="78.7101%" y="1631.50"></text></g><g><title>core::hash::Hasher::write_u8 (12 samples, 0.01%)</title><rect x="78.4796%" y="1605" width="0.0112%" height="15" fill="rgb(209,24,35)" fg:x="84262" fg:w="12"/><text x="78.7296%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="78.4806%" y="1589" width="0.0102%" height="15" fill="rgb(244,46,22)" fg:x="84263" fg:w="11"/><text x="78.7306%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="78.5094%" y="1669" width="0.0177%" height="15" fill="rgb(235,99,8)" fg:x="84294" fg:w="19"/><text x="78.7594%" y="1679.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (19 samples, 0.02%)</title><rect x="78.5094%" y="1653" width="0.0177%" height="15" fill="rgb(218,127,36)" fg:x="84294" fg:w="19"/><text x="78.7594%" y="1663.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (19 samples, 0.02%)</title><rect x="78.5094%" y="1637" width="0.0177%" height="15" fill="rgb(238,47,46)" fg:x="84294" fg:w="19"/><text x="78.7594%" y="1647.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (43 samples, 0.04%)</title><rect x="78.5094%" y="1701" width="0.0400%" height="15" fill="rgb(233,65,17)" fg:x="84294" fg:w="43"/><text x="78.7594%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (43 samples, 0.04%)</title><rect x="78.5094%" y="1685" width="0.0400%" height="15" fill="rgb(239,22,33)" fg:x="84294" fg:w="43"/><text x="78.7594%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="78.5271%" y="1669" width="0.0224%" height="15" fill="rgb(243,66,43)" fg:x="84313" fg:w="24"/><text x="78.7771%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="78.5271%" y="1653" width="0.0224%" height="15" fill="rgb(235,210,28)" fg:x="84313" fg:w="24"/><text x="78.7771%" y="1663.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (24 samples, 0.02%)</title><rect x="78.5271%" y="1637" width="0.0224%" height="15" fill="rgb(205,191,50)" fg:x="84313" fg:w="24"/><text x="78.7771%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (24 samples, 0.02%)</title><rect x="78.5271%" y="1621" width="0.0224%" height="15" fill="rgb(251,217,19)" fg:x="84313" fg:w="24"/><text x="78.7771%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (24 samples, 0.02%)</title><rect x="78.5271%" y="1605" width="0.0224%" height="15" fill="rgb(205,174,37)" fg:x="84313" fg:w="24"/><text x="78.7771%" y="1615.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (24 samples, 0.02%)</title><rect x="78.5271%" y="1589" width="0.0224%" height="15" fill="rgb(212,158,42)" fg:x="84313" fg:w="24"/><text x="78.7771%" y="1599.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="78.5299%" y="1573" width="0.0196%" height="15" fill="rgb(212,208,51)" fg:x="84316" fg:w="21"/><text x="78.7799%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (51 samples, 0.05%)</title><rect x="78.5038%" y="1717" width="0.0475%" height="15" fill="rgb(225,198,20)" fg:x="84288" fg:w="51"/><text x="78.7538%" y="1727.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (17 samples, 0.02%)</title><rect x="78.5607%" y="1717" width="0.0158%" height="15" fill="rgb(247,41,44)" fg:x="84349" fg:w="17"/><text x="78.8107%" y="1727.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (17 samples, 0.02%)</title><rect x="78.5607%" y="1701" width="0.0158%" height="15" fill="rgb(228,33,41)" fg:x="84349" fg:w="17"/><text x="78.8107%" y="1711.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="78.5607%" y="1685" width="0.0158%" height="15" fill="rgb(215,47,52)" fg:x="84349" fg:w="17"/><text x="78.8107%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (310 samples, 0.29%)</title><rect x="78.2943%" y="1861" width="0.2887%" height="15" fill="rgb(248,106,37)" fg:x="84063" fg:w="310"/><text x="78.5443%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (303 samples, 0.28%)</title><rect x="78.3008%" y="1845" width="0.2822%" height="15" fill="rgb(238,91,29)" fg:x="84070" fg:w="303"/><text x="78.5508%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (271 samples, 0.25%)</title><rect x="78.3306%" y="1829" width="0.2524%" height="15" fill="rgb(226,111,40)" fg:x="84102" fg:w="271"/><text x="78.5806%" y="1839.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (267 samples, 0.25%)</title><rect x="78.3343%" y="1813" width="0.2487%" height="15" fill="rgb(229,159,36)" fg:x="84106" fg:w="267"/><text x="78.5843%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (267 samples, 0.25%)</title><rect x="78.3343%" y="1797" width="0.2487%" height="15" fill="rgb(221,109,4)" fg:x="84106" fg:w="267"/><text x="78.5843%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (267 samples, 0.25%)</title><rect x="78.3343%" y="1781" width="0.2487%" height="15" fill="rgb(236,56,25)" fg:x="84106" fg:w="267"/><text x="78.5843%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (99 samples, 0.09%)</title><rect x="78.4908%" y="1765" width="0.0922%" height="15" fill="rgb(244,113,23)" fg:x="84274" fg:w="99"/><text x="78.7408%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (99 samples, 0.09%)</title><rect x="78.4908%" y="1749" width="0.0922%" height="15" fill="rgb(249,132,2)" fg:x="84274" fg:w="99"/><text x="78.7408%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (99 samples, 0.09%)</title><rect x="78.4908%" y="1733" width="0.0922%" height="15" fill="rgb(205,185,21)" fg:x="84274" fg:w="99"/><text x="78.7408%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="78.6203%" y="1797" width="0.0186%" height="15" fill="rgb(245,130,2)" fg:x="84413" fg:w="20"/><text x="78.8703%" y="1807.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="78.6277%" y="1781" width="0.0112%" height="15" fill="rgb(246,71,26)" fg:x="84421" fg:w="12"/><text x="78.8777%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="78.6286%" y="1765" width="0.0102%" height="15" fill="rgb(234,194,6)" fg:x="84422" fg:w="11"/><text x="78.8786%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="78.6286%" y="1749" width="0.0102%" height="15" fill="rgb(206,24,32)" fg:x="84422" fg:w="11"/><text x="78.8786%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="78.6286%" y="1733" width="0.0102%" height="15" fill="rgb(233,7,54)" fg:x="84422" fg:w="11"/><text x="78.8786%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="78.6761%" y="1781" width="0.0112%" height="15" fill="rgb(252,46,1)" fg:x="84473" fg:w="12"/><text x="78.9261%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="78.6873%" y="1781" width="0.0130%" height="15" fill="rgb(216,113,53)" fg:x="84485" fg:w="14"/><text x="78.9373%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.03%)</title><rect x="78.7097%" y="1733" width="0.0270%" height="15" fill="rgb(215,40,24)" fg:x="84509" fg:w="29"/><text x="78.9597%" y="1743.50"></text></g><g><title>malloc (16 samples, 0.01%)</title><rect x="78.7218%" y="1717" width="0.0149%" height="15" fill="rgb(233,222,8)" fg:x="84522" fg:w="16"/><text x="78.9718%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (37 samples, 0.03%)</title><rect x="78.7041%" y="1765" width="0.0345%" height="15" fill="rgb(248,73,28)" fg:x="84503" fg:w="37"/><text x="78.9541%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.03%)</title><rect x="78.7059%" y="1749" width="0.0326%" height="15" fill="rgb(247,126,28)" fg:x="84505" fg:w="35"/><text x="78.9559%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (59 samples, 0.05%)</title><rect x="78.7004%" y="1781" width="0.0550%" height="15" fill="rgb(242,173,54)" fg:x="84499" fg:w="59"/><text x="78.9504%" y="1791.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="78.7385%" y="1765" width="0.0168%" height="15" fill="rgb(244,186,22)" fg:x="84540" fg:w="18"/><text x="78.9885%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (200 samples, 0.19%)</title><rect x="78.6389%" y="1797" width="0.1863%" height="15" fill="rgb(231,187,4)" fg:x="84433" fg:w="200"/><text x="78.8889%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (74 samples, 0.07%)</title><rect x="78.7562%" y="1781" width="0.0689%" height="15" fill="rgb(252,66,47)" fg:x="84559" fg:w="74"/><text x="79.0062%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (20 samples, 0.02%)</title><rect x="78.8065%" y="1765" width="0.0186%" height="15" fill="rgb(240,228,28)" fg:x="84613" fg:w="20"/><text x="79.0565%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (19 samples, 0.02%)</title><rect x="78.8075%" y="1749" width="0.0177%" height="15" fill="rgb(237,63,43)" fg:x="84614" fg:w="19"/><text x="79.0575%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (19 samples, 0.02%)</title><rect x="78.8075%" y="1733" width="0.0177%" height="15" fill="rgb(214,1,44)" fg:x="84614" fg:w="19"/><text x="79.0575%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (269 samples, 0.25%)</title><rect x="78.5839%" y="1861" width="0.2505%" height="15" fill="rgb(212,2,46)" fg:x="84374" fg:w="269"/><text x="78.8339%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (269 samples, 0.25%)</title><rect x="78.5839%" y="1845" width="0.2505%" height="15" fill="rgb(213,142,5)" fg:x="84374" fg:w="269"/><text x="78.8339%" y="1855.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (264 samples, 0.25%)</title><rect x="78.5886%" y="1829" width="0.2459%" height="15" fill="rgb(229,135,1)" fg:x="84379" fg:w="264"/><text x="78.8386%" y="1839.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (260 samples, 0.24%)</title><rect x="78.5923%" y="1813" width="0.2422%" height="15" fill="rgb(252,98,38)" fg:x="84383" fg:w="260"/><text x="78.8423%" y="1823.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (35 samples, 0.03%)</title><rect x="78.8345%" y="1861" width="0.0326%" height="15" fill="rgb(206,89,40)" fg:x="84643" fg:w="35"/><text x="79.0845%" y="1871.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (32 samples, 0.03%)</title><rect x="78.8373%" y="1845" width="0.0298%" height="15" fill="rgb(219,73,36)" fg:x="84646" fg:w="32"/><text x="79.0873%" y="1855.50"></text></g><g><title>core::cmp::PartialEq::ne (32 samples, 0.03%)</title><rect x="78.8373%" y="1829" width="0.0298%" height="15" fill="rgb(207,168,32)" fg:x="84646" fg:w="32"/><text x="79.0873%" y="1839.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (32 samples, 0.03%)</title><rect x="78.8373%" y="1813" width="0.0298%" height="15" fill="rgb(215,113,21)" fg:x="84646" fg:w="32"/><text x="79.0873%" y="1823.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (12 samples, 0.01%)</title><rect x="78.8559%" y="1797" width="0.0112%" height="15" fill="rgb(217,144,43)" fg:x="84666" fg:w="12"/><text x="79.1059%" y="1807.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.01%)</title><rect x="78.8559%" y="1781" width="0.0112%" height="15" fill="rgb(249,48,50)" fg:x="84666" fg:w="12"/><text x="79.1059%" y="1791.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.01%)</title><rect x="78.8559%" y="1765" width="0.0112%" height="15" fill="rgb(242,1,26)" fg:x="84666" fg:w="12"/><text x="79.1059%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (12 samples, 0.01%)</title><rect x="78.8559%" y="1749" width="0.0112%" height="15" fill="rgb(231,167,42)" fg:x="84666" fg:w="12"/><text x="79.1059%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.01%)</title><rect x="78.8559%" y="1733" width="0.0112%" height="15" fill="rgb(242,177,45)" fg:x="84666" fg:w="12"/><text x="79.1059%" y="1743.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (42 samples, 0.04%)</title><rect x="78.8736%" y="1845" width="0.0391%" height="15" fill="rgb(232,121,42)" fg:x="84685" fg:w="42"/><text x="79.1236%" y="1855.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (36 samples, 0.03%)</title><rect x="78.8792%" y="1829" width="0.0335%" height="15" fill="rgb(205,8,42)" fg:x="84691" fg:w="36"/><text x="79.1292%" y="1839.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.03%)</title><rect x="78.8810%" y="1813" width="0.0317%" height="15" fill="rgb(238,199,24)" fg:x="84693" fg:w="34"/><text x="79.1310%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.03%)</title><rect x="78.8810%" y="1797" width="0.0317%" height="15" fill="rgb(228,112,2)" fg:x="84693" fg:w="34"/><text x="79.1310%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.03%)</title><rect x="78.8810%" y="1781" width="0.0317%" height="15" fill="rgb(215,115,33)" fg:x="84693" fg:w="34"/><text x="79.1310%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.03%)</title><rect x="78.8810%" y="1765" width="0.0317%" height="15" fill="rgb(230,209,34)" fg:x="84693" fg:w="34"/><text x="79.1310%" y="1775.50"></text></g><g><title>malloc (31 samples, 0.03%)</title><rect x="78.8838%" y="1749" width="0.0289%" height="15" fill="rgb(246,76,12)" fg:x="84696" fg:w="31"/><text x="79.1338%" y="1759.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="78.8941%" y="1733" width="0.0186%" height="15" fill="rgb(240,110,9)" fg:x="84707" fg:w="20"/><text x="79.1441%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="78.9164%" y="1717" width="0.0177%" height="15" fill="rgb(224,94,46)" fg:x="84731" fg:w="19"/><text x="79.1664%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="78.9164%" y="1701" width="0.0177%" height="15" fill="rgb(247,150,22)" fg:x="84731" fg:w="19"/><text x="79.1664%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="78.9164%" y="1685" width="0.0177%" height="15" fill="rgb(249,85,13)" fg:x="84731" fg:w="19"/><text x="79.1664%" y="1695.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="78.9220%" y="1669" width="0.0121%" height="15" fill="rgb(208,77,41)" fg:x="84737" fg:w="13"/><text x="79.1720%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (74 samples, 0.07%)</title><rect x="78.8671%" y="1861" width="0.0689%" height="15" fill="rgb(240,42,44)" fg:x="84678" fg:w="74"/><text x="79.1171%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.02%)</title><rect x="78.9127%" y="1845" width="0.0233%" height="15" fill="rgb(222,10,51)" fg:x="84727" fg:w="25"/><text x="79.1627%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (25 samples, 0.02%)</title><rect x="78.9127%" y="1829" width="0.0233%" height="15" fill="rgb(208,146,53)" fg:x="84727" fg:w="25"/><text x="79.1627%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.02%)</title><rect x="78.9127%" y="1813" width="0.0233%" height="15" fill="rgb(236,162,23)" fg:x="84727" fg:w="25"/><text x="79.1627%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.02%)</title><rect x="78.9127%" y="1797" width="0.0233%" height="15" fill="rgb(218,66,21)" fg:x="84727" fg:w="25"/><text x="79.1627%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (22 samples, 0.02%)</title><rect x="78.9155%" y="1781" width="0.0205%" height="15" fill="rgb(233,6,47)" fg:x="84730" fg:w="22"/><text x="79.1655%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="78.9155%" y="1765" width="0.0205%" height="15" fill="rgb(236,59,51)" fg:x="84730" fg:w="22"/><text x="79.1655%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="78.9155%" y="1749" width="0.0205%" height="15" fill="rgb(242,12,46)" fg:x="84730" fg:w="22"/><text x="79.1655%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="78.9155%" y="1733" width="0.0205%" height="15" fill="rgb(243,142,19)" fg:x="84730" fg:w="22"/><text x="79.1655%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (1,502 samples, 1.40%)</title><rect x="77.5930%" y="1877" width="1.3989%" height="15" fill="rgb(217,28,17)" fg:x="83310" fg:w="1502"/><text x="77.8430%" y="1887.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (60 samples, 0.06%)</title><rect x="78.9360%" y="1861" width="0.0559%" height="15" fill="rgb(228,2,27)" fg:x="84752" fg:w="60"/><text x="79.1860%" y="1871.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (17 samples, 0.02%)</title><rect x="78.9760%" y="1845" width="0.0158%" height="15" fill="rgb(214,221,4)" fg:x="84795" fg:w="17"/><text x="79.2260%" y="1855.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="78.9816%" y="1829" width="0.0102%" height="15" fill="rgb(224,69,26)" fg:x="84801" fg:w="11"/><text x="79.2316%" y="1839.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="79.0058%" y="1749" width="0.0298%" height="15" fill="rgb(219,70,4)" fg:x="84827" fg:w="32"/><text x="79.2558%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="79.0170%" y="1733" width="0.0186%" height="15" fill="rgb(218,157,39)" fg:x="84839" fg:w="20"/><text x="79.2670%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="79.0198%" y="1717" width="0.0158%" height="15" fill="rgb(238,36,28)" fg:x="84842" fg:w="17"/><text x="79.2698%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="79.0198%" y="1701" width="0.0158%" height="15" fill="rgb(232,29,0)" fg:x="84842" fg:w="17"/><text x="79.2698%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="79.0198%" y="1685" width="0.0158%" height="15" fill="rgb(243,138,46)" fg:x="84842" fg:w="17"/><text x="79.2698%" y="1695.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (41 samples, 0.04%)</title><rect x="79.0058%" y="1765" width="0.0382%" height="15" fill="rgb(232,186,41)" fg:x="84827" fg:w="41"/><text x="79.2558%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (67 samples, 0.06%)</title><rect x="78.9947%" y="1797" width="0.0624%" height="15" fill="rgb(252,166,17)" fg:x="84815" fg:w="67"/><text x="79.2447%" y="1807.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="79.0058%" y="1781" width="0.0512%" height="15" fill="rgb(228,179,12)" fg:x="84827" fg:w="55"/><text x="79.2558%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (14 samples, 0.01%)</title><rect x="79.0440%" y="1765" width="0.0130%" height="15" fill="rgb(254,205,53)" fg:x="84868" fg:w="14"/><text x="79.2940%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (14 samples, 0.01%)</title><rect x="79.0440%" y="1749" width="0.0130%" height="15" fill="rgb(224,163,47)" fg:x="84868" fg:w="14"/><text x="79.2940%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="79.0440%" y="1733" width="0.0130%" height="15" fill="rgb(208,43,47)" fg:x="84868" fg:w="14"/><text x="79.2940%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="79.0440%" y="1717" width="0.0130%" height="15" fill="rgb(224,198,38)" fg:x="84868" fg:w="14"/><text x="79.2940%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="79.0440%" y="1701" width="0.0130%" height="15" fill="rgb(234,12,40)" fg:x="84868" fg:w="14"/><text x="79.2940%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="79.0571%" y="1797" width="0.0121%" height="15" fill="rgb(237,212,39)" fg:x="84882" fg:w="13"/><text x="79.3071%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="79.0571%" y="1781" width="0.0121%" height="15" fill="rgb(253,2,33)" fg:x="84882" fg:w="13"/><text x="79.3071%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="79.0571%" y="1765" width="0.0121%" height="15" fill="rgb(251,29,16)" fg:x="84882" fg:w="13"/><text x="79.3071%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="79.0589%" y="1749" width="0.0102%" height="15" fill="rgb(214,38,29)" fg:x="84884" fg:w="11"/><text x="79.3089%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="79.0589%" y="1733" width="0.0102%" height="15" fill="rgb(226,226,29)" fg:x="84884" fg:w="11"/><text x="79.3089%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="79.0589%" y="1717" width="0.0102%" height="15" fill="rgb(236,79,42)" fg:x="84884" fg:w="11"/><text x="79.3089%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (100 samples, 0.09%)</title><rect x="78.9919%" y="1877" width="0.0931%" height="15" fill="rgb(222,12,36)" fg:x="84812" fg:w="100"/><text x="79.2419%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (99 samples, 0.09%)</title><rect x="78.9928%" y="1861" width="0.0922%" height="15" fill="rgb(232,123,44)" fg:x="84813" fg:w="99"/><text x="79.2428%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (99 samples, 0.09%)</title><rect x="78.9928%" y="1845" width="0.0922%" height="15" fill="rgb(234,93,50)" fg:x="84813" fg:w="99"/><text x="79.2428%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (99 samples, 0.09%)</title><rect x="78.9928%" y="1829" width="0.0922%" height="15" fill="rgb(210,86,49)" fg:x="84813" fg:w="99"/><text x="79.2428%" y="1839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (99 samples, 0.09%)</title><rect x="78.9928%" y="1813" width="0.0922%" height="15" fill="rgb(224,91,54)" fg:x="84813" fg:w="99"/><text x="79.2428%" y="1823.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (17 samples, 0.02%)</title><rect x="79.0692%" y="1797" width="0.0158%" height="15" fill="rgb(239,169,9)" fg:x="84895" fg:w="17"/><text x="79.3192%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (12 samples, 0.01%)</title><rect x="79.0850%" y="1877" width="0.0112%" height="15" fill="rgb(238,29,17)" fg:x="84912" fg:w="12"/><text x="79.3350%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Function::is_native (11 samples, 0.01%)</title><rect x="79.1008%" y="1877" width="0.0102%" height="15" fill="rgb(227,160,22)" fg:x="84929" fg:w="11"/><text x="79.3508%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Function::module_id (18 samples, 0.02%)</title><rect x="79.1204%" y="1877" width="0.0168%" height="15" fill="rgb(231,129,52)" fg:x="84950" fg:w="18"/><text x="79.3704%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Function::name (26 samples, 0.02%)</title><rect x="79.1372%" y="1877" width="0.0242%" height="15" fill="rgb(241,184,9)" fg:x="84968" fg:w="26"/><text x="79.3872%" y="1887.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="79.1465%" y="1861" width="0.0149%" height="15" fill="rgb(217,43,48)" fg:x="84978" fg:w="16"/><text x="79.3965%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (16 samples, 0.01%)</title><rect x="79.1688%" y="1861" width="0.0149%" height="15" fill="rgb(213,49,1)" fg:x="85002" fg:w="16"/><text x="79.4188%" y="1871.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="79.1688%" y="1845" width="0.0149%" height="15" fill="rgb(223,79,39)" fg:x="85002" fg:w="16"/><text x="79.4188%" y="1855.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (16 samples, 0.01%)</title><rect x="79.1688%" y="1829" width="0.0149%" height="15" fill="rgb(228,227,46)" fg:x="85002" fg:w="16"/><text x="79.4188%" y="1839.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (19 samples, 0.02%)</title><rect x="79.1837%" y="1861" width="0.0177%" height="15" fill="rgb(245,89,41)" fg:x="85018" fg:w="19"/><text x="79.4337%" y="1871.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (19 samples, 0.02%)</title><rect x="79.1837%" y="1845" width="0.0177%" height="15" fill="rgb(253,83,21)" fg:x="85018" fg:w="19"/><text x="79.4337%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (119 samples, 0.11%)</title><rect x="79.1614%" y="1877" width="0.1108%" height="15" fill="rgb(229,116,51)" fg:x="84994" fg:w="119"/><text x="79.4114%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (76 samples, 0.07%)</title><rect x="79.2014%" y="1861" width="0.0708%" height="15" fill="rgb(246,67,26)" fg:x="85037" fg:w="76"/><text x="79.4514%" y="1871.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="79.2033%" y="1845" width="0.0689%" height="15" fill="rgb(250,117,20)" fg:x="85039" fg:w="74"/><text x="79.4533%" y="1855.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="79.2536%" y="1829" width="0.0186%" height="15" fill="rgb(207,88,17)" fg:x="85093" fg:w="20"/><text x="79.5036%" y="1839.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="79.2536%" y="1813" width="0.0186%" height="15" fill="rgb(212,98,36)" fg:x="85093" fg:w="20"/><text x="79.5036%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="79.3421%" y="1861" width="0.0149%" height="15" fill="rgb(221,72,6)" fg:x="85188" fg:w="16"/><text x="79.5921%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="79.3570%" y="1861" width="0.0102%" height="15" fill="rgb(235,129,19)" fg:x="85204" fg:w="11"/><text x="79.6070%" y="1871.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="79.3672%" y="1861" width="0.0447%" height="15" fill="rgb(237,200,6)" fg:x="85215" fg:w="48"/><text x="79.6172%" y="1871.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 0.04%)</title><rect x="79.4334%" y="1813" width="0.0410%" height="15" fill="rgb(239,69,54)" fg:x="85286" fg:w="44"/><text x="79.6834%" y="1823.50"></text></g><g><title>malloc (25 samples, 0.02%)</title><rect x="79.4510%" y="1797" width="0.0233%" height="15" fill="rgb(214,68,45)" fg:x="85305" fg:w="25"/><text x="79.7010%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (58 samples, 0.05%)</title><rect x="79.4240%" y="1845" width="0.0540%" height="15" fill="rgb(254,160,8)" fg:x="85276" fg:w="58"/><text x="79.6740%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.05%)</title><rect x="79.4296%" y="1829" width="0.0484%" height="15" fill="rgb(215,226,31)" fg:x="85282" fg:w="52"/><text x="79.6796%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (125 samples, 0.12%)</title><rect x="79.4119%" y="1861" width="0.1164%" height="15" fill="rgb(253,6,35)" fg:x="85263" fg:w="125"/><text x="79.6619%" y="1871.50"></text></g><g><title>core::ptr::write (48 samples, 0.04%)</title><rect x="79.4836%" y="1845" width="0.0447%" height="15" fill="rgb(219,96,42)" fg:x="85340" fg:w="48"/><text x="79.7336%" y="1855.50"></text></g><g><title>__rdl_alloc (17 samples, 0.02%)</title><rect x="79.6103%" y="1781" width="0.0158%" height="15" fill="rgb(207,170,13)" fg:x="85476" fg:w="17"/><text x="79.8603%" y="1791.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.01%)</title><rect x="79.6150%" y="1765" width="0.0112%" height="15" fill="rgb(239,101,5)" fg:x="85481" fg:w="12"/><text x="79.8650%" y="1775.50"></text></g><g><title>alloc::alloc::exchange_malloc (95 samples, 0.09%)</title><rect x="79.6047%" y="1845" width="0.0885%" height="15" fill="rgb(228,183,34)" fg:x="85470" fg:w="95"/><text x="79.8547%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (90 samples, 0.08%)</title><rect x="79.6094%" y="1829" width="0.0838%" height="15" fill="rgb(205,28,31)" fg:x="85475" fg:w="90"/><text x="79.8594%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (90 samples, 0.08%)</title><rect x="79.6094%" y="1813" width="0.0838%" height="15" fill="rgb(214,118,50)" fg:x="85475" fg:w="90"/><text x="79.8594%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (90 samples, 0.08%)</title><rect x="79.6094%" y="1797" width="0.0838%" height="15" fill="rgb(213,108,51)" fg:x="85475" fg:w="90"/><text x="79.8594%" y="1807.50"></text></g><g><title>malloc (64 samples, 0.06%)</title><rect x="79.6336%" y="1781" width="0.0596%" height="15" fill="rgb(238,56,37)" fg:x="85501" fg:w="64"/><text x="79.8836%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (118 samples, 0.11%)</title><rect x="79.7100%" y="1797" width="0.1099%" height="15" fill="rgb(214,136,28)" fg:x="85583" fg:w="118"/><text x="79.9600%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (118 samples, 0.11%)</title><rect x="79.7100%" y="1781" width="0.1099%" height="15" fill="rgb(221,201,54)" fg:x="85583" fg:w="118"/><text x="79.9600%" y="1791.50"></text></g><g><title>cfree (101 samples, 0.09%)</title><rect x="79.7258%" y="1765" width="0.0941%" height="15" fill="rgb(228,216,39)" fg:x="85600" fg:w="101"/><text x="79.9758%" y="1775.50"></text></g><g><title>[libc.so.6] (58 samples, 0.05%)</title><rect x="79.7659%" y="1749" width="0.0540%" height="15" fill="rgb(207,229,49)" fg:x="85643" fg:w="58"/><text x="80.0159%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (311 samples, 0.29%)</title><rect x="79.5321%" y="1861" width="0.2897%" height="15" fill="rgb(224,23,43)" fg:x="85392" fg:w="311"/><text x="79.7821%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (120 samples, 0.11%)</title><rect x="79.7100%" y="1845" width="0.1118%" height="15" fill="rgb(247,97,18)" fg:x="85583" fg:w="120"/><text x="79.9600%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (120 samples, 0.11%)</title><rect x="79.7100%" y="1829" width="0.1118%" height="15" fill="rgb(232,53,32)" fg:x="85583" fg:w="120"/><text x="79.9600%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (120 samples, 0.11%)</title><rect x="79.7100%" y="1813" width="0.1118%" height="15" fill="rgb(247,38,23)" fg:x="85583" fg:w="120"/><text x="79.9600%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Module::function_instantiation_at (12 samples, 0.01%)</title><rect x="79.8217%" y="1861" width="0.0112%" height="15" fill="rgb(228,101,52)" fg:x="85703" fg:w="12"/><text x="80.0717%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.01%)</title><rect x="79.8217%" y="1845" width="0.0112%" height="15" fill="rgb(231,45,36)" fg:x="85703" fg:w="12"/><text x="80.0717%" y="1855.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.01%)</title><rect x="79.8217%" y="1829" width="0.0112%" height="15" fill="rgb(221,183,50)" fg:x="85703" fg:w="12"/><text x="80.0717%" y="1839.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.01%)</title><rect x="79.8217%" y="1813" width="0.0112%" height="15" fill="rgb(251,132,12)" fg:x="85703" fg:w="12"/><text x="80.0717%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="79.8860%" y="1829" width="0.0130%" height="15" fill="rgb(252,50,16)" fg:x="85772" fg:w="14"/><text x="80.1360%" y="1839.50"></text></g><g><title>alloc::alloc::exchange_malloc (42 samples, 0.04%)</title><rect x="79.9242%" y="1813" width="0.0391%" height="15" fill="rgb(224,60,15)" fg:x="85813" fg:w="42"/><text x="80.1742%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.04%)</title><rect x="79.9242%" y="1797" width="0.0391%" height="15" fill="rgb(254,2,34)" fg:x="85813" fg:w="42"/><text x="80.1742%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.04%)</title><rect x="79.9242%" y="1781" width="0.0391%" height="15" fill="rgb(232,154,8)" fg:x="85813" fg:w="42"/><text x="80.1742%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.04%)</title><rect x="79.9242%" y="1765" width="0.0391%" height="15" fill="rgb(235,190,52)" fg:x="85813" fg:w="42"/><text x="80.1742%" y="1775.50"></text></g><g><title>malloc (28 samples, 0.03%)</title><rect x="79.9372%" y="1749" width="0.0261%" height="15" fill="rgb(213,218,38)" fg:x="85827" fg:w="28"/><text x="80.1872%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (99 samples, 0.09%)</title><rect x="79.9000%" y="1829" width="0.0922%" height="15" fill="rgb(237,50,37)" fg:x="85787" fg:w="99"/><text x="80.1500%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (26 samples, 0.02%)</title><rect x="79.9680%" y="1813" width="0.0242%" height="15" fill="rgb(235,51,35)" fg:x="85860" fg:w="26"/><text x="80.2180%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (26 samples, 0.02%)</title><rect x="79.9680%" y="1797" width="0.0242%" height="15" fill="rgb(244,40,52)" fg:x="85860" fg:w="26"/><text x="80.2180%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="79.9680%" y="1781" width="0.0242%" height="15" fill="rgb(217,225,45)" fg:x="85860" fg:w="26"/><text x="80.2180%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.02%)</title><rect x="79.9680%" y="1765" width="0.0242%" height="15" fill="rgb(247,191,36)" fg:x="85860" fg:w="26"/><text x="80.2180%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="79.9680%" y="1749" width="0.0242%" height="15" fill="rgb(251,144,31)" fg:x="85860" fg:w="26"/><text x="80.2180%" y="1759.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="79.9735%" y="1733" width="0.0186%" height="15" fill="rgb(227,155,41)" fg:x="85866" fg:w="20"/><text x="80.2235%" y="1743.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="79.9782%" y="1717" width="0.0140%" height="15" fill="rgb(236,121,36)" fg:x="85871" fg:w="15"/><text x="80.2282%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.02%)</title><rect x="80.0965%" y="1781" width="0.0224%" height="15" fill="rgb(221,128,28)" fg:x="85998" fg:w="24"/><text x="80.3465%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.02%)</title><rect x="80.0993%" y="1765" width="0.0196%" height="15" fill="rgb(249,67,50)" fg:x="86001" fg:w="21"/><text x="80.3493%" y="1775.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="80.1021%" y="1749" width="0.0168%" height="15" fill="rgb(241,126,38)" fg:x="86004" fg:w="18"/><text x="80.3521%" y="1759.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="80.1077%" y="1733" width="0.0112%" height="15" fill="rgb(239,33,14)" fg:x="86010" fg:w="12"/><text x="80.3577%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.03%)</title><rect x="80.0956%" y="1797" width="0.0298%" height="15" fill="rgb(207,221,54)" fg:x="85997" fg:w="32"/><text x="80.3456%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (28 samples, 0.03%)</title><rect x="80.1254%" y="1797" width="0.0261%" height="15" fill="rgb(242,138,43)" fg:x="86029" fg:w="28"/><text x="80.3754%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (950 samples, 0.88%)</title><rect x="79.2778%" y="1877" width="0.8848%" height="15" fill="rgb(231,118,19)" fg:x="85119" fg:w="950"/><text x="79.5278%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (354 samples, 0.33%)</title><rect x="79.8329%" y="1861" width="0.3297%" height="15" fill="rgb(214,128,54)" fg:x="85715" fg:w="354"/><text x="80.0829%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (354 samples, 0.33%)</title><rect x="79.8329%" y="1845" width="0.3297%" height="15" fill="rgb(236,136,6)" fg:x="85715" fg:w="354"/><text x="80.0829%" y="1855.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (183 samples, 0.17%)</title><rect x="79.9922%" y="1829" width="0.1704%" height="15" fill="rgb(247,30,38)" fg:x="85886" fg:w="183"/><text x="80.2422%" y="1839.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (165 samples, 0.15%)</title><rect x="80.0089%" y="1813" width="0.1537%" height="15" fill="rgb(249,189,40)" fg:x="85904" fg:w="165"/><text x="80.2589%" y="1823.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (12 samples, 0.01%)</title><rect x="80.1514%" y="1797" width="0.0112%" height="15" fill="rgb(247,179,7)" fg:x="86057" fg:w="12"/><text x="80.4014%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (11 samples, 0.01%)</title><rect x="80.1524%" y="1781" width="0.0102%" height="15" fill="rgb(239,46,52)" fg:x="86058" fg:w="11"/><text x="80.4024%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="80.1524%" y="1765" width="0.0102%" height="15" fill="rgb(225,28,52)" fg:x="86058" fg:w="11"/><text x="80.4024%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.01%)</title><rect x="80.2045%" y="1845" width="0.0102%" height="15" fill="rgb(217,208,44)" fg:x="86114" fg:w="11"/><text x="80.4545%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="80.2036%" y="1861" width="0.0177%" height="15" fill="rgb(224,11,34)" fg:x="86113" fg:w="19"/><text x="80.4536%" y="1871.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (92 samples, 0.09%)</title><rect x="80.1626%" y="1877" width="0.0857%" height="15" fill="rgb(205,134,17)" fg:x="86069" fg:w="92"/><text x="80.4126%" y="1887.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (16 samples, 0.01%)</title><rect x="80.2483%" y="1877" width="0.0149%" height="15" fill="rgb(237,125,9)" fg:x="86161" fg:w="16"/><text x="80.4983%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="80.2520%" y="1861" width="0.0112%" height="15" fill="rgb(208,139,47)" fg:x="86165" fg:w="12"/><text x="80.5020%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="80.2520%" y="1845" width="0.0112%" height="15" fill="rgb(242,5,5)" fg:x="86165" fg:w="12"/><text x="80.5020%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="80.2520%" y="1829" width="0.0112%" height="15" fill="rgb(218,78,2)" fg:x="86165" fg:w="12"/><text x="80.5020%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="80.2520%" y="1813" width="0.0112%" height="15" fill="rgb(217,75,16)" fg:x="86165" fg:w="12"/><text x="80.5020%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (15,953 samples, 14.86%)</title><rect x="65.4245%" y="1893" width="14.8582%" height="15" fill="rgb(212,56,17)" fg:x="70245" fg:w="15953"/><text x="65.6745%" y="1903.50">move_vm_runtime::interp..</text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (21 samples, 0.02%)</title><rect x="80.2632%" y="1877" width="0.0196%" height="15" fill="rgb(228,61,29)" fg:x="86177" fg:w="21"/><text x="80.5132%" y="1887.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (15,966 samples, 14.87%)</title><rect x="65.4199%" y="1909" width="14.8704%" height="15" fill="rgb(247,202,38)" fg:x="70240" fg:w="15966"/><text x="65.6699%" y="1919.50">move_vm_runtime::interp..</text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (41 samples, 0.04%)</title><rect x="80.3768%" y="1429" width="0.0382%" height="15" fill="rgb(211,216,43)" fg:x="86299" fg:w="41"/><text x="80.6268%" y="1439.50"></text></g><g><title>serde::de::SeqAccess::next_element (25 samples, 0.02%)</title><rect x="80.3917%" y="1413" width="0.0233%" height="15" fill="rgb(220,7,49)" fg:x="86315" fg:w="25"/><text x="80.6417%" y="1423.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (25 samples, 0.02%)</title><rect x="80.3917%" y="1397" width="0.0233%" height="15" fill="rgb(219,158,7)" fg:x="86315" fg:w="25"/><text x="80.6417%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (25 samples, 0.02%)</title><rect x="80.3917%" y="1381" width="0.0233%" height="15" fill="rgb(206,127,9)" fg:x="86315" fg:w="25"/><text x="80.6417%" y="1391.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (25 samples, 0.02%)</title><rect x="80.3917%" y="1365" width="0.0233%" height="15" fill="rgb(206,103,43)" fg:x="86315" fg:w="25"/><text x="80.6417%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (25 samples, 0.02%)</title><rect x="80.3917%" y="1349" width="0.0233%" height="15" fill="rgb(240,108,41)" fg:x="86315" fg:w="25"/><text x="80.6417%" y="1359.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (20 samples, 0.02%)</title><rect x="80.3964%" y="1333" width="0.0186%" height="15" fill="rgb(252,212,6)" fg:x="86320" fg:w="20"/><text x="80.6464%" y="1343.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (53 samples, 0.05%)</title><rect x="80.3666%" y="1525" width="0.0494%" height="15" fill="rgb(248,105,31)" fg:x="86288" fg:w="53"/><text x="80.6166%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (44 samples, 0.04%)</title><rect x="80.3750%" y="1509" width="0.0410%" height="15" fill="rgb(241,123,4)" fg:x="86297" fg:w="44"/><text x="80.6250%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (44 samples, 0.04%)</title><rect x="80.3750%" y="1493" width="0.0410%" height="15" fill="rgb(223,74,37)" fg:x="86297" fg:w="44"/><text x="80.6250%" y="1503.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (43 samples, 0.04%)</title><rect x="80.3759%" y="1477" width="0.0400%" height="15" fill="rgb(251,219,28)" fg:x="86298" fg:w="43"/><text x="80.6259%" y="1487.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (43 samples, 0.04%)</title><rect x="80.3759%" y="1461" width="0.0400%" height="15" fill="rgb(218,36,31)" fg:x="86298" fg:w="43"/><text x="80.6259%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (43 samples, 0.04%)</title><rect x="80.3759%" y="1445" width="0.0400%" height="15" fill="rgb(229,40,15)" fg:x="86298" fg:w="43"/><text x="80.6259%" y="1455.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (64 samples, 0.06%)</title><rect x="80.3610%" y="1541" width="0.0596%" height="15" fill="rgb(208,138,37)" fg:x="86282" fg:w="64"/><text x="80.6110%" y="1551.50"></text></g><g><title>bcs::de::from_bytes_seed (86 samples, 0.08%)</title><rect x="80.3433%" y="1557" width="0.0801%" height="15" fill="rgb(208,40,52)" fg:x="86263" fg:w="86"/><text x="80.5933%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (112 samples, 0.10%)</title><rect x="80.3200%" y="1637" width="0.1043%" height="15" fill="rgb(246,181,48)" fg:x="86238" fg:w="112"/><text x="80.5700%" y="1647.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (112 samples, 0.10%)</title><rect x="80.3200%" y="1621" width="0.1043%" height="15" fill="rgb(253,178,36)" fg:x="86238" fg:w="112"/><text x="80.5700%" y="1631.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (110 samples, 0.10%)</title><rect x="80.3219%" y="1605" width="0.1025%" height="15" fill="rgb(210,170,6)" fg:x="86240" fg:w="110"/><text x="80.5719%" y="1615.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (109 samples, 0.10%)</title><rect x="80.3228%" y="1589" width="0.1015%" height="15" fill="rgb(243,62,22)" fg:x="86241" fg:w="109"/><text x="80.5728%" y="1599.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (89 samples, 0.08%)</title><rect x="80.3414%" y="1573" width="0.0829%" height="15" fill="rgb(213,145,26)" fg:x="86261" fg:w="89"/><text x="80.5914%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (122 samples, 0.11%)</title><rect x="80.3163%" y="1685" width="0.1136%" height="15" fill="rgb(237,177,23)" fg:x="86234" fg:w="122"/><text x="80.5663%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (118 samples, 0.11%)</title><rect x="80.3200%" y="1669" width="0.1099%" height="15" fill="rgb(252,5,24)" fg:x="86238" fg:w="118"/><text x="80.5700%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (118 samples, 0.11%)</title><rect x="80.3200%" y="1653" width="0.1099%" height="15" fill="rgb(230,108,54)" fg:x="86238" fg:w="118"/><text x="80.5700%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (131 samples, 0.12%)</title><rect x="80.3154%" y="1717" width="0.1220%" height="15" fill="rgb(252,192,41)" fg:x="86233" fg:w="131"/><text x="80.5654%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (131 samples, 0.12%)</title><rect x="80.3154%" y="1701" width="0.1220%" height="15" fill="rgb(218,125,20)" fg:x="86233" fg:w="131"/><text x="80.5654%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (142 samples, 0.13%)</title><rect x="80.3154%" y="1733" width="0.1323%" height="15" fill="rgb(230,223,15)" fg:x="86233" fg:w="142"/><text x="80.5654%" y="1743.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (11 samples, 0.01%)</title><rect x="80.4374%" y="1717" width="0.0102%" height="15" fill="rgb(239,99,47)" fg:x="86364" fg:w="11"/><text x="80.6874%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (170 samples, 0.16%)</title><rect x="80.3079%" y="1765" width="0.1583%" height="15" fill="rgb(222,214,23)" fg:x="86225" fg:w="170"/><text x="80.5579%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (168 samples, 0.16%)</title><rect x="80.3098%" y="1749" width="0.1565%" height="15" fill="rgb(250,98,43)" fg:x="86227" fg:w="168"/><text x="80.5598%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (19 samples, 0.02%)</title><rect x="80.4914%" y="1605" width="0.0177%" height="15" fill="rgb(226,140,11)" fg:x="86422" fg:w="19"/><text x="80.7414%" y="1615.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (44 samples, 0.04%)</title><rect x="80.5380%" y="1461" width="0.0410%" height="15" fill="rgb(239,2,22)" fg:x="86472" fg:w="44"/><text x="80.7880%" y="1471.50"></text></g><g><title>serde::de::SeqAccess::next_element (36 samples, 0.03%)</title><rect x="80.5454%" y="1445" width="0.0335%" height="15" fill="rgb(209,106,26)" fg:x="86480" fg:w="36"/><text x="80.7954%" y="1455.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (36 samples, 0.03%)</title><rect x="80.5454%" y="1429" width="0.0335%" height="15" fill="rgb(209,135,11)" fg:x="86480" fg:w="36"/><text x="80.7954%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (36 samples, 0.03%)</title><rect x="80.5454%" y="1413" width="0.0335%" height="15" fill="rgb(241,58,6)" fg:x="86480" fg:w="36"/><text x="80.7954%" y="1423.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (36 samples, 0.03%)</title><rect x="80.5454%" y="1397" width="0.0335%" height="15" fill="rgb(214,78,1)" fg:x="86480" fg:w="36"/><text x="80.7954%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (36 samples, 0.03%)</title><rect x="80.5454%" y="1381" width="0.0335%" height="15" fill="rgb(229,135,33)" fg:x="86480" fg:w="36"/><text x="80.7954%" y="1391.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (25 samples, 0.02%)</title><rect x="80.5557%" y="1365" width="0.0233%" height="15" fill="rgb(245,87,50)" fg:x="86491" fg:w="25"/><text x="80.8057%" y="1375.50"></text></g><g><title>bcs::de::Deserializer::next (11 samples, 0.01%)</title><rect x="80.5687%" y="1349" width="0.0102%" height="15" fill="rgb(222,222,8)" fg:x="86505" fg:w="11"/><text x="80.8187%" y="1359.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (50 samples, 0.05%)</title><rect x="80.5342%" y="1509" width="0.0466%" height="15" fill="rgb(214,97,50)" fg:x="86468" fg:w="50"/><text x="80.7842%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (46 samples, 0.04%)</title><rect x="80.5380%" y="1493" width="0.0428%" height="15" fill="rgb(244,161,51)" fg:x="86472" fg:w="46"/><text x="80.7880%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (46 samples, 0.04%)</title><rect x="80.5380%" y="1477" width="0.0428%" height="15" fill="rgb(225,17,4)" fg:x="86472" fg:w="46"/><text x="80.7880%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (59 samples, 0.05%)</title><rect x="80.5277%" y="1557" width="0.0550%" height="15" fill="rgb(238,10,13)" fg:x="86461" fg:w="59"/><text x="80.7777%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (52 samples, 0.05%)</title><rect x="80.5342%" y="1541" width="0.0484%" height="15" fill="rgb(239,169,14)" fg:x="86468" fg:w="52"/><text x="80.7842%" y="1551.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (52 samples, 0.05%)</title><rect x="80.5342%" y="1525" width="0.0484%" height="15" fill="rgb(213,105,25)" fg:x="86468" fg:w="52"/><text x="80.7842%" y="1535.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (70 samples, 0.07%)</title><rect x="80.5203%" y="1573" width="0.0652%" height="15" fill="rgb(233,4,17)" fg:x="86453" fg:w="70"/><text x="80.7703%" y="1583.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (121 samples, 0.11%)</title><rect x="80.4774%" y="1621" width="0.1127%" height="15" fill="rgb(212,5,35)" fg:x="86407" fg:w="121"/><text x="80.7274%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (87 samples, 0.08%)</title><rect x="80.5091%" y="1605" width="0.0810%" height="15" fill="rgb(216,3,14)" fg:x="86441" fg:w="87"/><text x="80.7591%" y="1615.50"></text></g><g><title>bcs::de::from_bytes_seed (85 samples, 0.08%)</title><rect x="80.5110%" y="1589" width="0.0792%" height="15" fill="rgb(240,105,33)" fg:x="86443" fg:w="85"/><text x="80.7610%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (153 samples, 0.14%)</title><rect x="80.4672%" y="1669" width="0.1425%" height="15" fill="rgb(216,73,0)" fg:x="86396" fg:w="153"/><text x="80.7172%" y="1679.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (153 samples, 0.14%)</title><rect x="80.4672%" y="1653" width="0.1425%" height="15" fill="rgb(217,153,48)" fg:x="86396" fg:w="153"/><text x="80.7172%" y="1663.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (153 samples, 0.14%)</title><rect x="80.4672%" y="1637" width="0.1425%" height="15" fill="rgb(218,180,8)" fg:x="86396" fg:w="153"/><text x="80.7172%" y="1647.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (13 samples, 0.01%)</title><rect x="80.5976%" y="1621" width="0.0121%" height="15" fill="rgb(252,168,2)" fg:x="86536" fg:w="13"/><text x="80.8476%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (11 samples, 0.01%)</title><rect x="80.5994%" y="1605" width="0.0102%" height="15" fill="rgb(224,116,33)" fg:x="86538" fg:w="11"/><text x="80.8494%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (162 samples, 0.15%)</title><rect x="80.4662%" y="1717" width="0.1509%" height="15" fill="rgb(229,205,17)" fg:x="86395" fg:w="162"/><text x="80.7162%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (162 samples, 0.15%)</title><rect x="80.4662%" y="1701" width="0.1509%" height="15" fill="rgb(234,1,41)" fg:x="86395" fg:w="162"/><text x="80.7162%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (162 samples, 0.15%)</title><rect x="80.4662%" y="1685" width="0.1509%" height="15" fill="rgb(244,185,8)" fg:x="86395" fg:w="162"/><text x="80.7162%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (166 samples, 0.15%)</title><rect x="80.4662%" y="1749" width="0.1546%" height="15" fill="rgb(248,51,21)" fg:x="86395" fg:w="166"/><text x="80.7162%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (166 samples, 0.15%)</title><rect x="80.4662%" y="1733" width="0.1546%" height="15" fill="rgb(248,157,31)" fg:x="86395" fg:w="166"/><text x="80.7162%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (168 samples, 0.16%)</title><rect x="80.4662%" y="1765" width="0.1565%" height="15" fill="rgb(210,34,47)" fg:x="86395" fg:w="168"/><text x="80.7162%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (354 samples, 0.33%)</title><rect x="80.2939%" y="1893" width="0.3297%" height="15" fill="rgb(227,139,53)" fg:x="86210" fg:w="354"/><text x="80.5439%" y="1903.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (354 samples, 0.33%)</title><rect x="80.2939%" y="1877" width="0.3297%" height="15" fill="rgb(232,211,37)" fg:x="86210" fg:w="354"/><text x="80.5439%" y="1887.50"></text></g><g><title>core::iter::adapters::try_process (351 samples, 0.33%)</title><rect x="80.2967%" y="1861" width="0.3269%" height="15" fill="rgb(236,133,10)" fg:x="86213" fg:w="351"/><text x="80.5467%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (351 samples, 0.33%)</title><rect x="80.2967%" y="1845" width="0.3269%" height="15" fill="rgb(243,202,25)" fg:x="86213" fg:w="351"/><text x="80.5467%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (351 samples, 0.33%)</title><rect x="80.2967%" y="1829" width="0.3269%" height="15" fill="rgb(224,59,9)" fg:x="86213" fg:w="351"/><text x="80.5467%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (351 samples, 0.33%)</title><rect x="80.2967%" y="1813" width="0.3269%" height="15" fill="rgb(206,146,16)" fg:x="86213" fg:w="351"/><text x="80.5467%" y="1823.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (349 samples, 0.33%)</title><rect x="80.2986%" y="1797" width="0.3251%" height="15" fill="rgb(220,47,2)" fg:x="86215" fg:w="349"/><text x="80.5486%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (341 samples, 0.32%)</title><rect x="80.3061%" y="1781" width="0.3176%" height="15" fill="rgb(225,124,51)" fg:x="86223" fg:w="341"/><text x="80.5561%" y="1791.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (372 samples, 0.35%)</title><rect x="80.2902%" y="1909" width="0.3465%" height="15" fill="rgb(241,220,50)" fg:x="86206" fg:w="372"/><text x="80.5402%" y="1919.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (14 samples, 0.01%)</title><rect x="80.6236%" y="1893" width="0.0130%" height="15" fill="rgb(232,168,5)" fg:x="86564" fg:w="14"/><text x="80.8736%" y="1903.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (16,655 samples, 15.51%)</title><rect x="65.1498%" y="1957" width="15.5121%" height="15" fill="rgb(243,90,22)" fg:x="69950" fg:w="16655"/><text x="65.3998%" y="1967.50">move_vm_runtime::session..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (16,655 samples, 15.51%)</title><rect x="65.1498%" y="1941" width="15.5121%" height="15" fill="rgb(223,153,32)" fg:x="69950" fg:w="16655"/><text x="65.3998%" y="1951.50">move_vm_runtime::runtime..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (16,518 samples, 15.38%)</title><rect x="65.2774%" y="1925" width="15.3845%" height="15" fill="rgb(243,124,20)" fg:x="70087" fg:w="16518"/><text x="65.5274%" y="1935.50">move_vm_runtime::runtime..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (27 samples, 0.03%)</title><rect x="80.6367%" y="1909" width="0.0251%" height="15" fill="rgb(246,168,39)" fg:x="86578" fg:w="27"/><text x="80.8867%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.02%)</title><rect x="80.6386%" y="1893" width="0.0233%" height="15" fill="rgb(222,165,54)" fg:x="86580" fg:w="25"/><text x="80.8886%" y="1903.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (25 samples, 0.02%)</title><rect x="80.6386%" y="1877" width="0.0233%" height="15" fill="rgb(251,142,27)" fg:x="86580" fg:w="25"/><text x="80.8886%" y="1887.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 0.02%)</title><rect x="80.6386%" y="1861" width="0.0233%" height="15" fill="rgb(207,168,50)" fg:x="86580" fg:w="25"/><text x="80.8886%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (19 samples, 0.02%)</title><rect x="80.6441%" y="1845" width="0.0177%" height="15" fill="rgb(250,139,25)" fg:x="86586" fg:w="19"/><text x="80.8941%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="80.6441%" y="1829" width="0.0177%" height="15" fill="rgb(214,194,48)" fg:x="86586" fg:w="19"/><text x="80.8941%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="80.6441%" y="1813" width="0.0177%" height="15" fill="rgb(227,138,47)" fg:x="86586" fg:w="19"/><text x="80.8941%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="80.6441%" y="1797" width="0.0177%" height="15" fill="rgb(250,162,5)" fg:x="86586" fg:w="19"/><text x="80.8941%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="80.6488%" y="1781" width="0.0130%" height="15" fill="rgb(229,74,25)" fg:x="86591" fg:w="14"/><text x="80.8988%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="80.6507%" y="1765" width="0.0112%" height="15" fill="rgb(221,124,34)" fg:x="86593" fg:w="12"/><text x="80.9007%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="80.6507%" y="1749" width="0.0112%" height="15" fill="rgb(225,94,25)" fg:x="86593" fg:w="12"/><text x="80.9007%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="80.6507%" y="1733" width="0.0112%" height="15" fill="rgb(210,100,12)" fg:x="86593" fg:w="12"/><text x="80.9007%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="80.6507%" y="1717" width="0.0112%" height="15" fill="rgb(206,62,48)" fg:x="86593" fg:w="12"/><text x="80.9007%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.01%)</title><rect x="80.6693%" y="1717" width="0.0140%" height="15" fill="rgb(222,181,9)" fg:x="86613" fg:w="15"/><text x="80.9193%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.01%)</title><rect x="80.6702%" y="1701" width="0.0130%" height="15" fill="rgb(248,42,38)" fg:x="86614" fg:w="14"/><text x="80.9202%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (25 samples, 0.02%)</title><rect x="80.6693%" y="1749" width="0.0233%" height="15" fill="rgb(213,40,6)" fg:x="86613" fg:w="25"/><text x="80.9193%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.02%)</title><rect x="80.6693%" y="1733" width="0.0233%" height="15" fill="rgb(211,108,15)" fg:x="86613" fg:w="25"/><text x="80.9193%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="80.6693%" y="1765" width="0.0251%" height="15" fill="rgb(249,62,9)" fg:x="86613" fg:w="27"/><text x="80.9193%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.03%)</title><rect x="80.6674%" y="1797" width="0.0317%" height="15" fill="rgb(233,26,54)" fg:x="86611" fg:w="34"/><text x="80.9174%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (34 samples, 0.03%)</title><rect x="80.6674%" y="1781" width="0.0317%" height="15" fill="rgb(210,175,26)" fg:x="86611" fg:w="34"/><text x="80.9174%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (42 samples, 0.04%)</title><rect x="80.7000%" y="1749" width="0.0391%" height="15" fill="rgb(210,43,33)" fg:x="86646" fg:w="42"/><text x="80.9500%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.04%)</title><rect x="80.7019%" y="1733" width="0.0373%" height="15" fill="rgb(224,46,17)" fg:x="86648" fg:w="40"/><text x="80.9519%" y="1743.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (39 samples, 0.04%)</title><rect x="80.7028%" y="1717" width="0.0363%" height="15" fill="rgb(254,24,38)" fg:x="86649" fg:w="39"/><text x="80.9528%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (38 samples, 0.04%)</title><rect x="80.7037%" y="1701" width="0.0354%" height="15" fill="rgb(248,32,0)" fg:x="86650" fg:w="38"/><text x="80.9537%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (32 samples, 0.03%)</title><rect x="80.7093%" y="1685" width="0.0298%" height="15" fill="rgb(224,37,41)" fg:x="86656" fg:w="32"/><text x="80.9593%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (30 samples, 0.03%)</title><rect x="80.7112%" y="1669" width="0.0279%" height="15" fill="rgb(252,70,22)" fg:x="86658" fg:w="30"/><text x="80.9612%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (12 samples, 0.01%)</title><rect x="80.7280%" y="1653" width="0.0112%" height="15" fill="rgb(241,123,50)" fg:x="86676" fg:w="12"/><text x="80.9780%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (44 samples, 0.04%)</title><rect x="80.7000%" y="1781" width="0.0410%" height="15" fill="rgb(246,138,33)" fg:x="86646" fg:w="44"/><text x="80.9500%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 0.04%)</title><rect x="80.7000%" y="1765" width="0.0410%" height="15" fill="rgb(218,39,32)" fg:x="86646" fg:w="44"/><text x="80.9500%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="80.6991%" y="1797" width="0.0447%" height="15" fill="rgb(241,229,10)" fg:x="86645" fg:w="48"/><text x="80.9491%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (92 samples, 0.09%)</title><rect x="80.6618%" y="1925" width="0.0857%" height="15" fill="rgb(212,160,10)" fg:x="86605" fg:w="92"/><text x="80.9118%" y="1935.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (92 samples, 0.09%)</title><rect x="80.6618%" y="1909" width="0.0857%" height="15" fill="rgb(227,48,51)" fg:x="86605" fg:w="92"/><text x="80.9118%" y="1919.50"></text></g><g><title>core::iter::adapters::try_process (92 samples, 0.09%)</title><rect x="80.6618%" y="1893" width="0.0857%" height="15" fill="rgb(238,159,21)" fg:x="86605" fg:w="92"/><text x="80.9118%" y="1903.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (92 samples, 0.09%)</title><rect x="80.6618%" y="1877" width="0.0857%" height="15" fill="rgb(216,1,10)" fg:x="86605" fg:w="92"/><text x="80.9118%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (92 samples, 0.09%)</title><rect x="80.6618%" y="1861" width="0.0857%" height="15" fill="rgb(209,228,25)" fg:x="86605" fg:w="92"/><text x="80.9118%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (92 samples, 0.09%)</title><rect x="80.6618%" y="1845" width="0.0857%" height="15" fill="rgb(234,160,10)" fg:x="86605" fg:w="92"/><text x="80.9118%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (92 samples, 0.09%)</title><rect x="80.6618%" y="1829" width="0.0857%" height="15" fill="rgb(212,66,25)" fg:x="86605" fg:w="92"/><text x="80.9118%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (87 samples, 0.08%)</title><rect x="80.6665%" y="1813" width="0.0810%" height="15" fill="rgb(254,121,18)" fg:x="86610" fg:w="87"/><text x="80.9165%" y="1823.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (17 samples, 0.02%)</title><rect x="80.7680%" y="1797" width="0.0158%" height="15" fill="rgb(219,127,1)" fg:x="86719" fg:w="17"/><text x="81.0180%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.02%)</title><rect x="80.7671%" y="1845" width="0.0196%" height="15" fill="rgb(219,224,42)" fg:x="86718" fg:w="21"/><text x="81.0171%" y="1855.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.02%)</title><rect x="80.7671%" y="1829" width="0.0196%" height="15" fill="rgb(253,130,22)" fg:x="86718" fg:w="21"/><text x="81.0171%" y="1839.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.02%)</title><rect x="80.7671%" y="1813" width="0.0196%" height="15" fill="rgb(253,39,28)" fg:x="86718" fg:w="21"/><text x="81.0171%" y="1823.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (27 samples, 0.03%)</title><rect x="80.7652%" y="1893" width="0.0251%" height="15" fill="rgb(231,126,37)" fg:x="86716" fg:w="27"/><text x="81.0152%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (27 samples, 0.03%)</title><rect x="80.7652%" y="1877" width="0.0251%" height="15" fill="rgb(251,145,14)" fg:x="86716" fg:w="27"/><text x="81.0152%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (27 samples, 0.03%)</title><rect x="80.7652%" y="1861" width="0.0251%" height="15" fill="rgb(229,164,30)" fg:x="86716" fg:w="27"/><text x="81.0152%" y="1871.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (12 samples, 0.01%)</title><rect x="80.8137%" y="1653" width="0.0112%" height="15" fill="rgb(233,227,54)" fg:x="86768" fg:w="12"/><text x="81.0637%" y="1663.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (17 samples, 0.02%)</title><rect x="80.8099%" y="1701" width="0.0158%" height="15" fill="rgb(240,94,22)" fg:x="86764" fg:w="17"/><text x="81.0599%" y="1711.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (17 samples, 0.02%)</title><rect x="80.8099%" y="1685" width="0.0158%" height="15" fill="rgb(217,56,16)" fg:x="86764" fg:w="17"/><text x="81.0599%" y="1695.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (13 samples, 0.01%)</title><rect x="80.8137%" y="1669" width="0.0121%" height="15" fill="rgb(229,133,38)" fg:x="86768" fg:w="13"/><text x="81.0637%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (24 samples, 0.02%)</title><rect x="80.8071%" y="1717" width="0.0224%" height="15" fill="rgb(225,139,35)" fg:x="86761" fg:w="24"/><text x="81.0571%" y="1727.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (27 samples, 0.03%)</title><rect x="80.8062%" y="1765" width="0.0251%" height="15" fill="rgb(223,100,16)" fg:x="86760" fg:w="27"/><text x="81.0562%" y="1775.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (27 samples, 0.03%)</title><rect x="80.8062%" y="1749" width="0.0251%" height="15" fill="rgb(207,43,50)" fg:x="86760" fg:w="27"/><text x="81.0562%" y="1759.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (27 samples, 0.03%)</title><rect x="80.8062%" y="1733" width="0.0251%" height="15" fill="rgb(237,221,9)" fg:x="86760" fg:w="27"/><text x="81.0562%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (41 samples, 0.04%)</title><rect x="80.7950%" y="1893" width="0.0382%" height="15" fill="rgb(236,134,24)" fg:x="86748" fg:w="41"/><text x="81.0450%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (41 samples, 0.04%)</title><rect x="80.7950%" y="1877" width="0.0382%" height="15" fill="rgb(222,173,4)" fg:x="86748" fg:w="41"/><text x="81.0450%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (38 samples, 0.04%)</title><rect x="80.7978%" y="1861" width="0.0354%" height="15" fill="rgb(234,144,52)" fg:x="86751" fg:w="38"/><text x="81.0478%" y="1871.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (34 samples, 0.03%)</title><rect x="80.8015%" y="1845" width="0.0317%" height="15" fill="rgb(223,41,7)" fg:x="86755" fg:w="34"/><text x="81.0515%" y="1855.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.03%)</title><rect x="80.8015%" y="1829" width="0.0317%" height="15" fill="rgb(226,143,9)" fg:x="86755" fg:w="34"/><text x="81.0515%" y="1839.50"></text></g><g><title>std::panicking::try (34 samples, 0.03%)</title><rect x="80.8015%" y="1813" width="0.0317%" height="15" fill="rgb(234,43,37)" fg:x="86755" fg:w="34"/><text x="81.0515%" y="1823.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.03%)</title><rect x="80.8015%" y="1797" width="0.0317%" height="15" fill="rgb(224,188,11)" fg:x="86755" fg:w="34"/><text x="81.0515%" y="1807.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (34 samples, 0.03%)</title><rect x="80.8015%" y="1781" width="0.0317%" height="15" fill="rgb(233,113,28)" fg:x="86755" fg:w="34"/><text x="81.0515%" y="1791.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.02%)</title><rect x="80.8379%" y="1813" width="0.0224%" height="15" fill="rgb(215,16,1)" fg:x="86794" fg:w="24"/><text x="81.0879%" y="1823.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.02%)</title><rect x="80.8379%" y="1797" width="0.0224%" height="15" fill="rgb(238,74,38)" fg:x="86794" fg:w="24"/><text x="81.0879%" y="1807.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="80.8444%" y="1781" width="0.0158%" height="15" fill="rgb(221,66,35)" fg:x="86801" fg:w="17"/><text x="81.0944%" y="1791.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="80.8444%" y="1765" width="0.0158%" height="15" fill="rgb(251,225,2)" fg:x="86801" fg:w="17"/><text x="81.0944%" y="1775.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="80.8500%" y="1749" width="0.0102%" height="15" fill="rgb(240,169,18)" fg:x="86807" fg:w="11"/><text x="81.1000%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="80.8500%" y="1733" width="0.0102%" height="15" fill="rgb(243,130,50)" fg:x="86807" fg:w="11"/><text x="81.1000%" y="1743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.01%)</title><rect x="80.8500%" y="1717" width="0.0102%" height="15" fill="rgb(228,75,13)" fg:x="86807" fg:w="11"/><text x="81.1000%" y="1727.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="80.8500%" y="1701" width="0.0102%" height="15" fill="rgb(252,95,35)" fg:x="86807" fg:w="11"/><text x="81.1000%" y="1711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="80.8500%" y="1685" width="0.0102%" height="15" fill="rgb(222,180,54)" fg:x="86807" fg:w="11"/><text x="81.1000%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (11 samples, 0.01%)</title><rect x="80.8500%" y="1669" width="0.0102%" height="15" fill="rgb(250,110,34)" fg:x="86807" fg:w="11"/><text x="81.1000%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.01%)</title><rect x="80.8621%" y="1765" width="0.0140%" height="15" fill="rgb(208,100,21)" fg:x="86820" fg:w="15"/><text x="81.1121%" y="1775.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (15 samples, 0.01%)</title><rect x="80.8621%" y="1749" width="0.0140%" height="15" fill="rgb(209,123,47)" fg:x="86820" fg:w="15"/><text x="81.1121%" y="1759.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (15 samples, 0.01%)</title><rect x="80.8621%" y="1733" width="0.0140%" height="15" fill="rgb(237,147,9)" fg:x="86820" fg:w="15"/><text x="81.1121%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (142 samples, 0.13%)</title><rect x="80.7475%" y="1925" width="0.1323%" height="15" fill="rgb(228,206,23)" fg:x="86697" fg:w="142"/><text x="80.9975%" y="1935.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (133 samples, 0.12%)</title><rect x="80.7559%" y="1909" width="0.1239%" height="15" fill="rgb(217,174,46)" fg:x="86706" fg:w="133"/><text x="81.0059%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (50 samples, 0.05%)</title><rect x="80.8332%" y="1893" width="0.0466%" height="15" fill="rgb(231,126,21)" fg:x="86789" fg:w="50"/><text x="81.0832%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (46 samples, 0.04%)</title><rect x="80.8369%" y="1877" width="0.0428%" height="15" fill="rgb(245,26,1)" fg:x="86793" fg:w="46"/><text x="81.0869%" y="1887.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (46 samples, 0.04%)</title><rect x="80.8369%" y="1861" width="0.0428%" height="15" fill="rgb(224,138,39)" fg:x="86793" fg:w="46"/><text x="81.0869%" y="1871.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (46 samples, 0.04%)</title><rect x="80.8369%" y="1845" width="0.0428%" height="15" fill="rgb(208,97,3)" fg:x="86793" fg:w="46"/><text x="81.0869%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (46 samples, 0.04%)</title><rect x="80.8369%" y="1829" width="0.0428%" height="15" fill="rgb(222,77,29)" fg:x="86793" fg:w="46"/><text x="81.0869%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.02%)</title><rect x="80.8602%" y="1813" width="0.0196%" height="15" fill="rgb(243,188,36)" fg:x="86818" fg:w="21"/><text x="81.1102%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.02%)</title><rect x="80.8602%" y="1797" width="0.0196%" height="15" fill="rgb(218,214,3)" fg:x="86818" fg:w="21"/><text x="81.1102%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.02%)</title><rect x="80.8602%" y="1781" width="0.0196%" height="15" fill="rgb(211,183,45)" fg:x="86818" fg:w="21"/><text x="81.1102%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (28 samples, 0.03%)</title><rect x="80.8798%" y="1909" width="0.0261%" height="15" fill="rgb(230,218,25)" fg:x="86839" fg:w="28"/><text x="81.1298%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (28 samples, 0.03%)</title><rect x="80.8798%" y="1893" width="0.0261%" height="15" fill="rgb(233,86,6)" fg:x="86839" fg:w="28"/><text x="81.1298%" y="1903.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (28 samples, 0.03%)</title><rect x="80.8798%" y="1877" width="0.0261%" height="15" fill="rgb(220,59,24)" fg:x="86839" fg:w="28"/><text x="81.1298%" y="1887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (28 samples, 0.03%)</title><rect x="80.8798%" y="1861" width="0.0261%" height="15" fill="rgb(227,60,1)" fg:x="86839" fg:w="28"/><text x="81.1298%" y="1871.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28 samples, 0.03%)</title><rect x="80.8798%" y="1845" width="0.0261%" height="15" fill="rgb(216,212,54)" fg:x="86839" fg:w="28"/><text x="81.1298%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.02%)</title><rect x="80.8872%" y="1829" width="0.0186%" height="15" fill="rgb(227,81,54)" fg:x="86847" fg:w="20"/><text x="81.1372%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.02%)</title><rect x="80.8872%" y="1813" width="0.0186%" height="15" fill="rgb(206,204,43)" fg:x="86847" fg:w="20"/><text x="81.1372%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (20 samples, 0.02%)</title><rect x="80.8872%" y="1797" width="0.0186%" height="15" fill="rgb(219,29,26)" fg:x="86847" fg:w="20"/><text x="81.1372%" y="1807.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.02%)</title><rect x="80.9059%" y="1845" width="0.0168%" height="15" fill="rgb(252,40,36)" fg:x="86867" fg:w="18"/><text x="81.1559%" y="1855.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.02%)</title><rect x="80.9059%" y="1829" width="0.0168%" height="15" fill="rgb(224,205,39)" fg:x="86867" fg:w="18"/><text x="81.1559%" y="1839.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.01%)</title><rect x="80.9087%" y="1813" width="0.0140%" height="15" fill="rgb(222,13,21)" fg:x="86870" fg:w="15"/><text x="81.1587%" y="1823.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="80.9087%" y="1797" width="0.0140%" height="15" fill="rgb(243,139,6)" fg:x="86870" fg:w="15"/><text x="81.1587%" y="1807.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (38,521 samples, 35.88%)</title><rect x="45.0544%" y="1973" width="35.8775%" height="15" fill="rgb(237,101,11)" fg:x="48374" fg:w="38521"/><text x="45.3044%" y="1983.50">aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_funct..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (290 samples, 0.27%)</title><rect x="80.6618%" y="1957" width="0.2701%" height="15" fill="rgb(254,49,28)" fg:x="86605" fg:w="290"/><text x="80.9118%" y="1967.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (290 samples, 0.27%)</title><rect x="80.6618%" y="1941" width="0.2701%" height="15" fill="rgb(223,41,21)" fg:x="86605" fg:w="290"/><text x="80.9118%" y="1951.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (56 samples, 0.05%)</title><rect x="80.8798%" y="1925" width="0.0522%" height="15" fill="rgb(225,103,29)" fg:x="86839" fg:w="56"/><text x="81.1298%" y="1935.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (28 samples, 0.03%)</title><rect x="80.9059%" y="1909" width="0.0261%" height="15" fill="rgb(244,82,43)" fg:x="86867" fg:w="28"/><text x="81.1559%" y="1919.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (28 samples, 0.03%)</title><rect x="80.9059%" y="1893" width="0.0261%" height="15" fill="rgb(217,39,3)" fg:x="86867" fg:w="28"/><text x="81.1559%" y="1903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (28 samples, 0.03%)</title><rect x="80.9059%" y="1877" width="0.0261%" height="15" fill="rgb(239,128,25)" fg:x="86867" fg:w="28"/><text x="81.1559%" y="1887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28 samples, 0.03%)</title><rect x="80.9059%" y="1861" width="0.0261%" height="15" fill="rgb(210,192,37)" fg:x="86867" fg:w="28"/><text x="81.1559%" y="1871.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (341 samples, 0.32%)</title><rect x="80.9412%" y="1829" width="0.3176%" height="15" fill="rgb(219,98,18)" fg:x="86905" fg:w="341"/><text x="81.1912%" y="1839.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (341 samples, 0.32%)</title><rect x="80.9412%" y="1813" width="0.3176%" height="15" fill="rgb(224,228,38)" fg:x="86905" fg:w="341"/><text x="81.1912%" y="1823.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (341 samples, 0.32%)</title><rect x="80.9412%" y="1797" width="0.3176%" height="15" fill="rgb(241,129,43)" fg:x="86905" fg:w="341"/><text x="81.1912%" y="1807.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (338 samples, 0.31%)</title><rect x="80.9440%" y="1781" width="0.3148%" height="15" fill="rgb(223,8,51)" fg:x="86908" fg:w="338"/><text x="81.1940%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (77 samples, 0.07%)</title><rect x="81.1871%" y="1765" width="0.0717%" height="15" fill="rgb(233,76,24)" fg:x="87169" fg:w="77"/><text x="81.4371%" y="1775.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (353 samples, 0.33%)</title><rect x="80.9329%" y="1877" width="0.3288%" height="15" fill="rgb(219,115,10)" fg:x="86896" fg:w="353"/><text x="81.1829%" y="1887.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (351 samples, 0.33%)</title><rect x="80.9347%" y="1861" width="0.3269%" height="15" fill="rgb(222,137,12)" fg:x="86898" fg:w="351"/><text x="81.1847%" y="1871.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (350 samples, 0.33%)</title><rect x="80.9357%" y="1845" width="0.3260%" height="15" fill="rgb(216,192,16)" fg:x="86899" fg:w="350"/><text x="81.1857%" y="1855.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (357 samples, 0.33%)</title><rect x="80.9319%" y="1909" width="0.3325%" height="15" fill="rgb(247,6,27)" fg:x="86895" fg:w="357"/><text x="81.1819%" y="1919.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (357 samples, 0.33%)</title><rect x="80.9319%" y="1893" width="0.3325%" height="15" fill="rgb(254,39,44)" fg:x="86895" fg:w="357"/><text x="81.1819%" y="1903.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (57 samples, 0.05%)</title><rect x="81.2998%" y="1717" width="0.0531%" height="15" fill="rgb(251,116,35)" fg:x="87290" fg:w="57"/><text x="81.5498%" y="1727.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (17 samples, 0.02%)</title><rect x="81.3948%" y="1669" width="0.0158%" height="15" fill="rgb(208,61,44)" fg:x="87392" fg:w="17"/><text x="81.6448%" y="1679.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (17 samples, 0.02%)</title><rect x="81.3948%" y="1653" width="0.0158%" height="15" fill="rgb(250,34,5)" fg:x="87392" fg:w="17"/><text x="81.6448%" y="1663.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (17 samples, 0.02%)</title><rect x="81.3948%" y="1637" width="0.0158%" height="15" fill="rgb(241,40,15)" fg:x="87392" fg:w="17"/><text x="81.6448%" y="1647.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (189 samples, 0.18%)</title><rect x="81.2728%" y="1845" width="0.1760%" height="15" fill="rgb(229,182,2)" fg:x="87261" fg:w="189"/><text x="81.5228%" y="1855.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (189 samples, 0.18%)</title><rect x="81.2728%" y="1829" width="0.1760%" height="15" fill="rgb(244,148,52)" fg:x="87261" fg:w="189"/><text x="81.5228%" y="1839.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (179 samples, 0.17%)</title><rect x="81.2821%" y="1813" width="0.1667%" height="15" fill="rgb(225,211,4)" fg:x="87271" fg:w="179"/><text x="81.5321%" y="1823.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (167 samples, 0.16%)</title><rect x="81.2933%" y="1797" width="0.1555%" height="15" fill="rgb(208,222,47)" fg:x="87283" fg:w="167"/><text x="81.5433%" y="1807.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (167 samples, 0.16%)</title><rect x="81.2933%" y="1781" width="0.1555%" height="15" fill="rgb(233,162,0)" fg:x="87283" fg:w="167"/><text x="81.5433%" y="1791.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (167 samples, 0.16%)</title><rect x="81.2933%" y="1765" width="0.1555%" height="15" fill="rgb(241,54,13)" fg:x="87283" fg:w="167"/><text x="81.5433%" y="1775.50"></text></g><g><title>std::io::Write::write_all (166 samples, 0.15%)</title><rect x="81.2942%" y="1749" width="0.1546%" height="15" fill="rgb(213,89,18)" fg:x="87284" fg:w="166"/><text x="81.5442%" y="1759.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (166 samples, 0.15%)</title><rect x="81.2942%" y="1733" width="0.1546%" height="15" fill="rgb(215,170,37)" fg:x="87284" fg:w="166"/><text x="81.5442%" y="1743.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (103 samples, 0.10%)</title><rect x="81.3529%" y="1717" width="0.0959%" height="15" fill="rgb(216,133,15)" fg:x="87347" fg:w="103"/><text x="81.6029%" y="1727.50"></text></g><g><title>tiny_keccak::Buffer::xorin (58 samples, 0.05%)</title><rect x="81.3948%" y="1701" width="0.0540%" height="15" fill="rgb(230,42,19)" fg:x="87392" fg:w="58"/><text x="81.6448%" y="1711.50"></text></g><g><title>tiny_keccak::Buffer::execute (58 samples, 0.05%)</title><rect x="81.3948%" y="1685" width="0.0540%" height="15" fill="rgb(221,103,41)" fg:x="87392" fg:w="58"/><text x="81.6448%" y="1695.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (35 samples, 0.03%)</title><rect x="81.4163%" y="1669" width="0.0326%" height="15" fill="rgb(220,142,31)" fg:x="87415" fg:w="35"/><text x="81.6663%" y="1679.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (25 samples, 0.02%)</title><rect x="81.4256%" y="1653" width="0.0233%" height="15" fill="rgb(239,218,4)" fg:x="87425" fg:w="25"/><text x="81.6756%" y="1663.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (25 samples, 0.02%)</title><rect x="81.4256%" y="1637" width="0.0233%" height="15" fill="rgb(232,16,4)" fg:x="87425" fg:w="25"/><text x="81.6756%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (15 samples, 0.01%)</title><rect x="81.4349%" y="1621" width="0.0140%" height="15" fill="rgb(226,213,25)" fg:x="87435" fg:w="15"/><text x="81.6849%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (12 samples, 0.01%)</title><rect x="81.4488%" y="1845" width="0.0112%" height="15" fill="rgb(235,135,19)" fg:x="87450" fg:w="12"/><text x="81.6988%" y="1855.50"></text></g><g><title>serde::ser::Serializer::collect_seq (12 samples, 0.01%)</title><rect x="81.4488%" y="1829" width="0.0112%" height="15" fill="rgb(240,107,29)" fg:x="87450" fg:w="12"/><text x="81.6988%" y="1839.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (211 samples, 0.20%)</title><rect x="81.2710%" y="1861" width="0.1965%" height="15" fill="rgb(206,164,44)" fg:x="87259" fg:w="211"/><text x="81.5210%" y="1871.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (583 samples, 0.54%)</title><rect x="80.9319%" y="1941" width="0.5430%" height="15" fill="rgb(210,23,48)" fg:x="86895" fg:w="583"/><text x="81.1819%" y="1951.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (583 samples, 0.54%)</title><rect x="80.9319%" y="1925" width="0.5430%" height="15" fill="rgb(212,138,25)" fg:x="86895" fg:w="583"/><text x="81.1819%" y="1935.50"></text></g><g><title>bcs::ser::serialize_into (226 samples, 0.21%)</title><rect x="81.2644%" y="1909" width="0.2105%" height="15" fill="rgb(224,152,3)" fg:x="87252" fg:w="226"/><text x="81.5144%" y="1919.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (226 samples, 0.21%)</title><rect x="81.2644%" y="1893" width="0.2105%" height="15" fill="rgb(214,38,23)" fg:x="87252" fg:w="226"/><text x="81.5144%" y="1903.50"></text></g><g><title>aptos_vm::move_vm_ext::session::_::&lt;impl serde::ser::Serialize for aptos_vm::move_vm_ext::session::SessionId&gt;::serialize (226 samples, 0.21%)</title><rect x="81.2644%" y="1877" width="0.2105%" height="15" fill="rgb(215,161,10)" fg:x="87252" fg:w="226"/><text x="81.5144%" y="1887.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (585 samples, 0.54%)</title><rect x="80.9319%" y="1973" width="0.5449%" height="15" fill="rgb(240,185,7)" fg:x="86895" fg:w="585"/><text x="81.1819%" y="1983.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (585 samples, 0.54%)</title><rect x="80.9319%" y="1957" width="0.5449%" height="15" fill="rgb(244,104,25)" fg:x="86895" fg:w="585"/><text x="81.1819%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="81.5038%" y="1749" width="0.0158%" height="15" fill="rgb(242,140,44)" fg:x="87509" fg:w="17"/><text x="81.7538%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="81.5038%" y="1733" width="0.0158%" height="15" fill="rgb(245,30,19)" fg:x="87509" fg:w="17"/><text x="81.7538%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="81.5038%" y="1717" width="0.0158%" height="15" fill="rgb(219,208,35)" fg:x="87509" fg:w="17"/><text x="81.7538%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="81.4954%" y="1813" width="0.0689%" height="15" fill="rgb(235,200,7)" fg:x="87500" fg:w="74"/><text x="81.7454%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.06%)</title><rect x="81.5038%" y="1797" width="0.0605%" height="15" fill="rgb(220,193,10)" fg:x="87509" fg:w="65"/><text x="81.7538%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.06%)</title><rect x="81.5038%" y="1781" width="0.0605%" height="15" fill="rgb(212,216,39)" fg:x="87509" fg:w="65"/><text x="81.7538%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.06%)</title><rect x="81.5038%" y="1765" width="0.0605%" height="15" fill="rgb(212,134,19)" fg:x="87509" fg:w="65"/><text x="81.7538%" y="1775.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (48 samples, 0.04%)</title><rect x="81.5196%" y="1749" width="0.0447%" height="15" fill="rgb(230,57,24)" fg:x="87526" fg:w="48"/><text x="81.7696%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.04%)</title><rect x="81.5196%" y="1733" width="0.0447%" height="15" fill="rgb(238,209,37)" fg:x="87526" fg:w="48"/><text x="81.7696%" y="1743.50"></text></g><g><title>[libc.so.6] (47 samples, 0.04%)</title><rect x="81.5206%" y="1717" width="0.0438%" height="15" fill="rgb(247,11,45)" fg:x="87527" fg:w="47"/><text x="81.7706%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (104 samples, 0.10%)</title><rect x="81.4889%" y="1877" width="0.0969%" height="15" fill="rgb(222,126,6)" fg:x="87493" fg:w="104"/><text x="81.7389%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (100 samples, 0.09%)</title><rect x="81.4926%" y="1861" width="0.0931%" height="15" fill="rgb(245,77,24)" fg:x="87497" fg:w="100"/><text x="81.7426%" y="1871.50"></text></g><g><title>alloc::slice::hack::to_vec (100 samples, 0.09%)</title><rect x="81.4926%" y="1845" width="0.0931%" height="15" fill="rgb(227,14,24)" fg:x="87497" fg:w="100"/><text x="81.7426%" y="1855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (100 samples, 0.09%)</title><rect x="81.4926%" y="1829" width="0.0931%" height="15" fill="rgb(211,112,42)" fg:x="87497" fg:w="100"/><text x="81.7426%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="81.5662%" y="1813" width="0.0196%" height="15" fill="rgb(230,103,42)" fg:x="87576" fg:w="21"/><text x="81.8162%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="81.5709%" y="1797" width="0.0149%" height="15" fill="rgb(228,125,42)" fg:x="87581" fg:w="16"/><text x="81.8209%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.01%)</title><rect x="81.5709%" y="1781" width="0.0149%" height="15" fill="rgb(243,33,6)" fg:x="87581" fg:w="16"/><text x="81.8209%" y="1791.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (140 samples, 0.13%)</title><rect x="81.4870%" y="1909" width="0.1304%" height="15" fill="rgb(231,2,40)" fg:x="87491" fg:w="140"/><text x="81.7370%" y="1919.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (140 samples, 0.13%)</title><rect x="81.4870%" y="1893" width="0.1304%" height="15" fill="rgb(224,200,53)" fg:x="87491" fg:w="140"/><text x="81.7370%" y="1903.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="81.5941%" y="1877" width="0.0233%" height="15" fill="rgb(215,116,36)" fg:x="87606" fg:w="25"/><text x="81.8441%" y="1887.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="81.6025%" y="1861" width="0.0149%" height="15" fill="rgb(240,23,51)" fg:x="87615" fg:w="16"/><text x="81.8525%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="81.6025%" y="1845" width="0.0149%" height="15" fill="rgb(221,72,5)" fg:x="87615" fg:w="16"/><text x="81.8525%" y="1855.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="81.6025%" y="1829" width="0.0149%" height="15" fill="rgb(245,142,9)" fg:x="87615" fg:w="16"/><text x="81.8525%" y="1839.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (16 samples, 0.01%)</title><rect x="81.6025%" y="1813" width="0.0149%" height="15" fill="rgb(207,34,16)" fg:x="87615" fg:w="16"/><text x="81.8525%" y="1823.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="81.6072%" y="1797" width="0.0102%" height="15" fill="rgb(252,101,12)" fg:x="87620" fg:w="11"/><text x="81.8572%" y="1807.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="81.6072%" y="1781" width="0.0102%" height="15" fill="rgb(239,89,37)" fg:x="87620" fg:w="11"/><text x="81.8572%" y="1791.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (170 samples, 0.16%)</title><rect x="81.4833%" y="1925" width="0.1583%" height="15" fill="rgb(252,227,37)" fg:x="87487" fg:w="170"/><text x="81.7333%" y="1935.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (16 samples, 0.01%)</title><rect x="81.6267%" y="1909" width="0.0149%" height="15" fill="rgb(212,164,17)" fg:x="87641" fg:w="16"/><text x="81.8767%" y="1919.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="81.6426%" y="1909" width="0.0326%" height="15" fill="rgb(240,86,13)" fg:x="87658" fg:w="35"/><text x="81.8926%" y="1919.50"></text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="81.6426%" y="1893" width="0.0326%" height="15" fill="rgb(233,183,32)" fg:x="87658" fg:w="35"/><text x="81.8926%" y="1903.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="81.6584%" y="1877" width="0.0168%" height="15" fill="rgb(205,201,38)" fg:x="87675" fg:w="18"/><text x="81.9084%" y="1887.50"></text></g><g><title>&lt;aptos_types::transaction::authenticator::TransactionAuthenticator as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="81.6416%" y="1925" width="0.0382%" height="15" fill="rgb(210,122,38)" fg:x="87657" fg:w="41"/><text x="81.8916%" y="1935.50"></text></g><g><title>&lt;once_cell::sync::OnceCell&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="81.6798%" y="1925" width="0.0121%" height="15" fill="rgb(241,174,26)" fg:x="87698" fg:w="13"/><text x="81.9298%" y="1935.50"></text></g><g><title>&lt;aptos_types::transaction::SignatureCheckedTransaction as core::clone::Clone&gt;::clone (238 samples, 0.22%)</title><rect x="81.4787%" y="1957" width="0.2217%" height="15" fill="rgb(219,89,7)" fg:x="87482" fg:w="238"/><text x="81.7287%" y="1967.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (236 samples, 0.22%)</title><rect x="81.4805%" y="1941" width="0.2198%" height="15" fill="rgb(246,9,24)" fg:x="87484" fg:w="236"/><text x="81.7305%" y="1951.50"></text></g><g><title>aptos_types::transaction::SignatureCheckedTransaction::into_inner (13 samples, 0.01%)</title><rect x="81.7003%" y="1957" width="0.0121%" height="15" fill="rgb(205,132,21)" fg:x="87720" fg:w="13"/><text x="81.9503%" y="1967.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn_meta (15 samples, 0.01%)</title><rect x="81.7124%" y="1957" width="0.0140%" height="15" fill="rgb(210,11,17)" fg:x="87733" fg:w="15"/><text x="81.9624%" y="1967.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="81.7767%" y="1909" width="0.0140%" height="15" fill="rgb(226,138,14)" fg:x="87802" fg:w="15"/><text x="82.0267%" y="1919.50"></text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="81.7767%" y="1893" width="0.0140%" height="15" fill="rgb(224,108,44)" fg:x="87802" fg:w="15"/><text x="82.0267%" y="1903.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="81.7767%" y="1877" width="0.0140%" height="15" fill="rgb(247,114,36)" fg:x="87802" fg:w="15"/><text x="82.0267%" y="1887.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::authenticator (43 samples, 0.04%)</title><rect x="81.7534%" y="1941" width="0.0400%" height="15" fill="rgb(231,183,14)" fg:x="87777" fg:w="43"/><text x="82.0034%" y="1951.50"></text></g><g><title>&lt;aptos_types::transaction::authenticator::TransactionAuthenticator as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="81.7739%" y="1925" width="0.0196%" height="15" fill="rgb(218,168,4)" fg:x="87799" fg:w="21"/><text x="82.0239%" y="1935.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::payload (13 samples, 0.01%)</title><rect x="81.8158%" y="1941" width="0.0121%" height="15" fill="rgb(210,8,3)" fg:x="87844" fg:w="13"/><text x="82.0658%" y="1951.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="81.8875%" y="1413" width="0.0140%" height="15" fill="rgb(216,165,0)" fg:x="87921" fg:w="15"/><text x="82.1375%" y="1423.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="81.8838%" y="1429" width="0.0186%" height="15" fill="rgb(245,120,5)" fg:x="87917" fg:w="20"/><text x="82.1338%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.03%)</title><rect x="81.8773%" y="1493" width="0.0261%" height="15" fill="rgb(249,121,32)" fg:x="87910" fg:w="28"/><text x="82.1273%" y="1503.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.03%)</title><rect x="81.8773%" y="1477" width="0.0261%" height="15" fill="rgb(211,55,33)" fg:x="87910" fg:w="28"/><text x="82.1273%" y="1487.50"></text></g><g><title>alloc::alloc::realloc (27 samples, 0.03%)</title><rect x="81.8782%" y="1461" width="0.0251%" height="15" fill="rgb(254,46,35)" fg:x="87911" fg:w="27"/><text x="82.1282%" y="1471.50"></text></g><g><title>realloc (24 samples, 0.02%)</title><rect x="81.8810%" y="1445" width="0.0224%" height="15" fill="rgb(213,213,19)" fg:x="87914" fg:w="24"/><text x="82.1310%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="81.8754%" y="1509" width="0.0298%" height="15" fill="rgb(207,152,44)" fg:x="87908" fg:w="32"/><text x="82.1254%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (42 samples, 0.04%)</title><rect x="81.8680%" y="1573" width="0.0391%" height="15" fill="rgb(227,195,36)" fg:x="87900" fg:w="42"/><text x="82.1180%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.04%)</title><rect x="81.8680%" y="1557" width="0.0391%" height="15" fill="rgb(210,137,36)" fg:x="87900" fg:w="42"/><text x="82.1180%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.04%)</title><rect x="81.8717%" y="1541" width="0.0354%" height="15" fill="rgb(253,47,47)" fg:x="87904" fg:w="38"/><text x="82.1217%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.03%)</title><rect x="81.8736%" y="1525" width="0.0335%" height="15" fill="rgb(230,147,18)" fg:x="87906" fg:w="36"/><text x="82.1236%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (54 samples, 0.05%)</title><rect x="81.8596%" y="1733" width="0.0503%" height="15" fill="rgb(247,33,49)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (54 samples, 0.05%)</title><rect x="81.8596%" y="1717" width="0.0503%" height="15" fill="rgb(239,26,29)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (54 samples, 0.05%)</title><rect x="81.8596%" y="1701" width="0.0503%" height="15" fill="rgb(245,145,52)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (54 samples, 0.05%)</title><rect x="81.8596%" y="1685" width="0.0503%" height="15" fill="rgb(224,139,32)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (54 samples, 0.05%)</title><rect x="81.8596%" y="1669" width="0.0503%" height="15" fill="rgb(238,202,19)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (54 samples, 0.05%)</title><rect x="81.8596%" y="1653" width="0.0503%" height="15" fill="rgb(249,211,53)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1663.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (54 samples, 0.05%)</title><rect x="81.8596%" y="1637" width="0.0503%" height="15" fill="rgb(237,229,33)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (54 samples, 0.05%)</title><rect x="81.8596%" y="1621" width="0.0503%" height="15" fill="rgb(208,97,40)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (54 samples, 0.05%)</title><rect x="81.8596%" y="1605" width="0.0503%" height="15" fill="rgb(254,36,16)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (54 samples, 0.05%)</title><rect x="81.8596%" y="1589" width="0.0503%" height="15" fill="rgb(221,7,12)" fg:x="87891" fg:w="54"/><text x="82.1096%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="81.9388%" y="1461" width="0.0177%" height="15" fill="rgb(205,11,12)" fg:x="87976" fg:w="19"/><text x="82.1888%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.02%)</title><rect x="81.9388%" y="1445" width="0.0177%" height="15" fill="rgb(227,72,28)" fg:x="87976" fg:w="19"/><text x="82.1888%" y="1455.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.02%)</title><rect x="81.9388%" y="1429" width="0.0177%" height="15" fill="rgb(228,7,34)" fg:x="87976" fg:w="19"/><text x="82.1888%" y="1439.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.02%)</title><rect x="81.9388%" y="1413" width="0.0177%" height="15" fill="rgb(230,52,42)" fg:x="87976" fg:w="19"/><text x="82.1888%" y="1423.50"></text></g><g><title>realloc (19 samples, 0.02%)</title><rect x="81.9388%" y="1397" width="0.0177%" height="15" fill="rgb(219,177,53)" fg:x="87976" fg:w="19"/><text x="82.1888%" y="1407.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="81.9415%" y="1381" width="0.0149%" height="15" fill="rgb(243,196,34)" fg:x="87979" fg:w="16"/><text x="82.1915%" y="1391.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="81.9425%" y="1365" width="0.0140%" height="15" fill="rgb(213,66,49)" fg:x="87980" fg:w="15"/><text x="82.1925%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="81.9332%" y="1525" width="0.0242%" height="15" fill="rgb(233,11,50)" fg:x="87970" fg:w="26"/><text x="82.1832%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="81.9332%" y="1509" width="0.0242%" height="15" fill="rgb(235,190,6)" fg:x="87970" fg:w="26"/><text x="82.1832%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.02%)</title><rect x="81.9341%" y="1493" width="0.0233%" height="15" fill="rgb(212,64,44)" fg:x="87971" fg:w="25"/><text x="82.1841%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.02%)</title><rect x="81.9350%" y="1477" width="0.0224%" height="15" fill="rgb(206,95,44)" fg:x="87972" fg:w="24"/><text x="82.1850%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (33 samples, 0.03%)</title><rect x="81.9294%" y="1637" width="0.0307%" height="15" fill="rgb(227,136,25)" fg:x="87966" fg:w="33"/><text x="82.1794%" y="1647.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (33 samples, 0.03%)</title><rect x="81.9294%" y="1621" width="0.0307%" height="15" fill="rgb(206,178,17)" fg:x="87966" fg:w="33"/><text x="82.1794%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (33 samples, 0.03%)</title><rect x="81.9294%" y="1605" width="0.0307%" height="15" fill="rgb(208,168,35)" fg:x="87966" fg:w="33"/><text x="82.1794%" y="1615.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (30 samples, 0.03%)</title><rect x="81.9322%" y="1589" width="0.0279%" height="15" fill="rgb(213,210,40)" fg:x="87969" fg:w="30"/><text x="82.1822%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.03%)</title><rect x="81.9322%" y="1573" width="0.0279%" height="15" fill="rgb(236,60,6)" fg:x="87969" fg:w="30"/><text x="82.1822%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.03%)</title><rect x="81.9322%" y="1557" width="0.0279%" height="15" fill="rgb(220,186,36)" fg:x="87969" fg:w="30"/><text x="82.1822%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.03%)</title><rect x="81.9322%" y="1541" width="0.0279%" height="15" fill="rgb(225,120,49)" fg:x="87969" fg:w="30"/><text x="82.1822%" y="1551.50"></text></g><g><title>&lt;aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (56 samples, 0.05%)</title><rect x="81.9220%" y="1669" width="0.0522%" height="15" fill="rgb(250,115,20)" fg:x="87958" fg:w="56"/><text x="82.1720%" y="1679.50"></text></g><g><title>aptos_types::serde_helper::vec_bytes::serialize (56 samples, 0.05%)</title><rect x="81.9220%" y="1653" width="0.0522%" height="15" fill="rgb(207,214,23)" fg:x="87958" fg:w="56"/><text x="82.1720%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="81.9816%" y="1477" width="0.0261%" height="15" fill="rgb(240,9,18)" fg:x="88022" fg:w="28"/><text x="82.2316%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="81.9816%" y="1461" width="0.0261%" height="15" fill="rgb(232,170,48)" fg:x="88022" fg:w="28"/><text x="82.2316%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.02%)</title><rect x="81.9872%" y="1445" width="0.0205%" height="15" fill="rgb(236,149,23)" fg:x="88028" fg:w="22"/><text x="82.2372%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.02%)</title><rect x="81.9872%" y="1429" width="0.0205%" height="15" fill="rgb(210,125,42)" fg:x="88028" fg:w="22"/><text x="82.2372%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="81.9872%" y="1413" width="0.0205%" height="15" fill="rgb(207,201,52)" fg:x="88028" fg:w="22"/><text x="82.2372%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.02%)</title><rect x="81.9872%" y="1397" width="0.0205%" height="15" fill="rgb(250,187,37)" fg:x="88028" fg:w="22"/><text x="82.2372%" y="1407.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.02%)</title><rect x="81.9872%" y="1381" width="0.0205%" height="15" fill="rgb(214,186,2)" fg:x="88028" fg:w="22"/><text x="82.2372%" y="1391.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.02%)</title><rect x="81.9872%" y="1365" width="0.0205%" height="15" fill="rgb(207,189,15)" fg:x="88028" fg:w="22"/><text x="82.2372%" y="1375.50"></text></g><g><title>realloc (22 samples, 0.02%)</title><rect x="81.9872%" y="1349" width="0.0205%" height="15" fill="rgb(221,99,21)" fg:x="88028" fg:w="22"/><text x="82.2372%" y="1359.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="81.9937%" y="1333" width="0.0140%" height="15" fill="rgb(212,67,18)" fg:x="88035" fg:w="15"/><text x="82.2437%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (36 samples, 0.03%)</title><rect x="81.9760%" y="1589" width="0.0335%" height="15" fill="rgb(226,24,24)" fg:x="88016" fg:w="36"/><text x="82.2260%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (36 samples, 0.03%)</title><rect x="81.9760%" y="1573" width="0.0335%" height="15" fill="rgb(252,123,31)" fg:x="88016" fg:w="36"/><text x="82.2260%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (36 samples, 0.03%)</title><rect x="81.9760%" y="1557" width="0.0335%" height="15" fill="rgb(251,227,47)" fg:x="88016" fg:w="36"/><text x="82.2260%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (36 samples, 0.03%)</title><rect x="81.9760%" y="1541" width="0.0335%" height="15" fill="rgb(233,84,53)" fg:x="88016" fg:w="36"/><text x="82.2260%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.03%)</title><rect x="81.9760%" y="1525" width="0.0335%" height="15" fill="rgb(228,57,19)" fg:x="88016" fg:w="36"/><text x="82.2260%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.03%)</title><rect x="81.9760%" y="1509" width="0.0335%" height="15" fill="rgb(251,81,5)" fg:x="88016" fg:w="36"/><text x="82.2260%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.03%)</title><rect x="81.9760%" y="1493" width="0.0335%" height="15" fill="rgb(236,211,27)" fg:x="88016" fg:w="36"/><text x="82.2260%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (39 samples, 0.04%)</title><rect x="81.9741%" y="1637" width="0.0363%" height="15" fill="rgb(218,21,6)" fg:x="88014" fg:w="39"/><text x="82.2241%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (39 samples, 0.04%)</title><rect x="81.9741%" y="1621" width="0.0363%" height="15" fill="rgb(239,104,19)" fg:x="88014" fg:w="39"/><text x="82.2241%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (37 samples, 0.03%)</title><rect x="81.9760%" y="1605" width="0.0345%" height="15" fill="rgb(234,179,27)" fg:x="88016" fg:w="37"/><text x="82.2260%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (108 samples, 0.10%)</title><rect x="81.9173%" y="1685" width="0.1006%" height="15" fill="rgb(221,154,39)" fg:x="87953" fg:w="108"/><text x="82.1673%" y="1695.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::ModuleId&gt;::serialize (47 samples, 0.04%)</title><rect x="81.9741%" y="1669" width="0.0438%" height="15" fill="rgb(228,190,1)" fg:x="88014" fg:w="47"/><text x="82.2241%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 0.04%)</title><rect x="81.9741%" y="1653" width="0.0438%" height="15" fill="rgb(244,122,33)" fg:x="88014" fg:w="47"/><text x="82.2241%" y="1663.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (114 samples, 0.11%)</title><rect x="81.9127%" y="1701" width="0.1062%" height="15" fill="rgb(227,56,37)" fg:x="87948" fg:w="114"/><text x="82.1627%" y="1711.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (119 samples, 0.11%)</title><rect x="81.9099%" y="1733" width="0.1108%" height="15" fill="rgb(207,158,16)" fg:x="87945" fg:w="119"/><text x="82.1599%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (117 samples, 0.11%)</title><rect x="81.9117%" y="1717" width="0.1090%" height="15" fill="rgb(251,222,30)" fg:x="87947" fg:w="117"/><text x="82.1617%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.01%)</title><rect x="82.0235%" y="1573" width="0.0149%" height="15" fill="rgb(240,22,49)" fg:x="88067" fg:w="16"/><text x="82.2735%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.01%)</title><rect x="82.0244%" y="1557" width="0.0140%" height="15" fill="rgb(224,207,37)" fg:x="88068" fg:w="15"/><text x="82.2744%" y="1567.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.01%)</title><rect x="82.0244%" y="1541" width="0.0140%" height="15" fill="rgb(249,188,40)" fg:x="88068" fg:w="15"/><text x="82.2744%" y="1551.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.01%)</title><rect x="82.0244%" y="1525" width="0.0140%" height="15" fill="rgb(254,141,11)" fg:x="88068" fg:w="15"/><text x="82.2744%" y="1535.50"></text></g><g><title>realloc (15 samples, 0.01%)</title><rect x="82.0244%" y="1509" width="0.0140%" height="15" fill="rgb(231,177,6)" fg:x="88068" fg:w="15"/><text x="82.2744%" y="1519.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="82.0272%" y="1493" width="0.0112%" height="15" fill="rgb(241,6,16)" fg:x="88071" fg:w="12"/><text x="82.2772%" y="1503.50"></text></g><g><title>bcs::ser::to_bytes (204 samples, 0.19%)</title><rect x="81.8493%" y="1797" width="0.1900%" height="15" fill="rgb(230,50,14)" fg:x="87880" fg:w="204"/><text x="82.0993%" y="1807.50"></text></g><g><title>bcs::ser::serialize_into (204 samples, 0.19%)</title><rect x="81.8493%" y="1781" width="0.1900%" height="15" fill="rgb(254,36,3)" fg:x="87880" fg:w="204"/><text x="82.0993%" y="1791.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (204 samples, 0.19%)</title><rect x="81.8493%" y="1765" width="0.1900%" height="15" fill="rgb(226,149,37)" fg:x="87880" fg:w="204"/><text x="82.0993%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (196 samples, 0.18%)</title><rect x="81.8568%" y="1749" width="0.1825%" height="15" fill="rgb(253,49,27)" fg:x="87888" fg:w="196"/><text x="82.1068%" y="1759.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (20 samples, 0.02%)</title><rect x="82.0207%" y="1733" width="0.0186%" height="15" fill="rgb(249,182,52)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (20 samples, 0.02%)</title><rect x="82.0207%" y="1717" width="0.0186%" height="15" fill="rgb(223,42,15)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1727.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (20 samples, 0.02%)</title><rect x="82.0207%" y="1701" width="0.0186%" height="15" fill="rgb(232,31,42)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.02%)</title><rect x="82.0207%" y="1685" width="0.0186%" height="15" fill="rgb(233,56,46)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.02%)</title><rect x="82.0207%" y="1669" width="0.0186%" height="15" fill="rgb(241,143,21)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.02%)</title><rect x="82.0207%" y="1653" width="0.0186%" height="15" fill="rgb(251,222,15)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 0.02%)</title><rect x="82.0207%" y="1637" width="0.0186%" height="15" fill="rgb(242,101,40)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.02%)</title><rect x="82.0207%" y="1621" width="0.0186%" height="15" fill="rgb(247,60,44)" fg:x="88064" fg:w="20"/><text x="82.2707%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="82.0226%" y="1605" width="0.0168%" height="15" fill="rgb(254,48,47)" fg:x="88066" fg:w="18"/><text x="82.2726%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="82.0235%" y="1589" width="0.0158%" height="15" fill="rgb(253,30,33)" fg:x="88067" fg:w="17"/><text x="82.2735%" y="1599.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (223 samples, 0.21%)</title><rect x="81.8382%" y="1861" width="0.2077%" height="15" fill="rgb(253,214,47)" fg:x="87868" fg:w="223"/><text x="82.0882%" y="1871.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (223 samples, 0.21%)</title><rect x="81.8382%" y="1845" width="0.2077%" height="15" fill="rgb(241,108,29)" fg:x="87868" fg:w="223"/><text x="82.0882%" y="1855.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (211 samples, 0.20%)</title><rect x="81.8493%" y="1829" width="0.1965%" height="15" fill="rgb(240,36,2)" fg:x="87880" fg:w="211"/><text x="82.0993%" y="1839.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len::{{closure}} (211 samples, 0.20%)</title><rect x="81.8493%" y="1813" width="0.1965%" height="15" fill="rgb(243,198,24)" fg:x="87880" fg:w="211"/><text x="82.0993%" y="1823.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len (242 samples, 0.23%)</title><rect x="81.8279%" y="1941" width="0.2254%" height="15" fill="rgb(225,98,27)" fg:x="87857" fg:w="242"/><text x="82.0779%" y="1951.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (236 samples, 0.22%)</title><rect x="81.8335%" y="1925" width="0.2198%" height="15" fill="rgb(208,86,30)" fg:x="87863" fg:w="236"/><text x="82.0835%" y="1935.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (236 samples, 0.22%)</title><rect x="81.8335%" y="1909" width="0.2198%" height="15" fill="rgb(242,157,11)" fg:x="87863" fg:w="236"/><text x="82.0835%" y="1919.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (235 samples, 0.22%)</title><rect x="81.8344%" y="1893" width="0.2189%" height="15" fill="rgb(244,84,16)" fg:x="87864" fg:w="235"/><text x="82.0844%" y="1903.50"></text></g><g><title>once_cell::imp::initialize_or_wait (235 samples, 0.22%)</title><rect x="81.8344%" y="1877" width="0.2189%" height="15" fill="rgb(247,20,46)" fg:x="87864" fg:w="235"/><text x="82.0844%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.01%)</title><rect x="82.0943%" y="1893" width="0.0102%" height="15" fill="rgb(240,157,20)" fg:x="88143" fg:w="11"/><text x="82.3443%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="82.0943%" y="1877" width="0.0102%" height="15" fill="rgb(212,151,38)" fg:x="88143" fg:w="11"/><text x="82.3443%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="82.0943%" y="1861" width="0.0102%" height="15" fill="rgb(233,197,14)" fg:x="88143" fg:w="11"/><text x="82.3443%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="82.0943%" y="1845" width="0.0102%" height="15" fill="rgb(226,148,28)" fg:x="88143" fg:w="11"/><text x="82.3443%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="82.0943%" y="1829" width="0.0102%" height="15" fill="rgb(244,141,30)" fg:x="88143" fg:w="11"/><text x="82.3443%" y="1839.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::public_key_bytes (49 samples, 0.05%)</title><rect x="82.0831%" y="1909" width="0.0456%" height="15" fill="rgb(215,73,38)" fg:x="88131" fg:w="49"/><text x="82.3331%" y="1919.50"></text></g><g><title>aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey::to_bytes (26 samples, 0.02%)</title><rect x="82.1045%" y="1893" width="0.0242%" height="15" fill="rgb(230,148,29)" fg:x="88154" fg:w="26"/><text x="82.3545%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (55 samples, 0.05%)</title><rect x="82.1390%" y="1829" width="0.0512%" height="15" fill="rgb(250,41,52)" fg:x="88191" fg:w="55"/><text x="82.3890%" y="1839.50"></text></g><g><title>alloc::alloc::Global::grow_impl (55 samples, 0.05%)</title><rect x="82.1390%" y="1813" width="0.0512%" height="15" fill="rgb(215,48,1)" fg:x="88191" fg:w="55"/><text x="82.3890%" y="1823.50"></text></g><g><title>alloc::alloc::realloc (55 samples, 0.05%)</title><rect x="82.1390%" y="1797" width="0.0512%" height="15" fill="rgb(205,223,38)" fg:x="88191" fg:w="55"/><text x="82.3890%" y="1807.50"></text></g><g><title>realloc (53 samples, 0.05%)</title><rect x="82.1409%" y="1781" width="0.0494%" height="15" fill="rgb(213,51,8)" fg:x="88193" fg:w="53"/><text x="82.3909%" y="1791.50"></text></g><g><title>[libc.so.6] (48 samples, 0.04%)</title><rect x="82.1455%" y="1765" width="0.0447%" height="15" fill="rgb(248,53,11)" fg:x="88198" fg:w="48"/><text x="82.3955%" y="1775.50"></text></g><g><title>[libc.so.6] (39 samples, 0.04%)</title><rect x="82.1539%" y="1749" width="0.0363%" height="15" fill="rgb(218,140,4)" fg:x="88207" fg:w="39"/><text x="82.4039%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (59 samples, 0.05%)</title><rect x="82.1381%" y="1845" width="0.0550%" height="15" fill="rgb(248,161,31)" fg:x="88190" fg:w="59"/><text x="82.3881%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (66 samples, 0.06%)</title><rect x="82.1334%" y="1877" width="0.0615%" height="15" fill="rgb(239,88,32)" fg:x="88185" fg:w="66"/><text x="82.3834%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (65 samples, 0.06%)</title><rect x="82.1343%" y="1861" width="0.0605%" height="15" fill="rgb(234,14,28)" fg:x="88186" fg:w="65"/><text x="82.3843%" y="1871.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key_preimage (121 samples, 0.11%)</title><rect x="82.0831%" y="1925" width="0.1127%" height="15" fill="rgb(235,173,11)" fg:x="88131" fg:w="121"/><text x="82.3331%" y="1935.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (72 samples, 0.07%)</title><rect x="82.1288%" y="1909" width="0.0671%" height="15" fill="rgb(222,70,2)" fg:x="88180" fg:w="72"/><text x="82.3788%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (69 samples, 0.06%)</title><rect x="82.1315%" y="1893" width="0.0643%" height="15" fill="rgb(228,196,41)" fg:x="88183" fg:w="69"/><text x="82.3815%" y="1903.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (352 samples, 0.33%)</title><rect x="82.2554%" y="1829" width="0.3278%" height="15" fill="rgb(249,19,9)" fg:x="88316" fg:w="352"/><text x="82.5054%" y="1839.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (351 samples, 0.33%)</title><rect x="82.2564%" y="1813" width="0.3269%" height="15" fill="rgb(221,16,43)" fg:x="88317" fg:w="351"/><text x="82.5064%" y="1823.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (351 samples, 0.33%)</title><rect x="82.2564%" y="1797" width="0.3269%" height="15" fill="rgb(225,207,6)" fg:x="88317" fg:w="351"/><text x="82.5064%" y="1807.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (349 samples, 0.33%)</title><rect x="82.2582%" y="1781" width="0.3251%" height="15" fill="rgb(249,32,32)" fg:x="88319" fg:w="349"/><text x="82.5082%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (59 samples, 0.05%)</title><rect x="82.5283%" y="1765" width="0.0550%" height="15" fill="rgb(232,163,43)" fg:x="88609" fg:w="59"/><text x="82.7783%" y="1775.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (382 samples, 0.36%)</title><rect x="82.2312%" y="1877" width="0.3558%" height="15" fill="rgb(236,158,54)" fg:x="88290" fg:w="382"/><text x="82.4812%" y="1887.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (366 samples, 0.34%)</title><rect x="82.2461%" y="1861" width="0.3409%" height="15" fill="rgb(205,126,44)" fg:x="88306" fg:w="366"/><text x="82.4961%" y="1871.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (364 samples, 0.34%)</title><rect x="82.2480%" y="1845" width="0.3390%" height="15" fill="rgb(210,162,12)" fg:x="88308" fg:w="364"/><text x="82.4980%" y="1855.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (393 samples, 0.37%)</title><rect x="82.2312%" y="1893" width="0.3660%" height="15" fill="rgb(218,156,48)" fg:x="88290" fg:w="393"/><text x="82.4812%" y="1903.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (16 samples, 0.01%)</title><rect x="82.5972%" y="1893" width="0.0149%" height="15" fill="rgb(248,210,3)" fg:x="88683" fg:w="16"/><text x="82.8472%" y="1903.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (475 samples, 0.44%)</title><rect x="82.1958%" y="1925" width="0.4424%" height="15" fill="rgb(212,43,27)" fg:x="88252" fg:w="475"/><text x="82.4458%" y="1935.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (459 samples, 0.43%)</title><rect x="82.2107%" y="1909" width="0.4275%" height="15" fill="rgb(241,52,6)" fg:x="88268" fg:w="459"/><text x="82.4607%" y="1919.50"></text></g><g><title>tiny_keccak::sha3::Sha3::v256 (28 samples, 0.03%)</title><rect x="82.6121%" y="1893" width="0.0261%" height="15" fill="rgb(222,178,35)" fg:x="88699" fg:w="28"/><text x="82.8621%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="82.6382%" y="1861" width="0.0140%" height="15" fill="rgb(205,121,46)" fg:x="88727" fg:w="15"/><text x="82.8882%" y="1871.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="82.6382%" y="1845" width="0.0140%" height="15" fill="rgb(249,67,1)" fg:x="88727" fg:w="15"/><text x="82.8882%" y="1855.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="82.6401%" y="1829" width="0.0121%" height="15" fill="rgb(238,168,42)" fg:x="88729" fg:w="13"/><text x="82.8901%" y="1839.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (626 samples, 0.58%)</title><rect x="82.0701%" y="1941" width="0.5830%" height="15" fill="rgb(205,36,48)" fg:x="88117" fg:w="626"/><text x="82.3201%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::authenticator::AuthenticationKeyPreimage&gt; (16 samples, 0.01%)</title><rect x="82.6382%" y="1925" width="0.0149%" height="15" fill="rgb(240,85,12)" fg:x="88727" fg:w="16"/><text x="82.8882%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="82.6382%" y="1909" width="0.0149%" height="15" fill="rgb(245,27,39)" fg:x="88727" fg:w="16"/><text x="82.8882%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="82.6382%" y="1893" width="0.0149%" height="15" fill="rgb(218,129,34)" fg:x="88727" fg:w="16"/><text x="82.8882%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="82.6382%" y="1877" width="0.0149%" height="15" fill="rgb(221,157,12)" fg:x="88727" fg:w="16"/><text x="82.8882%" y="1887.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::to_vec (18 samples, 0.02%)</title><rect x="82.6531%" y="1941" width="0.0168%" height="15" fill="rgb(213,206,20)" fg:x="88743" fg:w="18"/><text x="82.9031%" y="1951.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::sender (23 samples, 0.02%)</title><rect x="82.6839%" y="1941" width="0.0214%" height="15" fill="rgb(227,115,30)" fg:x="88776" fg:w="23"/><text x="82.9339%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::authenticator::TransactionAuthenticator&gt; (26 samples, 0.02%)</title><rect x="82.7099%" y="1941" width="0.0242%" height="15" fill="rgb(221,40,47)" fg:x="88804" fg:w="26"/><text x="82.9599%" y="1951.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (1,083 samples, 1.01%)</title><rect x="81.7264%" y="1957" width="1.0087%" height="15" fill="rgb(239,96,49)" fg:x="87748" fg:w="1083"/><text x="81.9764%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="82.7649%" y="1797" width="0.0214%" height="15" fill="rgb(223,24,38)" fg:x="88863" fg:w="23"/><text x="83.0149%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="82.7649%" y="1781" width="0.0214%" height="15" fill="rgb(242,35,45)" fg:x="88863" fg:w="23"/><text x="83.0149%" y="1791.50"></text></g><g><title>cfree (23 samples, 0.02%)</title><rect x="82.7649%" y="1765" width="0.0214%" height="15" fill="rgb(236,20,9)" fg:x="88863" fg:w="23"/><text x="83.0149%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="82.7640%" y="1877" width="0.0326%" height="15" fill="rgb(239,124,8)" fg:x="88862" fg:w="35"/><text x="83.0140%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (35 samples, 0.03%)</title><rect x="82.7640%" y="1861" width="0.0326%" height="15" fill="rgb(228,92,29)" fg:x="88862" fg:w="35"/><text x="83.0140%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (34 samples, 0.03%)</title><rect x="82.7649%" y="1845" width="0.0317%" height="15" fill="rgb(251,53,39)" fg:x="88863" fg:w="34"/><text x="83.0149%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (34 samples, 0.03%)</title><rect x="82.7649%" y="1829" width="0.0317%" height="15" fill="rgb(224,44,10)" fg:x="88863" fg:w="34"/><text x="83.0149%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="82.7649%" y="1813" width="0.0317%" height="15" fill="rgb(254,10,15)" fg:x="88863" fg:w="34"/><text x="83.0149%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="82.7863%" y="1797" width="0.0102%" height="15" fill="rgb(245,173,6)" fg:x="88886" fg:w="11"/><text x="83.0363%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (36 samples, 0.03%)</title><rect x="82.7640%" y="1893" width="0.0335%" height="15" fill="rgb(228,74,0)" fg:x="88862" fg:w="36"/><text x="83.0140%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (11 samples, 0.01%)</title><rect x="82.7975%" y="1893" width="0.0102%" height="15" fill="rgb(206,138,29)" fg:x="88898" fg:w="11"/><text x="83.0475%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (14 samples, 0.01%)</title><rect x="82.8077%" y="1893" width="0.0130%" height="15" fill="rgb(253,27,43)" fg:x="88909" fg:w="14"/><text x="83.0577%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.01%)</title><rect x="82.8077%" y="1877" width="0.0130%" height="15" fill="rgb(231,73,0)" fg:x="88909" fg:w="14"/><text x="83.0577%" y="1887.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="82.8077%" y="1861" width="0.0130%" height="15" fill="rgb(218,9,23)" fg:x="88909" fg:w="14"/><text x="83.0577%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="82.8077%" y="1845" width="0.0130%" height="15" fill="rgb(251,55,29)" fg:x="88909" fg:w="14"/><text x="83.0577%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="82.8087%" y="1829" width="0.0121%" height="15" fill="rgb(223,180,22)" fg:x="88910" fg:w="13"/><text x="83.0587%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (104 samples, 0.10%)</title><rect x="82.7425%" y="1941" width="0.0969%" height="15" fill="rgb(223,29,21)" fg:x="88839" fg:w="104"/><text x="82.9925%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (84 samples, 0.08%)</title><rect x="82.7612%" y="1925" width="0.0782%" height="15" fill="rgb(251,103,37)" fg:x="88859" fg:w="84"/><text x="83.0112%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (81 samples, 0.08%)</title><rect x="82.7640%" y="1909" width="0.0754%" height="15" fill="rgb(214,11,21)" fg:x="88862" fg:w="81"/><text x="83.0140%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (20 samples, 0.02%)</title><rect x="82.8208%" y="1893" width="0.0186%" height="15" fill="rgb(205,137,13)" fg:x="88923" fg:w="20"/><text x="83.0708%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (20 samples, 0.02%)</title><rect x="82.8208%" y="1877" width="0.0186%" height="15" fill="rgb(225,58,47)" fg:x="88923" fg:w="20"/><text x="83.0708%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (20 samples, 0.02%)</title><rect x="82.8208%" y="1861" width="0.0186%" height="15" fill="rgb(222,197,14)" fg:x="88923" fg:w="20"/><text x="83.0708%" y="1871.50"></text></g><g><title>alloc::alloc::box_free (20 samples, 0.02%)</title><rect x="82.8208%" y="1845" width="0.0186%" height="15" fill="rgb(215,210,33)" fg:x="88923" fg:w="20"/><text x="83.0708%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="82.8208%" y="1829" width="0.0186%" height="15" fill="rgb(242,13,9)" fg:x="88923" fg:w="20"/><text x="83.0708%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="82.8245%" y="1813" width="0.0149%" height="15" fill="rgb(218,31,39)" fg:x="88927" fg:w="16"/><text x="83.0745%" y="1823.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="82.8291%" y="1797" width="0.0102%" height="15" fill="rgb(211,214,23)" fg:x="88932" fg:w="11"/><text x="83.0791%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (114 samples, 0.11%)</title><rect x="82.7351%" y="1957" width="0.1062%" height="15" fill="rgb(237,92,14)" fg:x="88831" fg:w="114"/><text x="82.9851%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="82.8590%" y="1893" width="0.0121%" height="15" fill="rgb(220,78,5)" fg:x="88964" fg:w="13"/><text x="83.1090%" y="1903.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="82.8590%" y="1877" width="0.0121%" height="15" fill="rgb(237,23,21)" fg:x="88964" fg:w="13"/><text x="83.1090%" y="1887.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="82.8590%" y="1861" width="0.0121%" height="15" fill="rgb(251,207,51)" fg:x="88964" fg:w="13"/><text x="83.1090%" y="1871.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn (1,498 samples, 1.40%)</title><rect x="81.4768%" y="1973" width="1.3952%" height="15" fill="rgb(249,206,18)" fg:x="87480" fg:w="1498"/><text x="81.7268%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::transaction_metadata::TransactionMetadata&gt; (33 samples, 0.03%)</title><rect x="82.8413%" y="1957" width="0.0307%" height="15" fill="rgb(236,20,19)" fg:x="88945" fg:w="33"/><text x="83.0913%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="82.8590%" y="1941" width="0.0130%" height="15" fill="rgb(214,227,29)" fg:x="88964" fg:w="14"/><text x="83.1090%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="82.8590%" y="1925" width="0.0130%" height="15" fill="rgb(209,183,4)" fg:x="88964" fg:w="14"/><text x="83.1090%" y="1935.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="82.8590%" y="1909" width="0.0130%" height="15" fill="rgb(233,111,23)" fg:x="88964" fg:w="14"/><text x="83.1090%" y="1919.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::authenticator (13 samples, 0.01%)</title><rect x="82.8822%" y="1957" width="0.0121%" height="15" fill="rgb(238,121,27)" fg:x="88989" fg:w="13"/><text x="83.1322%" y="1967.50"></text></g><g><title>&lt;aptos_types::transaction::authenticator::TransactionAuthenticator as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="82.8841%" y="1941" width="0.0102%" height="15" fill="rgb(236,120,41)" fg:x="88991" fg:w="11"/><text x="83.1341%" y="1951.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key_preimage (27 samples, 0.03%)</title><rect x="82.8981%" y="1941" width="0.0251%" height="15" fill="rgb(241,143,10)" fg:x="89006" fg:w="27"/><text x="83.1481%" y="1951.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (22 samples, 0.02%)</title><rect x="82.9027%" y="1925" width="0.0205%" height="15" fill="rgb(224,86,31)" fg:x="89011" fg:w="22"/><text x="83.1527%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.02%)</title><rect x="82.9037%" y="1909" width="0.0196%" height="15" fill="rgb(236,212,27)" fg:x="89012" fg:w="21"/><text x="83.1537%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.02%)</title><rect x="82.9037%" y="1893" width="0.0196%" height="15" fill="rgb(219,43,51)" fg:x="89012" fg:w="21"/><text x="83.1537%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.02%)</title><rect x="82.9046%" y="1877" width="0.0186%" height="15" fill="rgb(232,216,8)" fg:x="89013" fg:w="20"/><text x="83.1546%" y="1887.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="82.9055%" y="1861" width="0.0177%" height="15" fill="rgb(206,222,39)" fg:x="89014" fg:w="19"/><text x="83.1555%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.02%)</title><rect x="82.9065%" y="1845" width="0.0168%" height="15" fill="rgb(209,149,48)" fg:x="89015" fg:w="18"/><text x="83.1565%" y="1855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.02%)</title><rect x="82.9065%" y="1829" width="0.0168%" height="15" fill="rgb(229,155,21)" fg:x="89015" fg:w="18"/><text x="83.1565%" y="1839.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.02%)</title><rect x="82.9065%" y="1813" width="0.0168%" height="15" fill="rgb(246,152,26)" fg:x="89015" fg:w="18"/><text x="83.1565%" y="1823.50"></text></g><g><title>realloc (17 samples, 0.02%)</title><rect x="82.9074%" y="1797" width="0.0158%" height="15" fill="rgb(206,70,42)" fg:x="89016" fg:w="17"/><text x="83.1574%" y="1807.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="82.9092%" y="1781" width="0.0140%" height="15" fill="rgb(236,9,11)" fg:x="89018" fg:w="15"/><text x="83.1592%" y="1791.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (180 samples, 0.17%)</title><rect x="82.9335%" y="1845" width="0.1676%" height="15" fill="rgb(238,145,47)" fg:x="89044" fg:w="180"/><text x="83.1835%" y="1855.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (179 samples, 0.17%)</title><rect x="82.9344%" y="1829" width="0.1667%" height="15" fill="rgb(252,189,7)" fg:x="89045" fg:w="179"/><text x="83.1844%" y="1839.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (179 samples, 0.17%)</title><rect x="82.9344%" y="1813" width="0.1667%" height="15" fill="rgb(254,168,51)" fg:x="89045" fg:w="179"/><text x="83.1844%" y="1823.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (175 samples, 0.16%)</title><rect x="82.9381%" y="1797" width="0.1630%" height="15" fill="rgb(227,105,46)" fg:x="89049" fg:w="175"/><text x="83.1881%" y="1807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (36 samples, 0.03%)</title><rect x="83.0676%" y="1781" width="0.0335%" height="15" fill="rgb(227,74,30)" fg:x="89188" fg:w="36"/><text x="83.3176%" y="1791.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (190 samples, 0.18%)</title><rect x="82.9269%" y="1893" width="0.1770%" height="15" fill="rgb(206,212,44)" fg:x="89037" fg:w="190"/><text x="83.1769%" y="1903.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (187 samples, 0.17%)</title><rect x="82.9297%" y="1877" width="0.1742%" height="15" fill="rgb(252,69,11)" fg:x="89040" fg:w="187"/><text x="83.1797%" y="1887.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (186 samples, 0.17%)</title><rect x="82.9307%" y="1861" width="0.1732%" height="15" fill="rgb(239,116,0)" fg:x="89041" fg:w="186"/><text x="83.1807%" y="1871.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (193 samples, 0.18%)</title><rect x="82.9269%" y="1909" width="0.1798%" height="15" fill="rgb(246,189,23)" fg:x="89037" fg:w="193"/><text x="83.1769%" y="1919.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (198 samples, 0.18%)</title><rect x="82.9232%" y="1941" width="0.1844%" height="15" fill="rgb(229,50,41)" fg:x="89033" fg:w="198"/><text x="83.1732%" y="1951.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (194 samples, 0.18%)</title><rect x="82.9269%" y="1925" width="0.1807%" height="15" fill="rgb(214,66,37)" fg:x="89037" fg:w="194"/><text x="83.1769%" y="1935.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (230 samples, 0.21%)</title><rect x="82.8981%" y="1957" width="0.2142%" height="15" fill="rgb(226,28,6)" fg:x="89006" fg:w="230"/><text x="83.1481%" y="1967.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (58,473 samples, 54.46%)</title><rect x="28.6687%" y="2053" width="54.4604%" height="15" fill="rgb(239,154,0)" fg:x="30781" fg:w="58473"/><text x="28.9187%" y="2063.50">aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (57,373 samples, 53.44%)</title><rect x="29.6932%" y="2037" width="53.4358%" height="15" fill="rgb(233,97,11)" fg:x="31881" fg:w="57373"/><text x="29.9432%" y="2047.50">aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute</text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (57,373 samples, 53.44%)</title><rect x="29.6932%" y="2021" width="53.4358%" height="15" fill="rgb(236,215,16)" fg:x="31881" fg:w="57373"/><text x="29.9432%" y="2031.50">&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::tas..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (57,373 samples, 53.44%)</title><rect x="29.6932%" y="2005" width="53.4358%" height="15" fill="rgb(246,188,29)" fg:x="31881" fg:w="57373"/><text x="29.9432%" y="2015.50">&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_tra..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (57,373 samples, 53.44%)</title><rect x="29.6932%" y="1989" width="53.4358%" height="15" fill="rgb(207,7,29)" fg:x="31881" fg:w="57373"/><text x="29.9432%" y="1999.50">aptos_vm::aptos_vm::AptosVM::execute_user_transaction</text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (276 samples, 0.26%)</title><rect x="82.8720%" y="1973" width="0.2571%" height="15" fill="rgb(238,112,43)" fg:x="88978" fg:w="276"/><text x="83.1220%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::run (11 samples, 0.01%)</title><rect x="83.1477%" y="1749" width="0.0102%" height="15" fill="rgb(230,110,32)" fg:x="89274" fg:w="11"/><text x="83.3977%" y="1759.50"></text></g><g><title>move_compiler::command_line::compiler::run (17 samples, 0.02%)</title><rect x="83.1440%" y="1765" width="0.0158%" height="15" fill="rgb(218,197,32)" fg:x="89270" fg:w="17"/><text x="83.3940%" y="1775.50"></text></g><g><title>move_compiler::command_line::compiler::run (18 samples, 0.02%)</title><rect x="83.1440%" y="1781" width="0.0168%" height="15" fill="rgb(252,61,9)" fg:x="89270" fg:w="18"/><text x="83.3940%" y="1791.50"></text></g><g><title>move_compiler::command_line::compiler::run (20 samples, 0.02%)</title><rect x="83.1430%" y="1797" width="0.0186%" height="15" fill="rgb(244,140,14)" fg:x="89269" fg:w="20"/><text x="83.3930%" y="1807.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (44 samples, 0.04%)</title><rect x="83.1291%" y="2037" width="0.0410%" height="15" fill="rgb(216,14,47)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="2047.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (44 samples, 0.04%)</title><rect x="83.1291%" y="2021" width="0.0410%" height="15" fill="rgb(224,130,52)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="2031.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (44 samples, 0.04%)</title><rect x="83.1291%" y="2005" width="0.0410%" height="15" fill="rgb(210,229,51)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="2015.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (44 samples, 0.04%)</title><rect x="83.1291%" y="1989" width="0.0410%" height="15" fill="rgb(242,13,9)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1999.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (44 samples, 0.04%)</title><rect x="83.1291%" y="1973" width="0.0410%" height="15" fill="rgb(252,71,50)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1983.50"></text></g><g><title>once_cell::imp::initialize_or_wait (44 samples, 0.04%)</title><rect x="83.1291%" y="1957" width="0.0410%" height="15" fill="rgb(218,225,6)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1967.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (44 samples, 0.04%)</title><rect x="83.1291%" y="1941" width="0.0410%" height="15" fill="rgb(219,27,35)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1951.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (44 samples, 0.04%)</title><rect x="83.1291%" y="1925" width="0.0410%" height="15" fill="rgb(226,30,1)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1935.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (44 samples, 0.04%)</title><rect x="83.1291%" y="1909" width="0.0410%" height="15" fill="rgb(227,164,34)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1919.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (44 samples, 0.04%)</title><rect x="83.1291%" y="1893" width="0.0410%" height="15" fill="rgb(206,103,4)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1903.50"></text></g><g><title>core::ops::function::FnOnce::call_once (44 samples, 0.04%)</title><rect x="83.1291%" y="1877" width="0.0410%" height="15" fill="rgb(214,166,19)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1887.50"></text></g><g><title>core::ops::function::FnOnce::call_once (44 samples, 0.04%)</title><rect x="83.1291%" y="1861" width="0.0410%" height="15" fill="rgb(240,56,20)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1871.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (44 samples, 0.04%)</title><rect x="83.1291%" y="1845" width="0.0410%" height="15" fill="rgb(224,25,3)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1855.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (44 samples, 0.04%)</title><rect x="83.1291%" y="1829" width="0.0410%" height="15" fill="rgb(216,206,54)" fg:x="89254" fg:w="44"/><text x="83.3791%" y="1839.50"></text></g><g><title>move_compiler::command_line::compiler::run (38 samples, 0.04%)</title><rect x="83.1346%" y="1813" width="0.0354%" height="15" fill="rgb(225,142,10)" fg:x="89260" fg:w="38"/><text x="83.3846%" y="1823.50"></text></g><g><title>aptos_language_e2e_tests::compile::compile_source_module (45 samples, 0.04%)</title><rect x="83.1291%" y="2053" width="0.0419%" height="15" fill="rgb(246,9,18)" fg:x="89254" fg:w="45"/><text x="83.3791%" y="2063.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="83.1831%" y="2053" width="0.0168%" height="15" fill="rgb(247,140,18)" fg:x="89312" fg:w="18"/><text x="83.4331%" y="2063.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (18 samples, 0.02%)</title><rect x="83.1831%" y="2037" width="0.0168%" height="15" fill="rgb(239,184,22)" fg:x="89312" fg:w="18"/><text x="83.4331%" y="2047.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (18 samples, 0.02%)</title><rect x="83.1831%" y="2021" width="0.0168%" height="15" fill="rgb(227,94,44)" fg:x="89312" fg:w="18"/><text x="83.4331%" y="2031.50"></text></g><g><title>move_compiler::command_line::compiler::run (17 samples, 0.02%)</title><rect x="83.1840%" y="2005" width="0.0158%" height="15" fill="rgb(219,43,3)" fg:x="89313" fg:w="17"/><text x="83.4340%" y="2015.50"></text></g><g><title>move_compiler::command_line::compiler::run (16 samples, 0.01%)</title><rect x="83.1849%" y="1989" width="0.0149%" height="15" fill="rgb(210,76,31)" fg:x="89314" fg:w="16"/><text x="83.4349%" y="1999.50"></text></g><g><title>move_compiler::command_line::compiler::run (15 samples, 0.01%)</title><rect x="83.1859%" y="1973" width="0.0140%" height="15" fill="rgb(225,85,12)" fg:x="89315" fg:w="15"/><text x="83.4359%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::run (14 samples, 0.01%)</title><rect x="83.1868%" y="1957" width="0.0130%" height="15" fill="rgb(214,191,28)" fg:x="89316" fg:w="14"/><text x="83.4368%" y="1967.50"></text></g><g><title>move_compiler::command_line::compiler::run (14 samples, 0.01%)</title><rect x="83.1868%" y="1941" width="0.0130%" height="15" fill="rgb(214,43,14)" fg:x="89316" fg:w="14"/><text x="83.4368%" y="1951.50"></text></g><g><title>move_compiler::command_line::compiler::run (14 samples, 0.01%)</title><rect x="83.1868%" y="1925" width="0.0130%" height="15" fill="rgb(253,117,5)" fg:x="89316" fg:w="14"/><text x="83.4368%" y="1935.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (13 samples, 0.01%)</title><rect x="83.2082%" y="1381" width="0.0121%" height="15" fill="rgb(208,124,26)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1391.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (13 samples, 0.01%)</title><rect x="83.2082%" y="1365" width="0.0121%" height="15" fill="rgb(228,208,39)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1375.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (13 samples, 0.01%)</title><rect x="83.2082%" y="1349" width="0.0121%" height="15" fill="rgb(206,180,39)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1359.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (13 samples, 0.01%)</title><rect x="83.2082%" y="1333" width="0.0121%" height="15" fill="rgb(205,111,37)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1343.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.01%)</title><rect x="83.2082%" y="1317" width="0.0121%" height="15" fill="rgb(208,121,24)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="83.2082%" y="1301" width="0.0121%" height="15" fill="rgb(218,215,32)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="83.2082%" y="1285" width="0.0121%" height="15" fill="rgb(244,168,53)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1295.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (13 samples, 0.01%)</title><rect x="83.2082%" y="1269" width="0.0121%" height="15" fill="rgb(214,9,36)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1279.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (13 samples, 0.01%)</title><rect x="83.2082%" y="1253" width="0.0121%" height="15" fill="rgb(231,4,34)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1263.50"></text></g><g><title>bcs::ser::serialize_into (13 samples, 0.01%)</title><rect x="83.2082%" y="1237" width="0.0121%" height="15" fill="rgb(210,83,51)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1247.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.01%)</title><rect x="83.2082%" y="1221" width="0.0121%" height="15" fill="rgb(224,112,1)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1231.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (13 samples, 0.01%)</title><rect x="83.2082%" y="1205" width="0.0121%" height="15" fill="rgb(216,33,41)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.01%)</title><rect x="83.2082%" y="1189" width="0.0121%" height="15" fill="rgb(215,179,42)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1199.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="83.2082%" y="1173" width="0.0121%" height="15" fill="rgb(205,81,48)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1183.50"></text></g><g><title>serde_bytes::serialize (13 samples, 0.01%)</title><rect x="83.2082%" y="1157" width="0.0121%" height="15" fill="rgb(246,17,30)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="83.2082%" y="1141" width="0.0121%" height="15" fill="rgb(226,19,16)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1151.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (13 samples, 0.01%)</title><rect x="83.2082%" y="1125" width="0.0121%" height="15" fill="rgb(207,3,14)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1135.50"></text></g><g><title>std::io::Write::write_all (13 samples, 0.01%)</title><rect x="83.2082%" y="1109" width="0.0121%" height="15" fill="rgb(226,77,12)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1119.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (13 samples, 0.01%)</title><rect x="83.2082%" y="1093" width="0.0121%" height="15" fill="rgb(226,76,25)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (13 samples, 0.01%)</title><rect x="83.2082%" y="1077" width="0.0121%" height="15" fill="rgb(217,216,25)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1087.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (13 samples, 0.01%)</title><rect x="83.2082%" y="1061" width="0.0121%" height="15" fill="rgb(247,127,42)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1071.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (13 samples, 0.01%)</title><rect x="83.2082%" y="1045" width="0.0121%" height="15" fill="rgb(226,10,34)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1055.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (13 samples, 0.01%)</title><rect x="83.2082%" y="1029" width="0.0121%" height="15" fill="rgb(249,78,0)" fg:x="89339" fg:w="13"/><text x="83.4582%" y="1039.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (14 samples, 0.01%)</title><rect x="83.2250%" y="1237" width="0.0130%" height="15" fill="rgb(226,218,38)" fg:x="89357" fg:w="14"/><text x="83.4750%" y="1247.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (14 samples, 0.01%)</title><rect x="83.2250%" y="1221" width="0.0130%" height="15" fill="rgb(240,92,1)" fg:x="89357" fg:w="14"/><text x="83.4750%" y="1231.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="83.2278%" y="1205" width="0.0102%" height="15" fill="rgb(237,224,33)" fg:x="89360" fg:w="11"/><text x="83.4778%" y="1215.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (20 samples, 0.02%)</title><rect x="83.2241%" y="1253" width="0.0186%" height="15" fill="rgb(211,46,1)" fg:x="89356" fg:w="20"/><text x="83.4741%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (24 samples, 0.02%)</title><rect x="83.2231%" y="1301" width="0.0224%" height="15" fill="rgb(239,190,4)" fg:x="89355" fg:w="24"/><text x="83.4731%" y="1311.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (24 samples, 0.02%)</title><rect x="83.2231%" y="1285" width="0.0224%" height="15" fill="rgb(221,50,22)" fg:x="89355" fg:w="24"/><text x="83.4731%" y="1295.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (24 samples, 0.02%)</title><rect x="83.2231%" y="1269" width="0.0224%" height="15" fill="rgb(207,176,8)" fg:x="89355" fg:w="24"/><text x="83.4731%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (42 samples, 0.04%)</title><rect x="83.2082%" y="1397" width="0.0391%" height="15" fill="rgb(244,114,50)" fg:x="89339" fg:w="42"/><text x="83.4582%" y="1407.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (26 samples, 0.02%)</title><rect x="83.2231%" y="1381" width="0.0242%" height="15" fill="rgb(226,206,19)" fg:x="89355" fg:w="26"/><text x="83.4731%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.02%)</title><rect x="83.2231%" y="1365" width="0.0242%" height="15" fill="rgb(208,199,16)" fg:x="89355" fg:w="26"/><text x="83.4731%" y="1375.50"></text></g><g><title>std::panicking::try (26 samples, 0.02%)</title><rect x="83.2231%" y="1349" width="0.0242%" height="15" fill="rgb(208,38,14)" fg:x="89355" fg:w="26"/><text x="83.4731%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.02%)</title><rect x="83.2231%" y="1333" width="0.0242%" height="15" fill="rgb(221,211,49)" fg:x="89355" fg:w="26"/><text x="83.4731%" y="1343.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (26 samples, 0.02%)</title><rect x="83.2231%" y="1317" width="0.0242%" height="15" fill="rgb(227,214,34)" fg:x="89355" fg:w="26"/><text x="83.4731%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (65 samples, 0.06%)</title><rect x="83.2017%" y="1429" width="0.0605%" height="15" fill="rgb(234,5,54)" fg:x="89332" fg:w="65"/><text x="83.4517%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (65 samples, 0.06%)</title><rect x="83.2017%" y="1413" width="0.0605%" height="15" fill="rgb(236,215,22)" fg:x="89332" fg:w="65"/><text x="83.4517%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (16 samples, 0.01%)</title><rect x="83.2473%" y="1397" width="0.0149%" height="15" fill="rgb(244,0,11)" fg:x="89381" fg:w="16"/><text x="83.4973%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (70 samples, 0.07%)</title><rect x="83.1998%" y="1477" width="0.0652%" height="15" fill="rgb(212,140,16)" fg:x="89330" fg:w="70"/><text x="83.4498%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (70 samples, 0.07%)</title><rect x="83.1998%" y="1461" width="0.0652%" height="15" fill="rgb(238,101,37)" fg:x="89330" fg:w="70"/><text x="83.4498%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (68 samples, 0.06%)</title><rect x="83.2017%" y="1445" width="0.0633%" height="15" fill="rgb(247,46,3)" fg:x="89332" fg:w="68"/><text x="83.4517%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (76 samples, 0.07%)</title><rect x="83.1998%" y="1509" width="0.0708%" height="15" fill="rgb(208,106,19)" fg:x="89330" fg:w="76"/><text x="83.4498%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (76 samples, 0.07%)</title><rect x="83.1998%" y="1493" width="0.0708%" height="15" fill="rgb(240,227,15)" fg:x="89330" fg:w="76"/><text x="83.4498%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (95 samples, 0.09%)</title><rect x="83.1998%" y="1605" width="0.0885%" height="15" fill="rgb(226,173,6)" fg:x="89330" fg:w="95"/><text x="83.4498%" y="1615.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (95 samples, 0.09%)</title><rect x="83.1998%" y="1589" width="0.0885%" height="15" fill="rgb(213,191,1)" fg:x="89330" fg:w="95"/><text x="83.4498%" y="1599.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (95 samples, 0.09%)</title><rect x="83.1998%" y="1573" width="0.0885%" height="15" fill="rgb(246,51,36)" fg:x="89330" fg:w="95"/><text x="83.4498%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (95 samples, 0.09%)</title><rect x="83.1998%" y="1557" width="0.0885%" height="15" fill="rgb(238,40,32)" fg:x="89330" fg:w="95"/><text x="83.4498%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (95 samples, 0.09%)</title><rect x="83.1998%" y="1541" width="0.0885%" height="15" fill="rgb(208,126,27)" fg:x="89330" fg:w="95"/><text x="83.4498%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (95 samples, 0.09%)</title><rect x="83.1998%" y="1525" width="0.0885%" height="15" fill="rgb(227,117,38)" fg:x="89330" fg:w="95"/><text x="83.4498%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (19 samples, 0.02%)</title><rect x="83.2706%" y="1509" width="0.0177%" height="15" fill="rgb(232,16,1)" fg:x="89406" fg:w="19"/><text x="83.5206%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (19 samples, 0.02%)</title><rect x="83.2706%" y="1493" width="0.0177%" height="15" fill="rgb(212,111,31)" fg:x="89406" fg:w="19"/><text x="83.5206%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (19 samples, 0.02%)</title><rect x="83.2706%" y="1477" width="0.0177%" height="15" fill="rgb(253,227,2)" fg:x="89406" fg:w="19"/><text x="83.5206%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (98 samples, 0.09%)</title><rect x="83.1998%" y="1813" width="0.0913%" height="15" fill="rgb(216,122,17)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1823.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (98 samples, 0.09%)</title><rect x="83.1998%" y="1797" width="0.0913%" height="15" fill="rgb(227,37,2)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1807.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (98 samples, 0.09%)</title><rect x="83.1998%" y="1781" width="0.0913%" height="15" fill="rgb(244,113,40)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1791.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (98 samples, 0.09%)</title><rect x="83.1998%" y="1765" width="0.0913%" height="15" fill="rgb(217,193,34)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1775.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (98 samples, 0.09%)</title><rect x="83.1998%" y="1749" width="0.0913%" height="15" fill="rgb(212,223,15)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (98 samples, 0.09%)</title><rect x="83.1998%" y="1733" width="0.0913%" height="15" fill="rgb(238,143,18)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1743.50"></text></g><g><title>std::panicking::try (98 samples, 0.09%)</title><rect x="83.1998%" y="1717" width="0.0913%" height="15" fill="rgb(231,18,49)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (98 samples, 0.09%)</title><rect x="83.1998%" y="1701" width="0.0913%" height="15" fill="rgb(249,122,4)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1711.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (98 samples, 0.09%)</title><rect x="83.1998%" y="1685" width="0.0913%" height="15" fill="rgb(245,138,54)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1695.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (98 samples, 0.09%)</title><rect x="83.1998%" y="1669" width="0.0913%" height="15" fill="rgb(218,130,18)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1679.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (98 samples, 0.09%)</title><rect x="83.1998%" y="1653" width="0.0913%" height="15" fill="rgb(235,94,13)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1663.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (98 samples, 0.09%)</title><rect x="83.1998%" y="1637" width="0.0913%" height="15" fill="rgb(247,143,5)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1647.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (98 samples, 0.09%)</title><rect x="83.1998%" y="1621" width="0.0913%" height="15" fill="rgb(212,59,54)" fg:x="89330" fg:w="98"/><text x="83.4498%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (12 samples, 0.01%)</title><rect x="83.2911%" y="1141" width="0.0112%" height="15" fill="rgb(206,121,24)" fg:x="89428" fg:w="12"/><text x="83.5411%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (12 samples, 0.01%)</title><rect x="83.2911%" y="1125" width="0.0112%" height="15" fill="rgb(235,38,8)" fg:x="89428" fg:w="12"/><text x="83.5411%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (14 samples, 0.01%)</title><rect x="83.2911%" y="1189" width="0.0130%" height="15" fill="rgb(227,102,26)" fg:x="89428" fg:w="14"/><text x="83.5411%" y="1199.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (14 samples, 0.01%)</title><rect x="83.2911%" y="1173" width="0.0130%" height="15" fill="rgb(240,183,46)" fg:x="89428" fg:w="14"/><text x="83.5411%" y="1183.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (14 samples, 0.01%)</title><rect x="83.2911%" y="1157" width="0.0130%" height="15" fill="rgb(208,177,23)" fg:x="89428" fg:w="14"/><text x="83.5411%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (17 samples, 0.02%)</title><rect x="83.2911%" y="1221" width="0.0158%" height="15" fill="rgb(216,152,5)" fg:x="89428" fg:w="17"/><text x="83.5411%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (17 samples, 0.02%)</title><rect x="83.2911%" y="1205" width="0.0158%" height="15" fill="rgb(238,199,2)" fg:x="89428" fg:w="17"/><text x="83.5411%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (117 samples, 0.11%)</title><rect x="83.1998%" y="2053" width="0.1090%" height="15" fill="rgb(235,142,28)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="2063.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (117 samples, 0.11%)</title><rect x="83.1998%" y="2037" width="0.1090%" height="15" fill="rgb(225,97,25)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="2047.50"></text></g><g><title>std::panic::catch_unwind (117 samples, 0.11%)</title><rect x="83.1998%" y="2021" width="0.1090%" height="15" fill="rgb(208,75,46)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="2031.50"></text></g><g><title>std::panicking::try (117 samples, 0.11%)</title><rect x="83.1998%" y="2005" width="0.1090%" height="15" fill="rgb(240,136,15)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="2015.50"></text></g><g><title>std::panicking::try::do_call (117 samples, 0.11%)</title><rect x="83.1998%" y="1989" width="0.1090%" height="15" fill="rgb(235,36,27)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1999.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (117 samples, 0.11%)</title><rect x="83.1998%" y="1973" width="0.1090%" height="15" fill="rgb(231,132,23)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1983.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (117 samples, 0.11%)</title><rect x="83.1998%" y="1957" width="0.1090%" height="15" fill="rgb(205,208,20)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1967.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (117 samples, 0.11%)</title><rect x="83.1998%" y="1941" width="0.1090%" height="15" fill="rgb(215,26,40)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1951.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (117 samples, 0.11%)</title><rect x="83.1998%" y="1925" width="0.1090%" height="15" fill="rgb(238,183,34)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1935.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (117 samples, 0.11%)</title><rect x="83.1998%" y="1909" width="0.1090%" height="15" fill="rgb(207,96,10)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1919.50"></text></g><g><title>rayon_core::registry::main_loop (117 samples, 0.11%)</title><rect x="83.1998%" y="1893" width="0.1090%" height="15" fill="rgb(218,88,6)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1903.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (117 samples, 0.11%)</title><rect x="83.1998%" y="1877" width="0.1090%" height="15" fill="rgb(217,22,49)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1887.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (117 samples, 0.11%)</title><rect x="83.1998%" y="1861" width="0.1090%" height="15" fill="rgb(240,195,14)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1871.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (117 samples, 0.11%)</title><rect x="83.1998%" y="1845" width="0.1090%" height="15" fill="rgb(229,48,27)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1855.50"></text></g><g><title>rayon_core::job::JobRef::execute (117 samples, 0.11%)</title><rect x="83.1998%" y="1829" width="0.1090%" height="15" fill="rgb(220,194,45)" fg:x="89330" fg:w="117"/><text x="83.4498%" y="1839.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (19 samples, 0.02%)</title><rect x="83.2911%" y="1813" width="0.0177%" height="15" fill="rgb(252,60,20)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1823.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (19 samples, 0.02%)</title><rect x="83.2911%" y="1797" width="0.0177%" height="15" fill="rgb(244,169,33)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1807.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.02%)</title><rect x="83.2911%" y="1781" width="0.0177%" height="15" fill="rgb(234,141,34)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="83.2911%" y="1765" width="0.0177%" height="15" fill="rgb(241,141,9)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1775.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="83.2911%" y="1749" width="0.0177%" height="15" fill="rgb(246,27,36)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="83.2911%" y="1733" width="0.0177%" height="15" fill="rgb(216,188,42)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1743.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="83.2911%" y="1717" width="0.0177%" height="15" fill="rgb(234,205,22)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1727.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1701" width="0.0177%" height="15" fill="rgb(210,202,32)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1711.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1685" width="0.0177%" height="15" fill="rgb(217,0,48)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1695.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1669" width="0.0177%" height="15" fill="rgb(207,115,37)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1679.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1653" width="0.0177%" height="15" fill="rgb(237,221,44)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1663.50"></text></g><g><title>rayon_core::scope::scope (19 samples, 0.02%)</title><rect x="83.2911%" y="1637" width="0.0177%" height="15" fill="rgb(249,78,2)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="83.2911%" y="1621" width="0.0177%" height="15" fill="rgb(211,169,23)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1631.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1605" width="0.0177%" height="15" fill="rgb(207,116,29)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1615.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (19 samples, 0.02%)</title><rect x="83.2911%" y="1589" width="0.0177%" height="15" fill="rgb(240,84,33)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.02%)</title><rect x="83.2911%" y="1573" width="0.0177%" height="15" fill="rgb(229,224,31)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1583.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (19 samples, 0.02%)</title><rect x="83.2911%" y="1557" width="0.0177%" height="15" fill="rgb(227,90,31)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1567.50"></text></g><g><title>rayon_core::job::JobRef::execute (19 samples, 0.02%)</title><rect x="83.2911%" y="1541" width="0.0177%" height="15" fill="rgb(249,22,41)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1551.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (19 samples, 0.02%)</title><rect x="83.2911%" y="1525" width="0.0177%" height="15" fill="rgb(239,65,11)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1535.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1509" width="0.0177%" height="15" fill="rgb(205,5,23)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1519.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (19 samples, 0.02%)</title><rect x="83.2911%" y="1493" width="0.0177%" height="15" fill="rgb(254,78,52)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1503.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (19 samples, 0.02%)</title><rect x="83.2911%" y="1477" width="0.0177%" height="15" fill="rgb(214,156,33)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1487.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.02%)</title><rect x="83.2911%" y="1461" width="0.0177%" height="15" fill="rgb(208,20,30)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="83.2911%" y="1445" width="0.0177%" height="15" fill="rgb(223,133,18)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1455.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="83.2911%" y="1429" width="0.0177%" height="15" fill="rgb(222,91,41)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="83.2911%" y="1413" width="0.0177%" height="15" fill="rgb(247,137,48)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1423.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="83.2911%" y="1397" width="0.0177%" height="15" fill="rgb(239,156,11)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1407.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1381" width="0.0177%" height="15" fill="rgb(244,56,26)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1391.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="83.2911%" y="1365" width="0.0177%" height="15" fill="rgb(205,131,49)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1375.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (19 samples, 0.02%)</title><rect x="83.2911%" y="1349" width="0.0177%" height="15" fill="rgb(224,0,2)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1359.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (19 samples, 0.02%)</title><rect x="83.2911%" y="1333" width="0.0177%" height="15" fill="rgb(247,59,36)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1343.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (19 samples, 0.02%)</title><rect x="83.2911%" y="1317" width="0.0177%" height="15" fill="rgb(215,4,47)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1327.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (19 samples, 0.02%)</title><rect x="83.2911%" y="1301" width="0.0177%" height="15" fill="rgb(242,72,42)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1311.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (19 samples, 0.02%)</title><rect x="83.2911%" y="1285" width="0.0177%" height="15" fill="rgb(232,145,44)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1295.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (19 samples, 0.02%)</title><rect x="83.2911%" y="1269" width="0.0177%" height="15" fill="rgb(205,108,43)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (19 samples, 0.02%)</title><rect x="83.2911%" y="1253" width="0.0177%" height="15" fill="rgb(215,190,17)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1263.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (19 samples, 0.02%)</title><rect x="83.2911%" y="1237" width="0.0177%" height="15" fill="rgb(223,90,34)" fg:x="89428" fg:w="19"/><text x="83.5411%" y="1247.50"></text></g><g><title>move_compiler::cfgir::absint::AbstractInterpreter::analyze_function (12 samples, 0.01%)</title><rect x="83.3358%" y="1525" width="0.0112%" height="15" fill="rgb(216,25,0)" fg:x="89476" fg:w="12"/><text x="83.5858%" y="1535.50"></text></g><g><title>move_compiler::cfgir::borrows::verify (14 samples, 0.01%)</title><rect x="83.3358%" y="1541" width="0.0130%" height="15" fill="rgb(223,51,28)" fg:x="89476" fg:w="14"/><text x="83.5858%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 0.03%)</title><rect x="83.3274%" y="1701" width="0.0326%" height="15" fill="rgb(227,131,7)" fg:x="89467" fg:w="35"/><text x="83.5774%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (35 samples, 0.03%)</title><rect x="83.3274%" y="1685" width="0.0326%" height="15" fill="rgb(216,72,36)" fg:x="89467" fg:w="35"/><text x="83.5774%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.03%)</title><rect x="83.3274%" y="1669" width="0.0326%" height="15" fill="rgb(243,158,40)" fg:x="89467" fg:w="35"/><text x="83.5774%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (35 samples, 0.03%)</title><rect x="83.3274%" y="1653" width="0.0326%" height="15" fill="rgb(218,60,54)" fg:x="89467" fg:w="35"/><text x="83.5774%" y="1663.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (35 samples, 0.03%)</title><rect x="83.3274%" y="1637" width="0.0326%" height="15" fill="rgb(230,15,46)" fg:x="89467" fg:w="35"/><text x="83.5774%" y="1647.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map::{{closure}} (35 samples, 0.03%)</title><rect x="83.3274%" y="1621" width="0.0326%" height="15" fill="rgb(250,22,26)" fg:x="89467" fg:w="35"/><text x="83.5774%" y="1631.50"></text></g><g><title>move_compiler::cfgir::translate::module::{{closure}} (35 samples, 0.03%)</title><rect x="83.3274%" y="1605" width="0.0326%" height="15" fill="rgb(239,194,40)" fg:x="89467" fg:w="35"/><text x="83.5774%" y="1615.50"></text></g><g><title>move_compiler::cfgir::translate::function (31 samples, 0.03%)</title><rect x="83.3312%" y="1589" width="0.0289%" height="15" fill="rgb(219,62,9)" fg:x="89471" fg:w="31"/><text x="83.5812%" y="1599.50"></text></g><g><title>move_compiler::cfgir::translate::function_body (31 samples, 0.03%)</title><rect x="83.3312%" y="1573" width="0.0289%" height="15" fill="rgb(228,45,21)" fg:x="89471" fg:w="31"/><text x="83.5812%" y="1583.50"></text></g><g><title>move_compiler::cfgir::refine_inference_and_verify (26 samples, 0.02%)</title><rect x="83.3358%" y="1557" width="0.0242%" height="15" fill="rgb(242,56,44)" fg:x="89476" fg:w="26"/><text x="83.5858%" y="1567.50"></text></g><g><title>move_compiler::cfgir::translate::program (38 samples, 0.04%)</title><rect x="83.3274%" y="1941" width="0.0354%" height="15" fill="rgb(239,170,14)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1951.50"></text></g><g><title>move_compiler::cfgir::translate::modules (38 samples, 0.04%)</title><rect x="83.3274%" y="1925" width="0.0354%" height="15" fill="rgb(236,150,13)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1935.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::maybe_from_iter (38 samples, 0.04%)</title><rect x="83.3274%" y="1909" width="0.0354%" height="15" fill="rgb(228,15,30)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.04%)</title><rect x="83.3274%" y="1893" width="0.0354%" height="15" fill="rgb(217,43,28)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1903.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (38 samples, 0.04%)</title><rect x="83.3274%" y="1877" width="0.0354%" height="15" fill="rgb(246,223,1)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1887.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (38 samples, 0.04%)</title><rect x="83.3274%" y="1861" width="0.0354%" height="15" fill="rgb(247,103,7)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1871.50"></text></g><g><title>move_compiler::cfgir::translate::modules::{{closure}} (38 samples, 0.04%)</title><rect x="83.3274%" y="1845" width="0.0354%" height="15" fill="rgb(205,105,39)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1855.50"></text></g><g><title>move_compiler::cfgir::translate::module (38 samples, 0.04%)</title><rect x="83.3274%" y="1829" width="0.0354%" height="15" fill="rgb(216,134,18)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1839.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map (38 samples, 0.04%)</title><rect x="83.3274%" y="1813" width="0.0354%" height="15" fill="rgb(226,139,50)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.04%)</title><rect x="83.3274%" y="1797" width="0.0354%" height="15" fill="rgb(251,152,38)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="83.3274%" y="1781" width="0.0354%" height="15" fill="rgb(222,63,15)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.04%)</title><rect x="83.3274%" y="1765" width="0.0354%" height="15" fill="rgb(212,198,28)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="83.3274%" y="1749" width="0.0354%" height="15" fill="rgb(216,93,38)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="83.3274%" y="1733" width="0.0354%" height="15" fill="rgb(247,202,44)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="83.3274%" y="1717" width="0.0354%" height="15" fill="rgb(237,204,46)" fg:x="89467" fg:w="38"/><text x="83.5774%" y="1727.50"></text></g><g><title>move_compiler::command_line::compiler::run (55 samples, 0.05%)</title><rect x="83.3274%" y="1957" width="0.0512%" height="15" fill="rgb(224,98,48)" fg:x="89467" fg:w="55"/><text x="83.5774%" y="1967.50"></text></g><g><title>move_compiler::command_line::compiler::run (14 samples, 0.01%)</title><rect x="83.3656%" y="1941" width="0.0130%" height="15" fill="rgb(247,105,21)" fg:x="89508" fg:w="14"/><text x="83.6156%" y="1951.50"></text></g><g><title>move_compiler::command_line::compiler::run (69 samples, 0.06%)</title><rect x="83.3163%" y="2005" width="0.0643%" height="15" fill="rgb(212,137,52)" fg:x="89455" fg:w="69"/><text x="83.5663%" y="2015.50"></text></g><g><title>move_compiler::command_line::compiler::run (69 samples, 0.06%)</title><rect x="83.3163%" y="1989" width="0.0643%" height="15" fill="rgb(223,76,33)" fg:x="89455" fg:w="69"/><text x="83.5663%" y="1999.50"></text></g><g><title>move_compiler::command_line::compiler::run (63 samples, 0.06%)</title><rect x="83.3218%" y="1973" width="0.0587%" height="15" fill="rgb(209,156,27)" fg:x="89461" fg:w="63"/><text x="83.5718%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (73 samples, 0.07%)</title><rect x="83.3144%" y="2053" width="0.0680%" height="15" fill="rgb(249,81,54)" fg:x="89453" fg:w="73"/><text x="83.5644%" y="2063.50"></text></g><g><title>move_compiler::command_line::compiler::run (72 samples, 0.07%)</title><rect x="83.3153%" y="2037" width="0.0671%" height="15" fill="rgb(241,46,29)" fg:x="89454" fg:w="72"/><text x="83.5653%" y="2047.50"></text></g><g><title>move_compiler::command_line::compiler::run (72 samples, 0.07%)</title><rect x="83.3153%" y="2021" width="0.0671%" height="15" fill="rgb(213,193,39)" fg:x="89454" fg:w="72"/><text x="83.5653%" y="2031.50"></text></g><g><title>move_compiler::command_line::compiler::run (19 samples, 0.02%)</title><rect x="83.4047%" y="1973" width="0.0177%" height="15" fill="rgb(214,85,16)" fg:x="89550" fg:w="19"/><text x="83.6547%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::run (28 samples, 0.03%)</title><rect x="83.3973%" y="1989" width="0.0261%" height="15" fill="rgb(216,184,17)" fg:x="89542" fg:w="28"/><text x="83.6473%" y="1999.50"></text></g><g><title>move_compiler::command_line::compiler::run (35 samples, 0.03%)</title><rect x="83.3936%" y="2005" width="0.0326%" height="15" fill="rgb(254,219,29)" fg:x="89538" fg:w="35"/><text x="83.6436%" y="2015.50"></text></g><g><title>move_compiler::command_line::compiler::run (46 samples, 0.04%)</title><rect x="83.3861%" y="2037" width="0.0428%" height="15" fill="rgb(209,148,34)" fg:x="89530" fg:w="46"/><text x="83.6361%" y="2047.50"></text></g><g><title>move_compiler::command_line::compiler::run (43 samples, 0.04%)</title><rect x="83.3889%" y="2021" width="0.0400%" height="15" fill="rgb(253,215,11)" fg:x="89533" fg:w="43"/><text x="83.6389%" y="2031.50"></text></g><g><title>move_compiler::command_line::compiler::run (52 samples, 0.05%)</title><rect x="83.3824%" y="2053" width="0.0484%" height="15" fill="rgb(232,126,20)" fg:x="89526" fg:w="52"/><text x="83.6324%" y="2063.50"></text></g><g><title>move_compiler::hlir::translate::exp_impl (19 samples, 0.02%)</title><rect x="83.4476%" y="2037" width="0.0177%" height="15" fill="rgb(248,118,51)" fg:x="89596" fg:w="19"/><text x="83.6976%" y="2047.50"></text></g><g><title>move_compiler::hlir::translate::exp_::exp_loop (20 samples, 0.02%)</title><rect x="83.4476%" y="2053" width="0.0186%" height="15" fill="rgb(226,121,21)" fg:x="89596" fg:w="20"/><text x="83.6976%" y="2063.50"></text></g><g><title>move_compiler::to_bytecode::translate::function_body (20 samples, 0.02%)</title><rect x="83.4951%" y="1845" width="0.0186%" height="15" fill="rgb(216,128,16)" fg:x="89647" fg:w="20"/><text x="83.7451%" y="1855.50"></text></g><g><title>move_compiler::to_bytecode::translate::command (12 samples, 0.01%)</title><rect x="83.5025%" y="1829" width="0.0112%" height="15" fill="rgb(205,17,9)" fg:x="89655" fg:w="12"/><text x="83.7525%" y="1839.50"></text></g><g><title>move_compiler::to_bytecode::translate::program (22 samples, 0.02%)</title><rect x="83.4942%" y="2053" width="0.0205%" height="15" fill="rgb(206,197,21)" fg:x="89646" fg:w="22"/><text x="83.7442%" y="2063.50"></text></g><g><title>move_compiler::to_bytecode::translate::module (21 samples, 0.02%)</title><rect x="83.4951%" y="2037" width="0.0196%" height="15" fill="rgb(212,202,9)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="2047.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.02%)</title><rect x="83.4951%" y="2021" width="0.0196%" height="15" fill="rgb(241,131,50)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="83.4951%" y="2005" width="0.0196%" height="15" fill="rgb(228,115,51)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="83.4951%" y="1989" width="0.0196%" height="15" fill="rgb(237,209,8)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="83.4951%" y="1973" width="0.0196%" height="15" fill="rgb(241,121,28)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21 samples, 0.02%)</title><rect x="83.4951%" y="1957" width="0.0196%" height="15" fill="rgb(238,194,51)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (21 samples, 0.02%)</title><rect x="83.4951%" y="1941" width="0.0196%" height="15" fill="rgb(208,41,39)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="83.4951%" y="1925" width="0.0196%" height="15" fill="rgb(223,95,44)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="83.4951%" y="1909" width="0.0196%" height="15" fill="rgb(253,98,40)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.02%)</title><rect x="83.4951%" y="1893" width="0.0196%" height="15" fill="rgb(210,5,12)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1903.50"></text></g><g><title>move_compiler::to_bytecode::translate::module::{{closure}} (21 samples, 0.02%)</title><rect x="83.4951%" y="1877" width="0.0196%" height="15" fill="rgb(233,201,23)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1887.50"></text></g><g><title>move_compiler::to_bytecode::translate::function (21 samples, 0.02%)</title><rect x="83.4951%" y="1861" width="0.0196%" height="15" fill="rgb(251,68,15)" fg:x="89647" fg:w="21"/><text x="83.7451%" y="1871.50"></text></g><g><title>move_compiler::typing::translate::exp_inner (13 samples, 0.01%)</title><rect x="83.5221%" y="2053" width="0.0121%" height="15" fill="rgb(243,10,46)" fg:x="89676" fg:w="13"/><text x="83.7721%" y="2063.50"></text></g><g><title>move_compiler::typing::translate::module (12 samples, 0.01%)</title><rect x="83.5435%" y="2053" width="0.0112%" height="15" fill="rgb(253,130,44)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="2063.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map (12 samples, 0.01%)</title><rect x="83.5435%" y="2037" width="0.0112%" height="15" fill="rgb(244,5,26)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="2047.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="83.5435%" y="2021" width="0.0112%" height="15" fill="rgb(220,126,20)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="83.5435%" y="2005" width="0.0112%" height="15" fill="rgb(212,188,29)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="83.5435%" y="1989" width="0.0112%" height="15" fill="rgb(227,194,48)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="83.5435%" y="1973" width="0.0112%" height="15" fill="rgb(245,64,28)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="83.5435%" y="1957" width="0.0112%" height="15" fill="rgb(205,44,7)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="83.5435%" y="1941" width="0.0112%" height="15" fill="rgb(213,193,11)" fg:x="89699" fg:w="12"/><text x="83.7935%" y="1951.50"></text></g><g><title>move_compiler::typing::translate::sequence (12 samples, 0.01%)</title><rect x="83.5575%" y="2053" width="0.0112%" height="15" fill="rgb(238,157,6)" fg:x="89714" fg:w="12"/><text x="83.8075%" y="2063.50"></text></g><g><title>move_compiler::command_line::compiler::run (12 samples, 0.01%)</title><rect x="83.5724%" y="1893" width="0.0112%" height="15" fill="rgb(222,73,7)" fg:x="89730" fg:w="12"/><text x="83.8224%" y="1903.50"></text></g><g><title>move_compiler::command_line::compiler::run (12 samples, 0.01%)</title><rect x="83.5724%" y="1877" width="0.0112%" height="15" fill="rgb(224,78,15)" fg:x="89730" fg:w="12"/><text x="83.8224%" y="1887.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (16 samples, 0.01%)</title><rect x="83.5696%" y="2053" width="0.0149%" height="15" fill="rgb(218,149,46)" fg:x="89727" fg:w="16"/><text x="83.8196%" y="2063.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (16 samples, 0.01%)</title><rect x="83.5696%" y="2037" width="0.0149%" height="15" fill="rgb(218,175,44)" fg:x="89727" fg:w="16"/><text x="83.8196%" y="2047.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (16 samples, 0.01%)</title><rect x="83.5696%" y="2021" width="0.0149%" height="15" fill="rgb(215,183,45)" fg:x="89727" fg:w="16"/><text x="83.8196%" y="2031.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="83.5696%" y="2005" width="0.0149%" height="15" fill="rgb(226,116,37)" fg:x="89727" fg:w="16"/><text x="83.8196%" y="2015.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="83.5696%" y="1989" width="0.0149%" height="15" fill="rgb(252,224,12)" fg:x="89727" fg:w="16"/><text x="83.8196%" y="1999.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (16 samples, 0.01%)</title><rect x="83.5696%" y="1973" width="0.0149%" height="15" fill="rgb(232,212,21)" fg:x="89727" fg:w="16"/><text x="83.8196%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (16 samples, 0.01%)</title><rect x="83.5696%" y="1957" width="0.0149%" height="15" fill="rgb(226,191,16)" fg:x="89727" fg:w="16"/><text x="83.8196%" y="1967.50"></text></g><g><title>move_compiler::command_line::compiler::run (14 samples, 0.01%)</title><rect x="83.5715%" y="1941" width="0.0130%" height="15" fill="rgb(231,156,11)" fg:x="89729" fg:w="14"/><text x="83.8215%" y="1951.50"></text></g><g><title>move_compiler::command_line::compiler::run (13 samples, 0.01%)</title><rect x="83.5724%" y="1925" width="0.0121%" height="15" fill="rgb(225,134,49)" fg:x="89730" fg:w="13"/><text x="83.8224%" y="1935.50"></text></g><g><title>move_compiler::command_line::compiler::run (13 samples, 0.01%)</title><rect x="83.5724%" y="1909" width="0.0121%" height="15" fill="rgb(254,55,32)" fg:x="89730" fg:w="13"/><text x="83.8224%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="83.5910%" y="2053" width="0.0158%" height="15" fill="rgb(242,195,29)" fg:x="89750" fg:w="17"/><text x="83.8410%" y="2063.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="83.5910%" y="2037" width="0.0158%" height="15" fill="rgb(210,155,20)" fg:x="89750" fg:w="17"/><text x="83.8410%" y="2047.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="83.5910%" y="2021" width="0.0158%" height="15" fill="rgb(243,170,23)" fg:x="89750" fg:w="17"/><text x="83.8410%" y="2031.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="83.5910%" y="2005" width="0.0158%" height="15" fill="rgb(242,197,51)" fg:x="89750" fg:w="17"/><text x="83.8410%" y="2015.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 0.01%)</title><rect x="83.5929%" y="1989" width="0.0140%" height="15" fill="rgb(248,48,13)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1999.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.01%)</title><rect x="83.5929%" y="1973" width="0.0140%" height="15" fill="rgb(221,185,15)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1983.50"></text></g><g><title>std::panicking::try (15 samples, 0.01%)</title><rect x="83.5929%" y="1957" width="0.0140%" height="15" fill="rgb(244,49,7)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1967.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.01%)</title><rect x="83.5929%" y="1941" width="0.0140%" height="15" fill="rgb(213,182,52)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1951.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="83.5929%" y="1925" width="0.0140%" height="15" fill="rgb(209,15,45)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (15 samples, 0.01%)</title><rect x="83.5929%" y="1909" width="0.0140%" height="15" fill="rgb(233,23,44)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.01%)</title><rect x="83.5929%" y="1893" width="0.0140%" height="15" fill="rgb(220,182,30)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.01%)</title><rect x="83.5929%" y="1877" width="0.0140%" height="15" fill="rgb(219,116,33)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1887.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.01%)</title><rect x="83.5929%" y="1861" width="0.0140%" height="15" fill="rgb(231,15,21)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1871.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.01%)</title><rect x="83.5929%" y="1845" width="0.0140%" height="15" fill="rgb(238,119,25)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1855.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.01%)</title><rect x="83.5929%" y="1829" width="0.0140%" height="15" fill="rgb(232,30,39)" fg:x="89752" fg:w="15"/><text x="83.8429%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.01%)</title><rect x="83.6068%" y="2053" width="0.0140%" height="15" fill="rgb(241,26,30)" fg:x="89767" fg:w="15"/><text x="83.8568%" y="2063.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.01%)</title><rect x="83.6348%" y="1429" width="0.0121%" height="15" fill="rgb(234,154,4)" fg:x="89797" fg:w="13"/><text x="83.8848%" y="1439.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (12 samples, 0.01%)</title><rect x="83.6357%" y="1413" width="0.0112%" height="15" fill="rgb(229,199,39)" fg:x="89798" fg:w="12"/><text x="83.8857%" y="1423.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="83.6367%" y="1397" width="0.0102%" height="15" fill="rgb(236,213,10)" fg:x="89799" fg:w="11"/><text x="83.8867%" y="1407.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="83.6367%" y="1381" width="0.0102%" height="15" fill="rgb(247,28,19)" fg:x="89799" fg:w="11"/><text x="83.8867%" y="1391.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="83.6367%" y="1365" width="0.0102%" height="15" fill="rgb(239,199,24)" fg:x="89799" fg:w="11"/><text x="83.8867%" y="1375.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (11 samples, 0.01%)</title><rect x="83.6367%" y="1349" width="0.0102%" height="15" fill="rgb(246,122,13)" fg:x="89799" fg:w="11"/><text x="83.8867%" y="1359.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (37 samples, 0.03%)</title><rect x="83.6245%" y="1461" width="0.0345%" height="15" fill="rgb(210,203,29)" fg:x="89786" fg:w="37"/><text x="83.8745%" y="1471.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (37 samples, 0.03%)</title><rect x="83.6245%" y="1445" width="0.0345%" height="15" fill="rgb(218,4,50)" fg:x="89786" fg:w="37"/><text x="83.8745%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (41 samples, 0.04%)</title><rect x="83.6217%" y="1509" width="0.0382%" height="15" fill="rgb(236,142,48)" fg:x="89783" fg:w="41"/><text x="83.8717%" y="1519.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (41 samples, 0.04%)</title><rect x="83.6217%" y="1493" width="0.0382%" height="15" fill="rgb(245,173,2)" fg:x="89783" fg:w="41"/><text x="83.8717%" y="1503.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (41 samples, 0.04%)</title><rect x="83.6217%" y="1477" width="0.0382%" height="15" fill="rgb(244,196,18)" fg:x="89783" fg:w="41"/><text x="83.8717%" y="1487.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (11 samples, 0.01%)</title><rect x="83.6674%" y="1413" width="0.0102%" height="15" fill="rgb(221,27,33)" fg:x="89832" fg:w="11"/><text x="83.9174%" y="1423.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (11 samples, 0.01%)</title><rect x="83.6674%" y="1397" width="0.0102%" height="15" fill="rgb(210,206,16)" fg:x="89832" fg:w="11"/><text x="83.9174%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (78 samples, 0.07%)</title><rect x="83.6217%" y="1541" width="0.0726%" height="15" fill="rgb(238,161,34)" fg:x="89783" fg:w="78"/><text x="83.8717%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (78 samples, 0.07%)</title><rect x="83.6217%" y="1525" width="0.0726%" height="15" fill="rgb(243,118,39)" fg:x="89783" fg:w="78"/><text x="83.8717%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (37 samples, 0.03%)</title><rect x="83.6599%" y="1509" width="0.0345%" height="15" fill="rgb(234,126,9)" fg:x="89824" fg:w="37"/><text x="83.9099%" y="1519.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (36 samples, 0.03%)</title><rect x="83.6609%" y="1493" width="0.0335%" height="15" fill="rgb(234,167,42)" fg:x="89825" fg:w="36"/><text x="83.9109%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.03%)</title><rect x="83.6609%" y="1477" width="0.0335%" height="15" fill="rgb(238,54,48)" fg:x="89825" fg:w="36"/><text x="83.9109%" y="1487.50"></text></g><g><title>std::panicking::try (36 samples, 0.03%)</title><rect x="83.6609%" y="1461" width="0.0335%" height="15" fill="rgb(226,105,2)" fg:x="89825" fg:w="36"/><text x="83.9109%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.03%)</title><rect x="83.6609%" y="1445" width="0.0335%" height="15" fill="rgb(223,95,23)" fg:x="89825" fg:w="36"/><text x="83.9109%" y="1455.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (36 samples, 0.03%)</title><rect x="83.6609%" y="1429" width="0.0335%" height="15" fill="rgb(249,212,19)" fg:x="89825" fg:w="36"/><text x="83.9109%" y="1439.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (16 samples, 0.01%)</title><rect x="83.6944%" y="1413" width="0.0149%" height="15" fill="rgb(234,158,54)" fg:x="89861" fg:w="16"/><text x="83.9444%" y="1423.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (11 samples, 0.01%)</title><rect x="83.7102%" y="1365" width="0.0102%" height="15" fill="rgb(247,114,32)" fg:x="89878" fg:w="11"/><text x="83.9602%" y="1375.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (30 samples, 0.03%)</title><rect x="83.6944%" y="1525" width="0.0279%" height="15" fill="rgb(250,68,44)" fg:x="89861" fg:w="30"/><text x="83.9444%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.03%)</title><rect x="83.6944%" y="1509" width="0.0279%" height="15" fill="rgb(242,3,15)" fg:x="89861" fg:w="30"/><text x="83.9444%" y="1519.50"></text></g><g><title>std::panicking::try (30 samples, 0.03%)</title><rect x="83.6944%" y="1493" width="0.0279%" height="15" fill="rgb(223,110,32)" fg:x="89861" fg:w="30"/><text x="83.9444%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.03%)</title><rect x="83.6944%" y="1477" width="0.0279%" height="15" fill="rgb(216,26,54)" fg:x="89861" fg:w="30"/><text x="83.9444%" y="1487.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (30 samples, 0.03%)</title><rect x="83.6944%" y="1461" width="0.0279%" height="15" fill="rgb(209,145,42)" fg:x="89861" fg:w="30"/><text x="83.9444%" y="1471.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (30 samples, 0.03%)</title><rect x="83.6944%" y="1445" width="0.0279%" height="15" fill="rgb(240,111,53)" fg:x="89861" fg:w="30"/><text x="83.9444%" y="1455.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (30 samples, 0.03%)</title><rect x="83.6944%" y="1429" width="0.0279%" height="15" fill="rgb(209,101,4)" fg:x="89861" fg:w="30"/><text x="83.9444%" y="1439.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (14 samples, 0.01%)</title><rect x="83.7093%" y="1413" width="0.0130%" height="15" fill="rgb(231,74,29)" fg:x="89877" fg:w="14"/><text x="83.9593%" y="1423.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (14 samples, 0.01%)</title><rect x="83.7093%" y="1397" width="0.0130%" height="15" fill="rgb(223,12,12)" fg:x="89877" fg:w="14"/><text x="83.9593%" y="1407.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (13 samples, 0.01%)</title><rect x="83.7102%" y="1381" width="0.0121%" height="15" fill="rgb(207,162,2)" fg:x="89878" fg:w="13"/><text x="83.9602%" y="1391.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (18 samples, 0.02%)</title><rect x="83.7270%" y="1317" width="0.0168%" height="15" fill="rgb(230,152,0)" fg:x="89896" fg:w="18"/><text x="83.9770%" y="1327.50"></text></g><g><title>move_bytecode_verifier::reference_safety::call (11 samples, 0.01%)</title><rect x="83.7438%" y="1317" width="0.0102%" height="15" fill="rgb(254,156,19)" fg:x="89914" fg:w="11"/><text x="83.9938%" y="1327.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (48 samples, 0.04%)</title><rect x="83.7261%" y="1333" width="0.0447%" height="15" fill="rgb(250,28,0)" fg:x="89895" fg:w="48"/><text x="83.9761%" y="1343.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (18 samples, 0.02%)</title><rect x="83.7540%" y="1317" width="0.0168%" height="15" fill="rgb(253,27,5)" fg:x="89925" fg:w="18"/><text x="84.0040%" y="1327.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (53 samples, 0.05%)</title><rect x="83.7223%" y="1365" width="0.0494%" height="15" fill="rgb(244,154,7)" fg:x="89891" fg:w="53"/><text x="83.9723%" y="1375.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (49 samples, 0.05%)</title><rect x="83.7261%" y="1349" width="0.0456%" height="15" fill="rgb(242,108,21)" fg:x="89895" fg:w="49"/><text x="83.9761%" y="1359.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (54 samples, 0.05%)</title><rect x="83.7223%" y="1445" width="0.0503%" height="15" fill="rgb(254,200,38)" fg:x="89891" fg:w="54"/><text x="83.9723%" y="1455.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (54 samples, 0.05%)</title><rect x="83.7223%" y="1429" width="0.0503%" height="15" fill="rgb(250,145,41)" fg:x="89891" fg:w="54"/><text x="83.9723%" y="1439.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (54 samples, 0.05%)</title><rect x="83.7223%" y="1413" width="0.0503%" height="15" fill="rgb(235,136,31)" fg:x="89891" fg:w="54"/><text x="83.9723%" y="1423.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (54 samples, 0.05%)</title><rect x="83.7223%" y="1397" width="0.0503%" height="15" fill="rgb(215,13,18)" fg:x="89891" fg:w="54"/><text x="83.9723%" y="1407.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (54 samples, 0.05%)</title><rect x="83.7223%" y="1381" width="0.0503%" height="15" fill="rgb(238,199,12)" fg:x="89891" fg:w="54"/><text x="83.9723%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (85 samples, 0.08%)</title><rect x="83.6944%" y="1541" width="0.0792%" height="15" fill="rgb(242,179,49)" fg:x="89861" fg:w="85"/><text x="83.9444%" y="1551.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (55 samples, 0.05%)</title><rect x="83.7223%" y="1525" width="0.0512%" height="15" fill="rgb(214,10,44)" fg:x="89891" fg:w="55"/><text x="83.9723%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (55 samples, 0.05%)</title><rect x="83.7223%" y="1509" width="0.0512%" height="15" fill="rgb(229,181,11)" fg:x="89891" fg:w="55"/><text x="83.9723%" y="1519.50"></text></g><g><title>std::panicking::try (55 samples, 0.05%)</title><rect x="83.7223%" y="1493" width="0.0512%" height="15" fill="rgb(244,155,10)" fg:x="89891" fg:w="55"/><text x="83.9723%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (55 samples, 0.05%)</title><rect x="83.7223%" y="1477" width="0.0512%" height="15" fill="rgb(254,13,48)" fg:x="89891" fg:w="55"/><text x="83.9723%" y="1487.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (55 samples, 0.05%)</title><rect x="83.7223%" y="1461" width="0.0512%" height="15" fill="rgb(210,164,6)" fg:x="89891" fg:w="55"/><text x="83.9723%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="83.7829%" y="1509" width="0.0121%" height="15" fill="rgb(216,187,40)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1519.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="83.7829%" y="1493" width="0.0121%" height="15" fill="rgb(208,143,21)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1503.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 0.01%)</title><rect x="83.7829%" y="1477" width="0.0121%" height="15" fill="rgb(211,73,41)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (13 samples, 0.01%)</title><rect x="83.7829%" y="1461" width="0.0121%" height="15" fill="rgb(244,69,21)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="83.7829%" y="1445" width="0.0121%" height="15" fill="rgb(230,152,32)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="83.7829%" y="1429" width="0.0121%" height="15" fill="rgb(208,110,18)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="83.7829%" y="1413" width="0.0121%" height="15" fill="rgb(214,201,49)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="83.7829%" y="1397" width="0.0121%" height="15" fill="rgb(253,153,27)" fg:x="89956" fg:w="13"/><text x="84.0329%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (194 samples, 0.18%)</title><rect x="83.6208%" y="1621" width="0.1807%" height="15" fill="rgb(238,61,11)" fg:x="89782" fg:w="194"/><text x="83.8708%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (194 samples, 0.18%)</title><rect x="83.6208%" y="1605" width="0.1807%" height="15" fill="rgb(227,84,2)" fg:x="89782" fg:w="194"/><text x="83.8708%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (193 samples, 0.18%)</title><rect x="83.6217%" y="1589" width="0.1798%" height="15" fill="rgb(233,52,8)" fg:x="89783" fg:w="193"/><text x="83.8717%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (193 samples, 0.18%)</title><rect x="83.6217%" y="1573" width="0.1798%" height="15" fill="rgb(209,136,13)" fg:x="89783" fg:w="193"/><text x="83.8717%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (193 samples, 0.18%)</title><rect x="83.6217%" y="1557" width="0.1798%" height="15" fill="rgb(229,86,25)" fg:x="89783" fg:w="193"/><text x="83.8717%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (30 samples, 0.03%)</title><rect x="83.7736%" y="1541" width="0.0279%" height="15" fill="rgb(235,47,16)" fg:x="89946" fg:w="30"/><text x="84.0236%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (21 samples, 0.02%)</title><rect x="83.7819%" y="1525" width="0.0196%" height="15" fill="rgb(231,186,4)" fg:x="89955" fg:w="21"/><text x="84.0319%" y="1535.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (15 samples, 0.01%)</title><rect x="83.8127%" y="1397" width="0.0140%" height="15" fill="rgb(209,213,23)" fg:x="89988" fg:w="15"/><text x="84.0627%" y="1407.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.01%)</title><rect x="83.8145%" y="1381" width="0.0121%" height="15" fill="rgb(212,142,47)" fg:x="89990" fg:w="13"/><text x="84.0645%" y="1391.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.01%)</title><rect x="83.8145%" y="1365" width="0.0121%" height="15" fill="rgb(251,86,24)" fg:x="89990" fg:w="13"/><text x="84.0645%" y="1375.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (24 samples, 0.02%)</title><rect x="83.8127%" y="1445" width="0.0224%" height="15" fill="rgb(206,217,17)" fg:x="89988" fg:w="24"/><text x="84.0627%" y="1455.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (24 samples, 0.02%)</title><rect x="83.8127%" y="1429" width="0.0224%" height="15" fill="rgb(248,92,38)" fg:x="89988" fg:w="24"/><text x="84.0627%" y="1439.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (24 samples, 0.02%)</title><rect x="83.8127%" y="1413" width="0.0224%" height="15" fill="rgb(214,25,29)" fg:x="89988" fg:w="24"/><text x="84.0627%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (37 samples, 0.03%)</title><rect x="83.8015%" y="1573" width="0.0345%" height="15" fill="rgb(245,117,13)" fg:x="89976" fg:w="37"/><text x="84.0515%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (37 samples, 0.03%)</title><rect x="83.8015%" y="1557" width="0.0345%" height="15" fill="rgb(205,169,9)" fg:x="89976" fg:w="37"/><text x="84.0515%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (29 samples, 0.03%)</title><rect x="83.8090%" y="1541" width="0.0270%" height="15" fill="rgb(223,134,38)" fg:x="89984" fg:w="29"/><text x="84.0590%" y="1551.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (28 samples, 0.03%)</title><rect x="83.8099%" y="1525" width="0.0261%" height="15" fill="rgb(249,129,49)" fg:x="89985" fg:w="28"/><text x="84.0599%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.03%)</title><rect x="83.8099%" y="1509" width="0.0261%" height="15" fill="rgb(229,157,45)" fg:x="89985" fg:w="28"/><text x="84.0599%" y="1519.50"></text></g><g><title>std::panicking::try (28 samples, 0.03%)</title><rect x="83.8099%" y="1493" width="0.0261%" height="15" fill="rgb(232,159,11)" fg:x="89985" fg:w="28"/><text x="84.0599%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.03%)</title><rect x="83.8099%" y="1477" width="0.0261%" height="15" fill="rgb(230,134,26)" fg:x="89985" fg:w="28"/><text x="84.0599%" y="1487.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (28 samples, 0.03%)</title><rect x="83.8099%" y="1461" width="0.0261%" height="15" fill="rgb(234,149,40)" fg:x="89985" fg:w="28"/><text x="84.0599%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (234 samples, 0.22%)</title><rect x="83.6208%" y="1653" width="0.2179%" height="15" fill="rgb(221,122,15)" fg:x="89782" fg:w="234"/><text x="83.8708%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (234 samples, 0.22%)</title><rect x="83.6208%" y="1637" width="0.2179%" height="15" fill="rgb(228,127,0)" fg:x="89782" fg:w="234"/><text x="83.8708%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (40 samples, 0.04%)</title><rect x="83.8015%" y="1621" width="0.0373%" height="15" fill="rgb(248,37,7)" fg:x="89976" fg:w="40"/><text x="84.0515%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (40 samples, 0.04%)</title><rect x="83.8015%" y="1605" width="0.0373%" height="15" fill="rgb(215,140,49)" fg:x="89976" fg:w="40"/><text x="84.0515%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (40 samples, 0.04%)</title><rect x="83.8015%" y="1589" width="0.0373%" height="15" fill="rgb(236,65,39)" fg:x="89976" fg:w="40"/><text x="84.0515%" y="1599.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (16 samples, 0.01%)</title><rect x="83.8397%" y="1429" width="0.0149%" height="15" fill="rgb(253,102,38)" fg:x="90017" fg:w="16"/><text x="84.0897%" y="1439.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (21 samples, 0.02%)</title><rect x="83.8388%" y="1477" width="0.0196%" height="15" fill="rgb(244,100,34)" fg:x="90016" fg:w="21"/><text x="84.0888%" y="1487.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (21 samples, 0.02%)</title><rect x="83.8388%" y="1461" width="0.0196%" height="15" fill="rgb(210,179,47)" fg:x="90016" fg:w="21"/><text x="84.0888%" y="1471.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (21 samples, 0.02%)</title><rect x="83.8388%" y="1445" width="0.0196%" height="15" fill="rgb(231,41,37)" fg:x="90016" fg:w="21"/><text x="84.0888%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (23 samples, 0.02%)</title><rect x="83.8388%" y="1605" width="0.0214%" height="15" fill="rgb(226,209,17)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (23 samples, 0.02%)</title><rect x="83.8388%" y="1589" width="0.0214%" height="15" fill="rgb(231,154,20)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (23 samples, 0.02%)</title><rect x="83.8388%" y="1573" width="0.0214%" height="15" fill="rgb(216,134,24)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1583.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (23 samples, 0.02%)</title><rect x="83.8388%" y="1557" width="0.0214%" height="15" fill="rgb(224,71,42)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.02%)</title><rect x="83.8388%" y="1541" width="0.0214%" height="15" fill="rgb(250,65,23)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1551.50"></text></g><g><title>std::panicking::try (23 samples, 0.02%)</title><rect x="83.8388%" y="1525" width="0.0214%" height="15" fill="rgb(209,160,35)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.02%)</title><rect x="83.8388%" y="1509" width="0.0214%" height="15" fill="rgb(215,8,11)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1519.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (23 samples, 0.02%)</title><rect x="83.8388%" y="1493" width="0.0214%" height="15" fill="rgb(227,27,12)" fg:x="90016" fg:w="23"/><text x="84.0888%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (263 samples, 0.24%)</title><rect x="83.6208%" y="1749" width="0.2450%" height="15" fill="rgb(226,111,41)" fg:x="89782" fg:w="263"/><text x="83.8708%" y="1759.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (263 samples, 0.24%)</title><rect x="83.6208%" y="1733" width="0.2450%" height="15" fill="rgb(212,195,15)" fg:x="89782" fg:w="263"/><text x="83.8708%" y="1743.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (263 samples, 0.24%)</title><rect x="83.6208%" y="1717" width="0.2450%" height="15" fill="rgb(216,191,17)" fg:x="89782" fg:w="263"/><text x="83.8708%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (263 samples, 0.24%)</title><rect x="83.6208%" y="1701" width="0.2450%" height="15" fill="rgb(215,57,44)" fg:x="89782" fg:w="263"/><text x="83.8708%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (263 samples, 0.24%)</title><rect x="83.6208%" y="1685" width="0.2450%" height="15" fill="rgb(209,38,4)" fg:x="89782" fg:w="263"/><text x="83.8708%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (263 samples, 0.24%)</title><rect x="83.6208%" y="1669" width="0.2450%" height="15" fill="rgb(238,49,31)" fg:x="89782" fg:w="263"/><text x="83.8708%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (29 samples, 0.03%)</title><rect x="83.8388%" y="1653" width="0.0270%" height="15" fill="rgb(219,48,39)" fg:x="90016" fg:w="29"/><text x="84.0888%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (29 samples, 0.03%)</title><rect x="83.8388%" y="1637" width="0.0270%" height="15" fill="rgb(252,223,43)" fg:x="90016" fg:w="29"/><text x="84.0888%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (29 samples, 0.03%)</title><rect x="83.8388%" y="1621" width="0.0270%" height="15" fill="rgb(247,205,46)" fg:x="90016" fg:w="29"/><text x="84.0888%" y="1631.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_types::on_chain_config::ConfigStorage&gt;::fetch_config (152 samples, 0.14%)</title><rect x="83.8658%" y="1701" width="0.1416%" height="15" fill="rgb(231,16,40)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1711.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (152 samples, 0.14%)</title><rect x="83.8658%" y="1685" width="0.1416%" height="15" fill="rgb(231,115,5)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1695.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (152 samples, 0.14%)</title><rect x="83.8658%" y="1669" width="0.1416%" height="15" fill="rgb(206,127,43)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1679.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (152 samples, 0.14%)</title><rect x="83.8658%" y="1653" width="0.1416%" height="15" fill="rgb(218,101,9)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1663.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (152 samples, 0.14%)</title><rect x="83.8658%" y="1637" width="0.1416%" height="15" fill="rgb(235,138,50)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (152 samples, 0.14%)</title><rect x="83.8658%" y="1621" width="0.1416%" height="15" fill="rgb(214,197,52)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (152 samples, 0.14%)</title><rect x="83.8658%" y="1605" width="0.1416%" height="15" fill="rgb(230,80,19)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (152 samples, 0.14%)</title><rect x="83.8658%" y="1589" width="0.1416%" height="15" fill="rgb(224,77,16)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (152 samples, 0.14%)</title><rect x="83.8658%" y="1573" width="0.1416%" height="15" fill="rgb(246,4,13)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (152 samples, 0.14%)</title><rect x="83.8658%" y="1557" width="0.1416%" height="15" fill="rgb(220,177,26)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (152 samples, 0.14%)</title><rect x="83.8658%" y="1541" width="0.1416%" height="15" fill="rgb(215,114,45)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (152 samples, 0.14%)</title><rect x="83.8658%" y="1525" width="0.1416%" height="15" fill="rgb(215,71,54)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (152 samples, 0.14%)</title><rect x="83.8658%" y="1509" width="0.1416%" height="15" fill="rgb(211,155,22)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (152 samples, 0.14%)</title><rect x="83.8658%" y="1493" width="0.1416%" height="15" fill="rgb(245,206,18)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (152 samples, 0.14%)</title><rect x="83.8658%" y="1477" width="0.1416%" height="15" fill="rgb(248,216,48)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1487.50"></text></g><g><title>malloc (152 samples, 0.14%)</title><rect x="83.8658%" y="1461" width="0.1416%" height="15" fill="rgb(244,84,45)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1471.50"></text></g><g><title>[libc.so.6] (152 samples, 0.14%)</title><rect x="83.8658%" y="1445" width="0.1416%" height="15" fill="rgb(245,13,45)" fg:x="90045" fg:w="152"/><text x="84.1158%" y="1455.50"></text></g><g><title>[libc.so.6] (150 samples, 0.14%)</title><rect x="83.8676%" y="1429" width="0.1397%" height="15" fill="rgb(247,163,2)" fg:x="90047" fg:w="150"/><text x="84.1176%" y="1439.50"></text></g><g><title>[libc.so.6] (40 samples, 0.04%)</title><rect x="83.9701%" y="1413" width="0.0373%" height="15" fill="rgb(211,175,10)" fg:x="90157" fg:w="40"/><text x="84.2201%" y="1423.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (424 samples, 0.39%)</title><rect x="83.6208%" y="1765" width="0.3949%" height="15" fill="rgb(215,186,31)" fg:x="89782" fg:w="424"/><text x="83.8708%" y="1775.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::new (161 samples, 0.15%)</title><rect x="83.8658%" y="1749" width="0.1500%" height="15" fill="rgb(207,42,11)" fg:x="90045" fg:w="161"/><text x="84.1158%" y="1759.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new (161 samples, 0.15%)</title><rect x="83.8658%" y="1733" width="0.1500%" height="15" fill="rgb(224,197,20)" fg:x="90045" fg:w="161"/><text x="84.1158%" y="1743.50"></text></g><g><title>aptos_types::on_chain_config::OnChainConfig::fetch_config (161 samples, 0.15%)</title><rect x="83.8658%" y="1717" width="0.1500%" height="15" fill="rgb(244,119,36)" fg:x="90045" fg:w="161"/><text x="84.1158%" y="1727.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasParameters as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="84.0558%" y="1701" width="0.0317%" height="15" fill="rgb(250,60,27)" fg:x="90249" fg:w="34"/><text x="84.3058%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="84.1107%" y="1605" width="0.0158%" height="15" fill="rgb(252,202,1)" fg:x="90308" fg:w="17"/><text x="84.3607%" y="1615.50"></text></g><g><title>alloc::alloc::box_free (23 samples, 0.02%)</title><rect x="84.1266%" y="1605" width="0.0214%" height="15" fill="rgb(206,53,25)" fg:x="90325" fg:w="23"/><text x="84.3766%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="84.1266%" y="1589" width="0.0214%" height="15" fill="rgb(210,88,4)" fg:x="90325" fg:w="23"/><text x="84.3766%" y="1599.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="84.1266%" y="1573" width="0.0214%" height="15" fill="rgb(211,144,28)" fg:x="90325" fg:w="23"/><text x="84.3766%" y="1583.50"></text></g><g><title>cfree (23 samples, 0.02%)</title><rect x="84.1266%" y="1557" width="0.0214%" height="15" fill="rgb(247,81,32)" fg:x="90325" fg:w="23"/><text x="84.3766%" y="1567.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="84.1331%" y="1541" width="0.0149%" height="15" fill="rgb(225,192,11)" fg:x="90332" fg:w="16"/><text x="84.3831%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext&gt; (22 samples, 0.02%)</title><rect x="84.1480%" y="1605" width="0.0205%" height="15" fill="rgb(232,212,27)" fg:x="90348" fg:w="22"/><text x="84.3980%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;aptos_aggregator::aggregator_extension::AggregatorData&gt;&gt; (19 samples, 0.02%)</title><rect x="84.1508%" y="1589" width="0.0177%" height="15" fill="rgb(239,3,29)" fg:x="90351" fg:w="19"/><text x="84.4008%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;aptos_aggregator::aggregator_extension::AggregatorData&gt;&gt; (19 samples, 0.02%)</title><rect x="84.1508%" y="1573" width="0.0177%" height="15" fill="rgb(252,225,29)" fg:x="90351" fg:w="19"/><text x="84.4008%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_aggregator::aggregator_extension::AggregatorData&gt; (19 samples, 0.02%)</title><rect x="84.1508%" y="1557" width="0.0177%" height="15" fill="rgb(205,151,9)" fg:x="90351" fg:w="19"/><text x="84.4008%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;aptos_aggregator::aggregator_extension::AggregatorID&gt;&gt; (19 samples, 0.02%)</title><rect x="84.1508%" y="1541" width="0.0177%" height="15" fill="rgb(216,171,47)" fg:x="90351" fg:w="19"/><text x="84.4008%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_aggregator::aggregator_extension::AggregatorID,alloc::collections::btree::set_val::SetValZST&gt;&gt; (19 samples, 0.02%)</title><rect x="84.1508%" y="1525" width="0.0177%" height="15" fill="rgb(206,181,1)" fg:x="90351" fg:w="19"/><text x="84.4008%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="84.1508%" y="1509" width="0.0177%" height="15" fill="rgb(232,218,10)" fg:x="90351" fg:w="19"/><text x="84.4008%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_table_extension::NativeTableContext&gt; (20 samples, 0.02%)</title><rect x="84.1852%" y="1605" width="0.0186%" height="15" fill="rgb(244,222,51)" fg:x="90388" fg:w="20"/><text x="84.4352%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;move_table_extension::TableData&gt;&gt; (14 samples, 0.01%)</title><rect x="84.1908%" y="1589" width="0.0130%" height="15" fill="rgb(252,215,16)" fg:x="90394" fg:w="14"/><text x="84.4408%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_table_extension::TableData&gt;&gt; (14 samples, 0.01%)</title><rect x="84.1908%" y="1573" width="0.0130%" height="15" fill="rgb(212,130,13)" fg:x="90394" fg:w="14"/><text x="84.4408%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_table_extension::TableData&gt; (14 samples, 0.01%)</title><rect x="84.1908%" y="1557" width="0.0130%" height="15" fill="rgb(227,103,37)" fg:x="90394" fg:w="14"/><text x="84.4408%" y="1567.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (117 samples, 0.11%)</title><rect x="84.1014%" y="1669" width="0.1090%" height="15" fill="rgb(249,48,15)" fg:x="90298" fg:w="117"/><text x="84.3514%" y="1679.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (117 samples, 0.11%)</title><rect x="84.1014%" y="1653" width="0.1090%" height="15" fill="rgb(225,96,9)" fg:x="90298" fg:w="117"/><text x="84.3514%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (117 samples, 0.11%)</title><rect x="84.1014%" y="1637" width="0.1090%" height="15" fill="rgb(213,81,41)" fg:x="90298" fg:w="117"/><text x="84.3514%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (117 samples, 0.11%)</title><rect x="84.1014%" y="1621" width="0.1090%" height="15" fill="rgb(230,15,12)" fg:x="90298" fg:w="117"/><text x="84.3514%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (131 samples, 0.12%)</title><rect x="84.0940%" y="1685" width="0.1220%" height="15" fill="rgb(218,106,37)" fg:x="90290" fg:w="131"/><text x="84.3440%" y="1695.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.13%)</title><rect x="84.0893%" y="1701" width="0.1276%" height="15" fill="rgb(223,172,47)" fg:x="90285" fg:w="137"/><text x="84.3393%" y="1711.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="84.2318%" y="1685" width="0.0140%" height="15" fill="rgb(246,180,49)" fg:x="90438" fg:w="15"/><text x="84.4818%" y="1695.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::new (30 samples, 0.03%)</title><rect x="84.2299%" y="1701" width="0.0279%" height="15" fill="rgb(231,63,37)" fg:x="90436" fg:w="30"/><text x="84.4799%" y="1711.50"></text></g><g><title>move_core_types::gas_algebra::GasQuantity&lt;U&gt;::to_unit_with_params (13 samples, 0.01%)</title><rect x="84.2458%" y="1685" width="0.0121%" height="15" fill="rgb(235,70,40)" fg:x="90453" fg:w="13"/><text x="84.4958%" y="1695.50"></text></g><g><title>aptos_gas::transaction::&lt;impl move_core_types::gas_algebra::ToUnitWithParams&lt;move_core_types::gas_algebra::InternalGasUnit&gt; for aptos_gas::algebra::GasUnit&gt;::multiplier (11 samples, 0.01%)</title><rect x="84.2476%" y="1669" width="0.0102%" height="15" fill="rgb(250,54,26)" fg:x="90455" fg:w="11"/><text x="84.4976%" y="1679.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (17 samples, 0.02%)</title><rect x="84.2784%" y="1653" width="0.0158%" height="15" fill="rgb(214,190,1)" fg:x="90488" fg:w="17"/><text x="84.5284%" y="1663.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::contains_duplicate_signers::{{closure}} (15 samples, 0.01%)</title><rect x="84.2802%" y="1637" width="0.0140%" height="15" fill="rgb(212,40,35)" fg:x="90490" fg:w="15"/><text x="84.5302%" y="1647.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (15 samples, 0.01%)</title><rect x="84.2802%" y="1621" width="0.0140%" height="15" fill="rgb(239,183,47)" fg:x="90490" fg:w="15"/><text x="84.5302%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 0.01%)</title><rect x="84.2802%" y="1605" width="0.0140%" height="15" fill="rgb(211,171,49)" fg:x="90490" fg:w="15"/><text x="84.5302%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (13 samples, 0.01%)</title><rect x="84.2821%" y="1589" width="0.0121%" height="15" fill="rgb(249,186,27)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (13 samples, 0.01%)</title><rect x="84.2821%" y="1573" width="0.0121%" height="15" fill="rgb(223,23,48)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (13 samples, 0.01%)</title><rect x="84.2821%" y="1557" width="0.0121%" height="15" fill="rgb(209,203,21)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (13 samples, 0.01%)</title><rect x="84.2821%" y="1541" width="0.0121%" height="15" fill="rgb(229,33,27)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13 samples, 0.01%)</title><rect x="84.2821%" y="1525" width="0.0121%" height="15" fill="rgb(207,8,53)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="84.2821%" y="1509" width="0.0121%" height="15" fill="rgb(221,42,0)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="84.2821%" y="1493" width="0.0121%" height="15" fill="rgb(223,115,3)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="84.2821%" y="1477" width="0.0121%" height="15" fill="rgb(239,35,26)" fg:x="90492" fg:w="13"/><text x="84.5321%" y="1487.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="84.2830%" y="1461" width="0.0112%" height="15" fill="rgb(233,22,9)" fg:x="90493" fg:w="12"/><text x="84.5330%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="84.2961%" y="1653" width="0.0130%" height="15" fill="rgb(236,221,48)" fg:x="90507" fg:w="14"/><text x="84.5461%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="84.2961%" y="1637" width="0.0130%" height="15" fill="rgb(235,52,30)" fg:x="90507" fg:w="14"/><text x="84.5461%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="84.2970%" y="1621" width="0.0121%" height="15" fill="rgb(238,133,51)" fg:x="90508" fg:w="13"/><text x="84.5470%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_core_types::account_address::AccountAddress&gt;&gt; (13 samples, 0.01%)</title><rect x="84.3138%" y="1653" width="0.0121%" height="15" fill="rgb(213,122,23)" fg:x="90526" fg:w="13"/><text x="84.5638%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,alloc::collections::btree::set_val::SetValZST&gt;&gt; (13 samples, 0.01%)</title><rect x="84.3138%" y="1637" width="0.0121%" height="15" fill="rgb(225,8,15)" fg:x="90526" fg:w="13"/><text x="84.5638%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="84.3138%" y="1621" width="0.0121%" height="15" fill="rgb(219,126,35)" fg:x="90526" fg:w="13"/><text x="84.5638%" y="1631.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="84.3147%" y="1605" width="0.0112%" height="15" fill="rgb(246,113,21)" fg:x="90527" fg:w="12"/><text x="84.5647%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,alloc::collections::btree::set_val::SetValZST&gt;&gt; (12 samples, 0.01%)</title><rect x="84.3147%" y="1589" width="0.0112%" height="15" fill="rgb(241,193,32)" fg:x="90527" fg:w="12"/><text x="84.5647%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="84.3147%" y="1573" width="0.0112%" height="15" fill="rgb(218,99,18)" fg:x="90527" fg:w="12"/><text x="84.5647%" y="1583.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_transaction_format (64 samples, 0.06%)</title><rect x="84.2709%" y="1685" width="0.0596%" height="15" fill="rgb(225,114,4)" fg:x="90480" fg:w="64"/><text x="84.5209%" y="1695.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::contains_duplicate_signers (57 samples, 0.05%)</title><rect x="84.2774%" y="1669" width="0.0531%" height="15" fill="rgb(235,0,15)" fg:x="90487" fg:w="57"/><text x="84.5274%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::check_gas (74 samples, 0.07%)</title><rect x="84.3454%" y="1653" width="0.0689%" height="15" fill="rgb(247,45,27)" fg:x="90560" fg:w="74"/><text x="84.5954%" y="1663.50"></text></g><g><title>move_core_types::gas_algebra::GasQuantity&lt;U&gt;::to_unit_round_up_with_params (26 samples, 0.02%)</title><rect x="84.3901%" y="1637" width="0.0242%" height="15" fill="rgb(249,88,53)" fg:x="90608" fg:w="26"/><text x="84.6401%" y="1647.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (87 samples, 0.08%)</title><rect x="84.3380%" y="1669" width="0.0810%" height="15" fill="rgb(207,58,45)" fg:x="90552" fg:w="87"/><text x="84.5880%" y="1679.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (115 samples, 0.11%)</title><rect x="84.3305%" y="1685" width="0.1071%" height="15" fill="rgb(216,7,11)" fg:x="90544" fg:w="115"/><text x="84.5805%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::transaction_metadata::TransactionMetadata&gt; (17 samples, 0.02%)</title><rect x="84.4218%" y="1669" width="0.0158%" height="15" fill="rgb(230,40,33)" fg:x="90642" fg:w="17"/><text x="84.6718%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="84.4274%" y="1653" width="0.0102%" height="15" fill="rgb(232,24,46)" fg:x="90648" fg:w="11"/><text x="84.6774%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="84.4274%" y="1637" width="0.0102%" height="15" fill="rgb(219,222,45)" fg:x="90648" fg:w="11"/><text x="84.6774%" y="1647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="84.4274%" y="1621" width="0.0102%" height="15" fill="rgb(229,85,44)" fg:x="90648" fg:w="11"/><text x="84.6774%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="84.4274%" y="1605" width="0.0102%" height="15" fill="rgb(243,71,36)" fg:x="90648" fg:w="11"/><text x="84.6774%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="84.4274%" y="1589" width="0.0102%" height="15" fill="rgb(230,203,45)" fg:x="90648" fg:w="11"/><text x="84.6774%" y="1599.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="84.4274%" y="1573" width="0.0102%" height="15" fill="rgb(224,77,49)" fg:x="90648" fg:w="11"/><text x="84.6774%" y="1583.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (188 samples, 0.18%)</title><rect x="84.2644%" y="1701" width="0.1751%" height="15" fill="rgb(210,186,47)" fg:x="90473" fg:w="188"/><text x="84.5144%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.02%)</title><rect x="84.4591%" y="1669" width="0.0177%" height="15" fill="rgb(232,146,10)" fg:x="90682" fg:w="19"/><text x="84.7091%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (20 samples, 0.02%)</title><rect x="84.4591%" y="1685" width="0.0186%" height="15" fill="rgb(236,185,51)" fg:x="90682" fg:w="20"/><text x="84.7091%" y="1695.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="84.4898%" y="1685" width="0.0102%" height="15" fill="rgb(223,206,43)" fg:x="90715" fg:w="11"/><text x="84.7398%" y="1695.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.02%)</title><rect x="84.5000%" y="1685" width="0.0186%" height="15" fill="rgb(227,212,9)" fg:x="90726" fg:w="20"/><text x="84.7500%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="84.5000%" y="1669" width="0.0186%" height="15" fill="rgb(205,82,3)" fg:x="90726" fg:w="20"/><text x="84.7500%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="84.5000%" y="1653" width="0.0186%" height="15" fill="rgb(214,2,27)" fg:x="90726" fg:w="20"/><text x="84.7500%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="84.5000%" y="1637" width="0.0186%" height="15" fill="rgb(241,37,22)" fg:x="90726" fg:w="20"/><text x="84.7500%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="84.5289%" y="1557" width="0.0130%" height="15" fill="rgb(219,182,1)" fg:x="90757" fg:w="14"/><text x="84.7789%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="84.5289%" y="1541" width="0.0130%" height="15" fill="rgb(208,224,23)" fg:x="90757" fg:w="14"/><text x="84.7789%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="84.5289%" y="1525" width="0.0130%" height="15" fill="rgb(219,121,32)" fg:x="90757" fg:w="14"/><text x="84.7789%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="84.5298%" y="1509" width="0.0121%" height="15" fill="rgb(253,13,40)" fg:x="90758" fg:w="13"/><text x="84.7798%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="84.5298%" y="1493" width="0.0121%" height="15" fill="rgb(233,6,28)" fg:x="90758" fg:w="13"/><text x="84.7798%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="84.5298%" y="1477" width="0.0121%" height="15" fill="rgb(233,73,8)" fg:x="90758" fg:w="13"/><text x="84.7798%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="84.5289%" y="1621" width="0.0158%" height="15" fill="rgb(223,48,27)" fg:x="90757" fg:w="17"/><text x="84.7789%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="84.5289%" y="1605" width="0.0158%" height="15" fill="rgb(231,98,37)" fg:x="90757" fg:w="17"/><text x="84.7789%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="84.5289%" y="1589" width="0.0158%" height="15" fill="rgb(249,43,32)" fg:x="90757" fg:w="17"/><text x="84.7789%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="84.5289%" y="1573" width="0.0158%" height="15" fill="rgb(246,184,20)" fg:x="90757" fg:w="17"/><text x="84.7789%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.03%)</title><rect x="84.5224%" y="1685" width="0.0261%" height="15" fill="rgb(251,216,0)" fg:x="90750" fg:w="28"/><text x="84.7724%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.03%)</title><rect x="84.5224%" y="1669" width="0.0261%" height="15" fill="rgb(238,41,42)" fg:x="90750" fg:w="28"/><text x="84.7724%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.03%)</title><rect x="84.5224%" y="1653" width="0.0261%" height="15" fill="rgb(227,224,50)" fg:x="90750" fg:w="28"/><text x="84.7724%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.03%)</title><rect x="84.5224%" y="1637" width="0.0261%" height="15" fill="rgb(237,189,18)" fg:x="90750" fg:w="28"/><text x="84.7724%" y="1647.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge_intrinsic_gas_for_transaction (13 samples, 0.01%)</title><rect x="84.5485%" y="1685" width="0.0121%" height="15" fill="rgb(238,108,6)" fg:x="90778" fg:w="13"/><text x="84.7985%" y="1695.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="84.6025%" y="1589" width="0.0158%" height="15" fill="rgb(214,197,53)" fg:x="90836" fg:w="17"/><text x="84.8525%" y="1599.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="84.6025%" y="1573" width="0.0158%" height="15" fill="rgb(206,183,15)" fg:x="90836" fg:w="17"/><text x="84.8525%" y="1583.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::resolve_pending_code_publish (50 samples, 0.05%)</title><rect x="84.5764%" y="1685" width="0.0466%" height="15" fill="rgb(208,130,32)" fg:x="90808" fg:w="50"/><text x="84.8264%" y="1695.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::extract_publish_request (50 samples, 0.05%)</title><rect x="84.5764%" y="1669" width="0.0466%" height="15" fill="rgb(226,128,52)" fg:x="90808" fg:w="50"/><text x="84.8264%" y="1679.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get_mut (42 samples, 0.04%)</title><rect x="84.5839%" y="1653" width="0.0391%" height="15" fill="rgb(231,183,21)" fg:x="90816" fg:w="42"/><text x="84.8339%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (22 samples, 0.02%)</title><rect x="84.6025%" y="1637" width="0.0205%" height="15" fill="rgb(216,8,35)" fg:x="90836" fg:w="22"/><text x="84.8525%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (22 samples, 0.02%)</title><rect x="84.6025%" y="1621" width="0.0205%" height="15" fill="rgb(224,221,8)" fg:x="90836" fg:w="22"/><text x="84.8525%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (22 samples, 0.02%)</title><rect x="84.6025%" y="1605" width="0.0205%" height="15" fill="rgb(210,111,33)" fg:x="90836" fg:w="22"/><text x="84.8525%" y="1615.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args (68 samples, 0.06%)</title><rect x="84.6407%" y="1685" width="0.0633%" height="15" fill="rgb(232,211,38)" fg:x="90877" fg:w="68"/><text x="84.8907%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.03%)</title><rect x="84.6733%" y="1669" width="0.0307%" height="15" fill="rgb(216,190,27)" fg:x="90912" fg:w="33"/><text x="84.9233%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (33 samples, 0.03%)</title><rect x="84.6733%" y="1653" width="0.0307%" height="15" fill="rgb(237,215,27)" fg:x="90912" fg:w="33"/><text x="84.9233%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.03%)</title><rect x="84.6742%" y="1637" width="0.0298%" height="15" fill="rgb(251,121,39)" fg:x="90913" fg:w="32"/><text x="84.9242%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="84.6844%" y="1621" width="0.0196%" height="15" fill="rgb(244,21,14)" fg:x="90924" fg:w="21"/><text x="84.9344%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="84.6938%" y="1605" width="0.0102%" height="15" fill="rgb(221,192,22)" fg:x="90934" fg:w="11"/><text x="84.9438%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="84.6938%" y="1589" width="0.0102%" height="15" fill="rgb(251,190,28)" fg:x="90934" fg:w="11"/><text x="84.9438%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="84.6938%" y="1573" width="0.0102%" height="15" fill="rgb(217,4,51)" fg:x="90934" fg:w="11"/><text x="84.9438%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="84.6938%" y="1557" width="0.0102%" height="15" fill="rgb(215,183,49)" fg:x="90934" fg:w="11"/><text x="84.9438%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="84.7133%" y="1653" width="0.0168%" height="15" fill="rgb(249,28,49)" fg:x="90955" fg:w="18"/><text x="84.9633%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (16 samples, 0.01%)</title><rect x="84.7152%" y="1637" width="0.0149%" height="15" fill="rgb(214,42,20)" fg:x="90957" fg:w="16"/><text x="84.9652%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (16 samples, 0.01%)</title><rect x="84.7152%" y="1621" width="0.0149%" height="15" fill="rgb(222,77,27)" fg:x="90957" fg:w="16"/><text x="84.9652%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::LoadedFunctionInstantiation&gt; (33 samples, 0.03%)</title><rect x="84.7040%" y="1685" width="0.0307%" height="15" fill="rgb(252,198,32)" fg:x="90945" fg:w="33"/><text x="84.9540%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (23 samples, 0.02%)</title><rect x="84.7133%" y="1669" width="0.0214%" height="15" fill="rgb(207,140,50)" fg:x="90955" fg:w="23"/><text x="84.9633%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::SerializedReturnValues&gt; (12 samples, 0.01%)</title><rect x="84.7347%" y="1685" width="0.0112%" height="15" fill="rgb(251,170,16)" fg:x="90978" fg:w="12"/><text x="84.9847%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (28 samples, 0.03%)</title><rect x="84.8009%" y="1637" width="0.0261%" height="15" fill="rgb(249,111,45)" fg:x="91049" fg:w="28"/><text x="85.0509%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 0.03%)</title><rect x="84.8009%" y="1621" width="0.0261%" height="15" fill="rgb(241,99,35)" fg:x="91049" fg:w="28"/><text x="85.0509%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (28 samples, 0.03%)</title><rect x="84.8009%" y="1605" width="0.0261%" height="15" fill="rgb(216,188,17)" fg:x="91049" fg:w="28"/><text x="85.0509%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (28 samples, 0.03%)</title><rect x="84.8009%" y="1589" width="0.0261%" height="15" fill="rgb(254,209,53)" fg:x="91049" fg:w="28"/><text x="85.0509%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (28 samples, 0.03%)</title><rect x="84.8009%" y="1573" width="0.0261%" height="15" fill="rgb(231,105,41)" fg:x="91049" fg:w="28"/><text x="85.0509%" y="1583.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (28 samples, 0.03%)</title><rect x="84.8009%" y="1557" width="0.0261%" height="15" fill="rgb(242,93,23)" fg:x="91049" fg:w="28"/><text x="85.0509%" y="1567.50"></text></g><g><title>move_binary_format::access::ModuleAccess::identifier_at (13 samples, 0.01%)</title><rect x="84.8148%" y="1541" width="0.0121%" height="15" fill="rgb(218,159,11)" fg:x="91064" fg:w="13"/><text x="85.0648%" y="1551.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="84.8167%" y="1525" width="0.0102%" height="15" fill="rgb(209,90,32)" fg:x="91066" fg:w="11"/><text x="85.0667%" y="1535.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (48 samples, 0.04%)</title><rect x="84.7944%" y="1653" width="0.0447%" height="15" fill="rgb(253,118,46)" fg:x="91042" fg:w="48"/><text x="85.0444%" y="1663.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_defs (13 samples, 0.01%)</title><rect x="84.8270%" y="1637" width="0.0121%" height="15" fill="rgb(219,121,2)" fg:x="91077" fg:w="13"/><text x="85.0770%" y="1647.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (97 samples, 0.09%)</title><rect x="84.7543%" y="1685" width="0.0903%" height="15" fill="rgb(207,57,47)" fg:x="90999" fg:w="97"/><text x="85.0043%" y="1695.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (96 samples, 0.09%)</title><rect x="84.7552%" y="1669" width="0.0894%" height="15" fill="rgb(235,113,43)" fg:x="91000" fg:w="96"/><text x="85.0052%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (454 samples, 0.42%)</title><rect x="84.4395%" y="1701" width="0.4228%" height="15" fill="rgb(238,30,50)" fg:x="90661" fg:w="454"/><text x="84.6895%" y="1711.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (19 samples, 0.02%)</title><rect x="84.8446%" y="1685" width="0.0177%" height="15" fill="rgb(237,47,29)" fg:x="91096" fg:w="19"/><text x="85.0946%" y="1695.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::get_storage_gas_parameters (23 samples, 0.02%)</title><rect x="84.8763%" y="1701" width="0.0214%" height="15" fill="rgb(245,102,24)" fg:x="91130" fg:w="23"/><text x="85.1263%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (11 samples, 0.01%)</title><rect x="84.8875%" y="1685" width="0.0102%" height="15" fill="rgb(245,152,9)" fg:x="91142" fg:w="11"/><text x="85.1375%" y="1695.50"></text></g><g><title>aptos_crypto::hash::HashValue::to_vec (15 samples, 0.01%)</title><rect x="84.9275%" y="1669" width="0.0140%" height="15" fill="rgb(223,213,17)" fg:x="91185" fg:w="15"/><text x="85.1775%" y="1679.50"></text></g><g><title>&lt;aptos_aggregator::aggregator_extension::AggregatorData as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="84.9536%" y="1637" width="0.0102%" height="15" fill="rgb(241,164,4)" fg:x="91213" fg:w="11"/><text x="85.2036%" y="1647.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::new (27 samples, 0.03%)</title><rect x="84.9415%" y="1669" width="0.0251%" height="15" fill="rgb(205,209,31)" fg:x="91200" fg:w="27"/><text x="85.1915%" y="1679.50"></text></g><g><title>&lt;core::cell::RefCell&lt;T&gt; as core::default::Default&gt;::default (14 samples, 0.01%)</title><rect x="84.9536%" y="1653" width="0.0130%" height="15" fill="rgb(248,173,2)" fg:x="91213" fg:w="14"/><text x="85.2036%" y="1663.50"></text></g><g><title>move_table_extension::NativeTableContext::new (15 samples, 0.01%)</title><rect x="85.0002%" y="1669" width="0.0140%" height="15" fill="rgb(207,67,32)" fg:x="91263" fg:w="15"/><text x="85.2502%" y="1679.50"></text></g><g><title>__rdl_alloc (17 samples, 0.02%)</title><rect x="85.0747%" y="1573" width="0.0158%" height="15" fill="rgb(239,109,13)" fg:x="91343" fg:w="17"/><text x="85.3247%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (45 samples, 0.04%)</title><rect x="85.0719%" y="1653" width="0.0419%" height="15" fill="rgb(233,123,24)" fg:x="91340" fg:w="45"/><text x="85.3219%" y="1663.50"></text></g><g><title>alloc::alloc::exchange_malloc (43 samples, 0.04%)</title><rect x="85.0738%" y="1637" width="0.0400%" height="15" fill="rgb(232,120,19)" fg:x="91342" fg:w="43"/><text x="85.3238%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.04%)</title><rect x="85.0738%" y="1621" width="0.0400%" height="15" fill="rgb(225,17,50)" fg:x="91342" fg:w="43"/><text x="85.3238%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.04%)</title><rect x="85.0738%" y="1605" width="0.0400%" height="15" fill="rgb(239,216,13)" fg:x="91342" fg:w="43"/><text x="85.3238%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.04%)</title><rect x="85.0738%" y="1589" width="0.0400%" height="15" fill="rgb(232,213,26)" fg:x="91342" fg:w="43"/><text x="85.3238%" y="1599.50"></text></g><g><title>malloc (21 samples, 0.02%)</title><rect x="85.0943%" y="1573" width="0.0196%" height="15" fill="rgb(244,59,39)" fg:x="91364" fg:w="21"/><text x="85.3443%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="85.1334%" y="1589" width="0.0158%" height="15" fill="rgb(234,61,35)" fg:x="91406" fg:w="17"/><text x="85.3834%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="85.1334%" y="1573" width="0.0158%" height="15" fill="rgb(245,94,24)" fg:x="91406" fg:w="17"/><text x="85.3834%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="85.1334%" y="1557" width="0.0158%" height="15" fill="rgb(238,190,44)" fg:x="91406" fg:w="17"/><text x="85.3834%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.01%)</title><rect x="85.1390%" y="1541" width="0.0102%" height="15" fill="rgb(205,145,25)" fg:x="91412" fg:w="11"/><text x="85.3890%" y="1551.50"></text></g><g><title>hashbrown::map::make_insert_hash (23 samples, 0.02%)</title><rect x="85.1306%" y="1621" width="0.0214%" height="15" fill="rgb(229,158,41)" fg:x="91403" fg:w="23"/><text x="85.3806%" y="1631.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.02%)</title><rect x="85.1306%" y="1605" width="0.0214%" height="15" fill="rgb(224,121,5)" fg:x="91403" fg:w="23"/><text x="85.3806%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (25 samples, 0.02%)</title><rect x="85.1520%" y="1621" width="0.0233%" height="15" fill="rgb(238,168,35)" fg:x="91426" fg:w="25"/><text x="85.4020%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.02%)</title><rect x="85.1520%" y="1605" width="0.0233%" height="15" fill="rgb(231,11,42)" fg:x="91426" fg:w="25"/><text x="85.4020%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.02%)</title><rect x="85.1520%" y="1589" width="0.0233%" height="15" fill="rgb(241,105,19)" fg:x="91426" fg:w="25"/><text x="85.4020%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (20 samples, 0.02%)</title><rect x="85.1893%" y="1605" width="0.0186%" height="15" fill="rgb(253,210,20)" fg:x="91466" fg:w="20"/><text x="85.4393%" y="1615.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (335 samples, 0.31%)</title><rect x="84.8996%" y="1701" width="0.3120%" height="15" fill="rgb(215,72,52)" fg:x="91155" fg:w="335"/><text x="85.1496%" y="1711.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (328 samples, 0.31%)</title><rect x="84.9061%" y="1685" width="0.3055%" height="15" fill="rgb(223,225,30)" fg:x="91162" fg:w="328"/><text x="85.1561%" y="1695.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (191 samples, 0.18%)</title><rect x="85.0337%" y="1669" width="0.1779%" height="15" fill="rgb(220,138,44)" fg:x="91299" fg:w="191"/><text x="85.2837%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (104 samples, 0.10%)</title><rect x="85.1147%" y="1653" width="0.0969%" height="15" fill="rgb(206,128,12)" fg:x="91386" fg:w="104"/><text x="85.3647%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (103 samples, 0.10%)</title><rect x="85.1157%" y="1637" width="0.0959%" height="15" fill="rgb(245,194,0)" fg:x="91387" fg:w="103"/><text x="85.3657%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (39 samples, 0.04%)</title><rect x="85.1753%" y="1621" width="0.0363%" height="15" fill="rgb(235,175,41)" fg:x="91451" fg:w="39"/><text x="85.4253%" y="1631.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn (16 samples, 0.01%)</title><rect x="85.2116%" y="1701" width="0.0149%" height="15" fill="rgb(216,15,48)" fg:x="91490" fg:w="16"/><text x="85.4616%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (16 samples, 0.01%)</title><rect x="85.2759%" y="1541" width="0.0149%" height="15" fill="rgb(223,179,5)" fg:x="91559" fg:w="16"/><text x="85.5259%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (42 samples, 0.04%)</title><rect x="85.2628%" y="1573" width="0.0391%" height="15" fill="rgb(220,80,15)" fg:x="91545" fg:w="42"/><text x="85.5128%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (31 samples, 0.03%)</title><rect x="85.2731%" y="1557" width="0.0289%" height="15" fill="rgb(228,20,30)" fg:x="91556" fg:w="31"/><text x="85.5231%" y="1567.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (12 samples, 0.01%)</title><rect x="85.2908%" y="1541" width="0.0112%" height="15" fill="rgb(229,194,27)" fg:x="91575" fg:w="12"/><text x="85.5408%" y="1551.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (32 samples, 0.03%)</title><rect x="85.3280%" y="1429" width="0.0298%" height="15" fill="rgb(238,202,32)" fg:x="91615" fg:w="32"/><text x="85.5780%" y="1439.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (31 samples, 0.03%)</title><rect x="85.3290%" y="1413" width="0.0289%" height="15" fill="rgb(207,82,27)" fg:x="91616" fg:w="31"/><text x="85.5790%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (31 samples, 0.03%)</title><rect x="85.3290%" y="1397" width="0.0289%" height="15" fill="rgb(246,122,46)" fg:x="91616" fg:w="31"/><text x="85.5790%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.03%)</title><rect x="85.3308%" y="1381" width="0.0270%" height="15" fill="rgb(220,101,26)" fg:x="91618" fg:w="29"/><text x="85.5808%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.03%)</title><rect x="85.3318%" y="1365" width="0.0261%" height="15" fill="rgb(251,63,9)" fg:x="91619" fg:w="28"/><text x="85.5818%" y="1375.50"></text></g><g><title>cfree (25 samples, 0.02%)</title><rect x="85.3346%" y="1349" width="0.0233%" height="15" fill="rgb(235,186,5)" fg:x="91622" fg:w="25"/><text x="85.5846%" y="1359.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="85.3411%" y="1333" width="0.0168%" height="15" fill="rgb(241,139,37)" fg:x="91629" fg:w="18"/><text x="85.5911%" y="1343.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (49 samples, 0.05%)</title><rect x="85.3262%" y="1445" width="0.0456%" height="15" fill="rgb(252,177,51)" fg:x="91613" fg:w="49"/><text x="85.5762%" y="1455.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (15 samples, 0.01%)</title><rect x="85.3578%" y="1429" width="0.0140%" height="15" fill="rgb(214,131,22)" fg:x="91647" fg:w="15"/><text x="85.6078%" y="1439.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="85.3932%" y="1397" width="0.0158%" height="15" fill="rgb(246,53,19)" fg:x="91685" fg:w="17"/><text x="85.6432%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="85.4212%" y="1349" width="0.0447%" height="15" fill="rgb(231,158,27)" fg:x="91715" fg:w="48"/><text x="85.6712%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (48 samples, 0.04%)</title><rect x="85.4212%" y="1333" width="0.0447%" height="15" fill="rgb(226,166,46)" fg:x="91715" fg:w="48"/><text x="85.6712%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (34 samples, 0.03%)</title><rect x="85.4342%" y="1317" width="0.0317%" height="15" fill="rgb(218,178,26)" fg:x="91729" fg:w="34"/><text x="85.6842%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (65 samples, 0.06%)</title><rect x="85.4091%" y="1397" width="0.0605%" height="15" fill="rgb(206,25,39)" fg:x="91702" fg:w="65"/><text x="85.6591%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (52 samples, 0.05%)</title><rect x="85.4212%" y="1381" width="0.0484%" height="15" fill="rgb(232,218,41)" fg:x="91715" fg:w="52"/><text x="85.6712%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (52 samples, 0.05%)</title><rect x="85.4212%" y="1365" width="0.0484%" height="15" fill="rgb(212,151,15)" fg:x="91715" fg:w="52"/><text x="85.6712%" y="1375.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="85.4845%" y="1253" width="0.0121%" height="15" fill="rgb(213,49,22)" fg:x="91783" fg:w="13"/><text x="85.7345%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (50 samples, 0.05%)</title><rect x="85.4966%" y="1253" width="0.0466%" height="15" fill="rgb(247,116,21)" fg:x="91796" fg:w="50"/><text x="85.7466%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="85.5115%" y="1237" width="0.0317%" height="15" fill="rgb(248,98,14)" fg:x="91812" fg:w="34"/><text x="85.7615%" y="1247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="85.5115%" y="1221" width="0.0317%" height="15" fill="rgb(247,72,6)" fg:x="91812" fg:w="34"/><text x="85.7615%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="85.5218%" y="1205" width="0.0214%" height="15" fill="rgb(213,9,22)" fg:x="91823" fg:w="23"/><text x="85.7718%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="85.5218%" y="1189" width="0.0214%" height="15" fill="rgb(213,122,30)" fg:x="91823" fg:w="23"/><text x="85.7718%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (23 samples, 0.02%)</title><rect x="85.5218%" y="1173" width="0.0214%" height="15" fill="rgb(244,11,30)" fg:x="91823" fg:w="23"/><text x="85.7718%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="85.5218%" y="1157" width="0.0214%" height="15" fill="rgb(236,102,26)" fg:x="91823" fg:w="23"/><text x="85.7718%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (23 samples, 0.02%)</title><rect x="85.5218%" y="1141" width="0.0214%" height="15" fill="rgb(231,166,37)" fg:x="91823" fg:w="23"/><text x="85.7718%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (18 samples, 0.02%)</title><rect x="85.5264%" y="1125" width="0.0168%" height="15" fill="rgb(220,224,29)" fg:x="91828" fg:w="18"/><text x="85.7764%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.08%)</title><rect x="85.4798%" y="1285" width="0.0782%" height="15" fill="rgb(227,30,40)" fg:x="91778" fg:w="84"/><text x="85.7298%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (84 samples, 0.08%)</title><rect x="85.4798%" y="1269" width="0.0782%" height="15" fill="rgb(235,8,36)" fg:x="91778" fg:w="84"/><text x="85.7298%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (16 samples, 0.01%)</title><rect x="85.5432%" y="1253" width="0.0149%" height="15" fill="rgb(232,175,19)" fg:x="91846" fg:w="16"/><text x="85.7932%" y="1263.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.09%)</title><rect x="85.4724%" y="1349" width="0.0922%" height="15" fill="rgb(217,114,10)" fg:x="91770" fg:w="99"/><text x="85.7224%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (91 samples, 0.08%)</title><rect x="85.4798%" y="1333" width="0.0848%" height="15" fill="rgb(214,112,41)" fg:x="91778" fg:w="91"/><text x="85.7298%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (91 samples, 0.08%)</title><rect x="85.4798%" y="1317" width="0.0848%" height="15" fill="rgb(226,69,34)" fg:x="91778" fg:w="91"/><text x="85.7298%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (91 samples, 0.08%)</title><rect x="85.4798%" y="1301" width="0.0848%" height="15" fill="rgb(219,23,46)" fg:x="91778" fg:w="91"/><text x="85.7298%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (120 samples, 0.11%)</title><rect x="85.4724%" y="1365" width="0.1118%" height="15" fill="rgb(233,3,8)" fg:x="91770" fg:w="120"/><text x="85.7224%" y="1375.50"></text></g><g><title>cfree (21 samples, 0.02%)</title><rect x="85.5646%" y="1349" width="0.0196%" height="15" fill="rgb(251,34,42)" fg:x="91869" fg:w="21"/><text x="85.8146%" y="1359.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="85.5721%" y="1333" width="0.0121%" height="15" fill="rgb(215,84,9)" fg:x="91877" fg:w="13"/><text x="85.8221%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (218 samples, 0.20%)</title><rect x="85.3932%" y="1413" width="0.2030%" height="15" fill="rgb(231,75,52)" fg:x="91685" fg:w="218"/><text x="85.6432%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (136 samples, 0.13%)</title><rect x="85.4696%" y="1397" width="0.1267%" height="15" fill="rgb(247,201,31)" fg:x="91767" fg:w="136"/><text x="85.7196%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (136 samples, 0.13%)</title><rect x="85.4696%" y="1381" width="0.1267%" height="15" fill="rgb(215,171,37)" fg:x="91767" fg:w="136"/><text x="85.7196%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;move_vm_types::values::values_impl::GlobalDataStatus&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="85.5842%" y="1365" width="0.0121%" height="15" fill="rgb(208,208,44)" fg:x="91890" fg:w="13"/><text x="85.8342%" y="1375.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="85.5842%" y="1349" width="0.0121%" height="15" fill="rgb(247,146,54)" fg:x="91890" fg:w="13"/><text x="85.8342%" y="1359.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (266 samples, 0.25%)</title><rect x="85.3830%" y="1429" width="0.2477%" height="15" fill="rgb(209,0,40)" fg:x="91674" fg:w="266"/><text x="85.6330%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (37 samples, 0.03%)</title><rect x="85.5963%" y="1413" width="0.0345%" height="15" fill="rgb(221,59,4)" fg:x="91903" fg:w="37"/><text x="85.8463%" y="1423.50"></text></g><g><title>core::mem::drop (335 samples, 0.31%)</title><rect x="85.3196%" y="1493" width="0.3120%" height="15" fill="rgb(227,153,47)" fg:x="91606" fg:w="335"/><text x="85.5696%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (335 samples, 0.31%)</title><rect x="85.3196%" y="1477" width="0.3120%" height="15" fill="rgb(253,225,10)" fg:x="91606" fg:w="335"/><text x="85.5696%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (335 samples, 0.31%)</title><rect x="85.3196%" y="1461" width="0.3120%" height="15" fill="rgb(237,201,24)" fg:x="91606" fg:w="335"/><text x="85.5696%" y="1471.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (279 samples, 0.26%)</title><rect x="85.3718%" y="1445" width="0.2599%" height="15" fill="rgb(238,23,27)" fg:x="91662" fg:w="279"/><text x="85.6218%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (412 samples, 0.38%)</title><rect x="85.2489%" y="1669" width="0.3837%" height="15" fill="rgb(236,54,50)" fg:x="91530" fg:w="412"/><text x="85.4989%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (412 samples, 0.38%)</title><rect x="85.2489%" y="1653" width="0.3837%" height="15" fill="rgb(216,106,0)" fg:x="91530" fg:w="412"/><text x="85.4989%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (412 samples, 0.38%)</title><rect x="85.2489%" y="1637" width="0.3837%" height="15" fill="rgb(234,179,35)" fg:x="91530" fg:w="412"/><text x="85.4989%" y="1647.50"></text></g><g><title>core::mem::drop (408 samples, 0.38%)</title><rect x="85.2526%" y="1621" width="0.3800%" height="15" fill="rgb(210,35,8)" fg:x="91534" fg:w="408"/><text x="85.5026%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (408 samples, 0.38%)</title><rect x="85.2526%" y="1605" width="0.3800%" height="15" fill="rgb(238,144,16)" fg:x="91534" fg:w="408"/><text x="85.5026%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (408 samples, 0.38%)</title><rect x="85.2526%" y="1589" width="0.3800%" height="15" fill="rgb(244,54,7)" fg:x="91534" fg:w="408"/><text x="85.5026%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (355 samples, 0.33%)</title><rect x="85.3020%" y="1573" width="0.3306%" height="15" fill="rgb(233,225,40)" fg:x="91587" fg:w="355"/><text x="85.5520%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (355 samples, 0.33%)</title><rect x="85.3020%" y="1557" width="0.3306%" height="15" fill="rgb(249,227,23)" fg:x="91587" fg:w="355"/><text x="85.5520%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (343 samples, 0.32%)</title><rect x="85.3131%" y="1541" width="0.3195%" height="15" fill="rgb(215,42,44)" fg:x="91599" fg:w="343"/><text x="85.5631%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (338 samples, 0.31%)</title><rect x="85.3178%" y="1525" width="0.3148%" height="15" fill="rgb(220,145,40)" fg:x="91604" fg:w="338"/><text x="85.5678%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (338 samples, 0.31%)</title><rect x="85.3178%" y="1509" width="0.3148%" height="15" fill="rgb(228,218,40)" fg:x="91604" fg:w="338"/><text x="85.5678%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (416 samples, 0.39%)</title><rect x="85.2461%" y="1701" width="0.3875%" height="15" fill="rgb(217,52,54)" fg:x="91527" fg:w="416"/><text x="85.4961%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (413 samples, 0.38%)</title><rect x="85.2489%" y="1685" width="0.3847%" height="15" fill="rgb(223,90,22)" fg:x="91530" fg:w="413"/><text x="85.4989%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="85.6391%" y="1637" width="0.0140%" height="15" fill="rgb(232,114,35)" fg:x="91949" fg:w="15"/><text x="85.8891%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="85.6391%" y="1621" width="0.0140%" height="15" fill="rgb(227,223,50)" fg:x="91949" fg:w="15"/><text x="85.8891%" y="1631.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="85.6391%" y="1605" width="0.0140%" height="15" fill="rgb(249,175,7)" fg:x="91949" fg:w="15"/><text x="85.8891%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::transaction_metadata::TransactionMetadata&gt; (25 samples, 0.02%)</title><rect x="85.6335%" y="1701" width="0.0233%" height="15" fill="rgb(249,173,15)" fg:x="91943" fg:w="25"/><text x="85.8835%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="85.6391%" y="1685" width="0.0177%" height="15" fill="rgb(240,131,6)" fg:x="91949" fg:w="19"/><text x="85.8891%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="85.6391%" y="1669" width="0.0177%" height="15" fill="rgb(246,117,16)" fg:x="91949" fg:w="19"/><text x="85.8891%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="85.6391%" y="1653" width="0.0177%" height="15" fill="rgb(209,32,16)" fg:x="91949" fg:w="19"/><text x="85.8891%" y="1663.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1957" width="2.0649%" height="15" fill="rgb(207,45,44)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1967.50">&lt;..</text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1941" width="2.0649%" height="15" fill="rgb(210,66,3)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1951.50">r..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1925" width="2.0649%" height="15" fill="rgb(246,133,30)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1935.50">r..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1909" width="2.0649%" height="15" fill="rgb(224,37,17)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1919.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1893" width="2.0649%" height="15" fill="rgb(237,218,18)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1903.50">r..</text></g><g><title>std::panic::catch_unwind (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1877" width="2.0649%" height="15" fill="rgb(240,57,8)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1887.50">s..</text></g><g><title>std::panicking::try (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1861" width="2.0649%" height="15" fill="rgb(231,51,38)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1871.50">s..</text></g><g><title>std::panicking::try::do_call (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1845" width="2.0649%" height="15" fill="rgb(230,89,50)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1855.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1829" width="2.0649%" height="15" fill="rgb(234,103,34)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1839.50">&lt;..</text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1813" width="2.0649%" height="15" fill="rgb(220,45,48)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1823.50">r..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1797" width="2.0649%" height="15" fill="rgb(250,210,3)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1807.50">a..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (2,217 samples, 2.06%)</title><rect x="83.6208%" y="1781" width="2.0649%" height="15" fill="rgb(210,118,12)" fg:x="89782" fg:w="2217"/><text x="83.8708%" y="1791.50">a..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (1,793 samples, 1.67%)</title><rect x="84.0157%" y="1765" width="1.6700%" height="15" fill="rgb(238,154,21)" fg:x="90206" fg:w="1793"/><text x="84.2657%" y="1775.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (1,793 samples, 1.67%)</title><rect x="84.0157%" y="1749" width="1.6700%" height="15" fill="rgb(227,220,4)" fg:x="90206" fg:w="1793"/><text x="84.2657%" y="1759.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (1,793 samples, 1.67%)</title><rect x="84.0157%" y="1733" width="1.6700%" height="15" fill="rgb(207,179,27)" fg:x="90206" fg:w="1793"/><text x="84.2657%" y="1743.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (1,793 samples, 1.67%)</title><rect x="84.0157%" y="1717" width="1.6700%" height="15" fill="rgb(240,111,30)" fg:x="90206" fg:w="1793"/><text x="84.2657%" y="1727.50"></text></g><g><title>prometheus::histogram::Histogram::observe (30 samples, 0.03%)</title><rect x="85.6577%" y="1701" width="0.0279%" height="15" fill="rgb(251,29,1)" fg:x="91969" fg:w="30"/><text x="85.9077%" y="1711.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (17 samples, 0.02%)</title><rect x="85.6698%" y="1685" width="0.0158%" height="15" fill="rgb(224,141,39)" fg:x="91982" fg:w="17"/><text x="85.9198%" y="1695.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (13 samples, 0.01%)</title><rect x="85.7015%" y="1109" width="0.0121%" height="15" fill="rgb(207,98,26)" fg:x="92016" fg:w="13"/><text x="85.9515%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (21 samples, 0.02%)</title><rect x="85.6978%" y="1253" width="0.0196%" height="15" fill="rgb(221,37,6)" fg:x="92012" fg:w="21"/><text x="85.9478%" y="1263.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (17 samples, 0.02%)</title><rect x="85.7015%" y="1237" width="0.0158%" height="15" fill="rgb(217,32,44)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="85.7015%" y="1221" width="0.0158%" height="15" fill="rgb(253,149,2)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1231.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="85.7015%" y="1205" width="0.0158%" height="15" fill="rgb(220,165,39)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="85.7015%" y="1189" width="0.0158%" height="15" fill="rgb(235,33,48)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1199.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (17 samples, 0.02%)</title><rect x="85.7015%" y="1173" width="0.0158%" height="15" fill="rgb(221,89,6)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (17 samples, 0.02%)</title><rect x="85.7015%" y="1157" width="0.0158%" height="15" fill="rgb(215,214,6)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1167.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (17 samples, 0.02%)</title><rect x="85.7015%" y="1141" width="0.0158%" height="15" fill="rgb(241,1,30)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1151.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (17 samples, 0.02%)</title><rect x="85.7015%" y="1125" width="0.0158%" height="15" fill="rgb(211,140,32)" fg:x="92016" fg:w="17"/><text x="85.9515%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (32 samples, 0.03%)</title><rect x="85.6950%" y="1333" width="0.0298%" height="15" fill="rgb(232,48,21)" fg:x="92009" fg:w="32"/><text x="85.9450%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (32 samples, 0.03%)</title><rect x="85.6950%" y="1317" width="0.0298%" height="15" fill="rgb(252,217,9)" fg:x="92009" fg:w="32"/><text x="85.9450%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (31 samples, 0.03%)</title><rect x="85.6959%" y="1301" width="0.0289%" height="15" fill="rgb(206,123,34)" fg:x="92010" fg:w="31"/><text x="85.9459%" y="1311.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (31 samples, 0.03%)</title><rect x="85.6959%" y="1285" width="0.0289%" height="15" fill="rgb(245,161,38)" fg:x="92010" fg:w="31"/><text x="85.9459%" y="1295.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (31 samples, 0.03%)</title><rect x="85.6959%" y="1269" width="0.0289%" height="15" fill="rgb(233,205,7)" fg:x="92010" fg:w="31"/><text x="85.9459%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (38 samples, 0.04%)</title><rect x="85.6950%" y="1365" width="0.0354%" height="15" fill="rgb(217,119,18)" fg:x="92009" fg:w="38"/><text x="85.9450%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (38 samples, 0.04%)</title><rect x="85.6950%" y="1349" width="0.0354%" height="15" fill="rgb(252,126,3)" fg:x="92009" fg:w="38"/><text x="85.9450%" y="1359.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (2,269 samples, 2.11%)</title><rect x="83.6208%" y="2053" width="2.1133%" height="15" fill="rgb(252,188,15)" fg:x="89782" fg:w="2269"/><text x="83.8708%" y="2063.50">r..</text></g><g><title>rayon_core::registry::main_loop (2,269 samples, 2.11%)</title><rect x="83.6208%" y="2037" width="2.1133%" height="15" fill="rgb(228,1,48)" fg:x="89782" fg:w="2269"/><text x="83.8708%" y="2047.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2,269 samples, 2.11%)</title><rect x="83.6208%" y="2021" width="2.1133%" height="15" fill="rgb(205,187,8)" fg:x="89782" fg:w="2269"/><text x="83.8708%" y="2031.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,269 samples, 2.11%)</title><rect x="83.6208%" y="2005" width="2.1133%" height="15" fill="rgb(205,105,50)" fg:x="89782" fg:w="2269"/><text x="83.8708%" y="2015.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::execute (2,269 samples, 2.11%)</title><rect x="83.6208%" y="1989" width="2.1133%" height="15" fill="rgb(211,31,46)" fg:x="89782" fg:w="2269"/><text x="83.8708%" y="1999.50">r..</text></g><g><title>rayon_core::job::JobRef::execute (2,269 samples, 2.11%)</title><rect x="83.6208%" y="1973" width="2.1133%" height="15" fill="rgb(213,126,5)" fg:x="89782" fg:w="2269"/><text x="83.8708%" y="1983.50">r..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (52 samples, 0.05%)</title><rect x="85.6857%" y="1957" width="0.0484%" height="15" fill="rgb(231,87,9)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1967.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (52 samples, 0.05%)</title><rect x="85.6857%" y="1941" width="0.0484%" height="15" fill="rgb(219,224,20)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1951.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (52 samples, 0.05%)</title><rect x="85.6857%" y="1925" width="0.0484%" height="15" fill="rgb(230,84,21)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (52 samples, 0.05%)</title><rect x="85.6857%" y="1909" width="0.0484%" height="15" fill="rgb(224,169,42)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1919.50"></text></g><g><title>std::panicking::try (52 samples, 0.05%)</title><rect x="85.6857%" y="1893" width="0.0484%" height="15" fill="rgb(227,182,13)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (52 samples, 0.05%)</title><rect x="85.6857%" y="1877" width="0.0484%" height="15" fill="rgb(249,57,41)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1887.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (52 samples, 0.05%)</title><rect x="85.6857%" y="1861" width="0.0484%" height="15" fill="rgb(214,93,52)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1871.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (52 samples, 0.05%)</title><rect x="85.6857%" y="1845" width="0.0484%" height="15" fill="rgb(229,161,34)" fg:x="91999" fg:w="52"/><text x="85.9357%" y="1855.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (48 samples, 0.04%)</title><rect x="85.6894%" y="1829" width="0.0447%" height="15" fill="rgb(227,193,17)" fg:x="92003" fg:w="48"/><text x="85.9394%" y="1839.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (44 samples, 0.04%)</title><rect x="85.6931%" y="1813" width="0.0410%" height="15" fill="rgb(242,164,46)" fg:x="92007" fg:w="44"/><text x="85.9431%" y="1823.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (42 samples, 0.04%)</title><rect x="85.6950%" y="1797" width="0.0391%" height="15" fill="rgb(242,142,47)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1807.50"></text></g><g><title>rayon_core::scope::scope (42 samples, 0.04%)</title><rect x="85.6950%" y="1781" width="0.0391%" height="15" fill="rgb(208,23,18)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1791.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.04%)</title><rect x="85.6950%" y="1765" width="0.0391%" height="15" fill="rgb(219,54,38)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1775.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (42 samples, 0.04%)</title><rect x="85.6950%" y="1749" width="0.0391%" height="15" fill="rgb(206,97,35)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1759.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (42 samples, 0.04%)</title><rect x="85.6950%" y="1733" width="0.0391%" height="15" fill="rgb(208,76,8)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1743.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (42 samples, 0.04%)</title><rect x="85.6950%" y="1717" width="0.0391%" height="15" fill="rgb(220,92,28)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (42 samples, 0.04%)</title><rect x="85.6950%" y="1701" width="0.0391%" height="15" fill="rgb(209,158,39)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1711.50"></text></g><g><title>rayon_core::job::JobRef::execute (42 samples, 0.04%)</title><rect x="85.6950%" y="1685" width="0.0391%" height="15" fill="rgb(238,175,9)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1695.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (42 samples, 0.04%)</title><rect x="85.6950%" y="1669" width="0.0391%" height="15" fill="rgb(240,116,17)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1679.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (42 samples, 0.04%)</title><rect x="85.6950%" y="1653" width="0.0391%" height="15" fill="rgb(208,7,2)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1663.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (42 samples, 0.04%)</title><rect x="85.6950%" y="1637" width="0.0391%" height="15" fill="rgb(252,52,4)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1647.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (42 samples, 0.04%)</title><rect x="85.6950%" y="1621" width="0.0391%" height="15" fill="rgb(222,68,34)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1631.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.04%)</title><rect x="85.6950%" y="1605" width="0.0391%" height="15" fill="rgb(242,154,35)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.04%)</title><rect x="85.6950%" y="1589" width="0.0391%" height="15" fill="rgb(210,125,54)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1599.50"></text></g><g><title>std::panicking::try (42 samples, 0.04%)</title><rect x="85.6950%" y="1573" width="0.0391%" height="15" fill="rgb(247,121,18)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.04%)</title><rect x="85.6950%" y="1557" width="0.0391%" height="15" fill="rgb(223,48,51)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1567.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.04%)</title><rect x="85.6950%" y="1541" width="0.0391%" height="15" fill="rgb(211,156,48)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1551.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (42 samples, 0.04%)</title><rect x="85.6950%" y="1525" width="0.0391%" height="15" fill="rgb(236,56,31)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1535.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (42 samples, 0.04%)</title><rect x="85.6950%" y="1509" width="0.0391%" height="15" fill="rgb(247,157,52)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1519.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (42 samples, 0.04%)</title><rect x="85.6950%" y="1493" width="0.0391%" height="15" fill="rgb(244,121,39)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1503.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (42 samples, 0.04%)</title><rect x="85.6950%" y="1477" width="0.0391%" height="15" fill="rgb(239,4,40)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1487.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (42 samples, 0.04%)</title><rect x="85.6950%" y="1461" width="0.0391%" height="15" fill="rgb(213,204,45)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1471.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (42 samples, 0.04%)</title><rect x="85.6950%" y="1445" width="0.0391%" height="15" fill="rgb(242,107,0)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1455.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (42 samples, 0.04%)</title><rect x="85.6950%" y="1429" width="0.0391%" height="15" fill="rgb(215,152,25)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (42 samples, 0.04%)</title><rect x="85.6950%" y="1413" width="0.0391%" height="15" fill="rgb(233,151,6)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (42 samples, 0.04%)</title><rect x="85.6950%" y="1397" width="0.0391%" height="15" fill="rgb(206,126,44)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (42 samples, 0.04%)</title><rect x="85.6950%" y="1381" width="0.0391%" height="15" fill="rgb(209,145,15)" fg:x="92009" fg:w="42"/><text x="85.9450%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (21 samples, 0.02%)</title><rect x="85.7341%" y="1669" width="0.0196%" height="15" fill="rgb(235,214,8)" fg:x="92051" fg:w="21"/><text x="85.9841%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (21 samples, 0.02%)</title><rect x="85.7341%" y="1653" width="0.0196%" height="15" fill="rgb(216,140,51)" fg:x="92051" fg:w="21"/><text x="85.9841%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (21 samples, 0.02%)</title><rect x="85.7341%" y="1637" width="0.0196%" height="15" fill="rgb(213,83,34)" fg:x="92051" fg:w="21"/><text x="85.9841%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (21 samples, 0.02%)</title><rect x="85.7341%" y="1621" width="0.0196%" height="15" fill="rgb(218,186,44)" fg:x="92051" fg:w="21"/><text x="85.9841%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (21 samples, 0.02%)</title><rect x="85.7341%" y="1605" width="0.0196%" height="15" fill="rgb(225,147,10)" fg:x="92051" fg:w="21"/><text x="85.9841%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (11 samples, 0.01%)</title><rect x="85.7434%" y="1589" width="0.0102%" height="15" fill="rgb(209,214,20)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1599.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (11 samples, 0.01%)</title><rect x="85.7434%" y="1573" width="0.0102%" height="15" fill="rgb(252,61,32)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="85.7434%" y="1557" width="0.0102%" height="15" fill="rgb(237,204,10)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1567.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="85.7434%" y="1541" width="0.0102%" height="15" fill="rgb(246,118,16)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="85.7434%" y="1525" width="0.0102%" height="15" fill="rgb(214,50,9)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1535.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (11 samples, 0.01%)</title><rect x="85.7434%" y="1509" width="0.0102%" height="15" fill="rgb(212,41,1)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1519.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="85.7434%" y="1493" width="0.0102%" height="15" fill="rgb(228,172,32)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1503.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="85.7434%" y="1477" width="0.0102%" height="15" fill="rgb(231,85,38)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1487.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="85.7434%" y="1461" width="0.0102%" height="15" fill="rgb(223,120,31)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1471.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (11 samples, 0.01%)</title><rect x="85.7434%" y="1445" width="0.0102%" height="15" fill="rgb(254,174,9)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1455.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (11 samples, 0.01%)</title><rect x="85.7434%" y="1429" width="0.0102%" height="15" fill="rgb(243,197,0)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1439.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (11 samples, 0.01%)</title><rect x="85.7434%" y="1413" width="0.0102%" height="15" fill="rgb(226,186,17)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1423.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="85.7434%" y="1397" width="0.0102%" height="15" fill="rgb(229,38,38)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1407.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (11 samples, 0.01%)</title><rect x="85.7434%" y="1381" width="0.0102%" height="15" fill="rgb(238,82,14)" fg:x="92061" fg:w="11"/><text x="85.9934%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (29 samples, 0.03%)</title><rect x="85.7341%" y="1701" width="0.0270%" height="15" fill="rgb(230,154,54)" fg:x="92051" fg:w="29"/><text x="85.9841%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (29 samples, 0.03%)</title><rect x="85.7341%" y="1685" width="0.0270%" height="15" fill="rgb(243,84,17)" fg:x="92051" fg:w="29"/><text x="85.9841%" y="1695.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (34 samples, 0.03%)</title><rect x="85.7341%" y="1813" width="0.0317%" height="15" fill="rgb(226,41,37)" fg:x="92051" fg:w="34"/><text x="85.9841%" y="1823.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (34 samples, 0.03%)</title><rect x="85.7341%" y="1797" width="0.0317%" height="15" fill="rgb(219,20,18)" fg:x="92051" fg:w="34"/><text x="85.9841%" y="1807.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (34 samples, 0.03%)</title><rect x="85.7341%" y="1781" width="0.0317%" height="15" fill="rgb(243,173,39)" fg:x="92051" fg:w="34"/><text x="85.9841%" y="1791.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (34 samples, 0.03%)</title><rect x="85.7341%" y="1765" width="0.0317%" height="15" fill="rgb(245,79,20)" fg:x="92051" fg:w="34"/><text x="85.9841%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (34 samples, 0.03%)</title><rect x="85.7341%" y="1749" width="0.0317%" height="15" fill="rgb(229,101,45)" fg:x="92051" fg:w="34"/><text x="85.9841%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (34 samples, 0.03%)</title><rect x="85.7341%" y="1733" width="0.0317%" height="15" fill="rgb(215,123,52)" fg:x="92051" fg:w="34"/><text x="85.9841%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (34 samples, 0.03%)</title><rect x="85.7341%" y="1717" width="0.0317%" height="15" fill="rgb(215,11,33)" fg:x="92051" fg:w="34"/><text x="85.9841%" y="1727.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args (11 samples, 0.01%)</title><rect x="85.7658%" y="1733" width="0.0102%" height="15" fill="rgb(245,105,20)" fg:x="92085" fg:w="11"/><text x="86.0158%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="85.7658%" y="1717" width="0.0102%" height="15" fill="rgb(231,132,30)" fg:x="92085" fg:w="11"/><text x="86.0158%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="85.7658%" y="1701" width="0.0102%" height="15" fill="rgb(224,62,21)" fg:x="92085" fg:w="11"/><text x="86.0158%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="85.7658%" y="1685" width="0.0102%" height="15" fill="rgb(209,221,38)" fg:x="92085" fg:w="11"/><text x="86.0158%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="85.7658%" y="1669" width="0.0102%" height="15" fill="rgb(229,200,30)" fg:x="92085" fg:w="11"/><text x="86.0158%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="85.7658%" y="1653" width="0.0102%" height="15" fill="rgb(237,142,41)" fg:x="92085" fg:w="11"/><text x="86.0158%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.01%)</title><rect x="85.7658%" y="1637" width="0.0102%" height="15" fill="rgb(238,37,22)" fg:x="92085" fg:w="11"/><text x="86.0158%" y="1647.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (15 samples, 0.01%)</title><rect x="85.7658%" y="1749" width="0.0140%" height="15" fill="rgb(234,182,17)" fg:x="92085" fg:w="15"/><text x="86.0158%" y="1759.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="85.7797%" y="1637" width="0.0149%" height="15" fill="rgb(237,58,48)" fg:x="92100" fg:w="16"/><text x="86.0297%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="85.7797%" y="1621" width="0.0149%" height="15" fill="rgb(226,112,37)" fg:x="92100" fg:w="16"/><text x="86.0297%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="85.7797%" y="1605" width="0.0149%" height="15" fill="rgb(230,201,20)" fg:x="92100" fg:w="16"/><text x="86.0297%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="85.8058%" y="1573" width="0.0130%" height="15" fill="rgb(252,95,39)" fg:x="92128" fg:w="14"/><text x="86.0558%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="85.8058%" y="1557" width="0.0130%" height="15" fill="rgb(240,150,33)" fg:x="92128" fg:w="14"/><text x="86.0558%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="85.8058%" y="1541" width="0.0130%" height="15" fill="rgb(208,202,37)" fg:x="92128" fg:w="14"/><text x="86.0558%" y="1551.50"></text></g><g><title>hashbrown::map::make_insert_hash (43 samples, 0.04%)</title><rect x="85.7797%" y="1669" width="0.0400%" height="15" fill="rgb(251,37,12)" fg:x="92100" fg:w="43"/><text x="86.0297%" y="1679.50"></text></g><g><title>core::hash::BuildHasher::hash_one (43 samples, 0.04%)</title><rect x="85.7797%" y="1653" width="0.0400%" height="15" fill="rgb(247,150,26)" fg:x="92100" fg:w="43"/><text x="86.0297%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (20 samples, 0.02%)</title><rect x="85.8012%" y="1637" width="0.0186%" height="15" fill="rgb(232,28,8)" fg:x="92123" fg:w="20"/><text x="86.0512%" y="1647.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="85.8012%" y="1621" width="0.0186%" height="15" fill="rgb(226,121,34)" fg:x="92123" fg:w="20"/><text x="86.0512%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (18 samples, 0.02%)</title><rect x="85.8030%" y="1605" width="0.0168%" height="15" fill="rgb(237,23,13)" fg:x="92125" fg:w="18"/><text x="86.0530%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_u64 (15 samples, 0.01%)</title><rect x="85.8058%" y="1589" width="0.0140%" height="15" fill="rgb(214,42,29)" fg:x="92128" fg:w="15"/><text x="86.0558%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="85.8282%" y="1653" width="0.0112%" height="15" fill="rgb(246,204,29)" fg:x="92152" fg:w="12"/><text x="86.0782%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.01%)</title><rect x="85.8282%" y="1637" width="0.0112%" height="15" fill="rgb(242,28,40)" fg:x="92152" fg:w="12"/><text x="86.0782%" y="1647.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (77 samples, 0.07%)</title><rect x="85.7797%" y="1749" width="0.0717%" height="15" fill="rgb(243,64,49)" fg:x="92100" fg:w="77"/><text x="86.0297%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (77 samples, 0.07%)</title><rect x="85.7797%" y="1733" width="0.0717%" height="15" fill="rgb(226,93,13)" fg:x="92100" fg:w="77"/><text x="86.0297%" y="1743.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (77 samples, 0.07%)</title><rect x="85.7797%" y="1717" width="0.0717%" height="15" fill="rgb(241,113,26)" fg:x="92100" fg:w="77"/><text x="86.0297%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (77 samples, 0.07%)</title><rect x="85.7797%" y="1701" width="0.0717%" height="15" fill="rgb(209,209,0)" fg:x="92100" fg:w="77"/><text x="86.0297%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (77 samples, 0.07%)</title><rect x="85.7797%" y="1685" width="0.0717%" height="15" fill="rgb(251,183,50)" fg:x="92100" fg:w="77"/><text x="86.0297%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (34 samples, 0.03%)</title><rect x="85.8198%" y="1669" width="0.0317%" height="15" fill="rgb(248,24,43)" fg:x="92143" fg:w="34"/><text x="86.0698%" y="1679.50"></text></g><g><title>cfree (26 samples, 0.02%)</title><rect x="85.8571%" y="1365" width="0.0242%" height="15" fill="rgb(218,102,9)" fg:x="92183" fg:w="26"/><text x="86.1071%" y="1375.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="85.8571%" y="1349" width="0.0242%" height="15" fill="rgb(249,209,39)" fg:x="92183" fg:w="26"/><text x="86.1071%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (60 samples, 0.06%)</title><rect x="85.8571%" y="1445" width="0.0559%" height="15" fill="rgb(210,37,6)" fg:x="92183" fg:w="60"/><text x="86.1071%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (60 samples, 0.06%)</title><rect x="85.8571%" y="1429" width="0.0559%" height="15" fill="rgb(212,99,4)" fg:x="92183" fg:w="60"/><text x="86.1071%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (60 samples, 0.06%)</title><rect x="85.8571%" y="1413" width="0.0559%" height="15" fill="rgb(253,59,46)" fg:x="92183" fg:w="60"/><text x="86.1071%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.06%)</title><rect x="85.8571%" y="1397" width="0.0559%" height="15" fill="rgb(229,96,9)" fg:x="92183" fg:w="60"/><text x="86.1071%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (60 samples, 0.06%)</title><rect x="85.8571%" y="1381" width="0.0559%" height="15" fill="rgb(207,103,49)" fg:x="92183" fg:w="60"/><text x="86.1071%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (34 samples, 0.03%)</title><rect x="85.8813%" y="1365" width="0.0317%" height="15" fill="rgb(250,226,20)" fg:x="92209" fg:w="34"/><text x="86.1313%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (31 samples, 0.03%)</title><rect x="85.8841%" y="1349" width="0.0289%" height="15" fill="rgb(238,220,11)" fg:x="92212" fg:w="31"/><text x="86.1341%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (31 samples, 0.03%)</title><rect x="85.8841%" y="1333" width="0.0289%" height="15" fill="rgb(236,74,15)" fg:x="92212" fg:w="31"/><text x="86.1341%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="85.8841%" y="1317" width="0.0289%" height="15" fill="rgb(218,43,40)" fg:x="92212" fg:w="31"/><text x="86.1341%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (31 samples, 0.03%)</title><rect x="85.8841%" y="1301" width="0.0289%" height="15" fill="rgb(245,206,37)" fg:x="92212" fg:w="31"/><text x="86.1341%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (22 samples, 0.02%)</title><rect x="85.8924%" y="1285" width="0.0205%" height="15" fill="rgb(206,30,3)" fg:x="92221" fg:w="22"/><text x="86.1424%" y="1295.50"></text></g><g><title>cfree (22 samples, 0.02%)</title><rect x="85.9204%" y="1285" width="0.0205%" height="15" fill="rgb(211,29,35)" fg:x="92251" fg:w="22"/><text x="86.1704%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (20 samples, 0.02%)</title><rect x="85.9688%" y="1045" width="0.0186%" height="15" fill="rgb(218,49,50)" fg:x="92303" fg:w="20"/><text x="86.2188%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.08%)</title><rect x="85.9129%" y="1333" width="0.0820%" height="15" fill="rgb(211,114,30)" fg:x="92243" fg:w="88"/><text x="86.1629%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (88 samples, 0.08%)</title><rect x="85.9129%" y="1317" width="0.0820%" height="15" fill="rgb(238,70,33)" fg:x="92243" fg:w="88"/><text x="86.1629%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (80 samples, 0.07%)</title><rect x="85.9204%" y="1301" width="0.0745%" height="15" fill="rgb(238,141,50)" fg:x="92251" fg:w="80"/><text x="86.1704%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="85.9409%" y="1285" width="0.0540%" height="15" fill="rgb(205,69,6)" fg:x="92273" fg:w="58"/><text x="86.1909%" y="1295.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="85.9409%" y="1269" width="0.0540%" height="15" fill="rgb(229,65,0)" fg:x="92273" fg:w="58"/><text x="86.1909%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="85.9409%" y="1253" width="0.0540%" height="15" fill="rgb(211,3,37)" fg:x="92273" fg:w="58"/><text x="86.1909%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="85.9409%" y="1237" width="0.0540%" height="15" fill="rgb(223,196,42)" fg:x="92273" fg:w="58"/><text x="86.1909%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (58 samples, 0.05%)</title><rect x="85.9409%" y="1221" width="0.0540%" height="15" fill="rgb(227,191,15)" fg:x="92273" fg:w="58"/><text x="86.1909%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="85.9409%" y="1205" width="0.0540%" height="15" fill="rgb(229,210,53)" fg:x="92273" fg:w="58"/><text x="86.1909%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (58 samples, 0.05%)</title><rect x="85.9409%" y="1189" width="0.0540%" height="15" fill="rgb(250,203,10)" fg:x="92273" fg:w="58"/><text x="86.1909%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (53 samples, 0.05%)</title><rect x="85.9455%" y="1173" width="0.0494%" height="15" fill="rgb(247,8,37)" fg:x="92278" fg:w="53"/><text x="86.1955%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (40 samples, 0.04%)</title><rect x="85.9576%" y="1157" width="0.0373%" height="15" fill="rgb(240,52,9)" fg:x="92291" fg:w="40"/><text x="86.2076%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="85.9576%" y="1141" width="0.0373%" height="15" fill="rgb(243,100,52)" fg:x="92291" fg:w="40"/><text x="86.2076%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (36 samples, 0.03%)</title><rect x="85.9614%" y="1125" width="0.0335%" height="15" fill="rgb(224,149,30)" fg:x="92295" fg:w="36"/><text x="86.2114%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (36 samples, 0.03%)</title><rect x="85.9614%" y="1109" width="0.0335%" height="15" fill="rgb(232,27,45)" fg:x="92295" fg:w="36"/><text x="86.2114%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (36 samples, 0.03%)</title><rect x="85.9614%" y="1093" width="0.0335%" height="15" fill="rgb(242,161,36)" fg:x="92295" fg:w="36"/><text x="86.2114%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="85.9614%" y="1077" width="0.0335%" height="15" fill="rgb(235,223,32)" fg:x="92295" fg:w="36"/><text x="86.2114%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (35 samples, 0.03%)</title><rect x="85.9623%" y="1061" width="0.0326%" height="15" fill="rgb(242,78,19)" fg:x="92296" fg:w="35"/><text x="86.2123%" y="1071.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (298 samples, 0.28%)</title><rect x="85.7341%" y="2005" width="0.2776%" height="15" fill="rgb(233,157,47)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="2015.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (298 samples, 0.28%)</title><rect x="85.7341%" y="1989" width="0.2776%" height="15" fill="rgb(251,213,5)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1999.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (298 samples, 0.28%)</title><rect x="85.7341%" y="1973" width="0.2776%" height="15" fill="rgb(215,223,5)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1983.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (298 samples, 0.28%)</title><rect x="85.7341%" y="1957" width="0.2776%" height="15" fill="rgb(230,14,7)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (298 samples, 0.28%)</title><rect x="85.7341%" y="1941" width="0.2776%" height="15" fill="rgb(249,179,20)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (298 samples, 0.28%)</title><rect x="85.7341%" y="1925" width="0.2776%" height="15" fill="rgb(230,204,44)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1935.50"></text></g><g><title>std::panicking::try (298 samples, 0.28%)</title><rect x="85.7341%" y="1909" width="0.2776%" height="15" fill="rgb(233,229,46)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (298 samples, 0.28%)</title><rect x="85.7341%" y="1893" width="0.2776%" height="15" fill="rgb(210,154,35)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (298 samples, 0.28%)</title><rect x="85.7341%" y="1877" width="0.2776%" height="15" fill="rgb(220,178,16)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1887.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (298 samples, 0.28%)</title><rect x="85.7341%" y="1861" width="0.2776%" height="15" fill="rgb(243,0,53)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1871.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (298 samples, 0.28%)</title><rect x="85.7341%" y="1845" width="0.2776%" height="15" fill="rgb(223,221,47)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1855.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (298 samples, 0.28%)</title><rect x="85.7341%" y="1829" width="0.2776%" height="15" fill="rgb(233,82,15)" fg:x="92051" fg:w="298"/><text x="85.9841%" y="1839.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (264 samples, 0.25%)</title><rect x="85.7658%" y="1813" width="0.2459%" height="15" fill="rgb(222,8,38)" fg:x="92085" fg:w="264"/><text x="86.0158%" y="1823.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (264 samples, 0.25%)</title><rect x="85.7658%" y="1797" width="0.2459%" height="15" fill="rgb(241,28,48)" fg:x="92085" fg:w="264"/><text x="86.0158%" y="1807.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (264 samples, 0.25%)</title><rect x="85.7658%" y="1781" width="0.2459%" height="15" fill="rgb(209,227,15)" fg:x="92085" fg:w="264"/><text x="86.0158%" y="1791.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (264 samples, 0.25%)</title><rect x="85.7658%" y="1765" width="0.2459%" height="15" fill="rgb(234,189,48)" fg:x="92085" fg:w="264"/><text x="86.0158%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1749" width="0.1602%" height="15" fill="rgb(212,27,44)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1733" width="0.1602%" height="15" fill="rgb(249,55,42)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1717" width="0.1602%" height="15" fill="rgb(215,211,28)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1701" width="0.1602%" height="15" fill="rgb(221,155,16)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.16%)</title><rect x="85.8515%" y="1685" width="0.1602%" height="15" fill="rgb(247,106,30)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1695.50"></text></g><g><title>core::mem::drop (172 samples, 0.16%)</title><rect x="85.8515%" y="1669" width="0.1602%" height="15" fill="rgb(230,76,31)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1653" width="0.1602%" height="15" fill="rgb(222,6,48)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.16%)</title><rect x="85.8515%" y="1637" width="0.1602%" height="15" fill="rgb(228,82,3)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (172 samples, 0.16%)</title><rect x="85.8515%" y="1621" width="0.1602%" height="15" fill="rgb(245,208,52)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1631.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (172 samples, 0.16%)</title><rect x="85.8515%" y="1605" width="0.1602%" height="15" fill="rgb(218,65,17)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1589" width="0.1602%" height="15" fill="rgb(242,63,26)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1573" width="0.1602%" height="15" fill="rgb(224,119,39)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.16%)</title><rect x="85.8515%" y="1557" width="0.1602%" height="15" fill="rgb(229,106,3)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1567.50"></text></g><g><title>core::mem::drop (172 samples, 0.16%)</title><rect x="85.8515%" y="1541" width="0.1602%" height="15" fill="rgb(248,6,33)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (172 samples, 0.16%)</title><rect x="85.8515%" y="1525" width="0.1602%" height="15" fill="rgb(226,3,49)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.16%)</title><rect x="85.8515%" y="1509" width="0.1602%" height="15" fill="rgb(228,142,14)" fg:x="92177" fg:w="172"/><text x="86.1015%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (166 samples, 0.15%)</title><rect x="85.8571%" y="1493" width="0.1546%" height="15" fill="rgb(241,141,54)" fg:x="92183" fg:w="166"/><text x="86.1071%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (166 samples, 0.15%)</title><rect x="85.8571%" y="1477" width="0.1546%" height="15" fill="rgb(252,17,50)" fg:x="92183" fg:w="166"/><text x="86.1071%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (166 samples, 0.15%)</title><rect x="85.8571%" y="1461" width="0.1546%" height="15" fill="rgb(221,120,48)" fg:x="92183" fg:w="166"/><text x="86.1071%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (106 samples, 0.10%)</title><rect x="85.9129%" y="1445" width="0.0987%" height="15" fill="rgb(229,171,33)" fg:x="92243" fg:w="106"/><text x="86.1629%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (106 samples, 0.10%)</title><rect x="85.9129%" y="1429" width="0.0987%" height="15" fill="rgb(236,207,21)" fg:x="92243" fg:w="106"/><text x="86.1629%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (106 samples, 0.10%)</title><rect x="85.9129%" y="1413" width="0.0987%" height="15" fill="rgb(218,93,35)" fg:x="92243" fg:w="106"/><text x="86.1629%" y="1423.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.10%)</title><rect x="85.9129%" y="1397" width="0.0987%" height="15" fill="rgb(207,101,8)" fg:x="92243" fg:w="106"/><text x="86.1629%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (106 samples, 0.10%)</title><rect x="85.9129%" y="1381" width="0.0987%" height="15" fill="rgb(237,67,44)" fg:x="92243" fg:w="106"/><text x="86.1629%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (106 samples, 0.10%)</title><rect x="85.9129%" y="1365" width="0.0987%" height="15" fill="rgb(236,218,7)" fg:x="92243" fg:w="106"/><text x="86.1629%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (106 samples, 0.10%)</title><rect x="85.9129%" y="1349" width="0.0987%" height="15" fill="rgb(252,207,10)" fg:x="92243" fg:w="106"/><text x="86.1629%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (18 samples, 0.02%)</title><rect x="85.9949%" y="1333" width="0.0168%" height="15" fill="rgb(221,175,6)" fg:x="92331" fg:w="18"/><text x="86.2449%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="85.9949%" y="1317" width="0.0168%" height="15" fill="rgb(230,105,53)" fg:x="92331" fg:w="18"/><text x="86.2449%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="85.9949%" y="1301" width="0.0168%" height="15" fill="rgb(253,83,6)" fg:x="92331" fg:w="18"/><text x="86.2449%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="85.9949%" y="1285" width="0.0168%" height="15" fill="rgb(206,198,44)" fg:x="92331" fg:w="18"/><text x="86.2449%" y="1295.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="85.9949%" y="1269" width="0.0168%" height="15" fill="rgb(206,164,29)" fg:x="92331" fg:w="18"/><text x="86.2449%" y="1279.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="85.9949%" y="1253" width="0.0168%" height="15" fill="rgb(215,2,50)" fg:x="92331" fg:w="18"/><text x="86.2449%" y="1263.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (12 samples, 0.01%)</title><rect x="86.0424%" y="1461" width="0.0112%" height="15" fill="rgb(246,127,18)" fg:x="92382" fg:w="12"/><text x="86.2924%" y="1471.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (29 samples, 0.03%)</title><rect x="86.0536%" y="1461" width="0.0270%" height="15" fill="rgb(232,6,21)" fg:x="92394" fg:w="29"/><text x="86.3036%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (383 samples, 0.36%)</title><rect x="85.7341%" y="2053" width="0.3567%" height="15" fill="rgb(224,154,1)" fg:x="92051" fg:w="383"/><text x="85.9841%" y="2063.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (383 samples, 0.36%)</title><rect x="85.7341%" y="2037" width="0.3567%" height="15" fill="rgb(248,135,32)" fg:x="92051" fg:w="383"/><text x="85.9841%" y="2047.50"></text></g><g><title>rayon_core::job::JobRef::execute (383 samples, 0.36%)</title><rect x="85.7341%" y="2021" width="0.3567%" height="15" fill="rgb(253,129,38)" fg:x="92051" fg:w="383"/><text x="85.9841%" y="2031.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (85 samples, 0.08%)</title><rect x="86.0117%" y="2005" width="0.0792%" height="15" fill="rgb(214,110,11)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="2015.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (85 samples, 0.08%)</title><rect x="86.0117%" y="1989" width="0.0792%" height="15" fill="rgb(246,150,22)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="1999.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (85 samples, 0.08%)</title><rect x="86.0117%" y="1973" width="0.0792%" height="15" fill="rgb(219,170,39)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="1983.50"></text></g><g><title>std::panic::catch_unwind (85 samples, 0.08%)</title><rect x="86.0117%" y="1957" width="0.0792%" height="15" fill="rgb(221,143,52)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="1967.50"></text></g><g><title>std::panicking::try (85 samples, 0.08%)</title><rect x="86.0117%" y="1941" width="0.0792%" height="15" fill="rgb(237,122,11)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="1951.50"></text></g><g><title>std::panicking::try::do_call (85 samples, 0.08%)</title><rect x="86.0117%" y="1925" width="0.0792%" height="15" fill="rgb(217,114,13)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="1935.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="86.0117%" y="1909" width="0.0792%" height="15" fill="rgb(218,184,28)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="1919.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (85 samples, 0.08%)</title><rect x="86.0117%" y="1893" width="0.0792%" height="15" fill="rgb(237,33,22)" fg:x="92349" fg:w="85"/><text x="86.2617%" y="1903.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (84 samples, 0.08%)</title><rect x="86.0126%" y="1877" width="0.0782%" height="15" fill="rgb(224,56,42)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1887.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (84 samples, 0.08%)</title><rect x="86.0126%" y="1861" width="0.0782%" height="15" fill="rgb(216,138,53)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1871.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (84 samples, 0.08%)</title><rect x="86.0126%" y="1845" width="0.0782%" height="15" fill="rgb(233,229,40)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1855.50"></text></g><g><title>rayon_core::scope::scope (84 samples, 0.08%)</title><rect x="86.0126%" y="1829" width="0.0782%" height="15" fill="rgb(252,105,0)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1839.50"></text></g><g><title>rayon_core::registry::in_worker (84 samples, 0.08%)</title><rect x="86.0126%" y="1813" width="0.0782%" height="15" fill="rgb(212,75,24)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1823.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (84 samples, 0.08%)</title><rect x="86.0126%" y="1797" width="0.0782%" height="15" fill="rgb(235,168,50)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1807.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (84 samples, 0.08%)</title><rect x="86.0126%" y="1781" width="0.0782%" height="15" fill="rgb(247,204,12)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (84 samples, 0.08%)</title><rect x="86.0126%" y="1765" width="0.0782%" height="15" fill="rgb(250,203,27)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (84 samples, 0.08%)</title><rect x="86.0126%" y="1749" width="0.0782%" height="15" fill="rgb(221,215,2)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1759.50"></text></g><g><title>rayon_core::job::JobRef::execute (84 samples, 0.08%)</title><rect x="86.0126%" y="1733" width="0.0782%" height="15" fill="rgb(242,163,47)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1743.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (84 samples, 0.08%)</title><rect x="86.0126%" y="1717" width="0.0782%" height="15" fill="rgb(237,136,50)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1727.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (84 samples, 0.08%)</title><rect x="86.0126%" y="1701" width="0.0782%" height="15" fill="rgb(217,201,47)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1711.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (84 samples, 0.08%)</title><rect x="86.0126%" y="1685" width="0.0782%" height="15" fill="rgb(212,38,47)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1695.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (84 samples, 0.08%)</title><rect x="86.0126%" y="1669" width="0.0782%" height="15" fill="rgb(254,113,41)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1679.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (84 samples, 0.08%)</title><rect x="86.0126%" y="1653" width="0.0782%" height="15" fill="rgb(236,7,22)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (84 samples, 0.08%)</title><rect x="86.0126%" y="1637" width="0.0782%" height="15" fill="rgb(235,81,25)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1647.50"></text></g><g><title>std::panicking::try (84 samples, 0.08%)</title><rect x="86.0126%" y="1621" width="0.0782%" height="15" fill="rgb(216,41,31)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (84 samples, 0.08%)</title><rect x="86.0126%" y="1605" width="0.0782%" height="15" fill="rgb(249,219,15)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (84 samples, 0.08%)</title><rect x="86.0126%" y="1589" width="0.0782%" height="15" fill="rgb(248,201,3)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1599.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (84 samples, 0.08%)</title><rect x="86.0126%" y="1573" width="0.0782%" height="15" fill="rgb(249,141,18)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1583.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (84 samples, 0.08%)</title><rect x="86.0126%" y="1557" width="0.0782%" height="15" fill="rgb(222,32,39)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1567.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (84 samples, 0.08%)</title><rect x="86.0126%" y="1541" width="0.0782%" height="15" fill="rgb(237,139,51)" fg:x="92350" fg:w="84"/><text x="86.2626%" y="1551.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (80 samples, 0.07%)</title><rect x="86.0163%" y="1525" width="0.0745%" height="15" fill="rgb(218,210,4)" fg:x="92354" fg:w="80"/><text x="86.2663%" y="1535.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (80 samples, 0.07%)</title><rect x="86.0163%" y="1509" width="0.0745%" height="15" fill="rgb(217,199,13)" fg:x="92354" fg:w="80"/><text x="86.2663%" y="1519.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (80 samples, 0.07%)</title><rect x="86.0163%" y="1493" width="0.0745%" height="15" fill="rgb(222,118,25)" fg:x="92354" fg:w="80"/><text x="86.2663%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (80 samples, 0.07%)</title><rect x="86.0163%" y="1477" width="0.0745%" height="15" fill="rgb(241,70,28)" fg:x="92354" fg:w="80"/><text x="86.2663%" y="1487.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="86.0908%" y="2053" width="0.0168%" height="15" fill="rgb(205,51,41)" fg:x="92434" fg:w="18"/><text x="86.3408%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="86.0908%" y="2037" width="0.0168%" height="15" fill="rgb(237,165,49)" fg:x="92434" fg:w="18"/><text x="86.3408%" y="2047.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.01%)</title><rect x="86.0946%" y="2021" width="0.0130%" height="15" fill="rgb(213,10,51)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="2031.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="86.0946%" y="2005" width="0.0130%" height="15" fill="rgb(245,89,32)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="2015.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="86.0946%" y="1989" width="0.0130%" height="15" fill="rgb(249,81,54)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1999.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="86.0946%" y="1973" width="0.0130%" height="15" fill="rgb(223,134,14)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1983.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="86.0946%" y="1957" width="0.0130%" height="15" fill="rgb(233,62,37)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1967.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.01%)</title><rect x="86.0946%" y="1941" width="0.0130%" height="15" fill="rgb(219,117,42)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.01%)</title><rect x="86.0946%" y="1925" width="0.0130%" height="15" fill="rgb(248,40,28)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.01%)</title><rect x="86.0946%" y="1909" width="0.0130%" height="15" fill="rgb(246,66,35)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1919.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.01%)</title><rect x="86.0946%" y="1893" width="0.0130%" height="15" fill="rgb(250,229,22)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1903.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.01%)</title><rect x="86.0946%" y="1877" width="0.0130%" height="15" fill="rgb(213,89,18)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.01%)</title><rect x="86.0946%" y="1861" width="0.0130%" height="15" fill="rgb(213,122,9)" fg:x="92438" fg:w="14"/><text x="86.3446%" y="1871.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (15 samples, 0.01%)</title><rect x="86.1169%" y="1733" width="0.0140%" height="15" fill="rgb(220,213,48)" fg:x="92462" fg:w="15"/><text x="86.3669%" y="1743.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (15 samples, 0.01%)</title><rect x="86.1169%" y="1717" width="0.0140%" height="15" fill="rgb(244,109,54)" fg:x="92462" fg:w="15"/><text x="86.3669%" y="1727.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (15 samples, 0.01%)</title><rect x="86.1169%" y="1701" width="0.0140%" height="15" fill="rgb(254,104,49)" fg:x="92462" fg:w="15"/><text x="86.3669%" y="1711.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.01%)</title><rect x="86.1169%" y="1685" width="0.0140%" height="15" fill="rgb(219,28,32)" fg:x="92462" fg:w="15"/><text x="86.3669%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.01%)</title><rect x="86.1169%" y="1669" width="0.0140%" height="15" fill="rgb(249,153,33)" fg:x="92462" fg:w="15"/><text x="86.3669%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (17 samples, 0.02%)</title><rect x="86.1355%" y="1429" width="0.0158%" height="15" fill="rgb(230,116,21)" fg:x="92482" fg:w="17"/><text x="86.3855%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (17 samples, 0.02%)</title><rect x="86.1355%" y="1413" width="0.0158%" height="15" fill="rgb(247,110,3)" fg:x="92482" fg:w="17"/><text x="86.3855%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (17 samples, 0.02%)</title><rect x="86.1355%" y="1397" width="0.0158%" height="15" fill="rgb(227,128,3)" fg:x="92482" fg:w="17"/><text x="86.3855%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="86.1355%" y="1381" width="0.0158%" height="15" fill="rgb(208,21,1)" fg:x="92482" fg:w="17"/><text x="86.3855%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (17 samples, 0.02%)</title><rect x="86.1355%" y="1365" width="0.0158%" height="15" fill="rgb(225,24,20)" fg:x="92482" fg:w="17"/><text x="86.3855%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="86.1514%" y="1317" width="0.0140%" height="15" fill="rgb(250,159,24)" fg:x="92499" fg:w="15"/><text x="86.4014%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (15 samples, 0.01%)</title><rect x="86.1514%" y="1301" width="0.0140%" height="15" fill="rgb(214,30,53)" fg:x="92499" fg:w="15"/><text x="86.4014%" y="1311.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="86.1514%" y="1381" width="0.0158%" height="15" fill="rgb(243,198,11)" fg:x="92499" fg:w="17"/><text x="86.4014%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="86.1514%" y="1365" width="0.0158%" height="15" fill="rgb(232,33,1)" fg:x="92499" fg:w="17"/><text x="86.4014%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="86.1514%" y="1349" width="0.0158%" height="15" fill="rgb(242,60,11)" fg:x="92499" fg:w="17"/><text x="86.4014%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (17 samples, 0.02%)</title><rect x="86.1514%" y="1333" width="0.0158%" height="15" fill="rgb(241,229,34)" fg:x="92499" fg:w="17"/><text x="86.4014%" y="1343.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (67 samples, 0.06%)</title><rect x="86.1076%" y="2053" width="0.0624%" height="15" fill="rgb(230,92,51)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="2063.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (67 samples, 0.06%)</title><rect x="86.1076%" y="2037" width="0.0624%" height="15" fill="rgb(212,209,8)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (67 samples, 0.06%)</title><rect x="86.1076%" y="2021" width="0.0624%" height="15" fill="rgb(241,55,35)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="2031.50"></text></g><g><title>rayon_core::job::JobRef::execute (67 samples, 0.06%)</title><rect x="86.1076%" y="2005" width="0.0624%" height="15" fill="rgb(208,187,52)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="2015.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (67 samples, 0.06%)</title><rect x="86.1076%" y="1989" width="0.0624%" height="15" fill="rgb(251,110,17)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1999.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (67 samples, 0.06%)</title><rect x="86.1076%" y="1973" width="0.0624%" height="15" fill="rgb(246,225,54)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1983.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (67 samples, 0.06%)</title><rect x="86.1076%" y="1957" width="0.0624%" height="15" fill="rgb(220,109,6)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1967.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (67 samples, 0.06%)</title><rect x="86.1076%" y="1941" width="0.0624%" height="15" fill="rgb(228,56,50)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1951.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (67 samples, 0.06%)</title><rect x="86.1076%" y="1925" width="0.0624%" height="15" fill="rgb(230,34,30)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (67 samples, 0.06%)</title><rect x="86.1076%" y="1909" width="0.0624%" height="15" fill="rgb(205,28,42)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1919.50"></text></g><g><title>std::panicking::try (67 samples, 0.06%)</title><rect x="86.1076%" y="1893" width="0.0624%" height="15" fill="rgb(215,68,0)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (67 samples, 0.06%)</title><rect x="86.1076%" y="1877" width="0.0624%" height="15" fill="rgb(206,91,47)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1887.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (67 samples, 0.06%)</title><rect x="86.1076%" y="1861" width="0.0624%" height="15" fill="rgb(241,159,43)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1871.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (67 samples, 0.06%)</title><rect x="86.1076%" y="1845" width="0.0624%" height="15" fill="rgb(232,191,38)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1855.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (67 samples, 0.06%)</title><rect x="86.1076%" y="1829" width="0.0624%" height="15" fill="rgb(212,180,41)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1839.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (67 samples, 0.06%)</title><rect x="86.1076%" y="1813" width="0.0624%" height="15" fill="rgb(236,134,49)" fg:x="92452" fg:w="67"/><text x="86.3576%" y="1823.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (64 samples, 0.06%)</title><rect x="86.1104%" y="1797" width="0.0596%" height="15" fill="rgb(221,83,26)" fg:x="92455" fg:w="64"/><text x="86.3604%" y="1807.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (64 samples, 0.06%)</title><rect x="86.1104%" y="1781" width="0.0596%" height="15" fill="rgb(215,87,39)" fg:x="92455" fg:w="64"/><text x="86.3604%" y="1791.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (64 samples, 0.06%)</title><rect x="86.1104%" y="1765" width="0.0596%" height="15" fill="rgb(242,28,29)" fg:x="92455" fg:w="64"/><text x="86.3604%" y="1775.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (64 samples, 0.06%)</title><rect x="86.1104%" y="1749" width="0.0596%" height="15" fill="rgb(212,219,47)" fg:x="92455" fg:w="64"/><text x="86.3604%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1733" width="0.0391%" height="15" fill="rgb(221,35,20)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1717" width="0.0391%" height="15" fill="rgb(234,144,13)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1701" width="0.0391%" height="15" fill="rgb(237,41,27)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1685" width="0.0391%" height="15" fill="rgb(253,175,5)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="86.1309%" y="1669" width="0.0391%" height="15" fill="rgb(235,210,51)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1679.50"></text></g><g><title>core::mem::drop (42 samples, 0.04%)</title><rect x="86.1309%" y="1653" width="0.0391%" height="15" fill="rgb(241,180,35)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1637" width="0.0391%" height="15" fill="rgb(219,45,16)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="86.1309%" y="1621" width="0.0391%" height="15" fill="rgb(247,212,4)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (42 samples, 0.04%)</title><rect x="86.1309%" y="1605" width="0.0391%" height="15" fill="rgb(224,211,1)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1615.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (42 samples, 0.04%)</title><rect x="86.1309%" y="1589" width="0.0391%" height="15" fill="rgb(210,193,36)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1573" width="0.0391%" height="15" fill="rgb(215,121,20)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1557" width="0.0391%" height="15" fill="rgb(238,146,2)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="86.1309%" y="1541" width="0.0391%" height="15" fill="rgb(254,123,45)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1551.50"></text></g><g><title>core::mem::drop (42 samples, 0.04%)</title><rect x="86.1309%" y="1525" width="0.0391%" height="15" fill="rgb(225,126,11)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (42 samples, 0.04%)</title><rect x="86.1309%" y="1509" width="0.0391%" height="15" fill="rgb(239,12,5)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="86.1309%" y="1493" width="0.0391%" height="15" fill="rgb(241,207,14)" fg:x="92477" fg:w="42"/><text x="86.3809%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (39 samples, 0.04%)</title><rect x="86.1337%" y="1477" width="0.0363%" height="15" fill="rgb(227,134,33)" fg:x="92480" fg:w="39"/><text x="86.3837%" y="1487.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (38 samples, 0.04%)</title><rect x="86.1346%" y="1461" width="0.0354%" height="15" fill="rgb(221,40,52)" fg:x="92481" fg:w="38"/><text x="86.3846%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (38 samples, 0.04%)</title><rect x="86.1346%" y="1445" width="0.0354%" height="15" fill="rgb(206,93,8)" fg:x="92481" fg:w="38"/><text x="86.3846%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (20 samples, 0.02%)</title><rect x="86.1514%" y="1429" width="0.0186%" height="15" fill="rgb(242,160,22)" fg:x="92499" fg:w="20"/><text x="86.4014%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (20 samples, 0.02%)</title><rect x="86.1514%" y="1413" width="0.0186%" height="15" fill="rgb(232,204,40)" fg:x="92499" fg:w="20"/><text x="86.4014%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="86.1514%" y="1397" width="0.0186%" height="15" fill="rgb(247,210,47)" fg:x="92499" fg:w="20"/><text x="86.4014%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (13 samples, 0.01%)</title><rect x="86.1700%" y="1669" width="0.0121%" height="15" fill="rgb(211,91,7)" fg:x="92519" fg:w="13"/><text x="86.4200%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (13 samples, 0.01%)</title><rect x="86.1700%" y="1653" width="0.0121%" height="15" fill="rgb(252,160,34)" fg:x="92519" fg:w="13"/><text x="86.4200%" y="1663.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (14 samples, 0.01%)</title><rect x="86.1700%" y="1781" width="0.0130%" height="15" fill="rgb(220,34,39)" fg:x="92519" fg:w="14"/><text x="86.4200%" y="1791.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (14 samples, 0.01%)</title><rect x="86.1700%" y="1765" width="0.0130%" height="15" fill="rgb(247,49,38)" fg:x="92519" fg:w="14"/><text x="86.4200%" y="1775.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (14 samples, 0.01%)</title><rect x="86.1700%" y="1749" width="0.0130%" height="15" fill="rgb(228,175,44)" fg:x="92519" fg:w="14"/><text x="86.4200%" y="1759.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (14 samples, 0.01%)</title><rect x="86.1700%" y="1733" width="0.0130%" height="15" fill="rgb(218,214,32)" fg:x="92519" fg:w="14"/><text x="86.4200%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (14 samples, 0.01%)</title><rect x="86.1700%" y="1717" width="0.0130%" height="15" fill="rgb(213,50,12)" fg:x="92519" fg:w="14"/><text x="86.4200%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (14 samples, 0.01%)</title><rect x="86.1700%" y="1701" width="0.0130%" height="15" fill="rgb(219,35,41)" fg:x="92519" fg:w="14"/><text x="86.4200%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (14 samples, 0.01%)</title><rect x="86.1700%" y="1685" width="0.0130%" height="15" fill="rgb(219,18,38)" fg:x="92519" fg:w="14"/><text x="86.4200%" y="1695.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (18 samples, 0.02%)</title><rect x="86.1830%" y="1717" width="0.0168%" height="15" fill="rgb(223,217,6)" fg:x="92533" fg:w="18"/><text x="86.4330%" y="1727.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (15 samples, 0.01%)</title><rect x="86.1858%" y="1701" width="0.0140%" height="15" fill="rgb(208,193,35)" fg:x="92536" fg:w="15"/><text x="86.4358%" y="1711.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (15 samples, 0.01%)</title><rect x="86.1858%" y="1685" width="0.0140%" height="15" fill="rgb(254,212,54)" fg:x="92536" fg:w="15"/><text x="86.4358%" y="1695.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::check_gas (15 samples, 0.01%)</title><rect x="86.1858%" y="1669" width="0.0140%" height="15" fill="rgb(205,10,2)" fg:x="92536" fg:w="15"/><text x="86.4358%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (21 samples, 0.02%)</title><rect x="86.2091%" y="1717" width="0.0196%" height="15" fill="rgb(230,133,29)" fg:x="92561" fg:w="21"/><text x="86.4591%" y="1727.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (21 samples, 0.02%)</title><rect x="86.2091%" y="1701" width="0.0196%" height="15" fill="rgb(226,14,15)" fg:x="92561" fg:w="21"/><text x="86.4591%" y="1711.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (15 samples, 0.01%)</title><rect x="86.2147%" y="1685" width="0.0140%" height="15" fill="rgb(226,140,54)" fg:x="92567" fg:w="15"/><text x="86.4647%" y="1695.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (80 samples, 0.07%)</title><rect x="86.1700%" y="2053" width="0.0745%" height="15" fill="rgb(250,47,41)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="2063.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (80 samples, 0.07%)</title><rect x="86.1700%" y="2037" width="0.0745%" height="15" fill="rgb(227,218,41)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (80 samples, 0.07%)</title><rect x="86.1700%" y="2021" width="0.0745%" height="15" fill="rgb(254,183,7)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="2031.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (80 samples, 0.07%)</title><rect x="86.1700%" y="2005" width="0.0745%" height="15" fill="rgb(206,84,53)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="2015.50"></text></g><g><title>rayon_core::job::JobRef::execute (80 samples, 0.07%)</title><rect x="86.1700%" y="1989" width="0.0745%" height="15" fill="rgb(213,177,2)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1999.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (80 samples, 0.07%)</title><rect x="86.1700%" y="1973" width="0.0745%" height="15" fill="rgb(234,28,29)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1983.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (80 samples, 0.07%)</title><rect x="86.1700%" y="1957" width="0.0745%" height="15" fill="rgb(248,211,38)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1967.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (80 samples, 0.07%)</title><rect x="86.1700%" y="1941" width="0.0745%" height="15" fill="rgb(246,30,0)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1951.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (80 samples, 0.07%)</title><rect x="86.1700%" y="1925" width="0.0745%" height="15" fill="rgb(244,115,24)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1935.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (80 samples, 0.07%)</title><rect x="86.1700%" y="1909" width="0.0745%" height="15" fill="rgb(226,193,14)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1919.50"></text></g><g><title>std::panic::catch_unwind (80 samples, 0.07%)</title><rect x="86.1700%" y="1893" width="0.0745%" height="15" fill="rgb(211,196,48)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1903.50"></text></g><g><title>std::panicking::try (80 samples, 0.07%)</title><rect x="86.1700%" y="1877" width="0.0745%" height="15" fill="rgb(235,32,20)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1887.50"></text></g><g><title>std::panicking::try::do_call (80 samples, 0.07%)</title><rect x="86.1700%" y="1861" width="0.0745%" height="15" fill="rgb(251,151,49)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1871.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (80 samples, 0.07%)</title><rect x="86.1700%" y="1845" width="0.0745%" height="15" fill="rgb(254,141,38)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1855.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (80 samples, 0.07%)</title><rect x="86.1700%" y="1829" width="0.0745%" height="15" fill="rgb(209,118,44)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1839.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (80 samples, 0.07%)</title><rect x="86.1700%" y="1813" width="0.0745%" height="15" fill="rgb(205,81,4)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1823.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (80 samples, 0.07%)</title><rect x="86.1700%" y="1797" width="0.0745%" height="15" fill="rgb(241,25,6)" fg:x="92519" fg:w="80"/><text x="86.4200%" y="1807.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (66 samples, 0.06%)</title><rect x="86.1830%" y="1781" width="0.0615%" height="15" fill="rgb(212,179,29)" fg:x="92533" fg:w="66"/><text x="86.4330%" y="1791.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (66 samples, 0.06%)</title><rect x="86.1830%" y="1765" width="0.0615%" height="15" fill="rgb(241,40,32)" fg:x="92533" fg:w="66"/><text x="86.4330%" y="1775.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (66 samples, 0.06%)</title><rect x="86.1830%" y="1749" width="0.0615%" height="15" fill="rgb(223,35,2)" fg:x="92533" fg:w="66"/><text x="86.4330%" y="1759.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (66 samples, 0.06%)</title><rect x="86.1830%" y="1733" width="0.0615%" height="15" fill="rgb(221,125,54)" fg:x="92533" fg:w="66"/><text x="86.4330%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1717" width="0.0158%" height="15" fill="rgb(230,5,49)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1701" width="0.0158%" height="15" fill="rgb(221,157,7)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1685" width="0.0158%" height="15" fill="rgb(242,163,10)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1669" width="0.0158%" height="15" fill="rgb(232,30,2)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="86.2287%" y="1653" width="0.0158%" height="15" fill="rgb(245,102,40)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1663.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="86.2287%" y="1637" width="0.0158%" height="15" fill="rgb(242,10,41)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1621" width="0.0158%" height="15" fill="rgb(236,184,36)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="86.2287%" y="1605" width="0.0158%" height="15" fill="rgb(247,147,48)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (17 samples, 0.02%)</title><rect x="86.2287%" y="1589" width="0.0158%" height="15" fill="rgb(226,166,2)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (17 samples, 0.02%)</title><rect x="86.2287%" y="1573" width="0.0158%" height="15" fill="rgb(251,196,7)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1557" width="0.0158%" height="15" fill="rgb(241,40,13)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1541" width="0.0158%" height="15" fill="rgb(254,4,12)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="86.2287%" y="1525" width="0.0158%" height="15" fill="rgb(244,139,49)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1535.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="86.2287%" y="1509" width="0.0158%" height="15" fill="rgb(227,28,42)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (17 samples, 0.02%)</title><rect x="86.2287%" y="1493" width="0.0158%" height="15" fill="rgb(231,135,32)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="86.2287%" y="1477" width="0.0158%" height="15" fill="rgb(244,182,3)" fg:x="92582" fg:w="17"/><text x="86.4787%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (14 samples, 0.01%)</title><rect x="86.2315%" y="1461" width="0.0130%" height="15" fill="rgb(247,46,19)" fg:x="92585" fg:w="14"/><text x="86.4815%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (13 samples, 0.01%)</title><rect x="86.2324%" y="1445" width="0.0121%" height="15" fill="rgb(251,179,10)" fg:x="92586" fg:w="13"/><text x="86.4824%" y="1455.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (13 samples, 0.01%)</title><rect x="86.2743%" y="1685" width="0.0121%" height="15" fill="rgb(229,222,18)" fg:x="92631" fg:w="13"/><text x="86.5243%" y="1695.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (13 samples, 0.01%)</title><rect x="86.2743%" y="1669" width="0.0121%" height="15" fill="rgb(251,107,20)" fg:x="92631" fg:w="13"/><text x="86.5243%" y="1679.50"></text></g><g><title>rayon_core::scope::scope (51 samples, 0.05%)</title><rect x="86.2445%" y="2053" width="0.0475%" height="15" fill="rgb(233,193,19)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (51 samples, 0.05%)</title><rect x="86.2445%" y="2037" width="0.0475%" height="15" fill="rgb(229,146,53)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="2047.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (51 samples, 0.05%)</title><rect x="86.2445%" y="2021" width="0.0475%" height="15" fill="rgb(244,52,11)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="2031.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (51 samples, 0.05%)</title><rect x="86.2445%" y="2005" width="0.0475%" height="15" fill="rgb(245,211,46)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="2015.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (51 samples, 0.05%)</title><rect x="86.2445%" y="1989" width="0.0475%" height="15" fill="rgb(213,8,31)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1999.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (51 samples, 0.05%)</title><rect x="86.2445%" y="1973" width="0.0475%" height="15" fill="rgb(205,101,39)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1983.50"></text></g><g><title>rayon_core::job::JobRef::execute (51 samples, 0.05%)</title><rect x="86.2445%" y="1957" width="0.0475%" height="15" fill="rgb(212,157,1)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1967.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (51 samples, 0.05%)</title><rect x="86.2445%" y="1941" width="0.0475%" height="15" fill="rgb(232,30,46)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1951.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (51 samples, 0.05%)</title><rect x="86.2445%" y="1925" width="0.0475%" height="15" fill="rgb(216,201,6)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1935.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (51 samples, 0.05%)</title><rect x="86.2445%" y="1909" width="0.0475%" height="15" fill="rgb(209,18,6)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1919.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (51 samples, 0.05%)</title><rect x="86.2445%" y="1893" width="0.0475%" height="15" fill="rgb(219,138,3)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (51 samples, 0.05%)</title><rect x="86.2445%" y="1877" width="0.0475%" height="15" fill="rgb(210,91,46)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.05%)</title><rect x="86.2445%" y="1861" width="0.0475%" height="15" fill="rgb(241,80,44)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1871.50"></text></g><g><title>std::panicking::try (51 samples, 0.05%)</title><rect x="86.2445%" y="1845" width="0.0475%" height="15" fill="rgb(236,205,36)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.05%)</title><rect x="86.2445%" y="1829" width="0.0475%" height="15" fill="rgb(205,59,37)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (51 samples, 0.05%)</title><rect x="86.2445%" y="1813" width="0.0475%" height="15" fill="rgb(239,166,39)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1823.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (51 samples, 0.05%)</title><rect x="86.2445%" y="1797" width="0.0475%" height="15" fill="rgb(239,146,40)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1807.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (51 samples, 0.05%)</title><rect x="86.2445%" y="1781" width="0.0475%" height="15" fill="rgb(231,11,52)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1791.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (51 samples, 0.05%)</title><rect x="86.2445%" y="1765" width="0.0475%" height="15" fill="rgb(253,21,37)" fg:x="92599" fg:w="51"/><text x="86.4945%" y="1775.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (42 samples, 0.04%)</title><rect x="86.2529%" y="1749" width="0.0391%" height="15" fill="rgb(224,87,39)" fg:x="92608" fg:w="42"/><text x="86.5029%" y="1759.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (42 samples, 0.04%)</title><rect x="86.2529%" y="1733" width="0.0391%" height="15" fill="rgb(249,15,46)" fg:x="92608" fg:w="42"/><text x="86.5029%" y="1743.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (42 samples, 0.04%)</title><rect x="86.2529%" y="1717" width="0.0391%" height="15" fill="rgb(250,37,51)" fg:x="92608" fg:w="42"/><text x="86.5029%" y="1727.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (42 samples, 0.04%)</title><rect x="86.2529%" y="1701" width="0.0391%" height="15" fill="rgb(205,185,43)" fg:x="92608" fg:w="42"/><text x="86.5029%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="86.2967%" y="1957" width="0.0112%" height="15" fill="rgb(206,65,41)" fg:x="92655" fg:w="12"/><text x="86.5467%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="86.2967%" y="1941" width="0.0112%" height="15" fill="rgb(236,159,32)" fg:x="92655" fg:w="12"/><text x="86.5467%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="86.2967%" y="1925" width="0.0112%" height="15" fill="rgb(228,199,27)" fg:x="92655" fg:w="12"/><text x="86.5467%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="86.2967%" y="1909" width="0.0112%" height="15" fill="rgb(212,0,37)" fg:x="92655" fg:w="12"/><text x="86.5467%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="86.2967%" y="2021" width="0.0242%" height="15" fill="rgb(248,50,11)" fg:x="92655" fg:w="26"/><text x="86.5467%" y="2031.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="86.2967%" y="2005" width="0.0242%" height="15" fill="rgb(231,164,25)" fg:x="92655" fg:w="26"/><text x="86.5467%" y="2015.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="86.2967%" y="1989" width="0.0242%" height="15" fill="rgb(238,38,39)" fg:x="92655" fg:w="26"/><text x="86.5467%" y="1999.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="86.2967%" y="1973" width="0.0242%" height="15" fill="rgb(210,15,50)" fg:x="92655" fg:w="26"/><text x="86.5467%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="86.3078%" y="1957" width="0.0130%" height="15" fill="rgb(251,126,36)" fg:x="92667" fg:w="14"/><text x="86.5578%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="86.3088%" y="1941" width="0.0121%" height="15" fill="rgb(243,59,26)" fg:x="92668" fg:w="13"/><text x="86.5588%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="86.3088%" y="1925" width="0.0121%" height="15" fill="rgb(215,24,30)" fg:x="92668" fg:w="13"/><text x="86.5588%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="86.3088%" y="1909" width="0.0121%" height="15" fill="rgb(253,50,51)" fg:x="92668" fg:w="13"/><text x="86.5588%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="86.3088%" y="1893" width="0.0121%" height="15" fill="rgb(252,2,16)" fg:x="92668" fg:w="13"/><text x="86.5588%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="86.3088%" y="1877" width="0.0121%" height="15" fill="rgb(209,123,36)" fg:x="92668" fg:w="13"/><text x="86.5588%" y="1887.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="86.3088%" y="1861" width="0.0121%" height="15" fill="rgb(245,60,15)" fg:x="92668" fg:w="13"/><text x="86.5588%" y="1871.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="86.3088%" y="1845" width="0.0121%" height="15" fill="rgb(246,4,13)" fg:x="92668" fg:w="13"/><text x="86.5588%" y="1855.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="86.2957%" y="2037" width="0.0391%" height="15" fill="rgb(210,223,46)" fg:x="92654" fg:w="42"/><text x="86.5457%" y="2047.50"></text></g><g><title>&lt;rand::distributions::weighted_index::WeightedIndex&lt;X&gt; as rand::distributions::distribution::Distribution&lt;usize&gt;&gt;::sample (19 samples, 0.02%)</title><rect x="86.3395%" y="2037" width="0.0177%" height="15" fill="rgb(248,1,9)" fg:x="92701" fg:w="19"/><text x="86.5895%" y="2047.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (15 samples, 0.01%)</title><rect x="86.3432%" y="2021" width="0.0140%" height="15" fill="rgb(254,2,34)" fg:x="92705" fg:w="15"/><text x="86.5932%" y="2031.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (114 samples, 0.11%)</title><rect x="86.3572%" y="2037" width="0.1062%" height="15" fill="rgb(239,176,1)" fg:x="92720" fg:w="114"/><text x="86.6072%" y="2047.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (114 samples, 0.11%)</title><rect x="86.3572%" y="2021" width="0.1062%" height="15" fill="rgb(250,25,32)" fg:x="92720" fg:w="114"/><text x="86.6072%" y="2031.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (114 samples, 0.11%)</title><rect x="86.3572%" y="2005" width="0.1062%" height="15" fill="rgb(225,28,39)" fg:x="92720" fg:w="114"/><text x="86.6072%" y="2015.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (114 samples, 0.11%)</title><rect x="86.3572%" y="1989" width="0.1062%" height="15" fill="rgb(230,166,37)" fg:x="92720" fg:w="114"/><text x="86.6072%" y="1999.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (107 samples, 0.10%)</title><rect x="86.3637%" y="1973" width="0.0997%" height="15" fill="rgb(246,220,4)" fg:x="92727" fg:w="107"/><text x="86.6137%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (107 samples, 0.10%)</title><rect x="86.3637%" y="1957" width="0.0997%" height="15" fill="rgb(219,119,33)" fg:x="92727" fg:w="107"/><text x="86.6137%" y="1967.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (107 samples, 0.10%)</title><rect x="86.3637%" y="1941" width="0.0997%" height="15" fill="rgb(221,207,38)" fg:x="92727" fg:w="107"/><text x="86.6137%" y="1951.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (54 samples, 0.05%)</title><rect x="86.4131%" y="1925" width="0.0503%" height="15" fill="rgb(214,153,5)" fg:x="92780" fg:w="54"/><text x="86.6631%" y="1935.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (54 samples, 0.05%)</title><rect x="86.4131%" y="1909" width="0.0503%" height="15" fill="rgb(223,50,16)" fg:x="92780" fg:w="54"/><text x="86.6631%" y="1919.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (28 samples, 0.03%)</title><rect x="86.4662%" y="2037" width="0.0261%" height="15" fill="rgb(209,207,12)" fg:x="92837" fg:w="28"/><text x="86.7162%" y="2047.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (24 samples, 0.02%)</title><rect x="86.4699%" y="2021" width="0.0224%" height="15" fill="rgb(207,3,46)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (24 samples, 0.02%)</title><rect x="86.4699%" y="2005" width="0.0224%" height="15" fill="rgb(232,45,53)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (24 samples, 0.02%)</title><rect x="86.4699%" y="1989" width="0.0224%" height="15" fill="rgb(206,140,15)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (24 samples, 0.02%)</title><rect x="86.4699%" y="1973" width="0.0224%" height="15" fill="rgb(245,66,17)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1983.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="86.4699%" y="1957" width="0.0224%" height="15" fill="rgb(221,25,37)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.02%)</title><rect x="86.4699%" y="1941" width="0.0224%" height="15" fill="rgb(215,99,47)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1951.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.02%)</title><rect x="86.4699%" y="1925" width="0.0224%" height="15" fill="rgb(219,154,44)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1935.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.02%)</title><rect x="86.4699%" y="1909" width="0.0224%" height="15" fill="rgb(210,197,36)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1919.50"></text></g><g><title>realloc (24 samples, 0.02%)</title><rect x="86.4699%" y="1893" width="0.0224%" height="15" fill="rgb(217,137,10)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1903.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="86.4699%" y="1877" width="0.0224%" height="15" fill="rgb(240,216,26)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1887.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="86.4699%" y="1861" width="0.0224%" height="15" fill="rgb(242,76,17)" fg:x="92841" fg:w="24"/><text x="86.7199%" y="1871.50"></text></g><g><title>aptos_language_e2e_tests::account::Account::transaction (15 samples, 0.01%)</title><rect x="86.4969%" y="2037" width="0.0140%" height="15" fill="rgb(243,142,51)" fg:x="92870" fg:w="15"/><text x="86.7469%" y="2047.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (20 samples, 0.02%)</title><rect x="86.5351%" y="1717" width="0.0186%" height="15" fill="rgb(233,109,46)" fg:x="92911" fg:w="20"/><text x="86.7851%" y="1727.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (46 samples, 0.04%)</title><rect x="86.5276%" y="1733" width="0.0428%" height="15" fill="rgb(252,45,32)" fg:x="92903" fg:w="46"/><text x="86.7776%" y="1743.50"></text></g><g><title>sha2::sha512::x86::sha_round (18 samples, 0.02%)</title><rect x="86.5537%" y="1717" width="0.0168%" height="15" fill="rgb(210,69,52)" fg:x="92931" fg:w="18"/><text x="86.8037%" y="1727.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (57 samples, 0.05%)</title><rect x="86.5239%" y="1877" width="0.0531%" height="15" fill="rgb(242,30,2)" fg:x="92899" fg:w="57"/><text x="86.7739%" y="1887.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (57 samples, 0.05%)</title><rect x="86.5239%" y="1861" width="0.0531%" height="15" fill="rgb(246,137,1)" fg:x="92899" fg:w="57"/><text x="86.7739%" y="1871.50"></text></g><g><title>sha2::sha512::Engine512::finish (57 samples, 0.05%)</title><rect x="86.5239%" y="1845" width="0.0531%" height="15" fill="rgb(221,205,25)" fg:x="92899" fg:w="57"/><text x="86.7739%" y="1855.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (56 samples, 0.05%)</title><rect x="86.5248%" y="1829" width="0.0522%" height="15" fill="rgb(224,44,43)" fg:x="92900" fg:w="56"/><text x="86.7748%" y="1839.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (55 samples, 0.05%)</title><rect x="86.5258%" y="1813" width="0.0512%" height="15" fill="rgb(209,81,13)" fg:x="92901" fg:w="55"/><text x="86.7758%" y="1823.50"></text></g><g><title>sha2::sha512::compress512 (55 samples, 0.05%)</title><rect x="86.5258%" y="1797" width="0.0512%" height="15" fill="rgb(227,88,4)" fg:x="92901" fg:w="55"/><text x="86.7758%" y="1807.50"></text></g><g><title>sha2::sha512::x86::compress (55 samples, 0.05%)</title><rect x="86.5258%" y="1781" width="0.0512%" height="15" fill="rgb(228,118,49)" fg:x="92901" fg:w="55"/><text x="86.7758%" y="1791.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (55 samples, 0.05%)</title><rect x="86.5258%" y="1765" width="0.0512%" height="15" fill="rgb(225,215,27)" fg:x="92901" fg:w="55"/><text x="86.7758%" y="1775.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (55 samples, 0.05%)</title><rect x="86.5258%" y="1749" width="0.0512%" height="15" fill="rgb(235,226,1)" fg:x="92901" fg:w="55"/><text x="86.7758%" y="1759.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (58 samples, 0.05%)</title><rect x="86.5239%" y="1909" width="0.0540%" height="15" fill="rgb(205,107,17)" fg:x="92899" fg:w="58"/><text x="86.7739%" y="1919.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (58 samples, 0.05%)</title><rect x="86.5239%" y="1893" width="0.0540%" height="15" fill="rgb(247,85,8)" fg:x="92899" fg:w="58"/><text x="86.7739%" y="1903.50"></text></g><g><title>[libc.so.6] (79 samples, 0.07%)</title><rect x="86.6022%" y="1845" width="0.0736%" height="15" fill="rgb(230,220,20)" fg:x="92983" fg:w="79"/><text x="86.8522%" y="1855.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (38 samples, 0.04%)</title><rect x="86.7409%" y="1829" width="0.0354%" height="15" fill="rgb(237,22,6)" fg:x="93132" fg:w="38"/><text x="86.9909%" y="1839.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (25 samples, 0.02%)</title><rect x="86.7530%" y="1813" width="0.0233%" height="15" fill="rgb(253,39,1)" fg:x="93145" fg:w="25"/><text x="87.0030%" y="1823.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (97 samples, 0.09%)</title><rect x="87.2122%" y="1813" width="0.0903%" height="15" fill="rgb(251,206,50)" fg:x="93638" fg:w="97"/><text x="87.4622%" y="1823.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (566 samples, 0.53%)</title><rect x="86.7763%" y="1829" width="0.5272%" height="15" fill="rgb(239,162,11)" fg:x="93170" fg:w="566"/><text x="87.0263%" y="1839.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (802 samples, 0.75%)</title><rect x="86.6757%" y="1845" width="0.7470%" height="15" fill="rgb(234,164,6)" fg:x="93062" fg:w="802"/><text x="86.9257%" y="1855.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (128 samples, 0.12%)</title><rect x="87.3035%" y="1829" width="0.1192%" height="15" fill="rgb(238,112,10)" fg:x="93736" fg:w="128"/><text x="87.5535%" y="1839.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (42 samples, 0.04%)</title><rect x="87.3836%" y="1813" width="0.0391%" height="15" fill="rgb(232,78,29)" fg:x="93822" fg:w="42"/><text x="87.6336%" y="1823.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (753 samples, 0.70%)</title><rect x="87.4227%" y="1845" width="0.7013%" height="15" fill="rgb(232,20,13)" fg:x="93864" fg:w="753"/><text x="87.6727%" y="1855.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (745 samples, 0.69%)</title><rect x="87.4301%" y="1829" width="0.6939%" height="15" fill="rgb(222,175,9)" fg:x="93872" fg:w="745"/><text x="87.6801%" y="1839.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (123 samples, 0.11%)</title><rect x="88.0095%" y="1813" width="0.1146%" height="15" fill="rgb(233,61,14)" fg:x="94494" fg:w="123"/><text x="88.2595%" y="1823.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (13 samples, 0.01%)</title><rect x="88.1371%" y="1829" width="0.0121%" height="15" fill="rgb(224,152,29)" fg:x="94631" fg:w="13"/><text x="88.3871%" y="1839.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (13 samples, 0.01%)</title><rect x="88.1371%" y="1813" width="0.0121%" height="15" fill="rgb(232,26,6)" fg:x="94631" fg:w="13"/><text x="88.3871%" y="1823.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (25 samples, 0.02%)</title><rect x="88.1492%" y="1829" width="0.0233%" height="15" fill="rgb(210,116,11)" fg:x="94644" fg:w="25"/><text x="88.3992%" y="1839.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (25 samples, 0.02%)</title><rect x="88.1492%" y="1813" width="0.0233%" height="15" fill="rgb(238,213,15)" fg:x="94644" fg:w="25"/><text x="88.3992%" y="1823.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (49 samples, 0.05%)</title><rect x="88.1725%" y="1829" width="0.0456%" height="15" fill="rgb(236,177,32)" fg:x="94669" fg:w="49"/><text x="88.4225%" y="1839.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (29 samples, 0.03%)</title><rect x="88.1911%" y="1813" width="0.0270%" height="15" fill="rgb(230,36,43)" fg:x="94689" fg:w="29"/><text x="88.4411%" y="1823.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (29 samples, 0.03%)</title><rect x="88.1911%" y="1797" width="0.0270%" height="15" fill="rgb(212,76,23)" fg:x="94689" fg:w="29"/><text x="88.4411%" y="1807.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (105 samples, 0.10%)</title><rect x="88.1240%" y="1845" width="0.0978%" height="15" fill="rgb(225,168,24)" fg:x="94617" fg:w="105"/><text x="88.3740%" y="1855.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (20 samples, 0.02%)</title><rect x="88.2218%" y="1845" width="0.0186%" height="15" fill="rgb(206,40,44)" fg:x="94722" fg:w="20"/><text x="88.4718%" y="1855.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as core::ops::arith::Neg&gt;::neg (110 samples, 0.10%)</title><rect x="88.2870%" y="1813" width="0.1025%" height="15" fill="rgb(251,213,6)" fg:x="94792" fg:w="110"/><text x="88.5370%" y="1823.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (70 samples, 0.07%)</title><rect x="88.3243%" y="1797" width="0.0652%" height="15" fill="rgb(220,7,47)" fg:x="94832" fg:w="70"/><text x="88.5743%" y="1807.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (51 samples, 0.05%)</title><rect x="88.3420%" y="1781" width="0.0475%" height="15" fill="rgb(254,130,53)" fg:x="94851" fg:w="51"/><text x="88.5920%" y="1791.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (15 samples, 0.01%)</title><rect x="88.3755%" y="1765" width="0.0140%" height="15" fill="rgb(240,2,46)" fg:x="94887" fg:w="15"/><text x="88.6255%" y="1775.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (140 samples, 0.13%)</title><rect x="88.2870%" y="1829" width="0.1304%" height="15" fill="rgb(252,144,40)" fg:x="94792" fg:w="140"/><text x="88.5370%" y="1839.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (30 samples, 0.03%)</title><rect x="88.3895%" y="1813" width="0.0279%" height="15" fill="rgb(226,23,10)" fg:x="94902" fg:w="30"/><text x="88.6395%" y="1823.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (30 samples, 0.03%)</title><rect x="88.3895%" y="1797" width="0.0279%" height="15" fill="rgb(212,204,35)" fg:x="94902" fg:w="30"/><text x="88.6395%" y="1807.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (30 samples, 0.03%)</title><rect x="88.3895%" y="1781" width="0.0279%" height="15" fill="rgb(218,201,15)" fg:x="94902" fg:w="30"/><text x="88.6395%" y="1791.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (379 samples, 0.35%)</title><rect x="88.4249%" y="1829" width="0.3530%" height="15" fill="rgb(224,197,5)" fg:x="94940" fg:w="379"/><text x="88.6749%" y="1839.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (340 samples, 0.32%)</title><rect x="88.4612%" y="1813" width="0.3167%" height="15" fill="rgb(224,185,18)" fg:x="94979" fg:w="340"/><text x="88.7112%" y="1823.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (340 samples, 0.32%)</title><rect x="88.4612%" y="1797" width="0.3167%" height="15" fill="rgb(251,71,45)" fg:x="94979" fg:w="340"/><text x="88.7112%" y="1807.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (2,430 samples, 2.26%)</title><rect x="86.5882%" y="1893" width="2.2632%" height="15" fill="rgb(216,74,24)" fg:x="92968" fg:w="2430"/><text x="86.8382%" y="1903.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (2,430 samples, 2.26%)</title><rect x="86.5882%" y="1877" width="2.2632%" height="15" fill="rgb(250,36,51)" fg:x="92968" fg:w="2430"/><text x="86.8382%" y="1887.50">&lt;..</text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (2,430 samples, 2.26%)</title><rect x="86.5882%" y="1861" width="2.2632%" height="15" fill="rgb(209,224,28)" fg:x="92968" fg:w="2430"/><text x="86.8382%" y="1871.50">c..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (656 samples, 0.61%)</title><rect x="88.2404%" y="1845" width="0.6110%" height="15" fill="rgb(228,5,10)" fg:x="94742" fg:w="656"/><text x="88.4904%" y="1855.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (72 samples, 0.07%)</title><rect x="88.7844%" y="1829" width="0.0671%" height="15" fill="rgb(250,57,40)" fg:x="95326" fg:w="72"/><text x="89.0344%" y="1839.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (72 samples, 0.07%)</title><rect x="88.7844%" y="1813" width="0.0671%" height="15" fill="rgb(228,194,41)" fg:x="95326" fg:w="72"/><text x="89.0344%" y="1823.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (72 samples, 0.07%)</title><rect x="88.7844%" y="1797" width="0.0671%" height="15" fill="rgb(206,68,23)" fg:x="95326" fg:w="72"/><text x="89.0344%" y="1807.50"></text></g><g><title>subtle::black_box (62 samples, 0.06%)</title><rect x="88.7937%" y="1781" width="0.0577%" height="15" fill="rgb(230,33,29)" fg:x="95336" fg:w="62"/><text x="89.0437%" y="1791.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (11 samples, 0.01%)</title><rect x="88.8654%" y="1861" width="0.0102%" height="15" fill="rgb(210,39,32)" fg:x="95413" fg:w="11"/><text x="89.1154%" y="1871.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (31 samples, 0.03%)</title><rect x="88.8766%" y="1845" width="0.0289%" height="15" fill="rgb(236,89,23)" fg:x="95425" fg:w="31"/><text x="89.1266%" y="1855.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (589 samples, 0.55%)</title><rect x="88.9054%" y="1845" width="0.5486%" height="15" fill="rgb(218,52,52)" fg:x="95456" fg:w="589"/><text x="89.1554%" y="1855.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (63 samples, 0.06%)</title><rect x="89.3954%" y="1829" width="0.0587%" height="15" fill="rgb(235,154,5)" fg:x="95982" fg:w="63"/><text x="89.6454%" y="1839.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (643 samples, 0.60%)</title><rect x="88.8645%" y="1877" width="0.5989%" height="15" fill="rgb(223,168,9)" fg:x="95412" fg:w="643"/><text x="89.1145%" y="1887.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (631 samples, 0.59%)</title><rect x="88.8756%" y="1861" width="0.5877%" height="15" fill="rgb(220,8,33)" fg:x="95424" fg:w="631"/><text x="89.1256%" y="1871.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (658 samples, 0.61%)</title><rect x="88.8514%" y="1893" width="0.6128%" height="15" fill="rgb(216,176,3)" fg:x="95398" fg:w="658"/><text x="89.1014%" y="1903.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,160 samples, 2.94%)</title><rect x="86.5230%" y="1973" width="2.9431%" height="15" fill="rgb(254,150,22)" fg:x="92898" fg:w="3160"/><text x="86.7730%" y="1983.50">&lt;T..</text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::convert::From&lt;&amp;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey&gt;&gt;::from (3,160 samples, 2.94%)</title><rect x="86.5230%" y="1957" width="2.9431%" height="15" fill="rgb(231,61,53)" fg:x="92898" fg:w="3160"/><text x="86.7730%" y="1967.50">&lt;a..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,160 samples, 2.94%)</title><rect x="86.5230%" y="1941" width="2.9431%" height="15" fill="rgb(249,177,41)" fg:x="92898" fg:w="3160"/><text x="86.7730%" y="1951.50">&lt;T..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (3,160 samples, 2.94%)</title><rect x="86.5230%" y="1925" width="2.9431%" height="15" fill="rgb(221,122,7)" fg:x="92898" fg:w="3160"/><text x="86.7730%" y="1935.50">&lt;e..</text></g><g><title>ed25519_dalek::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (3,091 samples, 2.88%)</title><rect x="86.5873%" y="1909" width="2.8789%" height="15" fill="rgb(215,115,7)" fg:x="92967" fg:w="3091"/><text x="86.8373%" y="1919.50">ed..</text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (15 samples, 0.01%)</title><rect x="89.4745%" y="1765" width="0.0140%" height="15" fill="rgb(218,108,33)" fg:x="96067" fg:w="15"/><text x="89.7245%" y="1775.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (38 samples, 0.04%)</title><rect x="89.4717%" y="1781" width="0.0354%" height="15" fill="rgb(221,205,39)" fg:x="96064" fg:w="38"/><text x="89.7217%" y="1791.50"></text></g><g><title>sha2::sha512::x86::sha_round (20 samples, 0.02%)</title><rect x="89.4885%" y="1765" width="0.0186%" height="15" fill="rgb(220,171,18)" fg:x="96082" fg:w="20"/><text x="89.7385%" y="1775.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (47 samples, 0.04%)</title><rect x="89.4680%" y="1925" width="0.0438%" height="15" fill="rgb(236,188,29)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1935.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (47 samples, 0.04%)</title><rect x="89.4680%" y="1909" width="0.0438%" height="15" fill="rgb(239,29,5)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1919.50"></text></g><g><title>sha2::sha512::Engine512::finish (47 samples, 0.04%)</title><rect x="89.4680%" y="1893" width="0.0438%" height="15" fill="rgb(236,114,44)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1903.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (47 samples, 0.04%)</title><rect x="89.4680%" y="1877" width="0.0438%" height="15" fill="rgb(239,214,48)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1887.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (47 samples, 0.04%)</title><rect x="89.4680%" y="1861" width="0.0438%" height="15" fill="rgb(241,56,8)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1871.50"></text></g><g><title>sha2::sha512::compress512 (47 samples, 0.04%)</title><rect x="89.4680%" y="1845" width="0.0438%" height="15" fill="rgb(228,201,0)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1855.50"></text></g><g><title>sha2::sha512::x86::compress (47 samples, 0.04%)</title><rect x="89.4680%" y="1829" width="0.0438%" height="15" fill="rgb(226,219,34)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1839.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (47 samples, 0.04%)</title><rect x="89.4680%" y="1813" width="0.0438%" height="15" fill="rgb(209,204,54)" fg:x="96060" fg:w="47"/><text x="89.7180%" y="1823.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (46 samples, 0.04%)</title><rect x="89.4689%" y="1797" width="0.0428%" height="15" fill="rgb(251,160,17)" fg:x="96061" fg:w="46"/><text x="89.7189%" y="1807.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (50 samples, 0.05%)</title><rect x="89.4680%" y="1957" width="0.0466%" height="15" fill="rgb(235,15,25)" fg:x="96060" fg:w="50"/><text x="89.7180%" y="1967.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (50 samples, 0.05%)</title><rect x="89.4680%" y="1941" width="0.0466%" height="15" fill="rgb(216,209,28)" fg:x="96060" fg:w="50"/><text x="89.7180%" y="1951.50"></text></g><g><title>&lt;ed25519_dalek::secret::ExpandedSecretKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (62 samples, 0.06%)</title><rect x="89.4661%" y="1973" width="0.0577%" height="15" fill="rgb(248,123,21)" fg:x="96058" fg:w="62"/><text x="89.7161%" y="1983.50"></text></g><g><title>&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Add&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::add (11 samples, 0.01%)</title><rect x="89.5248%" y="1957" width="0.0102%" height="15" fill="rgb(226,138,44)" fg:x="96121" fg:w="11"/><text x="89.7748%" y="1967.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce::part1 (11 samples, 0.01%)</title><rect x="89.5379%" y="1909" width="0.0102%" height="15" fill="rgb(211,104,54)" fg:x="96135" fg:w="11"/><text x="89.7879%" y="1919.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce (19 samples, 0.02%)</title><rect x="89.5360%" y="1925" width="0.0177%" height="15" fill="rgb(241,198,15)" fg:x="96133" fg:w="19"/><text x="89.7860%" y="1935.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::mul (23 samples, 0.02%)</title><rect x="89.5351%" y="1941" width="0.0214%" height="15" fill="rgb(227,155,54)" fg:x="96132" fg:w="23"/><text x="89.7851%" y="1951.50"></text></g><g><title>&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (25 samples, 0.02%)</title><rect x="89.5351%" y="1957" width="0.0233%" height="15" fill="rgb(225,131,31)" fg:x="96132" fg:w="25"/><text x="89.7851%" y="1967.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (18 samples, 0.02%)</title><rect x="89.5965%" y="1781" width="0.0168%" height="15" fill="rgb(242,40,17)" fg:x="96198" fg:w="18"/><text x="89.8465%" y="1791.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (29 samples, 0.03%)</title><rect x="89.5965%" y="1797" width="0.0270%" height="15" fill="rgb(254,57,35)" fg:x="96198" fg:w="29"/><text x="89.8465%" y="1807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (19 samples, 0.02%)</title><rect x="89.6347%" y="1781" width="0.0177%" height="15" fill="rgb(240,64,32)" fg:x="96239" fg:w="19"/><text x="89.8847%" y="1791.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (94 samples, 0.09%)</title><rect x="89.5826%" y="1813" width="0.0875%" height="15" fill="rgb(251,136,26)" fg:x="96183" fg:w="94"/><text x="89.8326%" y="1823.50"></text></g><g><title>sha2::sha512::x86::sha_round (50 samples, 0.05%)</title><rect x="89.6235%" y="1797" width="0.0466%" height="15" fill="rgb(208,60,54)" fg:x="96227" fg:w="50"/><text x="89.8735%" y="1807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (19 samples, 0.02%)</title><rect x="89.6524%" y="1781" width="0.0177%" height="15" fill="rgb(220,13,12)" fg:x="96258" fg:w="19"/><text x="89.9024%" y="1791.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (130 samples, 0.12%)</title><rect x="89.5630%" y="1957" width="0.1211%" height="15" fill="rgb(213,149,1)" fg:x="96162" fg:w="130"/><text x="89.8130%" y="1967.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::Update&gt;::update (130 samples, 0.12%)</title><rect x="89.5630%" y="1941" width="0.1211%" height="15" fill="rgb(212,191,39)" fg:x="96162" fg:w="130"/><text x="89.8130%" y="1951.50"></text></g><g><title>sha2::sha512::Engine512::update (129 samples, 0.12%)</title><rect x="89.5639%" y="1925" width="0.1201%" height="15" fill="rgb(215,221,42)" fg:x="96163" fg:w="129"/><text x="89.8139%" y="1935.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (126 samples, 0.12%)</title><rect x="89.5667%" y="1909" width="0.1174%" height="15" fill="rgb(244,79,23)" fg:x="96166" fg:w="126"/><text x="89.8167%" y="1919.50"></text></g><g><title>sha2::sha512::Engine512::update::{{closure}} (123 samples, 0.11%)</title><rect x="89.5695%" y="1893" width="0.1146%" height="15" fill="rgb(247,17,29)" fg:x="96169" fg:w="123"/><text x="89.8195%" y="1903.50"></text></g><g><title>sha2::sha512::compress512 (123 samples, 0.11%)</title><rect x="89.5695%" y="1877" width="0.1146%" height="15" fill="rgb(251,221,21)" fg:x="96169" fg:w="123"/><text x="89.8195%" y="1887.50"></text></g><g><title>sha2::sha512::x86::compress (123 samples, 0.11%)</title><rect x="89.5695%" y="1861" width="0.1146%" height="15" fill="rgb(207,202,34)" fg:x="96169" fg:w="123"/><text x="89.8195%" y="1871.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (123 samples, 0.11%)</title><rect x="89.5695%" y="1845" width="0.1146%" height="15" fill="rgb(217,4,34)" fg:x="96169" fg:w="123"/><text x="89.8195%" y="1855.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (119 samples, 0.11%)</title><rect x="89.5732%" y="1829" width="0.1108%" height="15" fill="rgb(253,17,16)" fg:x="96173" fg:w="119"/><text x="89.8232%" y="1839.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (15 samples, 0.01%)</title><rect x="89.6701%" y="1813" width="0.0140%" height="15" fill="rgb(223,91,48)" fg:x="96277" fg:w="15"/><text x="89.9201%" y="1823.50"></text></g><g><title>sha2::sha512::x86::sha_round (15 samples, 0.01%)</title><rect x="89.6701%" y="1797" width="0.0140%" height="15" fill="rgb(244,191,22)" fg:x="96277" fg:w="15"/><text x="89.9201%" y="1807.50"></text></g><g><title>[libc.so.6] (71 samples, 0.07%)</title><rect x="89.7064%" y="1909" width="0.0661%" height="15" fill="rgb(211,107,14)" fg:x="96316" fg:w="71"/><text x="89.9564%" y="1919.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (34 samples, 0.03%)</title><rect x="89.8555%" y="1893" width="0.0317%" height="15" fill="rgb(232,81,23)" fg:x="96476" fg:w="34"/><text x="90.1055%" y="1903.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (24 samples, 0.02%)</title><rect x="89.8648%" y="1877" width="0.0224%" height="15" fill="rgb(237,126,14)" fg:x="96486" fg:w="24"/><text x="90.1148%" y="1887.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (588 samples, 0.55%)</title><rect x="89.8871%" y="1893" width="0.5476%" height="15" fill="rgb(230,65,39)" fg:x="96510" fg:w="588"/><text x="90.1371%" y="1903.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (96 samples, 0.09%)</title><rect x="90.3454%" y="1877" width="0.0894%" height="15" fill="rgb(208,106,41)" fg:x="97002" fg:w="96"/><text x="90.5954%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (832 samples, 0.77%)</title><rect x="89.7726%" y="1909" width="0.7749%" height="15" fill="rgb(206,125,25)" fg:x="96387" fg:w="832"/><text x="90.0226%" y="1919.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (121 samples, 0.11%)</title><rect x="90.4348%" y="1893" width="0.1127%" height="15" fill="rgb(250,24,29)" fg:x="97098" fg:w="121"/><text x="90.6848%" y="1903.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (35 samples, 0.03%)</title><rect x="90.5149%" y="1877" width="0.0326%" height="15" fill="rgb(226,49,32)" fg:x="97184" fg:w="35"/><text x="90.7649%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (745 samples, 0.69%)</title><rect x="90.5475%" y="1909" width="0.6939%" height="15" fill="rgb(217,110,16)" fg:x="97219" fg:w="745"/><text x="90.7975%" y="1919.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (734 samples, 0.68%)</title><rect x="90.5577%" y="1893" width="0.6836%" height="15" fill="rgb(252,16,53)" fg:x="97230" fg:w="734"/><text x="90.8077%" y="1903.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (119 samples, 0.11%)</title><rect x="91.1305%" y="1877" width="0.1108%" height="15" fill="rgb(238,163,11)" fg:x="97845" fg:w="119"/><text x="91.3805%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (12 samples, 0.01%)</title><rect x="91.2507%" y="1893" width="0.0112%" height="15" fill="rgb(206,210,1)" fg:x="97974" fg:w="12"/><text x="91.5007%" y="1903.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (12 samples, 0.01%)</title><rect x="91.2507%" y="1877" width="0.0112%" height="15" fill="rgb(229,8,25)" fg:x="97974" fg:w="12"/><text x="91.5007%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (28 samples, 0.03%)</title><rect x="91.2618%" y="1893" width="0.0261%" height="15" fill="rgb(247,155,23)" fg:x="97986" fg:w="28"/><text x="91.5118%" y="1903.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (27 samples, 0.03%)</title><rect x="91.2628%" y="1877" width="0.0251%" height="15" fill="rgb(207,26,7)" fg:x="97987" fg:w="27"/><text x="91.5128%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (54 samples, 0.05%)</title><rect x="91.2879%" y="1893" width="0.0503%" height="15" fill="rgb(215,179,12)" fg:x="98014" fg:w="54"/><text x="91.5379%" y="1903.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (29 samples, 0.03%)</title><rect x="91.3112%" y="1877" width="0.0270%" height="15" fill="rgb(238,208,11)" fg:x="98039" fg:w="29"/><text x="91.5612%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (29 samples, 0.03%)</title><rect x="91.3112%" y="1861" width="0.0270%" height="15" fill="rgb(238,102,42)" fg:x="98039" fg:w="29"/><text x="91.5612%" y="1871.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (108 samples, 0.10%)</title><rect x="91.2413%" y="1909" width="0.1006%" height="15" fill="rgb(239,35,9)" fg:x="97964" fg:w="108"/><text x="91.4913%" y="1919.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (17 samples, 0.02%)</title><rect x="91.3419%" y="1909" width="0.0158%" height="15" fill="rgb(244,182,30)" fg:x="98072" fg:w="17"/><text x="91.5919%" y="1919.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as core::ops::arith::Neg&gt;::neg (131 samples, 0.12%)</title><rect x="91.4099%" y="1877" width="0.1220%" height="15" fill="rgb(232,181,23)" fg:x="98145" fg:w="131"/><text x="91.6599%" y="1887.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (70 samples, 0.07%)</title><rect x="91.4667%" y="1861" width="0.0652%" height="15" fill="rgb(242,154,29)" fg:x="98206" fg:w="70"/><text x="91.7167%" y="1871.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (52 samples, 0.05%)</title><rect x="91.4835%" y="1845" width="0.0484%" height="15" fill="rgb(219,23,2)" fg:x="98224" fg:w="52"/><text x="91.7335%" y="1855.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (14 samples, 0.01%)</title><rect x="91.5189%" y="1829" width="0.0130%" height="15" fill="rgb(234,94,43)" fg:x="98262" fg:w="14"/><text x="91.7689%" y="1839.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (160 samples, 0.15%)</title><rect x="91.4099%" y="1893" width="0.1490%" height="15" fill="rgb(223,55,45)" fg:x="98145" fg:w="160"/><text x="91.6599%" y="1903.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (29 samples, 0.03%)</title><rect x="91.5319%" y="1877" width="0.0270%" height="15" fill="rgb(241,215,54)" fg:x="98276" fg:w="29"/><text x="91.7819%" y="1887.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (29 samples, 0.03%)</title><rect x="91.5319%" y="1861" width="0.0270%" height="15" fill="rgb(247,63,53)" fg:x="98276" fg:w="29"/><text x="91.7819%" y="1871.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (29 samples, 0.03%)</title><rect x="91.5319%" y="1845" width="0.0270%" height="15" fill="rgb(220,166,7)" fg:x="98276" fg:w="29"/><text x="91.7819%" y="1855.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (359 samples, 0.33%)</title><rect x="91.5636%" y="1893" width="0.3344%" height="15" fill="rgb(248,53,45)" fg:x="98310" fg:w="359"/><text x="91.8136%" y="1903.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (329 samples, 0.31%)</title><rect x="91.5915%" y="1877" width="0.3064%" height="15" fill="rgb(224,207,20)" fg:x="98340" fg:w="329"/><text x="91.8415%" y="1887.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (329 samples, 0.31%)</title><rect x="91.5915%" y="1861" width="0.3064%" height="15" fill="rgb(244,185,11)" fg:x="98340" fg:w="329"/><text x="91.8415%" y="1871.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (2,446 samples, 2.28%)</title><rect x="89.6887%" y="1957" width="2.2781%" height="15" fill="rgb(230,13,42)" fg:x="96297" fg:w="2446"/><text x="89.9387%" y="1967.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (2,444 samples, 2.28%)</title><rect x="89.6906%" y="1941" width="2.2763%" height="15" fill="rgb(243,191,18)" fg:x="96299" fg:w="2444"/><text x="89.9406%" y="1951.50">&lt;..</text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (2,444 samples, 2.28%)</title><rect x="89.6906%" y="1925" width="2.2763%" height="15" fill="rgb(249,135,15)" fg:x="96299" fg:w="2444"/><text x="89.9406%" y="1935.50">c..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (654 samples, 0.61%)</title><rect x="91.3578%" y="1909" width="0.6091%" height="15" fill="rgb(229,26,35)" fg:x="98089" fg:w="654"/><text x="91.6078%" y="1919.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (66 samples, 0.06%)</title><rect x="91.9054%" y="1893" width="0.0615%" height="15" fill="rgb(216,191,16)" fg:x="98677" fg:w="66"/><text x="92.1554%" y="1903.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (66 samples, 0.06%)</title><rect x="91.9054%" y="1877" width="0.0615%" height="15" fill="rgb(242,18,7)" fg:x="98677" fg:w="66"/><text x="92.1554%" y="1887.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (66 samples, 0.06%)</title><rect x="91.9054%" y="1861" width="0.0615%" height="15" fill="rgb(205,128,17)" fg:x="98677" fg:w="66"/><text x="92.1554%" y="1871.50"></text></g><g><title>subtle::black_box (55 samples, 0.05%)</title><rect x="91.9157%" y="1845" width="0.0512%" height="15" fill="rgb(229,199,44)" fg:x="98688" fg:w="55"/><text x="92.1657%" y="1855.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (14 samples, 0.01%)</title><rect x="91.9790%" y="1925" width="0.0130%" height="15" fill="rgb(234,222,3)" fg:x="98756" fg:w="14"/><text x="92.2290%" y="1935.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (24 samples, 0.02%)</title><rect x="91.9920%" y="1909" width="0.0224%" height="15" fill="rgb(220,170,20)" fg:x="98770" fg:w="24"/><text x="92.2420%" y="1919.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (570 samples, 0.53%)</title><rect x="92.0144%" y="1909" width="0.5309%" height="15" fill="rgb(207,138,8)" fg:x="98794" fg:w="570"/><text x="92.2644%" y="1919.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (49 samples, 0.05%)</title><rect x="92.4996%" y="1893" width="0.0456%" height="15" fill="rgb(244,130,36)" fg:x="99315" fg:w="49"/><text x="92.7496%" y="1903.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (627 samples, 0.58%)</title><rect x="91.9753%" y="1941" width="0.5840%" height="15" fill="rgb(207,197,52)" fg:x="98752" fg:w="627"/><text x="92.2253%" y="1951.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (609 samples, 0.57%)</title><rect x="91.9920%" y="1925" width="0.5672%" height="15" fill="rgb(206,9,21)" fg:x="98770" fg:w="609"/><text x="92.2420%" y="1935.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (15 samples, 0.01%)</title><rect x="92.5453%" y="1909" width="0.0140%" height="15" fill="rgb(250,15,47)" fg:x="99364" fg:w="15"/><text x="92.7953%" y="1919.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (15 samples, 0.01%)</title><rect x="92.5453%" y="1893" width="0.0140%" height="15" fill="rgb(235,202,14)" fg:x="99364" fg:w="15"/><text x="92.7953%" y="1903.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (637 samples, 0.59%)</title><rect x="91.9669%" y="1957" width="0.5933%" height="15" fill="rgb(211,180,47)" fg:x="98743" fg:w="637"/><text x="92.2169%" y="1967.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (17 samples, 0.02%)</title><rect x="92.5760%" y="1749" width="0.0158%" height="15" fill="rgb(209,61,11)" fg:x="99397" fg:w="17"/><text x="92.8260%" y="1759.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (64 samples, 0.06%)</title><rect x="92.5639%" y="1765" width="0.0596%" height="15" fill="rgb(243,197,29)" fg:x="99384" fg:w="64"/><text x="92.8139%" y="1775.50"></text></g><g><title>sha2::sha512::x86::sha_round (34 samples, 0.03%)</title><rect x="92.5918%" y="1749" width="0.0317%" height="15" fill="rgb(216,185,16)" fg:x="99414" fg:w="34"/><text x="92.8418%" y="1759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.01%)</title><rect x="92.6123%" y="1733" width="0.0112%" height="15" fill="rgb(248,5,15)" fg:x="99436" fg:w="12"/><text x="92.8623%" y="1743.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (81 samples, 0.08%)</title><rect x="92.5602%" y="1909" width="0.0754%" height="15" fill="rgb(240,39,41)" fg:x="99380" fg:w="81"/><text x="92.8102%" y="1919.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (81 samples, 0.08%)</title><rect x="92.5602%" y="1893" width="0.0754%" height="15" fill="rgb(224,220,43)" fg:x="99380" fg:w="81"/><text x="92.8102%" y="1903.50"></text></g><g><title>sha2::sha512::Engine512::finish (81 samples, 0.08%)</title><rect x="92.5602%" y="1877" width="0.0754%" height="15" fill="rgb(215,21,24)" fg:x="99380" fg:w="81"/><text x="92.8102%" y="1887.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (81 samples, 0.08%)</title><rect x="92.5602%" y="1861" width="0.0754%" height="15" fill="rgb(220,102,8)" fg:x="99380" fg:w="81"/><text x="92.8102%" y="1871.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (78 samples, 0.07%)</title><rect x="92.5630%" y="1845" width="0.0726%" height="15" fill="rgb(225,185,10)" fg:x="99383" fg:w="78"/><text x="92.8130%" y="1855.50"></text></g><g><title>sha2::sha512::compress512 (78 samples, 0.07%)</title><rect x="92.5630%" y="1829" width="0.0726%" height="15" fill="rgb(212,108,24)" fg:x="99383" fg:w="78"/><text x="92.8130%" y="1839.50"></text></g><g><title>sha2::sha512::x86::compress (78 samples, 0.07%)</title><rect x="92.5630%" y="1813" width="0.0726%" height="15" fill="rgb(237,27,0)" fg:x="99383" fg:w="78"/><text x="92.8130%" y="1823.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (78 samples, 0.07%)</title><rect x="92.5630%" y="1797" width="0.0726%" height="15" fill="rgb(212,106,38)" fg:x="99383" fg:w="78"/><text x="92.8130%" y="1807.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (78 samples, 0.07%)</title><rect x="92.5630%" y="1781" width="0.0726%" height="15" fill="rgb(210,125,30)" fg:x="99383" fg:w="78"/><text x="92.8130%" y="1791.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (13 samples, 0.01%)</title><rect x="92.6235%" y="1765" width="0.0121%" height="15" fill="rgb(215,219,1)" fg:x="99448" fg:w="13"/><text x="92.8735%" y="1775.50"></text></g><g><title>sha2::sha512::x86::sha_round (12 samples, 0.01%)</title><rect x="92.6244%" y="1749" width="0.0112%" height="15" fill="rgb(223,10,12)" fg:x="99449" fg:w="12"/><text x="92.8744%" y="1759.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (85 samples, 0.08%)</title><rect x="92.5602%" y="1941" width="0.0792%" height="15" fill="rgb(245,40,34)" fg:x="99380" fg:w="85"/><text x="92.8102%" y="1951.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (85 samples, 0.08%)</title><rect x="92.5602%" y="1925" width="0.0792%" height="15" fill="rgb(211,185,19)" fg:x="99380" fg:w="85"/><text x="92.8102%" y="1935.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce (22 samples, 0.02%)</title><rect x="92.6505%" y="1893" width="0.0205%" height="15" fill="rgb(243,190,43)" fg:x="99477" fg:w="22"/><text x="92.9005%" y="1903.50"></text></g><g><title>aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey::sign_arbitrary_message (6,608 samples, 6.15%)</title><rect x="86.5230%" y="1989" width="6.1545%" height="15" fill="rgb(232,208,29)" fg:x="92898" fg:w="6608"/><text x="86.7730%" y="1999.50">aptos_cr..</text></g><g><title>ed25519_dalek::secret::ExpandedSecretKey::sign (3,385 samples, 3.15%)</title><rect x="89.5248%" y="1973" width="3.1527%" height="15" fill="rgb(234,134,27)" fg:x="96121" fg:w="3385"/><text x="89.7748%" y="1983.50">ed2..</text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (126 samples, 0.12%)</title><rect x="92.5602%" y="1957" width="0.1174%" height="15" fill="rgb(225,41,29)" fg:x="99380" fg:w="126"/><text x="92.8102%" y="1967.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (40 samples, 0.04%)</title><rect x="92.6403%" y="1941" width="0.0373%" height="15" fill="rgb(241,214,44)" fg:x="99466" fg:w="40"/><text x="92.8903%" y="1951.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (39 samples, 0.04%)</title><rect x="92.6412%" y="1925" width="0.0363%" height="15" fill="rgb(205,219,41)" fg:x="99467" fg:w="39"/><text x="92.8912%" y="1935.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (30 samples, 0.03%)</title><rect x="92.6496%" y="1909" width="0.0279%" height="15" fill="rgb(226,15,26)" fg:x="99476" fg:w="30"/><text x="92.8996%" y="1919.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (11 samples, 0.01%)</title><rect x="92.6850%" y="1909" width="0.0102%" height="15" fill="rgb(210,83,41)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.01%)</title><rect x="92.6850%" y="1893" width="0.0102%" height="15" fill="rgb(247,9,39)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1903.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (11 samples, 0.01%)</title><rect x="92.6850%" y="1877" width="0.0102%" height="15" fill="rgb(209,37,30)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1887.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (11 samples, 0.01%)</title><rect x="92.6850%" y="1861" width="0.0102%" height="15" fill="rgb(248,170,46)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1871.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (11 samples, 0.01%)</title><rect x="92.6850%" y="1845" width="0.0102%" height="15" fill="rgb(237,129,44)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1855.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (11 samples, 0.01%)</title><rect x="92.6850%" y="1829" width="0.0102%" height="15" fill="rgb(225,117,51)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1839.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="92.6850%" y="1813" width="0.0102%" height="15" fill="rgb(212,165,2)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="92.6850%" y="1797" width="0.0102%" height="15" fill="rgb(213,53,45)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="92.6850%" y="1781" width="0.0102%" height="15" fill="rgb(220,148,3)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="92.6850%" y="1765" width="0.0102%" height="15" fill="rgb(228,37,29)" fg:x="99514" fg:w="11"/><text x="92.9350%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (29 samples, 0.03%)</title><rect x="92.6961%" y="1813" width="0.0270%" height="15" fill="rgb(209,76,29)" fg:x="99526" fg:w="29"/><text x="92.9461%" y="1823.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (29 samples, 0.03%)</title><rect x="92.6961%" y="1797" width="0.0270%" height="15" fill="rgb(215,90,5)" fg:x="99526" fg:w="29"/><text x="92.9461%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (28 samples, 0.03%)</title><rect x="92.6971%" y="1781" width="0.0261%" height="15" fill="rgb(227,207,32)" fg:x="99527" fg:w="28"/><text x="92.9471%" y="1791.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (27 samples, 0.03%)</title><rect x="92.6980%" y="1765" width="0.0251%" height="15" fill="rgb(251,218,44)" fg:x="99528" fg:w="27"/><text x="92.9480%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.03%)</title><rect x="92.6980%" y="1749" width="0.0251%" height="15" fill="rgb(211,44,16)" fg:x="99528" fg:w="27"/><text x="92.9480%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.03%)</title><rect x="92.6980%" y="1733" width="0.0251%" height="15" fill="rgb(242,170,37)" fg:x="99528" fg:w="27"/><text x="92.9480%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.03%)</title><rect x="92.6980%" y="1717" width="0.0251%" height="15" fill="rgb(205,181,22)" fg:x="99528" fg:w="27"/><text x="92.9480%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="92.6980%" y="1701" width="0.0251%" height="15" fill="rgb(228,130,19)" fg:x="99528" fg:w="27"/><text x="92.9480%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="92.6980%" y="1685" width="0.0251%" height="15" fill="rgb(228,9,15)" fg:x="99528" fg:w="27"/><text x="92.9480%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect x="92.6980%" y="1669" width="0.0251%" height="15" fill="rgb(219,66,48)" fg:x="99528" fg:w="27"/><text x="92.9480%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.02%)</title><rect x="92.6989%" y="1653" width="0.0242%" height="15" fill="rgb(234,203,10)" fg:x="99529" fg:w="26"/><text x="92.9489%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.02%)</title><rect x="92.6989%" y="1637" width="0.0242%" height="15" fill="rgb(219,209,1)" fg:x="99529" fg:w="26"/><text x="92.9489%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.02%)</title><rect x="92.6989%" y="1621" width="0.0242%" height="15" fill="rgb(206,167,9)" fg:x="99529" fg:w="26"/><text x="92.9489%" y="1631.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.02%)</title><rect x="92.6989%" y="1605" width="0.0242%" height="15" fill="rgb(210,11,39)" fg:x="99529" fg:w="26"/><text x="92.9489%" y="1615.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.02%)</title><rect x="92.6989%" y="1589" width="0.0242%" height="15" fill="rgb(251,90,47)" fg:x="99529" fg:w="26"/><text x="92.9489%" y="1599.50"></text></g><g><title>realloc (25 samples, 0.02%)</title><rect x="92.6999%" y="1573" width="0.0233%" height="15" fill="rgb(237,7,4)" fg:x="99530" fg:w="25"/><text x="92.9499%" y="1583.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="92.7017%" y="1557" width="0.0214%" height="15" fill="rgb(232,205,47)" fg:x="99532" fg:w="23"/><text x="92.9517%" y="1567.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="92.7036%" y="1541" width="0.0196%" height="15" fill="rgb(215,86,48)" fg:x="99534" fg:w="21"/><text x="92.9536%" y="1551.50"></text></g><g><title>&lt;aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (31 samples, 0.03%)</title><rect x="92.6961%" y="1845" width="0.0289%" height="15" fill="rgb(232,14,47)" fg:x="99526" fg:w="31"/><text x="92.9461%" y="1855.50"></text></g><g><title>aptos_types::serde_helper::vec_bytes::serialize (31 samples, 0.03%)</title><rect x="92.6961%" y="1829" width="0.0289%" height="15" fill="rgb(240,28,46)" fg:x="99526" fg:w="31"/><text x="92.9461%" y="1839.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (45 samples, 0.04%)</title><rect x="92.6952%" y="1909" width="0.0419%" height="15" fill="rgb(224,85,5)" fg:x="99525" fg:w="45"/><text x="92.9452%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (45 samples, 0.04%)</title><rect x="92.6952%" y="1893" width="0.0419%" height="15" fill="rgb(219,34,25)" fg:x="99525" fg:w="45"/><text x="92.9452%" y="1903.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (45 samples, 0.04%)</title><rect x="92.6952%" y="1877" width="0.0419%" height="15" fill="rgb(247,137,45)" fg:x="99525" fg:w="45"/><text x="92.9452%" y="1887.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 0.04%)</title><rect x="92.6961%" y="1861" width="0.0410%" height="15" fill="rgb(237,121,47)" fg:x="99526" fg:w="44"/><text x="92.9461%" y="1871.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::ModuleId&gt;::serialize (11 samples, 0.01%)</title><rect x="92.7269%" y="1845" width="0.0102%" height="15" fill="rgb(247,148,27)" fg:x="99559" fg:w="11"/><text x="92.9769%" y="1855.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.01%)</title><rect x="92.7269%" y="1829" width="0.0102%" height="15" fill="rgb(220,44,0)" fg:x="99559" fg:w="11"/><text x="92.9769%" y="1839.50"></text></g><g><title>aptos_crypto::traits::signing_message (95 samples, 0.09%)</title><rect x="92.6775%" y="1989" width="0.0885%" height="15" fill="rgb(236,61,29)" fg:x="99506" fg:w="95"/><text x="92.9275%" y="1999.50"></text></g><g><title>bcs::ser::serialize_into (89 samples, 0.08%)</title><rect x="92.6831%" y="1973" width="0.0829%" height="15" fill="rgb(244,180,35)" fg:x="99512" fg:w="89"/><text x="92.9331%" y="1983.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (89 samples, 0.08%)</title><rect x="92.6831%" y="1957" width="0.0829%" height="15" fill="rgb(242,14,54)" fg:x="99512" fg:w="89"/><text x="92.9331%" y="1967.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (89 samples, 0.08%)</title><rect x="92.6831%" y="1941" width="0.0829%" height="15" fill="rgb(206,24,45)" fg:x="99512" fg:w="89"/><text x="92.9331%" y="1951.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (88 samples, 0.08%)</title><rect x="92.6840%" y="1925" width="0.0820%" height="15" fill="rgb(215,211,6)" fg:x="99513" fg:w="88"/><text x="92.9340%" y="1935.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (31 samples, 0.03%)</title><rect x="92.7371%" y="1909" width="0.0289%" height="15" fill="rgb(207,56,2)" fg:x="99570" fg:w="31"/><text x="92.9871%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (31 samples, 0.03%)</title><rect x="92.7371%" y="1893" width="0.0289%" height="15" fill="rgb(220,135,9)" fg:x="99570" fg:w="31"/><text x="92.9871%" y="1903.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (31 samples, 0.03%)</title><rect x="92.7371%" y="1877" width="0.0289%" height="15" fill="rgb(214,145,52)" fg:x="99570" fg:w="31"/><text x="92.9871%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.03%)</title><rect x="92.7371%" y="1861" width="0.0289%" height="15" fill="rgb(241,83,53)" fg:x="99570" fg:w="31"/><text x="92.9871%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.03%)</title><rect x="92.7371%" y="1845" width="0.0289%" height="15" fill="rgb(222,66,13)" fg:x="99570" fg:w="31"/><text x="92.9871%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.03%)</title><rect x="92.7371%" y="1829" width="0.0289%" height="15" fill="rgb(239,164,54)" fg:x="99570" fg:w="31"/><text x="92.9871%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.03%)</title><rect x="92.7381%" y="1813" width="0.0279%" height="15" fill="rgb(216,189,13)" fg:x="99571" fg:w="30"/><text x="92.9881%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.03%)</title><rect x="92.7381%" y="1797" width="0.0279%" height="15" fill="rgb(228,212,51)" fg:x="99571" fg:w="30"/><text x="92.9881%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.03%)</title><rect x="92.7390%" y="1781" width="0.0270%" height="15" fill="rgb(207,190,21)" fg:x="99572" fg:w="29"/><text x="92.9890%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.03%)</title><rect x="92.7399%" y="1765" width="0.0261%" height="15" fill="rgb(245,28,35)" fg:x="99573" fg:w="28"/><text x="92.9899%" y="1775.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="92.7399%" y="1749" width="0.0261%" height="15" fill="rgb(239,23,40)" fg:x="99573" fg:w="28"/><text x="92.9899%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.03%)</title><rect x="92.7399%" y="1733" width="0.0261%" height="15" fill="rgb(242,10,51)" fg:x="99573" fg:w="28"/><text x="92.9899%" y="1743.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.03%)</title><rect x="92.7399%" y="1717" width="0.0261%" height="15" fill="rgb(207,186,5)" fg:x="99573" fg:w="28"/><text x="92.9899%" y="1727.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.03%)</title><rect x="92.7399%" y="1701" width="0.0261%" height="15" fill="rgb(242,21,16)" fg:x="99573" fg:w="28"/><text x="92.9899%" y="1711.50"></text></g><g><title>realloc (28 samples, 0.03%)</title><rect x="92.7399%" y="1685" width="0.0261%" height="15" fill="rgb(237,0,53)" fg:x="99573" fg:w="28"/><text x="92.9899%" y="1695.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="92.7418%" y="1669" width="0.0242%" height="15" fill="rgb(215,8,52)" fg:x="99575" fg:w="26"/><text x="92.9918%" y="1679.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="92.7418%" y="1653" width="0.0242%" height="15" fill="rgb(248,62,44)" fg:x="99575" fg:w="26"/><text x="92.9918%" y="1663.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="92.7558%" y="1637" width="0.0102%" height="15" fill="rgb(224,83,15)" fg:x="99590" fg:w="11"/><text x="93.0058%" y="1647.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey as aptos_crypto::traits::SigningKey&gt;::sign (6,715 samples, 6.25%)</title><rect x="86.5221%" y="2005" width="6.2542%" height="15" fill="rgb(249,100,46)" fg:x="92897" fg:w="6715"/><text x="86.7721%" y="2015.50">&lt;aptos_c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="92.7660%" y="1989" width="0.0102%" height="15" fill="rgb(213,35,48)" fg:x="99601" fg:w="11"/><text x="93.0160%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="92.7660%" y="1973" width="0.0102%" height="15" fill="rgb(251,2,13)" fg:x="99601" fg:w="11"/><text x="93.0160%" y="1983.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="92.7660%" y="1957" width="0.0102%" height="15" fill="rgb(212,132,21)" fg:x="99601" fg:w="11"/><text x="93.0160%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="92.7660%" y="1941" width="0.0102%" height="15" fill="rgb(247,17,21)" fg:x="99601" fg:w="11"/><text x="93.0160%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="92.7660%" y="1925" width="0.0102%" height="15" fill="rgb(220,177,38)" fg:x="99601" fg:w="11"/><text x="93.0160%" y="1935.50"></text></g><g><title>aptos_types::transaction::RawTransaction::sign (6,721 samples, 6.26%)</title><rect x="86.5221%" y="2021" width="6.2598%" height="15" fill="rgb(233,219,21)" fg:x="92897" fg:w="6721"/><text x="86.7721%" y="2031.50">aptos_ty..</text></g><g><title>aptos_language_e2e_tests::account::TransactionBuilder::sign (6,735 samples, 6.27%)</title><rect x="86.5146%" y="2037" width="6.2728%" height="15" fill="rgb(246,17,7)" fg:x="92889" fg:w="6735"/><text x="86.7646%" y="2047.50">aptos_la..</text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.02%)</title><rect x="92.7930%" y="1781" width="0.0214%" height="15" fill="rgb(212,4,22)" fg:x="99630" fg:w="23"/><text x="93.0430%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.02%)</title><rect x="92.7939%" y="1765" width="0.0205%" height="15" fill="rgb(243,85,21)" fg:x="99631" fg:w="22"/><text x="93.0439%" y="1775.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.02%)</title><rect x="92.7939%" y="1749" width="0.0205%" height="15" fill="rgb(232,218,2)" fg:x="99631" fg:w="22"/><text x="93.0439%" y="1759.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.02%)</title><rect x="92.7939%" y="1733" width="0.0205%" height="15" fill="rgb(253,168,47)" fg:x="99631" fg:w="22"/><text x="93.0439%" y="1743.50"></text></g><g><title>realloc (22 samples, 0.02%)</title><rect x="92.7939%" y="1717" width="0.0205%" height="15" fill="rgb(238,101,25)" fg:x="99631" fg:w="22"/><text x="93.0439%" y="1727.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="92.7939%" y="1701" width="0.0205%" height="15" fill="rgb(251,86,12)" fg:x="99631" fg:w="22"/><text x="93.0439%" y="1711.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="92.7939%" y="1685" width="0.0205%" height="15" fill="rgb(241,112,44)" fg:x="99631" fg:w="22"/><text x="93.0439%" y="1695.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="92.8014%" y="1669" width="0.0130%" height="15" fill="rgb(224,28,25)" fg:x="99639" fg:w="14"/><text x="93.0514%" y="1679.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (29 samples, 0.03%)</title><rect x="92.7884%" y="2005" width="0.0270%" height="15" fill="rgb(209,201,1)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="2015.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 0.03%)</title><rect x="92.7884%" y="1989" width="0.0270%" height="15" fill="rgb(231,30,22)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1999.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (29 samples, 0.03%)</title><rect x="92.7884%" y="1973" width="0.0270%" height="15" fill="rgb(247,96,31)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1983.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (29 samples, 0.03%)</title><rect x="92.7884%" y="1957" width="0.0270%" height="15" fill="rgb(251,100,12)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1967.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (29 samples, 0.03%)</title><rect x="92.7884%" y="1941" width="0.0270%" height="15" fill="rgb(224,174,7)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1951.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (29 samples, 0.03%)</title><rect x="92.7884%" y="1925" width="0.0270%" height="15" fill="rgb(231,168,19)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1935.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (29 samples, 0.03%)</title><rect x="92.7884%" y="1909" width="0.0270%" height="15" fill="rgb(226,85,5)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 0.03%)</title><rect x="92.7884%" y="1893" width="0.0270%" height="15" fill="rgb(210,215,5)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29 samples, 0.03%)</title><rect x="92.7884%" y="1877" width="0.0270%" height="15" fill="rgb(233,70,8)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.03%)</title><rect x="92.7884%" y="1861" width="0.0270%" height="15" fill="rgb(229,109,53)" fg:x="99625" fg:w="29"/><text x="93.0384%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 0.02%)</title><rect x="92.7921%" y="1845" width="0.0233%" height="15" fill="rgb(213,125,35)" fg:x="99629" fg:w="25"/><text x="93.0421%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.02%)</title><rect x="92.7921%" y="1829" width="0.0233%" height="15" fill="rgb(215,12,48)" fg:x="99629" fg:w="25"/><text x="93.0421%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.02%)</title><rect x="92.7930%" y="1813" width="0.0224%" height="15" fill="rgb(207,12,38)" fg:x="99630" fg:w="24"/><text x="93.0430%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.02%)</title><rect x="92.7930%" y="1797" width="0.0224%" height="15" fill="rgb(216,229,2)" fg:x="99630" fg:w="24"/><text x="93.0430%" y="1807.50"></text></g><g><title>bcs::ser::to_bytes (32 samples, 0.03%)</title><rect x="92.7884%" y="2037" width="0.0298%" height="15" fill="rgb(229,209,31)" fg:x="99625" fg:w="32"/><text x="93.0384%" y="2047.50"></text></g><g><title>bcs::ser::serialize_into (32 samples, 0.03%)</title><rect x="92.7884%" y="2021" width="0.0298%" height="15" fill="rgb(239,57,22)" fg:x="99625" fg:w="32"/><text x="93.0384%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.11%)</title><rect x="92.8210%" y="2021" width="0.1127%" height="15" fill="rgb(239,119,54)" fg:x="99660" fg:w="121"/><text x="93.0710%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_language_e2e_tests::account::Account]&gt; (121 samples, 0.11%)</title><rect x="92.8210%" y="2005" width="0.1127%" height="15" fill="rgb(231,80,45)" fg:x="99660" fg:w="121"/><text x="93.0710%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_language_e2e_tests::account::Account&gt; (121 samples, 0.11%)</title><rect x="92.8210%" y="1989" width="0.1127%" height="15" fill="rgb(219,138,19)" fg:x="99660" fg:w="121"/><text x="93.0710%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey&gt; (121 samples, 0.11%)</title><rect x="92.8210%" y="1973" width="0.1127%" height="15" fill="rgb(216,53,26)" fg:x="99660" fg:w="121"/><text x="93.0710%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;ed25519_dalek::secret::SecretKey&gt; (121 samples, 0.11%)</title><rect x="92.8210%" y="1957" width="0.1127%" height="15" fill="rgb(224,30,16)" fg:x="99660" fg:w="121"/><text x="93.0710%" y="1967.50"></text></g><g><title>&lt;ed25519_dalek::secret::SecretKey as core::ops::drop::Drop&gt;::drop (120 samples, 0.11%)</title><rect x="92.8219%" y="1941" width="0.1118%" height="15" fill="rgb(224,151,24)" fg:x="99661" fg:w="120"/><text x="93.0719%" y="1951.50"></text></g><g><title>&lt;ed25519_dalek::secret::SecretKey as zeroize::Zeroize&gt;::zeroize (93 samples, 0.09%)</title><rect x="92.8470%" y="1925" width="0.0866%" height="15" fill="rgb(236,75,7)" fg:x="99688" fg:w="93"/><text x="93.0970%" y="1935.50"></text></g><g><title>&lt;[Z: 32] as zeroize::Zeroize&gt;::zeroize (93 samples, 0.09%)</title><rect x="92.8470%" y="1909" width="0.0866%" height="15" fill="rgb(248,106,42)" fg:x="99688" fg:w="93"/><text x="93.0970%" y="1919.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (93 samples, 0.09%)</title><rect x="92.8470%" y="1893" width="0.0866%" height="15" fill="rgb(222,217,11)" fg:x="99688" fg:w="93"/><text x="93.0970%" y="1903.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (93 samples, 0.09%)</title><rect x="92.8470%" y="1877" width="0.0866%" height="15" fill="rgb(234,143,31)" fg:x="99688" fg:w="93"/><text x="93.0970%" y="1887.50"></text></g><g><title>zeroize::volatile_write (93 samples, 0.09%)</title><rect x="92.8470%" y="1861" width="0.0866%" height="15" fill="rgb(237,148,28)" fg:x="99688" fg:w="93"/><text x="93.0970%" y="1871.50"></text></g><g><title>core::ptr::write_volatile (93 samples, 0.09%)</title><rect x="92.8470%" y="1845" width="0.0866%" height="15" fill="rgb(241,151,6)" fg:x="99688" fg:w="93"/><text x="93.0970%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_language_e2e_tests::account::Account&gt;&gt; (122 samples, 0.11%)</title><rect x="92.8210%" y="2037" width="0.1136%" height="15" fill="rgb(226,55,18)" fg:x="99660" fg:w="122"/><text x="93.0710%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (14 samples, 0.01%)</title><rect x="92.9364%" y="2037" width="0.0130%" height="15" fill="rgb(226,196,6)" fg:x="99784" fg:w="14"/><text x="93.1864%" y="2047.50"></text></g><g><title>run_benchmark::create_block (7,155 samples, 6.66%)</title><rect x="86.2920%" y="2053" width="6.6640%" height="15" fill="rgb(251,228,11)" fg:x="92650" fg:w="7155"/><text x="86.5420%" y="2063.50">run_bench..</text></g><g><title>move_compiler::command_line::compiler::run (15 samples, 0.01%)</title><rect x="92.9756%" y="1733" width="0.0140%" height="15" fill="rgb(219,197,15)" fg:x="99826" fg:w="15"/><text x="93.2256%" y="1743.50"></text></g><g><title>move_compiler::command_line::compiler::run (25 samples, 0.02%)</title><rect x="92.9718%" y="1749" width="0.0233%" height="15" fill="rgb(243,105,44)" fg:x="99822" fg:w="25"/><text x="93.2218%" y="1759.50"></text></g><g><title>move_compiler::command_line::compiler::run (27 samples, 0.03%)</title><rect x="92.9709%" y="1765" width="0.0251%" height="15" fill="rgb(205,183,40)" fg:x="99821" fg:w="27"/><text x="93.2209%" y="1775.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.03%)</title><rect x="92.9653%" y="2005" width="0.0326%" height="15" fill="rgb(232,138,46)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="2015.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (35 samples, 0.03%)</title><rect x="92.9653%" y="1989" width="0.0326%" height="15" fill="rgb(234,161,14)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1999.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (35 samples, 0.03%)</title><rect x="92.9653%" y="1973" width="0.0326%" height="15" fill="rgb(238,211,18)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1983.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (35 samples, 0.03%)</title><rect x="92.9653%" y="1957" width="0.0326%" height="15" fill="rgb(217,130,2)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1967.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (35 samples, 0.03%)</title><rect x="92.9653%" y="1941" width="0.0326%" height="15" fill="rgb(251,17,29)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1951.50"></text></g><g><title>once_cell::imp::initialize_or_wait (35 samples, 0.03%)</title><rect x="92.9653%" y="1925" width="0.0326%" height="15" fill="rgb(243,18,0)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 0.03%)</title><rect x="92.9653%" y="1909" width="0.0326%" height="15" fill="rgb(227,220,45)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1919.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (35 samples, 0.03%)</title><rect x="92.9653%" y="1893" width="0.0326%" height="15" fill="rgb(212,34,2)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1903.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (35 samples, 0.03%)</title><rect x="92.9653%" y="1877" width="0.0326%" height="15" fill="rgb(236,23,8)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1887.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (35 samples, 0.03%)</title><rect x="92.9653%" y="1861" width="0.0326%" height="15" fill="rgb(210,113,39)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1871.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.03%)</title><rect x="92.9653%" y="1845" width="0.0326%" height="15" fill="rgb(243,123,48)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1855.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.03%)</title><rect x="92.9653%" y="1829" width="0.0326%" height="15" fill="rgb(223,175,36)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1839.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (35 samples, 0.03%)</title><rect x="92.9653%" y="1813" width="0.0326%" height="15" fill="rgb(226,100,30)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1823.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (35 samples, 0.03%)</title><rect x="92.9653%" y="1797" width="0.0326%" height="15" fill="rgb(221,225,39)" fg:x="99815" fg:w="35"/><text x="93.2153%" y="1807.50"></text></g><g><title>move_compiler::command_line::compiler::run (34 samples, 0.03%)</title><rect x="92.9662%" y="1781" width="0.0317%" height="15" fill="rgb(224,222,42)" fg:x="99816" fg:w="34"/><text x="93.2162%" y="1791.50"></text></g><g><title>aptos_language_e2e_tests::compile::compile_source_module (36 samples, 0.03%)</title><rect x="92.9653%" y="2021" width="0.0335%" height="15" fill="rgb(221,53,1)" fg:x="99815" fg:w="36"/><text x="93.2153%" y="2031.50"></text></g><g><title>run_benchmark::main (56 samples, 0.05%)</title><rect x="92.9560%" y="2053" width="0.0522%" height="15" fill="rgb(216,187,48)" fg:x="99805" fg:w="56"/><text x="93.2060%" y="2063.50"></text></g><g><title>run_benchmark::create_module (46 samples, 0.04%)</title><rect x="92.9653%" y="2037" width="0.0428%" height="15" fill="rgb(220,108,2)" fg:x="99815" fg:w="46"/><text x="93.2153%" y="2047.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (12 samples, 0.01%)</title><rect x="93.0184%" y="1461" width="0.0112%" height="15" fill="rgb(216,13,42)" fg:x="99872" fg:w="12"/><text x="93.2684%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (12 samples, 0.01%)</title><rect x="93.0184%" y="1445" width="0.0112%" height="15" fill="rgb(205,14,29)" fg:x="99872" fg:w="12"/><text x="93.2684%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (12 samples, 0.01%)</title><rect x="93.0184%" y="1429" width="0.0112%" height="15" fill="rgb(217,168,30)" fg:x="99872" fg:w="12"/><text x="93.2684%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (12 samples, 0.01%)</title><rect x="93.0184%" y="1413" width="0.0112%" height="15" fill="rgb(246,173,54)" fg:x="99872" fg:w="12"/><text x="93.2684%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (12 samples, 0.01%)</title><rect x="93.0184%" y="1397" width="0.0112%" height="15" fill="rgb(227,177,11)" fg:x="99872" fg:w="12"/><text x="93.2684%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (12 samples, 0.01%)</title><rect x="93.0184%" y="1381" width="0.0112%" height="15" fill="rgb(223,215,51)" fg:x="99872" fg:w="12"/><text x="93.2684%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (12 samples, 0.01%)</title><rect x="93.0184%" y="1365" width="0.0112%" height="15" fill="rgb(253,4,17)" fg:x="99872" fg:w="12"/><text x="93.2684%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (16 samples, 0.01%)</title><rect x="93.0184%" y="1765" width="0.0149%" height="15" fill="rgb(206,150,43)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1775.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (16 samples, 0.01%)</title><rect x="93.0184%" y="1749" width="0.0149%" height="15" fill="rgb(241,100,52)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1759.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (16 samples, 0.01%)</title><rect x="93.0184%" y="1733" width="0.0149%" height="15" fill="rgb(234,120,21)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1743.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (16 samples, 0.01%)</title><rect x="93.0184%" y="1717" width="0.0149%" height="15" fill="rgb(231,60,11)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.01%)</title><rect x="93.0184%" y="1701" width="0.0149%" height="15" fill="rgb(247,77,50)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.01%)</title><rect x="93.0184%" y="1685" width="0.0149%" height="15" fill="rgb(251,199,54)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1695.50"></text></g><g><title>std::panicking::try (16 samples, 0.01%)</title><rect x="93.0184%" y="1669" width="0.0149%" height="15" fill="rgb(212,120,38)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.01%)</title><rect x="93.0184%" y="1653" width="0.0149%" height="15" fill="rgb(250,161,37)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="93.0184%" y="1637" width="0.0149%" height="15" fill="rgb(232,158,45)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1647.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="93.0184%" y="1621" width="0.0149%" height="15" fill="rgb(233,114,2)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1631.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="93.0184%" y="1605" width="0.0149%" height="15" fill="rgb(248,139,0)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1615.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (16 samples, 0.01%)</title><rect x="93.0184%" y="1589" width="0.0149%" height="15" fill="rgb(222,164,18)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1599.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (16 samples, 0.01%)</title><rect x="93.0184%" y="1573" width="0.0149%" height="15" fill="rgb(221,140,42)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1583.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (16 samples, 0.01%)</title><rect x="93.0184%" y="1557" width="0.0149%" height="15" fill="rgb(209,186,11)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1567.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (16 samples, 0.01%)</title><rect x="93.0184%" y="1541" width="0.0149%" height="15" fill="rgb(254,212,38)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1551.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (16 samples, 0.01%)</title><rect x="93.0184%" y="1525" width="0.0149%" height="15" fill="rgb(219,156,31)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (16 samples, 0.01%)</title><rect x="93.0184%" y="1509" width="0.0149%" height="15" fill="rgb(222,148,42)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (16 samples, 0.01%)</title><rect x="93.0184%" y="1493" width="0.0149%" height="15" fill="rgb(225,65,5)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (16 samples, 0.01%)</title><rect x="93.0184%" y="1477" width="0.0149%" height="15" fill="rgb(235,28,12)" fg:x="99872" fg:w="16"/><text x="93.2684%" y="1487.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.02%)</title><rect x="93.0184%" y="2053" width="0.0168%" height="15" fill="rgb(245,58,4)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="2063.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="93.0184%" y="2037" width="0.0168%" height="15" fill="rgb(235,118,5)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="2047.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="93.0184%" y="2021" width="0.0168%" height="15" fill="rgb(253,196,3)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="2031.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.02%)</title><rect x="93.0184%" y="2005" width="0.0168%" height="15" fill="rgb(238,90,28)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="2015.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (18 samples, 0.02%)</title><rect x="93.0184%" y="1989" width="0.0168%" height="15" fill="rgb(254,227,4)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1999.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="93.0184%" y="1973" width="0.0168%" height="15" fill="rgb(237,114,35)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1983.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="93.0184%" y="1957" width="0.0168%" height="15" fill="rgb(221,147,29)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1967.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="93.0184%" y="1941" width="0.0168%" height="15" fill="rgb(216,201,17)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1951.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="93.0184%" y="1925" width="0.0168%" height="15" fill="rgb(251,46,50)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1935.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="93.0184%" y="1909" width="0.0168%" height="15" fill="rgb(216,143,48)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1919.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.02%)</title><rect x="93.0184%" y="1893" width="0.0168%" height="15" fill="rgb(224,62,51)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1903.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (18 samples, 0.02%)</title><rect x="93.0184%" y="1877" width="0.0168%" height="15" fill="rgb(232,152,20)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1887.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (18 samples, 0.02%)</title><rect x="93.0184%" y="1861" width="0.0168%" height="15" fill="rgb(233,194,7)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1871.50"></text></g><g><title>rayon_core::registry::main_loop (18 samples, 0.02%)</title><rect x="93.0184%" y="1845" width="0.0168%" height="15" fill="rgb(207,33,22)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (18 samples, 0.02%)</title><rect x="93.0184%" y="1829" width="0.0168%" height="15" fill="rgb(226,54,34)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1839.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="93.0184%" y="1813" width="0.0168%" height="15" fill="rgb(227,161,47)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1823.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.02%)</title><rect x="93.0184%" y="1797" width="0.0168%" height="15" fill="rgb(218,58,37)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1807.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.02%)</title><rect x="93.0184%" y="1781" width="0.0168%" height="15" fill="rgb(208,173,18)" fg:x="99872" fg:w="18"/><text x="93.2684%" y="1791.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (16 samples, 0.01%)</title><rect x="93.0398%" y="1413" width="0.0149%" height="15" fill="rgb(230,159,11)" fg:x="99895" fg:w="16"/><text x="93.2898%" y="1423.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (16 samples, 0.01%)</title><rect x="93.0398%" y="1397" width="0.0149%" height="15" fill="rgb(238,90,51)" fg:x="99895" fg:w="16"/><text x="93.2898%" y="1407.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (16 samples, 0.01%)</title><rect x="93.0398%" y="1381" width="0.0149%" height="15" fill="rgb(225,97,36)" fg:x="99895" fg:w="16"/><text x="93.2898%" y="1391.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (16 samples, 0.01%)</title><rect x="93.0398%" y="1365" width="0.0149%" height="15" fill="rgb(211,205,42)" fg:x="99895" fg:w="16"/><text x="93.2898%" y="1375.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (16 samples, 0.01%)</title><rect x="93.0398%" y="1349" width="0.0149%" height="15" fill="rgb(219,152,7)" fg:x="99895" fg:w="16"/><text x="93.2898%" y="1359.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (16 samples, 0.01%)</title><rect x="93.0398%" y="1333" width="0.0149%" height="15" fill="rgb(222,79,10)" fg:x="99895" fg:w="16"/><text x="93.2898%" y="1343.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (15 samples, 0.01%)</title><rect x="93.0408%" y="1317" width="0.0140%" height="15" fill="rgb(242,13,11)" fg:x="99896" fg:w="15"/><text x="93.2908%" y="1327.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (15 samples, 0.01%)</title><rect x="93.0408%" y="1301" width="0.0140%" height="15" fill="rgb(231,143,41)" fg:x="99896" fg:w="15"/><text x="93.2908%" y="1311.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (19 samples, 0.02%)</title><rect x="93.0380%" y="1509" width="0.0177%" height="15" fill="rgb(222,147,19)" fg:x="99893" fg:w="19"/><text x="93.2880%" y="1519.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (17 samples, 0.02%)</title><rect x="93.0398%" y="1493" width="0.0158%" height="15" fill="rgb(235,5,39)" fg:x="99895" fg:w="17"/><text x="93.2898%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="93.0398%" y="1477" width="0.0158%" height="15" fill="rgb(246,155,51)" fg:x="99895" fg:w="17"/><text x="93.2898%" y="1487.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="93.0398%" y="1461" width="0.0158%" height="15" fill="rgb(218,157,4)" fg:x="99895" fg:w="17"/><text x="93.2898%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="93.0398%" y="1445" width="0.0158%" height="15" fill="rgb(226,184,4)" fg:x="99895" fg:w="17"/><text x="93.2898%" y="1455.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (17 samples, 0.02%)</title><rect x="93.0398%" y="1429" width="0.0158%" height="15" fill="rgb(210,103,26)" fg:x="99895" fg:w="17"/><text x="93.2898%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (33 samples, 0.03%)</title><rect x="93.0352%" y="1589" width="0.0307%" height="15" fill="rgb(228,23,31)" fg:x="99890" fg:w="33"/><text x="93.2852%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (33 samples, 0.03%)</title><rect x="93.0352%" y="1573" width="0.0307%" height="15" fill="rgb(205,176,34)" fg:x="99890" fg:w="33"/><text x="93.2852%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (30 samples, 0.03%)</title><rect x="93.0380%" y="1557" width="0.0279%" height="15" fill="rgb(246,213,37)" fg:x="99893" fg:w="30"/><text x="93.2880%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (30 samples, 0.03%)</title><rect x="93.0380%" y="1541" width="0.0279%" height="15" fill="rgb(213,52,45)" fg:x="99893" fg:w="30"/><text x="93.2880%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (30 samples, 0.03%)</title><rect x="93.0380%" y="1525" width="0.0279%" height="15" fill="rgb(249,9,52)" fg:x="99893" fg:w="30"/><text x="93.2880%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (11 samples, 0.01%)</title><rect x="93.0557%" y="1509" width="0.0102%" height="15" fill="rgb(205,97,16)" fg:x="99912" fg:w="11"/><text x="93.3057%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (36 samples, 0.03%)</title><rect x="93.0352%" y="1621" width="0.0335%" height="15" fill="rgb(214,11,46)" fg:x="99890" fg:w="36"/><text x="93.2852%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (36 samples, 0.03%)</title><rect x="93.0352%" y="1605" width="0.0335%" height="15" fill="rgb(221,66,18)" fg:x="99890" fg:w="36"/><text x="93.2852%" y="1615.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (42 samples, 0.04%)</title><rect x="93.0352%" y="1717" width="0.0391%" height="15" fill="rgb(213,49,1)" fg:x="99890" fg:w="42"/><text x="93.2852%" y="1727.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (42 samples, 0.04%)</title><rect x="93.0352%" y="1701" width="0.0391%" height="15" fill="rgb(232,75,51)" fg:x="99890" fg:w="42"/><text x="93.2852%" y="1711.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (42 samples, 0.04%)</title><rect x="93.0352%" y="1685" width="0.0391%" height="15" fill="rgb(208,218,40)" fg:x="99890" fg:w="42"/><text x="93.2852%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (42 samples, 0.04%)</title><rect x="93.0352%" y="1669" width="0.0391%" height="15" fill="rgb(206,144,50)" fg:x="99890" fg:w="42"/><text x="93.2852%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (42 samples, 0.04%)</title><rect x="93.0352%" y="1653" width="0.0391%" height="15" fill="rgb(216,9,51)" fg:x="99890" fg:w="42"/><text x="93.2852%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (42 samples, 0.04%)</title><rect x="93.0352%" y="1637" width="0.0391%" height="15" fill="rgb(226,6,53)" fg:x="99890" fg:w="42"/><text x="93.2852%" y="1647.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (43 samples, 0.04%)</title><rect x="93.0352%" y="1925" width="0.0400%" height="15" fill="rgb(216,9,50)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1935.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (43 samples, 0.04%)</title><rect x="93.0352%" y="1909" width="0.0400%" height="15" fill="rgb(214,101,31)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1919.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (43 samples, 0.04%)</title><rect x="93.0352%" y="1893" width="0.0400%" height="15" fill="rgb(247,85,17)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1903.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (43 samples, 0.04%)</title><rect x="93.0352%" y="1877" width="0.0400%" height="15" fill="rgb(248,138,25)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1887.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (43 samples, 0.04%)</title><rect x="93.0352%" y="1861" width="0.0400%" height="15" fill="rgb(225,146,20)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1871.50"></text></g><g><title>std::panic::catch_unwind (43 samples, 0.04%)</title><rect x="93.0352%" y="1845" width="0.0400%" height="15" fill="rgb(224,184,17)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1855.50"></text></g><g><title>std::panicking::try (43 samples, 0.04%)</title><rect x="93.0352%" y="1829" width="0.0400%" height="15" fill="rgb(231,10,20)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1839.50"></text></g><g><title>std::panicking::try::do_call (43 samples, 0.04%)</title><rect x="93.0352%" y="1813" width="0.0400%" height="15" fill="rgb(210,93,37)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1823.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43 samples, 0.04%)</title><rect x="93.0352%" y="1797" width="0.0400%" height="15" fill="rgb(226,84,42)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1807.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (43 samples, 0.04%)</title><rect x="93.0352%" y="1781" width="0.0400%" height="15" fill="rgb(253,192,7)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1791.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (43 samples, 0.04%)</title><rect x="93.0352%" y="1765" width="0.0400%" height="15" fill="rgb(214,107,27)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1775.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (43 samples, 0.04%)</title><rect x="93.0352%" y="1749" width="0.0400%" height="15" fill="rgb(238,146,21)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1759.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (43 samples, 0.04%)</title><rect x="93.0352%" y="1733" width="0.0400%" height="15" fill="rgb(209,136,30)" fg:x="99890" fg:w="43"/><text x="93.2852%" y="1743.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (51 samples, 0.05%)</title><rect x="93.0352%" y="2053" width="0.0475%" height="15" fill="rgb(226,60,22)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="2063.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (51 samples, 0.05%)</title><rect x="93.0352%" y="2037" width="0.0475%" height="15" fill="rgb(243,92,26)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="2047.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (51 samples, 0.05%)</title><rect x="93.0352%" y="2021" width="0.0475%" height="15" fill="rgb(211,85,33)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="2031.50"></text></g><g><title>rayon_core::registry::main_loop (51 samples, 0.05%)</title><rect x="93.0352%" y="2005" width="0.0475%" height="15" fill="rgb(243,187,44)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="2015.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (51 samples, 0.05%)</title><rect x="93.0352%" y="1989" width="0.0475%" height="15" fill="rgb(251,172,23)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="1999.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (51 samples, 0.05%)</title><rect x="93.0352%" y="1973" width="0.0475%" height="15" fill="rgb(254,162,50)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (51 samples, 0.05%)</title><rect x="93.0352%" y="1957" width="0.0475%" height="15" fill="rgb(239,14,53)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="1967.50"></text></g><g><title>rayon_core::job::JobRef::execute (51 samples, 0.05%)</title><rect x="93.0352%" y="1941" width="0.0475%" height="15" fill="rgb(242,208,8)" fg:x="99890" fg:w="51"/><text x="93.2852%" y="1951.50"></text></g><g><title>[unknown] (84,292 samples, 78.51%)</title><rect x="14.5816%" y="2069" width="78.5076%" height="15" fill="rgb(225,61,41)" fg:x="15656" fg:w="84292"/><text x="14.8316%" y="2079.50">[unknown]</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.01%)</title><rect x="93.0892%" y="1781" width="0.0112%" height="15" fill="rgb(219,154,6)" fg:x="99948" fg:w="12"/><text x="93.3392%" y="1791.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="93.0892%" y="1765" width="0.0112%" height="15" fill="rgb(227,223,44)" fg:x="99948" fg:w="12"/><text x="93.3392%" y="1775.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (11 samples, 0.01%)</title><rect x="93.0901%" y="1749" width="0.0102%" height="15" fill="rgb(220,188,6)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.01%)</title><rect x="93.0901%" y="1733" width="0.0102%" height="15" fill="rgb(216,65,22)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.01%)</title><rect x="93.0901%" y="1717" width="0.0102%" height="15" fill="rgb(236,66,46)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.01%)</title><rect x="93.0901%" y="1701" width="0.0102%" height="15" fill="rgb(211,150,52)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="93.0901%" y="1685" width="0.0102%" height="15" fill="rgb(253,89,19)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="93.0901%" y="1669" width="0.0102%" height="15" fill="rgb(245,4,1)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="93.0901%" y="1653" width="0.0102%" height="15" fill="rgb(230,109,16)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1663.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="93.0901%" y="1637" width="0.0102%" height="15" fill="rgb(213,7,47)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="93.0901%" y="1621" width="0.0102%" height="15" fill="rgb(242,148,14)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1631.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="93.0901%" y="1605" width="0.0102%" height="15" fill="rgb(238,51,34)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1615.50"></text></g><g><title>core::iter::adapters::cloned::clone_try_fold::{{closure}} (11 samples, 0.01%)</title><rect x="93.0901%" y="1589" width="0.0102%" height="15" fill="rgb(222,49,22)" fg:x="99949" fg:w="11"/><text x="93.3401%" y="1599.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="93.0892%" y="1797" width="0.0121%" height="15" fill="rgb(237,102,50)" fg:x="99948" fg:w="13"/><text x="93.3392%" y="1807.50"></text></g><g><title>&lt;aptos_language_e2e_tests::account::Account as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="93.1013%" y="1733" width="0.0251%" height="15" fill="rgb(237,195,8)" fg:x="99961" fg:w="27"/><text x="93.3513%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="93.1013%" y="1797" width="0.0317%" height="15" fill="rgb(245,60,18)" fg:x="99961" fg:w="34"/><text x="93.3513%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.03%)</title><rect x="93.1013%" y="1781" width="0.0317%" height="15" fill="rgb(253,74,32)" fg:x="99961" fg:w="34"/><text x="93.3513%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.03%)</title><rect x="93.1013%" y="1765" width="0.0317%" height="15" fill="rgb(240,91,39)" fg:x="99961" fg:w="34"/><text x="93.3513%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.03%)</title><rect x="93.1013%" y="1749" width="0.0317%" height="15" fill="rgb(221,162,34)" fg:x="99961" fg:w="34"/><text x="93.3513%" y="1759.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.01%)</title><rect x="93.1628%" y="1669" width="0.0149%" height="15" fill="rgb(223,32,2)" fg:x="100027" fg:w="16"/><text x="93.4128%" y="1679.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (16 samples, 0.01%)</title><rect x="93.1628%" y="1653" width="0.0149%" height="15" fill="rgb(245,220,46)" fg:x="100027" fg:w="16"/><text x="93.4128%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="93.1628%" y="1637" width="0.0149%" height="15" fill="rgb(216,38,33)" fg:x="100027" fg:w="16"/><text x="93.4128%" y="1647.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (16 samples, 0.01%)</title><rect x="93.1628%" y="1621" width="0.0149%" height="15" fill="rgb(210,123,14)" fg:x="100027" fg:w="16"/><text x="93.4128%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (17 samples, 0.02%)</title><rect x="93.1628%" y="1685" width="0.0158%" height="15" fill="rgb(214,38,47)" fg:x="100027" fg:w="17"/><text x="93.4128%" y="1695.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::set (36 samples, 0.03%)</title><rect x="93.1572%" y="1781" width="0.0335%" height="15" fill="rgb(244,180,16)" fg:x="100021" fg:w="36"/><text x="93.4072%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (36 samples, 0.03%)</title><rect x="93.1572%" y="1765" width="0.0335%" height="15" fill="rgb(252,21,32)" fg:x="100021" fg:w="36"/><text x="93.4072%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (35 samples, 0.03%)</title><rect x="93.1581%" y="1749" width="0.0326%" height="15" fill="rgb(245,218,31)" fg:x="100022" fg:w="35"/><text x="93.4081%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (30 samples, 0.03%)</title><rect x="93.1628%" y="1733" width="0.0279%" height="15" fill="rgb(247,81,18)" fg:x="100027" fg:w="30"/><text x="93.4128%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.03%)</title><rect x="93.1628%" y="1717" width="0.0279%" height="15" fill="rgb(220,151,1)" fg:x="100027" fg:w="30"/><text x="93.4128%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (30 samples, 0.03%)</title><rect x="93.1628%" y="1701" width="0.0279%" height="15" fill="rgb(211,157,11)" fg:x="100027" fg:w="30"/><text x="93.4128%" y="1711.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.01%)</title><rect x="93.1786%" y="1685" width="0.0121%" height="15" fill="rgb(239,46,30)" fg:x="100044" fg:w="13"/><text x="93.4286%" y="1695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.01%)</title><rect x="93.1786%" y="1669" width="0.0121%" height="15" fill="rgb(236,144,43)" fg:x="100044" fg:w="13"/><text x="93.4286%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="93.1786%" y="1653" width="0.0121%" height="15" fill="rgb(206,71,45)" fg:x="100044" fg:w="13"/><text x="93.4286%" y="1663.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_write_set (56 samples, 0.05%)</title><rect x="93.1404%" y="1797" width="0.0522%" height="15" fill="rgb(240,85,31)" fg:x="100003" fg:w="56"/><text x="93.3904%" y="1807.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (15 samples, 0.01%)</title><rect x="93.2214%" y="1461" width="0.0140%" height="15" fill="rgb(221,43,52)" fg:x="100090" fg:w="15"/><text x="93.4714%" y="1471.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (50 samples, 0.05%)</title><rect x="93.2093%" y="1477" width="0.0466%" height="15" fill="rgb(243,106,22)" fg:x="100077" fg:w="50"/><text x="93.4593%" y="1487.50"></text></g><g><title>sha2::sha512::x86::sha_round (22 samples, 0.02%)</title><rect x="93.2354%" y="1461" width="0.0205%" height="15" fill="rgb(209,138,38)" fg:x="100105" fg:w="22"/><text x="93.4854%" y="1471.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (66 samples, 0.06%)</title><rect x="93.2047%" y="1621" width="0.0615%" height="15" fill="rgb(216,63,40)" fg:x="100072" fg:w="66"/><text x="93.4547%" y="1631.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (66 samples, 0.06%)</title><rect x="93.2047%" y="1605" width="0.0615%" height="15" fill="rgb(206,115,21)" fg:x="100072" fg:w="66"/><text x="93.4547%" y="1615.50"></text></g><g><title>sha2::sha512::Engine512::finish (66 samples, 0.06%)</title><rect x="93.2047%" y="1589" width="0.0615%" height="15" fill="rgb(235,53,44)" fg:x="100072" fg:w="66"/><text x="93.4547%" y="1599.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (66 samples, 0.06%)</title><rect x="93.2047%" y="1573" width="0.0615%" height="15" fill="rgb(244,160,14)" fg:x="100072" fg:w="66"/><text x="93.4547%" y="1583.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (64 samples, 0.06%)</title><rect x="93.2065%" y="1557" width="0.0596%" height="15" fill="rgb(223,16,19)" fg:x="100074" fg:w="64"/><text x="93.4565%" y="1567.50"></text></g><g><title>sha2::sha512::compress512 (64 samples, 0.06%)</title><rect x="93.2065%" y="1541" width="0.0596%" height="15" fill="rgb(242,63,42)" fg:x="100074" fg:w="64"/><text x="93.4565%" y="1551.50"></text></g><g><title>sha2::sha512::x86::compress (64 samples, 0.06%)</title><rect x="93.2065%" y="1525" width="0.0596%" height="15" fill="rgb(209,66,49)" fg:x="100074" fg:w="64"/><text x="93.4565%" y="1535.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (64 samples, 0.06%)</title><rect x="93.2065%" y="1509" width="0.0596%" height="15" fill="rgb(207,126,46)" fg:x="100074" fg:w="64"/><text x="93.4565%" y="1519.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (63 samples, 0.06%)</title><rect x="93.2075%" y="1493" width="0.0587%" height="15" fill="rgb(218,160,41)" fg:x="100075" fg:w="63"/><text x="93.4575%" y="1503.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (11 samples, 0.01%)</title><rect x="93.2559%" y="1477" width="0.0102%" height="15" fill="rgb(234,125,46)" fg:x="100127" fg:w="11"/><text x="93.5059%" y="1487.50"></text></g><g><title>sha2::sha512::x86::sha_round (11 samples, 0.01%)</title><rect x="93.2559%" y="1461" width="0.0102%" height="15" fill="rgb(205,66,36)" fg:x="100127" fg:w="11"/><text x="93.5059%" y="1471.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (67 samples, 0.06%)</title><rect x="93.2047%" y="1653" width="0.0624%" height="15" fill="rgb(220,135,16)" fg:x="100072" fg:w="67"/><text x="93.4547%" y="1663.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (67 samples, 0.06%)</title><rect x="93.2047%" y="1637" width="0.0624%" height="15" fill="rgb(214,217,54)" fg:x="100072" fg:w="67"/><text x="93.4547%" y="1647.50"></text></g><g><title>[libc.so.6] (94 samples, 0.09%)</title><rect x="93.2969%" y="1589" width="0.0875%" height="15" fill="rgb(206,30,9)" fg:x="100171" fg:w="94"/><text x="93.5469%" y="1599.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (50 samples, 0.05%)</title><rect x="93.4692%" y="1573" width="0.0466%" height="15" fill="rgb(207,196,5)" fg:x="100356" fg:w="50"/><text x="93.7192%" y="1583.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (42 samples, 0.04%)</title><rect x="93.4766%" y="1557" width="0.0391%" height="15" fill="rgb(227,116,12)" fg:x="100364" fg:w="42"/><text x="93.7266%" y="1567.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (699 samples, 0.65%)</title><rect x="93.5158%" y="1573" width="0.6510%" height="15" fill="rgb(235,227,13)" fg:x="100406" fg:w="699"/><text x="93.7658%" y="1583.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (134 samples, 0.12%)</title><rect x="94.0420%" y="1557" width="0.1248%" height="15" fill="rgb(238,212,29)" fg:x="100971" fg:w="134"/><text x="94.2920%" y="1567.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (161 samples, 0.15%)</title><rect x="94.1668%" y="1573" width="0.1500%" height="15" fill="rgb(230,152,17)" fg:x="101105" fg:w="161"/><text x="94.4168%" y="1583.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (50 samples, 0.05%)</title><rect x="94.2702%" y="1557" width="0.0466%" height="15" fill="rgb(220,197,1)" fg:x="101216" fg:w="50"/><text x="94.5202%" y="1567.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (1,002 samples, 0.93%)</title><rect x="93.3844%" y="1589" width="0.9332%" height="15" fill="rgb(229,227,40)" fg:x="100265" fg:w="1002"/><text x="93.6344%" y="1599.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1,044 samples, 0.97%)</title><rect x="94.3177%" y="1589" width="0.9724%" height="15" fill="rgb(227,179,16)" fg:x="101267" fg:w="1044"/><text x="94.5677%" y="1599.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1,037 samples, 0.97%)</title><rect x="94.3242%" y="1573" width="0.9658%" height="15" fill="rgb(246,116,44)" fg:x="101274" fg:w="1037"/><text x="94.5742%" y="1583.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (180 samples, 0.17%)</title><rect x="95.1224%" y="1557" width="0.1676%" height="15" fill="rgb(205,191,4)" fg:x="102131" fg:w="180"/><text x="95.3724%" y="1567.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (16 samples, 0.01%)</title><rect x="95.2956%" y="1573" width="0.0149%" height="15" fill="rgb(245,69,19)" fg:x="102317" fg:w="16"/><text x="95.5456%" y="1583.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (16 samples, 0.01%)</title><rect x="95.2956%" y="1557" width="0.0149%" height="15" fill="rgb(230,29,26)" fg:x="102317" fg:w="16"/><text x="95.5456%" y="1567.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (48 samples, 0.04%)</title><rect x="95.3105%" y="1573" width="0.0447%" height="15" fill="rgb(239,192,26)" fg:x="102333" fg:w="48"/><text x="95.5605%" y="1583.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (48 samples, 0.04%)</title><rect x="95.3105%" y="1557" width="0.0447%" height="15" fill="rgb(219,92,16)" fg:x="102333" fg:w="48"/><text x="95.5605%" y="1567.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (11 samples, 0.01%)</title><rect x="95.3617%" y="1557" width="0.0102%" height="15" fill="rgb(246,147,43)" fg:x="102388" fg:w="11"/><text x="95.6117%" y="1567.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (79 samples, 0.07%)</title><rect x="95.3552%" y="1573" width="0.0736%" height="15" fill="rgb(222,147,11)" fg:x="102381" fg:w="79"/><text x="95.6052%" y="1583.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (55 samples, 0.05%)</title><rect x="95.3776%" y="1557" width="0.0512%" height="15" fill="rgb(243,71,8)" fg:x="102405" fg:w="55"/><text x="95.6276%" y="1567.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (55 samples, 0.05%)</title><rect x="95.3776%" y="1541" width="0.0512%" height="15" fill="rgb(250,36,12)" fg:x="102405" fg:w="55"/><text x="95.6276%" y="1551.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (150 samples, 0.14%)</title><rect x="95.2900%" y="1589" width="0.1397%" height="15" fill="rgb(207,168,14)" fg:x="102311" fg:w="150"/><text x="95.5400%" y="1599.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (16 samples, 0.01%)</title><rect x="95.4297%" y="1589" width="0.0149%" height="15" fill="rgb(254,210,51)" fg:x="102461" fg:w="16"/><text x="95.6797%" y="1599.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as core::ops::arith::Neg&gt;::neg (152 samples, 0.14%)</title><rect x="95.5024%" y="1557" width="0.1416%" height="15" fill="rgb(236,152,38)" fg:x="102539" fg:w="152"/><text x="95.7524%" y="1567.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (93 samples, 0.09%)</title><rect x="95.5573%" y="1541" width="0.0866%" height="15" fill="rgb(240,164,36)" fg:x="102598" fg:w="93"/><text x="95.8073%" y="1551.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (73 samples, 0.07%)</title><rect x="95.5760%" y="1525" width="0.0680%" height="15" fill="rgb(210,171,36)" fg:x="102618" fg:w="73"/><text x="95.8260%" y="1535.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (16 samples, 0.01%)</title><rect x="95.6291%" y="1509" width="0.0149%" height="15" fill="rgb(254,156,34)" fg:x="102675" fg:w="16"/><text x="95.8791%" y="1519.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (194 samples, 0.18%)</title><rect x="95.5024%" y="1573" width="0.1807%" height="15" fill="rgb(216,204,23)" fg:x="102539" fg:w="194"/><text x="95.7524%" y="1583.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (42 samples, 0.04%)</title><rect x="95.6440%" y="1557" width="0.0391%" height="15" fill="rgb(230,75,38)" fg:x="102691" fg:w="42"/><text x="95.8940%" y="1567.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (42 samples, 0.04%)</title><rect x="95.6440%" y="1541" width="0.0391%" height="15" fill="rgb(248,197,25)" fg:x="102691" fg:w="42"/><text x="95.8940%" y="1551.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (42 samples, 0.04%)</title><rect x="95.6440%" y="1525" width="0.0391%" height="15" fill="rgb(234,121,26)" fg:x="102691" fg:w="42"/><text x="95.8940%" y="1535.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (480 samples, 0.45%)</title><rect x="95.6905%" y="1573" width="0.4471%" height="15" fill="rgb(220,41,36)" fg:x="102741" fg:w="480"/><text x="95.9405%" y="1583.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (436 samples, 0.41%)</title><rect x="95.7315%" y="1557" width="0.4061%" height="15" fill="rgb(227,33,32)" fg:x="102785" fg:w="436"/><text x="95.9815%" y="1567.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (436 samples, 0.41%)</title><rect x="95.7315%" y="1541" width="0.4061%" height="15" fill="rgb(208,214,54)" fg:x="102785" fg:w="436"/><text x="95.9815%" y="1551.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (3,158 samples, 2.94%)</title><rect x="93.2838%" y="1637" width="2.9413%" height="15" fill="rgb(205,37,38)" fg:x="100157" fg:w="3158"/><text x="93.5338%" y="1647.50">cu..</text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (3,157 samples, 2.94%)</title><rect x="93.2848%" y="1621" width="2.9404%" height="15" fill="rgb(252,2,0)" fg:x="100158" fg:w="3157"/><text x="93.5348%" y="1631.50">&lt;&amp;..</text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (3,157 samples, 2.94%)</title><rect x="93.2848%" y="1605" width="2.9404%" height="15" fill="rgb(212,171,10)" fg:x="100158" fg:w="3157"/><text x="93.5348%" y="1615.50">cu..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (838 samples, 0.78%)</title><rect x="95.4446%" y="1589" width="0.7805%" height="15" fill="rgb(239,35,46)" fg:x="102477" fg:w="838"/><text x="95.6946%" y="1599.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (85 samples, 0.08%)</title><rect x="96.1460%" y="1573" width="0.0792%" height="15" fill="rgb(209,34,42)" fg:x="103230" fg:w="85"/><text x="96.3960%" y="1583.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (85 samples, 0.08%)</title><rect x="96.1460%" y="1557" width="0.0792%" height="15" fill="rgb(237,9,4)" fg:x="103230" fg:w="85"/><text x="96.3960%" y="1567.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (85 samples, 0.08%)</title><rect x="96.1460%" y="1541" width="0.0792%" height="15" fill="rgb(254,55,38)" fg:x="103230" fg:w="85"/><text x="96.3960%" y="1551.50"></text></g><g><title>subtle::black_box (71 samples, 0.07%)</title><rect x="96.1590%" y="1525" width="0.0661%" height="15" fill="rgb(222,95,29)" fg:x="103244" fg:w="71"/><text x="96.4090%" y="1535.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (21 samples, 0.02%)</title><rect x="96.2410%" y="1605" width="0.0196%" height="15" fill="rgb(241,218,37)" fg:x="103332" fg:w="21"/><text x="96.4910%" y="1615.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (40 samples, 0.04%)</title><rect x="96.2624%" y="1589" width="0.0373%" height="15" fill="rgb(225,89,28)" fg:x="103355" fg:w="40"/><text x="96.5124%" y="1599.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (792 samples, 0.74%)</title><rect x="96.2996%" y="1589" width="0.7376%" height="15" fill="rgb(231,17,25)" fg:x="103395" fg:w="792"/><text x="96.5496%" y="1599.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (92 samples, 0.09%)</title><rect x="96.9516%" y="1573" width="0.0857%" height="15" fill="rgb(206,216,48)" fg:x="104095" fg:w="92"/><text x="97.2016%" y="1583.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (872 samples, 0.81%)</title><rect x="96.2382%" y="1621" width="0.8122%" height="15" fill="rgb(247,190,28)" fg:x="103329" fg:w="872"/><text x="96.4882%" y="1631.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (848 samples, 0.79%)</title><rect x="96.2605%" y="1605" width="0.7898%" height="15" fill="rgb(216,196,12)" fg:x="103353" fg:w="848"/><text x="96.5105%" y="1615.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (14 samples, 0.01%)</title><rect x="97.0373%" y="1589" width="0.0130%" height="15" fill="rgb(232,114,19)" fg:x="104187" fg:w="14"/><text x="97.2873%" y="1599.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (13 samples, 0.01%)</title><rect x="97.0382%" y="1573" width="0.0121%" height="15" fill="rgb(240,60,14)" fg:x="104188" fg:w="13"/><text x="97.2882%" y="1583.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (888 samples, 0.83%)</title><rect x="96.2251%" y="1637" width="0.8271%" height="15" fill="rgb(250,108,9)" fg:x="103315" fg:w="888"/><text x="96.4751%" y="1647.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4,133 samples, 3.85%)</title><rect x="93.2037%" y="1685" width="3.8494%" height="15" fill="rgb(227,228,21)" fg:x="100071" fg:w="4133"/><text x="93.4537%" y="1695.50">&lt;T a..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (4,133 samples, 3.85%)</title><rect x="93.2037%" y="1669" width="3.8494%" height="15" fill="rgb(254,16,52)" fg:x="100071" fg:w="4133"/><text x="93.4537%" y="1679.50">&lt;ed2..</text></g><g><title>ed25519_dalek::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (4,056 samples, 3.78%)</title><rect x="93.2755%" y="1653" width="3.7777%" height="15" fill="rgb(222,58,2)" fg:x="100148" fg:w="4056"/><text x="93.5255%" y="1663.50">ed25..</text></g><g><title>aptos_crypto::traits::PrivateKey::public_key (4,142 samples, 3.86%)</title><rect x="93.2010%" y="1733" width="3.8578%" height="15" fill="rgb(253,68,14)" fg:x="100068" fg:w="4142"/><text x="93.4510%" y="1743.50">apto..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4,142 samples, 3.86%)</title><rect x="93.2010%" y="1717" width="3.8578%" height="15" fill="rgb(226,96,17)" fg:x="100068" fg:w="4142"/><text x="93.4510%" y="1727.50">&lt;T a..</text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::convert::From&lt;&amp;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey&gt;&gt;::from (4,142 samples, 3.86%)</title><rect x="93.2010%" y="1701" width="3.8578%" height="15" fill="rgb(227,199,2)" fg:x="100068" fg:w="4142"/><text x="93.4510%" y="1711.50">&lt;apt..</text></g><g><title>aptos_keygen::KeyGen::generate_ed25519_keypair (4,150 samples, 3.87%)</title><rect x="93.1991%" y="1749" width="3.8652%" height="15" fill="rgb(228,227,48)" fg:x="100066" fg:w="4150"/><text x="93.4491%" y="1759.50">apto..</text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (95 samples, 0.09%)</title><rect x="97.0680%" y="1653" width="0.0885%" height="15" fill="rgb(249,183,0)" fg:x="104220" fg:w="95"/><text x="97.3180%" y="1663.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (95 samples, 0.09%)</title><rect x="97.0680%" y="1637" width="0.0885%" height="15" fill="rgb(250,89,38)" fg:x="104220" fg:w="95"/><text x="97.3180%" y="1647.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (95 samples, 0.09%)</title><rect x="97.0680%" y="1621" width="0.0885%" height="15" fill="rgb(240,227,8)" fg:x="104220" fg:w="95"/><text x="97.3180%" y="1631.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (93 samples, 0.09%)</title><rect x="97.0699%" y="1605" width="0.0866%" height="15" fill="rgb(242,197,35)" fg:x="104222" fg:w="93"/><text x="97.3199%" y="1615.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (92 samples, 0.09%)</title><rect x="97.0708%" y="1589" width="0.0857%" height="15" fill="rgb(224,37,41)" fg:x="104223" fg:w="92"/><text x="97.3208%" y="1599.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (92 samples, 0.09%)</title><rect x="97.0708%" y="1573" width="0.0857%" height="15" fill="rgb(236,127,7)" fg:x="104223" fg:w="92"/><text x="97.3208%" y="1583.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (92 samples, 0.09%)</title><rect x="97.0708%" y="1557" width="0.0857%" height="15" fill="rgb(230,62,52)" fg:x="104223" fg:w="92"/><text x="97.3208%" y="1567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.02%)</title><rect x="97.1407%" y="1541" width="0.0158%" height="15" fill="rgb(235,114,23)" fg:x="104298" fg:w="17"/><text x="97.3907%" y="1551.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (100 samples, 0.09%)</title><rect x="97.0680%" y="1669" width="0.0931%" height="15" fill="rgb(211,55,40)" fg:x="104220" fg:w="100"/><text x="97.3180%" y="1679.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (103 samples, 0.10%)</title><rect x="97.0671%" y="1701" width="0.0959%" height="15" fill="rgb(228,123,1)" fg:x="104219" fg:w="103"/><text x="97.3171%" y="1711.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (102 samples, 0.10%)</title><rect x="97.0680%" y="1685" width="0.0950%" height="15" fill="rgb(244,208,8)" fg:x="104220" fg:w="102"/><text x="97.3180%" y="1695.50"></text></g><g><title>aptos_language_e2e_tests::account::Account::new_from_seed (4,270 samples, 3.98%)</title><rect x="93.1972%" y="1765" width="3.9770%" height="15" fill="rgb(237,118,14)" fg:x="100064" fg:w="4270"/><text x="93.4472%" y="1775.50">apto..</text></g><g><title>aptos_language_e2e_tests::account::Account::with_keypair (118 samples, 0.11%)</title><rect x="97.0643%" y="1749" width="0.1099%" height="15" fill="rgb(219,170,13)" fg:x="104216" fg:w="118"/><text x="97.3143%" y="1759.50"></text></g><g><title>aptos_types::account_address::from_public_key (118 samples, 0.11%)</title><rect x="97.0643%" y="1733" width="0.1099%" height="15" fill="rgb(212,39,43)" fg:x="104216" fg:w="118"/><text x="97.3143%" y="1743.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::ed25519 (118 samples, 0.11%)</title><rect x="97.0643%" y="1717" width="0.1099%" height="15" fill="rgb(244,191,2)" fg:x="104216" fg:w="118"/><text x="97.3143%" y="1727.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::ed25519 (12 samples, 0.01%)</title><rect x="97.1630%" y="1701" width="0.0112%" height="15" fill="rgb(219,201,46)" fg:x="104322" fg:w="12"/><text x="97.4130%" y="1711.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::new_from_seed (4,289 samples, 3.99%)</title><rect x="93.1972%" y="1781" width="3.9947%" height="15" fill="rgb(218,82,7)" fg:x="100064" fg:w="4289"/><text x="93.4472%" y="1791.50">apto..</text></g><g><title>aptos_language_e2e_tests::account::AccountData::with_account (19 samples, 0.02%)</title><rect x="97.1742%" y="1765" width="0.0177%" height="15" fill="rgb(208,192,8)" fg:x="104334" fg:w="19"/><text x="97.4242%" y="1775.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::with_account_and_event_counts (17 samples, 0.02%)</title><rect x="97.1761%" y="1749" width="0.0158%" height="15" fill="rgb(244,54,32)" fg:x="104336" fg:w="17"/><text x="97.4261%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="97.2012%" y="1429" width="0.0242%" height="15" fill="rgb(240,43,52)" fg:x="104363" fg:w="26"/><text x="97.4512%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="97.2012%" y="1413" width="0.0242%" height="15" fill="rgb(233,134,29)" fg:x="104363" fg:w="26"/><text x="97.4512%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.02%)</title><rect x="97.2068%" y="1397" width="0.0186%" height="15" fill="rgb(236,128,10)" fg:x="104369" fg:w="20"/><text x="97.4568%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.02%)</title><rect x="97.2068%" y="1381" width="0.0186%" height="15" fill="rgb(207,46,54)" fg:x="104369" fg:w="20"/><text x="97.4568%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.02%)</title><rect x="97.2068%" y="1365" width="0.0186%" height="15" fill="rgb(248,140,35)" fg:x="104369" fg:w="20"/><text x="97.4568%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.02%)</title><rect x="97.2068%" y="1349" width="0.0186%" height="15" fill="rgb(241,103,35)" fg:x="104369" fg:w="20"/><text x="97.4568%" y="1359.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.02%)</title><rect x="97.2068%" y="1333" width="0.0186%" height="15" fill="rgb(223,19,48)" fg:x="104369" fg:w="20"/><text x="97.4568%" y="1343.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.02%)</title><rect x="97.2068%" y="1317" width="0.0186%" height="15" fill="rgb(238,177,46)" fg:x="104369" fg:w="20"/><text x="97.4568%" y="1327.50"></text></g><g><title>realloc (17 samples, 0.02%)</title><rect x="97.2096%" y="1301" width="0.0158%" height="15" fill="rgb(213,102,15)" fg:x="104372" fg:w="17"/><text x="97.4596%" y="1311.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="97.2133%" y="1285" width="0.0121%" height="15" fill="rgb(254,135,52)" fg:x="104376" fg:w="13"/><text x="97.4633%" y="1295.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (30 samples, 0.03%)</title><rect x="97.1984%" y="1541" width="0.0279%" height="15" fill="rgb(240,59,6)" fg:x="104360" fg:w="30"/><text x="97.4484%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (30 samples, 0.03%)</title><rect x="97.1984%" y="1525" width="0.0279%" height="15" fill="rgb(207,226,5)" fg:x="104360" fg:w="30"/><text x="97.4484%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (30 samples, 0.03%)</title><rect x="97.1984%" y="1509" width="0.0279%" height="15" fill="rgb(208,167,17)" fg:x="104360" fg:w="30"/><text x="97.4484%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (30 samples, 0.03%)</title><rect x="97.1984%" y="1493" width="0.0279%" height="15" fill="rgb(254,94,10)" fg:x="104360" fg:w="30"/><text x="97.4484%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.03%)</title><rect x="97.1984%" y="1477" width="0.0279%" height="15" fill="rgb(229,33,11)" fg:x="104360" fg:w="30"/><text x="97.4484%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.03%)</title><rect x="97.1984%" y="1461" width="0.0279%" height="15" fill="rgb(249,145,48)" fg:x="104360" fg:w="30"/><text x="97.4484%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.03%)</title><rect x="97.1984%" y="1445" width="0.0279%" height="15" fill="rgb(253,68,54)" fg:x="104360" fg:w="30"/><text x="97.4484%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (31 samples, 0.03%)</title><rect x="97.1984%" y="1589" width="0.0289%" height="15" fill="rgb(223,27,42)" fg:x="104360" fg:w="31"/><text x="97.4484%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 0.03%)</title><rect x="97.1984%" y="1573" width="0.0289%" height="15" fill="rgb(235,123,13)" fg:x="104360" fg:w="31"/><text x="97.4484%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (31 samples, 0.03%)</title><rect x="97.1984%" y="1557" width="0.0289%" height="15" fill="rgb(244,154,7)" fg:x="104360" fg:w="31"/><text x="97.4484%" y="1567.50"></text></g><g><title>bcs::ser::to_bytes (35 samples, 0.03%)</title><rect x="97.1966%" y="1669" width="0.0326%" height="15" fill="rgb(214,30,25)" fg:x="104358" fg:w="35"/><text x="97.4466%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (34 samples, 0.03%)</title><rect x="97.1975%" y="1653" width="0.0317%" height="15" fill="rgb(252,189,13)" fg:x="104359" fg:w="34"/><text x="97.4475%" y="1663.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (34 samples, 0.03%)</title><rect x="97.1975%" y="1637" width="0.0317%" height="15" fill="rgb(234,27,40)" fg:x="104359" fg:w="34"/><text x="97.4475%" y="1647.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (33 samples, 0.03%)</title><rect x="97.1984%" y="1621" width="0.0307%" height="15" fill="rgb(252,199,25)" fg:x="104360" fg:w="33"/><text x="97.4484%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 0.03%)</title><rect x="97.1984%" y="1605" width="0.0307%" height="15" fill="rgb(234,207,20)" fg:x="104360" fg:w="33"/><text x="97.4484%" y="1615.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (40 samples, 0.04%)</title><rect x="97.1938%" y="1701" width="0.0373%" height="15" fill="rgb(244,220,10)" fg:x="104355" fg:w="40"/><text x="97.4438%" y="1711.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (37 samples, 0.03%)</title><rect x="97.1966%" y="1685" width="0.0345%" height="15" fill="rgb(247,68,23)" fg:x="104358" fg:w="37"/><text x="97.4466%" y="1695.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::make_account_access_path (43 samples, 0.04%)</title><rect x="97.1938%" y="1733" width="0.0400%" height="15" fill="rgb(254,61,4)" fg:x="104355" fg:w="43"/><text x="97.4438%" y="1743.50"></text></g><g><title>aptos_language_e2e_tests::account::Account::make_account_access_path (43 samples, 0.04%)</title><rect x="97.1938%" y="1717" width="0.0400%" height="15" fill="rgb(245,208,35)" fg:x="104355" fg:w="43"/><text x="97.4438%" y="1727.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (30 samples, 0.03%)</title><rect x="97.2366%" y="1589" width="0.0279%" height="15" fill="rgb(235,90,11)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 0.03%)</title><rect x="97.2366%" y="1573" width="0.0279%" height="15" fill="rgb(239,139,43)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (30 samples, 0.03%)</title><rect x="97.2366%" y="1557" width="0.0279%" height="15" fill="rgb(209,187,9)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (30 samples, 0.03%)</title><rect x="97.2366%" y="1541" width="0.0279%" height="15" fill="rgb(241,30,6)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (30 samples, 0.03%)</title><rect x="97.2366%" y="1525" width="0.0279%" height="15" fill="rgb(216,104,1)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (30 samples, 0.03%)</title><rect x="97.2366%" y="1509" width="0.0279%" height="15" fill="rgb(238,55,39)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (30 samples, 0.03%)</title><rect x="97.2366%" y="1493" width="0.0279%" height="15" fill="rgb(226,151,41)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.03%)</title><rect x="97.2366%" y="1477" width="0.0279%" height="15" fill="rgb(228,73,40)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.03%)</title><rect x="97.2366%" y="1461" width="0.0279%" height="15" fill="rgb(215,81,0)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.03%)</title><rect x="97.2366%" y="1445" width="0.0279%" height="15" fill="rgb(209,52,39)" fg:x="104401" fg:w="30"/><text x="97.4866%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="97.2394%" y="1429" width="0.0251%" height="15" fill="rgb(221,127,5)" fg:x="104404" fg:w="27"/><text x="97.4894%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="97.2394%" y="1413" width="0.0251%" height="15" fill="rgb(213,215,6)" fg:x="104404" fg:w="27"/><text x="97.4894%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect x="97.2394%" y="1397" width="0.0251%" height="15" fill="rgb(214,118,13)" fg:x="104404" fg:w="27"/><text x="97.4894%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.03%)</title><rect x="97.2394%" y="1381" width="0.0251%" height="15" fill="rgb(207,205,41)" fg:x="104404" fg:w="27"/><text x="97.4894%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="97.2413%" y="1365" width="0.0233%" height="15" fill="rgb(218,208,45)" fg:x="104406" fg:w="25"/><text x="97.4913%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.02%)</title><rect x="97.2441%" y="1349" width="0.0205%" height="15" fill="rgb(244,81,54)" fg:x="104409" fg:w="22"/><text x="97.4941%" y="1359.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.02%)</title><rect x="97.2441%" y="1333" width="0.0205%" height="15" fill="rgb(244,175,1)" fg:x="104409" fg:w="22"/><text x="97.4941%" y="1343.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.02%)</title><rect x="97.2441%" y="1317" width="0.0205%" height="15" fill="rgb(232,128,28)" fg:x="104409" fg:w="22"/><text x="97.4941%" y="1327.50"></text></g><g><title>realloc (21 samples, 0.02%)</title><rect x="97.2450%" y="1301" width="0.0196%" height="15" fill="rgb(234,83,13)" fg:x="104410" fg:w="21"/><text x="97.4950%" y="1311.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="97.2524%" y="1285" width="0.0121%" height="15" fill="rgb(233,222,35)" fg:x="104418" fg:w="13"/><text x="97.5024%" y="1295.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="97.2534%" y="1269" width="0.0112%" height="15" fill="rgb(244,204,21)" fg:x="104419" fg:w="12"/><text x="97.5034%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (11 samples, 0.01%)</title><rect x="97.2683%" y="1301" width="0.0102%" height="15" fill="rgb(225,121,40)" fg:x="104435" fg:w="11"/><text x="97.5183%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (11 samples, 0.01%)</title><rect x="97.2683%" y="1285" width="0.0102%" height="15" fill="rgb(231,89,18)" fg:x="104435" fg:w="11"/><text x="97.5183%" y="1295.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (11 samples, 0.01%)</title><rect x="97.2683%" y="1269" width="0.0102%" height="15" fill="rgb(205,41,50)" fg:x="104435" fg:w="11"/><text x="97.5183%" y="1279.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="97.2683%" y="1253" width="0.0102%" height="15" fill="rgb(254,25,22)" fg:x="104435" fg:w="11"/><text x="97.5183%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="97.2683%" y="1237" width="0.0102%" height="15" fill="rgb(208,44,21)" fg:x="104435" fg:w="11"/><text x="97.5183%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="97.2683%" y="1221" width="0.0102%" height="15" fill="rgb(237,59,53)" fg:x="104435" fg:w="11"/><text x="97.5183%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="97.2683%" y="1205" width="0.0102%" height="15" fill="rgb(233,24,36)" fg:x="104435" fg:w="11"/><text x="97.5183%" y="1215.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="97.2683%" y="1349" width="0.0121%" height="15" fill="rgb(216,92,41)" fg:x="104435" fg:w="13"/><text x="97.5183%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.01%)</title><rect x="97.2683%" y="1333" width="0.0121%" height="15" fill="rgb(225,158,49)" fg:x="104435" fg:w="13"/><text x="97.5183%" y="1343.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (13 samples, 0.01%)</title><rect x="97.2683%" y="1317" width="0.0121%" height="15" fill="rgb(244,11,16)" fg:x="104435" fg:w="13"/><text x="97.5183%" y="1327.50"></text></g><g><title>bcs::ser::to_bytes (51 samples, 0.05%)</title><rect x="97.2347%" y="1669" width="0.0475%" height="15" fill="rgb(208,215,38)" fg:x="104399" fg:w="51"/><text x="97.4847%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (51 samples, 0.05%)</title><rect x="97.2347%" y="1653" width="0.0475%" height="15" fill="rgb(250,69,53)" fg:x="104399" fg:w="51"/><text x="97.4847%" y="1663.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (51 samples, 0.05%)</title><rect x="97.2347%" y="1637" width="0.0475%" height="15" fill="rgb(240,187,52)" fg:x="104399" fg:w="51"/><text x="97.4847%" y="1647.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (51 samples, 0.05%)</title><rect x="97.2347%" y="1621" width="0.0475%" height="15" fill="rgb(235,22,25)" fg:x="104399" fg:w="51"/><text x="97.4847%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (49 samples, 0.05%)</title><rect x="97.2366%" y="1605" width="0.0456%" height="15" fill="rgb(213,173,22)" fg:x="104401" fg:w="49"/><text x="97.4866%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (19 samples, 0.02%)</title><rect x="97.2645%" y="1589" width="0.0177%" height="15" fill="rgb(218,47,0)" fg:x="104431" fg:w="19"/><text x="97.5145%" y="1599.50"></text></g><g><title>serde::ser::Serializer::collect_seq (19 samples, 0.02%)</title><rect x="97.2645%" y="1573" width="0.0177%" height="15" fill="rgb(254,157,11)" fg:x="104431" fg:w="19"/><text x="97.5145%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (18 samples, 0.02%)</title><rect x="97.2655%" y="1557" width="0.0168%" height="15" fill="rgb(233,154,6)" fg:x="104432" fg:w="18"/><text x="97.5155%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="97.2655%" y="1541" width="0.0168%" height="15" fill="rgb(233,207,47)" fg:x="104432" fg:w="18"/><text x="97.5155%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (17 samples, 0.02%)</title><rect x="97.2664%" y="1525" width="0.0158%" height="15" fill="rgb(249,128,18)" fg:x="104433" fg:w="17"/><text x="97.5164%" y="1535.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (17 samples, 0.02%)</title><rect x="97.2664%" y="1509" width="0.0158%" height="15" fill="rgb(211,27,42)" fg:x="104433" fg:w="17"/><text x="97.5164%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (17 samples, 0.02%)</title><rect x="97.2664%" y="1493" width="0.0158%" height="15" fill="rgb(240,163,26)" fg:x="104433" fg:w="17"/><text x="97.5164%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 0.02%)</title><rect x="97.2664%" y="1477" width="0.0158%" height="15" fill="rgb(232,118,46)" fg:x="104433" fg:w="17"/><text x="97.5164%" y="1487.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (17 samples, 0.02%)</title><rect x="97.2664%" y="1461" width="0.0158%" height="15" fill="rgb(238,158,34)" fg:x="104433" fg:w="17"/><text x="97.5164%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (15 samples, 0.01%)</title><rect x="97.2683%" y="1445" width="0.0140%" height="15" fill="rgb(254,99,45)" fg:x="104435" fg:w="15"/><text x="97.5183%" y="1455.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (15 samples, 0.01%)</title><rect x="97.2683%" y="1429" width="0.0140%" height="15" fill="rgb(247,205,20)" fg:x="104435" fg:w="15"/><text x="97.5183%" y="1439.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_serialize (15 samples, 0.01%)</title><rect x="97.2683%" y="1413" width="0.0140%" height="15" fill="rgb(240,20,41)" fg:x="104435" fg:w="15"/><text x="97.5183%" y="1423.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (15 samples, 0.01%)</title><rect x="97.2683%" y="1397" width="0.0140%" height="15" fill="rgb(231,22,43)" fg:x="104435" fg:w="15"/><text x="97.5183%" y="1407.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (15 samples, 0.01%)</title><rect x="97.2683%" y="1381" width="0.0140%" height="15" fill="rgb(207,86,33)" fg:x="104435" fg:w="15"/><text x="97.5183%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 0.01%)</title><rect x="97.2683%" y="1365" width="0.0140%" height="15" fill="rgb(231,148,5)" fg:x="104435" fg:w="15"/><text x="97.5183%" y="1375.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (58 samples, 0.05%)</title><rect x="97.2338%" y="1701" width="0.0540%" height="15" fill="rgb(253,77,28)" fg:x="104398" fg:w="58"/><text x="97.4838%" y="1711.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (57 samples, 0.05%)</title><rect x="97.2347%" y="1685" width="0.0531%" height="15" fill="rgb(253,227,9)" fg:x="104399" fg:w="57"/><text x="97.4847%" y="1695.50"></text></g><g><title>&lt;aptos_types::account_config::resources::coin_store::CoinStoreResource as move_core_types::move_resource::MoveStructType&gt;::type_params (14 samples, 0.01%)</title><rect x="97.2888%" y="1685" width="0.0130%" height="15" fill="rgb(235,4,18)" fg:x="104457" fg:w="14"/><text x="97.5388%" y="1695.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::make_coin_store_access_path (77 samples, 0.07%)</title><rect x="97.2338%" y="1733" width="0.0717%" height="15" fill="rgb(205,206,45)" fg:x="104398" fg:w="77"/><text x="97.4838%" y="1743.50"></text></g><g><title>aptos_language_e2e_tests::account::Account::make_coin_store_access_path (77 samples, 0.07%)</title><rect x="97.2338%" y="1717" width="0.0717%" height="15" fill="rgb(252,34,0)" fg:x="104398" fg:w="77"/><text x="97.4838%" y="1727.50"></text></g><g><title>move_core_types::move_resource::MoveStructType::struct_tag (19 samples, 0.02%)</title><rect x="97.2878%" y="1701" width="0.0177%" height="15" fill="rgb(213,56,7)" fg:x="104456" fg:w="19"/><text x="97.5378%" y="1711.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (114 samples, 0.11%)</title><rect x="97.3120%" y="1653" width="0.1062%" height="15" fill="rgb(227,74,29)" fg:x="104482" fg:w="114"/><text x="97.5620%" y="1663.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (114 samples, 0.11%)</title><rect x="97.3120%" y="1637" width="0.1062%" height="15" fill="rgb(221,32,48)" fg:x="104482" fg:w="114"/><text x="97.5620%" y="1647.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (114 samples, 0.11%)</title><rect x="97.3120%" y="1621" width="0.1062%" height="15" fill="rgb(230,205,25)" fg:x="104482" fg:w="114"/><text x="97.5620%" y="1631.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (113 samples, 0.11%)</title><rect x="97.3130%" y="1605" width="0.1052%" height="15" fill="rgb(215,110,9)" fg:x="104483" fg:w="113"/><text x="97.5630%" y="1615.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (113 samples, 0.11%)</title><rect x="97.3130%" y="1589" width="0.1052%" height="15" fill="rgb(245,220,47)" fg:x="104483" fg:w="113"/><text x="97.5630%" y="1599.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (113 samples, 0.11%)</title><rect x="97.3130%" y="1573" width="0.1052%" height="15" fill="rgb(224,117,5)" fg:x="104483" fg:w="113"/><text x="97.5630%" y="1583.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (113 samples, 0.11%)</title><rect x="97.3130%" y="1557" width="0.1052%" height="15" fill="rgb(242,208,25)" fg:x="104483" fg:w="113"/><text x="97.5630%" y="1567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.02%)</title><rect x="97.3959%" y="1541" width="0.0224%" height="15" fill="rgb(226,12,37)" fg:x="104572" fg:w="24"/><text x="97.6459%" y="1551.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (116 samples, 0.11%)</title><rect x="97.3120%" y="1669" width="0.1080%" height="15" fill="rgb(224,221,22)" fg:x="104482" fg:w="116"/><text x="97.5620%" y="1679.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (122 samples, 0.11%)</title><rect x="97.3102%" y="1701" width="0.1136%" height="15" fill="rgb(239,38,44)" fg:x="104480" fg:w="122"/><text x="97.5602%" y="1711.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (120 samples, 0.11%)</title><rect x="97.3120%" y="1685" width="0.1118%" height="15" fill="rgb(218,25,46)" fg:x="104482" fg:w="120"/><text x="97.5620%" y="1695.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::ed25519 (134 samples, 0.12%)</title><rect x="97.3102%" y="1717" width="0.1248%" height="15" fill="rgb(206,137,51)" fg:x="104480" fg:w="134"/><text x="97.5602%" y="1727.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::ed25519 (12 samples, 0.01%)</title><rect x="97.4238%" y="1701" width="0.0112%" height="15" fill="rgb(233,174,3)" fg:x="104602" fg:w="12"/><text x="97.6738%" y="1711.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (11 samples, 0.01%)</title><rect x="97.4247%" y="1685" width="0.0102%" height="15" fill="rgb(207,224,43)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="97.4247%" y="1669" width="0.0102%" height="15" fill="rgb(230,46,27)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.01%)</title><rect x="97.4247%" y="1653" width="0.0102%" height="15" fill="rgb(251,215,32)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="97.4247%" y="1637" width="0.0102%" height="15" fill="rgb(244,219,19)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="97.4247%" y="1621" width="0.0102%" height="15" fill="rgb(242,125,36)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.01%)</title><rect x="97.4247%" y="1605" width="0.0102%" height="15" fill="rgb(251,211,12)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1615.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.01%)</title><rect x="97.4247%" y="1589" width="0.0102%" height="15" fill="rgb(209,179,33)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1599.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.01%)</title><rect x="97.4247%" y="1573" width="0.0102%" height="15" fill="rgb(205,161,48)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1583.50"></text></g><g><title>realloc (11 samples, 0.01%)</title><rect x="97.4247%" y="1557" width="0.0102%" height="15" fill="rgb(241,139,8)" fg:x="104603" fg:w="11"/><text x="97.6747%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="97.4406%" y="1429" width="0.0168%" height="15" fill="rgb(246,159,53)" fg:x="104620" fg:w="18"/><text x="97.6906%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="97.4406%" y="1413" width="0.0168%" height="15" fill="rgb(212,62,27)" fg:x="104620" fg:w="18"/><text x="97.6906%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (20 samples, 0.02%)</title><rect x="97.4396%" y="1541" width="0.0186%" height="15" fill="rgb(216,168,18)" fg:x="104619" fg:w="20"/><text x="97.6896%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (20 samples, 0.02%)</title><rect x="97.4396%" y="1525" width="0.0186%" height="15" fill="rgb(228,136,50)" fg:x="104619" fg:w="20"/><text x="97.6896%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (20 samples, 0.02%)</title><rect x="97.4396%" y="1509" width="0.0186%" height="15" fill="rgb(237,19,45)" fg:x="104619" fg:w="20"/><text x="97.6896%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (20 samples, 0.02%)</title><rect x="97.4396%" y="1493" width="0.0186%" height="15" fill="rgb(249,150,28)" fg:x="104619" fg:w="20"/><text x="97.6896%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.02%)</title><rect x="97.4396%" y="1477" width="0.0186%" height="15" fill="rgb(236,179,39)" fg:x="104619" fg:w="20"/><text x="97.6896%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.02%)</title><rect x="97.4396%" y="1461" width="0.0186%" height="15" fill="rgb(250,113,27)" fg:x="104619" fg:w="20"/><text x="97.6896%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.02%)</title><rect x="97.4396%" y="1445" width="0.0186%" height="15" fill="rgb(223,13,14)" fg:x="104619" fg:w="20"/><text x="97.6896%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (25 samples, 0.02%)</title><rect x="97.4396%" y="1589" width="0.0233%" height="15" fill="rgb(226,68,24)" fg:x="104619" fg:w="25"/><text x="97.6896%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 0.02%)</title><rect x="97.4396%" y="1573" width="0.0233%" height="15" fill="rgb(239,40,50)" fg:x="104619" fg:w="25"/><text x="97.6896%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (25 samples, 0.02%)</title><rect x="97.4396%" y="1557" width="0.0233%" height="15" fill="rgb(209,187,0)" fg:x="104619" fg:w="25"/><text x="97.6896%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 0.03%)</title><rect x="97.4396%" y="1605" width="0.0270%" height="15" fill="rgb(240,61,8)" fg:x="104619" fg:w="29"/><text x="97.6896%" y="1615.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventHandle&gt;::serialize (34 samples, 0.03%)</title><rect x="97.4359%" y="1653" width="0.0317%" height="15" fill="rgb(236,137,5)" fg:x="104615" fg:w="34"/><text x="97.6859%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 0.03%)</title><rect x="97.4369%" y="1637" width="0.0307%" height="15" fill="rgb(247,214,21)" fg:x="104616" fg:w="33"/><text x="97.6869%" y="1647.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (33 samples, 0.03%)</title><rect x="97.4369%" y="1621" width="0.0307%" height="15" fill="rgb(244,115,25)" fg:x="104616" fg:w="33"/><text x="97.6869%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (16 samples, 0.01%)</title><rect x="97.4676%" y="1653" width="0.0149%" height="15" fill="rgb(230,58,38)" fg:x="104649" fg:w="16"/><text x="97.7176%" y="1663.50"></text></g><g><title>serde::ser::Serializer::collect_seq (16 samples, 0.01%)</title><rect x="97.4676%" y="1637" width="0.0149%" height="15" fill="rgb(206,122,6)" fg:x="104649" fg:w="16"/><text x="97.7176%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.01%)</title><rect x="97.4704%" y="1621" width="0.0121%" height="15" fill="rgb(217,135,53)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="97.4704%" y="1605" width="0.0121%" height="15" fill="rgb(225,120,8)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (13 samples, 0.01%)</title><rect x="97.4704%" y="1589" width="0.0121%" height="15" fill="rgb(226,3,30)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1599.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (13 samples, 0.01%)</title><rect x="97.4704%" y="1573" width="0.0121%" height="15" fill="rgb(214,159,38)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.01%)</title><rect x="97.4704%" y="1557" width="0.0121%" height="15" fill="rgb(242,182,47)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.01%)</title><rect x="97.4704%" y="1541" width="0.0121%" height="15" fill="rgb(245,202,26)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (13 samples, 0.01%)</title><rect x="97.4704%" y="1525" width="0.0121%" height="15" fill="rgb(226,163,3)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (13 samples, 0.01%)</title><rect x="97.4704%" y="1509" width="0.0121%" height="15" fill="rgb(219,4,4)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.01%)</title><rect x="97.4704%" y="1493" width="0.0121%" height="15" fill="rgb(223,85,4)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.01%)</title><rect x="97.4704%" y="1477" width="0.0121%" height="15" fill="rgb(242,170,11)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="97.4704%" y="1461" width="0.0121%" height="15" fill="rgb(221,97,42)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.01%)</title><rect x="97.4704%" y="1445" width="0.0121%" height="15" fill="rgb(231,206,45)" fg:x="104652" fg:w="13"/><text x="97.7204%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="97.4722%" y="1429" width="0.0102%" height="15" fill="rgb(216,23,48)" fg:x="104654" fg:w="11"/><text x="97.7222%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="97.4722%" y="1413" width="0.0102%" height="15" fill="rgb(225,49,9)" fg:x="104654" fg:w="11"/><text x="97.7222%" y="1423.50"></text></g><g><title>bcs::ser::to_bytes (57 samples, 0.05%)</title><rect x="97.4350%" y="1717" width="0.0531%" height="15" fill="rgb(247,24,47)" fg:x="104614" fg:w="57"/><text x="97.6850%" y="1727.50"></text></g><g><title>bcs::ser::serialize_into (57 samples, 0.05%)</title><rect x="97.4350%" y="1701" width="0.0531%" height="15" fill="rgb(253,145,10)" fg:x="104614" fg:w="57"/><text x="97.6850%" y="1711.50"></text></g><g><title>aptos_types::account_config::resources::core_account::_::&lt;impl serde::ser::Serialize for aptos_types::account_config::resources::core_account::AccountResource&gt;::serialize (57 samples, 0.05%)</title><rect x="97.4350%" y="1685" width="0.0531%" height="15" fill="rgb(206,62,10)" fg:x="104614" fg:w="57"/><text x="97.6850%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (57 samples, 0.05%)</title><rect x="97.4350%" y="1669" width="0.0531%" height="15" fill="rgb(224,159,31)" fg:x="104614" fg:w="57"/><text x="97.6850%" y="1679.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::to_bytes (198 samples, 0.18%)</title><rect x="97.3055%" y="1733" width="0.1844%" height="15" fill="rgb(234,184,15)" fg:x="104475" fg:w="198"/><text x="97.5555%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (18 samples, 0.02%)</title><rect x="97.4965%" y="1541" width="0.0168%" height="15" fill="rgb(237,101,1)" fg:x="104680" fg:w="18"/><text x="97.7465%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (18 samples, 0.02%)</title><rect x="97.4965%" y="1525" width="0.0168%" height="15" fill="rgb(211,99,29)" fg:x="104680" fg:w="18"/><text x="97.7465%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (18 samples, 0.02%)</title><rect x="97.4965%" y="1509" width="0.0168%" height="15" fill="rgb(250,167,3)" fg:x="104680" fg:w="18"/><text x="97.7465%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (18 samples, 0.02%)</title><rect x="97.4965%" y="1493" width="0.0168%" height="15" fill="rgb(225,58,6)" fg:x="104680" fg:w="18"/><text x="97.7465%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.02%)</title><rect x="97.4965%" y="1477" width="0.0168%" height="15" fill="rgb(251,161,21)" fg:x="104680" fg:w="18"/><text x="97.7465%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.02%)</title><rect x="97.4965%" y="1461" width="0.0168%" height="15" fill="rgb(253,203,35)" fg:x="104680" fg:w="18"/><text x="97.7465%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 0.02%)</title><rect x="97.4965%" y="1445" width="0.0168%" height="15" fill="rgb(214,220,52)" fg:x="104680" fg:w="18"/><text x="97.7465%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="97.4983%" y="1429" width="0.0149%" height="15" fill="rgb(235,216,33)" fg:x="104682" fg:w="16"/><text x="97.7483%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="97.4983%" y="1413" width="0.0149%" height="15" fill="rgb(231,79,26)" fg:x="104682" fg:w="16"/><text x="97.7483%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="97.5030%" y="1397" width="0.0102%" height="15" fill="rgb(244,218,10)" fg:x="104687" fg:w="11"/><text x="97.7530%" y="1407.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (21 samples, 0.02%)</title><rect x="97.4965%" y="1621" width="0.0196%" height="15" fill="rgb(238,15,9)" fg:x="104680" fg:w="21"/><text x="97.7465%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 0.02%)</title><rect x="97.4965%" y="1605" width="0.0196%" height="15" fill="rgb(235,112,15)" fg:x="104680" fg:w="21"/><text x="97.7465%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (21 samples, 0.02%)</title><rect x="97.4965%" y="1589" width="0.0196%" height="15" fill="rgb(239,126,18)" fg:x="104680" fg:w="21"/><text x="97.7465%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 0.02%)</title><rect x="97.4965%" y="1573" width="0.0196%" height="15" fill="rgb(253,171,19)" fg:x="104680" fg:w="21"/><text x="97.7465%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (21 samples, 0.02%)</title><rect x="97.4965%" y="1557" width="0.0196%" height="15" fill="rgb(237,218,25)" fg:x="104680" fg:w="21"/><text x="97.7465%" y="1567.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventHandle&gt;::serialize (34 samples, 0.03%)</title><rect x="97.4965%" y="1653" width="0.0317%" height="15" fill="rgb(213,88,46)" fg:x="104680" fg:w="34"/><text x="97.7465%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (34 samples, 0.03%)</title><rect x="97.4965%" y="1637" width="0.0317%" height="15" fill="rgb(222,124,54)" fg:x="104680" fg:w="34"/><text x="97.7465%" y="1647.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (13 samples, 0.01%)</title><rect x="97.5160%" y="1621" width="0.0121%" height="15" fill="rgb(209,206,42)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (13 samples, 0.01%)</title><rect x="97.5160%" y="1605" width="0.0121%" height="15" fill="rgb(219,25,49)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1615.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.01%)</title><rect x="97.5160%" y="1589" width="0.0121%" height="15" fill="rgb(228,207,53)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.01%)</title><rect x="97.5160%" y="1573" width="0.0121%" height="15" fill="rgb(224,3,4)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="97.5160%" y="1557" width="0.0121%" height="15" fill="rgb(254,206,26)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.01%)</title><rect x="97.5160%" y="1541" width="0.0121%" height="15" fill="rgb(209,4,26)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="97.5160%" y="1525" width="0.0121%" height="15" fill="rgb(243,193,32)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="97.5160%" y="1509" width="0.0121%" height="15" fill="rgb(225,150,36)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.01%)</title><rect x="97.5160%" y="1493" width="0.0121%" height="15" fill="rgb(225,131,26)" fg:x="104701" fg:w="13"/><text x="97.7660%" y="1503.50"></text></g><g><title>aptos_language_e2e_tests::account::CoinStore::to_bytes (42 samples, 0.04%)</title><rect x="97.4899%" y="1733" width="0.0391%" height="15" fill="rgb(236,126,12)" fg:x="104673" fg:w="42"/><text x="97.7399%" y="1743.50"></text></g><g><title>bcs::ser::to_bytes (38 samples, 0.04%)</title><rect x="97.4937%" y="1717" width="0.0354%" height="15" fill="rgb(238,167,44)" fg:x="104677" fg:w="38"/><text x="97.7437%" y="1727.50"></text></g><g><title>bcs::ser::serialize_into (38 samples, 0.04%)</title><rect x="97.4937%" y="1701" width="0.0354%" height="15" fill="rgb(238,153,31)" fg:x="104677" fg:w="38"/><text x="97.7437%" y="1711.50"></text></g><g><title>aptos_types::account_config::resources::coin_store::_::&lt;impl serde::ser::Serialize for aptos_types::account_config::resources::coin_store::CoinStoreResource&gt;::serialize (38 samples, 0.04%)</title><rect x="97.4937%" y="1685" width="0.0354%" height="15" fill="rgb(254,41,51)" fg:x="104677" fg:w="38"/><text x="97.7437%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (35 samples, 0.03%)</title><rect x="97.4965%" y="1669" width="0.0326%" height="15" fill="rgb(224,100,52)" fg:x="104680" fg:w="35"/><text x="97.7465%" y="1679.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (15 samples, 0.01%)</title><rect x="97.5356%" y="1669" width="0.0140%" height="15" fill="rgb(246,226,38)" fg:x="104722" fg:w="15"/><text x="97.7856%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (23 samples, 0.02%)</title><rect x="97.5356%" y="1685" width="0.0214%" height="15" fill="rgb(252,21,43)" fg:x="104722" fg:w="23"/><text x="97.7856%" y="1695.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (35 samples, 0.03%)</title><rect x="97.5337%" y="1733" width="0.0326%" height="15" fill="rgb(250,44,8)" fg:x="104720" fg:w="35"/><text x="97.7837%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.03%)</title><rect x="97.5337%" y="1717" width="0.0326%" height="15" fill="rgb(224,200,45)" fg:x="104720" fg:w="35"/><text x="97.7837%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (35 samples, 0.03%)</title><rect x="97.5337%" y="1701" width="0.0326%" height="15" fill="rgb(208,75,52)" fg:x="104720" fg:w="35"/><text x="97.7837%" y="1711.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::to_writeset (403 samples, 0.38%)</title><rect x="97.1919%" y="1749" width="0.3753%" height="15" fill="rgb(213,167,20)" fg:x="104353" fg:w="403"/><text x="97.4419%" y="1759.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="97.6399%" y="1493" width="0.0121%" height="15" fill="rgb(236,163,42)" fg:x="104834" fg:w="13"/><text x="97.8899%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.08%)</title><rect x="97.5775%" y="1621" width="0.0754%" height="15" fill="rgb(210,98,31)" fg:x="104767" fg:w="81"/><text x="97.8275%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.08%)</title><rect x="97.5775%" y="1605" width="0.0754%" height="15" fill="rgb(246,166,15)" fg:x="104767" fg:w="81"/><text x="97.8275%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.08%)</title><rect x="97.5775%" y="1589" width="0.0754%" height="15" fill="rgb(214,114,7)" fg:x="104767" fg:w="81"/><text x="97.8275%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.08%)</title><rect x="97.5775%" y="1573" width="0.0754%" height="15" fill="rgb(217,202,34)" fg:x="104767" fg:w="81"/><text x="97.8275%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.08%)</title><rect x="97.5775%" y="1557" width="0.0754%" height="15" fill="rgb(227,226,29)" fg:x="104767" fg:w="81"/><text x="97.8275%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.08%)</title><rect x="97.5775%" y="1541" width="0.0754%" height="15" fill="rgb(254,65,44)" fg:x="104767" fg:w="81"/><text x="97.8275%" y="1551.50"></text></g><g><title>malloc (81 samples, 0.08%)</title><rect x="97.5775%" y="1525" width="0.0754%" height="15" fill="rgb(213,150,32)" fg:x="104767" fg:w="81"/><text x="97.8275%" y="1535.50"></text></g><g><title>[libc.so.6] (41 samples, 0.04%)</title><rect x="97.6147%" y="1509" width="0.0382%" height="15" fill="rgb(208,86,46)" fg:x="104807" fg:w="41"/><text x="97.8647%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="97.5775%" y="1733" width="0.0764%" height="15" fill="rgb(222,75,3)" fg:x="104767" fg:w="82"/><text x="97.8275%" y="1743.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="97.5775%" y="1717" width="0.0764%" height="15" fill="rgb(225,213,9)" fg:x="104767" fg:w="82"/><text x="97.8275%" y="1727.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="97.5775%" y="1701" width="0.0764%" height="15" fill="rgb(209,199,10)" fg:x="104767" fg:w="82"/><text x="97.8275%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="97.5775%" y="1685" width="0.0764%" height="15" fill="rgb(213,18,17)" fg:x="104767" fg:w="82"/><text x="97.8275%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (82 samples, 0.08%)</title><rect x="97.5775%" y="1669" width="0.0764%" height="15" fill="rgb(243,79,44)" fg:x="104767" fg:w="82"/><text x="97.8275%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (82 samples, 0.08%)</title><rect x="97.5775%" y="1653" width="0.0764%" height="15" fill="rgb(226,20,5)" fg:x="104767" fg:w="82"/><text x="97.8275%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (82 samples, 0.08%)</title><rect x="97.5775%" y="1637" width="0.0764%" height="15" fill="rgb(217,52,31)" fg:x="104767" fg:w="82"/><text x="97.8275%" y="1647.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="97.6585%" y="1637" width="0.0130%" height="15" fill="rgb(229,42,7)" fg:x="104854" fg:w="14"/><text x="97.9085%" y="1647.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="97.6595%" y="1621" width="0.0121%" height="15" fill="rgb(206,118,29)" fg:x="104855" fg:w="13"/><text x="97.9095%" y="1631.50"></text></g><g><title>hashbrown::map::make_insert_hash (27 samples, 0.03%)</title><rect x="97.6539%" y="1685" width="0.0251%" height="15" fill="rgb(248,132,44)" fg:x="104849" fg:w="27"/><text x="97.9039%" y="1695.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.03%)</title><rect x="97.6539%" y="1669" width="0.0251%" height="15" fill="rgb(231,56,33)" fg:x="104849" fg:w="27"/><text x="97.9039%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.02%)</title><rect x="97.6585%" y="1653" width="0.0205%" height="15" fill="rgb(208,31,11)" fg:x="104854" fg:w="22"/><text x="97.9085%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (82 samples, 0.08%)</title><rect x="97.6790%" y="1685" width="0.0764%" height="15" fill="rgb(216,56,33)" fg:x="104876" fg:w="82"/><text x="97.9290%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (82 samples, 0.08%)</title><rect x="97.6790%" y="1669" width="0.0764%" height="15" fill="rgb(213,100,0)" fg:x="104876" fg:w="82"/><text x="97.9290%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (82 samples, 0.08%)</title><rect x="97.6790%" y="1653" width="0.0764%" height="15" fill="rgb(236,166,18)" fg:x="104876" fg:w="82"/><text x="97.9290%" y="1663.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (71 samples, 0.07%)</title><rect x="97.6893%" y="1637" width="0.0661%" height="15" fill="rgb(251,132,12)" fg:x="104887" fg:w="71"/><text x="97.9393%" y="1647.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (71 samples, 0.07%)</title><rect x="97.6893%" y="1621" width="0.0661%" height="15" fill="rgb(216,117,7)" fg:x="104887" fg:w="71"/><text x="97.9393%" y="1631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.07%)</title><rect x="97.6893%" y="1605" width="0.0661%" height="15" fill="rgb(243,184,8)" fg:x="104887" fg:w="71"/><text x="97.9393%" y="1615.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="97.7759%" y="1493" width="0.0112%" height="15" fill="rgb(212,91,32)" fg:x="104980" fg:w="12"/><text x="98.0259%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="97.7768%" y="1477" width="0.0102%" height="15" fill="rgb(224,147,15)" fg:x="104981" fg:w="11"/><text x="98.0268%" y="1487.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="97.7768%" y="1461" width="0.0102%" height="15" fill="rgb(228,84,10)" fg:x="104981" fg:w="11"/><text x="98.0268%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="97.7768%" y="1445" width="0.0102%" height="15" fill="rgb(221,161,22)" fg:x="104981" fg:w="11"/><text x="98.0268%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="97.7759%" y="1525" width="0.0140%" height="15" fill="rgb(250,132,20)" fg:x="104980" fg:w="15"/><text x="98.0259%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="97.7759%" y="1509" width="0.0140%" height="15" fill="rgb(209,161,12)" fg:x="104980" fg:w="15"/><text x="98.0259%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (176 samples, 0.16%)</title><rect x="97.7917%" y="1477" width="0.1639%" height="15" fill="rgb(232,142,42)" fg:x="104997" fg:w="176"/><text x="98.0417%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (199 samples, 0.19%)</title><rect x="97.7712%" y="1605" width="0.1853%" height="15" fill="rgb(240,228,27)" fg:x="104975" fg:w="199"/><text x="98.0212%" y="1615.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (199 samples, 0.19%)</title><rect x="97.7712%" y="1589" width="0.1853%" height="15" fill="rgb(243,0,31)" fg:x="104975" fg:w="199"/><text x="98.0212%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (199 samples, 0.19%)</title><rect x="97.7712%" y="1573" width="0.1853%" height="15" fill="rgb(237,100,15)" fg:x="104975" fg:w="199"/><text x="98.0212%" y="1583.50"></text></g><g><title>core::hash::BuildHasher::hash_one (199 samples, 0.19%)</title><rect x="97.7712%" y="1557" width="0.1853%" height="15" fill="rgb(230,26,48)" fg:x="104975" fg:w="199"/><text x="98.0212%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (194 samples, 0.18%)</title><rect x="97.7759%" y="1541" width="0.1807%" height="15" fill="rgb(215,7,13)" fg:x="104980" fg:w="194"/><text x="98.0259%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (179 samples, 0.17%)</title><rect x="97.7898%" y="1525" width="0.1667%" height="15" fill="rgb(227,172,5)" fg:x="104995" fg:w="179"/><text x="98.0398%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (179 samples, 0.17%)</title><rect x="97.7898%" y="1509" width="0.1667%" height="15" fill="rgb(248,206,14)" fg:x="104995" fg:w="179"/><text x="98.0398%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (179 samples, 0.17%)</title><rect x="97.7898%" y="1493" width="0.1667%" height="15" fill="rgb(231,62,54)" fg:x="104995" fg:w="179"/><text x="98.0398%" y="1503.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_write_set (426 samples, 0.40%)</title><rect x="97.5672%" y="1749" width="0.3968%" height="15" fill="rgb(222,136,26)" fg:x="104756" fg:w="426"/><text x="97.8172%" y="1759.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::set (333 samples, 0.31%)</title><rect x="97.6539%" y="1733" width="0.3101%" height="15" fill="rgb(211,115,42)" fg:x="104849" fg:w="333"/><text x="97.9039%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (333 samples, 0.31%)</title><rect x="97.6539%" y="1717" width="0.3101%" height="15" fill="rgb(234,5,17)" fg:x="104849" fg:w="333"/><text x="97.9039%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (333 samples, 0.31%)</title><rect x="97.6539%" y="1701" width="0.3101%" height="15" fill="rgb(233,67,14)" fg:x="104849" fg:w="333"/><text x="97.9039%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (224 samples, 0.21%)</title><rect x="97.7554%" y="1685" width="0.2086%" height="15" fill="rgb(225,133,51)" fg:x="104958" fg:w="224"/><text x="98.0054%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (213 samples, 0.20%)</title><rect x="97.7656%" y="1669" width="0.1984%" height="15" fill="rgb(206,107,40)" fg:x="104969" fg:w="213"/><text x="98.0156%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (213 samples, 0.20%)</title><rect x="97.7656%" y="1653" width="0.1984%" height="15" fill="rgb(210,56,9)" fg:x="104969" fg:w="213"/><text x="98.0156%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (213 samples, 0.20%)</title><rect x="97.7656%" y="1637" width="0.1984%" height="15" fill="rgb(222,204,4)" fg:x="104969" fg:w="213"/><text x="98.0156%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (213 samples, 0.20%)</title><rect x="97.7656%" y="1621" width="0.1984%" height="15" fill="rgb(210,168,3)" fg:x="104969" fg:w="213"/><text x="98.0156%" y="1631.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (47 samples, 0.04%)</title><rect x="97.9724%" y="1589" width="0.0438%" height="15" fill="rgb(246,183,26)" fg:x="105191" fg:w="47"/><text x="98.2224%" y="1599.50"></text></g><g><title>alloc::collections::btree::mem::replace (45 samples, 0.04%)</title><rect x="97.9743%" y="1573" width="0.0419%" height="15" fill="rgb(228,27,31)" fg:x="105193" fg:w="45"/><text x="98.2243%" y="1583.50"></text></g><g><title>core::ptr::write (23 samples, 0.02%)</title><rect x="97.9947%" y="1557" width="0.0214%" height="15" fill="rgb(206,8,2)" fg:x="105215" fg:w="23"/><text x="98.2447%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (58 samples, 0.05%)</title><rect x="97.9649%" y="1621" width="0.0540%" height="15" fill="rgb(251,229,16)" fg:x="105183" fg:w="58"/><text x="98.2149%" y="1631.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (50 samples, 0.05%)</title><rect x="97.9724%" y="1605" width="0.0466%" height="15" fill="rgb(208,84,44)" fg:x="105191" fg:w="50"/><text x="98.2224%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="98.0199%" y="1541" width="0.0149%" height="15" fill="rgb(221,228,13)" fg:x="105242" fg:w="16"/><text x="98.2699%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="98.0199%" y="1525" width="0.0149%" height="15" fill="rgb(248,42,47)" fg:x="105242" fg:w="16"/><text x="98.2699%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (18 samples, 0.02%)</title><rect x="98.0190%" y="1589" width="0.0168%" height="15" fill="rgb(222,124,41)" fg:x="105241" fg:w="18"/><text x="98.2690%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (18 samples, 0.02%)</title><rect x="98.0190%" y="1573" width="0.0168%" height="15" fill="rgb(244,191,35)" fg:x="105241" fg:w="18"/><text x="98.2690%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="98.0199%" y="1557" width="0.0158%" height="15" fill="rgb(222,223,54)" fg:x="105242" fg:w="17"/><text x="98.2699%" y="1567.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (25 samples, 0.02%)</title><rect x="98.0190%" y="1605" width="0.0233%" height="15" fill="rgb(248,178,42)" fg:x="105241" fg:w="25"/><text x="98.2690%" y="1615.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::add_account_data (914 samples, 0.85%)</title><rect x="97.1919%" y="1781" width="0.8513%" height="15" fill="rgb(238,21,24)" fg:x="104353" fg:w="914"/><text x="97.4419%" y="1791.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_account_data (914 samples, 0.85%)</title><rect x="97.1919%" y="1765" width="0.8513%" height="15" fill="rgb(227,134,7)" fg:x="104353" fg:w="914"/><text x="97.4419%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (85 samples, 0.08%)</title><rect x="97.9640%" y="1749" width="0.0792%" height="15" fill="rgb(205,191,1)" fg:x="105182" fg:w="85"/><text x="98.2140%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (85 samples, 0.08%)</title><rect x="97.9640%" y="1733" width="0.0792%" height="15" fill="rgb(222,166,30)" fg:x="105182" fg:w="85"/><text x="98.2140%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (85 samples, 0.08%)</title><rect x="97.9640%" y="1717" width="0.0792%" height="15" fill="rgb(229,94,26)" fg:x="105182" fg:w="85"/><text x="98.2140%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (85 samples, 0.08%)</title><rect x="97.9640%" y="1701" width="0.0792%" height="15" fill="rgb(246,97,2)" fg:x="105182" fg:w="85"/><text x="98.2140%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.08%)</title><rect x="97.9640%" y="1685" width="0.0792%" height="15" fill="rgb(252,112,53)" fg:x="105182" fg:w="85"/><text x="98.2140%" y="1695.50"></text></g><g><title>core::mem::drop (84 samples, 0.08%)</title><rect x="97.9649%" y="1669" width="0.0782%" height="15" fill="rgb(225,52,38)" fg:x="105183" fg:w="84"/><text x="98.2149%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (84 samples, 0.08%)</title><rect x="97.9649%" y="1653" width="0.0782%" height="15" fill="rgb(215,203,24)" fg:x="105183" fg:w="84"/><text x="98.2149%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.08%)</title><rect x="97.9649%" y="1637" width="0.0782%" height="15" fill="rgb(210,122,52)" fg:x="105183" fg:w="84"/><text x="98.2149%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (26 samples, 0.02%)</title><rect x="98.0190%" y="1621" width="0.0242%" height="15" fill="rgb(209,161,44)" fg:x="105241" fg:w="26"/><text x="98.2690%" y="1631.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::create_accounts (5,209 samples, 4.85%)</title><rect x="93.1926%" y="1797" width="4.8515%" height="15" fill="rgb(221,97,16)" fg:x="100059" fg:w="5209"/><text x="93.4426%" y="1807.50">aptos_..</text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::Transaction&gt;&gt; (12 samples, 0.01%)</title><rect x="98.0516%" y="1765" width="0.0112%" height="15" fill="rgb(209,87,13)" fg:x="105276" fg:w="12"/><text x="98.3016%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::Transaction&gt;&gt; (12 samples, 0.01%)</title><rect x="98.0516%" y="1749" width="0.0112%" height="15" fill="rgb(242,1,21)" fg:x="105276" fg:w="12"/><text x="98.3016%" y="1759.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_transaction_block_parallel (22 samples, 0.02%)</title><rect x="98.0441%" y="1797" width="0.0205%" height="15" fill="rgb(251,170,41)" fg:x="105268" fg:w="22"/><text x="98.2941%" y="1807.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block (22 samples, 0.02%)</title><rect x="98.0441%" y="1781" width="0.0205%" height="15" fill="rgb(227,201,10)" fg:x="105268" fg:w="22"/><text x="98.2941%" y="1791.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (12 samples, 0.01%)</title><rect x="98.0832%" y="1413" width="0.0112%" height="15" fill="rgb(231,100,29)" fg:x="105310" fg:w="12"/><text x="98.3332%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="98.0832%" y="1397" width="0.0112%" height="15" fill="rgb(226,31,35)" fg:x="105310" fg:w="12"/><text x="98.3332%" y="1407.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="98.0832%" y="1381" width="0.0112%" height="15" fill="rgb(254,99,26)" fg:x="105310" fg:w="12"/><text x="98.3332%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="98.0832%" y="1365" width="0.0112%" height="15" fill="rgb(217,228,17)" fg:x="105310" fg:w="12"/><text x="98.3332%" y="1375.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (12 samples, 0.01%)</title><rect x="98.0832%" y="1349" width="0.0112%" height="15" fill="rgb(226,132,8)" fg:x="105310" fg:w="12"/><text x="98.3332%" y="1359.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="98.0842%" y="1333" width="0.0102%" height="15" fill="rgb(220,202,47)" fg:x="105311" fg:w="11"/><text x="98.3342%" y="1343.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="98.0842%" y="1317" width="0.0102%" height="15" fill="rgb(245,194,10)" fg:x="105311" fg:w="11"/><text x="98.3342%" y="1327.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="98.0842%" y="1301" width="0.0102%" height="15" fill="rgb(225,44,52)" fg:x="105311" fg:w="11"/><text x="98.3342%" y="1311.50"></text></g><g><title>aptos_vm_genesis::publish_framework (25 samples, 0.02%)</title><rect x="98.0758%" y="1509" width="0.0233%" height="15" fill="rgb(235,10,4)" fg:x="105302" fg:w="25"/><text x="98.3258%" y="1519.50"></text></g><g><title>aptos_vm_genesis::publish_package (25 samples, 0.02%)</title><rect x="98.0758%" y="1493" width="0.0233%" height="15" fill="rgb(244,32,23)" fg:x="105302" fg:w="25"/><text x="98.3258%" y="1503.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::publish_module_bundle (21 samples, 0.02%)</title><rect x="98.0795%" y="1477" width="0.0196%" height="15" fill="rgb(210,115,0)" fg:x="105306" fg:w="21"/><text x="98.3295%" y="1487.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::publish_module_bundle (21 samples, 0.02%)</title><rect x="98.0795%" y="1461" width="0.0196%" height="15" fill="rgb(246,72,16)" fg:x="105306" fg:w="21"/><text x="98.3295%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_bundle_for_publication (19 samples, 0.02%)</title><rect x="98.0814%" y="1445" width="0.0177%" height="15" fill="rgb(223,32,10)" fg:x="105308" fg:w="19"/><text x="98.3314%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_for_publication (17 samples, 0.02%)</title><rect x="98.0832%" y="1429" width="0.0158%" height="15" fill="rgb(223,97,52)" fg:x="105310" fg:w="17"/><text x="98.3332%" y="1439.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::from_head_genesis (38 samples, 0.04%)</title><rect x="98.0646%" y="1797" width="0.0354%" height="15" fill="rgb(238,69,38)" fg:x="105290" fg:w="38"/><text x="98.3146%" y="1807.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (37 samples, 0.03%)</title><rect x="98.0655%" y="1781" width="0.0345%" height="15" fill="rgb(226,61,1)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1791.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (37 samples, 0.03%)</title><rect x="98.0655%" y="1765" width="0.0345%" height="15" fill="rgb(244,56,14)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1775.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (37 samples, 0.03%)</title><rect x="98.0655%" y="1749" width="0.0345%" height="15" fill="rgb(242,164,18)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1759.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (37 samples, 0.03%)</title><rect x="98.0655%" y="1733" width="0.0345%" height="15" fill="rgb(217,130,28)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1743.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (37 samples, 0.03%)</title><rect x="98.0655%" y="1717" width="0.0345%" height="15" fill="rgb(218,118,52)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1727.50"></text></g><g><title>once_cell::imp::initialize_or_wait (37 samples, 0.03%)</title><rect x="98.0655%" y="1701" width="0.0345%" height="15" fill="rgb(251,112,38)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1711.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (37 samples, 0.03%)</title><rect x="98.0655%" y="1685" width="0.0345%" height="15" fill="rgb(239,14,50)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1695.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (37 samples, 0.03%)</title><rect x="98.0655%" y="1669" width="0.0345%" height="15" fill="rgb(228,141,54)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1679.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (37 samples, 0.03%)</title><rect x="98.0655%" y="1653" width="0.0345%" height="15" fill="rgb(236,128,15)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1663.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (37 samples, 0.03%)</title><rect x="98.0655%" y="1637" width="0.0345%" height="15" fill="rgb(206,140,54)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1647.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.03%)</title><rect x="98.0655%" y="1621" width="0.0345%" height="15" fill="rgb(240,0,44)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.03%)</title><rect x="98.0655%" y="1605" width="0.0345%" height="15" fill="rgb(243,207,23)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1615.50"></text></g><g><title>aptos_language_e2e_tests::data_store::GENESIS_CHANGE_SET_HEAD::{{closure}} (37 samples, 0.03%)</title><rect x="98.0655%" y="1589" width="0.0345%" height="15" fill="rgb(247,202,1)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1599.50"></text></g><g><title>aptos_vm_genesis::generate_genesis_change_set_for_testing (37 samples, 0.03%)</title><rect x="98.0655%" y="1573" width="0.0345%" height="15" fill="rgb(239,83,27)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1583.50"></text></g><g><title>aptos_vm_genesis::generate_genesis_change_set_for_testing_with_count (37 samples, 0.03%)</title><rect x="98.0655%" y="1557" width="0.0345%" height="15" fill="rgb(219,205,7)" fg:x="105291" fg:w="37"/><text x="98.3155%" y="1567.50"></text></g><g><title>aptos_vm_genesis::generate_test_genesis (36 samples, 0.03%)</title><rect x="98.0665%" y="1541" width="0.0335%" height="15" fill="rgb(249,184,22)" fg:x="105292" fg:w="36"/><text x="98.3165%" y="1551.50"></text></g><g><title>aptos_vm_genesis::encode_genesis_change_set (35 samples, 0.03%)</title><rect x="98.0674%" y="1525" width="0.0326%" height="15" fill="rgb(230,150,14)" fg:x="105293" fg:w="35"/><text x="98.3174%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (11 samples, 0.01%)</title><rect x="98.1065%" y="1797" width="0.0102%" height="15" fill="rgb(240,118,34)" fg:x="105335" fg:w="11"/><text x="98.3565%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionOutput&gt; (11 samples, 0.01%)</title><rect x="98.1168%" y="1797" width="0.0102%" height="15" fill="rgb(227,162,21)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (11 samples, 0.01%)</title><rect x="98.1168%" y="1781" width="0.0102%" height="15" fill="rgb(219,14,9)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (11 samples, 0.01%)</title><rect x="98.1168%" y="1765" width="0.0102%" height="15" fill="rgb(223,226,16)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (11 samples, 0.01%)</title><rect x="98.1168%" y="1749" width="0.0102%" height="15" fill="rgb(246,161,37)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (11 samples, 0.01%)</title><rect x="98.1168%" y="1733" width="0.0102%" height="15" fill="rgb(205,221,43)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="98.1168%" y="1717" width="0.0102%" height="15" fill="rgb(228,216,26)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1727.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="98.1168%" y="1701" width="0.0102%" height="15" fill="rgb(251,33,17)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (11 samples, 0.01%)</title><rect x="98.1168%" y="1685" width="0.0102%" height="15" fill="rgb(246,126,36)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="98.1168%" y="1669" width="0.0102%" height="15" fill="rgb(217,160,24)" fg:x="105346" fg:w="11"/><text x="98.3668%" y="1679.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="98.1391%" y="1765" width="0.0149%" height="15" fill="rgb(211,64,12)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1775.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (16 samples, 0.01%)</title><rect x="98.1391%" y="1749" width="0.0149%" height="15" fill="rgb(238,47,36)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1759.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (16 samples, 0.01%)</title><rect x="98.1391%" y="1733" width="0.0149%" height="15" fill="rgb(210,157,42)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1743.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (16 samples, 0.01%)</title><rect x="98.1391%" y="1717" width="0.0149%" height="15" fill="rgb(242,84,39)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1727.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (16 samples, 0.01%)</title><rect x="98.1391%" y="1701" width="0.0149%" height="15" fill="rgb(207,65,41)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1711.50"></text></g><g><title>once_cell::imp::initialize_or_wait (16 samples, 0.01%)</title><rect x="98.1391%" y="1685" width="0.0149%" height="15" fill="rgb(246,97,27)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1695.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.01%)</title><rect x="98.1391%" y="1669" width="0.0149%" height="15" fill="rgb(229,9,43)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1679.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (16 samples, 0.01%)</title><rect x="98.1391%" y="1653" width="0.0149%" height="15" fill="rgb(211,82,44)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1663.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (16 samples, 0.01%)</title><rect x="98.1391%" y="1637" width="0.0149%" height="15" fill="rgb(253,45,54)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1647.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (16 samples, 0.01%)</title><rect x="98.1391%" y="1621" width="0.0149%" height="15" fill="rgb(235,94,32)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="98.1391%" y="1605" width="0.0149%" height="15" fill="rgb(252,143,1)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="98.1391%" y="1589" width="0.0149%" height="15" fill="rgb(239,164,4)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1599.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (16 samples, 0.01%)</title><rect x="98.1391%" y="1573" width="0.0149%" height="15" fill="rgb(222,25,39)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1583.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (16 samples, 0.01%)</title><rect x="98.1391%" y="1557" width="0.0149%" height="15" fill="rgb(234,175,9)" fg:x="105370" fg:w="16"/><text x="98.3891%" y="1567.50"></text></g><g><title>aptos_language_e2e_tests::compile::compile_source_module (20 samples, 0.02%)</title><rect x="98.1391%" y="1781" width="0.0186%" height="15" fill="rgb(247,200,41)" fg:x="105370" fg:w="20"/><text x="98.3891%" y="1791.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_transaction_block (12 samples, 0.01%)</title><rect x="98.1577%" y="1749" width="0.0112%" height="15" fill="rgb(245,101,27)" fg:x="105390" fg:w="12"/><text x="98.4077%" y="1759.50"></text></g><g><title>run_benchmark::create_module (44 samples, 0.04%)</title><rect x="98.1391%" y="1797" width="0.0410%" height="15" fill="rgb(221,29,7)" fg:x="105370" fg:w="44"/><text x="98.3891%" y="1807.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_and_apply (24 samples, 0.02%)</title><rect x="98.1577%" y="1781" width="0.0224%" height="15" fill="rgb(240,184,10)" fg:x="105390" fg:w="24"/><text x="98.4077%" y="1791.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_block (24 samples, 0.02%)</title><rect x="98.1577%" y="1765" width="0.0224%" height="15" fill="rgb(251,85,15)" fg:x="105390" fg:w="24"/><text x="98.4077%" y="1775.50"></text></g><g><title>aptos_types::transaction::TransactionRegister&lt;T&gt;::map_par_txns (12 samples, 0.01%)</title><rect x="98.1689%" y="1749" width="0.0112%" height="15" fill="rgb(252,84,16)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1759.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (12 samples, 0.01%)</title><rect x="98.1689%" y="1733" width="0.0112%" height="15" fill="rgb(233,136,6)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1743.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (12 samples, 0.01%)</title><rect x="98.1689%" y="1717" width="0.0112%" height="15" fill="rgb(226,169,30)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1727.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (12 samples, 0.01%)</title><rect x="98.1689%" y="1701" width="0.0112%" height="15" fill="rgb(241,83,18)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1711.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (12 samples, 0.01%)</title><rect x="98.1689%" y="1685" width="0.0112%" height="15" fill="rgb(239,151,5)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1695.50"></text></g><g><title>rayon::iter::collect::special_extend (12 samples, 0.01%)</title><rect x="98.1689%" y="1669" width="0.0112%" height="15" fill="rgb(238,56,13)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1679.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (12 samples, 0.01%)</title><rect x="98.1689%" y="1653" width="0.0112%" height="15" fill="rgb(224,100,0)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1663.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (12 samples, 0.01%)</title><rect x="98.1689%" y="1637" width="0.0112%" height="15" fill="rgb(231,168,26)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1647.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (12 samples, 0.01%)</title><rect x="98.1689%" y="1621" width="0.0112%" height="15" fill="rgb(238,110,3)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1631.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (12 samples, 0.01%)</title><rect x="98.1689%" y="1605" width="0.0112%" height="15" fill="rgb(216,190,1)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge (12 samples, 0.01%)</title><rect x="98.1689%" y="1589" width="0.0112%" height="15" fill="rgb(208,130,52)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1599.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (12 samples, 0.01%)</title><rect x="98.1689%" y="1573" width="0.0112%" height="15" fill="rgb(233,74,12)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1583.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (12 samples, 0.01%)</title><rect x="98.1689%" y="1557" width="0.0112%" height="15" fill="rgb(248,12,15)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1567.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (12 samples, 0.01%)</title><rect x="98.1689%" y="1541" width="0.0112%" height="15" fill="rgb(228,18,29)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (12 samples, 0.01%)</title><rect x="98.1689%" y="1525" width="0.0112%" height="15" fill="rgb(206,153,11)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (12 samples, 0.01%)</title><rect x="98.1689%" y="1509" width="0.0112%" height="15" fill="rgb(216,50,30)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (12 samples, 0.01%)</title><rect x="98.1689%" y="1493" width="0.0112%" height="15" fill="rgb(217,20,39)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1503.50"></text></g><g><title>rayon_core::current_num_threads (12 samples, 0.01%)</title><rect x="98.1689%" y="1477" width="0.0112%" height="15" fill="rgb(232,130,46)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1487.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (12 samples, 0.01%)</title><rect x="98.1689%" y="1461" width="0.0112%" height="15" fill="rgb(233,141,43)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1471.50"></text></g><g><title>rayon_core::registry::global_registry (12 samples, 0.01%)</title><rect x="98.1689%" y="1445" width="0.0112%" height="15" fill="rgb(240,64,34)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1455.50"></text></g><g><title>rayon_core::registry::set_global_registry (12 samples, 0.01%)</title><rect x="98.1689%" y="1429" width="0.0112%" height="15" fill="rgb(230,28,31)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1439.50"></text></g><g><title>std::sync::once::Once::call_once (12 samples, 0.01%)</title><rect x="98.1689%" y="1413" width="0.0112%" height="15" fill="rgb(223,56,30)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1423.50"></text></g><g><title>std::sys_common::once::futex::Once::call (12 samples, 0.01%)</title><rect x="98.1689%" y="1397" width="0.0112%" height="15" fill="rgb(248,134,16)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1407.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (12 samples, 0.01%)</title><rect x="98.1689%" y="1381" width="0.0112%" height="15" fill="rgb(206,202,4)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1391.50"></text></g><g><title>rayon_core::registry::set_global_registry::{{closure}} (12 samples, 0.01%)</title><rect x="98.1689%" y="1365" width="0.0112%" height="15" fill="rgb(219,116,48)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1375.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="98.1689%" y="1349" width="0.0112%" height="15" fill="rgb(224,122,46)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1359.50"></text></g><g><title>rayon_core::registry::default_global_registry (12 samples, 0.01%)</title><rect x="98.1689%" y="1333" width="0.0112%" height="15" fill="rgb(219,114,47)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1343.50"></text></g><g><title>rayon_core::registry::Registry::new (12 samples, 0.01%)</title><rect x="98.1689%" y="1317" width="0.0112%" height="15" fill="rgb(244,60,44)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1327.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn (12 samples, 0.01%)</title><rect x="98.1689%" y="1301" width="0.0112%" height="15" fill="rgb(243,226,25)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn (12 samples, 0.01%)</title><rect x="98.1689%" y="1285" width="0.0112%" height="15" fill="rgb(243,101,52)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1295.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (12 samples, 0.01%)</title><rect x="98.1689%" y="1269" width="0.0112%" height="15" fill="rgb(207,69,25)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1279.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (12 samples, 0.01%)</title><rect x="98.1689%" y="1253" width="0.0112%" height="15" fill="rgb(222,204,53)" fg:x="105402" fg:w="12"/><text x="98.4189%" y="1263.50"></text></g><g><title>std::sys::unix::thread::Thread::new (11 samples, 0.01%)</title><rect x="98.1698%" y="1237" width="0.0102%" height="15" fill="rgb(234,84,49)" fg:x="105403" fg:w="11"/><text x="98.4198%" y="1247.50"></text></g><g><title>pthread_create (11 samples, 0.01%)</title><rect x="98.1698%" y="1221" width="0.0102%" height="15" fill="rgb(233,77,41)" fg:x="105403" fg:w="11"/><text x="98.4198%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="98.1950%" y="1365" width="0.0158%" height="15" fill="rgb(221,200,42)" fg:x="105430" fg:w="17"/><text x="98.4450%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="98.1950%" y="1349" width="0.0158%" height="15" fill="rgb(221,29,35)" fg:x="105430" fg:w="17"/><text x="98.4450%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="98.1950%" y="1333" width="0.0158%" height="15" fill="rgb(221,71,22)" fg:x="105430" fg:w="17"/><text x="98.4450%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="98.1987%" y="1317" width="0.0121%" height="15" fill="rgb(216,162,23)" fg:x="105434" fg:w="13"/><text x="98.4487%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="98.1987%" y="1301" width="0.0121%" height="15" fill="rgb(248,32,48)" fg:x="105434" fg:w="13"/><text x="98.4487%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="98.1987%" y="1285" width="0.0121%" height="15" fill="rgb(241,156,30)" fg:x="105434" fg:w="13"/><text x="98.4487%" y="1295.50"></text></g><g><title>malloc (13 samples, 0.01%)</title><rect x="98.1987%" y="1269" width="0.0121%" height="15" fill="rgb(237,196,46)" fg:x="105434" fg:w="13"/><text x="98.4487%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="98.1875%" y="1429" width="0.0289%" height="15" fill="rgb(216,2,6)" fg:x="105422" fg:w="31"/><text x="98.4375%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="98.1950%" y="1413" width="0.0214%" height="15" fill="rgb(214,47,16)" fg:x="105430" fg:w="23"/><text x="98.4450%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="98.1950%" y="1397" width="0.0214%" height="15" fill="rgb(240,123,13)" fg:x="105430" fg:w="23"/><text x="98.4450%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="98.1950%" y="1381" width="0.0214%" height="15" fill="rgb(206,47,48)" fg:x="105430" fg:w="23"/><text x="98.4450%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="98.1875%" y="1493" width="0.0317%" height="15" fill="rgb(252,88,27)" fg:x="105422" fg:w="34"/><text x="98.4375%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.03%)</title><rect x="98.1875%" y="1477" width="0.0317%" height="15" fill="rgb(218,105,30)" fg:x="105422" fg:w="34"/><text x="98.4375%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.03%)</title><rect x="98.1875%" y="1461" width="0.0317%" height="15" fill="rgb(227,52,46)" fg:x="105422" fg:w="34"/><text x="98.4375%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.03%)</title><rect x="98.1875%" y="1445" width="0.0317%" height="15" fill="rgb(222,190,21)" fg:x="105422" fg:w="34"/><text x="98.4375%" y="1455.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="98.1866%" y="1525" width="0.0531%" height="15" fill="rgb(205,86,20)" fg:x="105421" fg:w="57"/><text x="98.4366%" y="1535.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="98.1866%" y="1509" width="0.0531%" height="15" fill="rgb(233,45,1)" fg:x="105421" fg:w="57"/><text x="98.4366%" y="1519.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="98.2220%" y="1493" width="0.0177%" height="15" fill="rgb(208,39,6)" fg:x="105459" fg:w="19"/><text x="98.4720%" y="1503.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="98.2220%" y="1477" width="0.0177%" height="15" fill="rgb(211,178,22)" fg:x="105459" fg:w="19"/><text x="98.4720%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="98.2220%" y="1461" width="0.0177%" height="15" fill="rgb(227,112,23)" fg:x="105459" fg:w="19"/><text x="98.4720%" y="1471.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (19 samples, 0.02%)</title><rect x="98.2220%" y="1445" width="0.0177%" height="15" fill="rgb(214,41,4)" fg:x="105459" fg:w="19"/><text x="98.4720%" y="1455.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (19 samples, 0.02%)</title><rect x="98.2220%" y="1429" width="0.0177%" height="15" fill="rgb(219,144,46)" fg:x="105459" fg:w="19"/><text x="98.4720%" y="1439.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="98.2267%" y="1413" width="0.0130%" height="15" fill="rgb(253,176,50)" fg:x="105464" fg:w="14"/><text x="98.4767%" y="1423.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="98.2267%" y="1397" width="0.0130%" height="15" fill="rgb(206,123,1)" fg:x="105464" fg:w="14"/><text x="98.4767%" y="1407.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="98.1866%" y="1541" width="0.0550%" height="15" fill="rgb(250,111,32)" fg:x="105421" fg:w="59"/><text x="98.4366%" y="1551.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (65 samples, 0.06%)</title><rect x="98.1857%" y="1557" width="0.0605%" height="15" fill="rgb(229,17,49)" fg:x="105420" fg:w="65"/><text x="98.4357%" y="1567.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (69 samples, 0.06%)</title><rect x="98.1857%" y="1765" width="0.0643%" height="15" fill="rgb(250,123,19)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1775.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (69 samples, 0.06%)</title><rect x="98.1857%" y="1749" width="0.0643%" height="15" fill="rgb(220,124,20)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1759.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (69 samples, 0.06%)</title><rect x="98.1857%" y="1733" width="0.0643%" height="15" fill="rgb(242,85,25)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (69 samples, 0.06%)</title><rect x="98.1857%" y="1717" width="0.0643%" height="15" fill="rgb(245,217,7)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.06%)</title><rect x="98.1857%" y="1701" width="0.0643%" height="15" fill="rgb(242,50,25)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.06%)</title><rect x="98.1857%" y="1685" width="0.0643%" height="15" fill="rgb(251,210,24)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.06%)</title><rect x="98.1857%" y="1669" width="0.0643%" height="15" fill="rgb(238,24,8)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.06%)</title><rect x="98.1857%" y="1653" width="0.0643%" height="15" fill="rgb(211,96,19)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.06%)</title><rect x="98.1857%" y="1637" width="0.0643%" height="15" fill="rgb(222,186,12)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1647.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.06%)</title><rect x="98.1857%" y="1621" width="0.0643%" height="15" fill="rgb(212,70,49)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (69 samples, 0.06%)</title><rect x="98.1857%" y="1605" width="0.0643%" height="15" fill="rgb(238,69,49)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1615.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (69 samples, 0.06%)</title><rect x="98.1857%" y="1589" width="0.0643%" height="15" fill="rgb(225,13,3)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1599.50"></text></g><g><title>core::iter::adapters::cloned::clone_try_fold::{{closure}} (69 samples, 0.06%)</title><rect x="98.1857%" y="1573" width="0.0643%" height="15" fill="rgb(229,188,14)" fg:x="105420" fg:w="69"/><text x="98.4357%" y="1583.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="98.1857%" y="1781" width="0.0689%" height="15" fill="rgb(218,58,16)" fg:x="105420" fg:w="74"/><text x="98.4357%" y="1791.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="98.2993%" y="1701" width="0.0428%" height="15" fill="rgb(206,213,49)" fg:x="105542" fg:w="46"/><text x="98.5493%" y="1711.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (44 samples, 0.04%)</title><rect x="98.3012%" y="1685" width="0.0410%" height="15" fill="rgb(225,152,48)" fg:x="105544" fg:w="44"/><text x="98.5512%" y="1695.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="98.3422%" y="1701" width="0.0214%" height="15" fill="rgb(216,103,42)" fg:x="105588" fg:w="23"/><text x="98.5922%" y="1711.50"></text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="98.3422%" y="1685" width="0.0214%" height="15" fill="rgb(212,214,39)" fg:x="105588" fg:w="23"/><text x="98.5922%" y="1695.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="98.3440%" y="1669" width="0.0196%" height="15" fill="rgb(249,52,41)" fg:x="105590" fg:w="21"/><text x="98.5940%" y="1679.50"></text></g><g><title>&lt;aptos_language_e2e_tests::account::Account as core::clone::Clone&gt;::clone (150 samples, 0.14%)</title><rect x="98.2546%" y="1717" width="0.1397%" height="15" fill="rgb(212,173,53)" fg:x="105494" fg:w="150"/><text x="98.5046%" y="1727.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="98.3636%" y="1701" width="0.0307%" height="15" fill="rgb(232,222,21)" fg:x="105611" fg:w="33"/><text x="98.6136%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (215 samples, 0.20%)</title><rect x="98.2546%" y="1781" width="0.2002%" height="15" fill="rgb(206,228,31)" fg:x="105494" fg:w="215"/><text x="98.5046%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (215 samples, 0.20%)</title><rect x="98.2546%" y="1765" width="0.2002%" height="15" fill="rgb(231,121,16)" fg:x="105494" fg:w="215"/><text x="98.5046%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (215 samples, 0.20%)</title><rect x="98.2546%" y="1749" width="0.2002%" height="15" fill="rgb(241,3,23)" fg:x="105494" fg:w="215"/><text x="98.5046%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (215 samples, 0.20%)</title><rect x="98.2546%" y="1733" width="0.2002%" height="15" fill="rgb(220,68,37)" fg:x="105494" fg:w="215"/><text x="98.5046%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (54 samples, 0.05%)</title><rect x="98.4046%" y="1717" width="0.0503%" height="15" fill="rgb(212,23,49)" fg:x="105655" fg:w="54"/><text x="98.6546%" y="1727.50"></text></g><g><title>[libc.so.6] (54 samples, 0.05%)</title><rect x="98.4046%" y="1701" width="0.0503%" height="15" fill="rgb(231,38,8)" fg:x="105655" fg:w="54"/><text x="98.6546%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="98.4623%" y="1557" width="0.0186%" height="15" fill="rgb(222,137,29)" fg:x="105717" fg:w="20"/><text x="98.7123%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="98.4651%" y="1541" width="0.0158%" height="15" fill="rgb(239,8,6)" fg:x="105720" fg:w="17"/><text x="98.7151%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="98.4651%" y="1525" width="0.0158%" height="15" fill="rgb(224,142,47)" fg:x="105720" fg:w="17"/><text x="98.7151%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="98.4651%" y="1509" width="0.0158%" height="15" fill="rgb(226,67,29)" fg:x="105720" fg:w="17"/><text x="98.7151%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="98.4623%" y="1621" width="0.0233%" height="15" fill="rgb(212,144,29)" fg:x="105717" fg:w="25"/><text x="98.7123%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.02%)</title><rect x="98.4623%" y="1605" width="0.0233%" height="15" fill="rgb(252,2,51)" fg:x="105717" fg:w="25"/><text x="98.7123%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.02%)</title><rect x="98.4623%" y="1589" width="0.0233%" height="15" fill="rgb(246,103,52)" fg:x="105717" fg:w="25"/><text x="98.7123%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.02%)</title><rect x="98.4623%" y="1573" width="0.0233%" height="15" fill="rgb(229,229,35)" fg:x="105717" fg:w="25"/><text x="98.7123%" y="1583.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="98.4623%" y="1653" width="0.0345%" height="15" fill="rgb(209,83,15)" fg:x="105717" fg:w="37"/><text x="98.7123%" y="1663.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="98.4623%" y="1637" width="0.0345%" height="15" fill="rgb(218,54,16)" fg:x="105717" fg:w="37"/><text x="98.7123%" y="1647.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="98.4623%" y="1669" width="0.0363%" height="15" fill="rgb(205,2,26)" fg:x="105717" fg:w="39"/><text x="98.7123%" y="1679.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="98.4604%" y="1701" width="0.0410%" height="15" fill="rgb(248,180,0)" fg:x="105715" fg:w="44"/><text x="98.7104%" y="1711.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="98.4623%" y="1685" width="0.0391%" height="15" fill="rgb(231,136,16)" fg:x="105717" fg:w="42"/><text x="98.7123%" y="1695.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionRegister&lt;T&gt; as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="98.4604%" y="1781" width="0.0428%" height="15" fill="rgb(215,90,4)" fg:x="105715" fg:w="46"/><text x="98.7104%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="98.4604%" y="1765" width="0.0428%" height="15" fill="rgb(251,131,3)" fg:x="105715" fg:w="46"/><text x="98.7104%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.04%)</title><rect x="98.4604%" y="1749" width="0.0428%" height="15" fill="rgb(244,47,21)" fg:x="105715" fg:w="46"/><text x="98.7104%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.04%)</title><rect x="98.4604%" y="1733" width="0.0428%" height="15" fill="rgb(231,115,9)" fg:x="105715" fg:w="46"/><text x="98.7104%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.04%)</title><rect x="98.4604%" y="1717" width="0.0428%" height="15" fill="rgb(241,119,20)" fg:x="105715" fg:w="46"/><text x="98.7104%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="98.5191%" y="1765" width="0.0130%" height="15" fill="rgb(224,99,0)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="98.5191%" y="1749" width="0.0130%" height="15" fill="rgb(219,213,18)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1759.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="98.5191%" y="1733" width="0.0130%" height="15" fill="rgb(209,71,34)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1743.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="98.5191%" y="1717" width="0.0130%" height="15" fill="rgb(245,203,20)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1727.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (14 samples, 0.01%)</title><rect x="98.5191%" y="1701" width="0.0130%" height="15" fill="rgb(221,44,20)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (14 samples, 0.01%)</title><rect x="98.5191%" y="1685" width="0.0130%" height="15" fill="rgb(229,97,0)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (14 samples, 0.01%)</title><rect x="98.5191%" y="1669" width="0.0130%" height="15" fill="rgb(206,56,49)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (14 samples, 0.01%)</title><rect x="98.5191%" y="1653" width="0.0130%" height="15" fill="rgb(208,216,41)" fg:x="105778" fg:w="14"/><text x="98.7691%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="98.5322%" y="1765" width="0.0261%" height="15" fill="rgb(231,31,6)" fg:x="105792" fg:w="28"/><text x="98.7822%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.03%)</title><rect x="98.5331%" y="1749" width="0.0251%" height="15" fill="rgb(239,88,23)" fg:x="105793" fg:w="27"/><text x="98.7831%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.03%)</title><rect x="98.5331%" y="1733" width="0.0251%" height="15" fill="rgb(227,111,45)" fg:x="105793" fg:w="27"/><text x="98.7831%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.03%)</title><rect x="98.5331%" y="1717" width="0.0251%" height="15" fill="rgb(207,167,18)" fg:x="105793" fg:w="27"/><text x="98.7831%" y="1727.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.03%)</title><rect x="98.5331%" y="1701" width="0.0251%" height="15" fill="rgb(253,127,17)" fg:x="105793" fg:w="27"/><text x="98.7831%" y="1711.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.03%)</title><rect x="98.5331%" y="1685" width="0.0251%" height="15" fill="rgb(211,229,9)" fg:x="105793" fg:w="27"/><text x="98.7831%" y="1695.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="98.5331%" y="1669" width="0.0251%" height="15" fill="rgb(249,25,14)" fg:x="105793" fg:w="27"/><text x="98.7831%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="98.5722%" y="1717" width="0.0149%" height="15" fill="rgb(237,177,4)" fg:x="105835" fg:w="16"/><text x="98.8222%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="98.5731%" y="1701" width="0.0140%" height="15" fill="rgb(248,163,50)" fg:x="105836" fg:w="15"/><text x="98.8231%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="98.5731%" y="1685" width="0.0140%" height="15" fill="rgb(246,67,42)" fg:x="105836" fg:w="15"/><text x="98.8231%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="98.5731%" y="1669" width="0.0140%" height="15" fill="rgb(228,136,45)" fg:x="105836" fg:w="15"/><text x="98.8231%" y="1679.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.01%)</title><rect x="98.5731%" y="1653" width="0.0140%" height="15" fill="rgb(218,93,4)" fg:x="105836" fg:w="15"/><text x="98.8231%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="98.5731%" y="1637" width="0.0140%" height="15" fill="rgb(209,82,29)" fg:x="105836" fg:w="15"/><text x="98.8231%" y="1647.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="98.5731%" y="1621" width="0.0140%" height="15" fill="rgb(213,219,38)" fg:x="105836" fg:w="15"/><text x="98.8231%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="98.5582%" y="1765" width="0.0298%" height="15" fill="rgb(233,212,17)" fg:x="105820" fg:w="32"/><text x="98.8082%" y="1775.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="98.5592%" y="1749" width="0.0289%" height="15" fill="rgb(225,65,3)" fg:x="105821" fg:w="31"/><text x="98.8092%" y="1759.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="98.5722%" y="1733" width="0.0158%" height="15" fill="rgb(226,25,1)" fg:x="105835" fg:w="17"/><text x="98.8222%" y="1743.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.01%)</title><rect x="98.5927%" y="1717" width="0.0121%" height="15" fill="rgb(229,83,27)" fg:x="105857" fg:w="13"/><text x="98.8427%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.01%)</title><rect x="98.5927%" y="1701" width="0.0121%" height="15" fill="rgb(245,80,47)" fg:x="105857" fg:w="13"/><text x="98.8427%" y="1711.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (48 samples, 0.04%)</title><rect x="98.6048%" y="1653" width="0.0447%" height="15" fill="rgb(213,79,27)" fg:x="105870" fg:w="48"/><text x="98.8548%" y="1663.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="98.6048%" y="1637" width="0.0447%" height="15" fill="rgb(232,38,28)" fg:x="105870" fg:w="48"/><text x="98.8548%" y="1647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (48 samples, 0.04%)</title><rect x="98.6048%" y="1621" width="0.0447%" height="15" fill="rgb(253,63,39)" fg:x="105870" fg:w="48"/><text x="98.8548%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="98.6048%" y="1605" width="0.0447%" height="15" fill="rgb(222,204,17)" fg:x="105870" fg:w="48"/><text x="98.8548%" y="1615.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="98.6290%" y="1589" width="0.0205%" height="15" fill="rgb(254,135,49)" fg:x="105896" fg:w="22"/><text x="98.8790%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (50 samples, 0.05%)</title><rect x="98.6048%" y="1669" width="0.0466%" height="15" fill="rgb(226,203,24)" fg:x="105870" fg:w="50"/><text x="98.8548%" y="1679.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::set (92 samples, 0.09%)</title><rect x="98.5880%" y="1765" width="0.0857%" height="15" fill="rgb(225,2,17)" fg:x="105852" fg:w="92"/><text x="98.8380%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (92 samples, 0.09%)</title><rect x="98.5880%" y="1749" width="0.0857%" height="15" fill="rgb(234,135,43)" fg:x="105852" fg:w="92"/><text x="98.8380%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (92 samples, 0.09%)</title><rect x="98.5880%" y="1733" width="0.0857%" height="15" fill="rgb(224,14,46)" fg:x="105852" fg:w="92"/><text x="98.8380%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (74 samples, 0.07%)</title><rect x="98.6048%" y="1717" width="0.0689%" height="15" fill="rgb(206,42,0)" fg:x="105870" fg:w="74"/><text x="98.8548%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (74 samples, 0.07%)</title><rect x="98.6048%" y="1701" width="0.0689%" height="15" fill="rgb(244,38,23)" fg:x="105870" fg:w="74"/><text x="98.8548%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (74 samples, 0.07%)</title><rect x="98.6048%" y="1685" width="0.0689%" height="15" fill="rgb(230,25,21)" fg:x="105870" fg:w="74"/><text x="98.8548%" y="1695.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (24 samples, 0.02%)</title><rect x="98.6514%" y="1669" width="0.0224%" height="15" fill="rgb(252,217,28)" fg:x="105920" fg:w="24"/><text x="98.9014%" y="1679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (24 samples, 0.02%)</title><rect x="98.6514%" y="1653" width="0.0224%" height="15" fill="rgb(251,4,49)" fg:x="105920" fg:w="24"/><text x="98.9014%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.02%)</title><rect x="98.6514%" y="1637" width="0.0224%" height="15" fill="rgb(217,126,31)" fg:x="105920" fg:w="24"/><text x="98.9014%" y="1647.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_write_set (188 samples, 0.18%)</title><rect x="98.5033%" y="1781" width="0.1751%" height="15" fill="rgb(242,181,33)" fg:x="105761" fg:w="188"/><text x="98.7533%" y="1791.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_block (43 samples, 0.04%)</title><rect x="98.6830%" y="1749" width="0.0400%" height="15" fill="rgb(241,108,6)" fg:x="105954" fg:w="43"/><text x="98.9330%" y="1759.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel (43 samples, 0.04%)</title><rect x="98.6830%" y="1733" width="0.0400%" height="15" fill="rgb(238,87,39)" fg:x="105954" fg:w="43"/><text x="98.9330%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="98.7315%" y="1509" width="0.0158%" height="15" fill="rgb(244,101,49)" fg:x="106006" fg:w="17"/><text x="98.9815%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="98.7315%" y="1493" width="0.0158%" height="15" fill="rgb(211,43,42)" fg:x="106006" fg:w="17"/><text x="98.9815%" y="1503.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="98.7315%" y="1477" width="0.0158%" height="15" fill="rgb(210,93,2)" fg:x="106006" fg:w="17"/><text x="98.9815%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="98.7305%" y="1605" width="0.0214%" height="15" fill="rgb(242,149,32)" fg:x="106005" fg:w="23"/><text x="98.9805%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="98.7305%" y="1589" width="0.0214%" height="15" fill="rgb(228,1,6)" fg:x="106005" fg:w="23"/><text x="98.9805%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (23 samples, 0.02%)</title><rect x="98.7305%" y="1573" width="0.0214%" height="15" fill="rgb(221,0,20)" fg:x="106005" fg:w="23"/><text x="98.9805%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="98.7315%" y="1557" width="0.0205%" height="15" fill="rgb(230,39,32)" fg:x="106006" fg:w="22"/><text x="98.9815%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="98.7315%" y="1541" width="0.0205%" height="15" fill="rgb(240,89,38)" fg:x="106006" fg:w="22"/><text x="98.9815%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="98.7315%" y="1525" width="0.0205%" height="15" fill="rgb(208,221,23)" fg:x="106006" fg:w="22"/><text x="98.9815%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::Transaction&gt; (44 samples, 0.04%)</title><rect x="98.7240%" y="1685" width="0.0410%" height="15" fill="rgb(220,145,29)" fg:x="105998" fg:w="44"/><text x="98.9740%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (39 samples, 0.04%)</title><rect x="98.7287%" y="1669" width="0.0363%" height="15" fill="rgb(219,146,23)" fg:x="106003" fg:w="39"/><text x="98.9787%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (37 samples, 0.03%)</title><rect x="98.7305%" y="1653" width="0.0345%" height="15" fill="rgb(244,114,49)" fg:x="106005" fg:w="37"/><text x="98.9805%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (37 samples, 0.03%)</title><rect x="98.7305%" y="1637" width="0.0345%" height="15" fill="rgb(221,17,10)" fg:x="106005" fg:w="37"/><text x="98.9805%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (37 samples, 0.03%)</title><rect x="98.7305%" y="1621" width="0.0345%" height="15" fill="rgb(228,133,21)" fg:x="106005" fg:w="37"/><text x="98.9805%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="98.7240%" y="1717" width="0.0428%" height="15" fill="rgb(218,81,30)" fg:x="105998" fg:w="46"/><text x="98.9740%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::Transaction]&gt; (46 samples, 0.04%)</title><rect x="98.7240%" y="1701" width="0.0428%" height="15" fill="rgb(240,29,36)" fg:x="105998" fg:w="46"/><text x="98.9740%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::Transaction&gt;&gt; (84 samples, 0.08%)</title><rect x="98.7240%" y="1749" width="0.0782%" height="15" fill="rgb(246,0,36)" fg:x="105998" fg:w="84"/><text x="98.9740%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::Transaction&gt;&gt; (84 samples, 0.08%)</title><rect x="98.7240%" y="1733" width="0.0782%" height="15" fill="rgb(217,79,8)" fg:x="105998" fg:w="84"/><text x="98.9740%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::Transaction&gt;&gt; (38 samples, 0.04%)</title><rect x="98.7669%" y="1717" width="0.0354%" height="15" fill="rgb(229,124,44)" fg:x="106044" fg:w="38"/><text x="99.0169%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="98.7669%" y="1701" width="0.0354%" height="15" fill="rgb(210,187,22)" fg:x="106044" fg:w="38"/><text x="99.0169%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.04%)</title><rect x="98.7669%" y="1685" width="0.0354%" height="15" fill="rgb(212,115,40)" fg:x="106044" fg:w="38"/><text x="99.0169%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.04%)</title><rect x="98.7669%" y="1669" width="0.0354%" height="15" fill="rgb(210,2,54)" fg:x="106044" fg:w="38"/><text x="99.0169%" y="1679.50"></text></g><g><title>cfree (38 samples, 0.04%)</title><rect x="98.7669%" y="1653" width="0.0354%" height="15" fill="rgb(227,168,43)" fg:x="106044" fg:w="38"/><text x="99.0169%" y="1663.50"></text></g><g><title>[libc.so.6] (38 samples, 0.04%)</title><rect x="98.7669%" y="1637" width="0.0354%" height="15" fill="rgb(249,92,8)" fg:x="106044" fg:w="38"/><text x="99.0169%" y="1647.50"></text></g><g><title>[libc.so.6] (38 samples, 0.04%)</title><rect x="98.7669%" y="1621" width="0.0354%" height="15" fill="rgb(239,111,35)" fg:x="106044" fg:w="38"/><text x="99.0169%" y="1631.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_transaction_block_parallel (139 samples, 0.13%)</title><rect x="98.6784%" y="1781" width="0.1295%" height="15" fill="rgb(230,126,13)" fg:x="105949" fg:w="139"/><text x="98.9284%" y="1791.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block (138 samples, 0.13%)</title><rect x="98.6793%" y="1765" width="0.1285%" height="15" fill="rgb(243,116,33)" fg:x="105950" fg:w="138"/><text x="98.9293%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="98.8097%" y="1573" width="0.0140%" height="15" fill="rgb(246,103,21)" fg:x="106090" fg:w="15"/><text x="99.0597%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="98.8116%" y="1557" width="0.0121%" height="15" fill="rgb(237,53,26)" fg:x="106092" fg:w="13"/><text x="99.0616%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="98.8116%" y="1541" width="0.0121%" height="15" fill="rgb(213,121,15)" fg:x="106092" fg:w="13"/><text x="99.0616%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="98.8116%" y="1525" width="0.0121%" height="15" fill="rgb(251,83,35)" fg:x="106092" fg:w="13"/><text x="99.0616%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="98.8097%" y="1637" width="0.0168%" height="15" fill="rgb(222,79,8)" fg:x="106090" fg:w="18"/><text x="99.0597%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="98.8097%" y="1621" width="0.0168%" height="15" fill="rgb(217,74,36)" fg:x="106090" fg:w="18"/><text x="99.0597%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="98.8097%" y="1605" width="0.0168%" height="15" fill="rgb(221,14,30)" fg:x="106090" fg:w="18"/><text x="99.0597%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="98.8097%" y="1589" width="0.0168%" height="15" fill="rgb(216,221,5)" fg:x="106090" fg:w="18"/><text x="99.0597%" y="1599.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="98.8088%" y="1685" width="0.0317%" height="15" fill="rgb(236,118,16)" fg:x="106089" fg:w="34"/><text x="99.0588%" y="1695.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="98.8088%" y="1669" width="0.0317%" height="15" fill="rgb(243,91,43)" fg:x="106089" fg:w="34"/><text x="99.0588%" y="1679.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="98.8088%" y="1653" width="0.0317%" height="15" fill="rgb(231,110,7)" fg:x="106089" fg:w="34"/><text x="99.0588%" y="1663.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="98.8078%" y="1701" width="0.0382%" height="15" fill="rgb(217,80,6)" fg:x="106088" fg:w="41"/><text x="99.0578%" y="1711.50"></text></g><g><title>aptos_types::transaction::TransactionRegister&lt;T&gt;::map_par_txns (42 samples, 0.04%)</title><rect x="98.8078%" y="1781" width="0.0391%" height="15" fill="rgb(251,116,7)" fg:x="106088" fg:w="42"/><text x="99.0578%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="98.8078%" y="1765" width="0.0391%" height="15" fill="rgb(236,70,22)" fg:x="106088" fg:w="42"/><text x="99.0578%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.04%)</title><rect x="98.8078%" y="1749" width="0.0391%" height="15" fill="rgb(245,13,10)" fg:x="106088" fg:w="42"/><text x="99.0578%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.04%)</title><rect x="98.8078%" y="1733" width="0.0391%" height="15" fill="rgb(233,146,34)" fg:x="106088" fg:w="42"/><text x="99.0578%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.04%)</title><rect x="98.8078%" y="1717" width="0.0391%" height="15" fill="rgb(241,196,34)" fg:x="106088" fg:w="42"/><text x="99.0578%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="98.8507%" y="1669" width="0.0102%" height="15" fill="rgb(207,150,20)" fg:x="106134" fg:w="11"/><text x="99.1007%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="98.8507%" y="1653" width="0.0102%" height="15" fill="rgb(251,27,52)" fg:x="106134" fg:w="11"/><text x="99.1007%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (11 samples, 0.01%)</title><rect x="98.8507%" y="1637" width="0.0102%" height="15" fill="rgb(221,76,2)" fg:x="106134" fg:w="11"/><text x="99.1007%" y="1647.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="98.8470%" y="1765" width="0.0400%" height="15" fill="rgb(242,94,41)" fg:x="106130" fg:w="43"/><text x="99.0970%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::SignedTransaction]&gt; (43 samples, 0.04%)</title><rect x="98.8470%" y="1749" width="0.0400%" height="15" fill="rgb(245,9,8)" fg:x="106130" fg:w="43"/><text x="99.0970%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (43 samples, 0.04%)</title><rect x="98.8470%" y="1733" width="0.0400%" height="15" fill="rgb(236,139,26)" fg:x="106130" fg:w="43"/><text x="99.0970%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (41 samples, 0.04%)</title><rect x="98.8488%" y="1717" width="0.0382%" height="15" fill="rgb(249,11,18)" fg:x="106132" fg:w="41"/><text x="99.0988%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (41 samples, 0.04%)</title><rect x="98.8488%" y="1701" width="0.0382%" height="15" fill="rgb(206,175,35)" fg:x="106132" fg:w="41"/><text x="99.0988%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (39 samples, 0.04%)</title><rect x="98.8507%" y="1685" width="0.0363%" height="15" fill="rgb(231,3,46)" fg:x="106134" fg:w="39"/><text x="99.1007%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (21 samples, 0.02%)</title><rect x="98.8674%" y="1669" width="0.0196%" height="15" fill="rgb(243,27,8)" fg:x="106152" fg:w="21"/><text x="99.1174%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (21 samples, 0.02%)</title><rect x="98.8674%" y="1653" width="0.0196%" height="15" fill="rgb(223,53,13)" fg:x="106152" fg:w="21"/><text x="99.1174%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (21 samples, 0.02%)</title><rect x="98.8674%" y="1637" width="0.0196%" height="15" fill="rgb(248,68,15)" fg:x="106152" fg:w="21"/><text x="99.1174%" y="1647.50"></text></g><g><title>alloc::alloc::box_free (21 samples, 0.02%)</title><rect x="98.8674%" y="1621" width="0.0196%" height="15" fill="rgb(216,61,26)" fg:x="106152" fg:w="21"/><text x="99.1174%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="98.8674%" y="1605" width="0.0196%" height="15" fill="rgb(213,201,24)" fg:x="106152" fg:w="21"/><text x="99.1174%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="98.8684%" y="1589" width="0.0186%" height="15" fill="rgb(214,20,17)" fg:x="106153" fg:w="20"/><text x="99.1184%" y="1599.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="98.8684%" y="1573" width="0.0186%" height="15" fill="rgb(206,21,46)" fg:x="106153" fg:w="20"/><text x="99.1184%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (65 samples, 0.06%)</title><rect x="98.8470%" y="1781" width="0.0605%" height="15" fill="rgb(234,222,24)" fg:x="106130" fg:w="65"/><text x="99.0970%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (22 samples, 0.02%)</title><rect x="98.8870%" y="1765" width="0.0205%" height="15" fill="rgb(221,25,26)" fg:x="106173" fg:w="22"/><text x="99.1370%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="98.8870%" y="1749" width="0.0205%" height="15" fill="rgb(241,148,26)" fg:x="106173" fg:w="22"/><text x="99.1370%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="98.8870%" y="1733" width="0.0205%" height="15" fill="rgb(248,119,35)" fg:x="106173" fg:w="22"/><text x="99.1370%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="98.8870%" y="1717" width="0.0205%" height="15" fill="rgb(239,126,23)" fg:x="106173" fg:w="22"/><text x="99.1370%" y="1727.50"></text></g><g><title>cfree (22 samples, 0.02%)</title><rect x="98.8870%" y="1701" width="0.0205%" height="15" fill="rgb(247,120,25)" fg:x="106173" fg:w="22"/><text x="99.1370%" y="1711.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="98.8870%" y="1685" width="0.0205%" height="15" fill="rgb(220,93,32)" fg:x="106173" fg:w="22"/><text x="99.1370%" y="1695.50"></text></g><g><title>[libc.so.6] (22 samples, 0.02%)</title><rect x="98.8870%" y="1669" width="0.0205%" height="15" fill="rgb(236,46,26)" fg:x="106173" fg:w="22"/><text x="99.1370%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;aptos_types::transaction::TransactionOutput&gt;&gt; (25 samples, 0.02%)</title><rect x="98.9075%" y="1781" width="0.0233%" height="15" fill="rgb(229,20,45)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1791.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="98.9075%" y="1765" width="0.0233%" height="15" fill="rgb(225,168,41)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;aptos_types::transaction::TransactionOutput,alloc::alloc::Global&gt;&gt; (25 samples, 0.02%)</title><rect x="98.9075%" y="1749" width="0.0233%" height="15" fill="rgb(253,123,20)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1759.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="98.9075%" y="1733" width="0.0233%" height="15" fill="rgb(244,17,29)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::TransactionOutput&gt;&gt; (25 samples, 0.02%)</title><rect x="98.9075%" y="1717" width="0.0233%" height="15" fill="rgb(242,196,24)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="98.9075%" y="1701" width="0.0233%" height="15" fill="rgb(210,113,45)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="98.9075%" y="1685" width="0.0233%" height="15" fill="rgb(205,129,3)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="98.9075%" y="1669" width="0.0233%" height="15" fill="rgb(232,74,10)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1679.50"></text></g><g><title>cfree (25 samples, 0.02%)</title><rect x="98.9075%" y="1653" width="0.0233%" height="15" fill="rgb(251,63,43)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1663.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="98.9075%" y="1637" width="0.0233%" height="15" fill="rgb(228,215,15)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1647.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="98.9075%" y="1621" width="0.0233%" height="15" fill="rgb(233,179,38)" fg:x="106195" fg:w="25"/><text x="99.1575%" y="1631.50"></text></g><g><title>[libc.so.6] (38 samples, 0.04%)</title><rect x="98.9308%" y="1525" width="0.0354%" height="15" fill="rgb(227,187,9)" fg:x="106220" fg:w="38"/><text x="99.1808%" y="1535.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="98.9466%" y="1509" width="0.0196%" height="15" fill="rgb(231,89,27)" fg:x="106237" fg:w="21"/><text x="99.1966%" y="1519.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (42 samples, 0.04%)</title><rect x="98.9308%" y="1621" width="0.0391%" height="15" fill="rgb(225,117,1)" fg:x="106220" fg:w="42"/><text x="99.1808%" y="1631.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (42 samples, 0.04%)</title><rect x="98.9308%" y="1605" width="0.0391%" height="15" fill="rgb(239,120,49)" fg:x="106220" fg:w="42"/><text x="99.1808%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (42 samples, 0.04%)</title><rect x="98.9308%" y="1589" width="0.0391%" height="15" fill="rgb(236,137,37)" fg:x="106220" fg:w="42"/><text x="99.1808%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.04%)</title><rect x="98.9308%" y="1573" width="0.0391%" height="15" fill="rgb(239,73,42)" fg:x="106220" fg:w="42"/><text x="99.1808%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.04%)</title><rect x="98.9308%" y="1557" width="0.0391%" height="15" fill="rgb(207,169,6)" fg:x="106220" fg:w="42"/><text x="99.1808%" y="1567.50"></text></g><g><title>cfree (42 samples, 0.04%)</title><rect x="98.9308%" y="1541" width="0.0391%" height="15" fill="rgb(228,171,10)" fg:x="106220" fg:w="42"/><text x="99.1808%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (43 samples, 0.04%)</title><rect x="98.9308%" y="1637" width="0.0400%" height="15" fill="rgb(217,228,47)" fg:x="106220" fg:w="43"/><text x="99.1808%" y="1647.50"></text></g><g><title>[libc.so.6] (32 samples, 0.03%)</title><rect x="98.9811%" y="1525" width="0.0298%" height="15" fill="rgb(227,116,17)" fg:x="106274" fg:w="32"/><text x="99.2311%" y="1535.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (44 samples, 0.04%)</title><rect x="98.9708%" y="1621" width="0.0410%" height="15" fill="rgb(245,128,36)" fg:x="106263" fg:w="44"/><text x="99.2208%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (35 samples, 0.03%)</title><rect x="98.9792%" y="1605" width="0.0326%" height="15" fill="rgb(221,139,3)" fg:x="106272" fg:w="35"/><text x="99.2292%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="98.9792%" y="1589" width="0.0326%" height="15" fill="rgb(207,59,54)" fg:x="106272" fg:w="35"/><text x="99.2292%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 0.03%)</title><rect x="98.9792%" y="1573" width="0.0326%" height="15" fill="rgb(231,129,12)" fg:x="106272" fg:w="35"/><text x="99.2292%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (35 samples, 0.03%)</title><rect x="98.9792%" y="1557" width="0.0326%" height="15" fill="rgb(235,49,17)" fg:x="106272" fg:w="35"/><text x="99.2292%" y="1567.50"></text></g><g><title>cfree (35 samples, 0.03%)</title><rect x="98.9792%" y="1541" width="0.0326%" height="15" fill="rgb(229,175,11)" fg:x="106272" fg:w="35"/><text x="99.2292%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionOutput&gt; (88 samples, 0.08%)</title><rect x="98.9308%" y="1781" width="0.0820%" height="15" fill="rgb(206,187,30)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (88 samples, 0.08%)</title><rect x="98.9308%" y="1765" width="0.0820%" height="15" fill="rgb(214,39,19)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (88 samples, 0.08%)</title><rect x="98.9308%" y="1749" width="0.0820%" height="15" fill="rgb(243,92,46)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (88 samples, 0.08%)</title><rect x="98.9308%" y="1733" width="0.0820%" height="15" fill="rgb(240,125,36)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (88 samples, 0.08%)</title><rect x="98.9308%" y="1717" width="0.0820%" height="15" fill="rgb(217,193,45)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.08%)</title><rect x="98.9308%" y="1701" width="0.0820%" height="15" fill="rgb(230,127,16)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1711.50"></text></g><g><title>core::mem::drop (88 samples, 0.08%)</title><rect x="98.9308%" y="1685" width="0.0820%" height="15" fill="rgb(208,161,0)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (88 samples, 0.08%)</title><rect x="98.9308%" y="1669" width="0.0820%" height="15" fill="rgb(251,69,39)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.08%)</title><rect x="98.9308%" y="1653" width="0.0820%" height="15" fill="rgb(229,86,22)" fg:x="106220" fg:w="88"/><text x="99.1808%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (45 samples, 0.04%)</title><rect x="98.9708%" y="1637" width="0.0419%" height="15" fill="rgb(223,67,43)" fg:x="106263" fg:w="45"/><text x="99.2208%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="99.0183%" y="1557" width="0.0140%" height="15" fill="rgb(254,80,31)" fg:x="106314" fg:w="15"/><text x="99.2683%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="99.0183%" y="1541" width="0.0140%" height="15" fill="rgb(225,149,52)" fg:x="106314" fg:w="15"/><text x="99.2683%" y="1551.50"></text></g><g><title>cfree (14 samples, 0.01%)</title><rect x="99.0193%" y="1525" width="0.0130%" height="15" fill="rgb(214,169,18)" fg:x="106315" fg:w="14"/><text x="99.2693%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="99.0183%" y="1653" width="0.0158%" height="15" fill="rgb(236,224,43)" fg:x="106314" fg:w="17"/><text x="99.2683%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="99.0183%" y="1637" width="0.0158%" height="15" fill="rgb(251,125,34)" fg:x="106314" fg:w="17"/><text x="99.2683%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (17 samples, 0.02%)</title><rect x="99.0183%" y="1621" width="0.0158%" height="15" fill="rgb(224,39,44)" fg:x="106314" fg:w="17"/><text x="99.2683%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="99.0183%" y="1605" width="0.0158%" height="15" fill="rgb(206,111,46)" fg:x="106314" fg:w="17"/><text x="99.2683%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="99.0183%" y="1589" width="0.0158%" height="15" fill="rgb(227,147,50)" fg:x="106314" fg:w="17"/><text x="99.2683%" y="1599.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="99.0183%" y="1573" width="0.0158%" height="15" fill="rgb(239,144,36)" fg:x="106314" fg:w="17"/><text x="99.2683%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (30 samples, 0.03%)</title><rect x="99.0155%" y="1701" width="0.0279%" height="15" fill="rgb(216,17,19)" fg:x="106311" fg:w="30"/><text x="99.2655%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (30 samples, 0.03%)</title><rect x="99.0155%" y="1685" width="0.0279%" height="15" fill="rgb(211,192,29)" fg:x="106311" fg:w="30"/><text x="99.2655%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (27 samples, 0.03%)</title><rect x="99.0183%" y="1669" width="0.0251%" height="15" fill="rgb(238,195,20)" fg:x="106314" fg:w="27"/><text x="99.2683%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="99.0127%" y="1749" width="0.0335%" height="15" fill="rgb(213,210,42)" fg:x="106308" fg:w="36"/><text x="99.2627%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::SignedTransaction]&gt; (36 samples, 0.03%)</title><rect x="99.0127%" y="1733" width="0.0335%" height="15" fill="rgb(244,4,49)" fg:x="106308" fg:w="36"/><text x="99.2627%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (35 samples, 0.03%)</title><rect x="99.0137%" y="1717" width="0.0326%" height="15" fill="rgb(254,106,42)" fg:x="106309" fg:w="35"/><text x="99.2637%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (80 samples, 0.07%)</title><rect x="99.0127%" y="1781" width="0.0745%" height="15" fill="rgb(222,182,12)" fg:x="106308" fg:w="80"/><text x="99.2627%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (80 samples, 0.07%)</title><rect x="99.0127%" y="1765" width="0.0745%" height="15" fill="rgb(228,160,15)" fg:x="106308" fg:w="80"/><text x="99.2627%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (44 samples, 0.04%)</title><rect x="99.0463%" y="1749" width="0.0410%" height="15" fill="rgb(243,149,43)" fg:x="106344" fg:w="44"/><text x="99.2963%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="99.0463%" y="1733" width="0.0410%" height="15" fill="rgb(245,150,32)" fg:x="106344" fg:w="44"/><text x="99.2963%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (44 samples, 0.04%)</title><rect x="99.0463%" y="1717" width="0.0410%" height="15" fill="rgb(205,43,19)" fg:x="106344" fg:w="44"/><text x="99.2963%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (44 samples, 0.04%)</title><rect x="99.0463%" y="1701" width="0.0410%" height="15" fill="rgb(249,189,35)" fg:x="106344" fg:w="44"/><text x="99.2963%" y="1711.50"></text></g><g><title>cfree (44 samples, 0.04%)</title><rect x="99.0463%" y="1685" width="0.0410%" height="15" fill="rgb(223,9,0)" fg:x="106344" fg:w="44"/><text x="99.2963%" y="1695.50"></text></g><g><title>[libc.so.6] (44 samples, 0.04%)</title><rect x="99.0463%" y="1669" width="0.0410%" height="15" fill="rgb(213,142,45)" fg:x="106344" fg:w="44"/><text x="99.2963%" y="1679.50"></text></g><g><title>[libc.so.6] (44 samples, 0.04%)</title><rect x="99.0463%" y="1653" width="0.0410%" height="15" fill="rgb(208,148,2)" fg:x="106344" fg:w="44"/><text x="99.2963%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (18 samples, 0.02%)</title><rect x="99.0910%" y="1685" width="0.0168%" height="15" fill="rgb(207,191,42)" fg:x="106392" fg:w="18"/><text x="99.3410%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (18 samples, 0.02%)</title><rect x="99.0910%" y="1669" width="0.0168%" height="15" fill="rgb(215,218,38)" fg:x="106392" fg:w="18"/><text x="99.3410%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (18 samples, 0.02%)</title><rect x="99.0910%" y="1653" width="0.0168%" height="15" fill="rgb(223,195,24)" fg:x="106392" fg:w="18"/><text x="99.3410%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="99.0873%" y="1749" width="0.0224%" height="15" fill="rgb(254,60,30)" fg:x="106388" fg:w="24"/><text x="99.3373%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::Transaction]&gt; (24 samples, 0.02%)</title><rect x="99.0873%" y="1733" width="0.0224%" height="15" fill="rgb(223,2,9)" fg:x="106388" fg:w="24"/><text x="99.3373%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::Transaction&gt; (24 samples, 0.02%)</title><rect x="99.0873%" y="1717" width="0.0224%" height="15" fill="rgb(253,134,46)" fg:x="106388" fg:w="24"/><text x="99.3373%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (21 samples, 0.02%)</title><rect x="99.0900%" y="1701" width="0.0196%" height="15" fill="rgb(206,209,20)" fg:x="106391" fg:w="21"/><text x="99.3400%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::Transaction&gt;&gt; (42 samples, 0.04%)</title><rect x="99.0873%" y="1781" width="0.0391%" height="15" fill="rgb(253,104,42)" fg:x="106388" fg:w="42"/><text x="99.3373%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::Transaction&gt;&gt; (42 samples, 0.04%)</title><rect x="99.0873%" y="1765" width="0.0391%" height="15" fill="rgb(223,47,23)" fg:x="106388" fg:w="42"/><text x="99.3373%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::Transaction&gt;&gt; (18 samples, 0.02%)</title><rect x="99.1096%" y="1749" width="0.0168%" height="15" fill="rgb(247,148,44)" fg:x="106412" fg:w="18"/><text x="99.3596%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="99.1096%" y="1733" width="0.0168%" height="15" fill="rgb(221,224,16)" fg:x="106412" fg:w="18"/><text x="99.3596%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="99.1096%" y="1717" width="0.0168%" height="15" fill="rgb(252,103,29)" fg:x="106412" fg:w="18"/><text x="99.3596%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="99.1096%" y="1701" width="0.0168%" height="15" fill="rgb(244,185,34)" fg:x="106412" fg:w="18"/><text x="99.3596%" y="1711.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="99.1096%" y="1685" width="0.0168%" height="15" fill="rgb(218,18,50)" fg:x="106412" fg:w="18"/><text x="99.3596%" y="1695.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="99.1096%" y="1669" width="0.0168%" height="15" fill="rgb(234,105,8)" fg:x="106412" fg:w="18"/><text x="99.3596%" y="1679.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="99.1096%" y="1653" width="0.0168%" height="15" fill="rgb(249,51,19)" fg:x="106412" fg:w="18"/><text x="99.3596%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="99.1320%" y="1733" width="0.0130%" height="15" fill="rgb(233,132,7)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="99.1320%" y="1717" width="0.0130%" height="15" fill="rgb(229,181,43)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="99.1320%" y="1701" width="0.0130%" height="15" fill="rgb(223,20,7)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.01%)</title><rect x="99.1320%" y="1685" width="0.0130%" height="15" fill="rgb(245,13,34)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1695.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.01%)</title><rect x="99.1320%" y="1669" width="0.0130%" height="15" fill="rgb(242,0,53)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1679.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.01%)</title><rect x="99.1320%" y="1653" width="0.0130%" height="15" fill="rgb(233,115,19)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1663.50"></text></g><g><title>realloc (14 samples, 0.01%)</title><rect x="99.1320%" y="1637" width="0.0130%" height="15" fill="rgb(216,170,26)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1647.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="99.1320%" y="1621" width="0.0130%" height="15" fill="rgb(233,13,0)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1631.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="99.1320%" y="1605" width="0.0130%" height="15" fill="rgb(228,79,21)" fg:x="106436" fg:w="14"/><text x="99.3820%" y="1615.50"></text></g><g><title>run_benchmark::get_transaction_register (28 samples, 0.03%)</title><rect x="99.1264%" y="1781" width="0.0261%" height="15" fill="rgb(244,17,41)" fg:x="106430" fg:w="28"/><text x="99.3764%" y="1791.50"></text></g><g><title>&lt;aptos_mempool::core_mempool::filler::SimpleFiller as aptos_mempool::core_mempool::filler::BlockFiller&gt;::add_all (28 samples, 0.03%)</title><rect x="99.1264%" y="1765" width="0.0261%" height="15" fill="rgb(253,152,11)" fg:x="106430" fg:w="28"/><text x="99.3764%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="99.1320%" y="1749" width="0.0205%" height="15" fill="rgb(254,94,47)" fg:x="106436" fg:w="22"/><text x="99.3820%" y="1759.50"></text></g><g><title>run_benchmark::runExperimentWithSetting (1,041 samples, 0.97%)</title><rect x="98.1838%" y="1797" width="0.9696%" height="15" fill="rgb(239,66,43)" fg:x="105418" fg:w="1041"/><text x="98.4338%" y="1807.50"></text></g><g><title>_start (6,525 samples, 6.08%)</title><rect x="93.0892%" y="2069" width="6.0772%" height="15" fill="rgb(251,25,22)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="2079.50">_start</text></g><g><title>__libc_start_main (6,525 samples, 6.08%)</title><rect x="93.0892%" y="2053" width="6.0772%" height="15" fill="rgb(227,65,46)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="2063.50">__libc_s..</text></g><g><title>[libc.so.6] (6,525 samples, 6.08%)</title><rect x="93.0892%" y="2037" width="6.0772%" height="15" fill="rgb(240,180,32)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="2047.50">[libc.so..</text></g><g><title>main (6,525 samples, 6.08%)</title><rect x="93.0892%" y="2021" width="6.0772%" height="15" fill="rgb(242,11,35)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="2031.50">main</text></g><g><title>std::rt::lang_start_internal (6,525 samples, 6.08%)</title><rect x="93.0892%" y="2005" width="6.0772%" height="15" fill="rgb(221,41,49)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="2015.50">std::rt:..</text></g><g><title>std::panic::catch_unwind (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1989" width="6.0772%" height="15" fill="rgb(253,80,52)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1999.50">std::pan..</text></g><g><title>std::panicking::try (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1973" width="6.0772%" height="15" fill="rgb(232,152,28)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1983.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1957" width="6.0772%" height="15" fill="rgb(219,110,12)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1967.50">std::pan..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1941" width="6.0772%" height="15" fill="rgb(218,98,43)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1951.50">std::rt:..</text></g><g><title>std::panic::catch_unwind (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1925" width="6.0772%" height="15" fill="rgb(253,96,49)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1935.50">std::pan..</text></g><g><title>std::panicking::try (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1909" width="6.0772%" height="15" fill="rgb(238,132,17)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1919.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1893" width="6.0772%" height="15" fill="rgb(208,82,25)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1903.50">std::pan..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1877" width="6.0772%" height="15" fill="rgb(237,77,13)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1887.50">core::op..</text></g><g><title>std::rt::lang_start::{{closure}} (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1861" width="6.0772%" height="15" fill="rgb(230,6,11)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1871.50">std::rt:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1845" width="6.0772%" height="15" fill="rgb(207,29,48)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1855.50">std::sys..</text></g><g><title>core::ops::function::FnOnce::call_once (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1829" width="6.0772%" height="15" fill="rgb(247,105,22)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1839.50">core::op..</text></g><g><title>run_benchmark::main (6,525 samples, 6.08%)</title><rect x="93.0892%" y="1813" width="6.0772%" height="15" fill="rgb(223,114,44)" fg:x="99948" fg:w="6525"/><text x="93.3392%" y="1823.50">run_benc..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.01%)</title><rect x="99.1534%" y="1797" width="0.0130%" height="15" fill="rgb(242,3,46)" fg:x="106459" fg:w="14"/><text x="99.4034%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.01%)</title><rect x="99.1534%" y="1781" width="0.0130%" height="15" fill="rgb(243,197,8)" fg:x="106459" fg:w="14"/><text x="99.4034%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="99.1776%" y="2069" width="0.0130%" height="15" fill="rgb(238,171,27)" fg:x="106485" fg:w="14"/><text x="99.4276%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.01%)</title><rect x="99.1776%" y="2053" width="0.0130%" height="15" fill="rgb(254,144,27)" fg:x="106485" fg:w="14"/><text x="99.4276%" y="2063.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.01%)</title><rect x="99.1776%" y="2037" width="0.0130%" height="15" fill="rgb(216,203,36)" fg:x="106485" fg:w="14"/><text x="99.4276%" y="2047.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.01%)</title><rect x="99.1776%" y="2021" width="0.0130%" height="15" fill="rgb(247,27,26)" fg:x="106485" fg:w="14"/><text x="99.4276%" y="2031.50"></text></g><g><title>realloc (14 samples, 0.01%)</title><rect x="99.1776%" y="2005" width="0.0130%" height="15" fill="rgb(234,180,24)" fg:x="106485" fg:w="14"/><text x="99.4276%" y="2015.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (21 samples, 0.02%)</title><rect x="99.2325%" y="2069" width="0.0196%" height="15" fill="rgb(221,50,43)" fg:x="106544" fg:w="21"/><text x="99.4825%" y="2079.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (17 samples, 0.02%)</title><rect x="99.2922%" y="2069" width="0.0158%" height="15" fill="rgb(236,50,6)" fg:x="106608" fg:w="17"/><text x="99.5422%" y="2079.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (20 samples, 0.02%)</title><rect x="99.3080%" y="2069" width="0.0186%" height="15" fill="rgb(245,172,32)" fg:x="106625" fg:w="20"/><text x="99.5580%" y="2079.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (20 samples, 0.02%)</title><rect x="99.3080%" y="2053" width="0.0186%" height="15" fill="rgb(207,54,46)" fg:x="106625" fg:w="20"/><text x="99.5580%" y="2063.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (20 samples, 0.02%)</title><rect x="99.3080%" y="2037" width="0.0186%" height="15" fill="rgb(218,67,44)" fg:x="106625" fg:w="20"/><text x="99.5580%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::debt::list::NodeReservation&gt; (11 samples, 0.01%)</title><rect x="99.3164%" y="2021" width="0.0102%" height="15" fill="rgb(208,152,22)" fg:x="106634" fg:w="11"/><text x="99.5664%" y="2031.50"></text></g><g><title>&lt;arc_swap::debt::list::NodeReservation as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="99.3164%" y="2005" width="0.0102%" height="15" fill="rgb(243,177,0)" fg:x="106634" fg:w="11"/><text x="99.5664%" y="2015.50"></text></g><g><title>bcs::de::from_bytes (18 samples, 0.02%)</title><rect x="99.3322%" y="2069" width="0.0168%" height="15" fill="rgb(212,75,12)" fg:x="106651" fg:w="18"/><text x="99.5822%" y="2079.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="99.3611%" y="2021" width="0.0102%" height="15" fill="rgb(212,129,29)" fg:x="106682" fg:w="11"/><text x="99.6111%" y="2031.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="99.3611%" y="2005" width="0.0102%" height="15" fill="rgb(241,229,35)" fg:x="106682" fg:w="11"/><text x="99.6111%" y="2015.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="99.3611%" y="1989" width="0.0102%" height="15" fill="rgb(232,49,32)" fg:x="106682" fg:w="11"/><text x="99.6111%" y="1999.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="99.3611%" y="2037" width="0.0168%" height="15" fill="rgb(243,119,48)" fg:x="106682" fg:w="18"/><text x="99.6111%" y="2047.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 0.03%)</title><rect x="99.3574%" y="2069" width="0.0298%" height="15" fill="rgb(212,205,30)" fg:x="106678" fg:w="32"/><text x="99.6074%" y="2079.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="99.3574%" y="2053" width="0.0298%" height="15" fill="rgb(218,175,42)" fg:x="106678" fg:w="32"/><text x="99.6074%" y="2063.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (12 samples, 0.01%)</title><rect x="99.4291%" y="2053" width="0.0112%" height="15" fill="rgb(230,156,27)" fg:x="106755" fg:w="12"/><text x="99.6791%" y="2063.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (33 samples, 0.03%)</title><rect x="99.4281%" y="2069" width="0.0307%" height="15" fill="rgb(254,32,43)" fg:x="106754" fg:w="33"/><text x="99.6781%" y="2079.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (20 samples, 0.02%)</title><rect x="99.4402%" y="2053" width="0.0186%" height="15" fill="rgb(246,89,34)" fg:x="106767" fg:w="20"/><text x="99.6902%" y="2063.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="99.4402%" y="2037" width="0.0186%" height="15" fill="rgb(247,162,17)" fg:x="106767" fg:w="20"/><text x="99.6902%" y="2047.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (20 samples, 0.02%)</title><rect x="99.4402%" y="2021" width="0.0186%" height="15" fill="rgb(219,71,37)" fg:x="106767" fg:w="20"/><text x="99.6902%" y="2031.50"></text></g><g><title>subtle::black_box (20 samples, 0.02%)</title><rect x="99.4402%" y="2005" width="0.0186%" height="15" fill="rgb(210,184,7)" fg:x="106767" fg:w="20"/><text x="99.6902%" y="2015.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (52 samples, 0.05%)</title><rect x="99.5250%" y="2053" width="0.0484%" height="15" fill="rgb(245,16,32)" fg:x="106858" fg:w="52"/><text x="99.7750%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (16 samples, 0.01%)</title><rect x="99.5827%" y="2053" width="0.0149%" height="15" fill="rgb(209,62,7)" fg:x="106920" fg:w="16"/><text x="99.8327%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (53 samples, 0.05%)</title><rect x="99.5976%" y="2053" width="0.0494%" height="15" fill="rgb(215,16,15)" fg:x="106936" fg:w="53"/><text x="99.8476%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (25 samples, 0.02%)</title><rect x="99.6517%" y="2053" width="0.0233%" height="15" fill="rgb(223,60,14)" fg:x="106994" fg:w="25"/><text x="99.9017%" y="2063.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (43 samples, 0.04%)</title><rect x="99.6833%" y="2053" width="0.0400%" height="15" fill="rgb(244,134,12)" fg:x="107028" fg:w="43"/><text x="99.9333%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (230 samples, 0.21%)</title><rect x="99.5203%" y="2069" width="0.2142%" height="15" fill="rgb(224,3,41)" fg:x="106853" fg:w="230"/><text x="99.7703%" y="2079.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::has_copy (13 samples, 0.01%)</title><rect x="99.7560%" y="2053" width="0.0121%" height="15" fill="rgb(213,84,2)" fg:x="107106" fg:w="13"/><text x="100.0060%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (13 samples, 0.01%)</title><rect x="99.7765%" y="2053" width="0.0121%" height="15" fill="rgb(213,216,27)" fg:x="107128" fg:w="13"/><text x="100.0265%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (64 samples, 0.06%)</title><rect x="99.7346%" y="2069" width="0.0596%" height="15" fill="rgb(218,76,35)" fg:x="107083" fg:w="64"/><text x="99.9846%" y="2079.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (14 samples, 0.01%)</title><rect x="99.8193%" y="2069" width="0.0130%" height="15" fill="rgb(253,89,24)" fg:x="107174" fg:w="14"/><text x="100.0693%" y="2079.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (14 samples, 0.01%)</title><rect x="99.8193%" y="2053" width="0.0130%" height="15" fill="rgb(217,188,40)" fg:x="107174" fg:w="14"/><text x="100.0693%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (60 samples, 0.06%)</title><rect x="99.8361%" y="2053" width="0.0559%" height="15" fill="rgb(237,79,38)" fg:x="107192" fg:w="60"/><text x="100.0861%" y="2063.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (62 samples, 0.06%)</title><rect x="99.8361%" y="2069" width="0.0577%" height="15" fill="rgb(215,116,13)" fg:x="107192" fg:w="62"/><text x="100.0861%" y="2079.50"></text></g><g><title>all (107,368 samples, 100%)</title><rect x="0.0000%" y="2101" width="100.0000%" height="15" fill="rgb(249,66,35)" fg:x="0" fg:w="107368"/><text x="0.2500%" y="2111.50"></text></g><g><title>run_benchmark-b (107,368 samples, 100.00%)</title><rect x="0.0000%" y="2085" width="100.0000%" height="15" fill="rgb(253,86,18)" fg:x="0" fg:w="107368"/><text x="0.2500%" y="2095.50">run_benchmark-b</text></g></svg></svg>