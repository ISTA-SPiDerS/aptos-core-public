<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2102" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2085.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="2085.00"> </text><svg id="frames" x="10" width="1180" total_samples="77012"><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (8 samples, 0.01%)</title><rect x="0.0026%" y="2021" width="0.0104%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="8"/><text x="0.2526%" y="2031.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (26 samples, 0.03%)</title><rect x="0.0195%" y="2005" width="0.0338%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="26"/><text x="0.2695%" y="2015.50"></text></g><g><title>bcs::de::Deserializer::leave_named_container (10 samples, 0.01%)</title><rect x="0.0532%" y="2005" width="0.0130%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="10"/><text x="0.3032%" y="2015.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (44 samples, 0.06%)</title><rect x="0.0130%" y="2021" width="0.0571%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="44"/><text x="0.2630%" y="2031.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (115 samples, 0.15%)</title><rect x="0.0701%" y="2005" width="0.1493%" height="15" fill="rgb(208,68,35)" fg:x="54" fg:w="115"/><text x="0.3201%" y="2015.50"></text></g><g><title>serde::de::SeqAccess::next_element (115 samples, 0.15%)</title><rect x="0.0701%" y="1989" width="0.1493%" height="15" fill="rgb(232,128,0)" fg:x="54" fg:w="115"/><text x="0.3201%" y="1999.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (115 samples, 0.15%)</title><rect x="0.0701%" y="1973" width="0.1493%" height="15" fill="rgb(207,160,47)" fg:x="54" fg:w="115"/><text x="0.3201%" y="1983.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (115 samples, 0.15%)</title><rect x="0.0701%" y="1957" width="0.1493%" height="15" fill="rgb(228,23,34)" fg:x="54" fg:w="115"/><text x="0.3201%" y="1967.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (115 samples, 0.15%)</title><rect x="0.0701%" y="1941" width="0.1493%" height="15" fill="rgb(218,30,26)" fg:x="54" fg:w="115"/><text x="0.3201%" y="1951.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (115 samples, 0.15%)</title><rect x="0.0701%" y="1925" width="0.1493%" height="15" fill="rgb(220,122,19)" fg:x="54" fg:w="115"/><text x="0.3201%" y="1935.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (115 samples, 0.15%)</title><rect x="0.0701%" y="1909" width="0.1493%" height="15" fill="rgb(250,228,42)" fg:x="54" fg:w="115"/><text x="0.3201%" y="1919.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (125 samples, 0.16%)</title><rect x="0.0701%" y="2021" width="0.1623%" height="15" fill="rgb(240,193,28)" fg:x="54" fg:w="125"/><text x="0.3201%" y="2031.50"></text></g><g><title>bcs::de::SeqDeserializer::new (10 samples, 0.01%)</title><rect x="0.2194%" y="2005" width="0.0130%" height="15" fill="rgb(216,20,37)" fg:x="169" fg:w="10"/><text x="0.4694%" y="2015.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (8 samples, 0.01%)</title><rect x="0.2805%" y="2021" width="0.0104%" height="15" fill="rgb(206,188,39)" fg:x="216" fg:w="8"/><text x="0.5305%" y="2031.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (8 samples, 0.01%)</title><rect x="0.2805%" y="2005" width="0.0104%" height="15" fill="rgb(217,207,13)" fg:x="216" fg:w="8"/><text x="0.5305%" y="2015.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::update (9 samples, 0.01%)</title><rect x="0.3090%" y="1909" width="0.0117%" height="15" fill="rgb(231,73,38)" fg:x="238" fg:w="9"/><text x="0.5590%" y="1919.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (44 samples, 0.06%)</title><rect x="0.3207%" y="1909" width="0.0571%" height="15" fill="rgb(225,20,46)" fg:x="247" fg:w="44"/><text x="0.5707%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (54 samples, 0.07%)</title><rect x="0.3090%" y="2021" width="0.0701%" height="15" fill="rgb(210,31,41)" fg:x="238" fg:w="54"/><text x="0.5590%" y="2031.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (54 samples, 0.07%)</title><rect x="0.3090%" y="2005" width="0.0701%" height="15" fill="rgb(221,200,47)" fg:x="238" fg:w="54"/><text x="0.5590%" y="2015.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (54 samples, 0.07%)</title><rect x="0.3090%" y="1989" width="0.0701%" height="15" fill="rgb(226,26,5)" fg:x="238" fg:w="54"/><text x="0.5590%" y="1999.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (54 samples, 0.07%)</title><rect x="0.3090%" y="1973" width="0.0701%" height="15" fill="rgb(249,33,26)" fg:x="238" fg:w="54"/><text x="0.5590%" y="1983.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (54 samples, 0.07%)</title><rect x="0.3090%" y="1957" width="0.0701%" height="15" fill="rgb(235,183,28)" fg:x="238" fg:w="54"/><text x="0.5590%" y="1967.50"></text></g><g><title>std::io::Write::write_all (54 samples, 0.07%)</title><rect x="0.3090%" y="1941" width="0.0701%" height="15" fill="rgb(221,5,38)" fg:x="238" fg:w="54"/><text x="0.5590%" y="1951.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (54 samples, 0.07%)</title><rect x="0.3090%" y="1925" width="0.0701%" height="15" fill="rgb(247,18,42)" fg:x="238" fg:w="54"/><text x="0.5590%" y="1935.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="0.3934%" y="2021" width="0.0130%" height="15" fill="rgb(241,131,45)" fg:x="303" fg:w="10"/><text x="0.6434%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (10 samples, 0.01%)</title><rect x="0.3934%" y="2005" width="0.0130%" height="15" fill="rgb(249,31,29)" fg:x="303" fg:w="10"/><text x="0.6434%" y="2015.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (10 samples, 0.01%)</title><rect x="0.3934%" y="1989" width="0.0130%" height="15" fill="rgb(225,111,53)" fg:x="303" fg:w="10"/><text x="0.6434%" y="1999.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (10 samples, 0.01%)</title><rect x="0.3934%" y="1973" width="0.0130%" height="15" fill="rgb(238,160,17)" fg:x="303" fg:w="10"/><text x="0.6434%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (10 samples, 0.01%)</title><rect x="0.3934%" y="1957" width="0.0130%" height="15" fill="rgb(214,148,48)" fg:x="303" fg:w="10"/><text x="0.6434%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (10 samples, 0.01%)</title><rect x="0.3934%" y="1941" width="0.0130%" height="15" fill="rgb(232,36,49)" fg:x="303" fg:w="10"/><text x="0.6434%" y="1951.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (8 samples, 0.01%)</title><rect x="0.4090%" y="2021" width="0.0104%" height="15" fill="rgb(209,103,24)" fg:x="315" fg:w="8"/><text x="0.6590%" y="2031.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (11 samples, 0.01%)</title><rect x="0.4194%" y="2021" width="0.0143%" height="15" fill="rgb(229,88,8)" fg:x="323" fg:w="11"/><text x="0.6694%" y="2031.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.01%)</title><rect x="0.4376%" y="2021" width="0.0117%" height="15" fill="rgb(213,181,19)" fg:x="337" fg:w="9"/><text x="0.6876%" y="2031.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (8 samples, 0.01%)</title><rect x="0.4532%" y="2021" width="0.0104%" height="15" fill="rgb(254,191,54)" fg:x="349" fg:w="8"/><text x="0.7032%" y="2031.50"></text></g><g><title>[[heap]] (8 samples, 0.01%)</title><rect x="0.4649%" y="2021" width="0.0104%" height="15" fill="rgb(241,83,37)" fg:x="358" fg:w="8"/><text x="0.7149%" y="2031.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="0.4649%" y="2005" width="0.0104%" height="15" fill="rgb(233,36,39)" fg:x="358" fg:w="8"/><text x="0.7149%" y="2015.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.4649%" y="1989" width="0.0104%" height="15" fill="rgb(226,3,54)" fg:x="358" fg:w="8"/><text x="0.7149%" y="1999.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.01%)</title><rect x="0.4869%" y="2005" width="0.0104%" height="15" fill="rgb(245,192,40)" fg:x="375" fg:w="8"/><text x="0.7369%" y="2015.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 0.01%)</title><rect x="0.4869%" y="2021" width="0.0117%" height="15" fill="rgb(238,167,29)" fg:x="375" fg:w="9"/><text x="0.7369%" y="2031.50"></text></g><g><title>[unknown] (66 samples, 0.09%)</title><rect x="0.5233%" y="1989" width="0.0857%" height="15" fill="rgb(232,182,51)" fg:x="403" fg:w="66"/><text x="0.7733%" y="1999.50"></text></g><g><title>[unknown] (56 samples, 0.07%)</title><rect x="0.5363%" y="1973" width="0.0727%" height="15" fill="rgb(231,60,39)" fg:x="413" fg:w="56"/><text x="0.7863%" y="1983.50"></text></g><g><title>[unknown] (47 samples, 0.06%)</title><rect x="0.5480%" y="1957" width="0.0610%" height="15" fill="rgb(208,69,12)" fg:x="422" fg:w="47"/><text x="0.7980%" y="1967.50"></text></g><g><title>[unknown] (32 samples, 0.04%)</title><rect x="0.5674%" y="1941" width="0.0416%" height="15" fill="rgb(235,93,37)" fg:x="437" fg:w="32"/><text x="0.8174%" y="1951.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="0.5908%" y="1925" width="0.0182%" height="15" fill="rgb(213,116,39)" fg:x="455" fg:w="14"/><text x="0.8408%" y="1935.50"></text></g><g><title>__ctype_init (26 samples, 0.03%)</title><rect x="0.6090%" y="1989" width="0.0338%" height="15" fill="rgb(222,207,29)" fg:x="469" fg:w="26"/><text x="0.8590%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="0.7453%" y="1381" width="0.0208%" height="15" fill="rgb(206,96,30)" fg:x="574" fg:w="16"/><text x="0.9953%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="0.7453%" y="1365" width="0.0208%" height="15" fill="rgb(218,138,4)" fg:x="574" fg:w="16"/><text x="0.9953%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="0.7453%" y="1349" width="0.0208%" height="15" fill="rgb(250,191,14)" fg:x="574" fg:w="16"/><text x="0.9953%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.02%)</title><rect x="0.7505%" y="1333" width="0.0156%" height="15" fill="rgb(239,60,40)" fg:x="578" fg:w="12"/><text x="1.0005%" y="1343.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="0.7518%" y="1317" width="0.0143%" height="15" fill="rgb(206,27,48)" fg:x="579" fg:w="11"/><text x="1.0018%" y="1327.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23 samples, 0.03%)</title><rect x="0.7414%" y="1461" width="0.0299%" height="15" fill="rgb(225,35,8)" fg:x="571" fg:w="23"/><text x="0.9914%" y="1471.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.03%)</title><rect x="0.7453%" y="1445" width="0.0260%" height="15" fill="rgb(250,213,24)" fg:x="574" fg:w="20"/><text x="0.9953%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.03%)</title><rect x="0.7453%" y="1429" width="0.0260%" height="15" fill="rgb(247,123,22)" fg:x="574" fg:w="20"/><text x="0.9953%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.03%)</title><rect x="0.7453%" y="1413" width="0.0260%" height="15" fill="rgb(231,138,38)" fg:x="574" fg:w="20"/><text x="0.9953%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.03%)</title><rect x="0.7453%" y="1397" width="0.0260%" height="15" fill="rgb(231,145,46)" fg:x="574" fg:w="20"/><text x="0.9953%" y="1407.50"></text></g><g><title>core::fmt::Formatter::pad_integral (20 samples, 0.03%)</title><rect x="0.7713%" y="1461" width="0.0260%" height="15" fill="rgb(251,118,11)" fg:x="594" fg:w="20"/><text x="1.0213%" y="1471.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (61 samples, 0.08%)</title><rect x="0.7194%" y="1509" width="0.0792%" height="15" fill="rgb(217,147,25)" fg:x="554" fg:w="61"/><text x="0.9694%" y="1519.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (57 samples, 0.07%)</title><rect x="0.7246%" y="1493" width="0.0740%" height="15" fill="rgb(247,81,37)" fg:x="558" fg:w="57"/><text x="0.9746%" y="1503.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (46 samples, 0.06%)</title><rect x="0.7388%" y="1477" width="0.0597%" height="15" fill="rgb(209,12,38)" fg:x="569" fg:w="46"/><text x="0.9888%" y="1487.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (25 samples, 0.03%)</title><rect x="0.8336%" y="1125" width="0.0325%" height="15" fill="rgb(227,1,9)" fg:x="642" fg:w="25"/><text x="1.0836%" y="1135.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (25 samples, 0.03%)</title><rect x="0.8336%" y="1109" width="0.0325%" height="15" fill="rgb(248,47,43)" fg:x="642" fg:w="25"/><text x="1.0836%" y="1119.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (19 samples, 0.02%)</title><rect x="0.8414%" y="1093" width="0.0247%" height="15" fill="rgb(221,10,30)" fg:x="648" fg:w="19"/><text x="1.0914%" y="1103.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (18 samples, 0.02%)</title><rect x="0.8427%" y="1077" width="0.0234%" height="15" fill="rgb(210,229,1)" fg:x="649" fg:w="18"/><text x="1.0927%" y="1087.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (8 samples, 0.01%)</title><rect x="0.8557%" y="1061" width="0.0104%" height="15" fill="rgb(222,148,37)" fg:x="659" fg:w="8"/><text x="1.1057%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (32 samples, 0.04%)</title><rect x="0.8284%" y="1141" width="0.0416%" height="15" fill="rgb(234,67,33)" fg:x="638" fg:w="32"/><text x="1.0784%" y="1151.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (9 samples, 0.01%)</title><rect x="0.8700%" y="1125" width="0.0117%" height="15" fill="rgb(247,98,35)" fg:x="670" fg:w="9"/><text x="1.1200%" y="1135.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (9 samples, 0.01%)</title><rect x="0.8700%" y="1109" width="0.0117%" height="15" fill="rgb(247,138,52)" fg:x="670" fg:w="9"/><text x="1.1200%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (58 samples, 0.08%)</title><rect x="0.8155%" y="1285" width="0.0753%" height="15" fill="rgb(213,79,30)" fg:x="628" fg:w="58"/><text x="1.0655%" y="1295.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (55 samples, 0.07%)</title><rect x="0.8194%" y="1269" width="0.0714%" height="15" fill="rgb(246,177,23)" fg:x="631" fg:w="55"/><text x="1.0694%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (55 samples, 0.07%)</title><rect x="0.8194%" y="1253" width="0.0714%" height="15" fill="rgb(230,62,27)" fg:x="631" fg:w="55"/><text x="1.0694%" y="1263.50"></text></g><g><title>std::panicking::try (55 samples, 0.07%)</title><rect x="0.8194%" y="1237" width="0.0714%" height="15" fill="rgb(216,154,8)" fg:x="631" fg:w="55"/><text x="1.0694%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (55 samples, 0.07%)</title><rect x="0.8194%" y="1221" width="0.0714%" height="15" fill="rgb(244,35,45)" fg:x="631" fg:w="55"/><text x="1.0694%" y="1231.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (55 samples, 0.07%)</title><rect x="0.8194%" y="1205" width="0.0714%" height="15" fill="rgb(251,115,12)" fg:x="631" fg:w="55"/><text x="1.0694%" y="1215.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (50 samples, 0.06%)</title><rect x="0.8258%" y="1189" width="0.0649%" height="15" fill="rgb(240,54,50)" fg:x="636" fg:w="50"/><text x="1.0758%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (50 samples, 0.06%)</title><rect x="0.8258%" y="1173" width="0.0649%" height="15" fill="rgb(233,84,52)" fg:x="636" fg:w="50"/><text x="1.0758%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (50 samples, 0.06%)</title><rect x="0.8258%" y="1157" width="0.0649%" height="15" fill="rgb(207,117,47)" fg:x="636" fg:w="50"/><text x="1.0758%" y="1167.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (16 samples, 0.02%)</title><rect x="0.8700%" y="1141" width="0.0208%" height="15" fill="rgb(249,43,39)" fg:x="670" fg:w="16"/><text x="1.1200%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (69 samples, 0.09%)</title><rect x="0.8064%" y="1333" width="0.0896%" height="15" fill="rgb(209,38,44)" fg:x="621" fg:w="69"/><text x="1.0564%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (68 samples, 0.09%)</title><rect x="0.8077%" y="1317" width="0.0883%" height="15" fill="rgb(236,212,23)" fg:x="622" fg:w="68"/><text x="1.0577%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (68 samples, 0.09%)</title><rect x="0.8077%" y="1301" width="0.0883%" height="15" fill="rgb(242,79,21)" fg:x="622" fg:w="68"/><text x="1.0577%" y="1311.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (20 samples, 0.03%)</title><rect x="0.9154%" y="1221" width="0.0260%" height="15" fill="rgb(211,96,35)" fg:x="705" fg:w="20"/><text x="1.1654%" y="1231.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19 samples, 0.02%)</title><rect x="0.9167%" y="1205" width="0.0247%" height="15" fill="rgb(253,215,40)" fg:x="706" fg:w="19"/><text x="1.1667%" y="1215.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.02%)</title><rect x="0.9167%" y="1189" width="0.0247%" height="15" fill="rgb(211,81,21)" fg:x="706" fg:w="19"/><text x="1.1667%" y="1199.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19 samples, 0.02%)</title><rect x="0.9167%" y="1173" width="0.0247%" height="15" fill="rgb(208,190,38)" fg:x="706" fg:w="19"/><text x="1.1667%" y="1183.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (18 samples, 0.02%)</title><rect x="0.9180%" y="1157" width="0.0234%" height="15" fill="rgb(235,213,38)" fg:x="707" fg:w="18"/><text x="1.1680%" y="1167.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (10 samples, 0.01%)</title><rect x="0.9284%" y="1141" width="0.0130%" height="15" fill="rgb(237,122,38)" fg:x="715" fg:w="10"/><text x="1.1784%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (30 samples, 0.04%)</title><rect x="0.9128%" y="1237" width="0.0390%" height="15" fill="rgb(244,218,35)" fg:x="703" fg:w="30"/><text x="1.1628%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="0.9414%" y="1221" width="0.0104%" height="15" fill="rgb(240,68,47)" fg:x="725" fg:w="8"/><text x="1.1914%" y="1231.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (50 samples, 0.06%)</title><rect x="0.9025%" y="1269" width="0.0649%" height="15" fill="rgb(210,16,53)" fg:x="695" fg:w="50"/><text x="1.1525%" y="1279.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (50 samples, 0.06%)</title><rect x="0.9025%" y="1253" width="0.0649%" height="15" fill="rgb(235,124,12)" fg:x="695" fg:w="50"/><text x="1.1525%" y="1263.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_imported_functions (13 samples, 0.02%)</title><rect x="0.9674%" y="1269" width="0.0169%" height="15" fill="rgb(224,169,11)" fg:x="745" fg:w="13"/><text x="1.2174%" y="1279.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (70 samples, 0.09%)</title><rect x="0.8960%" y="1301" width="0.0909%" height="15" fill="rgb(250,166,2)" fg:x="690" fg:w="70"/><text x="1.1460%" y="1311.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (70 samples, 0.09%)</title><rect x="0.8960%" y="1285" width="0.0909%" height="15" fill="rgb(242,216,29)" fg:x="690" fg:w="70"/><text x="1.1460%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="0.9959%" y="1141" width="0.0104%" height="15" fill="rgb(230,116,27)" fg:x="767" fg:w="8"/><text x="1.2459%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="0.9959%" y="1125" width="0.0104%" height="15" fill="rgb(228,99,48)" fg:x="767" fg:w="8"/><text x="1.2459%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="0.9959%" y="1109" width="0.0104%" height="15" fill="rgb(253,11,6)" fg:x="767" fg:w="8"/><text x="1.2459%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="0.9959%" y="1093" width="0.0104%" height="15" fill="rgb(247,143,39)" fg:x="767" fg:w="8"/><text x="1.2459%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="0.9959%" y="1077" width="0.0104%" height="15" fill="rgb(236,97,10)" fg:x="767" fg:w="8"/><text x="1.2459%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="0.9959%" y="1061" width="0.0104%" height="15" fill="rgb(233,208,19)" fg:x="767" fg:w="8"/><text x="1.2459%" y="1071.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="0.9959%" y="1045" width="0.0104%" height="15" fill="rgb(216,164,2)" fg:x="767" fg:w="8"/><text x="1.2459%" y="1055.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (11 samples, 0.01%)</title><rect x="0.9947%" y="1205" width="0.0143%" height="15" fill="rgb(220,129,5)" fg:x="766" fg:w="11"/><text x="1.2447%" y="1215.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="0.9959%" y="1189" width="0.0130%" height="15" fill="rgb(242,17,10)" fg:x="767" fg:w="10"/><text x="1.2459%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (10 samples, 0.01%)</title><rect x="0.9959%" y="1173" width="0.0130%" height="15" fill="rgb(242,107,0)" fg:x="767" fg:w="10"/><text x="1.2459%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (10 samples, 0.01%)</title><rect x="0.9959%" y="1157" width="0.0130%" height="15" fill="rgb(251,28,31)" fg:x="767" fg:w="10"/><text x="1.2459%" y="1167.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="1.0102%" y="1205" width="0.0117%" height="15" fill="rgb(233,223,10)" fg:x="778" fg:w="9"/><text x="1.2602%" y="1215.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="1.0102%" y="1189" width="0.0117%" height="15" fill="rgb(215,21,27)" fg:x="778" fg:w="9"/><text x="1.2602%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="1.0102%" y="1173" width="0.0117%" height="15" fill="rgb(232,23,21)" fg:x="778" fg:w="9"/><text x="1.2602%" y="1183.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.01%)</title><rect x="1.0102%" y="1157" width="0.0117%" height="15" fill="rgb(244,5,23)" fg:x="778" fg:w="9"/><text x="1.2602%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (9 samples, 0.01%)</title><rect x="1.0102%" y="1141" width="0.0117%" height="15" fill="rgb(226,81,46)" fg:x="778" fg:w="9"/><text x="1.2602%" y="1151.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (13 samples, 0.02%)</title><rect x="1.0388%" y="1109" width="0.0169%" height="15" fill="rgb(247,70,30)" fg:x="800" fg:w="13"/><text x="1.2888%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (13 samples, 0.02%)</title><rect x="1.0388%" y="1093" width="0.0169%" height="15" fill="rgb(212,68,19)" fg:x="800" fg:w="13"/><text x="1.2888%" y="1103.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (13 samples, 0.02%)</title><rect x="1.0388%" y="1077" width="0.0169%" height="15" fill="rgb(240,187,13)" fg:x="800" fg:w="13"/><text x="1.2888%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (13 samples, 0.02%)</title><rect x="1.0388%" y="1061" width="0.0169%" height="15" fill="rgb(223,113,26)" fg:x="800" fg:w="13"/><text x="1.2888%" y="1071.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (13 samples, 0.02%)</title><rect x="1.0388%" y="1045" width="0.0169%" height="15" fill="rgb(206,192,2)" fg:x="800" fg:w="13"/><text x="1.2888%" y="1055.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="1.0427%" y="1029" width="0.0130%" height="15" fill="rgb(241,108,4)" fg:x="803" fg:w="10"/><text x="1.2927%" y="1039.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="1.0661%" y="1013" width="0.0156%" height="15" fill="rgb(247,173,49)" fg:x="821" fg:w="12"/><text x="1.3161%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (41 samples, 0.05%)</title><rect x="1.0297%" y="1189" width="0.0532%" height="15" fill="rgb(224,114,35)" fg:x="793" fg:w="41"/><text x="1.2797%" y="1199.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (41 samples, 0.05%)</title><rect x="1.0297%" y="1173" width="0.0532%" height="15" fill="rgb(245,159,27)" fg:x="793" fg:w="41"/><text x="1.2797%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (40 samples, 0.05%)</title><rect x="1.0310%" y="1157" width="0.0519%" height="15" fill="rgb(245,172,44)" fg:x="794" fg:w="40"/><text x="1.2810%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (40 samples, 0.05%)</title><rect x="1.0310%" y="1141" width="0.0519%" height="15" fill="rgb(236,23,11)" fg:x="794" fg:w="40"/><text x="1.2810%" y="1151.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (35 samples, 0.05%)</title><rect x="1.0375%" y="1125" width="0.0454%" height="15" fill="rgb(205,117,38)" fg:x="799" fg:w="35"/><text x="1.2875%" y="1135.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (21 samples, 0.03%)</title><rect x="1.0557%" y="1109" width="0.0273%" height="15" fill="rgb(237,72,25)" fg:x="813" fg:w="21"/><text x="1.3057%" y="1119.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (15 samples, 0.02%)</title><rect x="1.0635%" y="1093" width="0.0195%" height="15" fill="rgb(244,70,9)" fg:x="819" fg:w="15"/><text x="1.3135%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (15 samples, 0.02%)</title><rect x="1.0635%" y="1077" width="0.0195%" height="15" fill="rgb(217,125,39)" fg:x="819" fg:w="15"/><text x="1.3135%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (15 samples, 0.02%)</title><rect x="1.0635%" y="1061" width="0.0195%" height="15" fill="rgb(235,36,10)" fg:x="819" fg:w="15"/><text x="1.3135%" y="1071.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (15 samples, 0.02%)</title><rect x="1.0635%" y="1045" width="0.0195%" height="15" fill="rgb(251,123,47)" fg:x="819" fg:w="15"/><text x="1.3135%" y="1055.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (15 samples, 0.02%)</title><rect x="1.0635%" y="1029" width="0.0195%" height="15" fill="rgb(221,13,13)" fg:x="819" fg:w="15"/><text x="1.3135%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (46 samples, 0.06%)</title><rect x="1.0284%" y="1205" width="0.0597%" height="15" fill="rgb(238,131,9)" fg:x="792" fg:w="46"/><text x="1.2784%" y="1215.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (86 samples, 0.11%)</title><rect x="0.9934%" y="1237" width="0.1117%" height="15" fill="rgb(211,50,8)" fg:x="765" fg:w="86"/><text x="1.2434%" y="1247.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (86 samples, 0.11%)</title><rect x="0.9934%" y="1221" width="0.1117%" height="15" fill="rgb(245,182,24)" fg:x="765" fg:w="86"/><text x="1.2434%" y="1231.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (100 samples, 0.13%)</title><rect x="0.9895%" y="1269" width="0.1298%" height="15" fill="rgb(242,14,37)" fg:x="762" fg:w="100"/><text x="1.2395%" y="1279.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (100 samples, 0.13%)</title><rect x="0.9895%" y="1253" width="0.1298%" height="15" fill="rgb(246,228,12)" fg:x="762" fg:w="100"/><text x="1.2395%" y="1263.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_imported_functions (11 samples, 0.01%)</title><rect x="1.1050%" y="1237" width="0.0143%" height="15" fill="rgb(213,55,15)" fg:x="851" fg:w="11"/><text x="1.3550%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (103 samples, 0.13%)</title><rect x="0.9869%" y="1285" width="0.1337%" height="15" fill="rgb(209,9,3)" fg:x="760" fg:w="103"/><text x="1.2369%" y="1295.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_module (10 samples, 0.01%)</title><rect x="1.1232%" y="1189" width="0.0130%" height="15" fill="rgb(230,59,30)" fg:x="865" fg:w="10"/><text x="1.3732%" y="1199.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::check_identifiers (8 samples, 0.01%)</title><rect x="1.1440%" y="1157" width="0.0104%" height="15" fill="rgb(209,121,21)" fg:x="881" fg:w="8"/><text x="1.3940%" y="1167.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (8 samples, 0.01%)</title><rect x="1.1440%" y="1141" width="0.0104%" height="15" fill="rgb(220,109,13)" fg:x="881" fg:w="8"/><text x="1.3940%" y="1151.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.01%)</title><rect x="1.1440%" y="1125" width="0.0104%" height="15" fill="rgb(232,18,1)" fg:x="881" fg:w="8"/><text x="1.3940%" y="1135.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.01%)</title><rect x="1.1440%" y="1109" width="0.0104%" height="15" fill="rgb(215,41,42)" fg:x="881" fg:w="8"/><text x="1.3940%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.01%)</title><rect x="1.1440%" y="1093" width="0.0104%" height="15" fill="rgb(224,123,36)" fg:x="881" fg:w="8"/><text x="1.3940%" y="1103.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (22 samples, 0.03%)</title><rect x="1.1375%" y="1189" width="0.0286%" height="15" fill="rgb(240,125,3)" fg:x="876" fg:w="22"/><text x="1.3875%" y="1199.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (22 samples, 0.03%)</title><rect x="1.1375%" y="1173" width="0.0286%" height="15" fill="rgb(205,98,50)" fg:x="876" fg:w="22"/><text x="1.3875%" y="1183.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify_instruction (8 samples, 0.01%)</title><rect x="1.1751%" y="1125" width="0.0104%" height="15" fill="rgb(205,185,37)" fg:x="905" fg:w="8"/><text x="1.4251%" y="1135.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (19 samples, 0.02%)</title><rect x="1.1725%" y="1141" width="0.0247%" height="15" fill="rgb(238,207,15)" fg:x="903" fg:w="19"/><text x="1.4225%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.01%)</title><rect x="1.1855%" y="1125" width="0.0117%" height="15" fill="rgb(213,199,42)" fg:x="913" fg:w="9"/><text x="1.4355%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.01%)</title><rect x="1.1855%" y="1109" width="0.0117%" height="15" fill="rgb(235,201,11)" fg:x="913" fg:w="9"/><text x="1.4355%" y="1119.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (21 samples, 0.03%)</title><rect x="1.1985%" y="1109" width="0.0273%" height="15" fill="rgb(207,46,11)" fg:x="923" fg:w="21"/><text x="1.4485%" y="1119.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (12 samples, 0.02%)</title><rect x="1.2102%" y="1093" width="0.0156%" height="15" fill="rgb(241,35,35)" fg:x="932" fg:w="12"/><text x="1.4602%" y="1103.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (22 samples, 0.03%)</title><rect x="1.1985%" y="1125" width="0.0286%" height="15" fill="rgb(243,32,47)" fg:x="923" fg:w="22"/><text x="1.4485%" y="1135.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (35 samples, 0.05%)</title><rect x="1.1972%" y="1141" width="0.0454%" height="15" fill="rgb(247,202,23)" fg:x="922" fg:w="35"/><text x="1.4472%" y="1151.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (69 samples, 0.09%)</title><rect x="1.1674%" y="1157" width="0.0896%" height="15" fill="rgb(219,102,11)" fg:x="899" fg:w="69"/><text x="1.4174%" y="1167.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (11 samples, 0.01%)</title><rect x="1.2427%" y="1141" width="0.0143%" height="15" fill="rgb(243,110,44)" fg:x="957" fg:w="11"/><text x="1.4927%" y="1151.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (71 samples, 0.09%)</title><rect x="1.1661%" y="1189" width="0.0922%" height="15" fill="rgb(222,74,54)" fg:x="898" fg:w="71"/><text x="1.4161%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (71 samples, 0.09%)</title><rect x="1.1661%" y="1173" width="0.0922%" height="15" fill="rgb(216,99,12)" fg:x="898" fg:w="71"/><text x="1.4161%" y="1183.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module (11 samples, 0.01%)</title><rect x="1.2712%" y="1189" width="0.0143%" height="15" fill="rgb(226,22,26)" fg:x="979" fg:w="11"/><text x="1.5212%" y="1199.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module_impl (11 samples, 0.01%)</title><rect x="1.2712%" y="1173" width="0.0143%" height="15" fill="rgb(217,163,10)" fg:x="979" fg:w="11"/><text x="1.5212%" y="1183.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (128 samples, 0.17%)</title><rect x="1.1206%" y="1285" width="0.1662%" height="15" fill="rgb(213,25,53)" fg:x="863" fg:w="128"/><text x="1.3706%" y="1295.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (126 samples, 0.16%)</title><rect x="1.1232%" y="1269" width="0.1636%" height="15" fill="rgb(252,105,26)" fg:x="865" fg:w="126"/><text x="1.3732%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (126 samples, 0.16%)</title><rect x="1.1232%" y="1253" width="0.1636%" height="15" fill="rgb(220,39,43)" fg:x="865" fg:w="126"/><text x="1.3732%" y="1263.50"></text></g><g><title>std::panicking::try (126 samples, 0.16%)</title><rect x="1.1232%" y="1237" width="0.1636%" height="15" fill="rgb(229,68,48)" fg:x="865" fg:w="126"/><text x="1.3732%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (126 samples, 0.16%)</title><rect x="1.1232%" y="1221" width="0.1636%" height="15" fill="rgb(252,8,32)" fg:x="865" fg:w="126"/><text x="1.3732%" y="1231.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (126 samples, 0.16%)</title><rect x="1.1232%" y="1205" width="0.1636%" height="15" fill="rgb(223,20,43)" fg:x="865" fg:w="126"/><text x="1.3732%" y="1215.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (302 samples, 0.39%)</title><rect x="0.8960%" y="1317" width="0.3921%" height="15" fill="rgb(229,81,49)" fg:x="690" fg:w="302"/><text x="1.1460%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (232 samples, 0.30%)</title><rect x="0.9869%" y="1301" width="0.3013%" height="15" fill="rgb(236,28,36)" fg:x="760" fg:w="232"/><text x="1.2369%" y="1311.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (13 samples, 0.02%)</title><rect x="1.2946%" y="1301" width="0.0169%" height="15" fill="rgb(249,185,26)" fg:x="997" fg:w="13"/><text x="1.5446%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="1.2946%" y="1285" width="0.0169%" height="15" fill="rgb(249,174,33)" fg:x="997" fg:w="13"/><text x="1.5446%" y="1295.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="1.2946%" y="1269" width="0.0169%" height="15" fill="rgb(233,201,37)" fg:x="997" fg:w="13"/><text x="1.5446%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="1.2946%" y="1253" width="0.0169%" height="15" fill="rgb(221,78,26)" fg:x="997" fg:w="13"/><text x="1.5446%" y="1263.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (13 samples, 0.02%)</title><rect x="1.2946%" y="1237" width="0.0169%" height="15" fill="rgb(250,127,30)" fg:x="997" fg:w="13"/><text x="1.5446%" y="1247.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (8 samples, 0.01%)</title><rect x="1.3011%" y="1221" width="0.0104%" height="15" fill="rgb(230,49,44)" fg:x="1002" fg:w="8"/><text x="1.5511%" y="1231.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (8 samples, 0.01%)</title><rect x="1.3011%" y="1205" width="0.0104%" height="15" fill="rgb(229,67,23)" fg:x="1002" fg:w="8"/><text x="1.5511%" y="1215.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (19 samples, 0.02%)</title><rect x="1.3465%" y="1109" width="0.0247%" height="15" fill="rgb(249,83,47)" fg:x="1037" fg:w="19"/><text x="1.5965%" y="1119.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (10 samples, 0.01%)</title><rect x="1.3582%" y="1093" width="0.0130%" height="15" fill="rgb(215,43,3)" fg:x="1046" fg:w="10"/><text x="1.6082%" y="1103.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (30 samples, 0.04%)</title><rect x="1.3401%" y="1157" width="0.0390%" height="15" fill="rgb(238,154,13)" fg:x="1032" fg:w="30"/><text x="1.5901%" y="1167.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (30 samples, 0.04%)</title><rect x="1.3401%" y="1141" width="0.0390%" height="15" fill="rgb(219,56,2)" fg:x="1032" fg:w="30"/><text x="1.5901%" y="1151.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (25 samples, 0.03%)</title><rect x="1.3465%" y="1125" width="0.0325%" height="15" fill="rgb(233,0,4)" fg:x="1037" fg:w="25"/><text x="1.5965%" y="1135.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (46 samples, 0.06%)</title><rect x="1.3310%" y="1173" width="0.0597%" height="15" fill="rgb(235,30,7)" fg:x="1025" fg:w="46"/><text x="1.5810%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (62 samples, 0.08%)</title><rect x="1.3245%" y="1221" width="0.0805%" height="15" fill="rgb(250,79,13)" fg:x="1020" fg:w="62"/><text x="1.5745%" y="1231.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (62 samples, 0.08%)</title><rect x="1.3245%" y="1205" width="0.0805%" height="15" fill="rgb(211,146,34)" fg:x="1020" fg:w="62"/><text x="1.5745%" y="1215.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (62 samples, 0.08%)</title><rect x="1.3245%" y="1189" width="0.0805%" height="15" fill="rgb(228,22,38)" fg:x="1020" fg:w="62"/><text x="1.5745%" y="1199.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (11 samples, 0.01%)</title><rect x="1.3907%" y="1173" width="0.0143%" height="15" fill="rgb(235,168,5)" fg:x="1071" fg:w="11"/><text x="1.6407%" y="1183.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (96 samples, 0.12%)</title><rect x="1.2881%" y="1317" width="0.1247%" height="15" fill="rgb(221,155,16)" fg:x="992" fg:w="96"/><text x="1.5381%" y="1327.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (78 samples, 0.10%)</title><rect x="1.3115%" y="1301" width="0.1013%" height="15" fill="rgb(215,215,53)" fg:x="1010" fg:w="78"/><text x="1.5615%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (78 samples, 0.10%)</title><rect x="1.3115%" y="1285" width="0.1013%" height="15" fill="rgb(223,4,10)" fg:x="1010" fg:w="78"/><text x="1.5615%" y="1295.50"></text></g><g><title>std::panicking::try (78 samples, 0.10%)</title><rect x="1.3115%" y="1269" width="0.1013%" height="15" fill="rgb(234,103,6)" fg:x="1010" fg:w="78"/><text x="1.5615%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (78 samples, 0.10%)</title><rect x="1.3115%" y="1253" width="0.1013%" height="15" fill="rgb(227,97,0)" fg:x="1010" fg:w="78"/><text x="1.5615%" y="1263.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (78 samples, 0.10%)</title><rect x="1.3115%" y="1237" width="0.1013%" height="15" fill="rgb(234,150,53)" fg:x="1010" fg:w="78"/><text x="1.5615%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (483 samples, 0.63%)</title><rect x="0.8038%" y="1365" width="0.6272%" height="15" fill="rgb(228,201,54)" fg:x="619" fg:w="483"/><text x="1.0538%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (481 samples, 0.62%)</title><rect x="0.8064%" y="1349" width="0.6246%" height="15" fill="rgb(222,22,37)" fg:x="621" fg:w="481"/><text x="1.0564%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (412 samples, 0.53%)</title><rect x="0.8960%" y="1333" width="0.5350%" height="15" fill="rgb(237,53,32)" fg:x="690" fg:w="412"/><text x="1.1460%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (14 samples, 0.02%)</title><rect x="1.4128%" y="1317" width="0.0182%" height="15" fill="rgb(233,25,53)" fg:x="1088" fg:w="14"/><text x="1.6628%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (11 samples, 0.01%)</title><rect x="1.4167%" y="1301" width="0.0143%" height="15" fill="rgb(210,40,34)" fg:x="1091" fg:w="11"/><text x="1.6667%" y="1311.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="1.4543%" y="1093" width="0.0117%" height="15" fill="rgb(241,220,44)" fg:x="1120" fg:w="9"/><text x="1.7043%" y="1103.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (12 samples, 0.02%)</title><rect x="1.4530%" y="1173" width="0.0156%" height="15" fill="rgb(235,28,35)" fg:x="1119" fg:w="12"/><text x="1.7030%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (12 samples, 0.02%)</title><rect x="1.4530%" y="1157" width="0.0156%" height="15" fill="rgb(210,56,17)" fg:x="1119" fg:w="12"/><text x="1.7030%" y="1167.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (12 samples, 0.02%)</title><rect x="1.4530%" y="1141" width="0.0156%" height="15" fill="rgb(224,130,29)" fg:x="1119" fg:w="12"/><text x="1.7030%" y="1151.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (12 samples, 0.02%)</title><rect x="1.4530%" y="1125" width="0.0156%" height="15" fill="rgb(235,212,8)" fg:x="1119" fg:w="12"/><text x="1.7030%" y="1135.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (12 samples, 0.02%)</title><rect x="1.4530%" y="1109" width="0.0156%" height="15" fill="rgb(223,33,50)" fg:x="1119" fg:w="12"/><text x="1.7030%" y="1119.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="1.4790%" y="1077" width="0.0117%" height="15" fill="rgb(219,149,13)" fg:x="1139" fg:w="9"/><text x="1.7290%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (35 samples, 0.05%)</title><rect x="1.4465%" y="1253" width="0.0454%" height="15" fill="rgb(250,156,29)" fg:x="1114" fg:w="35"/><text x="1.6965%" y="1263.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (35 samples, 0.05%)</title><rect x="1.4465%" y="1237" width="0.0454%" height="15" fill="rgb(216,193,19)" fg:x="1114" fg:w="35"/><text x="1.6965%" y="1247.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (35 samples, 0.05%)</title><rect x="1.4465%" y="1221" width="0.0454%" height="15" fill="rgb(216,135,14)" fg:x="1114" fg:w="35"/><text x="1.6965%" y="1231.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (35 samples, 0.05%)</title><rect x="1.4465%" y="1205" width="0.0454%" height="15" fill="rgb(241,47,5)" fg:x="1114" fg:w="35"/><text x="1.6965%" y="1215.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (34 samples, 0.04%)</title><rect x="1.4478%" y="1189" width="0.0441%" height="15" fill="rgb(233,42,35)" fg:x="1115" fg:w="34"/><text x="1.6978%" y="1199.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (18 samples, 0.02%)</title><rect x="1.4686%" y="1173" width="0.0234%" height="15" fill="rgb(231,13,6)" fg:x="1131" fg:w="18"/><text x="1.7186%" y="1183.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (10 samples, 0.01%)</title><rect x="1.4790%" y="1157" width="0.0130%" height="15" fill="rgb(207,181,40)" fg:x="1139" fg:w="10"/><text x="1.7290%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (10 samples, 0.01%)</title><rect x="1.4790%" y="1141" width="0.0130%" height="15" fill="rgb(254,173,49)" fg:x="1139" fg:w="10"/><text x="1.7290%" y="1151.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (10 samples, 0.01%)</title><rect x="1.4790%" y="1125" width="0.0130%" height="15" fill="rgb(221,1,38)" fg:x="1139" fg:w="10"/><text x="1.7290%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (10 samples, 0.01%)</title><rect x="1.4790%" y="1109" width="0.0130%" height="15" fill="rgb(206,124,46)" fg:x="1139" fg:w="10"/><text x="1.7290%" y="1119.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (10 samples, 0.01%)</title><rect x="1.4790%" y="1093" width="0.0130%" height="15" fill="rgb(249,21,11)" fg:x="1139" fg:w="10"/><text x="1.7290%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (43 samples, 0.06%)</title><rect x="1.4426%" y="1269" width="0.0558%" height="15" fill="rgb(222,201,40)" fg:x="1111" fg:w="43"/><text x="1.6926%" y="1279.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (63 samples, 0.08%)</title><rect x="1.4335%" y="1301" width="0.0818%" height="15" fill="rgb(235,61,29)" fg:x="1104" fg:w="63"/><text x="1.6835%" y="1311.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (63 samples, 0.08%)</title><rect x="1.4335%" y="1285" width="0.0818%" height="15" fill="rgb(219,207,3)" fg:x="1104" fg:w="63"/><text x="1.6835%" y="1295.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (74 samples, 0.10%)</title><rect x="1.4309%" y="1333" width="0.0961%" height="15" fill="rgb(222,56,46)" fg:x="1102" fg:w="74"/><text x="1.6809%" y="1343.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (74 samples, 0.10%)</title><rect x="1.4309%" y="1317" width="0.0961%" height="15" fill="rgb(239,76,54)" fg:x="1102" fg:w="74"/><text x="1.6809%" y="1327.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (10 samples, 0.01%)</title><rect x="1.5270%" y="1301" width="0.0130%" height="15" fill="rgb(231,124,27)" fg:x="1176" fg:w="10"/><text x="1.7770%" y="1311.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (10 samples, 0.01%)</title><rect x="1.5270%" y="1285" width="0.0130%" height="15" fill="rgb(249,195,6)" fg:x="1176" fg:w="10"/><text x="1.7770%" y="1295.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (10 samples, 0.01%)</title><rect x="1.5270%" y="1269" width="0.0130%" height="15" fill="rgb(237,174,47)" fg:x="1176" fg:w="10"/><text x="1.7770%" y="1279.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (10 samples, 0.01%)</title><rect x="1.5270%" y="1253" width="0.0130%" height="15" fill="rgb(206,201,31)" fg:x="1176" fg:w="10"/><text x="1.7770%" y="1263.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (12 samples, 0.02%)</title><rect x="1.5270%" y="1317" width="0.0156%" height="15" fill="rgb(231,57,52)" fg:x="1176" fg:w="12"/><text x="1.7770%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (26 samples, 0.03%)</title><rect x="1.5270%" y="1333" width="0.0338%" height="15" fill="rgb(248,177,22)" fg:x="1176" fg:w="26"/><text x="1.7770%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (14 samples, 0.02%)</title><rect x="1.5426%" y="1317" width="0.0182%" height="15" fill="rgb(215,211,37)" fg:x="1188" fg:w="14"/><text x="1.7926%" y="1327.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (12 samples, 0.02%)</title><rect x="1.5452%" y="1301" width="0.0156%" height="15" fill="rgb(241,128,51)" fg:x="1190" fg:w="12"/><text x="1.7952%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="1.5452%" y="1285" width="0.0156%" height="15" fill="rgb(227,165,31)" fg:x="1190" fg:w="12"/><text x="1.7952%" y="1295.50"></text></g><g><title>std::panicking::try (12 samples, 0.02%)</title><rect x="1.5452%" y="1269" width="0.0156%" height="15" fill="rgb(228,167,24)" fg:x="1190" fg:w="12"/><text x="1.7952%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="1.5452%" y="1253" width="0.0156%" height="15" fill="rgb(228,143,12)" fg:x="1190" fg:w="12"/><text x="1.7952%" y="1263.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (12 samples, 0.02%)</title><rect x="1.5452%" y="1237" width="0.0156%" height="15" fill="rgb(249,149,8)" fg:x="1190" fg:w="12"/><text x="1.7952%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (101 samples, 0.13%)</title><rect x="1.4309%" y="1349" width="0.1311%" height="15" fill="rgb(243,35,44)" fg:x="1102" fg:w="101"/><text x="1.6809%" y="1359.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (12 samples, 0.02%)</title><rect x="1.5621%" y="1333" width="0.0156%" height="15" fill="rgb(246,89,9)" fg:x="1203" fg:w="12"/><text x="1.8121%" y="1343.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (12 samples, 0.02%)</title><rect x="1.5621%" y="1317" width="0.0156%" height="15" fill="rgb(233,213,13)" fg:x="1203" fg:w="12"/><text x="1.8121%" y="1327.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (12 samples, 0.02%)</title><rect x="1.5621%" y="1301" width="0.0156%" height="15" fill="rgb(233,141,41)" fg:x="1203" fg:w="12"/><text x="1.8121%" y="1311.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (12 samples, 0.02%)</title><rect x="1.5621%" y="1285" width="0.0156%" height="15" fill="rgb(239,167,4)" fg:x="1203" fg:w="12"/><text x="1.8121%" y="1295.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (12 samples, 0.02%)</title><rect x="1.5621%" y="1269" width="0.0156%" height="15" fill="rgb(209,217,16)" fg:x="1203" fg:w="12"/><text x="1.8121%" y="1279.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_module (9 samples, 0.01%)</title><rect x="1.5777%" y="1253" width="0.0117%" height="15" fill="rgb(219,88,35)" fg:x="1215" fg:w="9"/><text x="1.8277%" y="1263.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (10 samples, 0.01%)</title><rect x="1.6010%" y="1205" width="0.0130%" height="15" fill="rgb(220,193,23)" fg:x="1233" fg:w="10"/><text x="1.8510%" y="1215.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (10 samples, 0.01%)</title><rect x="1.6010%" y="1189" width="0.0130%" height="15" fill="rgb(230,90,52)" fg:x="1233" fg:w="10"/><text x="1.8510%" y="1199.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (20 samples, 0.03%)</title><rect x="1.5894%" y="1221" width="0.0260%" height="15" fill="rgb(252,106,19)" fg:x="1224" fg:w="20"/><text x="1.8394%" y="1231.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (29 samples, 0.04%)</title><rect x="1.5894%" y="1237" width="0.0377%" height="15" fill="rgb(206,74,20)" fg:x="1224" fg:w="29"/><text x="1.8394%" y="1247.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (9 samples, 0.01%)</title><rect x="1.6153%" y="1221" width="0.0117%" height="15" fill="rgb(230,138,44)" fg:x="1244" fg:w="9"/><text x="1.8653%" y="1231.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (9 samples, 0.01%)</title><rect x="1.6153%" y="1205" width="0.0117%" height="15" fill="rgb(235,182,43)" fg:x="1244" fg:w="9"/><text x="1.8653%" y="1215.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (9 samples, 0.01%)</title><rect x="1.6153%" y="1189" width="0.0117%" height="15" fill="rgb(242,16,51)" fg:x="1244" fg:w="9"/><text x="1.8653%" y="1199.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (9 samples, 0.01%)</title><rect x="1.6153%" y="1173" width="0.0117%" height="15" fill="rgb(248,9,4)" fg:x="1244" fg:w="9"/><text x="1.8653%" y="1183.50"></text></g><g><title>move_binary_format::deserializer::load_code (9 samples, 0.01%)</title><rect x="1.6153%" y="1157" width="0.0117%" height="15" fill="rgb(210,31,22)" fg:x="1244" fg:w="9"/><text x="1.8653%" y="1167.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (40 samples, 0.05%)</title><rect x="1.5777%" y="1333" width="0.0519%" height="15" fill="rgb(239,54,39)" fg:x="1215" fg:w="40"/><text x="1.8277%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="1.5777%" y="1317" width="0.0519%" height="15" fill="rgb(230,99,41)" fg:x="1215" fg:w="40"/><text x="1.8277%" y="1327.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="1.5777%" y="1301" width="0.0519%" height="15" fill="rgb(253,106,12)" fg:x="1215" fg:w="40"/><text x="1.8277%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="1.5777%" y="1285" width="0.0519%" height="15" fill="rgb(213,46,41)" fg:x="1215" fg:w="40"/><text x="1.8277%" y="1295.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (40 samples, 0.05%)</title><rect x="1.5777%" y="1269" width="0.0519%" height="15" fill="rgb(215,133,35)" fg:x="1215" fg:w="40"/><text x="1.8277%" y="1279.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (31 samples, 0.04%)</title><rect x="1.5894%" y="1253" width="0.0403%" height="15" fill="rgb(213,28,5)" fg:x="1224" fg:w="31"/><text x="1.8394%" y="1263.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (22 samples, 0.03%)</title><rect x="1.6335%" y="1253" width="0.0286%" height="15" fill="rgb(215,77,49)" fg:x="1258" fg:w="22"/><text x="1.8835%" y="1263.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (22 samples, 0.03%)</title><rect x="1.6335%" y="1237" width="0.0286%" height="15" fill="rgb(248,100,22)" fg:x="1258" fg:w="22"/><text x="1.8835%" y="1247.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (18 samples, 0.02%)</title><rect x="1.6634%" y="1205" width="0.0234%" height="15" fill="rgb(208,67,9)" fg:x="1281" fg:w="18"/><text x="1.9134%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.02%)</title><rect x="1.6673%" y="1189" width="0.0195%" height="15" fill="rgb(219,133,21)" fg:x="1284" fg:w="15"/><text x="1.9173%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.02%)</title><rect x="1.6673%" y="1173" width="0.0195%" height="15" fill="rgb(246,46,29)" fg:x="1284" fg:w="15"/><text x="1.9173%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.01%)</title><rect x="1.6764%" y="1157" width="0.0104%" height="15" fill="rgb(246,185,52)" fg:x="1291" fg:w="8"/><text x="1.9264%" y="1167.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (21 samples, 0.03%)</title><rect x="1.6868%" y="1173" width="0.0273%" height="15" fill="rgb(252,136,11)" fg:x="1299" fg:w="21"/><text x="1.9368%" y="1183.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (12 samples, 0.02%)</title><rect x="1.6984%" y="1157" width="0.0156%" height="15" fill="rgb(219,138,53)" fg:x="1308" fg:w="12"/><text x="1.9484%" y="1167.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (24 samples, 0.03%)</title><rect x="1.6868%" y="1189" width="0.0312%" height="15" fill="rgb(211,51,23)" fg:x="1299" fg:w="24"/><text x="1.9368%" y="1199.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (10 samples, 0.01%)</title><rect x="1.7413%" y="1125" width="0.0130%" height="15" fill="rgb(247,221,28)" fg:x="1341" fg:w="10"/><text x="1.9913%" y="1135.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field (10 samples, 0.01%)</title><rect x="1.7634%" y="1109" width="0.0130%" height="15" fill="rgb(251,222,45)" fg:x="1358" fg:w="10"/><text x="2.0134%" y="1119.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (41 samples, 0.05%)</title><rect x="1.7374%" y="1141" width="0.0532%" height="15" fill="rgb(217,162,53)" fg:x="1338" fg:w="41"/><text x="1.9874%" y="1151.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (27 samples, 0.04%)</title><rect x="1.7556%" y="1125" width="0.0351%" height="15" fill="rgb(229,93,14)" fg:x="1352" fg:w="27"/><text x="2.0056%" y="1135.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (59 samples, 0.08%)</title><rect x="1.7192%" y="1173" width="0.0766%" height="15" fill="rgb(209,67,49)" fg:x="1324" fg:w="59"/><text x="1.9692%" y="1183.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (47 samples, 0.06%)</title><rect x="1.7348%" y="1157" width="0.0610%" height="15" fill="rgb(213,87,29)" fg:x="1336" fg:w="47"/><text x="1.9848%" y="1167.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (61 samples, 0.08%)</title><rect x="1.7179%" y="1189" width="0.0792%" height="15" fill="rgb(205,151,52)" fg:x="1323" fg:w="61"/><text x="1.9679%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (105 samples, 0.14%)</title><rect x="1.6868%" y="1205" width="0.1363%" height="15" fill="rgb(253,215,39)" fg:x="1299" fg:w="105"/><text x="1.9368%" y="1215.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (18 samples, 0.02%)</title><rect x="1.7997%" y="1189" width="0.0234%" height="15" fill="rgb(221,220,41)" fg:x="1386" fg:w="18"/><text x="2.0497%" y="1199.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (18 samples, 0.02%)</title><rect x="1.8231%" y="1189" width="0.0234%" height="15" fill="rgb(218,133,21)" fg:x="1404" fg:w="18"/><text x="2.0731%" y="1199.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (18 samples, 0.02%)</title><rect x="1.8231%" y="1173" width="0.0234%" height="15" fill="rgb(221,193,43)" fg:x="1404" fg:w="18"/><text x="2.0731%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (152 samples, 0.20%)</title><rect x="1.6621%" y="1221" width="0.1974%" height="15" fill="rgb(240,128,52)" fg:x="1280" fg:w="152"/><text x="1.9121%" y="1231.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (28 samples, 0.04%)</title><rect x="1.8231%" y="1205" width="0.0364%" height="15" fill="rgb(253,114,12)" fg:x="1404" fg:w="28"/><text x="2.0731%" y="1215.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_reducibility (10 samples, 0.01%)</title><rect x="1.8465%" y="1189" width="0.0130%" height="15" fill="rgb(215,223,47)" fg:x="1422" fg:w="10"/><text x="2.0965%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (153 samples, 0.20%)</title><rect x="1.6621%" y="1253" width="0.1987%" height="15" fill="rgb(248,225,23)" fg:x="1280" fg:w="153"/><text x="1.9121%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (153 samples, 0.20%)</title><rect x="1.6621%" y="1237" width="0.1987%" height="15" fill="rgb(250,108,0)" fg:x="1280" fg:w="153"/><text x="1.9121%" y="1247.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module (9 samples, 0.01%)</title><rect x="1.8698%" y="1253" width="0.0117%" height="15" fill="rgb(228,208,7)" fg:x="1440" fg:w="9"/><text x="2.1198%" y="1263.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module_impl (9 samples, 0.01%)</title><rect x="1.8698%" y="1237" width="0.0117%" height="15" fill="rgb(244,45,10)" fg:x="1440" fg:w="9"/><text x="2.1198%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (247 samples, 0.32%)</title><rect x="1.5621%" y="1349" width="0.3207%" height="15" fill="rgb(207,125,25)" fg:x="1203" fg:w="247"/><text x="1.8121%" y="1359.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (195 samples, 0.25%)</title><rect x="1.6296%" y="1333" width="0.2532%" height="15" fill="rgb(210,195,18)" fg:x="1255" fg:w="195"/><text x="1.8796%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (195 samples, 0.25%)</title><rect x="1.6296%" y="1317" width="0.2532%" height="15" fill="rgb(249,80,12)" fg:x="1255" fg:w="195"/><text x="1.8796%" y="1327.50"></text></g><g><title>std::panicking::try (195 samples, 0.25%)</title><rect x="1.6296%" y="1301" width="0.2532%" height="15" fill="rgb(221,65,9)" fg:x="1255" fg:w="195"/><text x="1.8796%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (195 samples, 0.25%)</title><rect x="1.6296%" y="1285" width="0.2532%" height="15" fill="rgb(235,49,36)" fg:x="1255" fg:w="195"/><text x="1.8796%" y="1295.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (195 samples, 0.25%)</title><rect x="1.6296%" y="1269" width="0.2532%" height="15" fill="rgb(225,32,20)" fg:x="1255" fg:w="195"/><text x="1.8796%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Function::new (8 samples, 0.01%)</title><rect x="1.8971%" y="1317" width="0.0104%" height="15" fill="rgb(215,141,46)" fg:x="1461" fg:w="8"/><text x="2.1471%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (852 samples, 1.11%)</title><rect x="0.8038%" y="1397" width="1.1063%" height="15" fill="rgb(250,160,47)" fg:x="619" fg:w="852"/><text x="1.0538%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (852 samples, 1.11%)</title><rect x="0.8038%" y="1381" width="1.1063%" height="15" fill="rgb(216,222,40)" fg:x="619" fg:w="852"/><text x="1.0538%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (369 samples, 0.48%)</title><rect x="1.4309%" y="1365" width="0.4791%" height="15" fill="rgb(234,217,39)" fg:x="1102" fg:w="369"/><text x="1.6809%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (21 samples, 0.03%)</title><rect x="1.8828%" y="1349" width="0.0273%" height="15" fill="rgb(207,178,40)" fg:x="1450" fg:w="21"/><text x="2.1328%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (14 samples, 0.02%)</title><rect x="1.8919%" y="1333" width="0.0182%" height="15" fill="rgb(221,136,13)" fg:x="1457" fg:w="14"/><text x="2.1419%" y="1343.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (10 samples, 0.01%)</title><rect x="1.9101%" y="1333" width="0.0130%" height="15" fill="rgb(249,199,10)" fg:x="1471" fg:w="10"/><text x="2.1601%" y="1343.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (10 samples, 0.01%)</title><rect x="1.9101%" y="1317" width="0.0130%" height="15" fill="rgb(249,222,13)" fg:x="1471" fg:w="10"/><text x="2.1601%" y="1327.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (16 samples, 0.02%)</title><rect x="1.9101%" y="1365" width="0.0208%" height="15" fill="rgb(244,185,38)" fg:x="1471" fg:w="16"/><text x="2.1601%" y="1375.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (16 samples, 0.02%)</title><rect x="1.9101%" y="1349" width="0.0208%" height="15" fill="rgb(236,202,9)" fg:x="1471" fg:w="16"/><text x="2.1601%" y="1359.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (11 samples, 0.01%)</title><rect x="1.9322%" y="1333" width="0.0143%" height="15" fill="rgb(250,229,37)" fg:x="1488" fg:w="11"/><text x="2.1822%" y="1343.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (11 samples, 0.01%)</title><rect x="1.9322%" y="1317" width="0.0143%" height="15" fill="rgb(206,174,23)" fg:x="1488" fg:w="11"/><text x="2.1822%" y="1327.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (9 samples, 0.01%)</title><rect x="1.9348%" y="1301" width="0.0117%" height="15" fill="rgb(211,33,43)" fg:x="1490" fg:w="9"/><text x="2.1848%" y="1311.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (9 samples, 0.01%)</title><rect x="1.9348%" y="1285" width="0.0117%" height="15" fill="rgb(245,58,50)" fg:x="1490" fg:w="9"/><text x="2.1848%" y="1295.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (17 samples, 0.02%)</title><rect x="1.9309%" y="1349" width="0.0221%" height="15" fill="rgb(244,68,36)" fg:x="1487" fg:w="17"/><text x="2.1809%" y="1359.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (10 samples, 0.01%)</title><rect x="1.9685%" y="1205" width="0.0130%" height="15" fill="rgb(232,229,15)" fg:x="1516" fg:w="10"/><text x="2.2185%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.01%)</title><rect x="1.9711%" y="1189" width="0.0104%" height="15" fill="rgb(254,30,23)" fg:x="1518" fg:w="8"/><text x="2.2211%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.01%)</title><rect x="1.9711%" y="1173" width="0.0104%" height="15" fill="rgb(235,160,14)" fg:x="1518" fg:w="8"/><text x="2.2211%" y="1183.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (8 samples, 0.01%)</title><rect x="1.9815%" y="1173" width="0.0104%" height="15" fill="rgb(212,155,44)" fg:x="1526" fg:w="8"/><text x="2.2315%" y="1183.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (10 samples, 0.01%)</title><rect x="1.9815%" y="1189" width="0.0130%" height="15" fill="rgb(226,2,50)" fg:x="1526" fg:w="10"/><text x="2.2315%" y="1199.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (13 samples, 0.02%)</title><rect x="1.9945%" y="1173" width="0.0169%" height="15" fill="rgb(234,177,6)" fg:x="1536" fg:w="13"/><text x="2.2445%" y="1183.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (8 samples, 0.01%)</title><rect x="2.0010%" y="1157" width="0.0104%" height="15" fill="rgb(217,24,9)" fg:x="1541" fg:w="8"/><text x="2.2510%" y="1167.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (15 samples, 0.02%)</title><rect x="1.9945%" y="1189" width="0.0195%" height="15" fill="rgb(220,13,46)" fg:x="1536" fg:w="15"/><text x="2.2445%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (29 samples, 0.04%)</title><rect x="1.9815%" y="1205" width="0.0377%" height="15" fill="rgb(239,221,27)" fg:x="1526" fg:w="29"/><text x="2.2315%" y="1215.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (47 samples, 0.06%)</title><rect x="1.9659%" y="1253" width="0.0610%" height="15" fill="rgb(222,198,25)" fg:x="1514" fg:w="47"/><text x="2.2159%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (47 samples, 0.06%)</title><rect x="1.9659%" y="1237" width="0.0610%" height="15" fill="rgb(211,99,13)" fg:x="1514" fg:w="47"/><text x="2.2159%" y="1247.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (47 samples, 0.06%)</title><rect x="1.9659%" y="1221" width="0.0610%" height="15" fill="rgb(232,111,31)" fg:x="1514" fg:w="47"/><text x="2.2159%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (64 samples, 0.08%)</title><rect x="1.9529%" y="1349" width="0.0831%" height="15" fill="rgb(245,82,37)" fg:x="1504" fg:w="64"/><text x="2.2029%" y="1359.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (58 samples, 0.08%)</title><rect x="1.9607%" y="1333" width="0.0753%" height="15" fill="rgb(227,149,46)" fg:x="1510" fg:w="58"/><text x="2.2107%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.08%)</title><rect x="1.9607%" y="1317" width="0.0753%" height="15" fill="rgb(218,36,50)" fg:x="1510" fg:w="58"/><text x="2.2107%" y="1327.50"></text></g><g><title>std::panicking::try (58 samples, 0.08%)</title><rect x="1.9607%" y="1301" width="0.0753%" height="15" fill="rgb(226,80,48)" fg:x="1510" fg:w="58"/><text x="2.2107%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.08%)</title><rect x="1.9607%" y="1285" width="0.0753%" height="15" fill="rgb(238,224,15)" fg:x="1510" fg:w="58"/><text x="2.2107%" y="1295.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (58 samples, 0.08%)</title><rect x="1.9607%" y="1269" width="0.0753%" height="15" fill="rgb(241,136,10)" fg:x="1510" fg:w="58"/><text x="2.2107%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Function::new (9 samples, 0.01%)</title><rect x="2.0451%" y="1317" width="0.0117%" height="15" fill="rgb(208,32,45)" fg:x="1575" fg:w="9"/><text x="2.2951%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (114 samples, 0.15%)</title><rect x="1.9101%" y="1381" width="0.1480%" height="15" fill="rgb(207,135,9)" fg:x="1471" fg:w="114"/><text x="2.1601%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (98 samples, 0.13%)</title><rect x="1.9309%" y="1365" width="0.1273%" height="15" fill="rgb(206,86,44)" fg:x="1487" fg:w="98"/><text x="2.1809%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (17 samples, 0.02%)</title><rect x="2.0360%" y="1349" width="0.0221%" height="15" fill="rgb(245,177,15)" fg:x="1568" fg:w="17"/><text x="2.2860%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (13 samples, 0.02%)</title><rect x="2.0412%" y="1333" width="0.0169%" height="15" fill="rgb(206,64,50)" fg:x="1572" fg:w="13"/><text x="2.2912%" y="1343.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (12 samples, 0.02%)</title><rect x="2.0620%" y="1365" width="0.0156%" height="15" fill="rgb(234,36,40)" fg:x="1588" fg:w="12"/><text x="2.3120%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="2.0620%" y="1349" width="0.0156%" height="15" fill="rgb(213,64,8)" fg:x="1588" fg:w="12"/><text x="2.3120%" y="1359.50"></text></g><g><title>std::panicking::try (12 samples, 0.02%)</title><rect x="2.0620%" y="1333" width="0.0156%" height="15" fill="rgb(210,75,36)" fg:x="1588" fg:w="12"/><text x="2.3120%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="2.0620%" y="1317" width="0.0156%" height="15" fill="rgb(229,88,21)" fg:x="1588" fg:w="12"/><text x="2.3120%" y="1327.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (12 samples, 0.02%)</title><rect x="2.0620%" y="1301" width="0.0156%" height="15" fill="rgb(252,204,47)" fg:x="1588" fg:w="12"/><text x="2.3120%" y="1311.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (11 samples, 0.01%)</title><rect x="2.0633%" y="1285" width="0.0143%" height="15" fill="rgb(208,77,27)" fg:x="1589" fg:w="11"/><text x="2.3133%" y="1295.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (11 samples, 0.01%)</title><rect x="2.0633%" y="1269" width="0.0143%" height="15" fill="rgb(221,76,26)" fg:x="1589" fg:w="11"/><text x="2.3133%" y="1279.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (10 samples, 0.01%)</title><rect x="2.1192%" y="1157" width="0.0130%" height="15" fill="rgb(225,139,18)" fg:x="1632" fg:w="10"/><text x="2.3692%" y="1167.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (28 samples, 0.04%)</title><rect x="2.1140%" y="1173" width="0.0364%" height="15" fill="rgb(230,137,11)" fg:x="1628" fg:w="28"/><text x="2.3640%" y="1183.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (10 samples, 0.01%)</title><rect x="2.1373%" y="1157" width="0.0130%" height="15" fill="rgb(212,28,1)" fg:x="1646" fg:w="10"/><text x="2.3873%" y="1167.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (38 samples, 0.05%)</title><rect x="2.1036%" y="1221" width="0.0493%" height="15" fill="rgb(248,164,17)" fg:x="1620" fg:w="38"/><text x="2.3536%" y="1231.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (38 samples, 0.05%)</title><rect x="2.1036%" y="1205" width="0.0493%" height="15" fill="rgb(222,171,42)" fg:x="1620" fg:w="38"/><text x="2.3536%" y="1215.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (32 samples, 0.04%)</title><rect x="2.1114%" y="1189" width="0.0416%" height="15" fill="rgb(243,84,45)" fg:x="1626" fg:w="32"/><text x="2.3614%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (48 samples, 0.06%)</title><rect x="2.0997%" y="1237" width="0.0623%" height="15" fill="rgb(252,49,23)" fg:x="1617" fg:w="48"/><text x="2.3497%" y="1247.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (13 samples, 0.02%)</title><rect x="2.1620%" y="1221" width="0.0169%" height="15" fill="rgb(215,19,7)" fg:x="1665" fg:w="13"/><text x="2.4120%" y="1231.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (13 samples, 0.02%)</title><rect x="2.1620%" y="1205" width="0.0169%" height="15" fill="rgb(238,81,41)" fg:x="1665" fg:w="13"/><text x="2.4120%" y="1215.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (72 samples, 0.09%)</title><rect x="2.0906%" y="1285" width="0.0935%" height="15" fill="rgb(210,199,37)" fg:x="1610" fg:w="72"/><text x="2.3406%" y="1295.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (72 samples, 0.09%)</title><rect x="2.0906%" y="1269" width="0.0935%" height="15" fill="rgb(244,192,49)" fg:x="1610" fg:w="72"/><text x="2.3406%" y="1279.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (72 samples, 0.09%)</title><rect x="2.0906%" y="1253" width="0.0935%" height="15" fill="rgb(226,211,11)" fg:x="1610" fg:w="72"/><text x="2.3406%" y="1263.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (17 samples, 0.02%)</title><rect x="2.1620%" y="1237" width="0.0221%" height="15" fill="rgb(236,162,54)" fg:x="1665" fg:w="17"/><text x="2.4120%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (102 samples, 0.13%)</title><rect x="2.0581%" y="1381" width="0.1324%" height="15" fill="rgb(220,229,9)" fg:x="1585" fg:w="102"/><text x="2.3081%" y="1391.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (87 samples, 0.11%)</title><rect x="2.0776%" y="1365" width="0.1130%" height="15" fill="rgb(250,87,22)" fg:x="1600" fg:w="87"/><text x="2.3276%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (87 samples, 0.11%)</title><rect x="2.0776%" y="1349" width="0.1130%" height="15" fill="rgb(239,43,17)" fg:x="1600" fg:w="87"/><text x="2.3276%" y="1359.50"></text></g><g><title>std::panicking::try (87 samples, 0.11%)</title><rect x="2.0776%" y="1333" width="0.1130%" height="15" fill="rgb(231,177,25)" fg:x="1600" fg:w="87"/><text x="2.3276%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (87 samples, 0.11%)</title><rect x="2.0776%" y="1317" width="0.1130%" height="15" fill="rgb(219,179,1)" fg:x="1600" fg:w="87"/><text x="2.3276%" y="1327.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (87 samples, 0.11%)</title><rect x="2.0776%" y="1301" width="0.1130%" height="15" fill="rgb(238,219,53)" fg:x="1600" fg:w="87"/><text x="2.3276%" y="1311.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (1,080 samples, 1.40%)</title><rect x="0.8038%" y="1493" width="1.4024%" height="15" fill="rgb(232,167,36)" fg:x="619" fg:w="1080"/><text x="1.0538%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (1,080 samples, 1.40%)</title><rect x="0.8038%" y="1477" width="1.4024%" height="15" fill="rgb(244,19,51)" fg:x="619" fg:w="1080"/><text x="1.0538%" y="1487.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (1,080 samples, 1.40%)</title><rect x="0.8038%" y="1461" width="1.4024%" height="15" fill="rgb(224,6,22)" fg:x="619" fg:w="1080"/><text x="1.0538%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (1,080 samples, 1.40%)</title><rect x="0.8038%" y="1445" width="1.4024%" height="15" fill="rgb(224,145,5)" fg:x="619" fg:w="1080"/><text x="1.0538%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (1,080 samples, 1.40%)</title><rect x="0.8038%" y="1429" width="1.4024%" height="15" fill="rgb(234,130,49)" fg:x="619" fg:w="1080"/><text x="1.0538%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (1,080 samples, 1.40%)</title><rect x="0.8038%" y="1413" width="1.4024%" height="15" fill="rgb(254,6,2)" fg:x="619" fg:w="1080"/><text x="1.0538%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (228 samples, 0.30%)</title><rect x="1.9101%" y="1397" width="0.2961%" height="15" fill="rgb(208,96,46)" fg:x="1471" fg:w="228"/><text x="2.1601%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (12 samples, 0.02%)</title><rect x="2.1906%" y="1381" width="0.0156%" height="15" fill="rgb(239,3,39)" fg:x="1687" fg:w="12"/><text x="2.4406%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (10 samples, 0.01%)</title><rect x="2.1932%" y="1365" width="0.0130%" height="15" fill="rgb(233,210,1)" fg:x="1689" fg:w="10"/><text x="2.4432%" y="1375.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (1,081 samples, 1.40%)</title><rect x="0.8038%" y="1509" width="1.4037%" height="15" fill="rgb(244,137,37)" fg:x="619" fg:w="1081"/><text x="1.0538%" y="1519.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (9 samples, 0.01%)</title><rect x="2.2113%" y="1269" width="0.0117%" height="15" fill="rgb(240,136,2)" fg:x="1703" fg:w="9"/><text x="2.4613%" y="1279.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (13 samples, 0.02%)</title><rect x="2.2087%" y="1413" width="0.0169%" height="15" fill="rgb(239,18,37)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1423.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::Update&gt;::update (13 samples, 0.02%)</title><rect x="2.2087%" y="1397" width="0.0169%" height="15" fill="rgb(218,185,22)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1407.50"></text></g><g><title>sha2::sha512::Engine512::update (13 samples, 0.02%)</title><rect x="2.2087%" y="1381" width="0.0169%" height="15" fill="rgb(225,218,4)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1391.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (13 samples, 0.02%)</title><rect x="2.2087%" y="1365" width="0.0169%" height="15" fill="rgb(230,182,32)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1375.50"></text></g><g><title>sha2::sha512::Engine512::update::{{closure}} (13 samples, 0.02%)</title><rect x="2.2087%" y="1349" width="0.0169%" height="15" fill="rgb(242,56,43)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1359.50"></text></g><g><title>sha2::sha512::compress512 (13 samples, 0.02%)</title><rect x="2.2087%" y="1333" width="0.0169%" height="15" fill="rgb(233,99,24)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1343.50"></text></g><g><title>sha2::sha512::x86::compress (13 samples, 0.02%)</title><rect x="2.2087%" y="1317" width="0.0169%" height="15" fill="rgb(234,209,42)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1327.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (13 samples, 0.02%)</title><rect x="2.2087%" y="1301" width="0.0169%" height="15" fill="rgb(227,7,12)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1311.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (13 samples, 0.02%)</title><rect x="2.2087%" y="1285" width="0.0169%" height="15" fill="rgb(245,203,43)" fg:x="1701" fg:w="13"/><text x="2.4587%" y="1295.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (46 samples, 0.06%)</title><rect x="2.2347%" y="1381" width="0.0597%" height="15" fill="rgb(238,205,33)" fg:x="1721" fg:w="46"/><text x="2.4847%" y="1391.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (45 samples, 0.06%)</title><rect x="2.2360%" y="1365" width="0.0584%" height="15" fill="rgb(231,56,7)" fg:x="1722" fg:w="45"/><text x="2.4860%" y="1375.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (43 samples, 0.06%)</title><rect x="2.2386%" y="1349" width="0.0558%" height="15" fill="rgb(244,186,29)" fg:x="1724" fg:w="43"/><text x="2.4886%" y="1359.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (8 samples, 0.01%)</title><rect x="2.2841%" y="1333" width="0.0104%" height="15" fill="rgb(234,111,31)" fg:x="1759" fg:w="8"/><text x="2.5341%" y="1343.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (53 samples, 0.07%)</title><rect x="2.2282%" y="1413" width="0.0688%" height="15" fill="rgb(241,149,10)" fg:x="1716" fg:w="53"/><text x="2.4782%" y="1423.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (51 samples, 0.07%)</title><rect x="2.2308%" y="1397" width="0.0662%" height="15" fill="rgb(249,206,44)" fg:x="1718" fg:w="51"/><text x="2.4808%" y="1407.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::is_small_order (14 samples, 0.02%)</title><rect x="2.2970%" y="1413" width="0.0182%" height="15" fill="rgb(251,153,30)" fg:x="1769" fg:w="14"/><text x="2.5470%" y="1423.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_cofactor (9 samples, 0.01%)</title><rect x="2.3035%" y="1397" width="0.0117%" height="15" fill="rgb(239,152,38)" fg:x="1774" fg:w="9"/><text x="2.5535%" y="1407.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (9 samples, 0.01%)</title><rect x="2.3035%" y="1381" width="0.0117%" height="15" fill="rgb(249,139,47)" fg:x="1774" fg:w="9"/><text x="2.5535%" y="1391.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (10 samples, 0.01%)</title><rect x="2.3386%" y="1365" width="0.0130%" height="15" fill="rgb(244,64,35)" fg:x="1801" fg:w="10"/><text x="2.5886%" y="1375.50"></text></g><g><title>&lt;curve25519_dalek::window::NafLookupTable5&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (23 samples, 0.03%)</title><rect x="2.3373%" y="1381" width="0.0299%" height="15" fill="rgb(216,46,15)" fg:x="1800" fg:w="23"/><text x="2.5873%" y="1391.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (12 samples, 0.02%)</title><rect x="2.3711%" y="1381" width="0.0156%" height="15" fill="rgb(250,74,19)" fg:x="1826" fg:w="12"/><text x="2.6211%" y="1391.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (16 samples, 0.02%)</title><rect x="2.3944%" y="1365" width="0.0208%" height="15" fill="rgb(249,42,33)" fg:x="1844" fg:w="16"/><text x="2.6444%" y="1375.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (24 samples, 0.03%)</title><rect x="2.3866%" y="1381" width="0.0312%" height="15" fill="rgb(242,149,17)" fg:x="1838" fg:w="24"/><text x="2.6366%" y="1391.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (10 samples, 0.01%)</title><rect x="2.4178%" y="1381" width="0.0130%" height="15" fill="rgb(244,29,21)" fg:x="1862" fg:w="10"/><text x="2.6678%" y="1391.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (11 samples, 0.01%)</title><rect x="2.4308%" y="1381" width="0.0143%" height="15" fill="rgb(220,130,37)" fg:x="1872" fg:w="11"/><text x="2.6808%" y="1391.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (11 samples, 0.01%)</title><rect x="2.4308%" y="1365" width="0.0143%" height="15" fill="rgb(211,67,2)" fg:x="1872" fg:w="11"/><text x="2.6808%" y="1375.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (55 samples, 0.07%)</title><rect x="2.4451%" y="1381" width="0.0714%" height="15" fill="rgb(235,68,52)" fg:x="1883" fg:w="55"/><text x="2.6951%" y="1391.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (48 samples, 0.06%)</title><rect x="2.4542%" y="1365" width="0.0623%" height="15" fill="rgb(246,142,3)" fg:x="1890" fg:w="48"/><text x="2.7042%" y="1375.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (12 samples, 0.02%)</title><rect x="2.5009%" y="1349" width="0.0156%" height="15" fill="rgb(241,25,7)" fg:x="1926" fg:w="12"/><text x="2.7509%" y="1359.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (124 samples, 0.16%)</title><rect x="2.5165%" y="1381" width="0.1610%" height="15" fill="rgb(242,119,39)" fg:x="1938" fg:w="124"/><text x="2.7665%" y="1391.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (124 samples, 0.16%)</title><rect x="2.5165%" y="1365" width="0.1610%" height="15" fill="rgb(241,98,45)" fg:x="1938" fg:w="124"/><text x="2.7665%" y="1375.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (29 samples, 0.04%)</title><rect x="2.6398%" y="1349" width="0.0377%" height="15" fill="rgb(254,28,30)" fg:x="2033" fg:w="29"/><text x="2.8898%" y="1359.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (18 samples, 0.02%)</title><rect x="2.6983%" y="1365" width="0.0234%" height="15" fill="rgb(241,142,54)" fg:x="2078" fg:w="18"/><text x="2.9483%" y="1375.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (13 samples, 0.02%)</title><rect x="2.7048%" y="1349" width="0.0169%" height="15" fill="rgb(222,85,15)" fg:x="2083" fg:w="13"/><text x="2.9548%" y="1359.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (29 samples, 0.04%)</title><rect x="2.7217%" y="1365" width="0.0377%" height="15" fill="rgb(210,85,47)" fg:x="2096" fg:w="29"/><text x="2.9717%" y="1375.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (9 samples, 0.01%)</title><rect x="2.7476%" y="1349" width="0.0117%" height="15" fill="rgb(224,206,25)" fg:x="2116" fg:w="9"/><text x="2.9976%" y="1359.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (42 samples, 0.05%)</title><rect x="2.7606%" y="1365" width="0.0545%" height="15" fill="rgb(243,201,19)" fg:x="2126" fg:w="42"/><text x="3.0106%" y="1375.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (38 samples, 0.05%)</title><rect x="2.7658%" y="1349" width="0.0493%" height="15" fill="rgb(236,59,4)" fg:x="2130" fg:w="38"/><text x="3.0158%" y="1359.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (221 samples, 0.29%)</title><rect x="2.6775%" y="1381" width="0.2870%" height="15" fill="rgb(254,179,45)" fg:x="2062" fg:w="221"/><text x="2.9275%" y="1391.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (115 samples, 0.15%)</title><rect x="2.8151%" y="1365" width="0.1493%" height="15" fill="rgb(226,14,10)" fg:x="2168" fg:w="115"/><text x="3.0651%" y="1375.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (115 samples, 0.15%)</title><rect x="2.8151%" y="1349" width="0.1493%" height="15" fill="rgb(244,27,41)" fg:x="2168" fg:w="115"/><text x="3.0651%" y="1359.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (15 samples, 0.02%)</title><rect x="2.9450%" y="1333" width="0.0195%" height="15" fill="rgb(235,35,32)" fg:x="2268" fg:w="15"/><text x="3.1950%" y="1343.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (508 samples, 0.66%)</title><rect x="2.3152%" y="1413" width="0.6596%" height="15" fill="rgb(218,68,31)" fg:x="1783" fg:w="508"/><text x="2.5652%" y="1423.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (508 samples, 0.66%)</title><rect x="2.3152%" y="1397" width="0.6596%" height="15" fill="rgb(207,120,37)" fg:x="1783" fg:w="508"/><text x="2.5652%" y="1407.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (597 samples, 0.78%)</title><rect x="2.2087%" y="1445" width="0.7752%" height="15" fill="rgb(227,98,0)" fg:x="1701" fg:w="597"/><text x="2.4587%" y="1455.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_strict (597 samples, 0.78%)</title><rect x="2.2087%" y="1429" width="0.7752%" height="15" fill="rgb(207,7,3)" fg:x="1701" fg:w="597"/><text x="2.4587%" y="1439.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::verify_transaction (599 samples, 0.78%)</title><rect x="2.2074%" y="1509" width="0.7778%" height="15" fill="rgb(206,98,19)" fg:x="1700" fg:w="599"/><text x="2.4574%" y="1519.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_sig (598 samples, 0.78%)</title><rect x="2.2087%" y="1493" width="0.7765%" height="15" fill="rgb(217,5,26)" fg:x="1701" fg:w="598"/><text x="2.4587%" y="1503.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (598 samples, 0.78%)</title><rect x="2.2087%" y="1477" width="0.7765%" height="15" fill="rgb(235,190,38)" fg:x="1701" fg:w="598"/><text x="2.4587%" y="1487.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify (598 samples, 0.78%)</title><rect x="2.2087%" y="1461" width="0.7765%" height="15" fill="rgb(247,86,24)" fg:x="1701" fg:w="598"/><text x="2.4587%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (9 samples, 0.01%)</title><rect x="2.9852%" y="1461" width="0.0117%" height="15" fill="rgb(205,101,16)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.01%)</title><rect x="2.9852%" y="1445" width="0.0117%" height="15" fill="rgb(246,168,33)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="2.9852%" y="1429" width="0.0117%" height="15" fill="rgb(231,114,1)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="2.9852%" y="1413" width="0.0117%" height="15" fill="rgb(207,184,53)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="2.9852%" y="1397" width="0.0117%" height="15" fill="rgb(224,95,51)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="2.9852%" y="1381" width="0.0117%" height="15" fill="rgb(212,188,45)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="2.9852%" y="1365" width="0.0117%" height="15" fill="rgb(223,154,38)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="2.9852%" y="1349" width="0.0117%" height="15" fill="rgb(251,22,52)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="2.9852%" y="1333" width="0.0117%" height="15" fill="rgb(229,209,22)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="2.9852%" y="1317" width="0.0117%" height="15" fill="rgb(234,138,34)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="2.9852%" y="1301" width="0.0117%" height="15" fill="rgb(212,95,11)" fg:x="2299" fg:w="9"/><text x="3.2352%" y="1311.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (11 samples, 0.01%)</title><rect x="2.9852%" y="1509" width="0.0143%" height="15" fill="rgb(240,179,47)" fg:x="2299" fg:w="11"/><text x="3.2352%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (11 samples, 0.01%)</title><rect x="2.9852%" y="1493" width="0.0143%" height="15" fill="rgb(240,163,11)" fg:x="2299" fg:w="11"/><text x="3.2352%" y="1503.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (11 samples, 0.01%)</title><rect x="2.9852%" y="1477" width="0.0143%" height="15" fill="rgb(236,37,12)" fg:x="2299" fg:w="11"/><text x="3.2352%" y="1487.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (12 samples, 0.02%)</title><rect x="3.0138%" y="1445" width="0.0156%" height="15" fill="rgb(232,164,16)" fg:x="2321" fg:w="12"/><text x="3.2638%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9 samples, 0.01%)</title><rect x="3.0177%" y="1429" width="0.0117%" height="15" fill="rgb(244,205,15)" fg:x="2324" fg:w="9"/><text x="3.2677%" y="1439.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9 samples, 0.01%)</title><rect x="3.0177%" y="1413" width="0.0117%" height="15" fill="rgb(223,117,47)" fg:x="2324" fg:w="9"/><text x="3.2677%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="3.0177%" y="1397" width="0.0117%" height="15" fill="rgb(244,107,35)" fg:x="2324" fg:w="9"/><text x="3.2677%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.01%)</title><rect x="3.0177%" y="1381" width="0.0117%" height="15" fill="rgb(205,140,8)" fg:x="2324" fg:w="9"/><text x="3.2677%" y="1391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="3.0190%" y="1365" width="0.0104%" height="15" fill="rgb(228,84,46)" fg:x="2325" fg:w="8"/><text x="3.2690%" y="1375.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.02%)</title><rect x="3.0346%" y="1413" width="0.0234%" height="15" fill="rgb(254,188,9)" fg:x="2337" fg:w="18"/><text x="3.2846%" y="1423.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (10 samples, 0.01%)</title><rect x="3.0593%" y="1413" width="0.0130%" height="15" fill="rgb(206,112,54)" fg:x="2356" fg:w="10"/><text x="3.3093%" y="1423.50"></text></g><g><title>core::fmt::Write::write_fmt (46 samples, 0.06%)</title><rect x="3.0294%" y="1445" width="0.0597%" height="15" fill="rgb(216,84,49)" fg:x="2333" fg:w="46"/><text x="3.2794%" y="1455.50"></text></g><g><title>core::fmt::write (46 samples, 0.06%)</title><rect x="3.0294%" y="1429" width="0.0597%" height="15" fill="rgb(214,194,35)" fg:x="2333" fg:w="46"/><text x="3.2794%" y="1439.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (11 samples, 0.01%)</title><rect x="3.0748%" y="1413" width="0.0143%" height="15" fill="rgb(249,28,3)" fg:x="2368" fg:w="11"/><text x="3.3248%" y="1423.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (8 samples, 0.01%)</title><rect x="3.0787%" y="1397" width="0.0104%" height="15" fill="rgb(222,56,52)" fg:x="2371" fg:w="8"/><text x="3.3287%" y="1407.50"></text></g><g><title>alloc::fmt::format (70 samples, 0.09%)</title><rect x="2.9995%" y="1509" width="0.0909%" height="15" fill="rgb(245,217,50)" fg:x="2310" fg:w="70"/><text x="3.2495%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (70 samples, 0.09%)</title><rect x="2.9995%" y="1493" width="0.0909%" height="15" fill="rgb(213,201,24)" fg:x="2310" fg:w="70"/><text x="3.2495%" y="1503.50"></text></g><g><title>alloc::fmt::format::{{closure}} (70 samples, 0.09%)</title><rect x="2.9995%" y="1477" width="0.0909%" height="15" fill="rgb(248,116,28)" fg:x="2310" fg:w="70"/><text x="3.2495%" y="1487.50"></text></g><g><title>alloc::fmt::format::format_inner (70 samples, 0.09%)</title><rect x="2.9995%" y="1461" width="0.0909%" height="15" fill="rgb(219,72,43)" fg:x="2310" fg:w="70"/><text x="3.2495%" y="1471.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (12 samples, 0.02%)</title><rect x="3.3878%" y="1317" width="0.0156%" height="15" fill="rgb(209,138,14)" fg:x="2609" fg:w="12"/><text x="3.6378%" y="1327.50"></text></g><g><title>core::fmt::getcount (8 samples, 0.01%)</title><rect x="3.4034%" y="1317" width="0.0104%" height="15" fill="rgb(222,18,33)" fg:x="2621" fg:w="8"/><text x="3.6534%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.04%)</title><rect x="3.4631%" y="1125" width="0.0441%" height="15" fill="rgb(213,199,7)" fg:x="2667" fg:w="34"/><text x="3.7131%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.04%)</title><rect x="3.4631%" y="1109" width="0.0441%" height="15" fill="rgb(250,110,10)" fg:x="2667" fg:w="34"/><text x="3.7131%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.04%)</title><rect x="3.4631%" y="1093" width="0.0441%" height="15" fill="rgb(248,123,6)" fg:x="2667" fg:w="34"/><text x="3.7131%" y="1103.50"></text></g><g><title>realloc (34 samples, 0.04%)</title><rect x="3.4631%" y="1077" width="0.0441%" height="15" fill="rgb(206,91,31)" fg:x="2667" fg:w="34"/><text x="3.7131%" y="1087.50"></text></g><g><title>[libc.so.6] (24 samples, 0.03%)</title><rect x="3.4761%" y="1061" width="0.0312%" height="15" fill="rgb(211,154,13)" fg:x="2677" fg:w="24"/><text x="3.7261%" y="1071.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="3.4813%" y="1045" width="0.0260%" height="15" fill="rgb(225,148,7)" fg:x="2681" fg:w="20"/><text x="3.7313%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.05%)</title><rect x="3.4592%" y="1141" width="0.0493%" height="15" fill="rgb(220,160,43)" fg:x="2664" fg:w="38"/><text x="3.7092%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="3.4449%" y="1205" width="0.0649%" height="15" fill="rgb(213,52,39)" fg:x="2653" fg:w="50"/><text x="3.6949%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="3.4449%" y="1189" width="0.0649%" height="15" fill="rgb(243,137,7)" fg:x="2653" fg:w="50"/><text x="3.6949%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (48 samples, 0.06%)</title><rect x="3.4475%" y="1173" width="0.0623%" height="15" fill="rgb(230,79,13)" fg:x="2655" fg:w="48"/><text x="3.6975%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.05%)</title><rect x="3.4553%" y="1157" width="0.0545%" height="15" fill="rgb(247,105,23)" fg:x="2661" fg:w="42"/><text x="3.7053%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="3.5098%" y="1205" width="0.0156%" height="15" fill="rgb(223,179,41)" fg:x="2703" fg:w="12"/><text x="3.7598%" y="1215.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="3.5098%" y="1189" width="0.0156%" height="15" fill="rgb(218,9,34)" fg:x="2703" fg:w="12"/><text x="3.7598%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (77 samples, 0.10%)</title><rect x="3.4319%" y="1285" width="0.1000%" height="15" fill="rgb(222,106,8)" fg:x="2643" fg:w="77"/><text x="3.6819%" y="1295.50"></text></g><g><title>alloc::string::String::push_str (70 samples, 0.09%)</title><rect x="3.4410%" y="1269" width="0.0909%" height="15" fill="rgb(211,220,0)" fg:x="2650" fg:w="70"/><text x="3.6910%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (70 samples, 0.09%)</title><rect x="3.4410%" y="1253" width="0.0909%" height="15" fill="rgb(229,52,16)" fg:x="2650" fg:w="70"/><text x="3.6910%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (70 samples, 0.09%)</title><rect x="3.4410%" y="1237" width="0.0909%" height="15" fill="rgb(212,155,18)" fg:x="2650" fg:w="70"/><text x="3.6910%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (70 samples, 0.09%)</title><rect x="3.4410%" y="1221" width="0.0909%" height="15" fill="rgb(242,21,14)" fg:x="2650" fg:w="70"/><text x="3.6910%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="3.5826%" y="1269" width="0.0104%" height="15" fill="rgb(222,19,48)" fg:x="2759" fg:w="8"/><text x="3.8326%" y="1279.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 samples, 0.01%)</title><rect x="3.5929%" y="1269" width="0.0130%" height="15" fill="rgb(232,45,27)" fg:x="2767" fg:w="10"/><text x="3.8429%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (9 samples, 0.01%)</title><rect x="3.6098%" y="1253" width="0.0117%" height="15" fill="rgb(249,103,42)" fg:x="2780" fg:w="9"/><text x="3.8598%" y="1263.50"></text></g><g><title>core::fmt::Formatter::padding (13 samples, 0.02%)</title><rect x="3.6059%" y="1269" width="0.0169%" height="15" fill="rgb(246,81,33)" fg:x="2777" fg:w="13"/><text x="3.8559%" y="1279.50"></text></g><g><title>core::fmt::Formatter::pad_integral (62 samples, 0.08%)</title><rect x="3.5436%" y="1285" width="0.0805%" height="15" fill="rgb(252,33,42)" fg:x="2729" fg:w="62"/><text x="3.7936%" y="1295.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (174 samples, 0.23%)</title><rect x="3.4138%" y="1317" width="0.2259%" height="15" fill="rgb(209,212,41)" fg:x="2629" fg:w="174"/><text x="3.6638%" y="1327.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (163 samples, 0.21%)</title><rect x="3.4280%" y="1301" width="0.2117%" height="15" fill="rgb(207,154,6)" fg:x="2640" fg:w="163"/><text x="3.6780%" y="1311.50"></text></g><g><title>core::fmt::run (222 samples, 0.29%)</title><rect x="3.3527%" y="1333" width="0.2883%" height="15" fill="rgb(223,64,47)" fg:x="2582" fg:w="222"/><text x="3.6027%" y="1343.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (333 samples, 0.43%)</title><rect x="3.2125%" y="1397" width="0.4324%" height="15" fill="rgb(211,161,38)" fg:x="2474" fg:w="333"/><text x="3.4625%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::LowerHex&gt;::fmt (325 samples, 0.42%)</title><rect x="3.2229%" y="1381" width="0.4220%" height="15" fill="rgb(219,138,40)" fg:x="2482" fg:w="325"/><text x="3.4729%" y="1391.50"></text></g><g><title>core::fmt::Formatter::write_fmt (308 samples, 0.40%)</title><rect x="3.2449%" y="1365" width="0.3999%" height="15" fill="rgb(241,228,46)" fg:x="2499" fg:w="308"/><text x="3.4949%" y="1375.50"></text></g><g><title>core::fmt::write (258 samples, 0.34%)</title><rect x="3.3099%" y="1349" width="0.3350%" height="15" fill="rgb(223,209,38)" fg:x="2549" fg:w="258"/><text x="3.5599%" y="1359.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::Debug&gt;::fmt (345 samples, 0.45%)</title><rect x="3.2034%" y="1445" width="0.4480%" height="15" fill="rgb(236,164,45)" fg:x="2467" fg:w="345"/><text x="3.4534%" y="1455.50"></text></g><g><title>core::fmt::Formatter::write_fmt (344 samples, 0.45%)</title><rect x="3.2047%" y="1429" width="0.4467%" height="15" fill="rgb(231,15,5)" fg:x="2468" fg:w="344"/><text x="3.4547%" y="1439.50"></text></g><g><title>core::fmt::write (340 samples, 0.44%)</title><rect x="3.2099%" y="1413" width="0.4415%" height="15" fill="rgb(252,35,15)" fg:x="2472" fg:w="340"/><text x="3.4599%" y="1423.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (346 samples, 0.45%)</title><rect x="3.2034%" y="1461" width="0.4493%" height="15" fill="rgb(248,181,18)" fg:x="2467" fg:w="346"/><text x="3.4534%" y="1471.50"></text></g><g><title>&lt;move_core_types::vm_status::VMStatus as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.6527%" y="1461" width="0.0117%" height="15" fill="rgb(233,39,42)" fg:x="2813" fg:w="9"/><text x="3.9027%" y="1471.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::sender (36 samples, 0.05%)</title><rect x="3.6799%" y="1461" width="0.0467%" height="15" fill="rgb(238,110,33)" fg:x="2834" fg:w="36"/><text x="3.9299%" y="1471.50"></text></g><g><title>aptos_types::transaction::TransactionOutput::status (11 samples, 0.01%)</title><rect x="3.7267%" y="1461" width="0.0143%" height="15" fill="rgb(233,195,10)" fg:x="2870" fg:w="11"/><text x="3.9767%" y="1471.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (11 samples, 0.01%)</title><rect x="3.7449%" y="1461" width="0.0143%" height="15" fill="rgb(254,105,3)" fg:x="2884" fg:w="11"/><text x="3.9949%" y="1471.50"></text></g><g><title>prometheus::histogram::Histogram::observe (16 samples, 0.02%)</title><rect x="3.7708%" y="1413" width="0.0208%" height="15" fill="rgb(221,225,9)" fg:x="2904" fg:w="16"/><text x="4.0208%" y="1423.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (16 samples, 0.02%)</title><rect x="3.7708%" y="1397" width="0.0208%" height="15" fill="rgb(224,227,45)" fg:x="2904" fg:w="16"/><text x="4.0208%" y="1407.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (21 samples, 0.03%)</title><rect x="3.7916%" y="1381" width="0.0273%" height="15" fill="rgb(229,198,43)" fg:x="2920" fg:w="21"/><text x="4.0416%" y="1391.50"></text></g><g><title>clock_gettime (19 samples, 0.02%)</title><rect x="3.7942%" y="1365" width="0.0247%" height="15" fill="rgb(206,209,35)" fg:x="2922" fg:w="19"/><text x="4.0442%" y="1375.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (29 samples, 0.04%)</title><rect x="3.7916%" y="1397" width="0.0377%" height="15" fill="rgb(245,195,53)" fg:x="2920" fg:w="29"/><text x="4.0416%" y="1407.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (60 samples, 0.08%)</title><rect x="3.7618%" y="1445" width="0.0779%" height="15" fill="rgb(240,92,26)" fg:x="2897" fg:w="60"/><text x="4.0118%" y="1455.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (53 samples, 0.07%)</title><rect x="3.7708%" y="1429" width="0.0688%" height="15" fill="rgb(207,40,23)" fg:x="2904" fg:w="53"/><text x="4.0208%" y="1439.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (37 samples, 0.05%)</title><rect x="3.7916%" y="1413" width="0.0480%" height="15" fill="rgb(223,111,35)" fg:x="2920" fg:w="37"/><text x="4.0416%" y="1423.50"></text></g><g><title>prometheus::histogram::duration_to_seconds (8 samples, 0.01%)</title><rect x="3.8293%" y="1397" width="0.0104%" height="15" fill="rgb(229,147,28)" fg:x="2949" fg:w="8"/><text x="4.0793%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (63 samples, 0.08%)</title><rect x="3.7618%" y="1461" width="0.0818%" height="15" fill="rgb(211,29,28)" fg:x="2897" fg:w="63"/><text x="4.0118%" y="1471.50"></text></g><g><title>move_core_types::vm_status::VMStatus::keep_or_discard (16 samples, 0.02%)</title><rect x="3.8436%" y="1461" width="0.0208%" height="15" fill="rgb(228,72,33)" fg:x="2960" fg:w="16"/><text x="4.0936%" y="1471.50"></text></g><g><title>prometheus::counter::GenericCounter&lt;P&gt;::inc (8 samples, 0.01%)</title><rect x="3.8643%" y="1461" width="0.0104%" height="15" fill="rgb(205,214,31)" fg:x="2976" fg:w="8"/><text x="4.1143%" y="1471.50"></text></g><g><title>prometheus::value::Value&lt;P&gt;::inc (8 samples, 0.01%)</title><rect x="3.8643%" y="1445" width="0.0104%" height="15" fill="rgb(224,111,15)" fg:x="2976" fg:w="8"/><text x="4.1143%" y="1455.50"></text></g><g><title>prometheus::value::Value&lt;P&gt;::inc_by (8 samples, 0.01%)</title><rect x="3.8643%" y="1429" width="0.0104%" height="15" fill="rgb(253,21,26)" fg:x="2976" fg:w="8"/><text x="4.1143%" y="1439.50"></text></g><g><title>&lt;prometheus::atomic64::AtomicU64 as prometheus::atomic64::Atomic&gt;::inc_by (8 samples, 0.01%)</title><rect x="3.8643%" y="1413" width="0.0104%" height="15" fill="rgb(245,139,43)" fg:x="2976" fg:w="8"/><text x="4.1143%" y="1423.50"></text></g><g><title>prometheus::atomic64::AtomicU64::inc_by_with_ordering (8 samples, 0.01%)</title><rect x="3.8643%" y="1397" width="0.0104%" height="15" fill="rgb(252,170,7)" fg:x="2976" fg:w="8"/><text x="4.1143%" y="1407.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (16 samples, 0.02%)</title><rect x="3.8747%" y="1461" width="0.0208%" height="15" fill="rgb(231,118,14)" fg:x="2984" fg:w="16"/><text x="4.1247%" y="1471.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (9 samples, 0.01%)</title><rect x="3.9111%" y="1413" width="0.0117%" height="15" fill="rgb(238,83,0)" fg:x="3012" fg:w="9"/><text x="4.1611%" y="1423.50"></text></g><g><title>&lt;prometheus::counter::GenericCounter&lt;P&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.9111%" y="1397" width="0.0117%" height="15" fill="rgb(221,39,39)" fg:x="3012" fg:w="9"/><text x="4.1611%" y="1407.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.9111%" y="1381" width="0.0117%" height="15" fill="rgb(222,119,46)" fg:x="3012" fg:w="9"/><text x="4.1611%" y="1391.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="3.9345%" y="1365" width="0.0156%" height="15" fill="rgb(222,165,49)" fg:x="3030" fg:w="12"/><text x="4.1845%" y="1375.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="3.9345%" y="1349" width="0.0156%" height="15" fill="rgb(219,113,52)" fg:x="3030" fg:w="12"/><text x="4.1845%" y="1359.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (640 samples, 0.83%)</title><rect x="3.1294%" y="1477" width="0.8310%" height="15" fill="rgb(214,7,15)" fg:x="2410" fg:w="640"/><text x="3.3794%" y="1487.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (50 samples, 0.06%)</title><rect x="3.8955%" y="1461" width="0.0649%" height="15" fill="rgb(235,32,4)" fg:x="3000" fg:w="50"/><text x="4.1455%" y="1471.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (49 samples, 0.06%)</title><rect x="3.8968%" y="1445" width="0.0636%" height="15" fill="rgb(238,90,54)" fg:x="3001" fg:w="49"/><text x="4.1468%" y="1455.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (49 samples, 0.06%)</title><rect x="3.8968%" y="1429" width="0.0636%" height="15" fill="rgb(213,208,19)" fg:x="3001" fg:w="49"/><text x="4.1468%" y="1439.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.03%)</title><rect x="3.9345%" y="1413" width="0.0260%" height="15" fill="rgb(233,156,4)" fg:x="3030" fg:w="20"/><text x="4.1845%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.03%)</title><rect x="3.9345%" y="1397" width="0.0260%" height="15" fill="rgb(207,194,5)" fg:x="3030" fg:w="20"/><text x="4.1845%" y="1407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.03%)</title><rect x="3.9345%" y="1381" width="0.0260%" height="15" fill="rgb(206,111,30)" fg:x="3030" fg:w="20"/><text x="4.1845%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.01%)</title><rect x="3.9500%" y="1365" width="0.0104%" height="15" fill="rgb(243,70,54)" fg:x="3042" fg:w="8"/><text x="4.2000%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="3.9500%" y="1349" width="0.0104%" height="15" fill="rgb(242,28,8)" fg:x="3042" fg:w="8"/><text x="4.2000%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="3.9500%" y="1333" width="0.0104%" height="15" fill="rgb(219,106,18)" fg:x="3042" fg:w="8"/><text x="4.2000%" y="1343.50"></text></g><g><title>aptos_types::on_chain_config::new_epoch_event_key (13 samples, 0.02%)</title><rect x="3.9695%" y="1461" width="0.0169%" height="15" fill="rgb(244,222,10)" fg:x="3057" fg:w="13"/><text x="4.2195%" y="1471.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::should_restart_execution (25 samples, 0.03%)</title><rect x="3.9604%" y="1477" width="0.0325%" height="15" fill="rgb(236,179,52)" fg:x="3050" fg:w="25"/><text x="4.2104%" y="1487.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="3.9929%" y="1477" width="0.0169%" height="15" fill="rgb(213,23,39)" fg:x="3075" fg:w="13"/><text x="4.2429%" y="1487.50"></text></g><g><title>aptos_vm::logging::AdapterLogSchema::new (10 samples, 0.01%)</title><rect x="4.0266%" y="1477" width="0.0130%" height="15" fill="rgb(238,48,10)" fg:x="3101" fg:w="10"/><text x="4.2766%" y="1487.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (724 samples, 0.94%)</title><rect x="3.1073%" y="1493" width="0.9401%" height="15" fill="rgb(251,196,23)" fg:x="2393" fg:w="724"/><text x="3.3573%" y="1503.50"></text></g><g><title>__rdl_alloc (13 samples, 0.02%)</title><rect x="4.0591%" y="1269" width="0.0169%" height="15" fill="rgb(250,152,24)" fg:x="3126" fg:w="13"/><text x="4.3091%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (31 samples, 0.04%)</title><rect x="4.0500%" y="1445" width="0.0403%" height="15" fill="rgb(209,150,17)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 0.04%)</title><rect x="4.0500%" y="1429" width="0.0403%" height="15" fill="rgb(234,202,34)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.04%)</title><rect x="4.0500%" y="1413" width="0.0403%" height="15" fill="rgb(253,148,53)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.04%)</title><rect x="4.0500%" y="1397" width="0.0403%" height="15" fill="rgb(218,129,16)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.04%)</title><rect x="4.0500%" y="1381" width="0.0403%" height="15" fill="rgb(216,85,19)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.04%)</title><rect x="4.0500%" y="1365" width="0.0403%" height="15" fill="rgb(235,228,7)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.04%)</title><rect x="4.0500%" y="1349" width="0.0403%" height="15" fill="rgb(245,175,0)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.04%)</title><rect x="4.0500%" y="1333" width="0.0403%" height="15" fill="rgb(208,168,36)" fg:x="3119" fg:w="31"/><text x="4.3000%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.04%)</title><rect x="4.0513%" y="1317" width="0.0390%" height="15" fill="rgb(246,171,24)" fg:x="3120" fg:w="30"/><text x="4.3013%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.04%)</title><rect x="4.0513%" y="1301" width="0.0390%" height="15" fill="rgb(215,142,24)" fg:x="3120" fg:w="30"/><text x="4.3013%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.04%)</title><rect x="4.0513%" y="1285" width="0.0390%" height="15" fill="rgb(250,187,7)" fg:x="3120" fg:w="30"/><text x="4.3013%" y="1295.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="4.0773%" y="1269" width="0.0130%" height="15" fill="rgb(228,66,33)" fg:x="3140" fg:w="10"/><text x="4.3273%" y="1279.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (32 samples, 0.04%)</title><rect x="4.0500%" y="1493" width="0.0416%" height="15" fill="rgb(234,215,21)" fg:x="3119" fg:w="32"/><text x="4.3000%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (32 samples, 0.04%)</title><rect x="4.0500%" y="1477" width="0.0416%" height="15" fill="rgb(222,191,20)" fg:x="3119" fg:w="32"/><text x="4.3000%" y="1487.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (32 samples, 0.04%)</title><rect x="4.0500%" y="1461" width="0.0416%" height="15" fill="rgb(245,79,54)" fg:x="3119" fg:w="32"/><text x="4.3000%" y="1471.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_deltas (17 samples, 0.02%)</title><rect x="4.1136%" y="1477" width="0.0221%" height="15" fill="rgb(240,10,37)" fg:x="3168" fg:w="17"/><text x="4.3636%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="4.1253%" y="1461" width="0.0104%" height="15" fill="rgb(214,192,32)" fg:x="3177" fg:w="8"/><text x="4.3753%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="4.1253%" y="1445" width="0.0104%" height="15" fill="rgb(209,36,54)" fg:x="3177" fg:w="8"/><text x="4.3753%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="4.1643%" y="1285" width="0.0104%" height="15" fill="rgb(220,10,11)" fg:x="3207" fg:w="8"/><text x="4.4143%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="4.1643%" y="1269" width="0.0104%" height="15" fill="rgb(221,106,17)" fg:x="3207" fg:w="8"/><text x="4.4143%" y="1279.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="4.1617%" y="1301" width="0.0143%" height="15" fill="rgb(251,142,44)" fg:x="3205" fg:w="11"/><text x="4.4117%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (20 samples, 0.03%)</title><rect x="4.1552%" y="1397" width="0.0260%" height="15" fill="rgb(238,13,15)" fg:x="3200" fg:w="20"/><text x="4.4052%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (20 samples, 0.03%)</title><rect x="4.1552%" y="1381" width="0.0260%" height="15" fill="rgb(208,107,27)" fg:x="3200" fg:w="20"/><text x="4.4052%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="4.1565%" y="1365" width="0.0247%" height="15" fill="rgb(205,136,37)" fg:x="3201" fg:w="19"/><text x="4.4065%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="4.1578%" y="1349" width="0.0234%" height="15" fill="rgb(250,205,27)" fg:x="3202" fg:w="18"/><text x="4.4078%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.02%)</title><rect x="4.1604%" y="1333" width="0.0208%" height="15" fill="rgb(210,80,43)" fg:x="3204" fg:w="16"/><text x="4.4104%" y="1343.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (15 samples, 0.02%)</title><rect x="4.1617%" y="1317" width="0.0195%" height="15" fill="rgb(247,160,36)" fg:x="3205" fg:w="15"/><text x="4.4117%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="4.1812%" y="1397" width="0.0195%" height="15" fill="rgb(234,13,49)" fg:x="3220" fg:w="15"/><text x="4.4312%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.02%)</title><rect x="4.1812%" y="1381" width="0.0195%" height="15" fill="rgb(234,122,0)" fg:x="3220" fg:w="15"/><text x="4.4312%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="4.1864%" y="1365" width="0.0143%" height="15" fill="rgb(207,146,38)" fg:x="3224" fg:w="11"/><text x="4.4364%" y="1375.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (8 samples, 0.01%)</title><rect x="4.1903%" y="1349" width="0.0104%" height="15" fill="rgb(207,177,25)" fg:x="3227" fg:w="8"/><text x="4.4403%" y="1359.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (54 samples, 0.07%)</title><rect x="4.1357%" y="1477" width="0.0701%" height="15" fill="rgb(211,178,42)" fg:x="3185" fg:w="54"/><text x="4.3857%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (42 samples, 0.05%)</title><rect x="4.1513%" y="1461" width="0.0545%" height="15" fill="rgb(230,69,54)" fg:x="3197" fg:w="42"/><text x="4.4013%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (42 samples, 0.05%)</title><rect x="4.1513%" y="1445" width="0.0545%" height="15" fill="rgb(214,135,41)" fg:x="3197" fg:w="42"/><text x="4.4013%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.05%)</title><rect x="4.1513%" y="1429" width="0.0545%" height="15" fill="rgb(237,67,25)" fg:x="3197" fg:w="42"/><text x="4.4013%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (40 samples, 0.05%)</title><rect x="4.1539%" y="1413" width="0.0519%" height="15" fill="rgb(222,189,50)" fg:x="3199" fg:w="40"/><text x="4.4039%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="4.2279%" y="1413" width="0.0104%" height="15" fill="rgb(245,148,34)" fg:x="3256" fg:w="8"/><text x="4.4779%" y="1423.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="4.2279%" y="1429" width="0.0130%" height="15" fill="rgb(222,29,6)" fg:x="3256" fg:w="10"/><text x="4.4779%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="4.2149%" y="1461" width="0.0286%" height="15" fill="rgb(221,189,43)" fg:x="3246" fg:w="22"/><text x="4.4649%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="4.2188%" y="1445" width="0.0247%" height="15" fill="rgb(207,36,27)" fg:x="3249" fg:w="19"/><text x="4.4688%" y="1455.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (36 samples, 0.05%)</title><rect x="4.2448%" y="1445" width="0.0467%" height="15" fill="rgb(217,90,24)" fg:x="3269" fg:w="36"/><text x="4.4948%" y="1455.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (31 samples, 0.04%)</title><rect x="4.2513%" y="1429" width="0.0403%" height="15" fill="rgb(224,66,35)" fg:x="3274" fg:w="31"/><text x="4.5013%" y="1439.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.03%)</title><rect x="4.2591%" y="1413" width="0.0325%" height="15" fill="rgb(221,13,50)" fg:x="3280" fg:w="25"/><text x="4.5091%" y="1423.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.03%)</title><rect x="4.2591%" y="1397" width="0.0325%" height="15" fill="rgb(236,68,49)" fg:x="3280" fg:w="25"/><text x="4.5091%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (15 samples, 0.02%)</title><rect x="4.3058%" y="1429" width="0.0195%" height="15" fill="rgb(229,146,28)" fg:x="3316" fg:w="15"/><text x="4.5558%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (9 samples, 0.01%)</title><rect x="4.3136%" y="1413" width="0.0117%" height="15" fill="rgb(225,31,38)" fg:x="3322" fg:w="9"/><text x="4.5636%" y="1423.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (56 samples, 0.07%)</title><rect x="4.3253%" y="1397" width="0.0727%" height="15" fill="rgb(250,208,3)" fg:x="3331" fg:w="56"/><text x="4.5753%" y="1407.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (56 samples, 0.07%)</title><rect x="4.3253%" y="1381" width="0.0727%" height="15" fill="rgb(246,54,23)" fg:x="3331" fg:w="56"/><text x="4.5753%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.07%)</title><rect x="4.3253%" y="1365" width="0.0727%" height="15" fill="rgb(243,76,11)" fg:x="3331" fg:w="56"/><text x="4.5753%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.07%)</title><rect x="4.3253%" y="1349" width="0.0727%" height="15" fill="rgb(245,21,50)" fg:x="3331" fg:w="56"/><text x="4.5753%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.07%)</title><rect x="4.3253%" y="1333" width="0.0727%" height="15" fill="rgb(228,9,43)" fg:x="3331" fg:w="56"/><text x="4.5753%" y="1343.50"></text></g><g><title>__rdl_alloc (55 samples, 0.07%)</title><rect x="4.3266%" y="1317" width="0.0714%" height="15" fill="rgb(208,100,47)" fg:x="3332" fg:w="55"/><text x="4.5766%" y="1327.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (55 samples, 0.07%)</title><rect x="4.3266%" y="1301" width="0.0714%" height="15" fill="rgb(232,26,8)" fg:x="3332" fg:w="55"/><text x="4.5766%" y="1311.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (55 samples, 0.07%)</title><rect x="4.3266%" y="1285" width="0.0714%" height="15" fill="rgb(216,166,38)" fg:x="3332" fg:w="55"/><text x="4.5766%" y="1295.50"></text></g><g><title>posix_memalign (54 samples, 0.07%)</title><rect x="4.3279%" y="1269" width="0.0701%" height="15" fill="rgb(251,202,51)" fg:x="3333" fg:w="54"/><text x="4.5779%" y="1279.50"></text></g><g><title>[libc.so.6] (51 samples, 0.07%)</title><rect x="4.3318%" y="1253" width="0.0662%" height="15" fill="rgb(254,216,34)" fg:x="3336" fg:w="51"/><text x="4.5818%" y="1263.50"></text></g><g><title>[libc.so.6] (48 samples, 0.06%)</title><rect x="4.3357%" y="1237" width="0.0623%" height="15" fill="rgb(251,32,27)" fg:x="3339" fg:w="48"/><text x="4.5857%" y="1247.50"></text></g><g><title>[libc.so.6] (45 samples, 0.06%)</title><rect x="4.3396%" y="1221" width="0.0584%" height="15" fill="rgb(208,127,28)" fg:x="3342" fg:w="45"/><text x="4.5896%" y="1231.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="4.3720%" y="1205" width="0.0260%" height="15" fill="rgb(224,137,22)" fg:x="3367" fg:w="20"/><text x="4.6220%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (120 samples, 0.16%)</title><rect x="4.2435%" y="1461" width="0.1558%" height="15" fill="rgb(254,70,32)" fg:x="3268" fg:w="120"/><text x="4.4935%" y="1471.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (79 samples, 0.10%)</title><rect x="4.2967%" y="1445" width="0.1026%" height="15" fill="rgb(229,75,37)" fg:x="3309" fg:w="79"/><text x="4.5467%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (57 samples, 0.07%)</title><rect x="4.3253%" y="1429" width="0.0740%" height="15" fill="rgb(252,64,23)" fg:x="3331" fg:w="57"/><text x="4.5753%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (57 samples, 0.07%)</title><rect x="4.3253%" y="1413" width="0.0740%" height="15" fill="rgb(232,162,48)" fg:x="3331" fg:w="57"/><text x="4.5753%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (16 samples, 0.02%)</title><rect x="4.4084%" y="1461" width="0.0208%" height="15" fill="rgb(246,160,12)" fg:x="3395" fg:w="16"/><text x="4.6584%" y="1471.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::add_write::{{closure}} (16 samples, 0.02%)</title><rect x="4.4084%" y="1445" width="0.0208%" height="15" fill="rgb(247,166,0)" fg:x="3395" fg:w="16"/><text x="4.6584%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="4.4084%" y="1429" width="0.0208%" height="15" fill="rgb(249,219,21)" fg:x="3395" fg:w="16"/><text x="4.6584%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt; (16 samples, 0.02%)</title><rect x="4.4084%" y="1413" width="0.0208%" height="15" fill="rgb(205,209,3)" fg:x="3395" fg:w="16"/><text x="4.6584%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::EntryCell&lt;aptos_types::write_set::WriteOp&gt;&gt; (16 samples, 0.02%)</title><rect x="4.4084%" y="1397" width="0.0208%" height="15" fill="rgb(243,44,1)" fg:x="3395" fg:w="16"/><text x="4.6584%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_types::write_set::WriteOp&gt;&gt; (16 samples, 0.02%)</title><rect x="4.4084%" y="1381" width="0.0208%" height="15" fill="rgb(206,159,16)" fg:x="3395" fg:w="16"/><text x="4.6584%" y="1391.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="4.4084%" y="1365" width="0.0208%" height="15" fill="rgb(244,77,30)" fg:x="3395" fg:w="16"/><text x="4.6584%" y="1375.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_write_shard (20 samples, 0.03%)</title><rect x="4.4409%" y="1429" width="0.0260%" height="15" fill="rgb(218,69,12)" fg:x="3420" fg:w="20"/><text x="4.6909%" y="1439.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (19 samples, 0.02%)</title><rect x="4.4422%" y="1413" width="0.0247%" height="15" fill="rgb(212,87,7)" fg:x="3421" fg:w="19"/><text x="4.6922%" y="1423.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (19 samples, 0.02%)</title><rect x="4.4422%" y="1397" width="0.0247%" height="15" fill="rgb(245,114,25)" fg:x="3421" fg:w="19"/><text x="4.6922%" y="1407.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="4.4668%" y="1413" width="0.0169%" height="15" fill="rgb(210,61,42)" fg:x="3440" fg:w="13"/><text x="4.7168%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="4.4668%" y="1397" width="0.0169%" height="15" fill="rgb(211,52,33)" fg:x="3440" fg:w="13"/><text x="4.7168%" y="1407.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (23 samples, 0.03%)</title><rect x="4.4668%" y="1429" width="0.0299%" height="15" fill="rgb(234,58,33)" fg:x="3440" fg:w="23"/><text x="4.7168%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="4.5006%" y="1381" width="0.0130%" height="15" fill="rgb(220,115,36)" fg:x="3466" fg:w="10"/><text x="4.7506%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="4.5006%" y="1365" width="0.0130%" height="15" fill="rgb(243,153,54)" fg:x="3466" fg:w="10"/><text x="4.7506%" y="1375.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.02%)</title><rect x="4.5006%" y="1397" width="0.0234%" height="15" fill="rgb(251,47,18)" fg:x="3466" fg:w="18"/><text x="4.7506%" y="1407.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.01%)</title><rect x="4.5266%" y="1333" width="0.0130%" height="15" fill="rgb(242,102,42)" fg:x="3486" fg:w="10"/><text x="4.7766%" y="1343.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (10 samples, 0.01%)</title><rect x="4.5266%" y="1317" width="0.0130%" height="15" fill="rgb(234,31,38)" fg:x="3486" fg:w="10"/><text x="4.7766%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.01%)</title><rect x="4.5266%" y="1301" width="0.0130%" height="15" fill="rgb(221,117,51)" fg:x="3486" fg:w="10"/><text x="4.7766%" y="1311.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (10 samples, 0.01%)</title><rect x="4.5266%" y="1285" width="0.0130%" height="15" fill="rgb(212,20,18)" fg:x="3486" fg:w="10"/><text x="4.7766%" y="1295.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.01%)</title><rect x="4.5266%" y="1349" width="0.0143%" height="15" fill="rgb(245,133,36)" fg:x="3486" fg:w="11"/><text x="4.7766%" y="1359.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::entry (90 samples, 0.12%)</title><rect x="4.4344%" y="1461" width="0.1169%" height="15" fill="rgb(212,6,19)" fg:x="3415" fg:w="90"/><text x="4.6844%" y="1471.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (86 samples, 0.11%)</title><rect x="4.4396%" y="1445" width="0.1117%" height="15" fill="rgb(218,1,36)" fg:x="3419" fg:w="86"/><text x="4.6896%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (42 samples, 0.05%)</title><rect x="4.4967%" y="1429" width="0.0545%" height="15" fill="rgb(246,84,54)" fg:x="3463" fg:w="42"/><text x="4.7467%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 0.05%)</title><rect x="4.4980%" y="1413" width="0.0532%" height="15" fill="rgb(242,110,6)" fg:x="3464" fg:w="41"/><text x="4.7480%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (21 samples, 0.03%)</title><rect x="4.5240%" y="1397" width="0.0273%" height="15" fill="rgb(214,47,5)" fg:x="3484" fg:w="21"/><text x="4.7740%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (21 samples, 0.03%)</title><rect x="4.5240%" y="1381" width="0.0273%" height="15" fill="rgb(218,159,25)" fg:x="3484" fg:w="21"/><text x="4.7740%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.03%)</title><rect x="4.5240%" y="1365" width="0.0273%" height="15" fill="rgb(215,211,28)" fg:x="3484" fg:w="21"/><text x="4.7740%" y="1375.50"></text></g><g><title>dashmap::mapref::entry::OccupiedEntry&lt;K,V,S&gt;::into_ref (9 samples, 0.01%)</title><rect x="4.5694%" y="1445" width="0.0117%" height="15" fill="rgb(238,59,32)" fg:x="3519" fg:w="9"/><text x="4.8194%" y="1455.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (11 samples, 0.01%)</title><rect x="4.5902%" y="1285" width="0.0143%" height="15" fill="rgb(226,82,3)" fg:x="3535" fg:w="11"/><text x="4.8402%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.01%)</title><rect x="4.5902%" y="1269" width="0.0143%" height="15" fill="rgb(240,164,32)" fg:x="3535" fg:w="11"/><text x="4.8402%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="4.5902%" y="1253" width="0.0143%" height="15" fill="rgb(232,46,7)" fg:x="3535" fg:w="11"/><text x="4.8402%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="4.5902%" y="1237" width="0.0143%" height="15" fill="rgb(229,129,53)" fg:x="3535" fg:w="11"/><text x="4.8402%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="4.5902%" y="1221" width="0.0143%" height="15" fill="rgb(234,188,29)" fg:x="3535" fg:w="11"/><text x="4.8402%" y="1231.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (32 samples, 0.04%)</title><rect x="4.5863%" y="1349" width="0.0416%" height="15" fill="rgb(246,141,4)" fg:x="3532" fg:w="32"/><text x="4.8363%" y="1359.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (29 samples, 0.04%)</title><rect x="4.5902%" y="1333" width="0.0377%" height="15" fill="rgb(229,23,39)" fg:x="3535" fg:w="29"/><text x="4.8402%" y="1343.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (29 samples, 0.04%)</title><rect x="4.5902%" y="1317" width="0.0377%" height="15" fill="rgb(206,12,3)" fg:x="3535" fg:w="29"/><text x="4.8402%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (29 samples, 0.04%)</title><rect x="4.5902%" y="1301" width="0.0377%" height="15" fill="rgb(252,226,20)" fg:x="3535" fg:w="29"/><text x="4.8402%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.02%)</title><rect x="4.6045%" y="1285" width="0.0234%" height="15" fill="rgb(216,123,35)" fg:x="3546" fg:w="18"/><text x="4.8545%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="4.6058%" y="1269" width="0.0221%" height="15" fill="rgb(212,68,40)" fg:x="3547" fg:w="17"/><text x="4.8558%" y="1279.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (48 samples, 0.06%)</title><rect x="4.5837%" y="1381" width="0.0623%" height="15" fill="rgb(254,125,32)" fg:x="3530" fg:w="48"/><text x="4.8337%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (46 samples, 0.06%)</title><rect x="4.5863%" y="1365" width="0.0597%" height="15" fill="rgb(253,97,22)" fg:x="3532" fg:w="46"/><text x="4.8363%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (12 samples, 0.02%)</title><rect x="4.6304%" y="1349" width="0.0156%" height="15" fill="rgb(241,101,14)" fg:x="3566" fg:w="12"/><text x="4.8804%" y="1359.50"></text></g><g><title>core::hash::Hasher::write_isize (12 samples, 0.02%)</title><rect x="4.6304%" y="1333" width="0.0156%" height="15" fill="rgb(238,103,29)" fg:x="3566" fg:w="12"/><text x="4.8804%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.02%)</title><rect x="4.6304%" y="1317" width="0.0156%" height="15" fill="rgb(233,195,47)" fg:x="3566" fg:w="12"/><text x="4.8804%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="4.6304%" y="1301" width="0.0156%" height="15" fill="rgb(246,218,30)" fg:x="3566" fg:w="12"/><text x="4.8804%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="4.6304%" y="1285" width="0.0156%" height="15" fill="rgb(219,145,47)" fg:x="3566" fg:w="12"/><text x="4.8804%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="4.6304%" y="1269" width="0.0156%" height="15" fill="rgb(243,12,26)" fg:x="3566" fg:w="12"/><text x="4.8804%" y="1279.50"></text></g><g><title>hashbrown::map::make_hash (53 samples, 0.07%)</title><rect x="4.5837%" y="1397" width="0.0688%" height="15" fill="rgb(214,87,16)" fg:x="3530" fg:w="53"/><text x="4.8337%" y="1407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (56 samples, 0.07%)</title><rect x="4.5837%" y="1429" width="0.0727%" height="15" fill="rgb(208,99,42)" fg:x="3530" fg:w="56"/><text x="4.8337%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 0.07%)</title><rect x="4.5837%" y="1413" width="0.0727%" height="15" fill="rgb(253,99,2)" fg:x="3530" fg:w="56"/><text x="4.8337%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="4.6772%" y="1333" width="0.0143%" height="15" fill="rgb(220,168,23)" fg:x="3602" fg:w="11"/><text x="4.9272%" y="1343.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="4.6772%" y="1317" width="0.0143%" height="15" fill="rgb(242,38,24)" fg:x="3602" fg:w="11"/><text x="4.9272%" y="1327.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="4.6954%" y="1253" width="0.0221%" height="15" fill="rgb(225,182,9)" fg:x="3616" fg:w="17"/><text x="4.9454%" y="1263.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (16 samples, 0.02%)</title><rect x="4.6967%" y="1237" width="0.0208%" height="15" fill="rgb(243,178,37)" fg:x="3617" fg:w="16"/><text x="4.9467%" y="1247.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (16 samples, 0.02%)</title><rect x="4.6967%" y="1221" width="0.0208%" height="15" fill="rgb(232,139,19)" fg:x="3617" fg:w="16"/><text x="4.9467%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (16 samples, 0.02%)</title><rect x="4.6967%" y="1205" width="0.0208%" height="15" fill="rgb(225,201,24)" fg:x="3617" fg:w="16"/><text x="4.9467%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (10 samples, 0.01%)</title><rect x="4.7045%" y="1189" width="0.0130%" height="15" fill="rgb(221,47,46)" fg:x="3623" fg:w="10"/><text x="4.9545%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="4.7058%" y="1173" width="0.0117%" height="15" fill="rgb(249,23,13)" fg:x="3624" fg:w="9"/><text x="4.9558%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="4.7226%" y="1205" width="0.0156%" height="15" fill="rgb(219,9,5)" fg:x="3637" fg:w="12"/><text x="4.9726%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="4.7278%" y="1189" width="0.0104%" height="15" fill="rgb(254,171,16)" fg:x="3641" fg:w="8"/><text x="4.9778%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="4.7278%" y="1173" width="0.0104%" height="15" fill="rgb(230,171,20)" fg:x="3641" fg:w="8"/><text x="4.9778%" y="1183.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (35 samples, 0.05%)</title><rect x="4.6941%" y="1285" width="0.0454%" height="15" fill="rgb(210,71,41)" fg:x="3615" fg:w="35"/><text x="4.9441%" y="1295.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (34 samples, 0.04%)</title><rect x="4.6954%" y="1269" width="0.0441%" height="15" fill="rgb(206,173,20)" fg:x="3616" fg:w="34"/><text x="4.9454%" y="1279.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (13 samples, 0.02%)</title><rect x="4.7226%" y="1253" width="0.0169%" height="15" fill="rgb(233,88,34)" fg:x="3637" fg:w="13"/><text x="4.9726%" y="1263.50"></text></g><g><title>core::hash::Hasher::write_isize (13 samples, 0.02%)</title><rect x="4.7226%" y="1237" width="0.0169%" height="15" fill="rgb(223,209,46)" fg:x="3637" fg:w="13"/><text x="4.9726%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.02%)</title><rect x="4.7226%" y="1221" width="0.0169%" height="15" fill="rgb(250,43,18)" fg:x="3637" fg:w="13"/><text x="4.9726%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (31 samples, 0.04%)</title><rect x="4.7408%" y="1237" width="0.0403%" height="15" fill="rgb(208,13,10)" fg:x="3651" fg:w="31"/><text x="4.9908%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (35 samples, 0.05%)</title><rect x="4.7408%" y="1285" width="0.0454%" height="15" fill="rgb(212,200,36)" fg:x="3651" fg:w="35"/><text x="4.9908%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (35 samples, 0.05%)</title><rect x="4.7408%" y="1269" width="0.0454%" height="15" fill="rgb(225,90,30)" fg:x="3651" fg:w="35"/><text x="4.9908%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (35 samples, 0.05%)</title><rect x="4.7408%" y="1253" width="0.0454%" height="15" fill="rgb(236,182,39)" fg:x="3651" fg:w="35"/><text x="4.9908%" y="1263.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (72 samples, 0.09%)</title><rect x="4.6941%" y="1333" width="0.0935%" height="15" fill="rgb(212,144,35)" fg:x="3615" fg:w="72"/><text x="4.9441%" y="1343.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (72 samples, 0.09%)</title><rect x="4.6941%" y="1317" width="0.0935%" height="15" fill="rgb(228,63,44)" fg:x="3615" fg:w="72"/><text x="4.9441%" y="1327.50"></text></g><g><title>hashbrown::map::make_hash (72 samples, 0.09%)</title><rect x="4.6941%" y="1301" width="0.0935%" height="15" fill="rgb(228,109,6)" fg:x="3615" fg:w="72"/><text x="4.9441%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (11 samples, 0.01%)</title><rect x="4.7902%" y="1333" width="0.0143%" height="15" fill="rgb(238,117,24)" fg:x="3689" fg:w="11"/><text x="5.0402%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (11 samples, 0.01%)</title><rect x="4.7902%" y="1317" width="0.0143%" height="15" fill="rgb(242,26,26)" fg:x="3689" fg:w="11"/><text x="5.0402%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (10 samples, 0.01%)</title><rect x="4.7915%" y="1301" width="0.0130%" height="15" fill="rgb(221,92,48)" fg:x="3690" fg:w="10"/><text x="5.0415%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (10 samples, 0.01%)</title><rect x="4.7915%" y="1285" width="0.0130%" height="15" fill="rgb(209,209,32)" fg:x="3690" fg:w="10"/><text x="5.0415%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="4.7915%" y="1269" width="0.0130%" height="15" fill="rgb(221,70,22)" fg:x="3690" fg:w="10"/><text x="5.0415%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="4.7915%" y="1253" width="0.0130%" height="15" fill="rgb(248,145,5)" fg:x="3690" fg:w="10"/><text x="5.0415%" y="1263.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="4.7915%" y="1237" width="0.0130%" height="15" fill="rgb(226,116,26)" fg:x="3690" fg:w="10"/><text x="5.0415%" y="1247.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="4.7928%" y="1221" width="0.0117%" height="15" fill="rgb(244,5,17)" fg:x="3691" fg:w="9"/><text x="5.0428%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (100 samples, 0.13%)</title><rect x="4.6759%" y="1397" width="0.1298%" height="15" fill="rgb(252,159,33)" fg:x="3601" fg:w="100"/><text x="4.9259%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (100 samples, 0.13%)</title><rect x="4.6759%" y="1381" width="0.1298%" height="15" fill="rgb(206,71,0)" fg:x="3601" fg:w="100"/><text x="4.9259%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (99 samples, 0.13%)</title><rect x="4.6772%" y="1365" width="0.1286%" height="15" fill="rgb(233,118,54)" fg:x="3602" fg:w="99"/><text x="4.9272%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (99 samples, 0.13%)</title><rect x="4.6772%" y="1349" width="0.1286%" height="15" fill="rgb(234,83,48)" fg:x="3602" fg:w="99"/><text x="4.9272%" y="1359.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::add_write (465 samples, 0.60%)</title><rect x="4.2058%" y="1477" width="0.6038%" height="15" fill="rgb(228,3,54)" fg:x="3239" fg:w="465"/><text x="4.4558%" y="1487.50"></text></g><g><title>dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_default (199 samples, 0.26%)</title><rect x="4.5512%" y="1461" width="0.2584%" height="15" fill="rgb(226,155,13)" fg:x="3505" fg:w="199"/><text x="4.8012%" y="1471.50"></text></g><g><title>dashmap::mapref::entry::VacantEntry&lt;K,V,S&gt;::insert (176 samples, 0.23%)</title><rect x="4.5811%" y="1445" width="0.2285%" height="15" fill="rgb(241,28,37)" fg:x="3528" fg:w="176"/><text x="4.8311%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (118 samples, 0.15%)</title><rect x="4.6564%" y="1429" width="0.1532%" height="15" fill="rgb(233,93,10)" fg:x="3586" fg:w="118"/><text x="4.9064%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (107 samples, 0.14%)</title><rect x="4.6707%" y="1413" width="0.1389%" height="15" fill="rgb(225,113,19)" fg:x="3597" fg:w="107"/><text x="4.9207%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp)&gt;&gt; (11 samples, 0.01%)</title><rect x="4.8122%" y="1477" width="0.0143%" height="15" fill="rgb(241,2,18)" fg:x="3706" fg:w="11"/><text x="5.0622%" y="1487.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="4.8148%" y="1461" width="0.0117%" height="15" fill="rgb(228,207,21)" fg:x="3708" fg:w="9"/><text x="5.0648%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="4.8265%" y="1429" width="0.0130%" height="15" fill="rgb(213,211,35)" fg:x="3717" fg:w="10"/><text x="5.0765%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="4.8265%" y="1413" width="0.0130%" height="15" fill="rgb(209,83,10)" fg:x="3717" fg:w="10"/><text x="5.0765%" y="1423.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="4.8265%" y="1397" width="0.0130%" height="15" fill="rgb(209,164,1)" fg:x="3717" fg:w="10"/><text x="5.0765%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (12 samples, 0.02%)</title><rect x="4.8265%" y="1477" width="0.0156%" height="15" fill="rgb(213,184,43)" fg:x="3717" fg:w="12"/><text x="5.0765%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (12 samples, 0.02%)</title><rect x="4.8265%" y="1461" width="0.0156%" height="15" fill="rgb(231,61,34)" fg:x="3717" fg:w="12"/><text x="5.0765%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="4.8265%" y="1445" width="0.0156%" height="15" fill="rgb(235,75,3)" fg:x="3717" fg:w="12"/><text x="5.0765%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="4.8538%" y="1365" width="0.0182%" height="15" fill="rgb(220,106,47)" fg:x="3738" fg:w="14"/><text x="5.1038%" y="1375.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="4.8538%" y="1349" width="0.0182%" height="15" fill="rgb(210,196,33)" fg:x="3738" fg:w="14"/><text x="5.1038%" y="1359.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.03%)</title><rect x="4.8499%" y="1413" width="0.0273%" height="15" fill="rgb(229,154,42)" fg:x="3735" fg:w="21"/><text x="5.0999%" y="1423.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.03%)</title><rect x="4.8499%" y="1397" width="0.0273%" height="15" fill="rgb(228,114,26)" fg:x="3735" fg:w="21"/><text x="5.0999%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.02%)</title><rect x="4.8538%" y="1381" width="0.0234%" height="15" fill="rgb(208,144,1)" fg:x="3738" fg:w="18"/><text x="5.1038%" y="1391.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute::{{closure}} (610 samples, 0.79%)</title><rect x="4.0955%" y="1493" width="0.7921%" height="15" fill="rgb(239,112,37)" fg:x="3154" fg:w="610"/><text x="4.3455%" y="1503.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (35 samples, 0.05%)</title><rect x="4.8421%" y="1477" width="0.0454%" height="15" fill="rgb(210,96,50)" fg:x="3729" fg:w="35"/><text x="5.0921%" y="1487.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (35 samples, 0.05%)</title><rect x="4.8421%" y="1461" width="0.0454%" height="15" fill="rgb(222,178,2)" fg:x="3729" fg:w="35"/><text x="5.0921%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (35 samples, 0.05%)</title><rect x="4.8421%" y="1445" width="0.0454%" height="15" fill="rgb(226,74,18)" fg:x="3729" fg:w="35"/><text x="5.0921%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (29 samples, 0.04%)</title><rect x="4.8499%" y="1429" width="0.0377%" height="15" fill="rgb(225,67,54)" fg:x="3735" fg:w="29"/><text x="5.0999%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (8 samples, 0.01%)</title><rect x="4.8772%" y="1413" width="0.0104%" height="15" fill="rgb(251,92,32)" fg:x="3756" fg:w="8"/><text x="5.1272%" y="1423.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.04%)</title><rect x="4.9044%" y="1477" width="0.0351%" height="15" fill="rgb(228,149,22)" fg:x="3777" fg:w="27"/><text x="5.1544%" y="1487.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.04%)</title><rect x="4.9044%" y="1461" width="0.0351%" height="15" fill="rgb(243,54,13)" fg:x="3777" fg:w="27"/><text x="5.1544%" y="1471.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.03%)</title><rect x="4.9122%" y="1445" width="0.0273%" height="15" fill="rgb(243,180,28)" fg:x="3783" fg:w="21"/><text x="5.1622%" y="1455.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (21 samples, 0.03%)</title><rect x="4.9122%" y="1429" width="0.0273%" height="15" fill="rgb(208,167,24)" fg:x="3783" fg:w="21"/><text x="5.1622%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (20 samples, 0.03%)</title><rect x="4.9395%" y="1477" width="0.0260%" height="15" fill="rgb(245,73,45)" fg:x="3804" fg:w="20"/><text x="5.1895%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (20 samples, 0.03%)</title><rect x="4.9395%" y="1461" width="0.0260%" height="15" fill="rgb(237,203,48)" fg:x="3804" fg:w="20"/><text x="5.1895%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (20 samples, 0.03%)</title><rect x="4.9395%" y="1445" width="0.0260%" height="15" fill="rgb(211,197,16)" fg:x="3804" fg:w="20"/><text x="5.1895%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="4.9447%" y="1429" width="0.0208%" height="15" fill="rgb(243,99,51)" fg:x="3808" fg:w="16"/><text x="5.1947%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.02%)</title><rect x="4.9447%" y="1413" width="0.0208%" height="15" fill="rgb(215,123,29)" fg:x="3808" fg:w="16"/><text x="5.1947%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.02%)</title><rect x="4.9447%" y="1397" width="0.0208%" height="15" fill="rgb(239,186,37)" fg:x="3808" fg:w="16"/><text x="5.1947%" y="1407.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_execution::{{closure}} (16 samples, 0.02%)</title><rect x="4.9447%" y="1381" width="0.0208%" height="15" fill="rgb(252,136,39)" fg:x="3808" fg:w="16"/><text x="5.1947%" y="1391.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::resume (12 samples, 0.02%)</title><rect x="4.9499%" y="1365" width="0.0156%" height="15" fill="rgb(223,213,32)" fg:x="3812" fg:w="12"/><text x="5.1999%" y="1375.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_execution (71 samples, 0.09%)</title><rect x="4.8875%" y="1493" width="0.0922%" height="15" fill="rgb(233,115,5)" fg:x="3764" fg:w="71"/><text x="5.1375%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="4.9901%" y="1397" width="0.0104%" height="15" fill="rgb(207,226,44)" fg:x="3843" fg:w="8"/><text x="5.2401%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.01%)</title><rect x="4.9901%" y="1381" width="0.0104%" height="15" fill="rgb(208,126,0)" fg:x="3843" fg:w="8"/><text x="5.2401%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="5.0005%" y="1397" width="0.0130%" height="15" fill="rgb(244,66,21)" fg:x="3851" fg:w="10"/><text x="5.2505%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="5.0018%" y="1381" width="0.0117%" height="15" fill="rgb(222,97,12)" fg:x="3852" fg:w="9"/><text x="5.2518%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.01%)</title><rect x="5.0031%" y="1365" width="0.0104%" height="15" fill="rgb(219,213,19)" fg:x="3853" fg:w="8"/><text x="5.2531%" y="1375.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (26 samples, 0.03%)</title><rect x="4.9862%" y="1477" width="0.0338%" height="15" fill="rgb(252,169,30)" fg:x="3840" fg:w="26"/><text x="5.2362%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.03%)</title><rect x="4.9901%" y="1461" width="0.0299%" height="15" fill="rgb(206,32,51)" fg:x="3843" fg:w="23"/><text x="5.2401%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="4.9901%" y="1445" width="0.0299%" height="15" fill="rgb(250,172,42)" fg:x="3843" fg:w="23"/><text x="5.2401%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="4.9901%" y="1429" width="0.0299%" height="15" fill="rgb(209,34,43)" fg:x="3843" fg:w="23"/><text x="5.2401%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="4.9901%" y="1413" width="0.0299%" height="15" fill="rgb(223,11,35)" fg:x="3843" fg:w="23"/><text x="5.2401%" y="1423.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (31 samples, 0.04%)</title><rect x="5.0213%" y="1397" width="0.0403%" height="15" fill="rgb(251,219,26)" fg:x="3867" fg:w="31"/><text x="5.2713%" y="1407.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (31 samples, 0.04%)</title><rect x="5.0213%" y="1381" width="0.0403%" height="15" fill="rgb(231,119,3)" fg:x="3867" fg:w="31"/><text x="5.2713%" y="1391.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::{{closure}} (34 samples, 0.04%)</title><rect x="5.0200%" y="1429" width="0.0441%" height="15" fill="rgb(216,97,11)" fg:x="3866" fg:w="34"/><text x="5.2700%" y="1439.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (33 samples, 0.04%)</title><rect x="5.0213%" y="1413" width="0.0429%" height="15" fill="rgb(223,59,9)" fg:x="3867" fg:w="33"/><text x="5.2713%" y="1423.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (40 samples, 0.05%)</title><rect x="5.0200%" y="1461" width="0.0519%" height="15" fill="rgb(233,93,31)" fg:x="3866" fg:w="40"/><text x="5.2700%" y="1471.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (40 samples, 0.05%)</title><rect x="5.0200%" y="1445" width="0.0519%" height="15" fill="rgb(239,81,33)" fg:x="3866" fg:w="40"/><text x="5.2700%" y="1455.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (42 samples, 0.05%)</title><rect x="5.0200%" y="1477" width="0.0545%" height="15" fill="rgb(213,120,34)" fg:x="3866" fg:w="42"/><text x="5.2700%" y="1487.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.02%)</title><rect x="5.0771%" y="1317" width="0.0182%" height="15" fill="rgb(243,49,53)" fg:x="3910" fg:w="14"/><text x="5.3271%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="5.0797%" y="1301" width="0.0156%" height="15" fill="rgb(247,216,33)" fg:x="3912" fg:w="12"/><text x="5.3297%" y="1311.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.02%)</title><rect x="5.0797%" y="1285" width="0.0156%" height="15" fill="rgb(226,26,14)" fg:x="3912" fg:w="12"/><text x="5.3297%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (12 samples, 0.02%)</title><rect x="5.0797%" y="1269" width="0.0156%" height="15" fill="rgb(215,49,53)" fg:x="3912" fg:w="12"/><text x="5.3297%" y="1279.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (12 samples, 0.02%)</title><rect x="5.0797%" y="1253" width="0.0156%" height="15" fill="rgb(245,162,40)" fg:x="3912" fg:w="12"/><text x="5.3297%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="5.0797%" y="1237" width="0.0156%" height="15" fill="rgb(229,68,17)" fg:x="3912" fg:w="12"/><text x="5.3297%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.02%)</title><rect x="5.0758%" y="1397" width="0.0221%" height="15" fill="rgb(213,182,10)" fg:x="3909" fg:w="17"/><text x="5.3258%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="5.0758%" y="1381" width="0.0221%" height="15" fill="rgb(245,125,30)" fg:x="3909" fg:w="17"/><text x="5.3258%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="5.0758%" y="1365" width="0.0221%" height="15" fill="rgb(232,202,2)" fg:x="3909" fg:w="17"/><text x="5.3258%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="5.0758%" y="1349" width="0.0221%" height="15" fill="rgb(237,140,51)" fg:x="3909" fg:w="17"/><text x="5.3258%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.02%)</title><rect x="5.0771%" y="1333" width="0.0208%" height="15" fill="rgb(236,157,25)" fg:x="3910" fg:w="16"/><text x="5.3271%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.03%)</title><rect x="5.0745%" y="1477" width="0.0338%" height="15" fill="rgb(219,209,0)" fg:x="3908" fg:w="26"/><text x="5.3245%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="5.0745%" y="1461" width="0.0338%" height="15" fill="rgb(240,116,54)" fg:x="3908" fg:w="26"/><text x="5.3245%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (26 samples, 0.03%)</title><rect x="5.0745%" y="1445" width="0.0338%" height="15" fill="rgb(216,10,36)" fg:x="3908" fg:w="26"/><text x="5.3245%" y="1455.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (26 samples, 0.03%)</title><rect x="5.0745%" y="1429" width="0.0338%" height="15" fill="rgb(222,72,44)" fg:x="3908" fg:w="26"/><text x="5.3245%" y="1439.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (26 samples, 0.03%)</title><rect x="5.0745%" y="1413" width="0.0338%" height="15" fill="rgb(232,159,9)" fg:x="3908" fg:w="26"/><text x="5.3245%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (8 samples, 0.01%)</title><rect x="5.0979%" y="1397" width="0.0104%" height="15" fill="rgb(210,39,32)" fg:x="3926" fg:w="8"/><text x="5.3479%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="5.0979%" y="1381" width="0.0104%" height="15" fill="rgb(216,194,45)" fg:x="3926" fg:w="8"/><text x="5.3479%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.01%)</title><rect x="5.0979%" y="1365" width="0.0104%" height="15" fill="rgb(218,18,35)" fg:x="3926" fg:w="8"/><text x="5.3479%" y="1375.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (101 samples, 0.13%)</title><rect x="4.9797%" y="1493" width="0.1311%" height="15" fill="rgb(207,83,51)" fg:x="3835" fg:w="101"/><text x="5.2297%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (39 samples, 0.05%)</title><rect x="5.1200%" y="1477" width="0.0506%" height="15" fill="rgb(225,63,43)" fg:x="3943" fg:w="39"/><text x="5.3700%" y="1487.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (39 samples, 0.05%)</title><rect x="5.1200%" y="1461" width="0.0506%" height="15" fill="rgb(207,57,36)" fg:x="3943" fg:w="39"/><text x="5.3700%" y="1471.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (39 samples, 0.05%)</title><rect x="5.1200%" y="1445" width="0.0506%" height="15" fill="rgb(216,99,33)" fg:x="3943" fg:w="39"/><text x="5.3700%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="5.1797%" y="1365" width="0.0130%" height="15" fill="rgb(225,42,16)" fg:x="3989" fg:w="10"/><text x="5.4297%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="5.1810%" y="1349" width="0.0117%" height="15" fill="rgb(220,201,45)" fg:x="3990" fg:w="9"/><text x="5.4310%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="5.1797%" y="1397" width="0.0143%" height="15" fill="rgb(225,33,4)" fg:x="3989" fg:w="11"/><text x="5.4297%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 0.01%)</title><rect x="5.1797%" y="1381" width="0.0143%" height="15" fill="rgb(224,33,50)" fg:x="3989" fg:w="11"/><text x="5.4297%" y="1391.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (39 samples, 0.05%)</title><rect x="5.1706%" y="1477" width="0.0506%" height="15" fill="rgb(246,198,51)" fg:x="3982" fg:w="39"/><text x="5.4206%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.04%)</title><rect x="5.1784%" y="1461" width="0.0429%" height="15" fill="rgb(205,22,4)" fg:x="3988" fg:w="33"/><text x="5.4284%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (33 samples, 0.04%)</title><rect x="5.1784%" y="1445" width="0.0429%" height="15" fill="rgb(206,3,8)" fg:x="3988" fg:w="33"/><text x="5.4284%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.04%)</title><rect x="5.1784%" y="1429" width="0.0429%" height="15" fill="rgb(251,23,15)" fg:x="3988" fg:w="33"/><text x="5.4284%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (32 samples, 0.04%)</title><rect x="5.1797%" y="1413" width="0.0416%" height="15" fill="rgb(252,88,28)" fg:x="3989" fg:w="32"/><text x="5.4297%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="5.1940%" y="1397" width="0.0273%" height="15" fill="rgb(212,127,14)" fg:x="4000" fg:w="21"/><text x="5.4440%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.03%)</title><rect x="5.1940%" y="1381" width="0.0273%" height="15" fill="rgb(247,145,37)" fg:x="4000" fg:w="21"/><text x="5.4440%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18 samples, 0.02%)</title><rect x="5.1979%" y="1365" width="0.0234%" height="15" fill="rgb(209,117,53)" fg:x="4003" fg:w="18"/><text x="5.4479%" y="1375.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (18 samples, 0.02%)</title><rect x="5.1979%" y="1349" width="0.0234%" height="15" fill="rgb(212,90,42)" fg:x="4003" fg:w="18"/><text x="5.4479%" y="1359.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="5.2044%" y="1333" width="0.0169%" height="15" fill="rgb(218,164,37)" fg:x="4008" fg:w="13"/><text x="5.4544%" y="1343.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="5.2083%" y="1317" width="0.0130%" height="15" fill="rgb(246,65,34)" fg:x="4011" fg:w="10"/><text x="5.4583%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="5.2213%" y="1477" width="0.0143%" height="15" fill="rgb(231,100,33)" fg:x="4021" fg:w="11"/><text x="5.4713%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="5.2226%" y="1461" width="0.0130%" height="15" fill="rgb(228,126,14)" fg:x="4022" fg:w="10"/><text x="5.4726%" y="1471.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="5.4186%" y="1285" width="0.0104%" height="15" fill="rgb(215,173,21)" fg:x="4173" fg:w="8"/><text x="5.6686%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.04%)</title><rect x="5.4173%" y="1317" width="0.0390%" height="15" fill="rgb(210,6,40)" fg:x="4172" fg:w="30"/><text x="5.6673%" y="1327.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (30 samples, 0.04%)</title><rect x="5.4173%" y="1301" width="0.0390%" height="15" fill="rgb(212,48,18)" fg:x="4172" fg:w="30"/><text x="5.6673%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (14 samples, 0.02%)</title><rect x="5.4381%" y="1285" width="0.0182%" height="15" fill="rgb(230,214,11)" fg:x="4188" fg:w="14"/><text x="5.6881%" y="1295.50"></text></g><g><title>arc_swap::debt::list::LocalNode::help (9 samples, 0.01%)</title><rect x="5.4589%" y="1317" width="0.0117%" height="15" fill="rgb(254,105,39)" fg:x="4204" fg:w="9"/><text x="5.7089%" y="1327.50"></text></g><g><title>arc_swap::debt::helping::Slots::help (9 samples, 0.01%)</title><rect x="5.4589%" y="1301" width="0.0117%" height="15" fill="rgb(245,158,5)" fg:x="4204" fg:w="9"/><text x="5.7089%" y="1311.50"></text></g><g><title>arc_swap::debt::list::Node::reserve_writer (41 samples, 0.05%)</title><rect x="5.4771%" y="1317" width="0.0532%" height="15" fill="rgb(249,208,11)" fg:x="4218" fg:w="41"/><text x="5.7271%" y="1327.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (237 samples, 0.31%)</title><rect x="5.2446%" y="1461" width="0.3077%" height="15" fill="rgb(210,39,28)" fg:x="4039" fg:w="237"/><text x="5.4946%" y="1471.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (237 samples, 0.31%)</title><rect x="5.2446%" y="1445" width="0.3077%" height="15" fill="rgb(211,56,53)" fg:x="4039" fg:w="237"/><text x="5.4946%" y="1455.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (237 samples, 0.31%)</title><rect x="5.2446%" y="1429" width="0.3077%" height="15" fill="rgb(226,201,30)" fg:x="4039" fg:w="237"/><text x="5.4946%" y="1439.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (237 samples, 0.31%)</title><rect x="5.2446%" y="1413" width="0.3077%" height="15" fill="rgb(239,101,34)" fg:x="4039" fg:w="237"/><text x="5.4946%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (236 samples, 0.31%)</title><rect x="5.2459%" y="1397" width="0.3064%" height="15" fill="rgb(226,209,5)" fg:x="4040" fg:w="236"/><text x="5.4959%" y="1407.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (236 samples, 0.31%)</title><rect x="5.2459%" y="1381" width="0.3064%" height="15" fill="rgb(250,105,47)" fg:x="4040" fg:w="236"/><text x="5.4959%" y="1391.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (236 samples, 0.31%)</title><rect x="5.2459%" y="1365" width="0.3064%" height="15" fill="rgb(230,72,3)" fg:x="4040" fg:w="236"/><text x="5.4959%" y="1375.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (235 samples, 0.31%)</title><rect x="5.2472%" y="1349" width="0.3051%" height="15" fill="rgb(232,218,39)" fg:x="4041" fg:w="235"/><text x="5.4972%" y="1359.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (233 samples, 0.30%)</title><rect x="5.2498%" y="1333" width="0.3026%" height="15" fill="rgb(248,166,6)" fg:x="4043" fg:w="233"/><text x="5.4998%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::debt::list::NodeReservation&gt; (17 samples, 0.02%)</title><rect x="5.5303%" y="1317" width="0.0221%" height="15" fill="rgb(247,89,20)" fg:x="4259" fg:w="17"/><text x="5.7803%" y="1327.50"></text></g><g><title>&lt;arc_swap::debt::list::NodeReservation as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="5.5316%" y="1301" width="0.0208%" height="15" fill="rgb(248,130,54)" fg:x="4260" fg:w="16"/><text x="5.7816%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="5.5550%" y="1269" width="0.0247%" height="15" fill="rgb(234,196,4)" fg:x="4278" fg:w="19"/><text x="5.8050%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="5.5550%" y="1253" width="0.0247%" height="15" fill="rgb(250,143,31)" fg:x="4278" fg:w="19"/><text x="5.8050%" y="1263.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="5.5550%" y="1237" width="0.0247%" height="15" fill="rgb(211,110,34)" fg:x="4278" fg:w="19"/><text x="5.8050%" y="1247.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="5.5667%" y="1221" width="0.0130%" height="15" fill="rgb(215,124,48)" fg:x="4287" fg:w="10"/><text x="5.8167%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="5.5524%" y="1365" width="0.0286%" height="15" fill="rgb(216,46,13)" fg:x="4276" fg:w="22"/><text x="5.8024%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;]&gt; (22 samples, 0.03%)</title><rect x="5.5524%" y="1349" width="0.0286%" height="15" fill="rgb(205,184,25)" fg:x="4276" fg:w="22"/><text x="5.8024%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt; (21 samples, 0.03%)</title><rect x="5.5537%" y="1333" width="0.0273%" height="15" fill="rgb(228,1,10)" fg:x="4277" fg:w="21"/><text x="5.8037%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (21 samples, 0.03%)</title><rect x="5.5537%" y="1317" width="0.0273%" height="15" fill="rgb(213,116,27)" fg:x="4277" fg:w="21"/><text x="5.8037%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (21 samples, 0.03%)</title><rect x="5.5537%" y="1301" width="0.0273%" height="15" fill="rgb(241,95,50)" fg:x="4277" fg:w="21"/><text x="5.8037%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="5.5550%" y="1285" width="0.0260%" height="15" fill="rgb(238,48,32)" fg:x="4278" fg:w="20"/><text x="5.8050%" y="1295.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (30 samples, 0.04%)</title><rect x="5.5524%" y="1397" width="0.0390%" height="15" fill="rgb(235,113,49)" fg:x="4276" fg:w="30"/><text x="5.8024%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt; (30 samples, 0.04%)</title><rect x="5.5524%" y="1381" width="0.0390%" height="15" fill="rgb(205,127,43)" fg:x="4276" fg:w="30"/><text x="5.8024%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="5.5809%" y="1365" width="0.0104%" height="15" fill="rgb(250,162,2)" fg:x="4298" fg:w="8"/><text x="5.8309%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="5.5809%" y="1349" width="0.0104%" height="15" fill="rgb(220,13,41)" fg:x="4298" fg:w="8"/><text x="5.8309%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="5.5809%" y="1333" width="0.0104%" height="15" fill="rgb(249,221,25)" fg:x="4298" fg:w="8"/><text x="5.8309%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="5.5809%" y="1317" width="0.0104%" height="15" fill="rgb(215,208,19)" fg:x="4298" fg:w="8"/><text x="5.8309%" y="1327.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="5.5809%" y="1301" width="0.0104%" height="15" fill="rgb(236,175,2)" fg:x="4298" fg:w="8"/><text x="5.8309%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt; (31 samples, 0.04%)</title><rect x="5.5524%" y="1445" width="0.0403%" height="15" fill="rgb(241,52,2)" fg:x="4276" fg:w="31"/><text x="5.8024%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt; (31 samples, 0.04%)</title><rect x="5.5524%" y="1429" width="0.0403%" height="15" fill="rgb(248,140,14)" fg:x="4276" fg:w="31"/><text x="5.8024%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="5.5524%" y="1413" width="0.0403%" height="15" fill="rgb(253,22,42)" fg:x="4276" fg:w="31"/><text x="5.8024%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionOutput&gt; (26 samples, 0.03%)</title><rect x="5.5939%" y="1365" width="0.0338%" height="15" fill="rgb(234,61,47)" fg:x="4308" fg:w="26"/><text x="5.8439%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (20 samples, 0.03%)</title><rect x="5.6017%" y="1349" width="0.0260%" height="15" fill="rgb(208,226,15)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (20 samples, 0.03%)</title><rect x="5.6017%" y="1333" width="0.0260%" height="15" fill="rgb(217,221,4)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (20 samples, 0.03%)</title><rect x="5.6017%" y="1317" width="0.0260%" height="15" fill="rgb(212,174,34)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (20 samples, 0.03%)</title><rect x="5.6017%" y="1301" width="0.0260%" height="15" fill="rgb(253,83,4)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="5.6017%" y="1285" width="0.0260%" height="15" fill="rgb(250,195,49)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1295.50"></text></g><g><title>core::mem::drop (20 samples, 0.03%)</title><rect x="5.6017%" y="1269" width="0.0260%" height="15" fill="rgb(241,192,25)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (20 samples, 0.03%)</title><rect x="5.6017%" y="1253" width="0.0260%" height="15" fill="rgb(208,124,10)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="5.6017%" y="1237" width="0.0260%" height="15" fill="rgb(222,33,0)" fg:x="4314" fg:w="20"/><text x="5.8517%" y="1247.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (13 samples, 0.02%)</title><rect x="5.6108%" y="1221" width="0.0169%" height="15" fill="rgb(234,209,28)" fg:x="4321" fg:w="13"/><text x="5.8608%" y="1231.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (13 samples, 0.02%)</title><rect x="5.6108%" y="1205" width="0.0169%" height="15" fill="rgb(224,11,23)" fg:x="4321" fg:w="13"/><text x="5.8608%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (9 samples, 0.01%)</title><rect x="5.6160%" y="1189" width="0.0117%" height="15" fill="rgb(232,99,1)" fg:x="4325" fg:w="9"/><text x="5.8660%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="5.6173%" y="1173" width="0.0104%" height="15" fill="rgb(237,95,45)" fg:x="4326" fg:w="8"/><text x="5.8673%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="5.6173%" y="1157" width="0.0104%" height="15" fill="rgb(208,109,11)" fg:x="4326" fg:w="8"/><text x="5.8673%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="5.6173%" y="1141" width="0.0104%" height="15" fill="rgb(216,190,48)" fg:x="4326" fg:w="8"/><text x="5.8673%" y="1151.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::store (296 samples, 0.38%)</title><rect x="5.2446%" y="1477" width="0.3844%" height="15" fill="rgb(251,171,36)" fg:x="4039" fg:w="296"/><text x="5.4946%" y="1487.50"></text></g><g><title>core::mem::drop (59 samples, 0.08%)</title><rect x="5.5524%" y="1461" width="0.0766%" height="15" fill="rgb(230,62,22)" fg:x="4276" fg:w="59"/><text x="5.8024%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt; (28 samples, 0.04%)</title><rect x="5.5926%" y="1445" width="0.0364%" height="15" fill="rgb(225,114,35)" fg:x="4307" fg:w="28"/><text x="5.8426%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt; (28 samples, 0.04%)</title><rect x="5.5926%" y="1429" width="0.0364%" height="15" fill="rgb(215,118,42)" fg:x="4307" fg:w="28"/><text x="5.8426%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="5.5926%" y="1413" width="0.0364%" height="15" fill="rgb(243,119,21)" fg:x="4307" fg:w="28"/><text x="5.8426%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (28 samples, 0.04%)</title><rect x="5.5926%" y="1397" width="0.0364%" height="15" fill="rgb(252,177,53)" fg:x="4307" fg:w="28"/><text x="5.8426%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt; (28 samples, 0.04%)</title><rect x="5.5926%" y="1381" width="0.0364%" height="15" fill="rgb(237,209,29)" fg:x="4307" fg:w="28"/><text x="5.8426%" y="1391.50"></text></g><g><title>serde::de::EnumAccess::variant (34 samples, 0.04%)</title><rect x="5.7601%" y="1221" width="0.0441%" height="15" fill="rgb(212,65,23)" fg:x="4436" fg:w="34"/><text x="6.0101%" y="1231.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::EnumAccess&gt;::variant_seed (34 samples, 0.04%)</title><rect x="5.7601%" y="1205" width="0.0441%" height="15" fill="rgb(230,222,46)" fg:x="4436" fg:w="34"/><text x="6.0101%" y="1215.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (32 samples, 0.04%)</title><rect x="5.7627%" y="1189" width="0.0416%" height="15" fill="rgb(215,135,32)" fg:x="4438" fg:w="32"/><text x="6.0127%" y="1199.50"></text></g><g><title>bcs::de::Deserializer::next (17 samples, 0.02%)</title><rect x="5.7822%" y="1173" width="0.0221%" height="15" fill="rgb(246,101,22)" fg:x="4453" fg:w="17"/><text x="6.0322%" y="1183.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.02%)</title><rect x="5.7835%" y="1157" width="0.0208%" height="15" fill="rgb(206,107,13)" fg:x="4454" fg:w="16"/><text x="6.0335%" y="1167.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.02%)</title><rect x="5.7835%" y="1141" width="0.0208%" height="15" fill="rgb(250,100,44)" fg:x="4454" fg:w="16"/><text x="6.0335%" y="1151.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.02%)</title><rect x="5.7835%" y="1125" width="0.0208%" height="15" fill="rgb(231,147,38)" fg:x="4454" fg:w="16"/><text x="6.0335%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.02%)</title><rect x="5.7835%" y="1109" width="0.0208%" height="15" fill="rgb(229,8,40)" fg:x="4454" fg:w="16"/><text x="6.0335%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (16 samples, 0.02%)</title><rect x="5.7835%" y="1093" width="0.0208%" height="15" fill="rgb(221,135,30)" fg:x="4454" fg:w="16"/><text x="6.0335%" y="1103.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (16 samples, 0.02%)</title><rect x="5.7835%" y="1077" width="0.0208%" height="15" fill="rgb(249,193,18)" fg:x="4454" fg:w="16"/><text x="6.0335%" y="1087.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::convert::From&lt;[u8: _]&gt;&gt;::from (14 samples, 0.02%)</title><rect x="5.8796%" y="1061" width="0.0182%" height="15" fill="rgb(209,133,39)" fg:x="4528" fg:w="14"/><text x="6.1296%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.02%)</title><rect x="6.0406%" y="885" width="0.0208%" height="15" fill="rgb(232,100,14)" fg:x="4652" fg:w="16"/><text x="6.2906%" y="895.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (212 samples, 0.28%)</title><rect x="5.9640%" y="981" width="0.2753%" height="15" fill="rgb(224,185,1)" fg:x="4593" fg:w="212"/><text x="6.2140%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (160 samples, 0.21%)</title><rect x="6.0315%" y="965" width="0.2078%" height="15" fill="rgb(223,139,8)" fg:x="4645" fg:w="160"/><text x="6.2815%" y="975.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (160 samples, 0.21%)</title><rect x="6.0315%" y="949" width="0.2078%" height="15" fill="rgb(232,213,38)" fg:x="4645" fg:w="160"/><text x="6.2815%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (160 samples, 0.21%)</title><rect x="6.0315%" y="933" width="0.2078%" height="15" fill="rgb(207,94,22)" fg:x="4645" fg:w="160"/><text x="6.2815%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (160 samples, 0.21%)</title><rect x="6.0315%" y="917" width="0.2078%" height="15" fill="rgb(219,183,54)" fg:x="4645" fg:w="160"/><text x="6.2815%" y="927.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (160 samples, 0.21%)</title><rect x="6.0315%" y="901" width="0.2078%" height="15" fill="rgb(216,185,54)" fg:x="4645" fg:w="160"/><text x="6.2815%" y="911.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (137 samples, 0.18%)</title><rect x="6.0614%" y="885" width="0.1779%" height="15" fill="rgb(254,217,39)" fg:x="4668" fg:w="137"/><text x="6.3114%" y="895.50"></text></g><g><title>bcs::de::Deserializer::next (53 samples, 0.07%)</title><rect x="6.1705%" y="869" width="0.0688%" height="15" fill="rgb(240,178,23)" fg:x="4752" fg:w="53"/><text x="6.4205%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (46 samples, 0.06%)</title><rect x="6.1796%" y="853" width="0.0597%" height="15" fill="rgb(218,11,47)" fg:x="4759" fg:w="46"/><text x="6.4296%" y="863.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (46 samples, 0.06%)</title><rect x="6.1796%" y="837" width="0.0597%" height="15" fill="rgb(218,51,51)" fg:x="4759" fg:w="46"/><text x="6.4296%" y="847.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (46 samples, 0.06%)</title><rect x="6.1796%" y="821" width="0.0597%" height="15" fill="rgb(238,126,27)" fg:x="4759" fg:w="46"/><text x="6.4296%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (46 samples, 0.06%)</title><rect x="6.1796%" y="805" width="0.0597%" height="15" fill="rgb(249,202,22)" fg:x="4759" fg:w="46"/><text x="6.4296%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (46 samples, 0.06%)</title><rect x="6.1796%" y="789" width="0.0597%" height="15" fill="rgb(254,195,49)" fg:x="4759" fg:w="46"/><text x="6.4296%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (46 samples, 0.06%)</title><rect x="6.1796%" y="773" width="0.0597%" height="15" fill="rgb(208,123,14)" fg:x="4759" fg:w="46"/><text x="6.4296%" y="783.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (247 samples, 0.32%)</title><rect x="5.9225%" y="1029" width="0.3207%" height="15" fill="rgb(224,200,8)" fg:x="4561" fg:w="247"/><text x="6.1725%" y="1039.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (221 samples, 0.29%)</title><rect x="5.9562%" y="1013" width="0.2870%" height="15" fill="rgb(217,61,36)" fg:x="4587" fg:w="221"/><text x="6.2062%" y="1023.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (221 samples, 0.29%)</title><rect x="5.9562%" y="997" width="0.2870%" height="15" fill="rgb(206,35,45)" fg:x="4587" fg:w="221"/><text x="6.2062%" y="1007.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (319 samples, 0.41%)</title><rect x="5.8368%" y="1077" width="0.4142%" height="15" fill="rgb(217,65,33)" fg:x="4495" fg:w="319"/><text x="6.0868%" y="1087.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (272 samples, 0.35%)</title><rect x="5.8978%" y="1061" width="0.3532%" height="15" fill="rgb(222,158,48)" fg:x="4542" fg:w="272"/><text x="6.1478%" y="1071.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (272 samples, 0.35%)</title><rect x="5.8978%" y="1045" width="0.3532%" height="15" fill="rgb(254,2,54)" fg:x="4542" fg:w="272"/><text x="6.1478%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (22 samples, 0.03%)</title><rect x="6.3211%" y="1013" width="0.0286%" height="15" fill="rgb(250,143,38)" fg:x="4868" fg:w="22"/><text x="6.5711%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.03%)</title><rect x="6.3237%" y="997" width="0.0260%" height="15" fill="rgb(248,25,0)" fg:x="4870" fg:w="20"/><text x="6.5737%" y="1007.50"></text></g><g><title>alloc::string::String::into_boxed_str (20 samples, 0.03%)</title><rect x="6.3237%" y="981" width="0.0260%" height="15" fill="rgb(206,152,27)" fg:x="4870" fg:w="20"/><text x="6.5737%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (20 samples, 0.03%)</title><rect x="6.3237%" y="965" width="0.0260%" height="15" fill="rgb(240,77,30)" fg:x="4870" fg:w="20"/><text x="6.5737%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="6.3497%" y="965" width="0.0130%" height="15" fill="rgb(231,5,3)" fg:x="4890" fg:w="10"/><text x="6.5997%" y="975.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (8 samples, 0.01%)</title><rect x="6.3756%" y="949" width="0.0104%" height="15" fill="rgb(207,226,32)" fg:x="4910" fg:w="8"/><text x="6.6256%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (31 samples, 0.04%)</title><rect x="6.3860%" y="949" width="0.0403%" height="15" fill="rgb(222,207,47)" fg:x="4918" fg:w="31"/><text x="6.6360%" y="959.50"></text></g><g><title>bcs::de::Deserializer::parse_string (74 samples, 0.10%)</title><rect x="6.3626%" y="965" width="0.0961%" height="15" fill="rgb(229,115,45)" fg:x="4900" fg:w="74"/><text x="6.6126%" y="975.50"></text></g><g><title>core::str::converts::from_utf8 (25 samples, 0.03%)</title><rect x="6.4263%" y="949" width="0.0325%" height="15" fill="rgb(224,191,6)" fg:x="4949" fg:w="25"/><text x="6.6763%" y="959.50"></text></g><g><title>core::str::validations::run_utf8_validation (13 samples, 0.02%)</title><rect x="6.4419%" y="933" width="0.0169%" height="15" fill="rgb(230,227,24)" fg:x="4961" fg:w="13"/><text x="6.6919%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.03%)</title><rect x="6.4587%" y="837" width="0.0338%" height="15" fill="rgb(228,80,19)" fg:x="4974" fg:w="26"/><text x="6.7087%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.03%)</title><rect x="6.4587%" y="821" width="0.0338%" height="15" fill="rgb(247,229,0)" fg:x="4974" fg:w="26"/><text x="6.7087%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.03%)</title><rect x="6.4587%" y="805" width="0.0338%" height="15" fill="rgb(237,194,15)" fg:x="4974" fg:w="26"/><text x="6.7087%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.03%)</title><rect x="6.4613%" y="789" width="0.0312%" height="15" fill="rgb(219,203,20)" fg:x="4976" fg:w="24"/><text x="6.7113%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.03%)</title><rect x="6.4613%" y="773" width="0.0312%" height="15" fill="rgb(234,128,8)" fg:x="4976" fg:w="24"/><text x="6.7113%" y="783.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.03%)</title><rect x="6.4613%" y="757" width="0.0312%" height="15" fill="rgb(248,202,8)" fg:x="4976" fg:w="24"/><text x="6.7113%" y="767.50"></text></g><g><title>malloc (15 samples, 0.02%)</title><rect x="6.4730%" y="741" width="0.0195%" height="15" fill="rgb(206,104,37)" fg:x="4985" fg:w="15"/><text x="6.7230%" y="751.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (182 samples, 0.24%)</title><rect x="6.2730%" y="1045" width="0.2363%" height="15" fill="rgb(223,8,27)" fg:x="4831" fg:w="182"/><text x="6.5230%" y="1055.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (157 samples, 0.20%)</title><rect x="6.3055%" y="1029" width="0.2039%" height="15" fill="rgb(216,217,28)" fg:x="4856" fg:w="157"/><text x="6.5555%" y="1039.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (123 samples, 0.16%)</title><rect x="6.3497%" y="1013" width="0.1597%" height="15" fill="rgb(249,199,1)" fg:x="4890" fg:w="123"/><text x="6.5997%" y="1023.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (123 samples, 0.16%)</title><rect x="6.3497%" y="997" width="0.1597%" height="15" fill="rgb(240,85,17)" fg:x="4890" fg:w="123"/><text x="6.5997%" y="1007.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (123 samples, 0.16%)</title><rect x="6.3497%" y="981" width="0.1597%" height="15" fill="rgb(206,108,45)" fg:x="4890" fg:w="123"/><text x="6.5997%" y="991.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (39 samples, 0.05%)</title><rect x="6.4587%" y="965" width="0.0506%" height="15" fill="rgb(245,210,41)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="975.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (39 samples, 0.05%)</title><rect x="6.4587%" y="949" width="0.0506%" height="15" fill="rgb(206,13,37)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (39 samples, 0.05%)</title><rect x="6.4587%" y="933" width="0.0506%" height="15" fill="rgb(250,61,18)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (39 samples, 0.05%)</title><rect x="6.4587%" y="917" width="0.0506%" height="15" fill="rgb(235,172,48)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (39 samples, 0.05%)</title><rect x="6.4587%" y="901" width="0.0506%" height="15" fill="rgb(249,201,17)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.05%)</title><rect x="6.4587%" y="885" width="0.0506%" height="15" fill="rgb(219,208,6)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.05%)</title><rect x="6.4587%" y="869" width="0.0506%" height="15" fill="rgb(248,31,23)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.05%)</title><rect x="6.4587%" y="853" width="0.0506%" height="15" fill="rgb(245,15,42)" fg:x="4974" fg:w="39"/><text x="6.7087%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.02%)</title><rect x="6.4925%" y="837" width="0.0169%" height="15" fill="rgb(222,217,39)" fg:x="5000" fg:w="13"/><text x="6.7425%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="6.4925%" y="821" width="0.0169%" height="15" fill="rgb(210,219,27)" fg:x="5000" fg:w="13"/><text x="6.7425%" y="831.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="6.4925%" y="805" width="0.0169%" height="15" fill="rgb(252,166,36)" fg:x="5000" fg:w="13"/><text x="6.7425%" y="815.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (9 samples, 0.01%)</title><rect x="6.5094%" y="1045" width="0.0117%" height="15" fill="rgb(245,132,34)" fg:x="5013" fg:w="9"/><text x="6.7594%" y="1055.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (214 samples, 0.28%)</title><rect x="6.2510%" y="1077" width="0.2779%" height="15" fill="rgb(236,54,3)" fg:x="4814" fg:w="214"/><text x="6.5010%" y="1087.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (214 samples, 0.28%)</title><rect x="6.2510%" y="1061" width="0.2779%" height="15" fill="rgb(241,173,43)" fg:x="4814" fg:w="214"/><text x="6.5010%" y="1071.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (36 samples, 0.05%)</title><rect x="6.6496%" y="645" width="0.0467%" height="15" fill="rgb(215,190,9)" fg:x="5121" fg:w="36"/><text x="6.8996%" y="655.50"></text></g><g><title>serde::de::SeqAccess::next_element (16 samples, 0.02%)</title><rect x="6.6756%" y="629" width="0.0208%" height="15" fill="rgb(242,101,16)" fg:x="5141" fg:w="16"/><text x="6.9256%" y="639.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (16 samples, 0.02%)</title><rect x="6.6756%" y="613" width="0.0208%" height="15" fill="rgb(223,190,21)" fg:x="5141" fg:w="16"/><text x="6.9256%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.02%)</title><rect x="6.6756%" y="597" width="0.0208%" height="15" fill="rgb(215,228,25)" fg:x="5141" fg:w="16"/><text x="6.9256%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (16 samples, 0.02%)</title><rect x="6.6756%" y="581" width="0.0208%" height="15" fill="rgb(225,36,22)" fg:x="5141" fg:w="16"/><text x="6.9256%" y="591.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (16 samples, 0.02%)</title><rect x="6.6756%" y="565" width="0.0208%" height="15" fill="rgb(251,106,46)" fg:x="5141" fg:w="16"/><text x="6.9256%" y="575.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (16 samples, 0.02%)</title><rect x="6.6756%" y="549" width="0.0208%" height="15" fill="rgb(208,90,1)" fg:x="5141" fg:w="16"/><text x="6.9256%" y="559.50"></text></g><g><title>bcs::de::Deserializer::next (12 samples, 0.02%)</title><rect x="6.6808%" y="533" width="0.0156%" height="15" fill="rgb(243,10,4)" fg:x="5145" fg:w="12"/><text x="6.9308%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.01%)</title><rect x="6.6821%" y="517" width="0.0143%" height="15" fill="rgb(212,137,27)" fg:x="5146" fg:w="11"/><text x="6.9321%" y="527.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.01%)</title><rect x="6.6821%" y="501" width="0.0143%" height="15" fill="rgb(231,220,49)" fg:x="5146" fg:w="11"/><text x="6.9321%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="6.6821%" y="485" width="0.0143%" height="15" fill="rgb(237,96,20)" fg:x="5146" fg:w="11"/><text x="6.9321%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="6.6821%" y="469" width="0.0143%" height="15" fill="rgb(239,229,30)" fg:x="5146" fg:w="11"/><text x="6.9321%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.01%)</title><rect x="6.6821%" y="453" width="0.0143%" height="15" fill="rgb(219,65,33)" fg:x="5146" fg:w="11"/><text x="6.9321%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (11 samples, 0.01%)</title><rect x="6.6821%" y="437" width="0.0143%" height="15" fill="rgb(243,134,7)" fg:x="5146" fg:w="11"/><text x="6.9321%" y="447.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (40 samples, 0.05%)</title><rect x="6.6457%" y="693" width="0.0519%" height="15" fill="rgb(216,177,54)" fg:x="5118" fg:w="40"/><text x="6.8957%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (37 samples, 0.05%)</title><rect x="6.6496%" y="677" width="0.0480%" height="15" fill="rgb(211,160,20)" fg:x="5121" fg:w="37"/><text x="6.8996%" y="687.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (37 samples, 0.05%)</title><rect x="6.6496%" y="661" width="0.0480%" height="15" fill="rgb(239,85,39)" fg:x="5121" fg:w="37"/><text x="6.8996%" y="671.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (52 samples, 0.07%)</title><rect x="6.6327%" y="741" width="0.0675%" height="15" fill="rgb(232,125,22)" fg:x="5108" fg:w="52"/><text x="6.8827%" y="751.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (46 samples, 0.06%)</title><rect x="6.6405%" y="725" width="0.0597%" height="15" fill="rgb(244,57,34)" fg:x="5114" fg:w="46"/><text x="6.8905%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (46 samples, 0.06%)</title><rect x="6.6405%" y="709" width="0.0597%" height="15" fill="rgb(214,203,32)" fg:x="5114" fg:w="46"/><text x="6.8905%" y="719.50"></text></g><g><title>bcs::de::Deserializer::parse_string (13 samples, 0.02%)</title><rect x="6.7210%" y="629" width="0.0169%" height="15" fill="rgb(207,58,43)" fg:x="5176" fg:w="13"/><text x="6.9710%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="6.7379%" y="501" width="0.0143%" height="15" fill="rgb(215,193,15)" fg:x="5189" fg:w="11"/><text x="6.9879%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="6.7379%" y="485" width="0.0143%" height="15" fill="rgb(232,15,44)" fg:x="5189" fg:w="11"/><text x="6.9879%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="6.7379%" y="469" width="0.0143%" height="15" fill="rgb(212,3,48)" fg:x="5189" fg:w="11"/><text x="6.9879%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="6.7379%" y="453" width="0.0143%" height="15" fill="rgb(218,128,7)" fg:x="5189" fg:w="11"/><text x="6.9879%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="6.7379%" y="437" width="0.0143%" height="15" fill="rgb(226,216,39)" fg:x="5189" fg:w="11"/><text x="6.9879%" y="447.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="6.7379%" y="421" width="0.0143%" height="15" fill="rgb(243,47,51)" fg:x="5189" fg:w="11"/><text x="6.9879%" y="431.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="6.7392%" y="405" width="0.0130%" height="15" fill="rgb(241,183,40)" fg:x="5190" fg:w="10"/><text x="6.9892%" y="415.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (37 samples, 0.05%)</title><rect x="6.7067%" y="709" width="0.0480%" height="15" fill="rgb(231,217,32)" fg:x="5165" fg:w="37"/><text x="6.9567%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (31 samples, 0.04%)</title><rect x="6.7145%" y="693" width="0.0403%" height="15" fill="rgb(229,61,38)" fg:x="5171" fg:w="31"/><text x="6.9645%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (28 samples, 0.04%)</title><rect x="6.7184%" y="677" width="0.0364%" height="15" fill="rgb(225,210,5)" fg:x="5174" fg:w="28"/><text x="6.9684%" y="687.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (28 samples, 0.04%)</title><rect x="6.7184%" y="661" width="0.0364%" height="15" fill="rgb(231,79,45)" fg:x="5174" fg:w="28"/><text x="6.9684%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (28 samples, 0.04%)</title><rect x="6.7184%" y="645" width="0.0364%" height="15" fill="rgb(224,100,7)" fg:x="5174" fg:w="28"/><text x="6.9684%" y="655.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (13 samples, 0.02%)</title><rect x="6.7379%" y="629" width="0.0169%" height="15" fill="rgb(241,198,18)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="639.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (13 samples, 0.02%)</title><rect x="6.7379%" y="613" width="0.0169%" height="15" fill="rgb(252,97,53)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="623.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 0.02%)</title><rect x="6.7379%" y="597" width="0.0169%" height="15" fill="rgb(220,88,7)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 0.02%)</title><rect x="6.7379%" y="581" width="0.0169%" height="15" fill="rgb(213,176,14)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.02%)</title><rect x="6.7379%" y="565" width="0.0169%" height="15" fill="rgb(246,73,7)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.02%)</title><rect x="6.7379%" y="549" width="0.0169%" height="15" fill="rgb(245,64,36)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.02%)</title><rect x="6.7379%" y="533" width="0.0169%" height="15" fill="rgb(245,80,10)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.02%)</title><rect x="6.7379%" y="517" width="0.0169%" height="15" fill="rgb(232,107,50)" fg:x="5189" fg:w="13"/><text x="6.9879%" y="527.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (43 samples, 0.06%)</title><rect x="6.7003%" y="741" width="0.0558%" height="15" fill="rgb(253,3,0)" fg:x="5160" fg:w="43"/><text x="6.9503%" y="751.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (43 samples, 0.06%)</title><rect x="6.7003%" y="725" width="0.0558%" height="15" fill="rgb(212,99,53)" fg:x="5160" fg:w="43"/><text x="6.9503%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (101 samples, 0.13%)</title><rect x="6.6327%" y="757" width="0.1311%" height="15" fill="rgb(249,111,54)" fg:x="5108" fg:w="101"/><text x="6.8827%" y="767.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (107 samples, 0.14%)</title><rect x="6.6314%" y="805" width="0.1389%" height="15" fill="rgb(249,55,30)" fg:x="5107" fg:w="107"/><text x="6.8814%" y="815.50"></text></g><g><title>serde::de::SeqAccess::next_element (106 samples, 0.14%)</title><rect x="6.6327%" y="789" width="0.1376%" height="15" fill="rgb(237,47,42)" fg:x="5108" fg:w="106"/><text x="6.8827%" y="799.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (106 samples, 0.14%)</title><rect x="6.6327%" y="773" width="0.1376%" height="15" fill="rgb(211,20,18)" fg:x="5108" fg:w="106"/><text x="6.8827%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (120 samples, 0.16%)</title><rect x="6.6172%" y="853" width="0.1558%" height="15" fill="rgb(231,203,46)" fg:x="5096" fg:w="120"/><text x="6.8672%" y="863.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (117 samples, 0.15%)</title><rect x="6.6210%" y="837" width="0.1519%" height="15" fill="rgb(237,142,3)" fg:x="5099" fg:w="117"/><text x="6.8710%" y="847.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (117 samples, 0.15%)</title><rect x="6.6210%" y="821" width="0.1519%" height="15" fill="rgb(241,107,1)" fg:x="5099" fg:w="117"/><text x="6.8710%" y="831.50"></text></g><g><title>move_core_types::safe_serialize::TYPE_TAG_DEPTH::__getit (12 samples, 0.02%)</title><rect x="6.7808%" y="821" width="0.0156%" height="15" fill="rgb(229,83,13)" fg:x="5222" fg:w="12"/><text x="7.0308%" y="831.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (165 samples, 0.21%)</title><rect x="6.5873%" y="949" width="0.2143%" height="15" fill="rgb(241,91,40)" fg:x="5073" fg:w="165"/><text x="6.8373%" y="959.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (154 samples, 0.20%)</title><rect x="6.6016%" y="933" width="0.2000%" height="15" fill="rgb(225,3,45)" fg:x="5084" fg:w="154"/><text x="6.8516%" y="943.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (154 samples, 0.20%)</title><rect x="6.6016%" y="917" width="0.2000%" height="15" fill="rgb(244,223,14)" fg:x="5084" fg:w="154"/><text x="6.8516%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (154 samples, 0.20%)</title><rect x="6.6016%" y="901" width="0.2000%" height="15" fill="rgb(224,124,37)" fg:x="5084" fg:w="154"/><text x="6.8516%" y="911.50"></text></g><g><title>&lt;&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum::__DeserializeWith as serde::de::Deserialize&gt;::deserialize (154 samples, 0.20%)</title><rect x="6.6016%" y="885" width="0.2000%" height="15" fill="rgb(251,171,30)" fg:x="5084" fg:w="154"/><text x="6.8516%" y="895.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_deserialize (150 samples, 0.19%)</title><rect x="6.6068%" y="869" width="0.1948%" height="15" fill="rgb(236,46,54)" fg:x="5088" fg:w="150"/><text x="6.8568%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.03%)</title><rect x="6.7730%" y="853" width="0.0286%" height="15" fill="rgb(245,213,5)" fg:x="5216" fg:w="22"/><text x="7.0230%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.02%)</title><rect x="6.7808%" y="837" width="0.0208%" height="15" fill="rgb(230,144,27)" fg:x="5222" fg:w="16"/><text x="7.0308%" y="847.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (207 samples, 0.27%)</title><rect x="6.5353%" y="1045" width="0.2688%" height="15" fill="rgb(220,86,6)" fg:x="5033" fg:w="207"/><text x="6.7853%" y="1055.50"></text></g><g><title>serde::de::SeqAccess::next_element (178 samples, 0.23%)</title><rect x="6.5730%" y="1029" width="0.2311%" height="15" fill="rgb(240,20,13)" fg:x="5062" fg:w="178"/><text x="6.8230%" y="1039.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (178 samples, 0.23%)</title><rect x="6.5730%" y="1013" width="0.2311%" height="15" fill="rgb(217,89,34)" fg:x="5062" fg:w="178"/><text x="6.8230%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (168 samples, 0.22%)</title><rect x="6.5860%" y="997" width="0.2181%" height="15" fill="rgb(229,13,5)" fg:x="5072" fg:w="168"/><text x="6.8360%" y="1007.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize (168 samples, 0.22%)</title><rect x="6.5860%" y="981" width="0.2181%" height="15" fill="rgb(244,67,35)" fg:x="5072" fg:w="168"/><text x="6.8360%" y="991.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (168 samples, 0.22%)</title><rect x="6.5860%" y="965" width="0.2181%" height="15" fill="rgb(221,40,2)" fg:x="5072" fg:w="168"/><text x="6.8360%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (758 samples, 0.98%)</title><rect x="5.8368%" y="1093" width="0.9843%" height="15" fill="rgb(237,157,21)" fg:x="4495" fg:w="758"/><text x="6.0868%" y="1103.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (225 samples, 0.29%)</title><rect x="6.5289%" y="1077" width="0.2922%" height="15" fill="rgb(222,94,11)" fg:x="5028" fg:w="225"/><text x="6.7789%" y="1087.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (221 samples, 0.29%)</title><rect x="6.5340%" y="1061" width="0.2870%" height="15" fill="rgb(249,113,6)" fg:x="5032" fg:w="221"/><text x="6.7840%" y="1071.50"></text></g><g><title>bcs::de::Deserializer::parse_length (13 samples, 0.02%)</title><rect x="6.8041%" y="1045" width="0.0169%" height="15" fill="rgb(238,137,36)" fg:x="5240" fg:w="13"/><text x="7.0541%" y="1055.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (792 samples, 1.03%)</title><rect x="5.8212%" y="1141" width="1.0284%" height="15" fill="rgb(210,102,26)" fg:x="4483" fg:w="792"/><text x="6.0712%" y="1151.50"></text></g><g><title>serde::de::SeqAccess::next_element (780 samples, 1.01%)</title><rect x="5.8368%" y="1125" width="1.0128%" height="15" fill="rgb(218,30,30)" fg:x="4495" fg:w="780"/><text x="6.0868%" y="1135.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (780 samples, 1.01%)</title><rect x="5.8368%" y="1109" width="1.0128%" height="15" fill="rgb(214,67,26)" fg:x="4495" fg:w="780"/><text x="6.0868%" y="1119.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (22 samples, 0.03%)</title><rect x="6.8210%" y="1093" width="0.0286%" height="15" fill="rgb(251,9,53)" fg:x="5253" fg:w="22"/><text x="7.0710%" y="1103.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (855 samples, 1.11%)</title><rect x="5.7511%" y="1237" width="1.1102%" height="15" fill="rgb(228,204,25)" fg:x="4429" fg:w="855"/><text x="6.0011%" y="1247.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (814 samples, 1.06%)</title><rect x="5.8043%" y="1221" width="1.0570%" height="15" fill="rgb(207,153,8)" fg:x="4470" fg:w="814"/><text x="6.0543%" y="1231.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (814 samples, 1.06%)</title><rect x="5.8043%" y="1205" width="1.0570%" height="15" fill="rgb(242,9,16)" fg:x="4470" fg:w="814"/><text x="6.0543%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (814 samples, 1.06%)</title><rect x="5.8043%" y="1189" width="1.0570%" height="15" fill="rgb(217,211,10)" fg:x="4470" fg:w="814"/><text x="6.0543%" y="1199.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (814 samples, 1.06%)</title><rect x="5.8043%" y="1173" width="1.0570%" height="15" fill="rgb(219,228,52)" fg:x="4470" fg:w="814"/><text x="6.0543%" y="1183.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (814 samples, 1.06%)</title><rect x="5.8043%" y="1157" width="1.0570%" height="15" fill="rgb(231,92,29)" fg:x="4470" fg:w="814"/><text x="6.0543%" y="1167.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (8 samples, 0.01%)</title><rect x="6.8626%" y="1237" width="0.0104%" height="15" fill="rgb(232,8,23)" fg:x="5285" fg:w="8"/><text x="7.1126%" y="1247.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize (887 samples, 1.15%)</title><rect x="5.7251%" y="1269" width="1.1518%" height="15" fill="rgb(216,211,34)" fg:x="4409" fg:w="887"/><text x="5.9751%" y="1279.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (887 samples, 1.15%)</title><rect x="5.7251%" y="1253" width="1.1518%" height="15" fill="rgb(236,151,0)" fg:x="4409" fg:w="887"/><text x="5.9751%" y="1263.50"></text></g><g><title>bcs::de::from_bytes (922 samples, 1.20%)</title><rect x="5.6978%" y="1285" width="1.1972%" height="15" fill="rgb(209,168,3)" fg:x="4388" fg:w="922"/><text x="5.9478%" y="1295.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (930 samples, 1.21%)</title><rect x="5.6900%" y="1301" width="1.2076%" height="15" fill="rgb(208,129,28)" fg:x="4382" fg:w="930"/><text x="5.9400%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (22 samples, 0.03%)</title><rect x="6.9041%" y="1269" width="0.0286%" height="15" fill="rgb(229,78,22)" fg:x="5317" fg:w="22"/><text x="7.1541%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="6.9041%" y="1253" width="0.0286%" height="15" fill="rgb(228,187,13)" fg:x="5317" fg:w="22"/><text x="7.1541%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (19 samples, 0.02%)</title><rect x="6.9080%" y="1237" width="0.0247%" height="15" fill="rgb(240,119,24)" fg:x="5320" fg:w="19"/><text x="7.1580%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (18 samples, 0.02%)</title><rect x="6.9093%" y="1221" width="0.0234%" height="15" fill="rgb(209,194,42)" fg:x="5321" fg:w="18"/><text x="7.1593%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (13 samples, 0.02%)</title><rect x="6.9158%" y="1205" width="0.0169%" height="15" fill="rgb(247,200,46)" fg:x="5326" fg:w="13"/><text x="7.1658%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (13 samples, 0.02%)</title><rect x="6.9158%" y="1189" width="0.0169%" height="15" fill="rgb(218,76,16)" fg:x="5326" fg:w="13"/><text x="7.1658%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (11 samples, 0.01%)</title><rect x="6.9184%" y="1173" width="0.0143%" height="15" fill="rgb(225,21,48)" fg:x="5328" fg:w="11"/><text x="7.1684%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (11 samples, 0.01%)</title><rect x="6.9184%" y="1157" width="0.0143%" height="15" fill="rgb(239,223,50)" fg:x="5328" fg:w="11"/><text x="7.1684%" y="1167.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="6.9184%" y="1141" width="0.0143%" height="15" fill="rgb(244,45,21)" fg:x="5328" fg:w="11"/><text x="7.1684%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="6.9184%" y="1125" width="0.0143%" height="15" fill="rgb(232,33,43)" fg:x="5328" fg:w="11"/><text x="7.1684%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="6.9197%" y="1109" width="0.0130%" height="15" fill="rgb(209,8,3)" fg:x="5329" fg:w="10"/><text x="7.1697%" y="1119.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (992 samples, 1.29%)</title><rect x="5.6757%" y="1317" width="1.2881%" height="15" fill="rgb(214,25,53)" fg:x="4371" fg:w="992"/><text x="5.9257%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (46 samples, 0.06%)</title><rect x="6.9041%" y="1301" width="0.0597%" height="15" fill="rgb(254,186,54)" fg:x="5317" fg:w="46"/><text x="7.1541%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (46 samples, 0.06%)</title><rect x="6.9041%" y="1285" width="0.0597%" height="15" fill="rgb(208,174,49)" fg:x="5317" fg:w="46"/><text x="7.1541%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (24 samples, 0.03%)</title><rect x="6.9327%" y="1269" width="0.0312%" height="15" fill="rgb(233,191,51)" fg:x="5339" fg:w="24"/><text x="7.1827%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (24 samples, 0.03%)</title><rect x="6.9327%" y="1253" width="0.0312%" height="15" fill="rgb(222,134,10)" fg:x="5339" fg:w="24"/><text x="7.1827%" y="1263.50"></text></g><g><title>alloc::alloc::box_free (24 samples, 0.03%)</title><rect x="6.9327%" y="1237" width="0.0312%" height="15" fill="rgb(230,226,20)" fg:x="5339" fg:w="24"/><text x="7.1827%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.03%)</title><rect x="6.9327%" y="1221" width="0.0312%" height="15" fill="rgb(251,111,25)" fg:x="5339" fg:w="24"/><text x="7.1827%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.03%)</title><rect x="6.9327%" y="1205" width="0.0312%" height="15" fill="rgb(224,40,46)" fg:x="5339" fg:w="24"/><text x="7.1827%" y="1215.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="6.9405%" y="1189" width="0.0234%" height="15" fill="rgb(236,108,47)" fg:x="5345" fg:w="18"/><text x="7.1905%" y="1199.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="6.9522%" y="1173" width="0.0117%" height="15" fill="rgb(234,93,0)" fg:x="5354" fg:w="9"/><text x="7.2022%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,034 samples, 1.34%)</title><rect x="5.6342%" y="1413" width="1.3426%" height="15" fill="rgb(224,213,32)" fg:x="4339" fg:w="1034"/><text x="5.8842%" y="1423.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,034 samples, 1.34%)</title><rect x="5.6342%" y="1397" width="1.3426%" height="15" fill="rgb(251,11,48)" fg:x="4339" fg:w="1034"/><text x="5.8842%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,029 samples, 1.34%)</title><rect x="5.6407%" y="1381" width="1.3362%" height="15" fill="rgb(236,173,5)" fg:x="4344" fg:w="1029"/><text x="5.8907%" y="1391.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (1,029 samples, 1.34%)</title><rect x="5.6407%" y="1365" width="1.3362%" height="15" fill="rgb(230,95,12)" fg:x="4344" fg:w="1029"/><text x="5.8907%" y="1375.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;K&gt;::module_path (1,029 samples, 1.34%)</title><rect x="5.6407%" y="1349" width="1.3362%" height="15" fill="rgb(232,209,1)" fg:x="4344" fg:w="1029"/><text x="5.8907%" y="1359.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (1,026 samples, 1.33%)</title><rect x="5.6446%" y="1333" width="1.3323%" height="15" fill="rgb(232,6,1)" fg:x="4347" fg:w="1026"/><text x="5.8946%" y="1343.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::inner (10 samples, 0.01%)</title><rect x="6.9638%" y="1317" width="0.0130%" height="15" fill="rgb(210,224,50)" fg:x="5363" fg:w="10"/><text x="7.2138%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,039 samples, 1.35%)</title><rect x="5.6290%" y="1445" width="1.3491%" height="15" fill="rgb(228,127,35)" fg:x="4335" fg:w="1039"/><text x="5.8790%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,035 samples, 1.34%)</title><rect x="5.6342%" y="1429" width="1.3439%" height="15" fill="rgb(245,102,45)" fg:x="4339" fg:w="1035"/><text x="5.8842%" y="1439.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (27 samples, 0.04%)</title><rect x="7.0093%" y="1061" width="0.0351%" height="15" fill="rgb(214,1,49)" fg:x="5398" fg:w="27"/><text x="7.2593%" y="1071.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (23 samples, 0.03%)</title><rect x="7.0145%" y="1045" width="0.0299%" height="15" fill="rgb(226,163,40)" fg:x="5402" fg:w="23"/><text x="7.2645%" y="1055.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (23 samples, 0.03%)</title><rect x="7.0145%" y="1029" width="0.0299%" height="15" fill="rgb(239,212,28)" fg:x="5402" fg:w="23"/><text x="7.2645%" y="1039.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (23 samples, 0.03%)</title><rect x="7.0145%" y="1013" width="0.0299%" height="15" fill="rgb(220,20,13)" fg:x="5402" fg:w="23"/><text x="7.2645%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (22 samples, 0.03%)</title><rect x="7.0158%" y="997" width="0.0286%" height="15" fill="rgb(210,164,35)" fg:x="5403" fg:w="22"/><text x="7.2658%" y="1007.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (22 samples, 0.03%)</title><rect x="7.0158%" y="981" width="0.0286%" height="15" fill="rgb(248,109,41)" fg:x="5403" fg:w="22"/><text x="7.2658%" y="991.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (22 samples, 0.03%)</title><rect x="7.0158%" y="965" width="0.0286%" height="15" fill="rgb(238,23,50)" fg:x="5403" fg:w="22"/><text x="7.2658%" y="975.50"></text></g><g><title>serde::de::SeqAccess::next_element (13 samples, 0.02%)</title><rect x="7.0275%" y="949" width="0.0169%" height="15" fill="rgb(211,48,49)" fg:x="5412" fg:w="13"/><text x="7.2775%" y="959.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (13 samples, 0.02%)</title><rect x="7.0275%" y="933" width="0.0169%" height="15" fill="rgb(223,36,21)" fg:x="5412" fg:w="13"/><text x="7.2775%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.02%)</title><rect x="7.0275%" y="917" width="0.0169%" height="15" fill="rgb(207,123,46)" fg:x="5412" fg:w="13"/><text x="7.2775%" y="927.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (13 samples, 0.02%)</title><rect x="7.0275%" y="901" width="0.0169%" height="15" fill="rgb(240,218,32)" fg:x="5412" fg:w="13"/><text x="7.2775%" y="911.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (13 samples, 0.02%)</title><rect x="7.0275%" y="885" width="0.0169%" height="15" fill="rgb(252,5,43)" fg:x="5412" fg:w="13"/><text x="7.2775%" y="895.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (10 samples, 0.01%)</title><rect x="7.0314%" y="869" width="0.0130%" height="15" fill="rgb(252,84,19)" fg:x="5415" fg:w="10"/><text x="7.2814%" y="879.50"></text></g><g><title>bcs::de::Deserializer::parse_string (8 samples, 0.01%)</title><rect x="7.0547%" y="949" width="0.0104%" height="15" fill="rgb(243,152,39)" fg:x="5433" fg:w="8"/><text x="7.3047%" y="959.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (18 samples, 0.02%)</title><rect x="7.0444%" y="1061" width="0.0234%" height="15" fill="rgb(234,160,15)" fg:x="5425" fg:w="18"/><text x="7.2944%" y="1071.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (18 samples, 0.02%)</title><rect x="7.0444%" y="1045" width="0.0234%" height="15" fill="rgb(237,34,20)" fg:x="5425" fg:w="18"/><text x="7.2944%" y="1055.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (14 samples, 0.02%)</title><rect x="7.0496%" y="1029" width="0.0182%" height="15" fill="rgb(229,97,13)" fg:x="5429" fg:w="14"/><text x="7.2996%" y="1039.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (12 samples, 0.02%)</title><rect x="7.0521%" y="1013" width="0.0156%" height="15" fill="rgb(234,71,50)" fg:x="5431" fg:w="12"/><text x="7.3021%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (11 samples, 0.01%)</title><rect x="7.0534%" y="997" width="0.0143%" height="15" fill="rgb(253,155,4)" fg:x="5432" fg:w="11"/><text x="7.3034%" y="1007.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (11 samples, 0.01%)</title><rect x="7.0534%" y="981" width="0.0143%" height="15" fill="rgb(222,185,37)" fg:x="5432" fg:w="11"/><text x="7.3034%" y="991.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (11 samples, 0.01%)</title><rect x="7.0534%" y="965" width="0.0143%" height="15" fill="rgb(251,177,13)" fg:x="5432" fg:w="11"/><text x="7.3034%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (51 samples, 0.07%)</title><rect x="7.0093%" y="1077" width="0.0662%" height="15" fill="rgb(250,179,40)" fg:x="5398" fg:w="51"/><text x="7.2593%" y="1087.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (55 samples, 0.07%)</title><rect x="7.0080%" y="1125" width="0.0714%" height="15" fill="rgb(242,44,2)" fg:x="5397" fg:w="55"/><text x="7.2580%" y="1135.50"></text></g><g><title>serde::de::SeqAccess::next_element (54 samples, 0.07%)</title><rect x="7.0093%" y="1109" width="0.0701%" height="15" fill="rgb(216,177,13)" fg:x="5398" fg:w="54"/><text x="7.2593%" y="1119.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (54 samples, 0.07%)</title><rect x="7.0093%" y="1093" width="0.0701%" height="15" fill="rgb(216,106,43)" fg:x="5398" fg:w="54"/><text x="7.2593%" y="1103.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (60 samples, 0.08%)</title><rect x="7.0028%" y="1221" width="0.0779%" height="15" fill="rgb(216,183,2)" fg:x="5393" fg:w="60"/><text x="7.2528%" y="1231.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (58 samples, 0.08%)</title><rect x="7.0054%" y="1205" width="0.0753%" height="15" fill="rgb(249,75,3)" fg:x="5395" fg:w="58"/><text x="7.2554%" y="1215.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (58 samples, 0.08%)</title><rect x="7.0054%" y="1189" width="0.0753%" height="15" fill="rgb(219,67,39)" fg:x="5395" fg:w="58"/><text x="7.2554%" y="1199.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (58 samples, 0.08%)</title><rect x="7.0054%" y="1173" width="0.0753%" height="15" fill="rgb(253,228,2)" fg:x="5395" fg:w="58"/><text x="7.2554%" y="1183.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (58 samples, 0.08%)</title><rect x="7.0054%" y="1157" width="0.0753%" height="15" fill="rgb(235,138,27)" fg:x="5395" fg:w="58"/><text x="7.2554%" y="1167.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (58 samples, 0.08%)</title><rect x="7.0054%" y="1141" width="0.0753%" height="15" fill="rgb(236,97,51)" fg:x="5395" fg:w="58"/><text x="7.2554%" y="1151.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize (62 samples, 0.08%)</title><rect x="7.0028%" y="1253" width="0.0805%" height="15" fill="rgb(240,80,30)" fg:x="5393" fg:w="62"/><text x="7.2528%" y="1263.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (62 samples, 0.08%)</title><rect x="7.0028%" y="1237" width="0.0805%" height="15" fill="rgb(230,178,19)" fg:x="5393" fg:w="62"/><text x="7.2528%" y="1247.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (64 samples, 0.08%)</title><rect x="7.0015%" y="1285" width="0.0831%" height="15" fill="rgb(210,190,27)" fg:x="5392" fg:w="64"/><text x="7.2515%" y="1295.50"></text></g><g><title>bcs::de::from_bytes (64 samples, 0.08%)</title><rect x="7.0015%" y="1269" width="0.0831%" height="15" fill="rgb(222,107,31)" fg:x="5392" fg:w="64"/><text x="7.2515%" y="1279.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (73 samples, 0.09%)</title><rect x="6.9937%" y="1317" width="0.0948%" height="15" fill="rgb(216,127,34)" fg:x="5386" fg:w="73"/><text x="7.2437%" y="1327.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (70 samples, 0.09%)</title><rect x="6.9976%" y="1301" width="0.0909%" height="15" fill="rgb(234,116,52)" fg:x="5389" fg:w="70"/><text x="7.2476%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.12%)</title><rect x="6.9781%" y="1413" width="0.1234%" height="15" fill="rgb(222,124,15)" fg:x="5374" fg:w="95"/><text x="7.2281%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (95 samples, 0.12%)</title><rect x="6.9781%" y="1397" width="0.1234%" height="15" fill="rgb(231,179,28)" fg:x="5374" fg:w="95"/><text x="7.2281%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (95 samples, 0.12%)</title><rect x="6.9781%" y="1381" width="0.1234%" height="15" fill="rgb(226,93,45)" fg:x="5374" fg:w="95"/><text x="7.2281%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (93 samples, 0.12%)</title><rect x="6.9807%" y="1365" width="0.1208%" height="15" fill="rgb(215,8,51)" fg:x="5376" fg:w="93"/><text x="7.2307%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (88 samples, 0.11%)</title><rect x="6.9872%" y="1349" width="0.1143%" height="15" fill="rgb(223,106,5)" fg:x="5381" fg:w="88"/><text x="7.2372%" y="1359.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (84 samples, 0.11%)</title><rect x="6.9924%" y="1333" width="0.1091%" height="15" fill="rgb(250,191,5)" fg:x="5385" fg:w="84"/><text x="7.2424%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,136 samples, 1.48%)</title><rect x="5.6290%" y="1477" width="1.4751%" height="15" fill="rgb(242,132,44)" fg:x="4335" fg:w="1136"/><text x="5.8790%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,136 samples, 1.48%)</title><rect x="5.6290%" y="1461" width="1.4751%" height="15" fill="rgb(251,152,29)" fg:x="4335" fg:w="1136"/><text x="5.8790%" y="1471.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (97 samples, 0.13%)</title><rect x="6.9781%" y="1445" width="0.1260%" height="15" fill="rgb(218,179,5)" fg:x="5374" fg:w="97"/><text x="7.2281%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (97 samples, 0.13%)</title><rect x="6.9781%" y="1429" width="0.1260%" height="15" fill="rgb(227,67,19)" fg:x="5374" fg:w="97"/><text x="7.2281%" y="1439.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record (1,543 samples, 2.00%)</title><rect x="5.1109%" y="1493" width="2.0036%" height="15" fill="rgb(233,119,31)" fg:x="3936" fg:w="1543"/><text x="5.3609%" y="1503.50">a..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="7.1327%" y="1477" width="0.0104%" height="15" fill="rgb(241,120,22)" fg:x="5493" fg:w="8"/><text x="7.3827%" y="1487.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Add&gt;::add (8 samples, 0.01%)</title><rect x="7.1430%" y="1477" width="0.0104%" height="15" fill="rgb(224,102,30)" fg:x="5501" fg:w="8"/><text x="7.3930%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="7.1612%" y="1397" width="0.0208%" height="15" fill="rgb(210,164,37)" fg:x="5515" fg:w="16"/><text x="7.4112%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="7.1612%" y="1381" width="0.0208%" height="15" fill="rgb(226,191,16)" fg:x="5515" fg:w="16"/><text x="7.4112%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="7.1612%" y="1365" width="0.0208%" height="15" fill="rgb(214,40,45)" fg:x="5515" fg:w="16"/><text x="7.4112%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.01%)</title><rect x="7.1690%" y="1349" width="0.0130%" height="15" fill="rgb(244,29,26)" fg:x="5521" fg:w="10"/><text x="7.4190%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="7.1703%" y="1333" width="0.0117%" height="15" fill="rgb(216,16,5)" fg:x="5522" fg:w="9"/><text x="7.4203%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="7.1872%" y="1301" width="0.0247%" height="15" fill="rgb(249,76,35)" fg:x="5535" fg:w="19"/><text x="7.4372%" y="1311.50"></text></g><g><title>hashbrown::map::make_hash (45 samples, 0.06%)</title><rect x="7.1612%" y="1429" width="0.0584%" height="15" fill="rgb(207,11,44)" fg:x="5515" fg:w="45"/><text x="7.4112%" y="1439.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45 samples, 0.06%)</title><rect x="7.1612%" y="1413" width="0.0584%" height="15" fill="rgb(228,190,49)" fg:x="5515" fg:w="45"/><text x="7.4112%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (26 samples, 0.03%)</title><rect x="7.1859%" y="1397" width="0.0338%" height="15" fill="rgb(214,173,12)" fg:x="5534" fg:w="26"/><text x="7.4359%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (25 samples, 0.03%)</title><rect x="7.1872%" y="1381" width="0.0325%" height="15" fill="rgb(218,26,35)" fg:x="5535" fg:w="25"/><text x="7.4372%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (25 samples, 0.03%)</title><rect x="7.1872%" y="1365" width="0.0325%" height="15" fill="rgb(220,200,19)" fg:x="5535" fg:w="25"/><text x="7.4372%" y="1375.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (25 samples, 0.03%)</title><rect x="7.1872%" y="1349" width="0.0325%" height="15" fill="rgb(239,95,49)" fg:x="5535" fg:w="25"/><text x="7.4372%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (25 samples, 0.03%)</title><rect x="7.1872%" y="1333" width="0.0325%" height="15" fill="rgb(235,85,53)" fg:x="5535" fg:w="25"/><text x="7.4372%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (25 samples, 0.03%)</title><rect x="7.1872%" y="1317" width="0.0325%" height="15" fill="rgb(233,133,31)" fg:x="5535" fg:w="25"/><text x="7.4372%" y="1327.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (36 samples, 0.05%)</title><rect x="7.2300%" y="1365" width="0.0467%" height="15" fill="rgb(218,25,20)" fg:x="5568" fg:w="36"/><text x="7.4800%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (34 samples, 0.04%)</title><rect x="7.2326%" y="1349" width="0.0441%" height="15" fill="rgb(252,210,38)" fg:x="5570" fg:w="34"/><text x="7.4826%" y="1359.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (34 samples, 0.04%)</title><rect x="7.2326%" y="1333" width="0.0441%" height="15" fill="rgb(242,134,21)" fg:x="5570" fg:w="34"/><text x="7.4826%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (34 samples, 0.04%)</title><rect x="7.2326%" y="1317" width="0.0441%" height="15" fill="rgb(213,28,48)" fg:x="5570" fg:w="34"/><text x="7.4826%" y="1327.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (34 samples, 0.04%)</title><rect x="7.2326%" y="1301" width="0.0441%" height="15" fill="rgb(250,196,2)" fg:x="5570" fg:w="34"/><text x="7.4826%" y="1311.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (34 samples, 0.04%)</title><rect x="7.2326%" y="1285" width="0.0441%" height="15" fill="rgb(227,5,17)" fg:x="5570" fg:w="34"/><text x="7.4826%" y="1295.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="7.2443%" y="1269" width="0.0325%" height="15" fill="rgb(221,226,24)" fg:x="5579" fg:w="25"/><text x="7.4943%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (37 samples, 0.05%)</title><rect x="7.2300%" y="1381" width="0.0480%" height="15" fill="rgb(211,5,48)" fg:x="5568" fg:w="37"/><text x="7.4800%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (106 samples, 0.14%)</title><rect x="7.1534%" y="1477" width="0.1376%" height="15" fill="rgb(219,150,6)" fg:x="5509" fg:w="106"/><text x="7.4034%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (106 samples, 0.14%)</title><rect x="7.1534%" y="1461" width="0.1376%" height="15" fill="rgb(251,46,16)" fg:x="5509" fg:w="106"/><text x="7.4034%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (106 samples, 0.14%)</title><rect x="7.1534%" y="1445" width="0.1376%" height="15" fill="rgb(220,204,40)" fg:x="5509" fg:w="106"/><text x="7.4034%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (55 samples, 0.07%)</title><rect x="7.2197%" y="1429" width="0.0714%" height="15" fill="rgb(211,85,2)" fg:x="5560" fg:w="55"/><text x="7.4697%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (55 samples, 0.07%)</title><rect x="7.2197%" y="1413" width="0.0714%" height="15" fill="rgb(229,17,7)" fg:x="5560" fg:w="55"/><text x="7.4697%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (55 samples, 0.07%)</title><rect x="7.2197%" y="1397" width="0.0714%" height="15" fill="rgb(239,72,28)" fg:x="5560" fg:w="55"/><text x="7.4697%" y="1407.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%)</title><rect x="7.2807%" y="1381" width="0.0104%" height="15" fill="rgb(230,47,54)" fg:x="5607" fg:w="8"/><text x="7.5307%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.01%)</title><rect x="7.2807%" y="1365" width="0.0104%" height="15" fill="rgb(214,50,8)" fg:x="5607" fg:w="8"/><text x="7.5307%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="7.2807%" y="1349" width="0.0104%" height="15" fill="rgb(216,198,43)" fg:x="5607" fg:w="8"/><text x="7.5307%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.01%)</title><rect x="7.2950%" y="1445" width="0.0117%" height="15" fill="rgb(234,20,35)" fg:x="5618" fg:w="9"/><text x="7.5450%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="7.2950%" y="1429" width="0.0117%" height="15" fill="rgb(254,45,19)" fg:x="5618" fg:w="9"/><text x="7.5450%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="7.2950%" y="1413" width="0.0117%" height="15" fill="rgb(219,14,44)" fg:x="5618" fg:w="9"/><text x="7.5450%" y="1423.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="7.2950%" y="1397" width="0.0117%" height="15" fill="rgb(217,220,26)" fg:x="5618" fg:w="9"/><text x="7.5450%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="7.2950%" y="1381" width="0.0117%" height="15" fill="rgb(213,158,28)" fg:x="5618" fg:w="9"/><text x="7.5450%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="7.2950%" y="1365" width="0.0117%" height="15" fill="rgb(252,51,52)" fg:x="5618" fg:w="9"/><text x="7.5450%" y="1375.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="7.2963%" y="1349" width="0.0104%" height="15" fill="rgb(246,89,16)" fg:x="5619" fg:w="8"/><text x="7.5463%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="7.3080%" y="1413" width="0.0143%" height="15" fill="rgb(216,158,49)" fg:x="5628" fg:w="11"/><text x="7.5580%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="7.3080%" y="1397" width="0.0143%" height="15" fill="rgb(236,107,19)" fg:x="5628" fg:w="11"/><text x="7.5580%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="7.3080%" y="1381" width="0.0143%" height="15" fill="rgb(228,185,30)" fg:x="5628" fg:w="11"/><text x="7.5580%" y="1391.50"></text></g><g><title>hashbrown::map::make_insert_hash (22 samples, 0.03%)</title><rect x="7.3067%" y="1445" width="0.0286%" height="15" fill="rgb(246,134,8)" fg:x="5627" fg:w="22"/><text x="7.5567%" y="1455.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.03%)</title><rect x="7.3067%" y="1429" width="0.0286%" height="15" fill="rgb(214,143,50)" fg:x="5627" fg:w="22"/><text x="7.5567%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.01%)</title><rect x="7.3235%" y="1413" width="0.0117%" height="15" fill="rgb(228,75,8)" fg:x="5640" fg:w="9"/><text x="7.5735%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.02%)</title><rect x="7.3417%" y="1397" width="0.0195%" height="15" fill="rgb(207,175,4)" fg:x="5654" fg:w="15"/><text x="7.5917%" y="1407.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (15 samples, 0.02%)</title><rect x="7.3417%" y="1381" width="0.0195%" height="15" fill="rgb(205,108,24)" fg:x="5654" fg:w="15"/><text x="7.5917%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (15 samples, 0.02%)</title><rect x="7.3417%" y="1365" width="0.0195%" height="15" fill="rgb(244,120,49)" fg:x="5654" fg:w="15"/><text x="7.5917%" y="1375.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (15 samples, 0.02%)</title><rect x="7.3417%" y="1349" width="0.0195%" height="15" fill="rgb(223,47,38)" fg:x="5654" fg:w="15"/><text x="7.5917%" y="1359.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (15 samples, 0.02%)</title><rect x="7.3417%" y="1333" width="0.0195%" height="15" fill="rgb(229,179,11)" fg:x="5654" fg:w="15"/><text x="7.5917%" y="1343.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (15 samples, 0.02%)</title><rect x="7.3417%" y="1317" width="0.0195%" height="15" fill="rgb(231,122,1)" fg:x="5654" fg:w="15"/><text x="7.5917%" y="1327.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (15 samples, 0.02%)</title><rect x="7.3417%" y="1301" width="0.0195%" height="15" fill="rgb(245,119,9)" fg:x="5654" fg:w="15"/><text x="7.5917%" y="1311.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="7.3430%" y="1285" width="0.0182%" height="15" fill="rgb(241,163,25)" fg:x="5655" fg:w="14"/><text x="7.5930%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (58 samples, 0.08%)</title><rect x="7.2911%" y="1477" width="0.0753%" height="15" fill="rgb(217,214,3)" fg:x="5615" fg:w="58"/><text x="7.5411%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (57 samples, 0.07%)</title><rect x="7.2924%" y="1461" width="0.0740%" height="15" fill="rgb(240,86,28)" fg:x="5616" fg:w="57"/><text x="7.5424%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (24 samples, 0.03%)</title><rect x="7.3352%" y="1445" width="0.0312%" height="15" fill="rgb(215,47,9)" fg:x="5649" fg:w="24"/><text x="7.5852%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (24 samples, 0.03%)</title><rect x="7.3352%" y="1429" width="0.0312%" height="15" fill="rgb(252,25,45)" fg:x="5649" fg:w="24"/><text x="7.5852%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (24 samples, 0.03%)</title><rect x="7.3352%" y="1413" width="0.0312%" height="15" fill="rgb(251,164,9)" fg:x="5649" fg:w="24"/><text x="7.5852%" y="1423.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (247 samples, 0.32%)</title><rect x="7.1145%" y="1493" width="0.3207%" height="15" fill="rgb(233,194,0)" fg:x="5479" fg:w="247"/><text x="7.3645%" y="1503.50"></text></g><g><title>std::time::Instant::elapsed (53 samples, 0.07%)</title><rect x="7.3664%" y="1477" width="0.0688%" height="15" fill="rgb(249,111,24)" fg:x="5673" fg:w="53"/><text x="7.6164%" y="1487.50"></text></g><g><title>std::time::Instant::now (45 samples, 0.06%)</title><rect x="7.3768%" y="1461" width="0.0584%" height="15" fill="rgb(250,223,3)" fg:x="5681" fg:w="45"/><text x="7.6268%" y="1471.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (45 samples, 0.06%)</title><rect x="7.3768%" y="1445" width="0.0584%" height="15" fill="rgb(236,178,37)" fg:x="5681" fg:w="45"/><text x="7.6268%" y="1455.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (45 samples, 0.06%)</title><rect x="7.3768%" y="1429" width="0.0584%" height="15" fill="rgb(241,158,50)" fg:x="5681" fg:w="45"/><text x="7.6268%" y="1439.50"></text></g><g><title>clock_gettime (42 samples, 0.05%)</title><rect x="7.3807%" y="1413" width="0.0545%" height="15" fill="rgb(213,121,41)" fg:x="5684" fg:w="42"/><text x="7.6307%" y="1423.50"></text></g><g><title>__vdso_clock_gettime (38 samples, 0.05%)</title><rect x="7.3859%" y="1397" width="0.0493%" height="15" fill="rgb(240,92,3)" fg:x="5688" fg:w="38"/><text x="7.6359%" y="1407.50"></text></g><g><title>[[vdso]] (24 samples, 0.03%)</title><rect x="7.4040%" y="1381" width="0.0312%" height="15" fill="rgb(205,123,3)" fg:x="5702" fg:w="24"/><text x="7.6540%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="7.4586%" y="1381" width="0.0130%" height="15" fill="rgb(205,97,47)" fg:x="5744" fg:w="10"/><text x="7.7086%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="7.4586%" y="1365" width="0.0130%" height="15" fill="rgb(247,152,14)" fg:x="5744" fg:w="10"/><text x="7.7086%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="7.4586%" y="1349" width="0.0130%" height="15" fill="rgb(248,195,53)" fg:x="5744" fg:w="10"/><text x="7.7086%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="7.4716%" y="1285" width="0.0195%" height="15" fill="rgb(226,201,16)" fg:x="5754" fg:w="15"/><text x="7.7216%" y="1295.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.04%)</title><rect x="7.4560%" y="1413" width="0.0377%" height="15" fill="rgb(205,98,0)" fg:x="5742" fg:w="29"/><text x="7.7060%" y="1423.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.04%)</title><rect x="7.4573%" y="1397" width="0.0364%" height="15" fill="rgb(214,191,48)" fg:x="5743" fg:w="28"/><text x="7.7073%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="7.4716%" y="1381" width="0.0221%" height="15" fill="rgb(237,112,39)" fg:x="5754" fg:w="17"/><text x="7.7216%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="7.4716%" y="1365" width="0.0221%" height="15" fill="rgb(247,203,27)" fg:x="5754" fg:w="17"/><text x="7.7216%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.02%)</title><rect x="7.4716%" y="1349" width="0.0221%" height="15" fill="rgb(235,124,28)" fg:x="5754" fg:w="17"/><text x="7.7216%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (17 samples, 0.02%)</title><rect x="7.4716%" y="1333" width="0.0221%" height="15" fill="rgb(208,207,46)" fg:x="5754" fg:w="17"/><text x="7.7216%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (17 samples, 0.02%)</title><rect x="7.4716%" y="1317" width="0.0221%" height="15" fill="rgb(234,176,4)" fg:x="5754" fg:w="17"/><text x="7.7216%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (17 samples, 0.02%)</title><rect x="7.4716%" y="1301" width="0.0221%" height="15" fill="rgb(230,133,28)" fg:x="5754" fg:w="17"/><text x="7.7216%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (27 samples, 0.04%)</title><rect x="7.4988%" y="1365" width="0.0351%" height="15" fill="rgb(211,137,40)" fg:x="5775" fg:w="27"/><text x="7.7488%" y="1375.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (27 samples, 0.04%)</title><rect x="7.4988%" y="1349" width="0.0351%" height="15" fill="rgb(254,35,13)" fg:x="5775" fg:w="27"/><text x="7.7488%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (27 samples, 0.04%)</title><rect x="7.4988%" y="1333" width="0.0351%" height="15" fill="rgb(225,49,51)" fg:x="5775" fg:w="27"/><text x="7.7488%" y="1343.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (27 samples, 0.04%)</title><rect x="7.4988%" y="1317" width="0.0351%" height="15" fill="rgb(251,10,15)" fg:x="5775" fg:w="27"/><text x="7.7488%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (27 samples, 0.04%)</title><rect x="7.4988%" y="1301" width="0.0351%" height="15" fill="rgb(228,207,15)" fg:x="5775" fg:w="27"/><text x="7.7488%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (27 samples, 0.04%)</title><rect x="7.4988%" y="1285" width="0.0351%" height="15" fill="rgb(241,99,19)" fg:x="5775" fg:w="27"/><text x="7.7488%" y="1295.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (27 samples, 0.04%)</title><rect x="7.4988%" y="1269" width="0.0351%" height="15" fill="rgb(207,104,49)" fg:x="5775" fg:w="27"/><text x="7.7488%" y="1279.50"></text></g><g><title>[libc.so.6] (15 samples, 0.02%)</title><rect x="7.5144%" y="1253" width="0.0195%" height="15" fill="rgb(234,99,18)" fg:x="5787" fg:w="15"/><text x="7.7644%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (65 samples, 0.08%)</title><rect x="7.4534%" y="1461" width="0.0844%" height="15" fill="rgb(213,191,49)" fg:x="5740" fg:w="65"/><text x="7.7034%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (65 samples, 0.08%)</title><rect x="7.4534%" y="1445" width="0.0844%" height="15" fill="rgb(210,226,19)" fg:x="5740" fg:w="65"/><text x="7.7034%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (65 samples, 0.08%)</title><rect x="7.4534%" y="1429" width="0.0844%" height="15" fill="rgb(229,97,18)" fg:x="5740" fg:w="65"/><text x="7.7034%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (34 samples, 0.04%)</title><rect x="7.4936%" y="1413" width="0.0441%" height="15" fill="rgb(211,167,15)" fg:x="5771" fg:w="34"/><text x="7.7436%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.04%)</title><rect x="7.4936%" y="1397" width="0.0441%" height="15" fill="rgb(210,169,34)" fg:x="5771" fg:w="34"/><text x="7.7436%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (34 samples, 0.04%)</title><rect x="7.4936%" y="1381" width="0.0441%" height="15" fill="rgb(241,121,31)" fg:x="5771" fg:w="34"/><text x="7.7436%" y="1391.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (66 samples, 0.09%)</title><rect x="7.4534%" y="1477" width="0.0857%" height="15" fill="rgb(232,40,11)" fg:x="5740" fg:w="66"/><text x="7.7034%" y="1487.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.01%)</title><rect x="7.5495%" y="1445" width="0.0117%" height="15" fill="rgb(205,86,26)" fg:x="5814" fg:w="9"/><text x="7.7995%" y="1455.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="7.5495%" y="1429" width="0.0117%" height="15" fill="rgb(231,126,28)" fg:x="5814" fg:w="9"/><text x="7.7995%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (34 samples, 0.04%)</title><rect x="7.5638%" y="1397" width="0.0441%" height="15" fill="rgb(219,221,18)" fg:x="5825" fg:w="34"/><text x="7.8138%" y="1407.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (34 samples, 0.04%)</title><rect x="7.5638%" y="1381" width="0.0441%" height="15" fill="rgb(211,40,0)" fg:x="5825" fg:w="34"/><text x="7.8138%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (34 samples, 0.04%)</title><rect x="7.5638%" y="1365" width="0.0441%" height="15" fill="rgb(239,85,43)" fg:x="5825" fg:w="34"/><text x="7.8138%" y="1375.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (34 samples, 0.04%)</title><rect x="7.5638%" y="1349" width="0.0441%" height="15" fill="rgb(231,55,21)" fg:x="5825" fg:w="34"/><text x="7.8138%" y="1359.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (34 samples, 0.04%)</title><rect x="7.5638%" y="1333" width="0.0441%" height="15" fill="rgb(225,184,43)" fg:x="5825" fg:w="34"/><text x="7.8138%" y="1343.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (34 samples, 0.04%)</title><rect x="7.5638%" y="1317" width="0.0441%" height="15" fill="rgb(251,158,41)" fg:x="5825" fg:w="34"/><text x="7.8138%" y="1327.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (34 samples, 0.04%)</title><rect x="7.5638%" y="1301" width="0.0441%" height="15" fill="rgb(234,159,37)" fg:x="5825" fg:w="34"/><text x="7.8138%" y="1311.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="7.5741%" y="1285" width="0.0338%" height="15" fill="rgb(216,204,22)" fg:x="5833" fg:w="26"/><text x="7.8241%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (58 samples, 0.08%)</title><rect x="7.5391%" y="1477" width="0.0753%" height="15" fill="rgb(214,17,3)" fg:x="5806" fg:w="58"/><text x="7.7891%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (57 samples, 0.07%)</title><rect x="7.5404%" y="1461" width="0.0740%" height="15" fill="rgb(212,111,17)" fg:x="5807" fg:w="57"/><text x="7.7904%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (41 samples, 0.05%)</title><rect x="7.5612%" y="1445" width="0.0532%" height="15" fill="rgb(221,157,24)" fg:x="5823" fg:w="41"/><text x="7.8112%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.05%)</title><rect x="7.5612%" y="1429" width="0.0532%" height="15" fill="rgb(252,16,13)" fg:x="5823" fg:w="41"/><text x="7.8112%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (41 samples, 0.05%)</title><rect x="7.5612%" y="1413" width="0.0532%" height="15" fill="rgb(221,62,2)" fg:x="5823" fg:w="41"/><text x="7.8112%" y="1423.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (161 samples, 0.21%)</title><rect x="7.4352%" y="1493" width="0.2091%" height="15" fill="rgb(247,87,22)" fg:x="5726" fg:w="161"/><text x="7.6852%" y="1503.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (23 samples, 0.03%)</title><rect x="7.6144%" y="1477" width="0.0299%" height="15" fill="rgb(215,73,9)" fg:x="5864" fg:w="23"/><text x="7.8644%" y="1487.50"></text></g><g><title>clock_gettime (22 samples, 0.03%)</title><rect x="7.6157%" y="1461" width="0.0286%" height="15" fill="rgb(207,175,33)" fg:x="5865" fg:w="22"/><text x="7.8657%" y="1471.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.02%)</title><rect x="7.6196%" y="1445" width="0.0247%" height="15" fill="rgb(243,129,54)" fg:x="5868" fg:w="19"/><text x="7.8696%" y="1455.50"></text></g><g><title>[[vdso]] (18 samples, 0.02%)</title><rect x="7.6209%" y="1429" width="0.0234%" height="15" fill="rgb(227,119,45)" fg:x="5869" fg:w="18"/><text x="7.8709%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (20 samples, 0.03%)</title><rect x="7.6443%" y="1493" width="0.0260%" height="15" fill="rgb(205,109,36)" fg:x="5887" fg:w="20"/><text x="7.8943%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.03%)</title><rect x="7.6443%" y="1477" width="0.0260%" height="15" fill="rgb(205,6,39)" fg:x="5887" fg:w="20"/><text x="7.8943%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.03%)</title><rect x="7.6443%" y="1461" width="0.0260%" height="15" fill="rgb(221,32,16)" fg:x="5887" fg:w="20"/><text x="7.8943%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="7.6443%" y="1445" width="0.0260%" height="15" fill="rgb(228,144,50)" fg:x="5887" fg:w="20"/><text x="7.8943%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="7.6443%" y="1429" width="0.0260%" height="15" fill="rgb(229,201,53)" fg:x="5887" fg:w="20"/><text x="7.8943%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.03%)</title><rect x="7.6443%" y="1413" width="0.0260%" height="15" fill="rgb(249,153,27)" fg:x="5887" fg:w="20"/><text x="7.8943%" y="1423.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="7.6482%" y="1397" width="0.0221%" height="15" fill="rgb(227,106,25)" fg:x="5890" fg:w="17"/><text x="7.8982%" y="1407.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="7.6585%" y="1381" width="0.0117%" height="15" fill="rgb(230,65,29)" fg:x="5898" fg:w="9"/><text x="7.9085%" y="1391.50"></text></g><g><title>prometheus::histogram::Histogram::observe (15 samples, 0.02%)</title><rect x="7.6780%" y="1445" width="0.0195%" height="15" fill="rgb(221,57,46)" fg:x="5913" fg:w="15"/><text x="7.9280%" y="1455.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (15 samples, 0.02%)</title><rect x="7.6780%" y="1429" width="0.0195%" height="15" fill="rgb(229,161,17)" fg:x="5913" fg:w="15"/><text x="7.9280%" y="1439.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (12 samples, 0.02%)</title><rect x="7.7001%" y="1413" width="0.0156%" height="15" fill="rgb(222,213,11)" fg:x="5930" fg:w="12"/><text x="7.9501%" y="1423.50"></text></g><g><title>clock_gettime (12 samples, 0.02%)</title><rect x="7.7001%" y="1397" width="0.0156%" height="15" fill="rgb(235,35,13)" fg:x="5930" fg:w="12"/><text x="7.9501%" y="1407.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.01%)</title><rect x="7.7014%" y="1381" width="0.0143%" height="15" fill="rgb(233,158,34)" fg:x="5931" fg:w="11"/><text x="7.9514%" y="1391.50"></text></g><g><title>[[vdso]] (11 samples, 0.01%)</title><rect x="7.7014%" y="1365" width="0.0143%" height="15" fill="rgb(215,151,48)" fg:x="5931" fg:w="11"/><text x="7.9514%" y="1375.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (17 samples, 0.02%)</title><rect x="7.6975%" y="1429" width="0.0221%" height="15" fill="rgb(229,84,14)" fg:x="5928" fg:w="17"/><text x="7.9475%" y="1439.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (38 samples, 0.05%)</title><rect x="7.6754%" y="1477" width="0.0493%" height="15" fill="rgb(229,68,14)" fg:x="5911" fg:w="38"/><text x="7.9254%" y="1487.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (36 samples, 0.05%)</title><rect x="7.6780%" y="1461" width="0.0467%" height="15" fill="rgb(243,106,26)" fg:x="5913" fg:w="36"/><text x="7.9280%" y="1471.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (21 samples, 0.03%)</title><rect x="7.6975%" y="1445" width="0.0273%" height="15" fill="rgb(206,45,38)" fg:x="5928" fg:w="21"/><text x="7.9475%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (43 samples, 0.06%)</title><rect x="7.6702%" y="1493" width="0.0558%" height="15" fill="rgb(226,6,15)" fg:x="5907" fg:w="43"/><text x="7.9202%" y="1503.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (11 samples, 0.01%)</title><rect x="7.7352%" y="1493" width="0.0143%" height="15" fill="rgb(232,22,54)" fg:x="5957" fg:w="11"/><text x="7.9852%" y="1503.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (3,596 samples, 4.67%)</title><rect x="3.0904%" y="1509" width="4.6694%" height="15" fill="rgb(229,222,32)" fg:x="2380" fg:w="3596"/><text x="3.3404%" y="1519.50">aptos..</text></g><g><title>syscall (8 samples, 0.01%)</title><rect x="7.7494%" y="1493" width="0.0104%" height="15" fill="rgb(228,62,29)" fg:x="5968" fg:w="8"/><text x="7.9994%" y="1503.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="7.7494%" y="1477" width="0.0104%" height="15" fill="rgb(251,103,34)" fg:x="5968" fg:w="8"/><text x="7.9994%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (10 samples, 0.01%)</title><rect x="7.8144%" y="1445" width="0.0130%" height="15" fill="rgb(233,12,30)" fg:x="6018" fg:w="10"/><text x="8.0644%" y="1455.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_back_checked (10 samples, 0.01%)</title><rect x="7.8144%" y="1429" width="0.0130%" height="15" fill="rgb(238,52,0)" fg:x="6018" fg:w="10"/><text x="8.0644%" y="1439.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_back_checked (9 samples, 0.01%)</title><rect x="7.8157%" y="1413" width="0.0117%" height="15" fill="rgb(223,98,5)" fg:x="6019" fg:w="9"/><text x="8.0657%" y="1423.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_lower_bound_edge (15 samples, 0.02%)</title><rect x="7.8533%" y="1397" width="0.0195%" height="15" fill="rgb(228,75,37)" fg:x="6048" fg:w="15"/><text x="8.1033%" y="1407.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (15 samples, 0.02%)</title><rect x="7.8533%" y="1381" width="0.0195%" height="15" fill="rgb(205,115,49)" fg:x="6048" fg:w="15"/><text x="8.1033%" y="1391.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.02%)</title><rect x="7.8533%" y="1365" width="0.0195%" height="15" fill="rgb(250,154,43)" fg:x="6048" fg:w="15"/><text x="8.1033%" y="1375.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (13 samples, 0.02%)</title><rect x="7.8728%" y="1397" width="0.0169%" height="15" fill="rgb(226,43,29)" fg:x="6063" fg:w="13"/><text x="8.1228%" y="1407.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (13 samples, 0.02%)</title><rect x="7.8728%" y="1381" width="0.0169%" height="15" fill="rgb(249,228,39)" fg:x="6063" fg:w="13"/><text x="8.1228%" y="1391.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.02%)</title><rect x="7.8728%" y="1365" width="0.0169%" height="15" fill="rgb(216,79,43)" fg:x="6063" fg:w="13"/><text x="8.1228%" y="1375.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (53 samples, 0.07%)</title><rect x="7.8274%" y="1445" width="0.0688%" height="15" fill="rgb(228,95,12)" fg:x="6028" fg:w="53"/><text x="8.0774%" y="1455.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (49 samples, 0.06%)</title><rect x="7.8325%" y="1429" width="0.0636%" height="15" fill="rgb(249,221,15)" fg:x="6032" fg:w="49"/><text x="8.0825%" y="1439.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (47 samples, 0.06%)</title><rect x="7.8351%" y="1413" width="0.0610%" height="15" fill="rgb(233,34,13)" fg:x="6034" fg:w="47"/><text x="8.0851%" y="1423.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (53 samples, 0.07%)</title><rect x="7.9040%" y="1413" width="0.0688%" height="15" fill="rgb(214,103,39)" fg:x="6087" fg:w="53"/><text x="8.1540%" y="1423.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (51 samples, 0.07%)</title><rect x="7.9066%" y="1397" width="0.0662%" height="15" fill="rgb(251,126,39)" fg:x="6089" fg:w="51"/><text x="8.1566%" y="1407.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (51 samples, 0.07%)</title><rect x="7.9066%" y="1381" width="0.0662%" height="15" fill="rgb(214,216,36)" fg:x="6089" fg:w="51"/><text x="8.1566%" y="1391.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (36 samples, 0.05%)</title><rect x="7.9260%" y="1365" width="0.0467%" height="15" fill="rgb(220,221,8)" fg:x="6104" fg:w="36"/><text x="8.1760%" y="1375.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (35 samples, 0.05%)</title><rect x="7.9273%" y="1349" width="0.0454%" height="15" fill="rgb(240,216,3)" fg:x="6105" fg:w="35"/><text x="8.1773%" y="1359.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (35 samples, 0.05%)</title><rect x="7.9273%" y="1333" width="0.0454%" height="15" fill="rgb(232,218,17)" fg:x="6105" fg:w="35"/><text x="8.1773%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="7.9806%" y="1397" width="0.0221%" height="15" fill="rgb(229,163,45)" fg:x="6146" fg:w="17"/><text x="8.2306%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="7.9806%" y="1381" width="0.0221%" height="15" fill="rgb(231,110,42)" fg:x="6146" fg:w="17"/><text x="8.2306%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="7.9806%" y="1365" width="0.0221%" height="15" fill="rgb(208,170,48)" fg:x="6146" fg:w="17"/><text x="8.2306%" y="1375.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="8.0195%" y="1269" width="0.0182%" height="15" fill="rgb(239,116,25)" fg:x="6176" fg:w="14"/><text x="8.2695%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="8.0195%" y="1253" width="0.0182%" height="15" fill="rgb(219,200,50)" fg:x="6176" fg:w="14"/><text x="8.2695%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="8.0195%" y="1237" width="0.0182%" height="15" fill="rgb(245,200,0)" fg:x="6176" fg:w="14"/><text x="8.2695%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (15 samples, 0.02%)</title><rect x="8.0195%" y="1301" width="0.0195%" height="15" fill="rgb(245,119,33)" fg:x="6176" fg:w="15"/><text x="8.2695%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_usize (15 samples, 0.02%)</title><rect x="8.0195%" y="1285" width="0.0195%" height="15" fill="rgb(231,125,12)" fg:x="6176" fg:w="15"/><text x="8.2695%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (16 samples, 0.02%)</title><rect x="8.0195%" y="1333" width="0.0208%" height="15" fill="rgb(216,96,41)" fg:x="6176" fg:w="16"/><text x="8.2695%" y="1343.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (16 samples, 0.02%)</title><rect x="8.0195%" y="1317" width="0.0208%" height="15" fill="rgb(248,43,45)" fg:x="6176" fg:w="16"/><text x="8.2695%" y="1327.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (42 samples, 0.05%)</title><rect x="8.0195%" y="1349" width="0.0545%" height="15" fill="rgb(217,222,7)" fg:x="6176" fg:w="42"/><text x="8.2695%" y="1359.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (26 samples, 0.03%)</title><rect x="8.0403%" y="1333" width="0.0338%" height="15" fill="rgb(233,28,6)" fg:x="6192" fg:w="26"/><text x="8.2903%" y="1343.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (26 samples, 0.03%)</title><rect x="8.0403%" y="1317" width="0.0338%" height="15" fill="rgb(231,218,15)" fg:x="6192" fg:w="26"/><text x="8.2903%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (26 samples, 0.03%)</title><rect x="8.0403%" y="1301" width="0.0338%" height="15" fill="rgb(226,171,48)" fg:x="6192" fg:w="26"/><text x="8.2903%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="8.0494%" y="1285" width="0.0247%" height="15" fill="rgb(235,201,9)" fg:x="6199" fg:w="19"/><text x="8.2994%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="8.0494%" y="1269" width="0.0247%" height="15" fill="rgb(217,80,15)" fg:x="6199" fg:w="19"/><text x="8.2994%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="8.0520%" y="1253" width="0.0221%" height="15" fill="rgb(219,152,8)" fg:x="6201" fg:w="17"/><text x="8.3020%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="8.0520%" y="1237" width="0.0221%" height="15" fill="rgb(243,107,38)" fg:x="6201" fg:w="17"/><text x="8.3020%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="8.0598%" y="1221" width="0.0143%" height="15" fill="rgb(231,17,5)" fg:x="6207" fg:w="11"/><text x="8.3098%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="8.0845%" y="1301" width="0.0156%" height="15" fill="rgb(209,25,54)" fg:x="6226" fg:w="12"/><text x="8.3345%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="8.0845%" y="1285" width="0.0156%" height="15" fill="rgb(219,0,2)" fg:x="6226" fg:w="12"/><text x="8.3345%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="8.0845%" y="1269" width="0.0156%" height="15" fill="rgb(246,9,5)" fg:x="6226" fg:w="12"/><text x="8.3345%" y="1279.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (73 samples, 0.09%)</title><rect x="8.0104%" y="1381" width="0.0948%" height="15" fill="rgb(226,159,4)" fg:x="6169" fg:w="73"/><text x="8.2604%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (69 samples, 0.09%)</title><rect x="8.0156%" y="1365" width="0.0896%" height="15" fill="rgb(219,175,34)" fg:x="6173" fg:w="69"/><text x="8.2656%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (17 samples, 0.02%)</title><rect x="8.0832%" y="1349" width="0.0221%" height="15" fill="rgb(236,10,46)" fg:x="6225" fg:w="17"/><text x="8.3332%" y="1359.50"></text></g><g><title>core::hash::Hasher::write_isize (17 samples, 0.02%)</title><rect x="8.0832%" y="1333" width="0.0221%" height="15" fill="rgb(240,211,16)" fg:x="6225" fg:w="17"/><text x="8.3332%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_usize (17 samples, 0.02%)</title><rect x="8.0832%" y="1317" width="0.0221%" height="15" fill="rgb(205,3,43)" fg:x="6225" fg:w="17"/><text x="8.3332%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (26 samples, 0.03%)</title><rect x="8.1753%" y="1317" width="0.0338%" height="15" fill="rgb(245,7,22)" fg:x="6296" fg:w="26"/><text x="8.4253%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (75 samples, 0.10%)</title><rect x="8.1143%" y="1333" width="0.0974%" height="15" fill="rgb(239,132,32)" fg:x="6249" fg:w="75"/><text x="8.3643%" y="1343.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (182 samples, 0.24%)</title><rect x="7.9806%" y="1413" width="0.2363%" height="15" fill="rgb(228,202,34)" fg:x="6146" fg:w="182"/><text x="8.2306%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (159 samples, 0.21%)</title><rect x="8.0104%" y="1397" width="0.2065%" height="15" fill="rgb(254,200,22)" fg:x="6169" fg:w="159"/><text x="8.2604%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (86 samples, 0.11%)</title><rect x="8.1052%" y="1381" width="0.1117%" height="15" fill="rgb(219,10,39)" fg:x="6242" fg:w="86"/><text x="8.3552%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (85 samples, 0.11%)</title><rect x="8.1065%" y="1365" width="0.1104%" height="15" fill="rgb(226,210,39)" fg:x="6243" fg:w="85"/><text x="8.3565%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (85 samples, 0.11%)</title><rect x="8.1065%" y="1349" width="0.1104%" height="15" fill="rgb(208,219,16)" fg:x="6243" fg:w="85"/><text x="8.3565%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="8.2312%" y="1253" width="0.0130%" height="15" fill="rgb(216,158,51)" fg:x="6339" fg:w="10"/><text x="8.4812%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="8.2325%" y="1237" width="0.0117%" height="15" fill="rgb(233,14,44)" fg:x="6340" fg:w="9"/><text x="8.4825%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="8.2325%" y="1221" width="0.0117%" height="15" fill="rgb(237,97,39)" fg:x="6340" fg:w="9"/><text x="8.4825%" y="1231.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (11 samples, 0.01%)</title><rect x="8.2312%" y="1285" width="0.0143%" height="15" fill="rgb(218,198,43)" fg:x="6339" fg:w="11"/><text x="8.4812%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.01%)</title><rect x="8.2312%" y="1269" width="0.0143%" height="15" fill="rgb(231,104,20)" fg:x="6339" fg:w="11"/><text x="8.4812%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="8.2312%" y="1317" width="0.0169%" height="15" fill="rgb(254,36,13)" fg:x="6339" fg:w="13"/><text x="8.4812%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.02%)</title><rect x="8.2312%" y="1301" width="0.0169%" height="15" fill="rgb(248,14,50)" fg:x="6339" fg:w="13"/><text x="8.4812%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (10 samples, 0.01%)</title><rect x="8.2481%" y="1269" width="0.0130%" height="15" fill="rgb(217,107,29)" fg:x="6352" fg:w="10"/><text x="8.4981%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.01%)</title><rect x="8.2481%" y="1253" width="0.0130%" height="15" fill="rgb(251,169,33)" fg:x="6352" fg:w="10"/><text x="8.4981%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="8.2494%" y="1237" width="0.0117%" height="15" fill="rgb(217,108,32)" fg:x="6353" fg:w="9"/><text x="8.4994%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="8.2494%" y="1221" width="0.0117%" height="15" fill="rgb(219,66,42)" fg:x="6353" fg:w="9"/><text x="8.4994%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="8.2494%" y="1205" width="0.0117%" height="15" fill="rgb(206,180,7)" fg:x="6353" fg:w="9"/><text x="8.4994%" y="1215.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.02%)</title><rect x="8.2740%" y="1189" width="0.0195%" height="15" fill="rgb(208,226,31)" fg:x="6372" fg:w="15"/><text x="8.5240%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.03%)</title><rect x="8.2714%" y="1205" width="0.0273%" height="15" fill="rgb(218,26,49)" fg:x="6370" fg:w="21"/><text x="8.5214%" y="1215.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (53 samples, 0.07%)</title><rect x="8.2312%" y="1333" width="0.0688%" height="15" fill="rgb(233,197,48)" fg:x="6339" fg:w="53"/><text x="8.4812%" y="1343.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (40 samples, 0.05%)</title><rect x="8.2481%" y="1317" width="0.0519%" height="15" fill="rgb(252,181,51)" fg:x="6352" fg:w="40"/><text x="8.4981%" y="1327.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (40 samples, 0.05%)</title><rect x="8.2481%" y="1301" width="0.0519%" height="15" fill="rgb(253,90,19)" fg:x="6352" fg:w="40"/><text x="8.4981%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (40 samples, 0.05%)</title><rect x="8.2481%" y="1285" width="0.0519%" height="15" fill="rgb(215,171,30)" fg:x="6352" fg:w="40"/><text x="8.4981%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (30 samples, 0.04%)</title><rect x="8.2611%" y="1269" width="0.0390%" height="15" fill="rgb(214,222,9)" fg:x="6362" fg:w="30"/><text x="8.5111%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="8.2611%" y="1253" width="0.0390%" height="15" fill="rgb(223,3,22)" fg:x="6362" fg:w="30"/><text x="8.5111%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.04%)</title><rect x="8.2636%" y="1237" width="0.0364%" height="15" fill="rgb(225,196,46)" fg:x="6364" fg:w="28"/><text x="8.5136%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.04%)</title><rect x="8.2636%" y="1221" width="0.0364%" height="15" fill="rgb(209,110,37)" fg:x="6364" fg:w="28"/><text x="8.5136%" y="1231.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (67 samples, 0.09%)</title><rect x="8.2260%" y="1365" width="0.0870%" height="15" fill="rgb(249,89,12)" fg:x="6335" fg:w="67"/><text x="8.4760%" y="1375.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (63 samples, 0.08%)</title><rect x="8.2312%" y="1349" width="0.0818%" height="15" fill="rgb(226,27,33)" fg:x="6339" fg:w="63"/><text x="8.4812%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.02%)</title><rect x="8.3286%" y="1301" width="0.0195%" height="15" fill="rgb(213,82,22)" fg:x="6414" fg:w="15"/><text x="8.5786%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.04%)</title><rect x="8.3130%" y="1365" width="0.0377%" height="15" fill="rgb(248,140,0)" fg:x="6402" fg:w="29"/><text x="8.5630%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.04%)</title><rect x="8.3130%" y="1349" width="0.0377%" height="15" fill="rgb(228,106,3)" fg:x="6402" fg:w="29"/><text x="8.5630%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.04%)</title><rect x="8.3130%" y="1333" width="0.0377%" height="15" fill="rgb(209,23,37)" fg:x="6402" fg:w="29"/><text x="8.5630%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.02%)</title><rect x="8.3286%" y="1317" width="0.0221%" height="15" fill="rgb(241,93,50)" fg:x="6414" fg:w="17"/><text x="8.5786%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.04%)</title><rect x="8.3649%" y="1301" width="0.0351%" height="15" fill="rgb(253,46,43)" fg:x="6442" fg:w="27"/><text x="8.6149%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (40 samples, 0.05%)</title><rect x="8.3584%" y="1317" width="0.0519%" height="15" fill="rgb(226,206,43)" fg:x="6437" fg:w="40"/><text x="8.6084%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.01%)</title><rect x="8.4000%" y="1301" width="0.0104%" height="15" fill="rgb(217,54,7)" fg:x="6469" fg:w="8"/><text x="8.6500%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (48 samples, 0.06%)</title><rect x="8.3506%" y="1365" width="0.0623%" height="15" fill="rgb(223,5,52)" fg:x="6431" fg:w="48"/><text x="8.6006%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (47 samples, 0.06%)</title><rect x="8.3519%" y="1349" width="0.0610%" height="15" fill="rgb(206,52,46)" fg:x="6432" fg:w="47"/><text x="8.6019%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.06%)</title><rect x="8.3519%" y="1333" width="0.0610%" height="15" fill="rgb(253,136,11)" fg:x="6432" fg:w="47"/><text x="8.6019%" y="1343.50"></text></g><g><title>hashbrown::map::make_hash (154 samples, 0.20%)</title><rect x="8.2260%" y="1381" width="0.2000%" height="15" fill="rgb(208,106,33)" fg:x="6335" fg:w="154"/><text x="8.4760%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.01%)</title><rect x="8.4130%" y="1365" width="0.0130%" height="15" fill="rgb(206,54,4)" fg:x="6479" fg:w="10"/><text x="8.6630%" y="1375.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (29 samples, 0.04%)</title><rect x="8.4389%" y="1317" width="0.0377%" height="15" fill="rgb(213,3,15)" fg:x="6499" fg:w="29"/><text x="8.6889%" y="1327.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (27 samples, 0.04%)</title><rect x="8.4415%" y="1301" width="0.0351%" height="15" fill="rgb(252,211,39)" fg:x="6501" fg:w="27"/><text x="8.6915%" y="1311.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.03%)</title><rect x="8.4441%" y="1285" width="0.0325%" height="15" fill="rgb(223,6,36)" fg:x="6503" fg:w="25"/><text x="8.6941%" y="1295.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (25 samples, 0.03%)</title><rect x="8.4441%" y="1269" width="0.0325%" height="15" fill="rgb(252,169,45)" fg:x="6503" fg:w="25"/><text x="8.6941%" y="1279.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="8.4597%" y="1253" width="0.0169%" height="15" fill="rgb(212,48,26)" fg:x="6515" fg:w="13"/><text x="8.7097%" y="1263.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (30 samples, 0.04%)</title><rect x="8.4389%" y="1333" width="0.0390%" height="15" fill="rgb(251,102,48)" fg:x="6499" fg:w="30"/><text x="8.6889%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (38 samples, 0.05%)</title><rect x="8.4831%" y="1333" width="0.0493%" height="15" fill="rgb(243,208,16)" fg:x="6533" fg:w="38"/><text x="8.7331%" y="1343.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (38 samples, 0.05%)</title><rect x="8.4831%" y="1317" width="0.0493%" height="15" fill="rgb(219,96,24)" fg:x="6533" fg:w="38"/><text x="8.7331%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.05%)</title><rect x="8.4831%" y="1301" width="0.0493%" height="15" fill="rgb(219,33,29)" fg:x="6533" fg:w="38"/><text x="8.7331%" y="1311.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (594 samples, 0.77%)</title><rect x="7.7741%" y="1461" width="0.7713%" height="15" fill="rgb(223,176,5)" fg:x="5987" fg:w="594"/><text x="8.0241%" y="1471.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (499 samples, 0.65%)</title><rect x="7.8975%" y="1445" width="0.6480%" height="15" fill="rgb(228,140,14)" fg:x="6082" fg:w="499"/><text x="8.1475%" y="1455.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (495 samples, 0.64%)</title><rect x="7.9027%" y="1429" width="0.6428%" height="15" fill="rgb(217,179,31)" fg:x="6086" fg:w="495"/><text x="8.1527%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (253 samples, 0.33%)</title><rect x="8.2169%" y="1413" width="0.3285%" height="15" fill="rgb(230,9,30)" fg:x="6328" fg:w="253"/><text x="8.4669%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (249 samples, 0.32%)</title><rect x="8.2221%" y="1397" width="0.3233%" height="15" fill="rgb(230,136,20)" fg:x="6332" fg:w="249"/><text x="8.4721%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (92 samples, 0.12%)</title><rect x="8.4260%" y="1381" width="0.1195%" height="15" fill="rgb(215,210,22)" fg:x="6489" fg:w="92"/><text x="8.6760%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (92 samples, 0.12%)</title><rect x="8.4260%" y="1365" width="0.1195%" height="15" fill="rgb(218,43,5)" fg:x="6489" fg:w="92"/><text x="8.6760%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (92 samples, 0.12%)</title><rect x="8.4260%" y="1349" width="0.1195%" height="15" fill="rgb(216,11,5)" fg:x="6489" fg:w="92"/><text x="8.6760%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (599 samples, 0.78%)</title><rect x="7.7689%" y="1493" width="0.7778%" height="15" fill="rgb(209,82,29)" fg:x="5983" fg:w="599"/><text x="8.0189%" y="1503.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate::{{closure}} (596 samples, 0.77%)</title><rect x="7.7728%" y="1477" width="0.7739%" height="15" fill="rgb(244,115,12)" fg:x="5986" fg:w="596"/><text x="8.0228%" y="1487.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.01%)</title><rect x="8.5467%" y="1493" width="0.0117%" height="15" fill="rgb(222,82,18)" fg:x="6582" fg:w="9"/><text x="8.7967%" y="1503.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (9 samples, 0.01%)</title><rect x="8.5467%" y="1477" width="0.0117%" height="15" fill="rgb(249,227,8)" fg:x="6582" fg:w="9"/><text x="8.7967%" y="1487.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (9 samples, 0.01%)</title><rect x="8.5467%" y="1461" width="0.0117%" height="15" fill="rgb(253,141,45)" fg:x="6582" fg:w="9"/><text x="8.7967%" y="1471.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (9 samples, 0.01%)</title><rect x="8.5467%" y="1445" width="0.0117%" height="15" fill="rgb(234,184,4)" fg:x="6582" fg:w="9"/><text x="8.7967%" y="1455.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="8.5467%" y="1429" width="0.0117%" height="15" fill="rgb(218,194,23)" fg:x="6582" fg:w="9"/><text x="8.7967%" y="1439.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (9 samples, 0.01%)</title><rect x="8.5467%" y="1413" width="0.0117%" height="15" fill="rgb(235,66,41)" fg:x="6582" fg:w="9"/><text x="8.7967%" y="1423.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (9 samples, 0.01%)</title><rect x="8.5701%" y="1461" width="0.0117%" height="15" fill="rgb(245,217,1)" fg:x="6600" fg:w="9"/><text x="8.8201%" y="1471.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (11 samples, 0.01%)</title><rect x="8.5818%" y="1461" width="0.0143%" height="15" fill="rgb(229,91,1)" fg:x="6609" fg:w="11"/><text x="8.8318%" y="1471.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_abort (27 samples, 0.04%)</title><rect x="8.5636%" y="1493" width="0.0351%" height="15" fill="rgb(207,101,30)" fg:x="6595" fg:w="27"/><text x="8.8136%" y="1503.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_incarnate (22 samples, 0.03%)</title><rect x="8.5701%" y="1477" width="0.0286%" height="15" fill="rgb(223,82,49)" fg:x="6600" fg:w="22"/><text x="8.8201%" y="1487.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (15 samples, 0.02%)</title><rect x="8.6129%" y="1477" width="0.0195%" height="15" fill="rgb(218,167,17)" fg:x="6633" fg:w="15"/><text x="8.8629%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="8.6155%" y="1461" width="0.0169%" height="15" fill="rgb(208,103,14)" fg:x="6635" fg:w="13"/><text x="8.8655%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="8.6155%" y="1445" width="0.0169%" height="15" fill="rgb(238,20,8)" fg:x="6635" fg:w="13"/><text x="8.8655%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="8.6155%" y="1429" width="0.0169%" height="15" fill="rgb(218,80,54)" fg:x="6635" fg:w="13"/><text x="8.8655%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="8.6168%" y="1413" width="0.0156%" height="15" fill="rgb(240,144,17)" fg:x="6636" fg:w="12"/><text x="8.8668%" y="1423.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.02%)</title><rect x="8.6389%" y="1317" width="0.0169%" height="15" fill="rgb(245,27,50)" fg:x="6653" fg:w="13"/><text x="8.8889%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="8.6415%" y="1301" width="0.0143%" height="15" fill="rgb(251,51,7)" fg:x="6655" fg:w="11"/><text x="8.8915%" y="1311.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.01%)</title><rect x="8.6415%" y="1285" width="0.0143%" height="15" fill="rgb(245,217,29)" fg:x="6655" fg:w="11"/><text x="8.8915%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (11 samples, 0.01%)</title><rect x="8.6415%" y="1269" width="0.0143%" height="15" fill="rgb(221,176,29)" fg:x="6655" fg:w="11"/><text x="8.8915%" y="1279.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (11 samples, 0.01%)</title><rect x="8.6415%" y="1253" width="0.0143%" height="15" fill="rgb(212,180,24)" fg:x="6655" fg:w="11"/><text x="8.8915%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="8.6415%" y="1237" width="0.0143%" height="15" fill="rgb(254,24,2)" fg:x="6655" fg:w="11"/><text x="8.8915%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 0.02%)</title><rect x="8.6324%" y="1397" width="0.0247%" height="15" fill="rgb(230,100,2)" fg:x="6648" fg:w="19"/><text x="8.8824%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.02%)</title><rect x="8.6324%" y="1381" width="0.0247%" height="15" fill="rgb(219,142,25)" fg:x="6648" fg:w="19"/><text x="8.8824%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="8.6337%" y="1365" width="0.0234%" height="15" fill="rgb(240,73,43)" fg:x="6649" fg:w="18"/><text x="8.8837%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="8.6337%" y="1349" width="0.0234%" height="15" fill="rgb(214,114,15)" fg:x="6649" fg:w="18"/><text x="8.8837%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.02%)</title><rect x="8.6363%" y="1333" width="0.0208%" height="15" fill="rgb(207,130,4)" fg:x="6651" fg:w="16"/><text x="8.8863%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30 samples, 0.04%)</title><rect x="8.6324%" y="1477" width="0.0390%" height="15" fill="rgb(221,25,40)" fg:x="6648" fg:w="30"/><text x="8.8824%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="8.6324%" y="1461" width="0.0390%" height="15" fill="rgb(241,184,7)" fg:x="6648" fg:w="30"/><text x="8.8824%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (30 samples, 0.04%)</title><rect x="8.6324%" y="1445" width="0.0390%" height="15" fill="rgb(235,159,4)" fg:x="6648" fg:w="30"/><text x="8.8824%" y="1455.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (30 samples, 0.04%)</title><rect x="8.6324%" y="1429" width="0.0390%" height="15" fill="rgb(214,87,48)" fg:x="6648" fg:w="30"/><text x="8.8824%" y="1439.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (30 samples, 0.04%)</title><rect x="8.6324%" y="1413" width="0.0390%" height="15" fill="rgb(246,198,24)" fg:x="6648" fg:w="30"/><text x="8.8824%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (11 samples, 0.01%)</title><rect x="8.6571%" y="1397" width="0.0143%" height="15" fill="rgb(209,66,40)" fg:x="6667" fg:w="11"/><text x="8.9071%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="8.6571%" y="1381" width="0.0143%" height="15" fill="rgb(233,147,39)" fg:x="6667" fg:w="11"/><text x="8.9071%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.01%)</title><rect x="8.6571%" y="1365" width="0.0143%" height="15" fill="rgb(231,145,52)" fg:x="6667" fg:w="11"/><text x="8.9071%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (11 samples, 0.01%)</title><rect x="8.6571%" y="1349" width="0.0143%" height="15" fill="rgb(206,20,26)" fg:x="6667" fg:w="11"/><text x="8.9071%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (11 samples, 0.01%)</title><rect x="8.6571%" y="1333" width="0.0143%" height="15" fill="rgb(238,220,4)" fg:x="6667" fg:w="11"/><text x="8.9071%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (9 samples, 0.01%)</title><rect x="8.6597%" y="1317" width="0.0117%" height="15" fill="rgb(252,195,42)" fg:x="6669" fg:w="9"/><text x="8.9097%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (9 samples, 0.01%)</title><rect x="8.6597%" y="1301" width="0.0117%" height="15" fill="rgb(209,10,6)" fg:x="6669" fg:w="9"/><text x="8.9097%" y="1311.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (47 samples, 0.06%)</title><rect x="8.6116%" y="1493" width="0.0610%" height="15" fill="rgb(229,3,52)" fg:x="6632" fg:w="47"/><text x="8.8616%" y="1503.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (8 samples, 0.01%)</title><rect x="8.6727%" y="1461" width="0.0104%" height="15" fill="rgb(253,49,37)" fg:x="6679" fg:w="8"/><text x="8.9227%" y="1471.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (8 samples, 0.01%)</title><rect x="8.6727%" y="1445" width="0.0104%" height="15" fill="rgb(240,103,49)" fg:x="6679" fg:w="8"/><text x="8.9227%" y="1455.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::read_set (11 samples, 0.01%)</title><rect x="8.6727%" y="1493" width="0.0143%" height="15" fill="rgb(250,182,30)" fg:x="6679" fg:w="11"/><text x="8.9227%" y="1503.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (11 samples, 0.01%)</title><rect x="8.6727%" y="1477" width="0.0143%" height="15" fill="rgb(248,8,30)" fg:x="6679" fg:w="11"/><text x="8.9227%" y="1487.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (9 samples, 0.01%)</title><rect x="8.6870%" y="1477" width="0.0117%" height="15" fill="rgb(237,120,30)" fg:x="6690" fg:w="9"/><text x="8.9370%" y="1487.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="8.6870%" y="1461" width="0.0117%" height="15" fill="rgb(221,146,34)" fg:x="6690" fg:w="9"/><text x="8.9370%" y="1471.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.01%)</title><rect x="8.6883%" y="1445" width="0.0104%" height="15" fill="rgb(242,55,13)" fg:x="6691" fg:w="8"/><text x="8.9383%" y="1455.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.01%)</title><rect x="8.6883%" y="1429" width="0.0104%" height="15" fill="rgb(242,112,31)" fg:x="6691" fg:w="8"/><text x="8.9383%" y="1439.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (10 samples, 0.01%)</title><rect x="8.7103%" y="1445" width="0.0130%" height="15" fill="rgb(249,192,27)" fg:x="6708" fg:w="10"/><text x="8.9603%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="8.7129%" y="1429" width="0.0104%" height="15" fill="rgb(208,204,44)" fg:x="6710" fg:w="8"/><text x="8.9629%" y="1439.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.01%)</title><rect x="8.7246%" y="1413" width="0.0117%" height="15" fill="rgb(208,93,54)" fg:x="6719" fg:w="9"/><text x="8.9746%" y="1423.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::mark_estimate (41 samples, 0.05%)</title><rect x="8.6870%" y="1493" width="0.0532%" height="15" fill="rgb(242,1,31)" fg:x="6690" fg:w="41"/><text x="8.9370%" y="1503.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (27 samples, 0.04%)</title><rect x="8.7051%" y="1477" width="0.0351%" height="15" fill="rgb(241,83,25)" fg:x="6704" fg:w="27"/><text x="8.9551%" y="1487.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (27 samples, 0.04%)</title><rect x="8.7051%" y="1461" width="0.0351%" height="15" fill="rgb(205,169,50)" fg:x="6704" fg:w="27"/><text x="8.9551%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (13 samples, 0.02%)</title><rect x="8.7233%" y="1445" width="0.0169%" height="15" fill="rgb(239,186,37)" fg:x="6718" fg:w="13"/><text x="8.9733%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.02%)</title><rect x="8.7233%" y="1429" width="0.0169%" height="15" fill="rgb(205,221,10)" fg:x="6718" fg:w="13"/><text x="8.9733%" y="1439.50"></text></g><g><title>prometheus::histogram::Histogram::observe (12 samples, 0.02%)</title><rect x="8.7506%" y="1445" width="0.0156%" height="15" fill="rgb(218,196,15)" fg:x="6739" fg:w="12"/><text x="9.0006%" y="1455.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (12 samples, 0.02%)</title><rect x="8.7506%" y="1429" width="0.0156%" height="15" fill="rgb(218,196,35)" fg:x="6739" fg:w="12"/><text x="9.0006%" y="1439.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (9 samples, 0.01%)</title><rect x="8.7662%" y="1429" width="0.0117%" height="15" fill="rgb(233,63,24)" fg:x="6751" fg:w="9"/><text x="9.0162%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (31 samples, 0.04%)</title><rect x="8.7428%" y="1493" width="0.0403%" height="15" fill="rgb(225,8,4)" fg:x="6733" fg:w="31"/><text x="8.9928%" y="1503.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="8.7467%" y="1477" width="0.0364%" height="15" fill="rgb(234,105,35)" fg:x="6736" fg:w="28"/><text x="8.9967%" y="1487.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (25 samples, 0.03%)</title><rect x="8.7506%" y="1461" width="0.0325%" height="15" fill="rgb(236,21,32)" fg:x="6739" fg:w="25"/><text x="9.0006%" y="1471.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (13 samples, 0.02%)</title><rect x="8.7662%" y="1445" width="0.0169%" height="15" fill="rgb(228,109,6)" fg:x="6751" fg:w="13"/><text x="9.0162%" y="1455.50"></text></g><g><title>prometheus::counter::GenericCounter&lt;P&gt;::inc (9 samples, 0.01%)</title><rect x="8.7830%" y="1493" width="0.0117%" height="15" fill="rgb(229,215,31)" fg:x="6764" fg:w="9"/><text x="9.0330%" y="1503.50"></text></g><g><title>prometheus::value::Value&lt;P&gt;::inc (9 samples, 0.01%)</title><rect x="8.7830%" y="1477" width="0.0117%" height="15" fill="rgb(221,52,54)" fg:x="6764" fg:w="9"/><text x="9.0330%" y="1487.50"></text></g><g><title>prometheus::value::Value&lt;P&gt;::inc_by (9 samples, 0.01%)</title><rect x="8.7830%" y="1461" width="0.0117%" height="15" fill="rgb(252,129,43)" fg:x="6764" fg:w="9"/><text x="9.0330%" y="1471.50"></text></g><g><title>&lt;prometheus::atomic64::AtomicU64 as prometheus::atomic64::Atomic&gt;::inc_by (9 samples, 0.01%)</title><rect x="8.7830%" y="1445" width="0.0117%" height="15" fill="rgb(248,183,27)" fg:x="6764" fg:w="9"/><text x="9.0330%" y="1455.50"></text></g><g><title>prometheus::atomic64::AtomicU64::inc_by_with_ordering (9 samples, 0.01%)</title><rect x="8.7830%" y="1429" width="0.0117%" height="15" fill="rgb(250,0,22)" fg:x="6764" fg:w="9"/><text x="9.0330%" y="1439.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate (824 samples, 1.07%)</title><rect x="7.7598%" y="1509" width="1.0700%" height="15" fill="rgb(213,166,10)" fg:x="5976" fg:w="824"/><text x="8.0098%" y="1519.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (27 samples, 0.04%)</title><rect x="8.7947%" y="1493" width="0.0351%" height="15" fill="rgb(207,163,36)" fg:x="6773" fg:w="27"/><text x="9.0447%" y="1503.50"></text></g><g><title>prometheus::histogram::HistogramTimer::new (17 samples, 0.02%)</title><rect x="8.8077%" y="1477" width="0.0221%" height="15" fill="rgb(208,122,22)" fg:x="6783" fg:w="17"/><text x="9.0577%" y="1487.50"></text></g><g><title>prometheus::histogram::Instant::now (17 samples, 0.02%)</title><rect x="8.8077%" y="1461" width="0.0221%" height="15" fill="rgb(207,104,49)" fg:x="6783" fg:w="17"/><text x="9.0577%" y="1471.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (17 samples, 0.02%)</title><rect x="8.8077%" y="1445" width="0.0221%" height="15" fill="rgb(248,211,50)" fg:x="6783" fg:w="17"/><text x="9.0577%" y="1455.50"></text></g><g><title>clock_gettime (17 samples, 0.02%)</title><rect x="8.8077%" y="1429" width="0.0221%" height="15" fill="rgb(217,13,45)" fg:x="6783" fg:w="17"/><text x="9.0577%" y="1439.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.02%)</title><rect x="8.8077%" y="1413" width="0.0221%" height="15" fill="rgb(211,216,49)" fg:x="6783" fg:w="17"/><text x="9.0577%" y="1423.50"></text></g><g><title>[[vdso]] (13 samples, 0.02%)</title><rect x="8.8129%" y="1397" width="0.0169%" height="15" fill="rgb(221,58,53)" fg:x="6787" fg:w="13"/><text x="9.0629%" y="1407.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.02%)</title><rect x="8.8662%" y="1445" width="0.0195%" height="15" fill="rgb(220,112,41)" fg:x="6828" fg:w="15"/><text x="9.1162%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.02%)</title><rect x="8.8662%" y="1429" width="0.0195%" height="15" fill="rgb(236,38,28)" fg:x="6828" fg:w="15"/><text x="9.1162%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.02%)</title><rect x="8.8662%" y="1413" width="0.0195%" height="15" fill="rgb(227,195,22)" fg:x="6828" fg:w="15"/><text x="9.1162%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.01%)</title><rect x="8.8752%" y="1397" width="0.0104%" height="15" fill="rgb(214,55,33)" fg:x="6835" fg:w="8"/><text x="9.1252%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="8.8752%" y="1381" width="0.0104%" height="15" fill="rgb(248,80,13)" fg:x="6835" fg:w="8"/><text x="9.1252%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="8.8752%" y="1365" width="0.0104%" height="15" fill="rgb(238,52,6)" fg:x="6835" fg:w="8"/><text x="9.1252%" y="1375.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.01%)</title><rect x="8.8856%" y="1445" width="0.0143%" height="15" fill="rgb(224,198,47)" fg:x="6843" fg:w="11"/><text x="9.1356%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="8.8856%" y="1429" width="0.0143%" height="15" fill="rgb(233,171,20)" fg:x="6843" fg:w="11"/><text x="9.1356%" y="1439.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (46 samples, 0.06%)</title><rect x="8.8610%" y="1461" width="0.0597%" height="15" fill="rgb(241,30,25)" fg:x="6824" fg:w="46"/><text x="9.1110%" y="1471.50"></text></g><g><title>std::time::Instant::elapsed (16 samples, 0.02%)</title><rect x="8.8999%" y="1445" width="0.0208%" height="15" fill="rgb(207,171,38)" fg:x="6854" fg:w="16"/><text x="9.1499%" y="1455.50"></text></g><g><title>std::time::Instant::now (12 samples, 0.02%)</title><rect x="8.9051%" y="1429" width="0.0156%" height="15" fill="rgb(234,70,1)" fg:x="6858" fg:w="12"/><text x="9.1551%" y="1439.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (12 samples, 0.02%)</title><rect x="8.9051%" y="1413" width="0.0156%" height="15" fill="rgb(232,178,18)" fg:x="6858" fg:w="12"/><text x="9.1551%" y="1423.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (12 samples, 0.02%)</title><rect x="8.9051%" y="1397" width="0.0156%" height="15" fill="rgb(241,78,40)" fg:x="6858" fg:w="12"/><text x="9.1551%" y="1407.50"></text></g><g><title>clock_gettime (12 samples, 0.02%)</title><rect x="8.9051%" y="1381" width="0.0156%" height="15" fill="rgb(222,35,25)" fg:x="6858" fg:w="12"/><text x="9.1551%" y="1391.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.02%)</title><rect x="8.9051%" y="1365" width="0.0156%" height="15" fill="rgb(207,92,16)" fg:x="6858" fg:w="12"/><text x="9.1551%" y="1375.50"></text></g><g><title>[[vdso]] (9 samples, 0.01%)</title><rect x="8.9090%" y="1349" width="0.0117%" height="15" fill="rgb(216,59,51)" fg:x="6861" fg:w="9"/><text x="9.1590%" y="1359.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (16 samples, 0.02%)</title><rect x="8.9311%" y="1445" width="0.0208%" height="15" fill="rgb(213,80,28)" fg:x="6878" fg:w="16"/><text x="9.1811%" y="1455.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (16 samples, 0.02%)</title><rect x="8.9311%" y="1429" width="0.0208%" height="15" fill="rgb(220,93,7)" fg:x="6878" fg:w="16"/><text x="9.1811%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 0.02%)</title><rect x="8.9311%" y="1413" width="0.0208%" height="15" fill="rgb(225,24,44)" fg:x="6878" fg:w="16"/><text x="9.1811%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.02%)</title><rect x="8.9311%" y="1397" width="0.0208%" height="15" fill="rgb(243,74,40)" fg:x="6878" fg:w="16"/><text x="9.1811%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="8.9389%" y="1381" width="0.0130%" height="15" fill="rgb(228,39,7)" fg:x="6884" fg:w="10"/><text x="9.1889%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="8.9389%" y="1365" width="0.0130%" height="15" fill="rgb(227,79,8)" fg:x="6884" fg:w="10"/><text x="9.1889%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.01%)</title><rect x="8.9389%" y="1349" width="0.0130%" height="15" fill="rgb(236,58,11)" fg:x="6884" fg:w="10"/><text x="9.1889%" y="1359.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.01%)</title><rect x="8.9557%" y="1413" width="0.0117%" height="15" fill="rgb(249,63,35)" fg:x="6897" fg:w="9"/><text x="9.2057%" y="1423.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="8.9557%" y="1397" width="0.0117%" height="15" fill="rgb(252,114,16)" fg:x="6897" fg:w="9"/><text x="9.2057%" y="1407.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (23 samples, 0.03%)</title><rect x="8.9519%" y="1445" width="0.0299%" height="15" fill="rgb(254,151,24)" fg:x="6894" fg:w="23"/><text x="9.2019%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.03%)</title><rect x="8.9519%" y="1429" width="0.0299%" height="15" fill="rgb(253,54,39)" fg:x="6894" fg:w="23"/><text x="9.2019%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.01%)</title><rect x="8.9674%" y="1413" width="0.0143%" height="15" fill="rgb(243,25,45)" fg:x="6906" fg:w="11"/><text x="9.2174%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.01%)</title><rect x="8.9674%" y="1397" width="0.0143%" height="15" fill="rgb(234,134,9)" fg:x="6906" fg:w="11"/><text x="9.2174%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.01%)</title><rect x="8.9674%" y="1381" width="0.0143%" height="15" fill="rgb(227,166,31)" fg:x="6906" fg:w="11"/><text x="9.2174%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.01%)</title><rect x="8.9700%" y="1365" width="0.0117%" height="15" fill="rgb(245,143,41)" fg:x="6908" fg:w="9"/><text x="9.2200%" y="1375.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="8.9700%" y="1349" width="0.0117%" height="15" fill="rgb(238,181,32)" fg:x="6908" fg:w="9"/><text x="9.2200%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (9 samples, 0.01%)</title><rect x="8.9700%" y="1333" width="0.0117%" height="15" fill="rgb(224,113,18)" fg:x="6908" fg:w="9"/><text x="9.2200%" y="1343.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (9 samples, 0.01%)</title><rect x="8.9700%" y="1317" width="0.0117%" height="15" fill="rgb(240,229,28)" fg:x="6908" fg:w="9"/><text x="9.2200%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.01%)</title><rect x="8.9700%" y="1301" width="0.0117%" height="15" fill="rgb(250,185,3)" fg:x="6908" fg:w="9"/><text x="9.2200%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.01%)</title><rect x="8.9700%" y="1285" width="0.0117%" height="15" fill="rgb(212,59,25)" fg:x="6908" fg:w="9"/><text x="9.2200%" y="1295.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.01%)</title><rect x="8.9700%" y="1269" width="0.0117%" height="15" fill="rgb(221,87,20)" fg:x="6908" fg:w="9"/><text x="9.2200%" y="1279.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (60 samples, 0.08%)</title><rect x="8.9207%" y="1461" width="0.0779%" height="15" fill="rgb(213,74,28)" fg:x="6870" fg:w="60"/><text x="9.1707%" y="1471.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (13 samples, 0.02%)</title><rect x="8.9817%" y="1445" width="0.0169%" height="15" fill="rgb(224,132,34)" fg:x="6917" fg:w="13"/><text x="9.2317%" y="1455.50"></text></g><g><title>clock_gettime (13 samples, 0.02%)</title><rect x="8.9817%" y="1429" width="0.0169%" height="15" fill="rgb(222,101,24)" fg:x="6917" fg:w="13"/><text x="9.2317%" y="1439.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.01%)</title><rect x="8.9856%" y="1413" width="0.0130%" height="15" fill="rgb(254,142,4)" fg:x="6920" fg:w="10"/><text x="9.2356%" y="1423.50"></text></g><g><title>[[vdso]] (10 samples, 0.01%)</title><rect x="8.9856%" y="1397" width="0.0130%" height="15" fill="rgb(230,229,49)" fg:x="6920" fg:w="10"/><text x="9.2356%" y="1407.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_incarnate (134 samples, 0.17%)</title><rect x="8.8480%" y="1477" width="0.1740%" height="15" fill="rgb(238,70,47)" fg:x="6814" fg:w="134"/><text x="9.0980%" y="1487.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (14 samples, 0.02%)</title><rect x="9.0038%" y="1461" width="0.0182%" height="15" fill="rgb(231,160,17)" fg:x="6934" fg:w="14"/><text x="9.2538%" y="1471.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (14 samples, 0.02%)</title><rect x="9.0038%" y="1445" width="0.0182%" height="15" fill="rgb(218,68,53)" fg:x="6934" fg:w="14"/><text x="9.2538%" y="1455.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_execute_next_version (139 samples, 0.18%)</title><rect x="8.8441%" y="1493" width="0.1805%" height="15" fill="rgb(236,111,10)" fg:x="6811" fg:w="139"/><text x="9.0941%" y="1503.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::is_executed (13 samples, 0.02%)</title><rect x="9.0259%" y="1477" width="0.0169%" height="15" fill="rgb(224,34,41)" fg:x="6951" fg:w="13"/><text x="9.2759%" y="1487.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.01%)</title><rect x="9.0298%" y="1461" width="0.0130%" height="15" fill="rgb(241,118,19)" fg:x="6954" fg:w="10"/><text x="9.2798%" y="1471.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.01%)</title><rect x="9.0298%" y="1445" width="0.0130%" height="15" fill="rgb(238,129,25)" fg:x="6954" fg:w="10"/><text x="9.2798%" y="1455.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_validate_next_version (20 samples, 0.03%)</title><rect x="9.0246%" y="1493" width="0.0260%" height="15" fill="rgb(238,22,31)" fg:x="6950" fg:w="20"/><text x="9.2746%" y="1503.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::unpack_validation_idx (23 samples, 0.03%)</title><rect x="9.0505%" y="1493" width="0.0299%" height="15" fill="rgb(222,174,48)" fg:x="6970" fg:w="23"/><text x="9.3005%" y="1503.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::next_task (207 samples, 0.27%)</title><rect x="8.8298%" y="1509" width="0.2688%" height="15" fill="rgb(206,152,40)" fg:x="6800" fg:w="207"/><text x="9.0798%" y="1519.50"></text></g><g><title>core::hint::spin_loop (14 samples, 0.02%)</title><rect x="9.0804%" y="1493" width="0.0182%" height="15" fill="rgb(218,99,54)" fg:x="6993" fg:w="14"/><text x="9.3304%" y="1503.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (14 samples, 0.02%)</title><rect x="9.0804%" y="1477" width="0.0182%" height="15" fill="rgb(220,174,26)" fg:x="6993" fg:w="14"/><text x="9.3304%" y="1487.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="9.1207%" y="1413" width="0.0156%" height="15" fill="rgb(245,116,9)" fg:x="7024" fg:w="12"/><text x="9.3707%" y="1423.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="9.1207%" y="1397" width="0.0156%" height="15" fill="rgb(209,72,35)" fg:x="7024" fg:w="12"/><text x="9.3707%" y="1407.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.02%)</title><rect x="9.1375%" y="1349" width="0.0182%" height="15" fill="rgb(226,126,21)" fg:x="7037" fg:w="14"/><text x="9.3875%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="9.1388%" y="1333" width="0.0169%" height="15" fill="rgb(227,192,1)" fg:x="7038" fg:w="13"/><text x="9.3888%" y="1343.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (13 samples, 0.02%)</title><rect x="9.1388%" y="1317" width="0.0169%" height="15" fill="rgb(237,180,29)" fg:x="7038" fg:w="13"/><text x="9.3888%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.02%)</title><rect x="9.1388%" y="1301" width="0.0169%" height="15" fill="rgb(230,197,35)" fg:x="7038" fg:w="13"/><text x="9.3888%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.02%)</title><rect x="9.1388%" y="1285" width="0.0169%" height="15" fill="rgb(246,193,31)" fg:x="7038" fg:w="13"/><text x="9.3888%" y="1295.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.02%)</title><rect x="9.1388%" y="1269" width="0.0169%" height="15" fill="rgb(241,36,4)" fg:x="7038" fg:w="13"/><text x="9.3888%" y="1279.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="9.1453%" y="1253" width="0.0104%" height="15" fill="rgb(241,130,17)" fg:x="7043" fg:w="8"/><text x="9.3953%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.02%)</title><rect x="9.1375%" y="1365" width="0.0195%" height="15" fill="rgb(206,137,32)" fg:x="7037" fg:w="15"/><text x="9.3875%" y="1375.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_counter (37 samples, 0.05%)</title><rect x="9.1181%" y="1477" width="0.0480%" height="15" fill="rgb(237,228,51)" fg:x="7022" fg:w="37"/><text x="9.3681%" y="1487.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (37 samples, 0.05%)</title><rect x="9.1181%" y="1461" width="0.0480%" height="15" fill="rgb(243,6,42)" fg:x="7022" fg:w="37"/><text x="9.3681%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.05%)</title><rect x="9.1181%" y="1445" width="0.0480%" height="15" fill="rgb(251,74,28)" fg:x="7022" fg:w="37"/><text x="9.3681%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.05%)</title><rect x="9.1181%" y="1429" width="0.0480%" height="15" fill="rgb(218,20,49)" fg:x="7022" fg:w="37"/><text x="9.3681%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (23 samples, 0.03%)</title><rect x="9.1362%" y="1413" width="0.0299%" height="15" fill="rgb(238,28,14)" fg:x="7036" fg:w="23"/><text x="9.3862%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.03%)</title><rect x="9.1362%" y="1397" width="0.0299%" height="15" fill="rgb(229,40,46)" fg:x="7036" fg:w="23"/><text x="9.3862%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.03%)</title><rect x="9.1362%" y="1381" width="0.0299%" height="15" fill="rgb(244,195,20)" fg:x="7036" fg:w="23"/><text x="9.3862%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (21 samples, 0.03%)</title><rect x="9.1661%" y="1477" width="0.0273%" height="15" fill="rgb(253,56,35)" fg:x="7059" fg:w="21"/><text x="9.4161%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (21 samples, 0.03%)</title><rect x="9.1661%" y="1461" width="0.0273%" height="15" fill="rgb(210,149,44)" fg:x="7059" fg:w="21"/><text x="9.4161%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.03%)</title><rect x="9.1661%" y="1445" width="0.0273%" height="15" fill="rgb(240,135,12)" fg:x="7059" fg:w="21"/><text x="9.4161%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.02%)</title><rect x="9.1726%" y="1429" width="0.0208%" height="15" fill="rgb(251,24,50)" fg:x="7064" fg:w="16"/><text x="9.4226%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.02%)</title><rect x="9.1726%" y="1413" width="0.0208%" height="15" fill="rgb(243,200,47)" fg:x="7064" fg:w="16"/><text x="9.4226%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.02%)</title><rect x="9.1726%" y="1397" width="0.0208%" height="15" fill="rgb(224,166,26)" fg:x="7064" fg:w="16"/><text x="9.4226%" y="1407.50"></text></g><g><title>hashbrown::map::make_insert_hash (11 samples, 0.01%)</title><rect x="9.1999%" y="1445" width="0.0143%" height="15" fill="rgb(233,0,47)" fg:x="7085" fg:w="11"/><text x="9.4499%" y="1455.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="9.1999%" y="1429" width="0.0143%" height="15" fill="rgb(253,80,5)" fg:x="7085" fg:w="11"/><text x="9.4499%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="9.2193%" y="1397" width="0.0104%" height="15" fill="rgb(214,133,25)" fg:x="7100" fg:w="8"/><text x="9.4693%" y="1407.50"></text></g><g><title>aptos_types::transaction::Profiler::count_one (95 samples, 0.12%)</title><rect x="9.1090%" y="1509" width="0.1234%" height="15" fill="rgb(209,27,14)" fg:x="7015" fg:w="95"/><text x="9.3590%" y="1519.50"></text></g><g><title>aptos_types::transaction::Profiler::count (91 samples, 0.12%)</title><rect x="9.1142%" y="1493" width="0.1182%" height="15" fill="rgb(219,102,51)" fg:x="7019" fg:w="91"/><text x="9.3642%" y="1503.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (30 samples, 0.04%)</title><rect x="9.1934%" y="1477" width="0.0390%" height="15" fill="rgb(237,18,16)" fg:x="7080" fg:w="30"/><text x="9.4434%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.04%)</title><rect x="9.1934%" y="1461" width="0.0390%" height="15" fill="rgb(241,85,17)" fg:x="7080" fg:w="30"/><text x="9.4434%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (14 samples, 0.02%)</title><rect x="9.2141%" y="1445" width="0.0182%" height="15" fill="rgb(236,90,42)" fg:x="7096" fg:w="14"/><text x="9.4641%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="9.2141%" y="1429" width="0.0182%" height="15" fill="rgb(249,57,21)" fg:x="7096" fg:w="14"/><text x="9.4641%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.02%)</title><rect x="9.2141%" y="1413" width="0.0182%" height="15" fill="rgb(243,12,36)" fg:x="7096" fg:w="14"/><text x="9.4641%" y="1423.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="9.2401%" y="1445" width="0.0169%" height="15" fill="rgb(253,128,47)" fg:x="7116" fg:w="13"/><text x="9.4901%" y="1455.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="9.2401%" y="1429" width="0.0169%" height="15" fill="rgb(207,33,20)" fg:x="7116" fg:w="13"/><text x="9.4901%" y="1439.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (18 samples, 0.02%)</title><rect x="9.2596%" y="1381" width="0.0234%" height="15" fill="rgb(233,215,35)" fg:x="7131" fg:w="18"/><text x="9.5096%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="9.2609%" y="1365" width="0.0221%" height="15" fill="rgb(249,188,52)" fg:x="7132" fg:w="17"/><text x="9.5109%" y="1375.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (17 samples, 0.02%)</title><rect x="9.2609%" y="1349" width="0.0221%" height="15" fill="rgb(225,12,32)" fg:x="7132" fg:w="17"/><text x="9.5109%" y="1359.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="9.2609%" y="1333" width="0.0221%" height="15" fill="rgb(247,98,14)" fg:x="7132" fg:w="17"/><text x="9.5109%" y="1343.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.02%)</title><rect x="9.2609%" y="1317" width="0.0221%" height="15" fill="rgb(247,219,48)" fg:x="7132" fg:w="17"/><text x="9.5109%" y="1327.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.02%)</title><rect x="9.2609%" y="1301" width="0.0221%" height="15" fill="rgb(253,60,48)" fg:x="7132" fg:w="17"/><text x="9.5109%" y="1311.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="9.2648%" y="1285" width="0.0182%" height="15" fill="rgb(245,15,52)" fg:x="7135" fg:w="14"/><text x="9.5148%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (19 samples, 0.02%)</title><rect x="9.2596%" y="1397" width="0.0247%" height="15" fill="rgb(220,133,28)" fg:x="7131" fg:w="19"/><text x="9.5096%" y="1407.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (39 samples, 0.05%)</title><rect x="9.2388%" y="1493" width="0.0506%" height="15" fill="rgb(217,180,4)" fg:x="7115" fg:w="39"/><text x="9.4888%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (39 samples, 0.05%)</title><rect x="9.2388%" y="1477" width="0.0506%" height="15" fill="rgb(251,24,1)" fg:x="7115" fg:w="39"/><text x="9.4888%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.05%)</title><rect x="9.2388%" y="1461" width="0.0506%" height="15" fill="rgb(212,185,49)" fg:x="7115" fg:w="39"/><text x="9.4888%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.03%)</title><rect x="9.2570%" y="1445" width="0.0325%" height="15" fill="rgb(215,175,22)" fg:x="7129" fg:w="25"/><text x="9.5070%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.03%)</title><rect x="9.2570%" y="1429" width="0.0325%" height="15" fill="rgb(250,205,14)" fg:x="7129" fg:w="25"/><text x="9.5070%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.03%)</title><rect x="9.2570%" y="1413" width="0.0325%" height="15" fill="rgb(225,211,22)" fg:x="7129" fg:w="25"/><text x="9.5070%" y="1423.50"></text></g><g><title>hashbrown::map::make_insert_hash (12 samples, 0.02%)</title><rect x="9.2960%" y="1461" width="0.0156%" height="15" fill="rgb(251,179,42)" fg:x="7159" fg:w="12"/><text x="9.5460%" y="1471.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="9.2960%" y="1445" width="0.0156%" height="15" fill="rgb(208,216,51)" fg:x="7159" fg:w="12"/><text x="9.5460%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.02%)</title><rect x="9.3128%" y="1413" width="0.0169%" height="15" fill="rgb(235,36,11)" fg:x="7172" fg:w="13"/><text x="9.5628%" y="1423.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.02%)</title><rect x="9.3128%" y="1397" width="0.0169%" height="15" fill="rgb(213,189,28)" fg:x="7172" fg:w="13"/><text x="9.5628%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="9.3128%" y="1381" width="0.0169%" height="15" fill="rgb(227,203,42)" fg:x="7172" fg:w="13"/><text x="9.5628%" y="1391.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (13 samples, 0.02%)</title><rect x="9.3128%" y="1365" width="0.0169%" height="15" fill="rgb(244,72,36)" fg:x="7172" fg:w="13"/><text x="9.5628%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.02%)</title><rect x="9.3128%" y="1349" width="0.0169%" height="15" fill="rgb(213,53,17)" fg:x="7172" fg:w="13"/><text x="9.5628%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.02%)</title><rect x="9.3128%" y="1333" width="0.0169%" height="15" fill="rgb(207,167,3)" fg:x="7172" fg:w="13"/><text x="9.5628%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.02%)</title><rect x="9.3128%" y="1317" width="0.0169%" height="15" fill="rgb(216,98,30)" fg:x="7172" fg:w="13"/><text x="9.5628%" y="1327.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="9.3167%" y="1301" width="0.0130%" height="15" fill="rgb(236,123,15)" fg:x="7175" fg:w="10"/><text x="9.5667%" y="1311.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (34 samples, 0.04%)</title><rect x="9.2895%" y="1493" width="0.0441%" height="15" fill="rgb(248,81,50)" fg:x="7154" fg:w="34"/><text x="9.5395%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (33 samples, 0.04%)</title><rect x="9.2908%" y="1477" width="0.0429%" height="15" fill="rgb(214,120,4)" fg:x="7155" fg:w="33"/><text x="9.5408%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (17 samples, 0.02%)</title><rect x="9.3115%" y="1461" width="0.0221%" height="15" fill="rgb(208,179,34)" fg:x="7171" fg:w="17"/><text x="9.5615%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="9.3115%" y="1445" width="0.0221%" height="15" fill="rgb(227,140,7)" fg:x="7171" fg:w="17"/><text x="9.5615%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.02%)</title><rect x="9.3115%" y="1429" width="0.0221%" height="15" fill="rgb(214,22,6)" fg:x="7171" fg:w="17"/><text x="9.5615%" y="1439.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (96 samples, 0.12%)</title><rect x="9.2323%" y="1509" width="0.1247%" height="15" fill="rgb(207,137,27)" fg:x="7110" fg:w="96"/><text x="9.4823%" y="1519.50"></text></g><g><title>std::time::Instant::elapsed (18 samples, 0.02%)</title><rect x="9.3336%" y="1493" width="0.0234%" height="15" fill="rgb(210,8,46)" fg:x="7188" fg:w="18"/><text x="9.5836%" y="1503.50"></text></g><g><title>std::time::Instant::now (13 samples, 0.02%)</title><rect x="9.3401%" y="1477" width="0.0169%" height="15" fill="rgb(240,16,54)" fg:x="7193" fg:w="13"/><text x="9.5901%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (13 samples, 0.02%)</title><rect x="9.3401%" y="1461" width="0.0169%" height="15" fill="rgb(211,209,29)" fg:x="7193" fg:w="13"/><text x="9.5901%" y="1471.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (13 samples, 0.02%)</title><rect x="9.3401%" y="1445" width="0.0169%" height="15" fill="rgb(226,228,24)" fg:x="7193" fg:w="13"/><text x="9.5901%" y="1455.50"></text></g><g><title>clock_gettime (10 samples, 0.01%)</title><rect x="9.3440%" y="1429" width="0.0130%" height="15" fill="rgb(222,84,9)" fg:x="7196" fg:w="10"/><text x="9.5940%" y="1439.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.01%)</title><rect x="9.3440%" y="1413" width="0.0130%" height="15" fill="rgb(234,203,30)" fg:x="7196" fg:w="10"/><text x="9.5940%" y="1423.50"></text></g><g><title>[[vdso]] (10 samples, 0.01%)</title><rect x="9.3440%" y="1397" width="0.0130%" height="15" fill="rgb(238,109,14)" fg:x="7196" fg:w="10"/><text x="9.5940%" y="1407.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="9.3635%" y="1429" width="0.0156%" height="15" fill="rgb(233,206,34)" fg:x="7211" fg:w="12"/><text x="9.6135%" y="1439.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="9.3648%" y="1413" width="0.0143%" height="15" fill="rgb(220,167,47)" fg:x="7212" fg:w="11"/><text x="9.6148%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="9.3791%" y="1381" width="0.0104%" height="15" fill="rgb(238,105,10)" fg:x="7223" fg:w="8"/><text x="9.6291%" y="1391.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.01%)</title><rect x="9.3791%" y="1365" width="0.0104%" height="15" fill="rgb(213,227,17)" fg:x="7223" fg:w="8"/><text x="9.6291%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="9.3791%" y="1349" width="0.0104%" height="15" fill="rgb(217,132,38)" fg:x="7223" fg:w="8"/><text x="9.6291%" y="1359.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.01%)</title><rect x="9.3791%" y="1333" width="0.0104%" height="15" fill="rgb(242,146,4)" fg:x="7223" fg:w="8"/><text x="9.6291%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.01%)</title><rect x="9.3791%" y="1317" width="0.0104%" height="15" fill="rgb(212,61,9)" fg:x="7223" fg:w="8"/><text x="9.6291%" y="1327.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.01%)</title><rect x="9.3791%" y="1301" width="0.0104%" height="15" fill="rgb(247,126,22)" fg:x="7223" fg:w="8"/><text x="9.6291%" y="1311.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.01%)</title><rect x="9.3791%" y="1285" width="0.0104%" height="15" fill="rgb(220,196,2)" fg:x="7223" fg:w="8"/><text x="9.6291%" y="1295.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (23 samples, 0.03%)</title><rect x="9.3622%" y="1493" width="0.0299%" height="15" fill="rgb(208,46,4)" fg:x="7210" fg:w="23"/><text x="9.6122%" y="1503.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (23 samples, 0.03%)</title><rect x="9.3622%" y="1477" width="0.0299%" height="15" fill="rgb(252,104,46)" fg:x="7210" fg:w="23"/><text x="9.6122%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (23 samples, 0.03%)</title><rect x="9.3622%" y="1461" width="0.0299%" height="15" fill="rgb(237,152,48)" fg:x="7210" fg:w="23"/><text x="9.6122%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.03%)</title><rect x="9.3622%" y="1445" width="0.0299%" height="15" fill="rgb(221,59,37)" fg:x="7210" fg:w="23"/><text x="9.6122%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="9.3791%" y="1429" width="0.0130%" height="15" fill="rgb(209,202,51)" fg:x="7223" fg:w="10"/><text x="9.6291%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="9.3791%" y="1413" width="0.0130%" height="15" fill="rgb(228,81,30)" fg:x="7223" fg:w="10"/><text x="9.6291%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.01%)</title><rect x="9.3791%" y="1397" width="0.0130%" height="15" fill="rgb(227,42,39)" fg:x="7223" fg:w="10"/><text x="9.6291%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="9.3985%" y="1429" width="0.0117%" height="15" fill="rgb(221,26,2)" fg:x="7238" fg:w="9"/><text x="9.6485%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="9.3985%" y="1413" width="0.0117%" height="15" fill="rgb(254,61,31)" fg:x="7238" fg:w="9"/><text x="9.6485%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="9.3985%" y="1397" width="0.0117%" height="15" fill="rgb(222,173,38)" fg:x="7238" fg:w="9"/><text x="9.6485%" y="1407.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.02%)</title><rect x="9.3985%" y="1461" width="0.0169%" height="15" fill="rgb(218,50,12)" fg:x="7238" fg:w="13"/><text x="9.6485%" y="1471.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="9.3985%" y="1445" width="0.0169%" height="15" fill="rgb(223,88,40)" fg:x="7238" fg:w="13"/><text x="9.6485%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.02%)</title><rect x="9.4180%" y="1413" width="0.0169%" height="15" fill="rgb(237,54,19)" fg:x="7253" fg:w="13"/><text x="9.6680%" y="1423.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.02%)</title><rect x="9.4180%" y="1397" width="0.0169%" height="15" fill="rgb(251,129,25)" fg:x="7253" fg:w="13"/><text x="9.6680%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="9.4180%" y="1381" width="0.0169%" height="15" fill="rgb(238,97,19)" fg:x="7253" fg:w="13"/><text x="9.6680%" y="1391.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (13 samples, 0.02%)</title><rect x="9.4180%" y="1365" width="0.0169%" height="15" fill="rgb(240,169,18)" fg:x="7253" fg:w="13"/><text x="9.6680%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.02%)</title><rect x="9.4180%" y="1349" width="0.0169%" height="15" fill="rgb(230,187,49)" fg:x="7253" fg:w="13"/><text x="9.6680%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.02%)</title><rect x="9.4180%" y="1333" width="0.0169%" height="15" fill="rgb(209,44,26)" fg:x="7253" fg:w="13"/><text x="9.6680%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.02%)</title><rect x="9.4180%" y="1317" width="0.0169%" height="15" fill="rgb(244,0,6)" fg:x="7253" fg:w="13"/><text x="9.6680%" y="1327.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="9.4219%" y="1301" width="0.0130%" height="15" fill="rgb(248,18,21)" fg:x="7256" fg:w="10"/><text x="9.6719%" y="1311.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (34 samples, 0.04%)</title><rect x="9.3920%" y="1493" width="0.0441%" height="15" fill="rgb(245,180,19)" fg:x="7233" fg:w="34"/><text x="9.6420%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.04%)</title><rect x="9.3920%" y="1477" width="0.0441%" height="15" fill="rgb(252,118,36)" fg:x="7233" fg:w="34"/><text x="9.6420%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (16 samples, 0.02%)</title><rect x="9.4154%" y="1461" width="0.0208%" height="15" fill="rgb(210,224,19)" fg:x="7251" fg:w="16"/><text x="9.6654%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.02%)</title><rect x="9.4154%" y="1445" width="0.0208%" height="15" fill="rgb(218,30,24)" fg:x="7251" fg:w="16"/><text x="9.6654%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.02%)</title><rect x="9.4154%" y="1429" width="0.0208%" height="15" fill="rgb(219,75,50)" fg:x="7251" fg:w="16"/><text x="9.6654%" y="1439.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (77 samples, 0.10%)</title><rect x="9.3570%" y="1509" width="0.1000%" height="15" fill="rgb(234,72,50)" fg:x="7206" fg:w="77"/><text x="9.6070%" y="1519.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (16 samples, 0.02%)</title><rect x="9.4362%" y="1493" width="0.0208%" height="15" fill="rgb(219,100,48)" fg:x="7267" fg:w="16"/><text x="9.6862%" y="1503.50"></text></g><g><title>clock_gettime (16 samples, 0.02%)</title><rect x="9.4362%" y="1477" width="0.0208%" height="15" fill="rgb(253,5,41)" fg:x="7267" fg:w="16"/><text x="9.6862%" y="1487.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.02%)</title><rect x="9.4401%" y="1461" width="0.0169%" height="15" fill="rgb(247,181,11)" fg:x="7270" fg:w="13"/><text x="9.6901%" y="1471.50"></text></g><g><title>[[vdso]] (12 samples, 0.02%)</title><rect x="9.4414%" y="1445" width="0.0156%" height="15" fill="rgb(222,223,25)" fg:x="7271" fg:w="12"/><text x="9.6914%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="9.4570%" y="1445" width="0.0247%" height="15" fill="rgb(214,198,28)" fg:x="7283" fg:w="19"/><text x="9.7070%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="9.4570%" y="1429" width="0.0247%" height="15" fill="rgb(230,46,43)" fg:x="7283" fg:w="19"/><text x="9.7070%" y="1439.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="9.4596%" y="1413" width="0.0221%" height="15" fill="rgb(233,65,53)" fg:x="7285" fg:w="17"/><text x="9.7096%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (21 samples, 0.03%)</title><rect x="9.4570%" y="1509" width="0.0273%" height="15" fill="rgb(221,121,27)" fg:x="7283" fg:w="21"/><text x="9.7070%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21 samples, 0.03%)</title><rect x="9.4570%" y="1493" width="0.0273%" height="15" fill="rgb(247,70,47)" fg:x="7283" fg:w="21"/><text x="9.7070%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.03%)</title><rect x="9.4570%" y="1477" width="0.0273%" height="15" fill="rgb(228,85,35)" fg:x="7283" fg:w="21"/><text x="9.7070%" y="1487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.03%)</title><rect x="9.4570%" y="1461" width="0.0273%" height="15" fill="rgb(209,50,18)" fg:x="7283" fg:w="21"/><text x="9.7070%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (8 samples, 0.01%)</title><rect x="9.4907%" y="1189" width="0.0104%" height="15" fill="rgb(250,19,35)" fg:x="7309" fg:w="8"/><text x="9.7407%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (8 samples, 0.01%)</title><rect x="9.4907%" y="1173" width="0.0104%" height="15" fill="rgb(253,107,29)" fg:x="7309" fg:w="8"/><text x="9.7407%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="9.4907%" y="1157" width="0.0104%" height="15" fill="rgb(252,179,29)" fg:x="7309" fg:w="8"/><text x="9.7407%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.03%)</title><rect x="9.5011%" y="1141" width="0.0325%" height="15" fill="rgb(238,194,6)" fg:x="7317" fg:w="25"/><text x="9.7511%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.03%)</title><rect x="9.5011%" y="1125" width="0.0325%" height="15" fill="rgb(238,164,29)" fg:x="7317" fg:w="25"/><text x="9.7511%" y="1135.50"></text></g><g><title>cfree (25 samples, 0.03%)</title><rect x="9.5011%" y="1109" width="0.0325%" height="15" fill="rgb(224,25,9)" fg:x="7317" fg:w="25"/><text x="9.7511%" y="1119.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="9.5089%" y="1093" width="0.0247%" height="15" fill="rgb(244,153,23)" fg:x="7323" fg:w="19"/><text x="9.7589%" y="1103.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="9.5180%" y="1077" width="0.0156%" height="15" fill="rgb(212,203,14)" fg:x="7330" fg:w="12"/><text x="9.7680%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (26 samples, 0.03%)</title><rect x="9.5011%" y="1189" width="0.0338%" height="15" fill="rgb(220,164,20)" fg:x="7317" fg:w="26"/><text x="9.7511%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (26 samples, 0.03%)</title><rect x="9.5011%" y="1173" width="0.0338%" height="15" fill="rgb(222,203,48)" fg:x="7317" fg:w="26"/><text x="9.7511%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="9.5011%" y="1157" width="0.0338%" height="15" fill="rgb(215,159,22)" fg:x="7317" fg:w="26"/><text x="9.7511%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (10 samples, 0.01%)</title><rect x="9.5544%" y="1125" width="0.0130%" height="15" fill="rgb(216,183,47)" fg:x="7358" fg:w="10"/><text x="9.8044%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="9.5349%" y="1173" width="0.0338%" height="15" fill="rgb(229,195,25)" fg:x="7343" fg:w="26"/><text x="9.7849%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (24 samples, 0.03%)</title><rect x="9.5375%" y="1157" width="0.0312%" height="15" fill="rgb(224,132,51)" fg:x="7345" fg:w="24"/><text x="9.7875%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (22 samples, 0.03%)</title><rect x="9.5401%" y="1141" width="0.0286%" height="15" fill="rgb(240,63,7)" fg:x="7347" fg:w="22"/><text x="9.7901%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (38 samples, 0.05%)</title><rect x="9.5349%" y="1189" width="0.0493%" height="15" fill="rgb(249,182,41)" fg:x="7343" fg:w="38"/><text x="9.7849%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (12 samples, 0.02%)</title><rect x="9.5686%" y="1173" width="0.0156%" height="15" fill="rgb(243,47,26)" fg:x="7369" fg:w="12"/><text x="9.8186%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="9.5686%" y="1157" width="0.0156%" height="15" fill="rgb(233,48,2)" fg:x="7369" fg:w="12"/><text x="9.8186%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="9.5686%" y="1141" width="0.0156%" height="15" fill="rgb(244,165,34)" fg:x="7369" fg:w="12"/><text x="9.8186%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="9.5686%" y="1125" width="0.0156%" height="15" fill="rgb(207,89,7)" fg:x="7369" fg:w="12"/><text x="9.8186%" y="1135.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="9.5686%" y="1109" width="0.0156%" height="15" fill="rgb(244,117,36)" fg:x="7369" fg:w="12"/><text x="9.8186%" y="1119.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="9.5686%" y="1093" width="0.0156%" height="15" fill="rgb(226,144,34)" fg:x="7369" fg:w="12"/><text x="9.8186%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="9.5907%" y="1157" width="0.0234%" height="15" fill="rgb(213,23,19)" fg:x="7386" fg:w="18"/><text x="9.8407%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (17 samples, 0.02%)</title><rect x="9.5920%" y="1141" width="0.0221%" height="15" fill="rgb(217,75,12)" fg:x="7387" fg:w="17"/><text x="9.8420%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (15 samples, 0.02%)</title><rect x="9.5946%" y="1125" width="0.0195%" height="15" fill="rgb(224,159,17)" fg:x="7389" fg:w="15"/><text x="9.8446%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (24 samples, 0.03%)</title><rect x="9.5907%" y="1189" width="0.0312%" height="15" fill="rgb(217,118,1)" fg:x="7386" fg:w="24"/><text x="9.8407%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (24 samples, 0.03%)</title><rect x="9.5907%" y="1173" width="0.0312%" height="15" fill="rgb(232,180,48)" fg:x="7386" fg:w="24"/><text x="9.8407%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (105 samples, 0.14%)</title><rect x="9.4894%" y="1221" width="0.1363%" height="15" fill="rgb(230,27,33)" fg:x="7308" fg:w="105"/><text x="9.7394%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (105 samples, 0.14%)</title><rect x="9.4894%" y="1205" width="0.1363%" height="15" fill="rgb(205,31,21)" fg:x="7308" fg:w="105"/><text x="9.7394%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (114 samples, 0.15%)</title><rect x="9.4842%" y="1301" width="0.1480%" height="15" fill="rgb(253,59,4)" fg:x="7304" fg:w="114"/><text x="9.7342%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.15%)</title><rect x="9.4842%" y="1285" width="0.1480%" height="15" fill="rgb(224,201,9)" fg:x="7304" fg:w="114"/><text x="9.7342%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (114 samples, 0.15%)</title><rect x="9.4842%" y="1269" width="0.1480%" height="15" fill="rgb(229,206,30)" fg:x="7304" fg:w="114"/><text x="9.7342%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (114 samples, 0.15%)</title><rect x="9.4842%" y="1253" width="0.1480%" height="15" fill="rgb(212,67,47)" fg:x="7304" fg:w="114"/><text x="9.7342%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.15%)</title><rect x="9.4842%" y="1237" width="0.1480%" height="15" fill="rgb(211,96,50)" fg:x="7304" fg:w="114"/><text x="9.7342%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.02%)</title><rect x="9.6349%" y="1221" width="0.0169%" height="15" fill="rgb(252,114,18)" fg:x="7420" fg:w="13"/><text x="9.8849%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::StructType&gt; (12 samples, 0.02%)</title><rect x="9.6362%" y="1205" width="0.0156%" height="15" fill="rgb(223,58,37)" fg:x="7421" fg:w="12"/><text x="9.8862%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="9.6323%" y="1301" width="0.0221%" height="15" fill="rgb(237,70,4)" fg:x="7418" fg:w="17"/><text x="9.8823%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="9.6323%" y="1285" width="0.0221%" height="15" fill="rgb(244,85,46)" fg:x="7418" fg:w="17"/><text x="9.8823%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;]&gt; (17 samples, 0.02%)</title><rect x="9.6323%" y="1269" width="0.0221%" height="15" fill="rgb(223,39,52)" fg:x="7418" fg:w="17"/><text x="9.8823%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;&gt; (17 samples, 0.02%)</title><rect x="9.6323%" y="1253" width="0.0221%" height="15" fill="rgb(218,200,14)" fg:x="7418" fg:w="17"/><text x="9.8823%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="9.6323%" y="1237" width="0.0221%" height="15" fill="rgb(208,171,16)" fg:x="7418" fg:w="17"/><text x="9.8823%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::FunctionDefinition&gt;&gt; (13 samples, 0.02%)</title><rect x="9.6582%" y="1109" width="0.0169%" height="15" fill="rgb(234,200,18)" fg:x="7438" fg:w="13"/><text x="9.9082%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="9.6582%" y="1093" width="0.0169%" height="15" fill="rgb(228,45,11)" fg:x="7438" fg:w="13"/><text x="9.9082%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::FunctionDefinition]&gt; (13 samples, 0.02%)</title><rect x="9.6582%" y="1077" width="0.0169%" height="15" fill="rgb(237,182,11)" fg:x="7438" fg:w="13"/><text x="9.9082%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::FunctionDefinition&gt; (12 samples, 0.02%)</title><rect x="9.6595%" y="1061" width="0.0156%" height="15" fill="rgb(241,175,49)" fg:x="7439" fg:w="12"/><text x="9.9095%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;move_binary_format::file_format::CodeUnit&gt;&gt; (11 samples, 0.01%)</title><rect x="9.6608%" y="1045" width="0.0143%" height="15" fill="rgb(247,38,35)" fg:x="7440" fg:w="11"/><text x="9.9108%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CodeUnit&gt; (10 samples, 0.01%)</title><rect x="9.6621%" y="1029" width="0.0130%" height="15" fill="rgb(228,39,49)" fg:x="7441" fg:w="10"/><text x="9.9121%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (10 samples, 0.01%)</title><rect x="9.6621%" y="1013" width="0.0130%" height="15" fill="rgb(226,101,26)" fg:x="7441" fg:w="10"/><text x="9.9121%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (10 samples, 0.01%)</title><rect x="9.6621%" y="997" width="0.0130%" height="15" fill="rgb(206,141,19)" fg:x="7441" fg:w="10"/><text x="9.9121%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="9.6621%" y="981" width="0.0130%" height="15" fill="rgb(211,200,13)" fg:x="7441" fg:w="10"/><text x="9.9121%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="9.6621%" y="965" width="0.0130%" height="15" fill="rgb(241,121,6)" fg:x="7441" fg:w="10"/><text x="9.9121%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="9.6621%" y="949" width="0.0130%" height="15" fill="rgb(234,221,29)" fg:x="7441" fg:w="10"/><text x="9.9121%" y="959.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="9.6621%" y="933" width="0.0130%" height="15" fill="rgb(229,136,5)" fg:x="7441" fg:w="10"/><text x="9.9121%" y="943.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="9.6634%" y="917" width="0.0117%" height="15" fill="rgb(238,36,11)" fg:x="7442" fg:w="9"/><text x="9.9134%" y="927.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="9.6829%" y="1045" width="0.0169%" height="15" fill="rgb(251,55,41)" fg:x="7457" fg:w="13"/><text x="9.9329%" y="1055.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="9.6842%" y="1029" width="0.0156%" height="15" fill="rgb(242,34,40)" fg:x="7458" fg:w="12"/><text x="9.9342%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (15 samples, 0.02%)</title><rect x="9.7141%" y="981" width="0.0195%" height="15" fill="rgb(215,42,17)" fg:x="7481" fg:w="15"/><text x="9.9641%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (8 samples, 0.01%)</title><rect x="9.7232%" y="965" width="0.0104%" height="15" fill="rgb(207,44,46)" fg:x="7488" fg:w="8"/><text x="9.9732%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="9.6816%" y="1093" width="0.0532%" height="15" fill="rgb(211,206,28)" fg:x="7456" fg:w="41"/><text x="9.9316%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::Signature]&gt; (41 samples, 0.05%)</title><rect x="9.6816%" y="1077" width="0.0532%" height="15" fill="rgb(237,167,16)" fg:x="7456" fg:w="41"/><text x="9.9316%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (41 samples, 0.05%)</title><rect x="9.6816%" y="1061" width="0.0532%" height="15" fill="rgb(233,66,6)" fg:x="7456" fg:w="41"/><text x="9.9316%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (27 samples, 0.04%)</title><rect x="9.6998%" y="1045" width="0.0351%" height="15" fill="rgb(246,123,29)" fg:x="7470" fg:w="27"/><text x="9.9498%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.04%)</title><rect x="9.6998%" y="1029" width="0.0351%" height="15" fill="rgb(209,62,40)" fg:x="7470" fg:w="27"/><text x="9.9498%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (27 samples, 0.04%)</title><rect x="9.6998%" y="1013" width="0.0351%" height="15" fill="rgb(218,4,25)" fg:x="7470" fg:w="27"/><text x="9.9498%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (24 samples, 0.03%)</title><rect x="9.7037%" y="997" width="0.0312%" height="15" fill="rgb(253,91,49)" fg:x="7473" fg:w="24"/><text x="9.9537%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Signature&gt;&gt; (42 samples, 0.05%)</title><rect x="9.6816%" y="1109" width="0.0545%" height="15" fill="rgb(228,155,29)" fg:x="7456" fg:w="42"/><text x="9.9316%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="9.7478%" y="1093" width="0.0195%" height="15" fill="rgb(243,57,37)" fg:x="7507" fg:w="15"/><text x="9.9978%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::identifier::Identifier]&gt; (15 samples, 0.02%)</title><rect x="9.7478%" y="1077" width="0.0195%" height="15" fill="rgb(244,167,17)" fg:x="7507" fg:w="15"/><text x="9.9978%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (15 samples, 0.02%)</title><rect x="9.7478%" y="1061" width="0.0195%" height="15" fill="rgb(207,181,38)" fg:x="7507" fg:w="15"/><text x="9.9978%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (15 samples, 0.02%)</title><rect x="9.7478%" y="1045" width="0.0195%" height="15" fill="rgb(211,8,23)" fg:x="7507" fg:w="15"/><text x="9.9978%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.02%)</title><rect x="9.7478%" y="1029" width="0.0195%" height="15" fill="rgb(235,11,44)" fg:x="7507" fg:w="15"/><text x="9.9978%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="9.7478%" y="1013" width="0.0195%" height="15" fill="rgb(248,18,52)" fg:x="7507" fg:w="15"/><text x="9.9978%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="9.7504%" y="997" width="0.0169%" height="15" fill="rgb(208,4,7)" fg:x="7509" fg:w="13"/><text x="10.0004%" y="1007.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="9.7504%" y="981" width="0.0169%" height="15" fill="rgb(240,17,39)" fg:x="7509" fg:w="13"/><text x="10.0004%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::identifier::Identifier&gt;&gt; (17 samples, 0.02%)</title><rect x="9.7478%" y="1109" width="0.0221%" height="15" fill="rgb(207,170,3)" fg:x="7507" fg:w="17"/><text x="9.9978%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (92 samples, 0.12%)</title><rect x="9.6556%" y="1141" width="0.1195%" height="15" fill="rgb(236,100,52)" fg:x="7436" fg:w="92"/><text x="9.9056%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (92 samples, 0.12%)</title><rect x="9.6556%" y="1125" width="0.1195%" height="15" fill="rgb(246,78,51)" fg:x="7436" fg:w="92"/><text x="9.9056%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_binary_format::file_format::CompiledModule&gt;&gt; (93 samples, 0.12%)</title><rect x="9.6556%" y="1173" width="0.1208%" height="15" fill="rgb(211,17,15)" fg:x="7436" fg:w="93"/><text x="9.9056%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.12%)</title><rect x="9.6556%" y="1157" width="0.1208%" height="15" fill="rgb(209,59,46)" fg:x="7436" fg:w="93"/><text x="9.9056%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="9.7790%" y="1093" width="0.0117%" height="15" fill="rgb(210,92,25)" fg:x="7531" fg:w="9"/><text x="10.0290%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_runtime::loader::FunctionInstantiation&gt;&gt; (14 samples, 0.02%)</title><rect x="9.7790%" y="1173" width="0.0182%" height="15" fill="rgb(238,174,52)" fg:x="7531" fg:w="14"/><text x="10.0290%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="9.7790%" y="1157" width="0.0182%" height="15" fill="rgb(230,73,7)" fg:x="7531" fg:w="14"/><text x="10.0290%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_runtime::loader::FunctionInstantiation]&gt; (14 samples, 0.02%)</title><rect x="9.7790%" y="1141" width="0.0182%" height="15" fill="rgb(243,124,40)" fg:x="7531" fg:w="14"/><text x="10.0290%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::FunctionInstantiation&gt; (14 samples, 0.02%)</title><rect x="9.7790%" y="1125" width="0.0182%" height="15" fill="rgb(244,170,11)" fg:x="7531" fg:w="14"/><text x="10.0290%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (14 samples, 0.02%)</title><rect x="9.7790%" y="1109" width="0.0182%" height="15" fill="rgb(207,114,54)" fg:x="7531" fg:w="14"/><text x="10.0290%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (12 samples, 0.02%)</title><rect x="9.8050%" y="1093" width="0.0156%" height="15" fill="rgb(205,42,20)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (12 samples, 0.02%)</title><rect x="9.8050%" y="1077" width="0.0156%" height="15" fill="rgb(230,30,28)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::identifier::Identifier,usize)&gt; (12 samples, 0.02%)</title><rect x="9.8050%" y="1061" width="0.0156%" height="15" fill="rgb(205,73,54)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (12 samples, 0.02%)</title><rect x="9.8050%" y="1045" width="0.0156%" height="15" fill="rgb(254,227,23)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (12 samples, 0.02%)</title><rect x="9.8050%" y="1029" width="0.0156%" height="15" fill="rgb(228,202,34)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.02%)</title><rect x="9.8050%" y="1013" width="0.0156%" height="15" fill="rgb(222,225,37)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="9.8050%" y="997" width="0.0156%" height="15" fill="rgb(221,14,54)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="9.8050%" y="981" width="0.0156%" height="15" fill="rgb(254,102,2)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="991.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="9.8050%" y="965" width="0.0156%" height="15" fill="rgb(232,104,17)" fg:x="7551" fg:w="12"/><text x="10.0550%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="9.8037%" y="1125" width="0.0182%" height="15" fill="rgb(250,220,14)" fg:x="7550" fg:w="14"/><text x="10.0537%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (14 samples, 0.02%)</title><rect x="9.8037%" y="1109" width="0.0182%" height="15" fill="rgb(241,158,9)" fg:x="7550" fg:w="14"/><text x="10.0537%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (131 samples, 0.17%)</title><rect x="9.6543%" y="1285" width="0.1701%" height="15" fill="rgb(246,9,43)" fg:x="7435" fg:w="131"/><text x="9.9043%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.17%)</title><rect x="9.6543%" y="1269" width="0.1701%" height="15" fill="rgb(206,73,33)" fg:x="7435" fg:w="131"/><text x="9.9043%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (131 samples, 0.17%)</title><rect x="9.6543%" y="1253" width="0.1701%" height="15" fill="rgb(222,79,8)" fg:x="7435" fg:w="131"/><text x="9.9043%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (131 samples, 0.17%)</title><rect x="9.6543%" y="1237" width="0.1701%" height="15" fill="rgb(234,8,54)" fg:x="7435" fg:w="131"/><text x="9.9043%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.17%)</title><rect x="9.6543%" y="1221" width="0.1701%" height="15" fill="rgb(209,134,38)" fg:x="7435" fg:w="131"/><text x="9.9043%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (131 samples, 0.17%)</title><rect x="9.6543%" y="1205" width="0.1701%" height="15" fill="rgb(230,127,29)" fg:x="7435" fg:w="131"/><text x="9.9043%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (131 samples, 0.17%)</title><rect x="9.6543%" y="1189" width="0.1701%" height="15" fill="rgb(242,44,41)" fg:x="7435" fg:w="131"/><text x="9.9043%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;move_core_types::identifier::Identifier,usize&gt;&gt; (16 samples, 0.02%)</title><rect x="9.8037%" y="1173" width="0.0208%" height="15" fill="rgb(222,56,43)" fg:x="7550" fg:w="16"/><text x="10.0537%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;move_core_types::identifier::Identifier,usize,std::collections::hash::map::RandomState&gt;&gt; (16 samples, 0.02%)</title><rect x="9.8037%" y="1157" width="0.0208%" height="15" fill="rgb(238,39,47)" fg:x="7550" fg:w="16"/><text x="10.0537%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(move_core_types::identifier::Identifier,usize)&gt;&gt; (16 samples, 0.02%)</title><rect x="9.8037%" y="1141" width="0.0208%" height="15" fill="rgb(226,79,43)" fg:x="7550" fg:w="16"/><text x="10.0537%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (265 samples, 0.34%)</title><rect x="9.4842%" y="1349" width="0.3441%" height="15" fill="rgb(242,105,53)" fg:x="7304" fg:w="265"/><text x="9.7342%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (265 samples, 0.34%)</title><rect x="9.4842%" y="1333" width="0.3441%" height="15" fill="rgb(251,132,46)" fg:x="7304" fg:w="265"/><text x="9.7342%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (265 samples, 0.34%)</title><rect x="9.4842%" y="1317" width="0.3441%" height="15" fill="rgb(231,77,14)" fg:x="7304" fg:w="265"/><text x="9.7342%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (134 samples, 0.17%)</title><rect x="9.6543%" y="1301" width="0.1740%" height="15" fill="rgb(240,135,9)" fg:x="7435" fg:w="134"/><text x="9.9043%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1509" width="0.3545%" height="15" fill="rgb(248,109,14)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm::AptosVM&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1493" width="0.3545%" height="15" fill="rgb(227,146,52)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm_impl::AptosVMImpl&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1477" width="0.3545%" height="15" fill="rgb(232,54,3)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt;&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1461" width="0.3545%" height="15" fill="rgb(229,201,43)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (273 samples, 0.35%)</title><rect x="9.4842%" y="1445" width="0.3545%" height="15" fill="rgb(252,161,33)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1455.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (273 samples, 0.35%)</title><rect x="9.4842%" y="1429" width="0.3545%" height="15" fill="rgb(226,146,40)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1413" width="0.3545%" height="15" fill="rgb(219,47,25)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1397" width="0.3545%" height="15" fill="rgb(250,135,13)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1381" width="0.3545%" height="15" fill="rgb(219,229,18)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (273 samples, 0.35%)</title><rect x="9.4842%" y="1365" width="0.3545%" height="15" fill="rgb(217,152,27)" fg:x="7304" fg:w="273"/><text x="9.7342%" y="1375.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1685" width="9.2427%" height="15" fill="rgb(225,71,47)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1695.50">rayon_core::s..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1669" width="9.2427%" height="15" fill="rgb(220,139,14)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1679.50">rayon_core::s..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1653" width="9.2427%" height="15" fill="rgb(247,54,32)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1663.50">rayon_core::s..</text></g><g><title>rayon_core::unwind::halt_unwinding (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1637" width="9.2427%" height="15" fill="rgb(252,131,39)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1647.50">rayon_core::u..</text></g><g><title>std::panic::catch_unwind (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1621" width="9.2427%" height="15" fill="rgb(210,108,39)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1631.50">std::panic::c..</text></g><g><title>std::panicking::try (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1605" width="9.2427%" height="15" fill="rgb(205,23,29)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1615.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1589" width="9.2427%" height="15" fill="rgb(246,139,46)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1599.50">std::panickin..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1573" width="9.2427%" height="15" fill="rgb(250,81,26)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1583.50">&lt;core::panic:..</text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1557" width="9.2427%" height="15" fill="rgb(214,104,7)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1567.50">rayon_core::s..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1541" width="9.2427%" height="15" fill="rgb(233,189,8)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1551.50">aptos_block_e..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (7,118 samples, 9.24%)</title><rect x="0.6687%" y="1525" width="9.2427%" height="15" fill="rgb(228,141,17)" fg:x="515" fg:w="7118"/><text x="0.9187%" y="1535.50">aptos_block_e..</text></g><g><title>syscall (40 samples, 0.05%)</title><rect x="9.8595%" y="1509" width="0.0519%" height="15" fill="rgb(247,157,1)" fg:x="7593" fg:w="40"/><text x="10.1095%" y="1519.50"></text></g><g><title>[unknown] (36 samples, 0.05%)</title><rect x="9.8647%" y="1493" width="0.0467%" height="15" fill="rgb(249,225,5)" fg:x="7597" fg:w="36"/><text x="10.1147%" y="1503.50"></text></g><g><title>[unknown] (35 samples, 0.05%)</title><rect x="9.8660%" y="1477" width="0.0454%" height="15" fill="rgb(242,55,13)" fg:x="7598" fg:w="35"/><text x="10.1160%" y="1487.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="9.8673%" y="1461" width="0.0441%" height="15" fill="rgb(230,49,50)" fg:x="7599" fg:w="34"/><text x="10.1173%" y="1471.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="9.8881%" y="1445" width="0.0234%" height="15" fill="rgb(241,111,38)" fg:x="7615" fg:w="18"/><text x="10.1381%" y="1455.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="9.8946%" y="1429" width="0.0169%" height="15" fill="rgb(252,155,4)" fg:x="7620" fg:w="13"/><text x="10.1446%" y="1439.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="9.8985%" y="1413" width="0.0130%" height="15" fill="rgb(212,69,32)" fg:x="7623" fg:w="10"/><text x="10.1485%" y="1423.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="9.9257%" y="1445" width="0.0169%" height="15" fill="rgb(243,107,47)" fg:x="7644" fg:w="13"/><text x="10.1757%" y="1455.50"></text></g><g><title>[libc.so.6] (27 samples, 0.04%)</title><rect x="9.9114%" y="1461" width="0.0351%" height="15" fill="rgb(247,130,12)" fg:x="7633" fg:w="27"/><text x="10.1614%" y="1471.50"></text></g><g><title>cfree (29 samples, 0.04%)</title><rect x="9.9114%" y="1477" width="0.0377%" height="15" fill="rgb(233,74,16)" fg:x="7633" fg:w="29"/><text x="10.1614%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="9.9543%" y="1365" width="0.0104%" height="15" fill="rgb(208,58,18)" fg:x="7666" fg:w="8"/><text x="10.2043%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="9.9543%" y="1349" width="0.0104%" height="15" fill="rgb(242,225,1)" fg:x="7666" fg:w="8"/><text x="10.2043%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (8 samples, 0.01%)</title><rect x="9.9543%" y="1333" width="0.0104%" height="15" fill="rgb(249,39,40)" fg:x="7666" fg:w="8"/><text x="10.2043%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (20 samples, 0.03%)</title><rect x="9.9504%" y="1413" width="0.0260%" height="15" fill="rgb(207,72,44)" fg:x="7663" fg:w="20"/><text x="10.2004%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (20 samples, 0.03%)</title><rect x="9.9504%" y="1397" width="0.0260%" height="15" fill="rgb(215,193,12)" fg:x="7663" fg:w="20"/><text x="10.2004%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (17 samples, 0.02%)</title><rect x="9.9543%" y="1381" width="0.0221%" height="15" fill="rgb(248,41,39)" fg:x="7666" fg:w="17"/><text x="10.2043%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.07%)</title><rect x="9.9114%" y="1509" width="0.0688%" height="15" fill="rgb(253,85,4)" fg:x="7633" fg:w="53"/><text x="10.1614%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_vm::adapter_common::PreprocessedTransaction]&gt; (53 samples, 0.07%)</title><rect x="9.9114%" y="1493" width="0.0688%" height="15" fill="rgb(243,70,31)" fg:x="7633" fg:w="53"/><text x="10.1614%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt; (24 samples, 0.03%)</title><rect x="9.9491%" y="1477" width="0.0312%" height="15" fill="rgb(253,195,26)" fg:x="7662" fg:w="24"/><text x="10.1991%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aptos_types::transaction::SignatureCheckedTransaction&gt;&gt; (23 samples, 0.03%)</title><rect x="9.9504%" y="1461" width="0.0299%" height="15" fill="rgb(243,42,11)" fg:x="7663" fg:w="23"/><text x="10.2004%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignatureCheckedTransaction&gt; (23 samples, 0.03%)</title><rect x="9.9504%" y="1445" width="0.0299%" height="15" fill="rgb(239,66,17)" fg:x="7663" fg:w="23"/><text x="10.2004%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (23 samples, 0.03%)</title><rect x="9.9504%" y="1429" width="0.0299%" height="15" fill="rgb(217,132,21)" fg:x="7663" fg:w="23"/><text x="10.2004%" y="1439.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_block::{{closure}} (75 samples, 0.10%)</title><rect x="9.9114%" y="1573" width="0.0974%" height="15" fill="rgb(252,202,21)" fg:x="7633" fg:w="75"/><text x="10.1614%" y="1583.50"></text></g><g><title>core::mem::drop (75 samples, 0.10%)</title><rect x="9.9114%" y="1557" width="0.0974%" height="15" fill="rgb(233,98,36)" fg:x="7633" fg:w="75"/><text x="10.1614%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (75 samples, 0.10%)</title><rect x="9.9114%" y="1541" width="0.0974%" height="15" fill="rgb(216,153,54)" fg:x="7633" fg:w="75"/><text x="10.1614%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (75 samples, 0.10%)</title><rect x="9.9114%" y="1525" width="0.0974%" height="15" fill="rgb(250,99,7)" fg:x="7633" fg:w="75"/><text x="10.1614%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (22 samples, 0.03%)</title><rect x="9.9803%" y="1509" width="0.0286%" height="15" fill="rgb(207,56,50)" fg:x="7686" fg:w="22"/><text x="10.2303%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="9.9803%" y="1493" width="0.0286%" height="15" fill="rgb(244,61,34)" fg:x="7686" fg:w="22"/><text x="10.2303%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.03%)</title><rect x="9.9803%" y="1477" width="0.0286%" height="15" fill="rgb(241,50,38)" fg:x="7686" fg:w="22"/><text x="10.2303%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.03%)</title><rect x="9.9803%" y="1461" width="0.0286%" height="15" fill="rgb(212,166,30)" fg:x="7686" fg:w="22"/><text x="10.2303%" y="1471.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="9.9803%" y="1445" width="0.0286%" height="15" fill="rgb(249,127,32)" fg:x="7686" fg:w="22"/><text x="10.2303%" y="1455.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="9.9803%" y="1429" width="0.0286%" height="15" fill="rgb(209,103,0)" fg:x="7686" fg:w="22"/><text x="10.2303%" y="1439.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="9.9803%" y="1413" width="0.0286%" height="15" fill="rgb(238,209,51)" fg:x="7686" fg:w="22"/><text x="10.2303%" y="1423.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (27 samples, 0.04%)</title><rect x="10.0179%" y="1333" width="0.0351%" height="15" fill="rgb(237,56,23)" fg:x="7715" fg:w="27"/><text x="10.2679%" y="1343.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (27 samples, 0.04%)</title><rect x="10.0179%" y="1317" width="0.0351%" height="15" fill="rgb(215,153,46)" fg:x="7715" fg:w="27"/><text x="10.2679%" y="1327.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (11 samples, 0.01%)</title><rect x="10.0530%" y="1333" width="0.0143%" height="15" fill="rgb(224,49,31)" fg:x="7742" fg:w="11"/><text x="10.3030%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="10.0530%" y="1317" width="0.0143%" height="15" fill="rgb(250,18,42)" fg:x="7742" fg:w="11"/><text x="10.3030%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="10.0530%" y="1301" width="0.0143%" height="15" fill="rgb(215,176,39)" fg:x="7742" fg:w="11"/><text x="10.3030%" y="1311.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (42 samples, 0.05%)</title><rect x="10.0153%" y="1429" width="0.0545%" height="15" fill="rgb(223,77,29)" fg:x="7713" fg:w="42"/><text x="10.2653%" y="1439.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (42 samples, 0.05%)</title><rect x="10.0153%" y="1413" width="0.0545%" height="15" fill="rgb(234,94,52)" fg:x="7713" fg:w="42"/><text x="10.2653%" y="1423.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (41 samples, 0.05%)</title><rect x="10.0166%" y="1397" width="0.0532%" height="15" fill="rgb(220,154,50)" fg:x="7714" fg:w="41"/><text x="10.2666%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.05%)</title><rect x="10.0166%" y="1381" width="0.0532%" height="15" fill="rgb(212,11,10)" fg:x="7714" fg:w="41"/><text x="10.2666%" y="1391.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (41 samples, 0.05%)</title><rect x="10.0166%" y="1365" width="0.0532%" height="15" fill="rgb(205,166,19)" fg:x="7714" fg:w="41"/><text x="10.2666%" y="1375.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (40 samples, 0.05%)</title><rect x="10.0179%" y="1349" width="0.0519%" height="15" fill="rgb(244,198,16)" fg:x="7715" fg:w="40"/><text x="10.2679%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (141 samples, 0.18%)</title><rect x="10.1088%" y="1221" width="0.1831%" height="15" fill="rgb(219,69,12)" fg:x="7785" fg:w="141"/><text x="10.3588%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (141 samples, 0.18%)</title><rect x="10.1088%" y="1205" width="0.1831%" height="15" fill="rgb(245,30,7)" fg:x="7785" fg:w="141"/><text x="10.3588%" y="1215.50"></text></g><g><title>cfree (141 samples, 0.18%)</title><rect x="10.1088%" y="1189" width="0.1831%" height="15" fill="rgb(218,221,48)" fg:x="7785" fg:w="141"/><text x="10.3588%" y="1199.50"></text></g><g><title>[libc.so.6] (52 samples, 0.07%)</title><rect x="10.2244%" y="1173" width="0.0675%" height="15" fill="rgb(216,66,15)" fg:x="7874" fg:w="52"/><text x="10.4744%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (180 samples, 0.23%)</title><rect x="10.0738%" y="1317" width="0.2337%" height="15" fill="rgb(226,122,50)" fg:x="7758" fg:w="180"/><text x="10.3238%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;]&gt; (180 samples, 0.23%)</title><rect x="10.0738%" y="1301" width="0.2337%" height="15" fill="rgb(239,156,16)" fg:x="7758" fg:w="180"/><text x="10.3238%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt; (178 samples, 0.23%)</title><rect x="10.0764%" y="1285" width="0.2311%" height="15" fill="rgb(224,27,38)" fg:x="7760" fg:w="178"/><text x="10.3264%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (178 samples, 0.23%)</title><rect x="10.0764%" y="1269" width="0.2311%" height="15" fill="rgb(224,39,27)" fg:x="7760" fg:w="178"/><text x="10.3264%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (178 samples, 0.23%)</title><rect x="10.0764%" y="1253" width="0.2311%" height="15" fill="rgb(215,92,29)" fg:x="7760" fg:w="178"/><text x="10.3264%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (153 samples, 0.20%)</title><rect x="10.1088%" y="1237" width="0.1987%" height="15" fill="rgb(207,159,16)" fg:x="7785" fg:w="153"/><text x="10.3588%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.02%)</title><rect x="10.2919%" y="1221" width="0.0156%" height="15" fill="rgb(238,163,47)" fg:x="7926" fg:w="12"/><text x="10.5419%" y="1231.50"></text></g><g><title>[libc.so.6] (30 samples, 0.04%)</title><rect x="10.3348%" y="1221" width="0.0390%" height="15" fill="rgb(219,91,49)" fg:x="7959" fg:w="30"/><text x="10.5848%" y="1231.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="10.3581%" y="1205" width="0.0156%" height="15" fill="rgb(227,167,31)" fg:x="7977" fg:w="12"/><text x="10.6081%" y="1215.50"></text></g><g><title>[libc.so.6] (52 samples, 0.07%)</title><rect x="10.3088%" y="1237" width="0.0675%" height="15" fill="rgb(234,80,54)" fg:x="7939" fg:w="52"/><text x="10.5588%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (236 samples, 0.31%)</title><rect x="10.0712%" y="1349" width="0.3064%" height="15" fill="rgb(212,114,2)" fg:x="7756" fg:w="236"/><text x="10.3212%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt; (234 samples, 0.30%)</title><rect x="10.0738%" y="1333" width="0.3038%" height="15" fill="rgb(234,50,24)" fg:x="7758" fg:w="234"/><text x="10.3238%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt; (54 samples, 0.07%)</title><rect x="10.3075%" y="1317" width="0.0701%" height="15" fill="rgb(221,68,8)" fg:x="7938" fg:w="54"/><text x="10.5575%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.07%)</title><rect x="10.3075%" y="1301" width="0.0701%" height="15" fill="rgb(254,180,31)" fg:x="7938" fg:w="54"/><text x="10.5575%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.07%)</title><rect x="10.3075%" y="1285" width="0.0701%" height="15" fill="rgb(247,130,50)" fg:x="7938" fg:w="54"/><text x="10.5575%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 0.07%)</title><rect x="10.3075%" y="1269" width="0.0701%" height="15" fill="rgb(211,109,4)" fg:x="7938" fg:w="54"/><text x="10.5575%" y="1279.50"></text></g><g><title>cfree (54 samples, 0.07%)</title><rect x="10.3075%" y="1253" width="0.0701%" height="15" fill="rgb(238,50,21)" fg:x="7938" fg:w="54"/><text x="10.5575%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (282 samples, 0.37%)</title><rect x="10.0140%" y="1509" width="0.3662%" height="15" fill="rgb(225,57,45)" fg:x="7712" fg:w="282"/><text x="10.2640%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt;]&gt; (282 samples, 0.37%)</title><rect x="10.0140%" y="1493" width="0.3662%" height="15" fill="rgb(209,196,50)" fg:x="7712" fg:w="282"/><text x="10.2640%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt;&gt; (282 samples, 0.37%)</title><rect x="10.0140%" y="1477" width="0.3662%" height="15" fill="rgb(242,140,13)" fg:x="7712" fg:w="282"/><text x="10.2640%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt; (282 samples, 0.37%)</title><rect x="10.0140%" y="1461" width="0.3662%" height="15" fill="rgb(217,111,7)" fg:x="7712" fg:w="282"/><text x="10.2640%" y="1471.50"></text></g><g><title>&lt;arc_swap::ArcSwapAny&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (282 samples, 0.37%)</title><rect x="10.0140%" y="1445" width="0.3662%" height="15" fill="rgb(253,193,51)" fg:x="7712" fg:w="282"/><text x="10.2640%" y="1455.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::dec (239 samples, 0.31%)</title><rect x="10.0699%" y="1429" width="0.3103%" height="15" fill="rgb(252,70,29)" fg:x="7755" fg:w="239"/><text x="10.3199%" y="1439.50"></text></g><g><title>core::mem::drop (238 samples, 0.31%)</title><rect x="10.0712%" y="1413" width="0.3090%" height="15" fill="rgb(232,127,12)" fg:x="7756" fg:w="238"/><text x="10.3212%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt; (238 samples, 0.31%)</title><rect x="10.0712%" y="1397" width="0.3090%" height="15" fill="rgb(211,180,21)" fg:x="7756" fg:w="238"/><text x="10.3212%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt; (238 samples, 0.31%)</title><rect x="10.0712%" y="1381" width="0.3090%" height="15" fill="rgb(229,72,13)" fg:x="7756" fg:w="238"/><text x="10.3212%" y="1391.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (238 samples, 0.31%)</title><rect x="10.0712%" y="1365" width="0.3090%" height="15" fill="rgb(240,211,49)" fg:x="7756" fg:w="238"/><text x="10.3212%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (283 samples, 0.37%)</title><rect x="10.0140%" y="1525" width="0.3675%" height="15" fill="rgb(219,149,40)" fg:x="7712" fg:w="283"/><text x="10.2640%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.04%)</title><rect x="10.3815%" y="1509" width="0.0390%" height="15" fill="rgb(210,127,46)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt;]&gt; (30 samples, 0.04%)</title><rect x="10.3815%" y="1493" width="0.0390%" height="15" fill="rgb(220,106,7)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt;&gt; (30 samples, 0.04%)</title><rect x="10.3815%" y="1477" width="0.0390%" height="15" fill="rgb(249,31,22)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt; (30 samples, 0.04%)</title><rect x="10.3815%" y="1461" width="0.0390%" height="15" fill="rgb(253,1,49)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1471.50"></text></g><g><title>&lt;arc_swap::ArcSwapAny&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.04%)</title><rect x="10.3815%" y="1445" width="0.0390%" height="15" fill="rgb(227,144,33)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1455.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (30 samples, 0.04%)</title><rect x="10.3815%" y="1429" width="0.0390%" height="15" fill="rgb(249,163,44)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1439.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (30 samples, 0.04%)</title><rect x="10.3815%" y="1413" width="0.0390%" height="15" fill="rgb(234,15,39)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1423.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (30 samples, 0.04%)</title><rect x="10.3815%" y="1397" width="0.0390%" height="15" fill="rgb(207,66,16)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (30 samples, 0.04%)</title><rect x="10.3815%" y="1381" width="0.0390%" height="15" fill="rgb(233,112,24)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1391.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (30 samples, 0.04%)</title><rect x="10.3815%" y="1365" width="0.0390%" height="15" fill="rgb(230,90,22)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1375.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (30 samples, 0.04%)</title><rect x="10.3815%" y="1349" width="0.0390%" height="15" fill="rgb(229,61,13)" fg:x="7995" fg:w="30"/><text x="10.6315%" y="1359.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (29 samples, 0.04%)</title><rect x="10.3828%" y="1333" width="0.0377%" height="15" fill="rgb(225,57,24)" fg:x="7996" fg:w="29"/><text x="10.6328%" y="1343.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (29 samples, 0.04%)</title><rect x="10.3828%" y="1317" width="0.0377%" height="15" fill="rgb(208,169,48)" fg:x="7996" fg:w="29"/><text x="10.6328%" y="1327.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}} (318 samples, 0.41%)</title><rect x="10.0088%" y="1573" width="0.4129%" height="15" fill="rgb(244,218,51)" fg:x="7708" fg:w="318"/><text x="10.2588%" y="1583.50"></text></g><g><title>core::mem::drop (318 samples, 0.41%)</title><rect x="10.0088%" y="1557" width="0.4129%" height="15" fill="rgb(214,148,10)" fg:x="7708" fg:w="318"/><text x="10.2588%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;aptos_types::state_store::state_key::StateKey,aptos_vm::block_executor::AptosTransactionOutput,move_core_types::vm_status::VMStatus&gt;&gt; (314 samples, 0.41%)</title><rect x="10.0140%" y="1541" width="0.4077%" height="15" fill="rgb(225,174,27)" fg:x="7712" fg:w="314"/><text x="10.2640%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crossbeam_utils::cache_padded::CachePadded&lt;arc_swap::ArcSwapAny&lt;core::option::Option&lt;alloc::sync::Arc&lt;aptos_block_executor::task::ExecutionStatus&lt;aptos_vm::block_executor::AptosTransactionOutput,aptos_block_executor::errors::Error&lt;move_core_types::vm_status::VMStatus&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (31 samples, 0.04%)</title><rect x="10.3815%" y="1525" width="0.0403%" height="15" fill="rgb(230,96,26)" fg:x="7995" fg:w="31"/><text x="10.6315%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (18 samples, 0.02%)</title><rect x="10.4218%" y="1317" width="0.0234%" height="15" fill="rgb(232,10,30)" fg:x="8026" fg:w="18"/><text x="10.6718%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (18 samples, 0.02%)</title><rect x="10.4218%" y="1301" width="0.0234%" height="15" fill="rgb(222,8,50)" fg:x="8026" fg:w="18"/><text x="10.6718%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="10.4243%" y="1285" width="0.0208%" height="15" fill="rgb(213,81,27)" fg:x="8028" fg:w="16"/><text x="10.6743%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="10.4243%" y="1269" width="0.0208%" height="15" fill="rgb(245,50,10)" fg:x="8028" fg:w="16"/><text x="10.6743%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="10.4243%" y="1253" width="0.0208%" height="15" fill="rgb(216,100,18)" fg:x="8028" fg:w="16"/><text x="10.6743%" y="1263.50"></text></g><g><title>cfree (16 samples, 0.02%)</title><rect x="10.4243%" y="1237" width="0.0208%" height="15" fill="rgb(236,147,54)" fg:x="8028" fg:w="16"/><text x="10.6743%" y="1247.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (22 samples, 0.03%)</title><rect x="10.4464%" y="1173" width="0.0286%" height="15" fill="rgb(205,143,26)" fg:x="8045" fg:w="22"/><text x="10.6964%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (22 samples, 0.03%)</title><rect x="10.4464%" y="1157" width="0.0286%" height="15" fill="rgb(236,26,9)" fg:x="8045" fg:w="22"/><text x="10.6964%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (22 samples, 0.03%)</title><rect x="10.4464%" y="1141" width="0.0286%" height="15" fill="rgb(221,165,53)" fg:x="8045" fg:w="22"/><text x="10.6964%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="10.4490%" y="1125" width="0.0260%" height="15" fill="rgb(214,110,17)" fg:x="8047" fg:w="20"/><text x="10.6990%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.03%)</title><rect x="10.4490%" y="1109" width="0.0260%" height="15" fill="rgb(237,197,12)" fg:x="8047" fg:w="20"/><text x="10.6990%" y="1119.50"></text></g><g><title>cfree (20 samples, 0.03%)</title><rect x="10.4490%" y="1093" width="0.0260%" height="15" fill="rgb(205,84,17)" fg:x="8047" fg:w="20"/><text x="10.6990%" y="1103.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="10.4490%" y="1077" width="0.0260%" height="15" fill="rgb(237,18,45)" fg:x="8047" fg:w="20"/><text x="10.6990%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (10 samples, 0.01%)</title><rect x="10.4763%" y="1093" width="0.0130%" height="15" fill="rgb(221,87,14)" fg:x="8068" fg:w="10"/><text x="10.7263%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (39 samples, 0.05%)</title><rect x="10.4464%" y="1189" width="0.0506%" height="15" fill="rgb(238,186,15)" fg:x="8045" fg:w="39"/><text x="10.6964%" y="1199.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (17 samples, 0.02%)</title><rect x="10.4750%" y="1173" width="0.0221%" height="15" fill="rgb(208,115,11)" fg:x="8067" fg:w="17"/><text x="10.7250%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (17 samples, 0.02%)</title><rect x="10.4750%" y="1157" width="0.0221%" height="15" fill="rgb(254,175,0)" fg:x="8067" fg:w="17"/><text x="10.7250%" y="1167.50"></text></g><g><title>alloc::collections::btree::mem::replace (16 samples, 0.02%)</title><rect x="10.4763%" y="1141" width="0.0208%" height="15" fill="rgb(227,24,42)" fg:x="8068" fg:w="16"/><text x="10.7263%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (16 samples, 0.02%)</title><rect x="10.4763%" y="1125" width="0.0208%" height="15" fill="rgb(223,211,37)" fg:x="8068" fg:w="16"/><text x="10.7263%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (16 samples, 0.02%)</title><rect x="10.4763%" y="1109" width="0.0208%" height="15" fill="rgb(235,49,27)" fg:x="8068" fg:w="16"/><text x="10.7263%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (80 samples, 0.10%)</title><rect x="10.5737%" y="1029" width="0.1039%" height="15" fill="rgb(254,97,51)" fg:x="8143" fg:w="80"/><text x="10.8237%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (80 samples, 0.10%)</title><rect x="10.5737%" y="1013" width="0.1039%" height="15" fill="rgb(249,51,40)" fg:x="8143" fg:w="80"/><text x="10.8237%" y="1023.50"></text></g><g><title>cfree (79 samples, 0.10%)</title><rect x="10.5750%" y="997" width="0.1026%" height="15" fill="rgb(210,128,45)" fg:x="8144" fg:w="79"/><text x="10.8250%" y="1007.50"></text></g><g><title>[libc.so.6] (38 samples, 0.05%)</title><rect x="10.6282%" y="981" width="0.0493%" height="15" fill="rgb(224,137,50)" fg:x="8185" fg:w="38"/><text x="10.8782%" y="991.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="10.6646%" y="965" width="0.0130%" height="15" fill="rgb(242,15,9)" fg:x="8213" fg:w="10"/><text x="10.9146%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (82 samples, 0.11%)</title><rect x="10.5724%" y="1077" width="0.1065%" height="15" fill="rgb(233,187,41)" fg:x="8142" fg:w="82"/><text x="10.8224%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (81 samples, 0.11%)</title><rect x="10.5737%" y="1061" width="0.1052%" height="15" fill="rgb(227,2,29)" fg:x="8143" fg:w="81"/><text x="10.8237%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.11%)</title><rect x="10.5737%" y="1045" width="0.1052%" height="15" fill="rgb(222,70,3)" fg:x="8143" fg:w="81"/><text x="10.8237%" y="1055.50"></text></g><g><title>core::mem::drop (185 samples, 0.24%)</title><rect x="10.4464%" y="1237" width="0.2402%" height="15" fill="rgb(213,11,42)" fg:x="8045" fg:w="185"/><text x="10.6964%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;usize,crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt;&gt; (185 samples, 0.24%)</title><rect x="10.4464%" y="1221" width="0.2402%" height="15" fill="rgb(225,150,9)" fg:x="8045" fg:w="185"/><text x="10.6964%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (185 samples, 0.24%)</title><rect x="10.4464%" y="1205" width="0.2402%" height="15" fill="rgb(230,162,45)" fg:x="8045" fg:w="185"/><text x="10.6964%" y="1215.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (146 samples, 0.19%)</title><rect x="10.4971%" y="1189" width="0.1896%" height="15" fill="rgb(222,14,52)" fg:x="8084" fg:w="146"/><text x="10.7471%" y="1199.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (145 samples, 0.19%)</title><rect x="10.4984%" y="1173" width="0.1883%" height="15" fill="rgb(254,198,14)" fg:x="8085" fg:w="145"/><text x="10.7484%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (145 samples, 0.19%)</title><rect x="10.4984%" y="1157" width="0.1883%" height="15" fill="rgb(220,217,30)" fg:x="8085" fg:w="145"/><text x="10.7484%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt; (145 samples, 0.19%)</title><rect x="10.4984%" y="1141" width="0.1883%" height="15" fill="rgb(215,146,41)" fg:x="8085" fg:w="145"/><text x="10.7484%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::EntryCell&lt;aptos_types::write_set::WriteOp&gt;&gt; (145 samples, 0.19%)</title><rect x="10.4984%" y="1125" width="0.1883%" height="15" fill="rgb(217,27,36)" fg:x="8085" fg:w="145"/><text x="10.7484%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_types::write_set::WriteOp&gt;&gt; (129 samples, 0.17%)</title><rect x="10.5191%" y="1109" width="0.1675%" height="15" fill="rgb(219,218,39)" fg:x="8101" fg:w="129"/><text x="10.7691%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (129 samples, 0.17%)</title><rect x="10.5191%" y="1093" width="0.1675%" height="15" fill="rgb(219,4,42)" fg:x="8101" fg:w="129"/><text x="10.7691%" y="1103.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::drop_elements (205 samples, 0.27%)</title><rect x="10.4218%" y="1381" width="0.2662%" height="15" fill="rgb(249,119,36)" fg:x="8026" fg:w="205"/><text x="10.6718%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::drop (205 samples, 0.27%)</title><rect x="10.4218%" y="1365" width="0.2662%" height="15" fill="rgb(209,23,33)" fg:x="8026" fg:w="205"/><text x="10.6718%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (205 samples, 0.27%)</title><rect x="10.4218%" y="1349" width="0.2662%" height="15" fill="rgb(211,10,0)" fg:x="8026" fg:w="205"/><text x="10.6718%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;)&gt; (205 samples, 0.27%)</title><rect x="10.4218%" y="1333" width="0.2662%" height="15" fill="rgb(208,99,37)" fg:x="8026" fg:w="205"/><text x="10.6718%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (187 samples, 0.24%)</title><rect x="10.4451%" y="1317" width="0.2428%" height="15" fill="rgb(213,132,31)" fg:x="8044" fg:w="187"/><text x="10.6951%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (187 samples, 0.24%)</title><rect x="10.4451%" y="1301" width="0.2428%" height="15" fill="rgb(243,129,40)" fg:x="8044" fg:w="187"/><text x="10.6951%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt; (187 samples, 0.24%)</title><rect x="10.4451%" y="1285" width="0.2428%" height="15" fill="rgb(210,66,33)" fg:x="8044" fg:w="187"/><text x="10.6951%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;usize,crossbeam_utils::cache_padded::CachePadded&lt;aptos_mvhashmap::Entry&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt;&gt; (187 samples, 0.24%)</title><rect x="10.4451%" y="1269" width="0.2428%" height="15" fill="rgb(209,189,4)" fg:x="8044" fg:w="187"/><text x="10.6951%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (187 samples, 0.24%)</title><rect x="10.4451%" y="1253" width="0.2428%" height="15" fill="rgb(214,107,37)" fg:x="8044" fg:w="187"/><text x="10.6951%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (7,742 samples, 10.05%)</title><rect x="0.6687%" y="1701" width="10.0530%" height="15" fill="rgb(245,88,54)" fg:x="515" fg:w="7742"/><text x="0.9187%" y="1711.50">&lt;rayon_core::jo..</text></g><g><title>rayon_core::spawn::spawn_job::{{closure}} (624 samples, 0.81%)</title><rect x="9.9114%" y="1685" width="0.8103%" height="15" fill="rgb(205,146,20)" fg:x="7633" fg:w="624"/><text x="10.1614%" y="1695.50"></text></g><g><title>rayon_core::registry::Registry::catch_unwind (624 samples, 0.81%)</title><rect x="9.9114%" y="1669" width="0.8103%" height="15" fill="rgb(220,161,25)" fg:x="7633" fg:w="624"/><text x="10.1614%" y="1679.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (624 samples, 0.81%)</title><rect x="9.9114%" y="1653" width="0.8103%" height="15" fill="rgb(215,152,15)" fg:x="7633" fg:w="624"/><text x="10.1614%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (624 samples, 0.81%)</title><rect x="9.9114%" y="1637" width="0.8103%" height="15" fill="rgb(233,192,44)" fg:x="7633" fg:w="624"/><text x="10.1614%" y="1647.50"></text></g><g><title>std::panicking::try (624 samples, 0.81%)</title><rect x="9.9114%" y="1621" width="0.8103%" height="15" fill="rgb(240,170,46)" fg:x="7633" fg:w="624"/><text x="10.1614%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (624 samples, 0.81%)</title><rect x="9.9114%" y="1605" width="0.8103%" height="15" fill="rgb(207,104,33)" fg:x="7633" fg:w="624"/><text x="10.1614%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (624 samples, 0.81%)</title><rect x="9.9114%" y="1589" width="0.8103%" height="15" fill="rgb(219,21,39)" fg:x="7633" fg:w="624"/><text x="10.1614%" y="1599.50"></text></g><g><title>aptos_block_executor::output_delta_resolver::OutputDeltaResolver&lt;T&gt;::resolve::{{closure}} (231 samples, 0.30%)</title><rect x="10.4218%" y="1573" width="0.3000%" height="15" fill="rgb(214,133,29)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1583.50"></text></g><g><title>core::mem::drop (231 samples, 0.30%)</title><rect x="10.4218%" y="1557" width="0.3000%" height="15" fill="rgb(226,93,6)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::output_delta_resolver::OutputDeltaResolver&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1541" width="0.3000%" height="15" fill="rgb(252,222,34)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_mvhashmap::MVHashMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1525" width="0.3000%" height="15" fill="rgb(252,92,48)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;dashmap::DashMap&lt;aptos_types::state_store::state_key::StateKey,aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1509" width="0.3000%" height="15" fill="rgb(245,223,24)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[lock_api::rwlock::RwLock&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;]&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1493" width="0.3000%" height="15" fill="rgb(205,176,3)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[lock_api::rwlock::RwLock&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;]&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1477" width="0.3000%" height="15" fill="rgb(235,151,15)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1461" width="0.3000%" height="15" fill="rgb(237,209,11)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1445" width="0.3000%" height="15" fill="rgb(243,227,24)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1429" width="0.3000%" height="15" fill="rgb(239,193,16)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(aptos_types::state_store::state_key::StateKey,dashmap::util::SharedValue&lt;aptos_mvhashmap::VersionedValue&lt;aptos_types::write_set::WriteOp&gt;&gt;)&gt;&gt; (231 samples, 0.30%)</title><rect x="10.4218%" y="1413" width="0.3000%" height="15" fill="rgb(231,27,9)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (231 samples, 0.30%)</title><rect x="10.4218%" y="1397" width="0.3000%" height="15" fill="rgb(219,169,10)" fg:x="8026" fg:w="231"/><text x="10.6718%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::free_buckets (26 samples, 0.03%)</title><rect x="10.6879%" y="1381" width="0.0338%" height="15" fill="rgb(244,229,43)" fg:x="8231" fg:w="26"/><text x="10.9379%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (26 samples, 0.03%)</title><rect x="10.6879%" y="1365" width="0.0338%" height="15" fill="rgb(254,38,20)" fg:x="8231" fg:w="26"/><text x="10.9379%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (26 samples, 0.03%)</title><rect x="10.6879%" y="1349" width="0.0338%" height="15" fill="rgb(250,47,30)" fg:x="8231" fg:w="26"/><text x="10.9379%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.03%)</title><rect x="10.6879%" y="1333" width="0.0338%" height="15" fill="rgb(224,124,36)" fg:x="8231" fg:w="26"/><text x="10.9379%" y="1343.50"></text></g><g><title>cfree (26 samples, 0.03%)</title><rect x="10.6879%" y="1317" width="0.0338%" height="15" fill="rgb(246,68,51)" fg:x="8231" fg:w="26"/><text x="10.9379%" y="1327.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="10.6879%" y="1301" width="0.0338%" height="15" fill="rgb(253,43,49)" fg:x="8231" fg:w="26"/><text x="10.9379%" y="1311.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="10.6879%" y="1285" width="0.0338%" height="15" fill="rgb(219,54,36)" fg:x="8231" fg:w="26"/><text x="10.9379%" y="1295.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (49 samples, 0.06%)</title><rect x="10.7451%" y="1269" width="0.0636%" height="15" fill="rgb(227,133,34)" fg:x="8275" fg:w="49"/><text x="10.9951%" y="1279.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (47 samples, 0.06%)</title><rect x="10.7477%" y="1253" width="0.0610%" height="15" fill="rgb(247,227,15)" fg:x="8277" fg:w="47"/><text x="10.9977%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (54 samples, 0.07%)</title><rect x="10.7399%" y="1525" width="0.0701%" height="15" fill="rgb(229,96,14)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1535.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (54 samples, 0.07%)</title><rect x="10.7399%" y="1509" width="0.0701%" height="15" fill="rgb(220,79,17)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (54 samples, 0.07%)</title><rect x="10.7399%" y="1493" width="0.0701%" height="15" fill="rgb(205,131,53)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.07%)</title><rect x="10.7399%" y="1477" width="0.0701%" height="15" fill="rgb(209,50,29)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 0.07%)</title><rect x="10.7399%" y="1461" width="0.0701%" height="15" fill="rgb(245,86,46)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (54 samples, 0.07%)</title><rect x="10.7399%" y="1445" width="0.0701%" height="15" fill="rgb(235,66,46)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (54 samples, 0.07%)</title><rect x="10.7399%" y="1429" width="0.0701%" height="15" fill="rgb(232,148,31)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1439.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (54 samples, 0.07%)</title><rect x="10.7399%" y="1413" width="0.0701%" height="15" fill="rgb(217,149,8)" fg:x="8271" fg:w="54"/><text x="10.9899%" y="1423.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (51 samples, 0.07%)</title><rect x="10.7438%" y="1397" width="0.0662%" height="15" fill="rgb(209,183,11)" fg:x="8274" fg:w="51"/><text x="10.9938%" y="1407.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (50 samples, 0.06%)</title><rect x="10.7451%" y="1381" width="0.0649%" height="15" fill="rgb(208,55,20)" fg:x="8275" fg:w="50"/><text x="10.9951%" y="1391.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (50 samples, 0.06%)</title><rect x="10.7451%" y="1365" width="0.0649%" height="15" fill="rgb(218,39,14)" fg:x="8275" fg:w="50"/><text x="10.9951%" y="1375.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (50 samples, 0.06%)</title><rect x="10.7451%" y="1349" width="0.0649%" height="15" fill="rgb(216,169,33)" fg:x="8275" fg:w="50"/><text x="10.9951%" y="1359.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (50 samples, 0.06%)</title><rect x="10.7451%" y="1333" width="0.0649%" height="15" fill="rgb(233,80,24)" fg:x="8275" fg:w="50"/><text x="10.9951%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (50 samples, 0.06%)</title><rect x="10.7451%" y="1317" width="0.0649%" height="15" fill="rgb(213,179,31)" fg:x="8275" fg:w="50"/><text x="10.9951%" y="1327.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (50 samples, 0.06%)</title><rect x="10.7451%" y="1301" width="0.0649%" height="15" fill="rgb(209,19,5)" fg:x="8275" fg:w="50"/><text x="10.9951%" y="1311.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (50 samples, 0.06%)</title><rect x="10.7451%" y="1285" width="0.0649%" height="15" fill="rgb(219,18,35)" fg:x="8275" fg:w="50"/><text x="10.9951%" y="1295.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (33 samples, 0.04%)</title><rect x="10.8178%" y="1157" width="0.0429%" height="15" fill="rgb(209,169,16)" fg:x="8331" fg:w="33"/><text x="11.0678%" y="1167.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (29 samples, 0.04%)</title><rect x="10.8230%" y="1141" width="0.0377%" height="15" fill="rgb(245,90,51)" fg:x="8335" fg:w="29"/><text x="11.0730%" y="1151.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (34 samples, 0.04%)</title><rect x="10.8178%" y="1253" width="0.0441%" height="15" fill="rgb(220,99,45)" fg:x="8331" fg:w="34"/><text x="11.0678%" y="1263.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (34 samples, 0.04%)</title><rect x="10.8178%" y="1237" width="0.0441%" height="15" fill="rgb(249,89,25)" fg:x="8331" fg:w="34"/><text x="11.0678%" y="1247.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (34 samples, 0.04%)</title><rect x="10.8178%" y="1221" width="0.0441%" height="15" fill="rgb(239,193,0)" fg:x="8331" fg:w="34"/><text x="11.0678%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.04%)</title><rect x="10.8178%" y="1205" width="0.0441%" height="15" fill="rgb(231,126,1)" fg:x="8331" fg:w="34"/><text x="11.0678%" y="1215.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (34 samples, 0.04%)</title><rect x="10.8178%" y="1189" width="0.0441%" height="15" fill="rgb(243,166,3)" fg:x="8331" fg:w="34"/><text x="11.0678%" y="1199.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (34 samples, 0.04%)</title><rect x="10.8178%" y="1173" width="0.0441%" height="15" fill="rgb(223,22,34)" fg:x="8331" fg:w="34"/><text x="11.0678%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (39 samples, 0.05%)</title><rect x="10.8126%" y="1413" width="0.0506%" height="15" fill="rgb(251,52,51)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1423.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (39 samples, 0.05%)</title><rect x="10.8126%" y="1397" width="0.0506%" height="15" fill="rgb(221,165,28)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (39 samples, 0.05%)</title><rect x="10.8126%" y="1381" width="0.0506%" height="15" fill="rgb(218,121,47)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.05%)</title><rect x="10.8126%" y="1365" width="0.0506%" height="15" fill="rgb(209,120,9)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (39 samples, 0.05%)</title><rect x="10.8126%" y="1349" width="0.0506%" height="15" fill="rgb(236,68,12)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (39 samples, 0.05%)</title><rect x="10.8126%" y="1333" width="0.0506%" height="15" fill="rgb(225,194,26)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1343.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (39 samples, 0.05%)</title><rect x="10.8126%" y="1317" width="0.0506%" height="15" fill="rgb(231,84,39)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1327.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (39 samples, 0.05%)</title><rect x="10.8126%" y="1301" width="0.0506%" height="15" fill="rgb(210,11,45)" fg:x="8327" fg:w="39"/><text x="11.0626%" y="1311.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (38 samples, 0.05%)</title><rect x="10.8139%" y="1285" width="0.0493%" height="15" fill="rgb(224,54,52)" fg:x="8328" fg:w="38"/><text x="11.0639%" y="1295.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (35 samples, 0.05%)</title><rect x="10.8178%" y="1269" width="0.0454%" height="15" fill="rgb(238,102,14)" fg:x="8331" fg:w="35"/><text x="11.0678%" y="1279.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="10.8632%" y="1365" width="0.0130%" height="15" fill="rgb(243,160,52)" fg:x="8366" fg:w="10"/><text x="11.1132%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.01%)</title><rect x="10.8632%" y="1349" width="0.0130%" height="15" fill="rgb(216,114,19)" fg:x="8366" fg:w="10"/><text x="11.1132%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="10.8632%" y="1333" width="0.0130%" height="15" fill="rgb(244,166,37)" fg:x="8366" fg:w="10"/><text x="11.1132%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="10.8632%" y="1317" width="0.0130%" height="15" fill="rgb(246,29,44)" fg:x="8366" fg:w="10"/><text x="11.1132%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 0.01%)</title><rect x="10.8775%" y="1125" width="0.0143%" height="15" fill="rgb(215,56,53)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1135.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.01%)</title><rect x="10.8775%" y="1109" width="0.0143%" height="15" fill="rgb(217,60,2)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (11 samples, 0.01%)</title><rect x="10.8775%" y="1093" width="0.0143%" height="15" fill="rgb(207,26,24)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="10.8775%" y="1077" width="0.0143%" height="15" fill="rgb(252,210,15)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="10.8775%" y="1061" width="0.0143%" height="15" fill="rgb(253,209,26)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="10.8775%" y="1045" width="0.0143%" height="15" fill="rgb(238,170,14)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.01%)</title><rect x="10.8775%" y="1029" width="0.0143%" height="15" fill="rgb(216,178,15)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1039.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="10.8775%" y="1013" width="0.0143%" height="15" fill="rgb(250,197,2)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1023.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (11 samples, 0.01%)</title><rect x="10.8775%" y="997" width="0.0143%" height="15" fill="rgb(212,70,42)" fg:x="8377" fg:w="11"/><text x="11.1275%" y="1007.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (10 samples, 0.01%)</title><rect x="10.8788%" y="981" width="0.0130%" height="15" fill="rgb(227,213,9)" fg:x="8378" fg:w="10"/><text x="11.1288%" y="991.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (10 samples, 0.01%)</title><rect x="10.8788%" y="965" width="0.0130%" height="15" fill="rgb(245,99,25)" fg:x="8378" fg:w="10"/><text x="11.1288%" y="975.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (10 samples, 0.01%)</title><rect x="10.8788%" y="949" width="0.0130%" height="15" fill="rgb(250,82,29)" fg:x="8378" fg:w="10"/><text x="11.1288%" y="959.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (10 samples, 0.01%)</title><rect x="10.8788%" y="933" width="0.0130%" height="15" fill="rgb(241,226,54)" fg:x="8378" fg:w="10"/><text x="11.1288%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.01%)</title><rect x="10.8788%" y="917" width="0.0130%" height="15" fill="rgb(221,99,41)" fg:x="8378" fg:w="10"/><text x="11.1288%" y="927.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (10 samples, 0.01%)</title><rect x="10.8788%" y="901" width="0.0130%" height="15" fill="rgb(213,90,21)" fg:x="8378" fg:w="10"/><text x="11.1288%" y="911.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (10 samples, 0.01%)</title><rect x="10.8788%" y="885" width="0.0130%" height="15" fill="rgb(205,208,24)" fg:x="8378" fg:w="10"/><text x="11.1288%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (23 samples, 0.03%)</title><rect x="10.8775%" y="1333" width="0.0299%" height="15" fill="rgb(246,31,12)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1343.50"></text></g><g><title>rayon_core::job::JobRef::execute (23 samples, 0.03%)</title><rect x="10.8775%" y="1317" width="0.0299%" height="15" fill="rgb(213,154,6)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1327.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.03%)</title><rect x="10.8775%" y="1301" width="0.0299%" height="15" fill="rgb(222,163,29)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1311.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (23 samples, 0.03%)</title><rect x="10.8775%" y="1285" width="0.0299%" height="15" fill="rgb(227,201,8)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.03%)</title><rect x="10.8775%" y="1269" width="0.0299%" height="15" fill="rgb(233,9,32)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="10.8775%" y="1253" width="0.0299%" height="15" fill="rgb(217,54,24)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1263.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="10.8775%" y="1237" width="0.0299%" height="15" fill="rgb(235,192,0)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="10.8775%" y="1221" width="0.0299%" height="15" fill="rgb(235,45,9)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="10.8775%" y="1205" width="0.0299%" height="15" fill="rgb(246,42,40)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1215.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (23 samples, 0.03%)</title><rect x="10.8775%" y="1189" width="0.0299%" height="15" fill="rgb(248,111,24)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (23 samples, 0.03%)</title><rect x="10.8775%" y="1173" width="0.0299%" height="15" fill="rgb(249,65,22)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.03%)</title><rect x="10.8775%" y="1157" width="0.0299%" height="15" fill="rgb(238,111,51)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="10.8775%" y="1141" width="0.0299%" height="15" fill="rgb(250,118,22)" fg:x="8377" fg:w="23"/><text x="11.1275%" y="1151.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.02%)</title><rect x="10.8918%" y="1125" width="0.0156%" height="15" fill="rgb(234,84,26)" fg:x="8388" fg:w="12"/><text x="11.1418%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.02%)</title><rect x="10.8918%" y="1109" width="0.0156%" height="15" fill="rgb(243,172,12)" fg:x="8388" fg:w="12"/><text x="11.1418%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.02%)</title><rect x="10.8918%" y="1093" width="0.0156%" height="15" fill="rgb(236,150,49)" fg:x="8388" fg:w="12"/><text x="11.1418%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="10.8931%" y="1077" width="0.0143%" height="15" fill="rgb(225,197,26)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="10.8931%" y="1061" width="0.0143%" height="15" fill="rgb(214,17,42)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="1071.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="10.8931%" y="1045" width="0.0143%" height="15" fill="rgb(224,165,40)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="10.8931%" y="1029" width="0.0143%" height="15" fill="rgb(246,100,4)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="10.8931%" y="1013" width="0.0143%" height="15" fill="rgb(222,103,0)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="10.8931%" y="997" width="0.0143%" height="15" fill="rgb(227,189,26)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="10.8931%" y="981" width="0.0143%" height="15" fill="rgb(214,202,17)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="10.8931%" y="965" width="0.0143%" height="15" fill="rgb(229,111,3)" fg:x="8389" fg:w="11"/><text x="11.1431%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (15 samples, 0.02%)</title><rect x="10.9074%" y="1317" width="0.0195%" height="15" fill="rgb(229,172,15)" fg:x="8400" fg:w="15"/><text x="11.1574%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (15 samples, 0.02%)</title><rect x="10.9074%" y="1301" width="0.0195%" height="15" fill="rgb(230,224,35)" fg:x="8400" fg:w="15"/><text x="11.1574%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (15 samples, 0.02%)</title><rect x="10.9074%" y="1285" width="0.0195%" height="15" fill="rgb(251,141,6)" fg:x="8400" fg:w="15"/><text x="11.1574%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (15 samples, 0.02%)</title><rect x="10.9074%" y="1269" width="0.0195%" height="15" fill="rgb(225,208,6)" fg:x="8400" fg:w="15"/><text x="11.1574%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.02%)</title><rect x="10.9074%" y="1253" width="0.0195%" height="15" fill="rgb(246,181,16)" fg:x="8400" fg:w="15"/><text x="11.1574%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.02%)</title><rect x="10.9074%" y="1237" width="0.0195%" height="15" fill="rgb(227,129,36)" fg:x="8400" fg:w="15"/><text x="11.1574%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.02%)</title><rect x="10.9087%" y="1221" width="0.0182%" height="15" fill="rgb(248,117,24)" fg:x="8401" fg:w="14"/><text x="11.1587%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.01%)</title><rect x="10.9152%" y="1205" width="0.0117%" height="15" fill="rgb(214,185,35)" fg:x="8406" fg:w="9"/><text x="11.1652%" y="1215.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="10.9152%" y="1189" width="0.0117%" height="15" fill="rgb(236,150,34)" fg:x="8406" fg:w="9"/><text x="11.1652%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (8 samples, 0.01%)</title><rect x="10.9165%" y="1173" width="0.0104%" height="15" fill="rgb(243,228,27)" fg:x="8407" fg:w="8"/><text x="11.1665%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (8 samples, 0.01%)</title><rect x="10.9165%" y="1157" width="0.0104%" height="15" fill="rgb(245,77,44)" fg:x="8407" fg:w="8"/><text x="11.1665%" y="1167.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (8 samples, 0.01%)</title><rect x="10.9165%" y="1141" width="0.0104%" height="15" fill="rgb(235,214,42)" fg:x="8407" fg:w="8"/><text x="11.1665%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (18 samples, 0.02%)</title><rect x="10.9074%" y="1333" width="0.0234%" height="15" fill="rgb(221,74,3)" fg:x="8400" fg:w="18"/><text x="11.1574%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (52 samples, 0.07%)</title><rect x="10.8762%" y="1365" width="0.0675%" height="15" fill="rgb(206,121,29)" fg:x="8376" fg:w="52"/><text x="11.1262%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (52 samples, 0.07%)</title><rect x="10.8762%" y="1349" width="0.0675%" height="15" fill="rgb(249,131,53)" fg:x="8376" fg:w="52"/><text x="11.1262%" y="1359.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (21 samples, 0.03%)</title><rect x="10.9437%" y="981" width="0.0273%" height="15" fill="rgb(236,170,29)" fg:x="8428" fg:w="21"/><text x="11.1937%" y="991.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (21 samples, 0.03%)</title><rect x="10.9437%" y="965" width="0.0273%" height="15" fill="rgb(247,96,15)" fg:x="8428" fg:w="21"/><text x="11.1937%" y="975.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (24 samples, 0.03%)</title><rect x="10.9437%" y="1237" width="0.0312%" height="15" fill="rgb(211,210,7)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1247.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (24 samples, 0.03%)</title><rect x="10.9437%" y="1221" width="0.0312%" height="15" fill="rgb(240,88,50)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (24 samples, 0.03%)</title><rect x="10.9437%" y="1205" width="0.0312%" height="15" fill="rgb(209,229,26)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.03%)</title><rect x="10.9437%" y="1189" width="0.0312%" height="15" fill="rgb(210,68,23)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.03%)</title><rect x="10.9437%" y="1173" width="0.0312%" height="15" fill="rgb(229,180,13)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (24 samples, 0.03%)</title><rect x="10.9437%" y="1157" width="0.0312%" height="15" fill="rgb(236,53,44)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (24 samples, 0.03%)</title><rect x="10.9437%" y="1141" width="0.0312%" height="15" fill="rgb(244,214,29)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1151.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (24 samples, 0.03%)</title><rect x="10.9437%" y="1125" width="0.0312%" height="15" fill="rgb(220,75,29)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1135.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (24 samples, 0.03%)</title><rect x="10.9437%" y="1109" width="0.0312%" height="15" fill="rgb(214,183,37)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1119.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (24 samples, 0.03%)</title><rect x="10.9437%" y="1093" width="0.0312%" height="15" fill="rgb(239,117,29)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1103.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (24 samples, 0.03%)</title><rect x="10.9437%" y="1077" width="0.0312%" height="15" fill="rgb(237,171,35)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1087.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (24 samples, 0.03%)</title><rect x="10.9437%" y="1061" width="0.0312%" height="15" fill="rgb(229,178,53)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1071.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (24 samples, 0.03%)</title><rect x="10.9437%" y="1045" width="0.0312%" height="15" fill="rgb(210,102,19)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.03%)</title><rect x="10.9437%" y="1029" width="0.0312%" height="15" fill="rgb(235,127,22)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1039.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (24 samples, 0.03%)</title><rect x="10.9437%" y="1013" width="0.0312%" height="15" fill="rgb(244,31,31)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1023.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (24 samples, 0.03%)</title><rect x="10.9437%" y="997" width="0.0312%" height="15" fill="rgb(231,43,21)" fg:x="8428" fg:w="24"/><text x="11.1937%" y="1007.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (138 samples, 0.18%)</title><rect x="10.8126%" y="1477" width="0.1792%" height="15" fill="rgb(217,131,35)" fg:x="8327" fg:w="138"/><text x="11.0626%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (138 samples, 0.18%)</title><rect x="10.8126%" y="1461" width="0.1792%" height="15" fill="rgb(221,149,4)" fg:x="8327" fg:w="138"/><text x="11.0626%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (138 samples, 0.18%)</title><rect x="10.8126%" y="1445" width="0.1792%" height="15" fill="rgb(232,170,28)" fg:x="8327" fg:w="138"/><text x="11.0626%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (138 samples, 0.18%)</title><rect x="10.8126%" y="1429" width="0.1792%" height="15" fill="rgb(238,56,10)" fg:x="8327" fg:w="138"/><text x="11.0626%" y="1439.50"></text></g><g><title>rayon_core::join::join_context (99 samples, 0.13%)</title><rect x="10.8632%" y="1413" width="0.1286%" height="15" fill="rgb(235,196,14)" fg:x="8366" fg:w="99"/><text x="11.1132%" y="1423.50"></text></g><g><title>rayon_core::registry::in_worker (99 samples, 0.13%)</title><rect x="10.8632%" y="1397" width="0.1286%" height="15" fill="rgb(216,45,48)" fg:x="8366" fg:w="99"/><text x="11.1132%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (99 samples, 0.13%)</title><rect x="10.8632%" y="1381" width="0.1286%" height="15" fill="rgb(238,213,17)" fg:x="8366" fg:w="99"/><text x="11.1132%" y="1391.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (37 samples, 0.05%)</title><rect x="10.9437%" y="1365" width="0.0480%" height="15" fill="rgb(212,13,2)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.05%)</title><rect x="10.9437%" y="1349" width="0.0480%" height="15" fill="rgb(240,114,20)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1359.50"></text></g><g><title>std::panicking::try (37 samples, 0.05%)</title><rect x="10.9437%" y="1333" width="0.0480%" height="15" fill="rgb(228,41,40)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.05%)</title><rect x="10.9437%" y="1317" width="0.0480%" height="15" fill="rgb(244,132,35)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.05%)</title><rect x="10.9437%" y="1301" width="0.0480%" height="15" fill="rgb(253,189,4)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (37 samples, 0.05%)</title><rect x="10.9437%" y="1285" width="0.0480%" height="15" fill="rgb(224,37,19)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.05%)</title><rect x="10.9437%" y="1269" width="0.0480%" height="15" fill="rgb(235,223,18)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.05%)</title><rect x="10.9437%" y="1253" width="0.0480%" height="15" fill="rgb(235,163,25)" fg:x="8428" fg:w="37"/><text x="11.1937%" y="1263.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="10.9749%" y="1237" width="0.0169%" height="15" fill="rgb(217,145,28)" fg:x="8452" fg:w="13"/><text x="11.2249%" y="1247.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="10.9749%" y="1221" width="0.0169%" height="15" fill="rgb(223,223,32)" fg:x="8452" fg:w="13"/><text x="11.2249%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="10.9749%" y="1205" width="0.0169%" height="15" fill="rgb(227,189,39)" fg:x="8452" fg:w="13"/><text x="11.2249%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="10.9814%" y="1189" width="0.0104%" height="15" fill="rgb(248,10,22)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="10.9814%" y="1173" width="0.0104%" height="15" fill="rgb(248,46,39)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1183.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="10.9814%" y="1157" width="0.0104%" height="15" fill="rgb(248,113,48)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="10.9814%" y="1141" width="0.0104%" height="15" fill="rgb(245,16,25)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="10.9814%" y="1125" width="0.0104%" height="15" fill="rgb(249,152,16)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="10.9814%" y="1109" width="0.0104%" height="15" fill="rgb(250,16,1)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="10.9814%" y="1093" width="0.0104%" height="15" fill="rgb(249,138,3)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="10.9814%" y="1077" width="0.0104%" height="15" fill="rgb(227,71,41)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="10.9814%" y="1061" width="0.0104%" height="15" fill="rgb(209,184,23)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="10.9814%" y="1045" width="0.0104%" height="15" fill="rgb(223,215,31)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="10.9814%" y="1029" width="0.0104%" height="15" fill="rgb(210,146,28)" fg:x="8457" fg:w="8"/><text x="11.2314%" y="1039.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (18 samples, 0.02%)</title><rect x="10.9983%" y="981" width="0.0234%" height="15" fill="rgb(209,183,41)" fg:x="8470" fg:w="18"/><text x="11.2483%" y="991.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="10.9996%" y="965" width="0.0221%" height="15" fill="rgb(209,224,45)" fg:x="8471" fg:w="17"/><text x="11.2496%" y="975.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (19 samples, 0.02%)</title><rect x="10.9983%" y="1237" width="0.0247%" height="15" fill="rgb(224,209,51)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1247.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.02%)</title><rect x="10.9983%" y="1221" width="0.0247%" height="15" fill="rgb(223,17,39)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (19 samples, 0.02%)</title><rect x="10.9983%" y="1205" width="0.0247%" height="15" fill="rgb(234,204,37)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="10.9983%" y="1189" width="0.0247%" height="15" fill="rgb(236,120,5)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="10.9983%" y="1173" width="0.0247%" height="15" fill="rgb(248,97,27)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.02%)</title><rect x="10.9983%" y="1157" width="0.0247%" height="15" fill="rgb(240,66,17)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.02%)</title><rect x="10.9983%" y="1141" width="0.0247%" height="15" fill="rgb(210,79,3)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1151.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="10.9983%" y="1125" width="0.0247%" height="15" fill="rgb(214,176,27)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1135.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (19 samples, 0.02%)</title><rect x="10.9983%" y="1109" width="0.0247%" height="15" fill="rgb(235,185,3)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1119.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (19 samples, 0.02%)</title><rect x="10.9983%" y="1093" width="0.0247%" height="15" fill="rgb(227,24,12)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1103.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (19 samples, 0.02%)</title><rect x="10.9983%" y="1077" width="0.0247%" height="15" fill="rgb(252,169,48)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1087.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (19 samples, 0.02%)</title><rect x="10.9983%" y="1061" width="0.0247%" height="15" fill="rgb(212,65,1)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1071.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (19 samples, 0.02%)</title><rect x="10.9983%" y="1045" width="0.0247%" height="15" fill="rgb(242,39,24)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="10.9983%" y="1029" width="0.0247%" height="15" fill="rgb(249,32,23)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1039.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (19 samples, 0.02%)</title><rect x="10.9983%" y="1013" width="0.0247%" height="15" fill="rgb(251,195,23)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1023.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (19 samples, 0.02%)</title><rect x="10.9983%" y="997" width="0.0247%" height="15" fill="rgb(236,174,8)" fg:x="8470" fg:w="19"/><text x="11.2483%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10 samples, 0.01%)</title><rect x="11.0398%" y="901" width="0.0130%" height="15" fill="rgb(220,197,8)" fg:x="8502" fg:w="10"/><text x="11.2898%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="11.0398%" y="885" width="0.0130%" height="15" fill="rgb(240,108,37)" fg:x="8502" fg:w="10"/><text x="11.2898%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (27 samples, 0.04%)</title><rect x="11.0320%" y="1157" width="0.0351%" height="15" fill="rgb(232,176,24)" fg:x="8496" fg:w="27"/><text x="11.2820%" y="1167.50"></text></g><g><title>rayon_core::job::JobRef::execute (27 samples, 0.04%)</title><rect x="11.0320%" y="1141" width="0.0351%" height="15" fill="rgb(243,35,29)" fg:x="8496" fg:w="27"/><text x="11.2820%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27 samples, 0.04%)</title><rect x="11.0320%" y="1125" width="0.0351%" height="15" fill="rgb(210,37,18)" fg:x="8496" fg:w="27"/><text x="11.2820%" y="1135.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (25 samples, 0.03%)</title><rect x="11.0346%" y="1109" width="0.0325%" height="15" fill="rgb(224,184,40)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.03%)</title><rect x="11.0346%" y="1093" width="0.0325%" height="15" fill="rgb(236,39,29)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="11.0346%" y="1077" width="0.0325%" height="15" fill="rgb(232,48,39)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1087.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="11.0346%" y="1061" width="0.0325%" height="15" fill="rgb(236,34,42)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="11.0346%" y="1045" width="0.0325%" height="15" fill="rgb(243,106,37)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="11.0346%" y="1029" width="0.0325%" height="15" fill="rgb(218,96,6)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1039.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (25 samples, 0.03%)</title><rect x="11.0346%" y="1013" width="0.0325%" height="15" fill="rgb(235,130,12)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.03%)</title><rect x="11.0346%" y="997" width="0.0325%" height="15" fill="rgb(231,95,0)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.03%)</title><rect x="11.0346%" y="981" width="0.0325%" height="15" fill="rgb(228,12,23)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="11.0346%" y="965" width="0.0325%" height="15" fill="rgb(216,12,1)" fg:x="8498" fg:w="25"/><text x="11.2846%" y="975.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 0.03%)</title><rect x="11.0359%" y="949" width="0.0312%" height="15" fill="rgb(219,59,3)" fg:x="8499" fg:w="24"/><text x="11.2859%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.03%)</title><rect x="11.0359%" y="933" width="0.0312%" height="15" fill="rgb(215,208,46)" fg:x="8499" fg:w="24"/><text x="11.2859%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.03%)</title><rect x="11.0359%" y="917" width="0.0312%" height="15" fill="rgb(254,224,29)" fg:x="8499" fg:w="24"/><text x="11.2859%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="11.0528%" y="901" width="0.0143%" height="15" fill="rgb(232,14,29)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="911.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="11.0528%" y="885" width="0.0143%" height="15" fill="rgb(208,45,52)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="895.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="11.0528%" y="869" width="0.0143%" height="15" fill="rgb(234,191,28)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="879.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="11.0528%" y="853" width="0.0143%" height="15" fill="rgb(244,67,43)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="11.0528%" y="837" width="0.0143%" height="15" fill="rgb(236,189,24)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="11.0528%" y="821" width="0.0143%" height="15" fill="rgb(239,214,33)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="11.0528%" y="805" width="0.0143%" height="15" fill="rgb(226,176,41)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="11.0528%" y="789" width="0.0143%" height="15" fill="rgb(248,47,8)" fg:x="8512" fg:w="11"/><text x="11.3028%" y="799.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (35 samples, 0.05%)</title><rect x="11.0307%" y="1189" width="0.0454%" height="15" fill="rgb(218,81,44)" fg:x="8495" fg:w="35"/><text x="11.2807%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (35 samples, 0.05%)</title><rect x="11.0307%" y="1173" width="0.0454%" height="15" fill="rgb(213,98,6)" fg:x="8495" fg:w="35"/><text x="11.2807%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (23 samples, 0.03%)</title><rect x="11.0775%" y="1061" width="0.0299%" height="15" fill="rgb(222,85,22)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="1071.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (23 samples, 0.03%)</title><rect x="11.0775%" y="1045" width="0.0299%" height="15" fill="rgb(239,46,39)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (23 samples, 0.03%)</title><rect x="11.0775%" y="1029" width="0.0299%" height="15" fill="rgb(237,12,29)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.03%)</title><rect x="11.0775%" y="1013" width="0.0299%" height="15" fill="rgb(214,77,8)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.03%)</title><rect x="11.0775%" y="997" width="0.0299%" height="15" fill="rgb(217,168,37)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (23 samples, 0.03%)</title><rect x="11.0775%" y="981" width="0.0299%" height="15" fill="rgb(221,217,23)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (23 samples, 0.03%)</title><rect x="11.0775%" y="965" width="0.0299%" height="15" fill="rgb(243,229,36)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="975.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="11.0775%" y="949" width="0.0299%" height="15" fill="rgb(251,163,40)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="959.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (23 samples, 0.03%)</title><rect x="11.0775%" y="933" width="0.0299%" height="15" fill="rgb(237,222,12)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="943.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (23 samples, 0.03%)</title><rect x="11.0775%" y="917" width="0.0299%" height="15" fill="rgb(248,132,6)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="927.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (23 samples, 0.03%)</title><rect x="11.0775%" y="901" width="0.0299%" height="15" fill="rgb(227,167,50)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="911.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (23 samples, 0.03%)</title><rect x="11.0775%" y="885" width="0.0299%" height="15" fill="rgb(242,84,37)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="895.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (23 samples, 0.03%)</title><rect x="11.0775%" y="869" width="0.0299%" height="15" fill="rgb(212,4,50)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.03%)</title><rect x="11.0775%" y="853" width="0.0299%" height="15" fill="rgb(230,228,32)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="863.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (23 samples, 0.03%)</title><rect x="11.0775%" y="837" width="0.0299%" height="15" fill="rgb(248,217,23)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="847.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (23 samples, 0.03%)</title><rect x="11.0775%" y="821" width="0.0299%" height="15" fill="rgb(238,197,32)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="831.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (23 samples, 0.03%)</title><rect x="11.0775%" y="805" width="0.0299%" height="15" fill="rgb(236,106,1)" fg:x="8531" fg:w="23"/><text x="11.3275%" y="815.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (22 samples, 0.03%)</title><rect x="11.0788%" y="789" width="0.0286%" height="15" fill="rgb(219,228,13)" fg:x="8532" fg:w="22"/><text x="11.3288%" y="799.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (107 samples, 0.14%)</title><rect x="10.9944%" y="1445" width="0.1389%" height="15" fill="rgb(238,30,35)" fg:x="8467" fg:w="107"/><text x="11.2444%" y="1455.50"></text></g><g><title>rayon_core::job::JobRef::execute (107 samples, 0.14%)</title><rect x="10.9944%" y="1429" width="0.1389%" height="15" fill="rgb(236,70,23)" fg:x="8467" fg:w="107"/><text x="11.2444%" y="1439.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (107 samples, 0.14%)</title><rect x="10.9944%" y="1413" width="0.1389%" height="15" fill="rgb(249,104,48)" fg:x="8467" fg:w="107"/><text x="11.2444%" y="1423.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (105 samples, 0.14%)</title><rect x="10.9970%" y="1397" width="0.1363%" height="15" fill="rgb(254,117,50)" fg:x="8469" fg:w="105"/><text x="11.2470%" y="1407.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (105 samples, 0.14%)</title><rect x="10.9970%" y="1381" width="0.1363%" height="15" fill="rgb(223,152,4)" fg:x="8469" fg:w="105"/><text x="11.2470%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (105 samples, 0.14%)</title><rect x="10.9970%" y="1365" width="0.1363%" height="15" fill="rgb(245,6,2)" fg:x="8469" fg:w="105"/><text x="11.2470%" y="1375.50"></text></g><g><title>std::panicking::try (105 samples, 0.14%)</title><rect x="10.9970%" y="1349" width="0.1363%" height="15" fill="rgb(249,150,24)" fg:x="8469" fg:w="105"/><text x="11.2470%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (105 samples, 0.14%)</title><rect x="10.9970%" y="1333" width="0.1363%" height="15" fill="rgb(228,185,42)" fg:x="8469" fg:w="105"/><text x="11.2470%" y="1343.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (104 samples, 0.14%)</title><rect x="10.9983%" y="1317" width="0.1350%" height="15" fill="rgb(226,39,33)" fg:x="8470" fg:w="104"/><text x="11.2483%" y="1327.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (104 samples, 0.14%)</title><rect x="10.9983%" y="1301" width="0.1350%" height="15" fill="rgb(221,166,19)" fg:x="8470" fg:w="104"/><text x="11.2483%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (104 samples, 0.14%)</title><rect x="10.9983%" y="1285" width="0.1350%" height="15" fill="rgb(209,109,2)" fg:x="8470" fg:w="104"/><text x="11.2483%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (104 samples, 0.14%)</title><rect x="10.9983%" y="1269" width="0.1350%" height="15" fill="rgb(252,216,26)" fg:x="8470" fg:w="104"/><text x="11.2483%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (104 samples, 0.14%)</title><rect x="10.9983%" y="1253" width="0.1350%" height="15" fill="rgb(227,173,36)" fg:x="8470" fg:w="104"/><text x="11.2483%" y="1263.50"></text></g><g><title>rayon_core::join::join_context (85 samples, 0.11%)</title><rect x="11.0230%" y="1237" width="0.1104%" height="15" fill="rgb(209,90,7)" fg:x="8489" fg:w="85"/><text x="11.2730%" y="1247.50"></text></g><g><title>rayon_core::registry::in_worker (85 samples, 0.11%)</title><rect x="11.0230%" y="1221" width="0.1104%" height="15" fill="rgb(250,194,11)" fg:x="8489" fg:w="85"/><text x="11.2730%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (85 samples, 0.11%)</title><rect x="11.0230%" y="1205" width="0.1104%" height="15" fill="rgb(220,72,50)" fg:x="8489" fg:w="85"/><text x="11.2730%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (44 samples, 0.06%)</title><rect x="11.0762%" y="1189" width="0.0571%" height="15" fill="rgb(222,106,48)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.06%)</title><rect x="11.0762%" y="1173" width="0.0571%" height="15" fill="rgb(216,220,45)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1183.50"></text></g><g><title>std::panicking::try (44 samples, 0.06%)</title><rect x="11.0762%" y="1157" width="0.0571%" height="15" fill="rgb(234,112,18)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.06%)</title><rect x="11.0762%" y="1141" width="0.0571%" height="15" fill="rgb(206,179,9)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.06%)</title><rect x="11.0762%" y="1125" width="0.0571%" height="15" fill="rgb(215,115,40)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (44 samples, 0.06%)</title><rect x="11.0762%" y="1109" width="0.0571%" height="15" fill="rgb(222,69,34)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (44 samples, 0.06%)</title><rect x="11.0762%" y="1093" width="0.0571%" height="15" fill="rgb(209,161,10)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.06%)</title><rect x="11.0762%" y="1077" width="0.0571%" height="15" fill="rgb(217,6,38)" fg:x="8530" fg:w="44"/><text x="11.3262%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.03%)</title><rect x="11.1074%" y="1061" width="0.0260%" height="15" fill="rgb(229,229,48)" fg:x="8554" fg:w="20"/><text x="11.3574%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.03%)</title><rect x="11.1074%" y="1045" width="0.0260%" height="15" fill="rgb(225,21,28)" fg:x="8554" fg:w="20"/><text x="11.3574%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.03%)</title><rect x="11.1074%" y="1029" width="0.0260%" height="15" fill="rgb(206,33,13)" fg:x="8554" fg:w="20"/><text x="11.3574%" y="1039.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.01%)</title><rect x="11.1203%" y="1013" width="0.0130%" height="15" fill="rgb(242,178,17)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="11.1203%" y="997" width="0.0130%" height="15" fill="rgb(220,162,5)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="1007.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="11.1203%" y="981" width="0.0130%" height="15" fill="rgb(210,33,43)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="991.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="11.1203%" y="965" width="0.0130%" height="15" fill="rgb(216,116,54)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="11.1203%" y="949" width="0.0130%" height="15" fill="rgb(249,92,24)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.01%)</title><rect x="11.1203%" y="933" width="0.0130%" height="15" fill="rgb(231,189,14)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="11.1203%" y="917" width="0.0130%" height="15" fill="rgb(230,8,41)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="11.1203%" y="901" width="0.0130%" height="15" fill="rgb(249,7,27)" fg:x="8564" fg:w="10"/><text x="11.3703%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (115 samples, 0.15%)</title><rect x="10.9931%" y="1477" width="0.1493%" height="15" fill="rgb(232,86,5)" fg:x="8466" fg:w="115"/><text x="11.2431%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (115 samples, 0.15%)</title><rect x="10.9931%" y="1461" width="0.1493%" height="15" fill="rgb(224,175,18)" fg:x="8466" fg:w="115"/><text x="11.2431%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.02%)</title><rect x="11.1437%" y="1221" width="0.0208%" height="15" fill="rgb(220,129,12)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="11.1437%" y="1205" width="0.0208%" height="15" fill="rgb(210,19,36)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="11.1437%" y="1189" width="0.0208%" height="15" fill="rgb(219,96,14)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.02%)</title><rect x="11.1437%" y="1173" width="0.0208%" height="15" fill="rgb(249,106,1)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="11.1437%" y="1157" width="0.0208%" height="15" fill="rgb(249,155,20)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="11.1437%" y="1141" width="0.0208%" height="15" fill="rgb(244,168,9)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="11.1437%" y="1125" width="0.0208%" height="15" fill="rgb(216,23,50)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1135.50"></text></g><g><title>malloc (16 samples, 0.02%)</title><rect x="11.1437%" y="1109" width="0.0208%" height="15" fill="rgb(224,219,20)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1119.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="11.1437%" y="1093" width="0.0208%" height="15" fill="rgb(222,156,15)" fg:x="8582" fg:w="16"/><text x="11.3937%" y="1103.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="11.1463%" y="1077" width="0.0182%" height="15" fill="rgb(231,97,17)" fg:x="8584" fg:w="14"/><text x="11.3963%" y="1087.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (69 samples, 0.09%)</title><rect x="11.1684%" y="1093" width="0.0896%" height="15" fill="rgb(218,70,48)" fg:x="8601" fg:w="69"/><text x="11.4184%" y="1103.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (66 samples, 0.09%)</title><rect x="11.1723%" y="1077" width="0.0857%" height="15" fill="rgb(212,196,52)" fg:x="8604" fg:w="66"/><text x="11.4223%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (93 samples, 0.12%)</title><rect x="11.1437%" y="1349" width="0.1208%" height="15" fill="rgb(243,203,18)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1359.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (93 samples, 0.12%)</title><rect x="11.1437%" y="1333" width="0.1208%" height="15" fill="rgb(252,125,41)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (93 samples, 0.12%)</title><rect x="11.1437%" y="1317" width="0.1208%" height="15" fill="rgb(223,180,33)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.12%)</title><rect x="11.1437%" y="1301" width="0.1208%" height="15" fill="rgb(254,159,46)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (93 samples, 0.12%)</title><rect x="11.1437%" y="1285" width="0.1208%" height="15" fill="rgb(254,38,10)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (93 samples, 0.12%)</title><rect x="11.1437%" y="1269" width="0.1208%" height="15" fill="rgb(208,217,32)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (93 samples, 0.12%)</title><rect x="11.1437%" y="1253" width="0.1208%" height="15" fill="rgb(221,120,13)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1263.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (93 samples, 0.12%)</title><rect x="11.1437%" y="1237" width="0.1208%" height="15" fill="rgb(246,54,52)" fg:x="8582" fg:w="93"/><text x="11.3937%" y="1247.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (77 samples, 0.10%)</title><rect x="11.1645%" y="1221" width="0.1000%" height="15" fill="rgb(242,34,25)" fg:x="8598" fg:w="77"/><text x="11.4145%" y="1231.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (74 samples, 0.10%)</title><rect x="11.1684%" y="1205" width="0.0961%" height="15" fill="rgb(247,209,9)" fg:x="8601" fg:w="74"/><text x="11.4184%" y="1215.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (74 samples, 0.10%)</title><rect x="11.1684%" y="1189" width="0.0961%" height="15" fill="rgb(228,71,26)" fg:x="8601" fg:w="74"/><text x="11.4184%" y="1199.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (74 samples, 0.10%)</title><rect x="11.1684%" y="1173" width="0.0961%" height="15" fill="rgb(222,145,49)" fg:x="8601" fg:w="74"/><text x="11.4184%" y="1183.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (74 samples, 0.10%)</title><rect x="11.1684%" y="1157" width="0.0961%" height="15" fill="rgb(218,121,17)" fg:x="8601" fg:w="74"/><text x="11.4184%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74 samples, 0.10%)</title><rect x="11.1684%" y="1141" width="0.0961%" height="15" fill="rgb(244,50,7)" fg:x="8601" fg:w="74"/><text x="11.4184%" y="1151.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (74 samples, 0.10%)</title><rect x="11.1684%" y="1125" width="0.0961%" height="15" fill="rgb(246,229,37)" fg:x="8601" fg:w="74"/><text x="11.4184%" y="1135.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (74 samples, 0.10%)</title><rect x="11.1684%" y="1109" width="0.0961%" height="15" fill="rgb(225,18,5)" fg:x="8601" fg:w="74"/><text x="11.4184%" y="1119.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (42 samples, 0.05%)</title><rect x="11.2710%" y="981" width="0.0545%" height="15" fill="rgb(213,204,8)" fg:x="8680" fg:w="42"/><text x="11.5210%" y="991.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (39 samples, 0.05%)</title><rect x="11.2749%" y="965" width="0.0506%" height="15" fill="rgb(238,103,6)" fg:x="8683" fg:w="39"/><text x="11.5249%" y="975.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (44 samples, 0.06%)</title><rect x="11.2710%" y="1077" width="0.0571%" height="15" fill="rgb(222,25,35)" fg:x="8680" fg:w="44"/><text x="11.5210%" y="1087.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (44 samples, 0.06%)</title><rect x="11.2710%" y="1061" width="0.0571%" height="15" fill="rgb(213,203,35)" fg:x="8680" fg:w="44"/><text x="11.5210%" y="1071.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (44 samples, 0.06%)</title><rect x="11.2710%" y="1045" width="0.0571%" height="15" fill="rgb(221,79,53)" fg:x="8680" fg:w="44"/><text x="11.5210%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44 samples, 0.06%)</title><rect x="11.2710%" y="1029" width="0.0571%" height="15" fill="rgb(243,200,35)" fg:x="8680" fg:w="44"/><text x="11.5210%" y="1039.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (44 samples, 0.06%)</title><rect x="11.2710%" y="1013" width="0.0571%" height="15" fill="rgb(248,60,25)" fg:x="8680" fg:w="44"/><text x="11.5210%" y="1023.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (44 samples, 0.06%)</title><rect x="11.2710%" y="997" width="0.0571%" height="15" fill="rgb(227,53,46)" fg:x="8680" fg:w="44"/><text x="11.5210%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (50 samples, 0.06%)</title><rect x="11.2645%" y="1237" width="0.0649%" height="15" fill="rgb(216,120,32)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1247.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (50 samples, 0.06%)</title><rect x="11.2645%" y="1221" width="0.0649%" height="15" fill="rgb(220,134,1)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (50 samples, 0.06%)</title><rect x="11.2645%" y="1205" width="0.0649%" height="15" fill="rgb(237,168,5)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.06%)</title><rect x="11.2645%" y="1189" width="0.0649%" height="15" fill="rgb(231,100,33)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (50 samples, 0.06%)</title><rect x="11.2645%" y="1173" width="0.0649%" height="15" fill="rgb(236,177,47)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (50 samples, 0.06%)</title><rect x="11.2645%" y="1157" width="0.0649%" height="15" fill="rgb(235,7,49)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (50 samples, 0.06%)</title><rect x="11.2645%" y="1141" width="0.0649%" height="15" fill="rgb(232,119,22)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1151.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (50 samples, 0.06%)</title><rect x="11.2645%" y="1125" width="0.0649%" height="15" fill="rgb(254,73,53)" fg:x="8675" fg:w="50"/><text x="11.5145%" y="1135.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (46 samples, 0.06%)</title><rect x="11.2697%" y="1109" width="0.0597%" height="15" fill="rgb(251,35,20)" fg:x="8679" fg:w="46"/><text x="11.5197%" y="1119.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (45 samples, 0.06%)</title><rect x="11.2710%" y="1093" width="0.0584%" height="15" fill="rgb(241,119,20)" fg:x="8680" fg:w="45"/><text x="11.5210%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (19 samples, 0.02%)</title><rect x="11.3307%" y="1125" width="0.0247%" height="15" fill="rgb(207,102,14)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1135.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.02%)</title><rect x="11.3307%" y="1109" width="0.0247%" height="15" fill="rgb(248,201,50)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (19 samples, 0.02%)</title><rect x="11.3307%" y="1093" width="0.0247%" height="15" fill="rgb(222,185,44)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="11.3307%" y="1077" width="0.0247%" height="15" fill="rgb(218,107,18)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="11.3307%" y="1061" width="0.0247%" height="15" fill="rgb(237,177,39)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.02%)</title><rect x="11.3307%" y="1045" width="0.0247%" height="15" fill="rgb(246,69,6)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.02%)</title><rect x="11.3307%" y="1029" width="0.0247%" height="15" fill="rgb(234,208,37)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1039.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="11.3307%" y="1013" width="0.0247%" height="15" fill="rgb(225,4,6)" fg:x="8726" fg:w="19"/><text x="11.5807%" y="1023.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (18 samples, 0.02%)</title><rect x="11.3320%" y="997" width="0.0234%" height="15" fill="rgb(233,45,0)" fg:x="8727" fg:w="18"/><text x="11.5820%" y="1007.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (17 samples, 0.02%)</title><rect x="11.3333%" y="981" width="0.0221%" height="15" fill="rgb(226,136,5)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="991.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (17 samples, 0.02%)</title><rect x="11.3333%" y="965" width="0.0221%" height="15" fill="rgb(211,91,47)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="975.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (17 samples, 0.02%)</title><rect x="11.3333%" y="949" width="0.0221%" height="15" fill="rgb(242,88,51)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="959.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (17 samples, 0.02%)</title><rect x="11.3333%" y="933" width="0.0221%" height="15" fill="rgb(230,91,28)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.02%)</title><rect x="11.3333%" y="917" width="0.0221%" height="15" fill="rgb(254,186,29)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="927.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (17 samples, 0.02%)</title><rect x="11.3333%" y="901" width="0.0221%" height="15" fill="rgb(238,6,4)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="911.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (17 samples, 0.02%)</title><rect x="11.3333%" y="885" width="0.0221%" height="15" fill="rgb(221,151,16)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="895.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (17 samples, 0.02%)</title><rect x="11.3333%" y="869" width="0.0221%" height="15" fill="rgb(251,143,52)" fg:x="8728" fg:w="17"/><text x="11.5833%" y="879.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (15 samples, 0.02%)</title><rect x="11.3359%" y="853" width="0.0195%" height="15" fill="rgb(206,90,15)" fg:x="8730" fg:w="15"/><text x="11.5859%" y="863.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10 samples, 0.01%)</title><rect x="11.3645%" y="1077" width="0.0130%" height="15" fill="rgb(218,35,8)" fg:x="8752" fg:w="10"/><text x="11.6145%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="11.3645%" y="1061" width="0.0130%" height="15" fill="rgb(239,215,6)" fg:x="8752" fg:w="10"/><text x="11.6145%" y="1071.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (41 samples, 0.05%)</title><rect x="11.3294%" y="1189" width="0.0532%" height="15" fill="rgb(245,116,39)" fg:x="8725" fg:w="41"/><text x="11.5794%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (41 samples, 0.05%)</title><rect x="11.3294%" y="1173" width="0.0532%" height="15" fill="rgb(242,65,28)" fg:x="8725" fg:w="41"/><text x="11.5794%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (41 samples, 0.05%)</title><rect x="11.3294%" y="1157" width="0.0532%" height="15" fill="rgb(252,132,53)" fg:x="8725" fg:w="41"/><text x="11.5794%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.05%)</title><rect x="11.3294%" y="1141" width="0.0532%" height="15" fill="rgb(224,159,50)" fg:x="8725" fg:w="41"/><text x="11.5794%" y="1151.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.03%)</title><rect x="11.3554%" y="1125" width="0.0273%" height="15" fill="rgb(224,93,4)" fg:x="8745" fg:w="21"/><text x="11.6054%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.03%)</title><rect x="11.3554%" y="1109" width="0.0273%" height="15" fill="rgb(208,81,34)" fg:x="8745" fg:w="21"/><text x="11.6054%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.03%)</title><rect x="11.3554%" y="1093" width="0.0273%" height="15" fill="rgb(233,92,54)" fg:x="8745" fg:w="21"/><text x="11.6054%" y="1103.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (29 samples, 0.04%)</title><rect x="11.3904%" y="805" width="0.0377%" height="15" fill="rgb(237,21,14)" fg:x="8772" fg:w="29"/><text x="11.6404%" y="815.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (28 samples, 0.04%)</title><rect x="11.3917%" y="789" width="0.0364%" height="15" fill="rgb(249,128,51)" fg:x="8773" fg:w="28"/><text x="11.6417%" y="799.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (31 samples, 0.04%)</title><rect x="11.3904%" y="901" width="0.0403%" height="15" fill="rgb(223,129,24)" fg:x="8772" fg:w="31"/><text x="11.6404%" y="911.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (31 samples, 0.04%)</title><rect x="11.3904%" y="885" width="0.0403%" height="15" fill="rgb(231,168,25)" fg:x="8772" fg:w="31"/><text x="11.6404%" y="895.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (31 samples, 0.04%)</title><rect x="11.3904%" y="869" width="0.0403%" height="15" fill="rgb(224,39,20)" fg:x="8772" fg:w="31"/><text x="11.6404%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.04%)</title><rect x="11.3904%" y="853" width="0.0403%" height="15" fill="rgb(225,152,53)" fg:x="8772" fg:w="31"/><text x="11.6404%" y="863.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (31 samples, 0.04%)</title><rect x="11.3904%" y="837" width="0.0403%" height="15" fill="rgb(252,17,24)" fg:x="8772" fg:w="31"/><text x="11.6404%" y="847.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (31 samples, 0.04%)</title><rect x="11.3904%" y="821" width="0.0403%" height="15" fill="rgb(250,114,30)" fg:x="8772" fg:w="31"/><text x="11.6404%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (32 samples, 0.04%)</title><rect x="11.3904%" y="1061" width="0.0416%" height="15" fill="rgb(229,5,4)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="1071.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (32 samples, 0.04%)</title><rect x="11.3904%" y="1045" width="0.0416%" height="15" fill="rgb(225,176,49)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (32 samples, 0.04%)</title><rect x="11.3904%" y="1029" width="0.0416%" height="15" fill="rgb(224,221,49)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.04%)</title><rect x="11.3904%" y="1013" width="0.0416%" height="15" fill="rgb(253,169,27)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (32 samples, 0.04%)</title><rect x="11.3904%" y="997" width="0.0416%" height="15" fill="rgb(211,206,16)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (32 samples, 0.04%)</title><rect x="11.3904%" y="981" width="0.0416%" height="15" fill="rgb(244,87,35)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (32 samples, 0.04%)</title><rect x="11.3904%" y="965" width="0.0416%" height="15" fill="rgb(246,28,10)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="975.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (32 samples, 0.04%)</title><rect x="11.3904%" y="949" width="0.0416%" height="15" fill="rgb(229,12,44)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="959.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (32 samples, 0.04%)</title><rect x="11.3904%" y="933" width="0.0416%" height="15" fill="rgb(210,145,37)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="943.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (32 samples, 0.04%)</title><rect x="11.3904%" y="917" width="0.0416%" height="15" fill="rgb(227,112,52)" fg:x="8772" fg:w="32"/><text x="11.6404%" y="927.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="11.4333%" y="901" width="0.0117%" height="15" fill="rgb(238,155,34)" fg:x="8805" fg:w="9"/><text x="11.6833%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="11.4333%" y="885" width="0.0117%" height="15" fill="rgb(239,226,36)" fg:x="8805" fg:w="9"/><text x="11.6833%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="11.4333%" y="869" width="0.0117%" height="15" fill="rgb(230,16,23)" fg:x="8805" fg:w="9"/><text x="11.6833%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="11.4333%" y="853" width="0.0117%" height="15" fill="rgb(236,171,36)" fg:x="8805" fg:w="9"/><text x="11.6833%" y="863.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.02%)</title><rect x="11.4320%" y="1013" width="0.0182%" height="15" fill="rgb(221,22,14)" fg:x="8804" fg:w="14"/><text x="11.6820%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.02%)</title><rect x="11.4320%" y="997" width="0.0182%" height="15" fill="rgb(242,43,11)" fg:x="8804" fg:w="14"/><text x="11.6820%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.02%)</title><rect x="11.4320%" y="981" width="0.0182%" height="15" fill="rgb(232,69,23)" fg:x="8804" fg:w="14"/><text x="11.6820%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="11.4333%" y="965" width="0.0169%" height="15" fill="rgb(216,180,54)" fg:x="8805" fg:w="13"/><text x="11.6833%" y="975.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="11.4333%" y="949" width="0.0169%" height="15" fill="rgb(216,5,24)" fg:x="8805" fg:w="13"/><text x="11.6833%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="11.4333%" y="933" width="0.0169%" height="15" fill="rgb(225,89,9)" fg:x="8805" fg:w="13"/><text x="11.6833%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="11.4333%" y="917" width="0.0169%" height="15" fill="rgb(243,75,33)" fg:x="8805" fg:w="13"/><text x="11.6833%" y="927.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (153 samples, 0.20%)</title><rect x="11.2645%" y="1301" width="0.1987%" height="15" fill="rgb(247,141,45)" fg:x="8675" fg:w="153"/><text x="11.5145%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (153 samples, 0.20%)</title><rect x="11.2645%" y="1285" width="0.1987%" height="15" fill="rgb(232,177,36)" fg:x="8675" fg:w="153"/><text x="11.5145%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (153 samples, 0.20%)</title><rect x="11.2645%" y="1269" width="0.1987%" height="15" fill="rgb(219,125,36)" fg:x="8675" fg:w="153"/><text x="11.5145%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (153 samples, 0.20%)</title><rect x="11.2645%" y="1253" width="0.1987%" height="15" fill="rgb(227,94,9)" fg:x="8675" fg:w="153"/><text x="11.5145%" y="1263.50"></text></g><g><title>rayon_core::join::join_context (103 samples, 0.13%)</title><rect x="11.3294%" y="1237" width="0.1337%" height="15" fill="rgb(240,34,52)" fg:x="8725" fg:w="103"/><text x="11.5794%" y="1247.50"></text></g><g><title>rayon_core::registry::in_worker (103 samples, 0.13%)</title><rect x="11.3294%" y="1221" width="0.1337%" height="15" fill="rgb(216,45,12)" fg:x="8725" fg:w="103"/><text x="11.5794%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (103 samples, 0.13%)</title><rect x="11.3294%" y="1205" width="0.1337%" height="15" fill="rgb(246,21,19)" fg:x="8725" fg:w="103"/><text x="11.5794%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (56 samples, 0.07%)</title><rect x="11.3904%" y="1189" width="0.0727%" height="15" fill="rgb(213,98,42)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (56 samples, 0.07%)</title><rect x="11.3904%" y="1173" width="0.0727%" height="15" fill="rgb(250,136,47)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1183.50"></text></g><g><title>std::panicking::try (56 samples, 0.07%)</title><rect x="11.3904%" y="1157" width="0.0727%" height="15" fill="rgb(251,124,27)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (56 samples, 0.07%)</title><rect x="11.3904%" y="1141" width="0.0727%" height="15" fill="rgb(229,180,14)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (56 samples, 0.07%)</title><rect x="11.3904%" y="1125" width="0.0727%" height="15" fill="rgb(245,216,25)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (56 samples, 0.07%)</title><rect x="11.3904%" y="1109" width="0.0727%" height="15" fill="rgb(251,43,5)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (56 samples, 0.07%)</title><rect x="11.3904%" y="1093" width="0.0727%" height="15" fill="rgb(250,128,24)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (56 samples, 0.07%)</title><rect x="11.3904%" y="1077" width="0.0727%" height="15" fill="rgb(217,117,27)" fg:x="8772" fg:w="56"/><text x="11.6404%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 0.03%)</title><rect x="11.4320%" y="1061" width="0.0312%" height="15" fill="rgb(245,147,4)" fg:x="8804" fg:w="24"/><text x="11.6820%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.03%)</title><rect x="11.4320%" y="1045" width="0.0312%" height="15" fill="rgb(242,201,35)" fg:x="8804" fg:w="24"/><text x="11.6820%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.03%)</title><rect x="11.4320%" y="1029" width="0.0312%" height="15" fill="rgb(218,181,1)" fg:x="8804" fg:w="24"/><text x="11.6820%" y="1039.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="11.4515%" y="1013" width="0.0117%" height="15" fill="rgb(222,6,29)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="11.4515%" y="997" width="0.0117%" height="15" fill="rgb(208,186,3)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="1007.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="11.4515%" y="981" width="0.0117%" height="15" fill="rgb(216,36,26)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="991.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="11.4515%" y="965" width="0.0117%" height="15" fill="rgb(248,201,23)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="11.4515%" y="949" width="0.0117%" height="15" fill="rgb(251,170,31)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="11.4515%" y="933" width="0.0117%" height="15" fill="rgb(207,110,25)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="11.4515%" y="917" width="0.0117%" height="15" fill="rgb(250,54,15)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="11.4515%" y="901" width="0.0117%" height="15" fill="rgb(227,68,33)" fg:x="8819" fg:w="9"/><text x="11.7015%" y="911.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="11.4528%" y="885" width="0.0104%" height="15" fill="rgb(238,34,41)" fg:x="8820" fg:w="8"/><text x="11.7028%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="11.4528%" y="869" width="0.0104%" height="15" fill="rgb(220,11,15)" fg:x="8820" fg:w="8"/><text x="11.7028%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="11.4528%" y="853" width="0.0104%" height="15" fill="rgb(246,111,35)" fg:x="8820" fg:w="8"/><text x="11.7028%" y="863.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (10 samples, 0.01%)</title><rect x="11.4683%" y="901" width="0.0130%" height="15" fill="rgb(209,88,53)" fg:x="8832" fg:w="10"/><text x="11.7183%" y="911.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (10 samples, 0.01%)</title><rect x="11.4683%" y="885" width="0.0130%" height="15" fill="rgb(231,185,47)" fg:x="8832" fg:w="10"/><text x="11.7183%" y="895.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (10 samples, 0.01%)</title><rect x="11.4683%" y="869" width="0.0130%" height="15" fill="rgb(233,154,1)" fg:x="8832" fg:w="10"/><text x="11.7183%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.01%)</title><rect x="11.4683%" y="853" width="0.0130%" height="15" fill="rgb(225,15,46)" fg:x="8832" fg:w="10"/><text x="11.7183%" y="863.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (10 samples, 0.01%)</title><rect x="11.4683%" y="837" width="0.0130%" height="15" fill="rgb(211,135,41)" fg:x="8832" fg:w="10"/><text x="11.7183%" y="847.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (10 samples, 0.01%)</title><rect x="11.4683%" y="821" width="0.0130%" height="15" fill="rgb(208,54,0)" fg:x="8832" fg:w="10"/><text x="11.7183%" y="831.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (10 samples, 0.01%)</title><rect x="11.4683%" y="805" width="0.0130%" height="15" fill="rgb(244,136,14)" fg:x="8832" fg:w="10"/><text x="11.7183%" y="815.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (9 samples, 0.01%)</title><rect x="11.4696%" y="789" width="0.0117%" height="15" fill="rgb(241,56,14)" fg:x="8833" fg:w="9"/><text x="11.7196%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.02%)</title><rect x="11.4657%" y="1061" width="0.0169%" height="15" fill="rgb(205,80,24)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="1071.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.02%)</title><rect x="11.4657%" y="1045" width="0.0169%" height="15" fill="rgb(220,57,4)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.02%)</title><rect x="11.4657%" y="1029" width="0.0169%" height="15" fill="rgb(226,193,50)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="11.4657%" y="1013" width="0.0169%" height="15" fill="rgb(231,168,22)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.02%)</title><rect x="11.4657%" y="997" width="0.0169%" height="15" fill="rgb(254,215,14)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.02%)</title><rect x="11.4657%" y="981" width="0.0169%" height="15" fill="rgb(211,115,16)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.02%)</title><rect x="11.4657%" y="965" width="0.0169%" height="15" fill="rgb(236,210,16)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="975.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (13 samples, 0.02%)</title><rect x="11.4657%" y="949" width="0.0169%" height="15" fill="rgb(221,94,12)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="959.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (13 samples, 0.02%)</title><rect x="11.4657%" y="933" width="0.0169%" height="15" fill="rgb(235,218,49)" fg:x="8830" fg:w="13"/><text x="11.7157%" y="943.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (11 samples, 0.01%)</title><rect x="11.4683%" y="917" width="0.0143%" height="15" fill="rgb(217,114,14)" fg:x="8832" fg:w="11"/><text x="11.7183%" y="927.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (44 samples, 0.06%)</title><rect x="11.4657%" y="1269" width="0.0571%" height="15" fill="rgb(216,145,22)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1279.50"></text></g><g><title>rayon_core::job::JobRef::execute (44 samples, 0.06%)</title><rect x="11.4657%" y="1253" width="0.0571%" height="15" fill="rgb(217,112,39)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (44 samples, 0.06%)</title><rect x="11.4657%" y="1237" width="0.0571%" height="15" fill="rgb(225,85,32)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1247.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (44 samples, 0.06%)</title><rect x="11.4657%" y="1221" width="0.0571%" height="15" fill="rgb(245,209,47)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (44 samples, 0.06%)</title><rect x="11.4657%" y="1205" width="0.0571%" height="15" fill="rgb(218,220,15)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.06%)</title><rect x="11.4657%" y="1189" width="0.0571%" height="15" fill="rgb(222,202,31)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1199.50"></text></g><g><title>std::panicking::try (44 samples, 0.06%)</title><rect x="11.4657%" y="1173" width="0.0571%" height="15" fill="rgb(243,203,4)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.06%)</title><rect x="11.4657%" y="1157" width="0.0571%" height="15" fill="rgb(237,92,17)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.06%)</title><rect x="11.4657%" y="1141" width="0.0571%" height="15" fill="rgb(231,119,7)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1151.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (44 samples, 0.06%)</title><rect x="11.4657%" y="1125" width="0.0571%" height="15" fill="rgb(237,82,41)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (44 samples, 0.06%)</title><rect x="11.4657%" y="1109" width="0.0571%" height="15" fill="rgb(226,81,48)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (44 samples, 0.06%)</title><rect x="11.4657%" y="1093" width="0.0571%" height="15" fill="rgb(234,70,51)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.06%)</title><rect x="11.4657%" y="1077" width="0.0571%" height="15" fill="rgb(251,86,4)" fg:x="8830" fg:w="44"/><text x="11.7157%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (31 samples, 0.04%)</title><rect x="11.4826%" y="1061" width="0.0403%" height="15" fill="rgb(244,144,28)" fg:x="8843" fg:w="31"/><text x="11.7326%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (31 samples, 0.04%)</title><rect x="11.4826%" y="1045" width="0.0403%" height="15" fill="rgb(232,161,39)" fg:x="8843" fg:w="31"/><text x="11.7326%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (31 samples, 0.04%)</title><rect x="11.4826%" y="1029" width="0.0403%" height="15" fill="rgb(247,34,51)" fg:x="8843" fg:w="31"/><text x="11.7326%" y="1039.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.03%)</title><rect x="11.4930%" y="1013" width="0.0299%" height="15" fill="rgb(225,132,2)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="11.4930%" y="997" width="0.0299%" height="15" fill="rgb(209,159,44)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="1007.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="11.4930%" y="981" width="0.0299%" height="15" fill="rgb(251,214,1)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="991.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="11.4930%" y="965" width="0.0299%" height="15" fill="rgb(247,84,47)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="11.4930%" y="949" width="0.0299%" height="15" fill="rgb(240,111,43)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (23 samples, 0.03%)</title><rect x="11.4930%" y="933" width="0.0299%" height="15" fill="rgb(215,214,35)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.03%)</title><rect x="11.4930%" y="917" width="0.0299%" height="15" fill="rgb(248,207,23)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="11.4930%" y="901" width="0.0299%" height="15" fill="rgb(214,186,4)" fg:x="8851" fg:w="23"/><text x="11.7430%" y="911.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.02%)</title><rect x="11.4982%" y="885" width="0.0247%" height="15" fill="rgb(220,133,22)" fg:x="8855" fg:w="19"/><text x="11.7482%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="11.4982%" y="869" width="0.0247%" height="15" fill="rgb(239,134,19)" fg:x="8855" fg:w="19"/><text x="11.7482%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.02%)</title><rect x="11.4982%" y="853" width="0.0247%" height="15" fill="rgb(250,140,9)" fg:x="8855" fg:w="19"/><text x="11.7482%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="11.5086%" y="837" width="0.0143%" height="15" fill="rgb(225,59,14)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="847.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="11.5086%" y="821" width="0.0143%" height="15" fill="rgb(214,152,51)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="831.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="11.5086%" y="805" width="0.0143%" height="15" fill="rgb(251,227,43)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="815.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="11.5086%" y="789" width="0.0143%" height="15" fill="rgb(241,96,17)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="11.5086%" y="773" width="0.0143%" height="15" fill="rgb(234,198,43)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="11.5086%" y="757" width="0.0143%" height="15" fill="rgb(220,108,29)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="11.5086%" y="741" width="0.0143%" height="15" fill="rgb(226,163,33)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="11.5086%" y="725" width="0.0143%" height="15" fill="rgb(205,194,45)" fg:x="8863" fg:w="11"/><text x="11.7586%" y="735.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (51 samples, 0.07%)</title><rect x="11.4657%" y="1301" width="0.0662%" height="15" fill="rgb(206,143,44)" fg:x="8830" fg:w="51"/><text x="11.7157%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (51 samples, 0.07%)</title><rect x="11.4657%" y="1285" width="0.0662%" height="15" fill="rgb(236,136,36)" fg:x="8830" fg:w="51"/><text x="11.7157%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.03%)</title><rect x="11.5359%" y="1045" width="0.0260%" height="15" fill="rgb(249,172,42)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="11.5359%" y="1029" width="0.0260%" height="15" fill="rgb(216,139,23)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="11.5359%" y="1013" width="0.0260%" height="15" fill="rgb(207,166,20)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.03%)</title><rect x="11.5359%" y="997" width="0.0260%" height="15" fill="rgb(210,209,22)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.03%)</title><rect x="11.5359%" y="981" width="0.0260%" height="15" fill="rgb(232,118,20)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.03%)</title><rect x="11.5359%" y="965" width="0.0260%" height="15" fill="rgb(238,113,42)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="975.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="11.5359%" y="949" width="0.0260%" height="15" fill="rgb(231,42,5)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="959.50"></text></g><g><title>malloc (20 samples, 0.03%)</title><rect x="11.5359%" y="933" width="0.0260%" height="15" fill="rgb(243,166,24)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="943.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="11.5359%" y="917" width="0.0260%" height="15" fill="rgb(237,226,12)" fg:x="8884" fg:w="20"/><text x="11.7859%" y="927.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="11.5385%" y="901" width="0.0234%" height="15" fill="rgb(229,133,24)" fg:x="8886" fg:w="18"/><text x="11.7885%" y="911.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (57 samples, 0.07%)</title><rect x="11.5644%" y="917" width="0.0740%" height="15" fill="rgb(238,33,43)" fg:x="8906" fg:w="57"/><text x="11.8144%" y="927.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (53 samples, 0.07%)</title><rect x="11.5696%" y="901" width="0.0688%" height="15" fill="rgb(227,59,38)" fg:x="8910" fg:w="53"/><text x="11.8196%" y="911.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (61 samples, 0.08%)</title><rect x="11.5644%" y="1013" width="0.0792%" height="15" fill="rgb(230,97,0)" fg:x="8906" fg:w="61"/><text x="11.8144%" y="1023.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (61 samples, 0.08%)</title><rect x="11.5644%" y="997" width="0.0792%" height="15" fill="rgb(250,173,50)" fg:x="8906" fg:w="61"/><text x="11.8144%" y="1007.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (61 samples, 0.08%)</title><rect x="11.5644%" y="981" width="0.0792%" height="15" fill="rgb(240,15,50)" fg:x="8906" fg:w="61"/><text x="11.8144%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61 samples, 0.08%)</title><rect x="11.5644%" y="965" width="0.0792%" height="15" fill="rgb(221,93,22)" fg:x="8906" fg:w="61"/><text x="11.8144%" y="975.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (61 samples, 0.08%)</title><rect x="11.5644%" y="949" width="0.0792%" height="15" fill="rgb(245,180,53)" fg:x="8906" fg:w="61"/><text x="11.8144%" y="959.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (61 samples, 0.08%)</title><rect x="11.5644%" y="933" width="0.0792%" height="15" fill="rgb(231,88,51)" fg:x="8906" fg:w="61"/><text x="11.8144%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (86 samples, 0.11%)</title><rect x="11.5346%" y="1173" width="0.1117%" height="15" fill="rgb(240,58,21)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1183.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (86 samples, 0.11%)</title><rect x="11.5346%" y="1157" width="0.1117%" height="15" fill="rgb(237,21,10)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (86 samples, 0.11%)</title><rect x="11.5346%" y="1141" width="0.1117%" height="15" fill="rgb(218,43,11)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.11%)</title><rect x="11.5346%" y="1125" width="0.1117%" height="15" fill="rgb(218,221,29)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (86 samples, 0.11%)</title><rect x="11.5346%" y="1109" width="0.1117%" height="15" fill="rgb(214,118,42)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (86 samples, 0.11%)</title><rect x="11.5346%" y="1093" width="0.1117%" height="15" fill="rgb(251,200,26)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (86 samples, 0.11%)</title><rect x="11.5346%" y="1077" width="0.1117%" height="15" fill="rgb(237,101,39)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1087.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (86 samples, 0.11%)</title><rect x="11.5346%" y="1061" width="0.1117%" height="15" fill="rgb(251,117,11)" fg:x="8883" fg:w="86"/><text x="11.7846%" y="1071.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (65 samples, 0.08%)</title><rect x="11.5618%" y="1045" width="0.0844%" height="15" fill="rgb(216,223,23)" fg:x="8904" fg:w="65"/><text x="11.8118%" y="1055.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (63 samples, 0.08%)</title><rect x="11.5644%" y="1029" width="0.0818%" height="15" fill="rgb(251,54,12)" fg:x="8906" fg:w="63"/><text x="11.8144%" y="1039.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (24 samples, 0.03%)</title><rect x="11.6475%" y="805" width="0.0312%" height="15" fill="rgb(254,176,54)" fg:x="8970" fg:w="24"/><text x="11.8975%" y="815.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (24 samples, 0.03%)</title><rect x="11.6475%" y="789" width="0.0312%" height="15" fill="rgb(210,32,8)" fg:x="8970" fg:w="24"/><text x="11.8975%" y="799.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (27 samples, 0.04%)</title><rect x="11.6475%" y="901" width="0.0351%" height="15" fill="rgb(235,52,38)" fg:x="8970" fg:w="27"/><text x="11.8975%" y="911.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (27 samples, 0.04%)</title><rect x="11.6475%" y="885" width="0.0351%" height="15" fill="rgb(231,4,44)" fg:x="8970" fg:w="27"/><text x="11.8975%" y="895.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (27 samples, 0.04%)</title><rect x="11.6475%" y="869" width="0.0351%" height="15" fill="rgb(249,2,32)" fg:x="8970" fg:w="27"/><text x="11.8975%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.04%)</title><rect x="11.6475%" y="853" width="0.0351%" height="15" fill="rgb(224,65,26)" fg:x="8970" fg:w="27"/><text x="11.8975%" y="863.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (27 samples, 0.04%)</title><rect x="11.6475%" y="837" width="0.0351%" height="15" fill="rgb(250,73,40)" fg:x="8970" fg:w="27"/><text x="11.8975%" y="847.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (27 samples, 0.04%)</title><rect x="11.6475%" y="821" width="0.0351%" height="15" fill="rgb(253,177,16)" fg:x="8970" fg:w="27"/><text x="11.8975%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (29 samples, 0.04%)</title><rect x="11.6462%" y="1061" width="0.0377%" height="15" fill="rgb(217,32,34)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="1071.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (29 samples, 0.04%)</title><rect x="11.6462%" y="1045" width="0.0377%" height="15" fill="rgb(212,7,10)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (29 samples, 0.04%)</title><rect x="11.6462%" y="1029" width="0.0377%" height="15" fill="rgb(245,89,8)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.04%)</title><rect x="11.6462%" y="1013" width="0.0377%" height="15" fill="rgb(237,16,53)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.04%)</title><rect x="11.6462%" y="997" width="0.0377%" height="15" fill="rgb(250,204,30)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29 samples, 0.04%)</title><rect x="11.6462%" y="981" width="0.0377%" height="15" fill="rgb(208,77,27)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29 samples, 0.04%)</title><rect x="11.6462%" y="965" width="0.0377%" height="15" fill="rgb(250,204,28)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="975.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (29 samples, 0.04%)</title><rect x="11.6462%" y="949" width="0.0377%" height="15" fill="rgb(244,63,21)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="959.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (29 samples, 0.04%)</title><rect x="11.6462%" y="933" width="0.0377%" height="15" fill="rgb(236,85,44)" fg:x="8969" fg:w="29"/><text x="11.8962%" y="943.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (28 samples, 0.04%)</title><rect x="11.6475%" y="917" width="0.0364%" height="15" fill="rgb(215,98,4)" fg:x="8970" fg:w="28"/><text x="11.8975%" y="927.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.02%)</title><rect x="11.6839%" y="1013" width="0.0221%" height="15" fill="rgb(235,38,11)" fg:x="8998" fg:w="17"/><text x="11.9339%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.02%)</title><rect x="11.6839%" y="997" width="0.0221%" height="15" fill="rgb(254,186,25)" fg:x="8998" fg:w="17"/><text x="11.9339%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="11.6839%" y="981" width="0.0221%" height="15" fill="rgb(225,55,31)" fg:x="8998" fg:w="17"/><text x="11.9339%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="11.6839%" y="965" width="0.0221%" height="15" fill="rgb(211,15,21)" fg:x="8998" fg:w="17"/><text x="11.9339%" y="975.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="11.6917%" y="949" width="0.0143%" height="15" fill="rgb(215,187,41)" fg:x="9004" fg:w="11"/><text x="11.9417%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="11.6917%" y="933" width="0.0143%" height="15" fill="rgb(248,69,32)" fg:x="9004" fg:w="11"/><text x="11.9417%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="11.6917%" y="917" width="0.0143%" height="15" fill="rgb(252,102,52)" fg:x="9004" fg:w="11"/><text x="11.9417%" y="927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.01%)</title><rect x="11.7060%" y="1013" width="0.0117%" height="15" fill="rgb(253,140,32)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="11.7060%" y="997" width="0.0117%" height="15" fill="rgb(216,56,42)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (9 samples, 0.01%)</title><rect x="11.7060%" y="981" width="0.0117%" height="15" fill="rgb(216,184,14)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="991.50"></text></g><g><title>rayon_core::job::JobRef::execute (9 samples, 0.01%)</title><rect x="11.7060%" y="965" width="0.0117%" height="15" fill="rgb(237,187,27)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="975.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="11.7060%" y="949" width="0.0117%" height="15" fill="rgb(219,65,3)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="959.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (9 samples, 0.01%)</title><rect x="11.7060%" y="933" width="0.0117%" height="15" fill="rgb(245,83,25)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="943.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="11.7060%" y="917" width="0.0117%" height="15" fill="rgb(214,205,45)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="927.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="11.7060%" y="901" width="0.0117%" height="15" fill="rgb(241,20,18)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="911.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="11.7060%" y="885" width="0.0117%" height="15" fill="rgb(232,163,23)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="895.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="11.7060%" y="869" width="0.0117%" height="15" fill="rgb(214,5,46)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="11.7060%" y="853" width="0.0117%" height="15" fill="rgb(229,78,17)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="863.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (9 samples, 0.01%)</title><rect x="11.7060%" y="837" width="0.0117%" height="15" fill="rgb(248,89,10)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="11.7060%" y="821" width="0.0117%" height="15" fill="rgb(248,54,15)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="11.7060%" y="805" width="0.0117%" height="15" fill="rgb(223,116,6)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="11.7060%" y="789" width="0.0117%" height="15" fill="rgb(205,125,38)" fg:x="9015" fg:w="9"/><text x="11.9560%" y="799.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (18 samples, 0.02%)</title><rect x="11.7177%" y="725" width="0.0234%" height="15" fill="rgb(251,78,38)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="735.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (18 samples, 0.02%)</title><rect x="11.7177%" y="709" width="0.0234%" height="15" fill="rgb(253,78,28)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="719.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (18 samples, 0.02%)</title><rect x="11.7177%" y="693" width="0.0234%" height="15" fill="rgb(209,120,3)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="11.7177%" y="677" width="0.0234%" height="15" fill="rgb(238,229,9)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="687.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (18 samples, 0.02%)</title><rect x="11.7177%" y="661" width="0.0234%" height="15" fill="rgb(253,159,18)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="671.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (18 samples, 0.02%)</title><rect x="11.7177%" y="645" width="0.0234%" height="15" fill="rgb(244,42,34)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="655.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (18 samples, 0.02%)</title><rect x="11.7177%" y="629" width="0.0234%" height="15" fill="rgb(224,8,7)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="639.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="11.7177%" y="613" width="0.0234%" height="15" fill="rgb(210,201,45)" fg:x="9024" fg:w="18"/><text x="11.9677%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (19 samples, 0.02%)</title><rect x="11.7177%" y="885" width="0.0247%" height="15" fill="rgb(252,185,21)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="895.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.02%)</title><rect x="11.7177%" y="869" width="0.0247%" height="15" fill="rgb(223,131,1)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (19 samples, 0.02%)</title><rect x="11.7177%" y="853" width="0.0247%" height="15" fill="rgb(245,141,16)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="11.7177%" y="837" width="0.0247%" height="15" fill="rgb(229,55,45)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="11.7177%" y="821" width="0.0247%" height="15" fill="rgb(208,92,15)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.02%)</title><rect x="11.7177%" y="805" width="0.0247%" height="15" fill="rgb(234,185,47)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.02%)</title><rect x="11.7177%" y="789" width="0.0247%" height="15" fill="rgb(253,104,50)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="799.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="11.7177%" y="773" width="0.0247%" height="15" fill="rgb(205,70,7)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="783.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (19 samples, 0.02%)</title><rect x="11.7177%" y="757" width="0.0247%" height="15" fill="rgb(240,178,43)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="767.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (19 samples, 0.02%)</title><rect x="11.7177%" y="741" width="0.0247%" height="15" fill="rgb(214,112,2)" fg:x="9024" fg:w="19"/><text x="11.9677%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="11.7436%" y="709" width="0.0156%" height="15" fill="rgb(206,46,17)" fg:x="9044" fg:w="12"/><text x="11.9936%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="11.7449%" y="693" width="0.0143%" height="15" fill="rgb(225,220,16)" fg:x="9045" fg:w="11"/><text x="11.9949%" y="703.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (13 samples, 0.02%)</title><rect x="11.7436%" y="773" width="0.0169%" height="15" fill="rgb(238,65,40)" fg:x="9044" fg:w="13"/><text x="11.9936%" y="783.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.02%)</title><rect x="11.7436%" y="757" width="0.0169%" height="15" fill="rgb(230,151,21)" fg:x="9044" fg:w="13"/><text x="11.9936%" y="767.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.02%)</title><rect x="11.7436%" y="741" width="0.0169%" height="15" fill="rgb(218,58,49)" fg:x="9044" fg:w="13"/><text x="11.9936%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13 samples, 0.02%)</title><rect x="11.7436%" y="725" width="0.0169%" height="15" fill="rgb(219,179,14)" fg:x="9044" fg:w="13"/><text x="11.9936%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (18 samples, 0.02%)</title><rect x="11.7436%" y="837" width="0.0234%" height="15" fill="rgb(223,72,1)" fg:x="9044" fg:w="18"/><text x="11.9936%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.02%)</title><rect x="11.7436%" y="821" width="0.0234%" height="15" fill="rgb(238,126,10)" fg:x="9044" fg:w="18"/><text x="11.9936%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="11.7436%" y="805" width="0.0234%" height="15" fill="rgb(224,206,38)" fg:x="9044" fg:w="18"/><text x="11.9936%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="11.7436%" y="789" width="0.0234%" height="15" fill="rgb(212,201,54)" fg:x="9044" fg:w="18"/><text x="11.9936%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (99 samples, 0.13%)</title><rect x="11.6462%" y="1125" width="0.1286%" height="15" fill="rgb(218,154,48)" fg:x="8969" fg:w="99"/><text x="11.8962%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (99 samples, 0.13%)</title><rect x="11.6462%" y="1109" width="0.1286%" height="15" fill="rgb(232,93,24)" fg:x="8969" fg:w="99"/><text x="11.8962%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (99 samples, 0.13%)</title><rect x="11.6462%" y="1093" width="0.1286%" height="15" fill="rgb(245,30,21)" fg:x="8969" fg:w="99"/><text x="11.8962%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (99 samples, 0.13%)</title><rect x="11.6462%" y="1077" width="0.1286%" height="15" fill="rgb(242,148,29)" fg:x="8969" fg:w="99"/><text x="11.8962%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (70 samples, 0.09%)</title><rect x="11.6839%" y="1061" width="0.0909%" height="15" fill="rgb(244,153,54)" fg:x="8998" fg:w="70"/><text x="11.9339%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (70 samples, 0.09%)</title><rect x="11.6839%" y="1045" width="0.0909%" height="15" fill="rgb(252,87,22)" fg:x="8998" fg:w="70"/><text x="11.9339%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (70 samples, 0.09%)</title><rect x="11.6839%" y="1029" width="0.0909%" height="15" fill="rgb(210,51,29)" fg:x="8998" fg:w="70"/><text x="11.9339%" y="1039.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (44 samples, 0.06%)</title><rect x="11.7177%" y="1013" width="0.0571%" height="15" fill="rgb(242,136,47)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.06%)</title><rect x="11.7177%" y="997" width="0.0571%" height="15" fill="rgb(238,68,4)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="1007.50"></text></g><g><title>std::panicking::try (44 samples, 0.06%)</title><rect x="11.7177%" y="981" width="0.0571%" height="15" fill="rgb(242,161,30)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="991.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.06%)</title><rect x="11.7177%" y="965" width="0.0571%" height="15" fill="rgb(218,58,44)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.06%)</title><rect x="11.7177%" y="949" width="0.0571%" height="15" fill="rgb(252,125,32)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (44 samples, 0.06%)</title><rect x="11.7177%" y="933" width="0.0571%" height="15" fill="rgb(219,178,0)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (44 samples, 0.06%)</title><rect x="11.7177%" y="917" width="0.0571%" height="15" fill="rgb(213,152,7)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.06%)</title><rect x="11.7177%" y="901" width="0.0571%" height="15" fill="rgb(249,109,34)" fg:x="9024" fg:w="44"/><text x="11.9677%" y="911.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.03%)</title><rect x="11.7423%" y="885" width="0.0325%" height="15" fill="rgb(232,96,21)" fg:x="9043" fg:w="25"/><text x="11.9923%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.03%)</title><rect x="11.7423%" y="869" width="0.0325%" height="15" fill="rgb(228,27,39)" fg:x="9043" fg:w="25"/><text x="11.9923%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.03%)</title><rect x="11.7436%" y="853" width="0.0312%" height="15" fill="rgb(211,182,52)" fg:x="9044" fg:w="24"/><text x="11.9936%" y="863.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.01%)</title><rect x="11.7800%" y="805" width="0.0104%" height="15" fill="rgb(234,178,38)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="815.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.01%)</title><rect x="11.7800%" y="789" width="0.0104%" height="15" fill="rgb(221,111,3)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="799.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.01%)</title><rect x="11.7800%" y="773" width="0.0104%" height="15" fill="rgb(228,175,21)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="783.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (8 samples, 0.01%)</title><rect x="11.7800%" y="757" width="0.0104%" height="15" fill="rgb(228,174,43)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="11.7800%" y="741" width="0.0104%" height="15" fill="rgb(211,191,0)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="751.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="11.7800%" y="725" width="0.0104%" height="15" fill="rgb(253,117,3)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="735.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="11.7800%" y="709" width="0.0104%" height="15" fill="rgb(241,127,19)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="719.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="11.7800%" y="693" width="0.0104%" height="15" fill="rgb(218,103,12)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="11.7800%" y="677" width="0.0104%" height="15" fill="rgb(236,214,43)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="687.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (8 samples, 0.01%)</title><rect x="11.7800%" y="661" width="0.0104%" height="15" fill="rgb(244,144,19)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="11.7800%" y="645" width="0.0104%" height="15" fill="rgb(246,188,10)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="11.7800%" y="629" width="0.0104%" height="15" fill="rgb(212,193,33)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="11.7800%" y="613" width="0.0104%" height="15" fill="rgb(241,51,29)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="623.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="11.7800%" y="597" width="0.0104%" height="15" fill="rgb(211,58,19)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="607.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="11.7800%" y="581" width="0.0104%" height="15" fill="rgb(229,111,26)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="591.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="11.7800%" y="565" width="0.0104%" height="15" fill="rgb(213,115,40)" fg:x="9072" fg:w="8"/><text x="12.0300%" y="575.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.01%)</title><rect x="11.7800%" y="837" width="0.0117%" height="15" fill="rgb(209,56,44)" fg:x="9072" fg:w="9"/><text x="12.0300%" y="847.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="11.7800%" y="821" width="0.0117%" height="15" fill="rgb(230,108,32)" fg:x="9072" fg:w="9"/><text x="12.0300%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (24 samples, 0.03%)</title><rect x="11.7748%" y="1125" width="0.0312%" height="15" fill="rgb(216,165,31)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (24 samples, 0.03%)</title><rect x="11.7748%" y="1109" width="0.0312%" height="15" fill="rgb(218,122,21)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (24 samples, 0.03%)</title><rect x="11.7748%" y="1093" width="0.0312%" height="15" fill="rgb(223,224,47)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1103.50"></text></g><g><title>rayon_core::job::JobRef::execute (24 samples, 0.03%)</title><rect x="11.7748%" y="1077" width="0.0312%" height="15" fill="rgb(238,102,44)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (24 samples, 0.03%)</title><rect x="11.7748%" y="1061" width="0.0312%" height="15" fill="rgb(236,46,40)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1071.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (24 samples, 0.03%)</title><rect x="11.7748%" y="1045" width="0.0312%" height="15" fill="rgb(247,202,50)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (24 samples, 0.03%)</title><rect x="11.7748%" y="1029" width="0.0312%" height="15" fill="rgb(209,99,20)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.03%)</title><rect x="11.7748%" y="1013" width="0.0312%" height="15" fill="rgb(252,27,34)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1023.50"></text></g><g><title>std::panicking::try (24 samples, 0.03%)</title><rect x="11.7748%" y="997" width="0.0312%" height="15" fill="rgb(215,206,23)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.03%)</title><rect x="11.7748%" y="981" width="0.0312%" height="15" fill="rgb(212,135,36)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 0.03%)</title><rect x="11.7748%" y="965" width="0.0312%" height="15" fill="rgb(240,189,1)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="975.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (24 samples, 0.03%)</title><rect x="11.7748%" y="949" width="0.0312%" height="15" fill="rgb(242,56,20)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (24 samples, 0.03%)</title><rect x="11.7748%" y="933" width="0.0312%" height="15" fill="rgb(247,132,33)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (24 samples, 0.03%)</title><rect x="11.7748%" y="917" width="0.0312%" height="15" fill="rgb(208,149,11)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="11.7748%" y="901" width="0.0312%" height="15" fill="rgb(211,33,11)" fg:x="9068" fg:w="24"/><text x="12.0248%" y="911.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.03%)</title><rect x="11.7787%" y="885" width="0.0273%" height="15" fill="rgb(221,29,38)" fg:x="9071" fg:w="21"/><text x="12.0287%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.03%)</title><rect x="11.7787%" y="869" width="0.0273%" height="15" fill="rgb(206,182,49)" fg:x="9071" fg:w="21"/><text x="12.0287%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.03%)</title><rect x="11.7787%" y="853" width="0.0273%" height="15" fill="rgb(216,140,1)" fg:x="9071" fg:w="21"/><text x="12.0287%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="11.7917%" y="837" width="0.0143%" height="15" fill="rgb(232,57,40)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="847.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="11.7917%" y="821" width="0.0143%" height="15" fill="rgb(224,186,18)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="831.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="11.7917%" y="805" width="0.0143%" height="15" fill="rgb(215,121,11)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="815.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="11.7917%" y="789" width="0.0143%" height="15" fill="rgb(245,147,10)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="11.7917%" y="773" width="0.0143%" height="15" fill="rgb(238,153,13)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="11.7917%" y="757" width="0.0143%" height="15" fill="rgb(233,108,0)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="11.7917%" y="741" width="0.0143%" height="15" fill="rgb(212,157,17)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="11.7917%" y="725" width="0.0143%" height="15" fill="rgb(225,213,38)" fg:x="9081" fg:w="11"/><text x="12.0417%" y="735.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="11.7943%" y="709" width="0.0117%" height="15" fill="rgb(248,16,11)" fg:x="9083" fg:w="9"/><text x="12.0443%" y="719.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="11.7943%" y="693" width="0.0117%" height="15" fill="rgb(241,33,4)" fg:x="9083" fg:w="9"/><text x="12.0443%" y="703.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="11.7943%" y="677" width="0.0117%" height="15" fill="rgb(222,26,43)" fg:x="9083" fg:w="9"/><text x="12.0443%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.02%)</title><rect x="11.8098%" y="869" width="0.0156%" height="15" fill="rgb(243,29,36)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="11.8098%" y="853" width="0.0156%" height="15" fill="rgb(241,9,27)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="11.8098%" y="837" width="0.0156%" height="15" fill="rgb(205,117,26)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="11.8098%" y="821" width="0.0156%" height="15" fill="rgb(209,80,39)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="11.8098%" y="805" width="0.0156%" height="15" fill="rgb(239,155,6)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="11.8098%" y="789" width="0.0156%" height="15" fill="rgb(212,104,12)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="799.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="11.8098%" y="773" width="0.0156%" height="15" fill="rgb(234,204,3)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="783.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="11.8098%" y="757" width="0.0156%" height="15" fill="rgb(251,218,7)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="767.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="11.8098%" y="741" width="0.0156%" height="15" fill="rgb(221,81,32)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="751.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="11.8098%" y="725" width="0.0156%" height="15" fill="rgb(214,152,26)" fg:x="9095" fg:w="12"/><text x="12.0598%" y="735.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (46 samples, 0.06%)</title><rect x="11.8267%" y="837" width="0.0597%" height="15" fill="rgb(223,22,3)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="847.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (46 samples, 0.06%)</title><rect x="11.8267%" y="821" width="0.0597%" height="15" fill="rgb(207,174,7)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="831.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (46 samples, 0.06%)</title><rect x="11.8267%" y="805" width="0.0597%" height="15" fill="rgb(224,19,52)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (46 samples, 0.06%)</title><rect x="11.8267%" y="789" width="0.0597%" height="15" fill="rgb(228,24,14)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="799.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (46 samples, 0.06%)</title><rect x="11.8267%" y="773" width="0.0597%" height="15" fill="rgb(230,153,43)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="783.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (46 samples, 0.06%)</title><rect x="11.8267%" y="757" width="0.0597%" height="15" fill="rgb(231,106,12)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="767.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (46 samples, 0.06%)</title><rect x="11.8267%" y="741" width="0.0597%" height="15" fill="rgb(215,92,2)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="751.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (46 samples, 0.06%)</title><rect x="11.8267%" y="725" width="0.0597%" height="15" fill="rgb(249,143,25)" fg:x="9108" fg:w="46"/><text x="12.0767%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (61 samples, 0.08%)</title><rect x="11.8098%" y="997" width="0.0792%" height="15" fill="rgb(252,7,35)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (61 samples, 0.08%)</title><rect x="11.8098%" y="981" width="0.0792%" height="15" fill="rgb(216,69,40)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="991.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (61 samples, 0.08%)</title><rect x="11.8098%" y="965" width="0.0792%" height="15" fill="rgb(240,36,33)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.08%)</title><rect x="11.8098%" y="949" width="0.0792%" height="15" fill="rgb(231,128,14)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (61 samples, 0.08%)</title><rect x="11.8098%" y="933" width="0.0792%" height="15" fill="rgb(245,143,14)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (61 samples, 0.08%)</title><rect x="11.8098%" y="917" width="0.0792%" height="15" fill="rgb(222,130,28)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (61 samples, 0.08%)</title><rect x="11.8098%" y="901" width="0.0792%" height="15" fill="rgb(212,10,48)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="911.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (61 samples, 0.08%)</title><rect x="11.8098%" y="885" width="0.0792%" height="15" fill="rgb(254,118,45)" fg:x="9095" fg:w="61"/><text x="12.0598%" y="895.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (49 samples, 0.06%)</title><rect x="11.8254%" y="869" width="0.0636%" height="15" fill="rgb(228,6,45)" fg:x="9107" fg:w="49"/><text x="12.0754%" y="879.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (48 samples, 0.06%)</title><rect x="11.8267%" y="853" width="0.0623%" height="15" fill="rgb(241,18,35)" fg:x="9108" fg:w="48"/><text x="12.0767%" y="863.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (18 samples, 0.02%)</title><rect x="11.8917%" y="725" width="0.0234%" height="15" fill="rgb(227,214,53)" fg:x="9158" fg:w="18"/><text x="12.1417%" y="735.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (18 samples, 0.02%)</title><rect x="11.8917%" y="709" width="0.0234%" height="15" fill="rgb(224,107,51)" fg:x="9158" fg:w="18"/><text x="12.1417%" y="719.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (18 samples, 0.02%)</title><rect x="11.8917%" y="693" width="0.0234%" height="15" fill="rgb(248,60,28)" fg:x="9158" fg:w="18"/><text x="12.1417%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="11.8917%" y="677" width="0.0234%" height="15" fill="rgb(249,101,23)" fg:x="9158" fg:w="18"/><text x="12.1417%" y="687.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (18 samples, 0.02%)</title><rect x="11.8917%" y="661" width="0.0234%" height="15" fill="rgb(228,51,19)" fg:x="9158" fg:w="18"/><text x="12.1417%" y="671.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (18 samples, 0.02%)</title><rect x="11.8917%" y="645" width="0.0234%" height="15" fill="rgb(213,20,6)" fg:x="9158" fg:w="18"/><text x="12.1417%" y="655.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (18 samples, 0.02%)</title><rect x="11.8917%" y="629" width="0.0234%" height="15" fill="rgb(212,124,10)" fg:x="9158" fg:w="18"/><text x="12.1417%" y="639.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="11.8930%" y="613" width="0.0221%" height="15" fill="rgb(248,3,40)" fg:x="9159" fg:w="17"/><text x="12.1430%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (19 samples, 0.02%)</title><rect x="11.8917%" y="885" width="0.0247%" height="15" fill="rgb(223,178,23)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="895.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.02%)</title><rect x="11.8917%" y="869" width="0.0247%" height="15" fill="rgb(240,132,45)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (19 samples, 0.02%)</title><rect x="11.8917%" y="853" width="0.0247%" height="15" fill="rgb(245,164,36)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="11.8917%" y="837" width="0.0247%" height="15" fill="rgb(231,188,53)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="11.8917%" y="821" width="0.0247%" height="15" fill="rgb(237,198,39)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.02%)</title><rect x="11.8917%" y="805" width="0.0247%" height="15" fill="rgb(223,120,35)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.02%)</title><rect x="11.8917%" y="789" width="0.0247%" height="15" fill="rgb(253,107,49)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="799.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="11.8917%" y="773" width="0.0247%" height="15" fill="rgb(216,44,31)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="783.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (19 samples, 0.02%)</title><rect x="11.8917%" y="757" width="0.0247%" height="15" fill="rgb(253,87,21)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="767.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (19 samples, 0.02%)</title><rect x="11.8917%" y="741" width="0.0247%" height="15" fill="rgb(226,18,2)" fg:x="9158" fg:w="19"/><text x="12.1417%" y="751.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="11.9163%" y="837" width="0.0130%" height="15" fill="rgb(216,8,46)" fg:x="9177" fg:w="10"/><text x="12.1663%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.01%)</title><rect x="11.9163%" y="821" width="0.0130%" height="15" fill="rgb(226,140,39)" fg:x="9177" fg:w="10"/><text x="12.1663%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="11.9163%" y="805" width="0.0130%" height="15" fill="rgb(221,194,54)" fg:x="9177" fg:w="10"/><text x="12.1663%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="11.9163%" y="789" width="0.0130%" height="15" fill="rgb(213,92,11)" fg:x="9177" fg:w="10"/><text x="12.1663%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (38 samples, 0.05%)</title><rect x="11.8904%" y="949" width="0.0493%" height="15" fill="rgb(229,162,46)" fg:x="9157" fg:w="38"/><text x="12.1404%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (38 samples, 0.05%)</title><rect x="11.8904%" y="933" width="0.0493%" height="15" fill="rgb(214,111,36)" fg:x="9157" fg:w="38"/><text x="12.1404%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (38 samples, 0.05%)</title><rect x="11.8904%" y="917" width="0.0493%" height="15" fill="rgb(207,6,21)" fg:x="9157" fg:w="38"/><text x="12.1404%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.05%)</title><rect x="11.8904%" y="901" width="0.0493%" height="15" fill="rgb(213,127,38)" fg:x="9157" fg:w="38"/><text x="12.1404%" y="911.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="11.9163%" y="885" width="0.0234%" height="15" fill="rgb(238,118,32)" fg:x="9177" fg:w="18"/><text x="12.1663%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="11.9163%" y="869" width="0.0234%" height="15" fill="rgb(240,139,39)" fg:x="9177" fg:w="18"/><text x="12.1663%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="11.9163%" y="853" width="0.0234%" height="15" fill="rgb(235,10,37)" fg:x="9177" fg:w="18"/><text x="12.1663%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="11.9293%" y="837" width="0.0104%" height="15" fill="rgb(249,171,38)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="847.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="11.9293%" y="821" width="0.0104%" height="15" fill="rgb(242,144,32)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="831.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="11.9293%" y="805" width="0.0104%" height="15" fill="rgb(217,117,21)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="815.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="11.9293%" y="789" width="0.0104%" height="15" fill="rgb(249,87,1)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="11.9293%" y="773" width="0.0104%" height="15" fill="rgb(248,196,48)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="11.9293%" y="757" width="0.0104%" height="15" fill="rgb(251,206,33)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="11.9293%" y="741" width="0.0104%" height="15" fill="rgb(232,141,28)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="11.9293%" y="725" width="0.0104%" height="15" fill="rgb(209,167,14)" fg:x="9187" fg:w="8"/><text x="12.1793%" y="735.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (9 samples, 0.01%)</title><rect x="11.9410%" y="821" width="0.0117%" height="15" fill="rgb(225,11,50)" fg:x="9196" fg:w="9"/><text x="12.1910%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 0.01%)</title><rect x="11.9410%" y="805" width="0.0117%" height="15" fill="rgb(209,50,20)" fg:x="9196" fg:w="9"/><text x="12.1910%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="11.9410%" y="789" width="0.0117%" height="15" fill="rgb(212,17,46)" fg:x="9196" fg:w="9"/><text x="12.1910%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9 samples, 0.01%)</title><rect x="11.9410%" y="773" width="0.0117%" height="15" fill="rgb(216,101,39)" fg:x="9196" fg:w="9"/><text x="12.1910%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="11.9410%" y="757" width="0.0117%" height="15" fill="rgb(212,228,48)" fg:x="9196" fg:w="9"/><text x="12.1910%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="11.9423%" y="741" width="0.0104%" height="15" fill="rgb(250,6,50)" fg:x="9197" fg:w="8"/><text x="12.1923%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (26 samples, 0.03%)</title><rect x="11.9527%" y="821" width="0.0338%" height="15" fill="rgb(250,160,48)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="831.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.03%)</title><rect x="11.9527%" y="805" width="0.0338%" height="15" fill="rgb(244,216,33)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (26 samples, 0.03%)</title><rect x="11.9527%" y="789" width="0.0338%" height="15" fill="rgb(207,157,5)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="11.9527%" y="773" width="0.0338%" height="15" fill="rgb(228,199,8)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 0.03%)</title><rect x="11.9527%" y="757" width="0.0338%" height="15" fill="rgb(227,80,20)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (26 samples, 0.03%)</title><rect x="11.9527%" y="741" width="0.0338%" height="15" fill="rgb(222,9,33)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (26 samples, 0.03%)</title><rect x="11.9527%" y="725" width="0.0338%" height="15" fill="rgb(239,44,28)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="735.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="11.9527%" y="709" width="0.0338%" height="15" fill="rgb(249,187,43)" fg:x="9205" fg:w="26"/><text x="12.2027%" y="719.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (19 samples, 0.02%)</title><rect x="11.9618%" y="693" width="0.0247%" height="15" fill="rgb(216,141,28)" fg:x="9212" fg:w="19"/><text x="12.2118%" y="703.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (18 samples, 0.02%)</title><rect x="11.9631%" y="677" width="0.0234%" height="15" fill="rgb(230,154,53)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="687.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (18 samples, 0.02%)</title><rect x="11.9631%" y="661" width="0.0234%" height="15" fill="rgb(227,82,4)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="671.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (18 samples, 0.02%)</title><rect x="11.9631%" y="645" width="0.0234%" height="15" fill="rgb(220,107,16)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="655.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (18 samples, 0.02%)</title><rect x="11.9631%" y="629" width="0.0234%" height="15" fill="rgb(207,187,2)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="11.9631%" y="613" width="0.0234%" height="15" fill="rgb(210,162,52)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="623.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (18 samples, 0.02%)</title><rect x="11.9631%" y="597" width="0.0234%" height="15" fill="rgb(217,216,49)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="607.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (18 samples, 0.02%)</title><rect x="11.9631%" y="581" width="0.0234%" height="15" fill="rgb(218,146,49)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="591.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (18 samples, 0.02%)</title><rect x="11.9631%" y="565" width="0.0234%" height="15" fill="rgb(216,55,40)" fg:x="9213" fg:w="18"/><text x="12.2131%" y="575.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (16 samples, 0.02%)</title><rect x="11.9657%" y="549" width="0.0208%" height="15" fill="rgb(208,196,21)" fg:x="9215" fg:w="16"/><text x="12.2157%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="11.9877%" y="645" width="0.0104%" height="15" fill="rgb(242,117,42)" fg:x="9232" fg:w="8"/><text x="12.2377%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="11.9877%" y="629" width="0.0104%" height="15" fill="rgb(210,11,23)" fg:x="9232" fg:w="8"/><text x="12.2377%" y="639.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (10 samples, 0.01%)</title><rect x="11.9877%" y="709" width="0.0130%" height="15" fill="rgb(217,110,2)" fg:x="9232" fg:w="10"/><text x="12.2377%" y="719.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (10 samples, 0.01%)</title><rect x="11.9877%" y="693" width="0.0130%" height="15" fill="rgb(229,77,54)" fg:x="9232" fg:w="10"/><text x="12.2377%" y="703.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.01%)</title><rect x="11.9877%" y="677" width="0.0130%" height="15" fill="rgb(218,53,16)" fg:x="9232" fg:w="10"/><text x="12.2377%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (10 samples, 0.01%)</title><rect x="11.9877%" y="661" width="0.0130%" height="15" fill="rgb(215,38,13)" fg:x="9232" fg:w="10"/><text x="12.2377%" y="671.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.02%)</title><rect x="11.9877%" y="773" width="0.0208%" height="15" fill="rgb(235,42,18)" fg:x="9232" fg:w="16"/><text x="12.2377%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (16 samples, 0.02%)</title><rect x="11.9877%" y="757" width="0.0208%" height="15" fill="rgb(219,66,54)" fg:x="9232" fg:w="16"/><text x="12.2377%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="11.9877%" y="741" width="0.0208%" height="15" fill="rgb(222,205,4)" fg:x="9232" fg:w="16"/><text x="12.2377%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="11.9877%" y="725" width="0.0208%" height="15" fill="rgb(227,213,46)" fg:x="9232" fg:w="16"/><text x="12.2377%" y="735.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (26 samples, 0.03%)</title><rect x="12.0098%" y="645" width="0.0338%" height="15" fill="rgb(250,145,42)" fg:x="9249" fg:w="26"/><text x="12.2598%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (26 samples, 0.03%)</title><rect x="12.0098%" y="629" width="0.0338%" height="15" fill="rgb(219,15,2)" fg:x="9249" fg:w="26"/><text x="12.2598%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.03%)</title><rect x="12.0098%" y="613" width="0.0338%" height="15" fill="rgb(231,181,52)" fg:x="9249" fg:w="26"/><text x="12.2598%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (26 samples, 0.03%)</title><rect x="12.0098%" y="597" width="0.0338%" height="15" fill="rgb(235,1,42)" fg:x="9249" fg:w="26"/><text x="12.2598%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="12.0111%" y="581" width="0.0325%" height="15" fill="rgb(249,88,27)" fg:x="9250" fg:w="25"/><text x="12.2611%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (25 samples, 0.03%)</title><rect x="12.0111%" y="565" width="0.0325%" height="15" fill="rgb(235,145,16)" fg:x="9250" fg:w="25"/><text x="12.2611%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (24 samples, 0.03%)</title><rect x="12.0124%" y="549" width="0.0312%" height="15" fill="rgb(237,114,19)" fg:x="9251" fg:w="24"/><text x="12.2624%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (24 samples, 0.03%)</title><rect x="12.0124%" y="533" width="0.0312%" height="15" fill="rgb(238,51,50)" fg:x="9251" fg:w="24"/><text x="12.2624%" y="543.50"></text></g><g><title>core::ops::function::Fn::call (24 samples, 0.03%)</title><rect x="12.0124%" y="517" width="0.0312%" height="15" fill="rgb(205,194,25)" fg:x="9251" fg:w="24"/><text x="12.2624%" y="527.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (24 samples, 0.03%)</title><rect x="12.0124%" y="501" width="0.0312%" height="15" fill="rgb(215,203,17)" fg:x="9251" fg:w="24"/><text x="12.2624%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.03%)</title><rect x="12.0176%" y="485" width="0.0260%" height="15" fill="rgb(233,112,49)" fg:x="9255" fg:w="20"/><text x="12.2676%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.03%)</title><rect x="12.0176%" y="469" width="0.0260%" height="15" fill="rgb(241,130,26)" fg:x="9255" fg:w="20"/><text x="12.2676%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.03%)</title><rect x="12.0176%" y="453" width="0.0260%" height="15" fill="rgb(252,223,19)" fg:x="9255" fg:w="20"/><text x="12.2676%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.03%)</title><rect x="12.0176%" y="437" width="0.0260%" height="15" fill="rgb(211,95,25)" fg:x="9255" fg:w="20"/><text x="12.2676%" y="447.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="12.0176%" y="421" width="0.0260%" height="15" fill="rgb(251,182,27)" fg:x="9255" fg:w="20"/><text x="12.2676%" y="431.50"></text></g><g><title>malloc (20 samples, 0.03%)</title><rect x="12.0176%" y="405" width="0.0260%" height="15" fill="rgb(238,24,4)" fg:x="9255" fg:w="20"/><text x="12.2676%" y="415.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="12.0202%" y="389" width="0.0234%" height="15" fill="rgb(224,220,25)" fg:x="9257" fg:w="18"/><text x="12.2702%" y="399.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,023 samples, 1.33%)</title><rect x="10.7321%" y="1573" width="1.3284%" height="15" fill="rgb(239,133,26)" fg:x="8265" fg:w="1023"/><text x="10.9821%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,023 samples, 1.33%)</title><rect x="10.7321%" y="1557" width="1.3284%" height="15" fill="rgb(211,94,48)" fg:x="8265" fg:w="1023"/><text x="10.9821%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,018 samples, 1.32%)</title><rect x="10.7386%" y="1541" width="1.3219%" height="15" fill="rgb(239,87,6)" fg:x="8270" fg:w="1018"/><text x="10.9886%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (963 samples, 1.25%)</title><rect x="10.8100%" y="1525" width="1.2505%" height="15" fill="rgb(227,62,0)" fg:x="8325" fg:w="963"/><text x="11.0600%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (963 samples, 1.25%)</title><rect x="10.8100%" y="1509" width="1.2505%" height="15" fill="rgb(211,226,4)" fg:x="8325" fg:w="963"/><text x="11.0600%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (962 samples, 1.25%)</title><rect x="10.8113%" y="1493" width="1.2492%" height="15" fill="rgb(253,38,52)" fg:x="8326" fg:w="962"/><text x="11.0613%" y="1503.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (707 samples, 0.92%)</title><rect x="11.1424%" y="1477" width="0.9180%" height="15" fill="rgb(229,126,40)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (707 samples, 0.92%)</title><rect x="11.1424%" y="1461" width="0.9180%" height="15" fill="rgb(229,165,44)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1471.50"></text></g><g><title>std::panicking::try (707 samples, 0.92%)</title><rect x="11.1424%" y="1445" width="0.9180%" height="15" fill="rgb(247,95,47)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (707 samples, 0.92%)</title><rect x="11.1424%" y="1429" width="0.9180%" height="15" fill="rgb(216,140,30)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (707 samples, 0.92%)</title><rect x="11.1424%" y="1413" width="0.9180%" height="15" fill="rgb(246,214,8)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (707 samples, 0.92%)</title><rect x="11.1424%" y="1397" width="0.9180%" height="15" fill="rgb(227,224,15)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (707 samples, 0.92%)</title><rect x="11.1424%" y="1381" width="0.9180%" height="15" fill="rgb(233,175,4)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (707 samples, 0.92%)</title><rect x="11.1424%" y="1365" width="0.9180%" height="15" fill="rgb(221,66,45)" fg:x="8581" fg:w="707"/><text x="11.3924%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (613 samples, 0.80%)</title><rect x="11.2645%" y="1349" width="0.7960%" height="15" fill="rgb(221,178,18)" fg:x="8675" fg:w="613"/><text x="11.5145%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (613 samples, 0.80%)</title><rect x="11.2645%" y="1333" width="0.7960%" height="15" fill="rgb(213,81,29)" fg:x="8675" fg:w="613"/><text x="11.5145%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (613 samples, 0.80%)</title><rect x="11.2645%" y="1317" width="0.7960%" height="15" fill="rgb(220,89,49)" fg:x="8675" fg:w="613"/><text x="11.5145%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (407 samples, 0.53%)</title><rect x="11.5320%" y="1301" width="0.5285%" height="15" fill="rgb(227,60,33)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (407 samples, 0.53%)</title><rect x="11.5320%" y="1285" width="0.5285%" height="15" fill="rgb(205,113,12)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1295.50"></text></g><g><title>std::panicking::try (407 samples, 0.53%)</title><rect x="11.5320%" y="1269" width="0.5285%" height="15" fill="rgb(211,32,1)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (407 samples, 0.53%)</title><rect x="11.5320%" y="1253" width="0.5285%" height="15" fill="rgb(246,2,12)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1263.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (407 samples, 0.53%)</title><rect x="11.5320%" y="1237" width="0.5285%" height="15" fill="rgb(243,37,27)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (407 samples, 0.53%)</title><rect x="11.5320%" y="1221" width="0.5285%" height="15" fill="rgb(248,211,31)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (407 samples, 0.53%)</title><rect x="11.5320%" y="1205" width="0.5285%" height="15" fill="rgb(242,146,47)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (407 samples, 0.53%)</title><rect x="11.5320%" y="1189" width="0.5285%" height="15" fill="rgb(206,70,20)" fg:x="8881" fg:w="407"/><text x="11.7820%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (319 samples, 0.41%)</title><rect x="11.6462%" y="1173" width="0.4142%" height="15" fill="rgb(215,10,51)" fg:x="8969" fg:w="319"/><text x="11.8962%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (319 samples, 0.41%)</title><rect x="11.6462%" y="1157" width="0.4142%" height="15" fill="rgb(243,178,53)" fg:x="8969" fg:w="319"/><text x="11.8962%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (319 samples, 0.41%)</title><rect x="11.6462%" y="1141" width="0.4142%" height="15" fill="rgb(233,221,20)" fg:x="8969" fg:w="319"/><text x="11.8962%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (196 samples, 0.25%)</title><rect x="11.8060%" y="1125" width="0.2545%" height="15" fill="rgb(218,95,35)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (196 samples, 0.25%)</title><rect x="11.8060%" y="1109" width="0.2545%" height="15" fill="rgb(229,13,5)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1119.50"></text></g><g><title>std::panicking::try (196 samples, 0.25%)</title><rect x="11.8060%" y="1093" width="0.2545%" height="15" fill="rgb(252,164,30)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (196 samples, 0.25%)</title><rect x="11.8060%" y="1077" width="0.2545%" height="15" fill="rgb(232,68,36)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (196 samples, 0.25%)</title><rect x="11.8060%" y="1061" width="0.2545%" height="15" fill="rgb(219,59,54)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (196 samples, 0.25%)</title><rect x="11.8060%" y="1045" width="0.2545%" height="15" fill="rgb(250,92,33)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (196 samples, 0.25%)</title><rect x="11.8060%" y="1029" width="0.2545%" height="15" fill="rgb(229,162,54)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (196 samples, 0.25%)</title><rect x="11.8060%" y="1013" width="0.2545%" height="15" fill="rgb(244,114,52)" fg:x="9092" fg:w="196"/><text x="12.0560%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (132 samples, 0.17%)</title><rect x="11.8891%" y="997" width="0.1714%" height="15" fill="rgb(212,211,43)" fg:x="9156" fg:w="132"/><text x="12.1391%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (132 samples, 0.17%)</title><rect x="11.8891%" y="981" width="0.1714%" height="15" fill="rgb(226,147,8)" fg:x="9156" fg:w="132"/><text x="12.1391%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (132 samples, 0.17%)</title><rect x="11.8891%" y="965" width="0.1714%" height="15" fill="rgb(226,23,13)" fg:x="9156" fg:w="132"/><text x="12.1391%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (92 samples, 0.12%)</title><rect x="11.9410%" y="949" width="0.1195%" height="15" fill="rgb(240,63,4)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="959.50"></text></g><g><title>std::panic::catch_unwind (92 samples, 0.12%)</title><rect x="11.9410%" y="933" width="0.1195%" height="15" fill="rgb(221,1,32)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="943.50"></text></g><g><title>std::panicking::try (92 samples, 0.12%)</title><rect x="11.9410%" y="917" width="0.1195%" height="15" fill="rgb(242,117,10)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="927.50"></text></g><g><title>std::panicking::try::do_call (92 samples, 0.12%)</title><rect x="11.9410%" y="901" width="0.1195%" height="15" fill="rgb(249,172,44)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (92 samples, 0.12%)</title><rect x="11.9410%" y="885" width="0.1195%" height="15" fill="rgb(244,46,45)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (92 samples, 0.12%)</title><rect x="11.9410%" y="869" width="0.1195%" height="15" fill="rgb(206,43,17)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (92 samples, 0.12%)</title><rect x="11.9410%" y="853" width="0.1195%" height="15" fill="rgb(239,218,39)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.12%)</title><rect x="11.9410%" y="837" width="0.1195%" height="15" fill="rgb(208,169,54)" fg:x="9196" fg:w="92"/><text x="12.1910%" y="847.50"></text></g><g><title>rayon_core::join::join_context (57 samples, 0.07%)</title><rect x="11.9864%" y="821" width="0.0740%" height="15" fill="rgb(247,25,42)" fg:x="9231" fg:w="57"/><text x="12.2364%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (57 samples, 0.07%)</title><rect x="11.9864%" y="805" width="0.0740%" height="15" fill="rgb(226,23,31)" fg:x="9231" fg:w="57"/><text x="12.2364%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (56 samples, 0.07%)</title><rect x="11.9877%" y="789" width="0.0727%" height="15" fill="rgb(247,16,28)" fg:x="9232" fg:w="56"/><text x="12.2377%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.05%)</title><rect x="12.0085%" y="773" width="0.0519%" height="15" fill="rgb(231,147,38)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="783.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="12.0085%" y="757" width="0.0519%" height="15" fill="rgb(253,81,48)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="767.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="12.0085%" y="741" width="0.0519%" height="15" fill="rgb(249,222,43)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="751.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="12.0085%" y="725" width="0.0519%" height="15" fill="rgb(221,3,27)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="12.0085%" y="709" width="0.0519%" height="15" fill="rgb(228,180,5)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (40 samples, 0.05%)</title><rect x="12.0085%" y="693" width="0.0519%" height="15" fill="rgb(227,131,42)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.05%)</title><rect x="12.0085%" y="677" width="0.0519%" height="15" fill="rgb(212,3,39)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="12.0085%" y="661" width="0.0519%" height="15" fill="rgb(226,45,5)" fg:x="9248" fg:w="40"/><text x="12.2585%" y="671.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="12.0436%" y="645" width="0.0169%" height="15" fill="rgb(215,167,45)" fg:x="9275" fg:w="13"/><text x="12.2936%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="12.0436%" y="629" width="0.0169%" height="15" fill="rgb(250,218,53)" fg:x="9275" fg:w="13"/><text x="12.2936%" y="639.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="12.0436%" y="613" width="0.0169%" height="15" fill="rgb(207,140,0)" fg:x="9275" fg:w="13"/><text x="12.2936%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="12.0605%" y="1557" width="0.0169%" height="15" fill="rgb(238,133,51)" fg:x="9288" fg:w="13"/><text x="12.3105%" y="1567.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="12.0605%" y="1541" width="0.0169%" height="15" fill="rgb(218,203,53)" fg:x="9288" fg:w="13"/><text x="12.3105%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="12.0605%" y="1525" width="0.0169%" height="15" fill="rgb(226,184,25)" fg:x="9288" fg:w="13"/><text x="12.3105%" y="1535.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="12.0605%" y="1509" width="0.0169%" height="15" fill="rgb(231,121,21)" fg:x="9288" fg:w="13"/><text x="12.3105%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="12.0605%" y="1493" width="0.0169%" height="15" fill="rgb(251,14,34)" fg:x="9288" fg:w="13"/><text x="12.3105%" y="1503.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.02%)</title><rect x="12.0618%" y="1477" width="0.0156%" height="15" fill="rgb(249,193,11)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.02%)</title><rect x="12.0618%" y="1461" width="0.0156%" height="15" fill="rgb(220,172,37)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.02%)</title><rect x="12.0618%" y="1445" width="0.0156%" height="15" fill="rgb(231,229,43)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.02%)</title><rect x="12.0618%" y="1429" width="0.0156%" height="15" fill="rgb(250,161,5)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1439.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.02%)</title><rect x="12.0618%" y="1413" width="0.0156%" height="15" fill="rgb(218,225,18)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1423.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.02%)</title><rect x="12.0618%" y="1397" width="0.0156%" height="15" fill="rgb(245,45,42)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.02%)</title><rect x="12.0618%" y="1381" width="0.0156%" height="15" fill="rgb(211,115,1)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1391.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.02%)</title><rect x="12.0618%" y="1365" width="0.0156%" height="15" fill="rgb(248,133,52)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="12.0618%" y="1349" width="0.0156%" height="15" fill="rgb(238,100,21)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1359.50"></text></g><g><title>std::panicking::try (12 samples, 0.02%)</title><rect x="12.0618%" y="1333" width="0.0156%" height="15" fill="rgb(247,144,11)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="12.0618%" y="1317" width="0.0156%" height="15" fill="rgb(206,164,16)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.02%)</title><rect x="12.0618%" y="1301" width="0.0156%" height="15" fill="rgb(222,34,3)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.02%)</title><rect x="12.0618%" y="1285" width="0.0156%" height="15" fill="rgb(248,82,4)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.02%)</title><rect x="12.0618%" y="1269" width="0.0156%" height="15" fill="rgb(228,81,46)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.02%)</title><rect x="12.0618%" y="1253" width="0.0156%" height="15" fill="rgb(227,67,47)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1263.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.02%)</title><rect x="12.0618%" y="1237" width="0.0156%" height="15" fill="rgb(215,93,53)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1247.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.02%)</title><rect x="12.0618%" y="1221" width="0.0156%" height="15" fill="rgb(248,194,39)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.02%)</title><rect x="12.0618%" y="1205" width="0.0156%" height="15" fill="rgb(215,5,19)" fg:x="9289" fg:w="12"/><text x="12.3118%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.01%)</title><rect x="12.0773%" y="1525" width="0.0130%" height="15" fill="rgb(226,215,51)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="12.0773%" y="1509" width="0.0130%" height="15" fill="rgb(225,56,26)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="12.0773%" y="1493" width="0.0130%" height="15" fill="rgb(222,75,29)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="12.0773%" y="1477" width="0.0130%" height="15" fill="rgb(236,139,6)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.01%)</title><rect x="12.0773%" y="1461" width="0.0130%" height="15" fill="rgb(223,137,36)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="12.0773%" y="1445" width="0.0130%" height="15" fill="rgb(226,99,2)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="12.0773%" y="1429" width="0.0130%" height="15" fill="rgb(206,133,23)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.01%)</title><rect x="12.0773%" y="1413" width="0.0130%" height="15" fill="rgb(243,173,15)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="12.0773%" y="1397" width="0.0130%" height="15" fill="rgb(228,69,28)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="12.0773%" y="1381" width="0.0130%" height="15" fill="rgb(212,51,22)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="12.0773%" y="1365" width="0.0130%" height="15" fill="rgb(227,113,0)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1375.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="12.0773%" y="1349" width="0.0130%" height="15" fill="rgb(252,84,27)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1359.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="12.0773%" y="1333" width="0.0130%" height="15" fill="rgb(223,145,39)" fg:x="9301" fg:w="10"/><text x="12.3273%" y="1343.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="12.0786%" y="1317" width="0.0117%" height="15" fill="rgb(239,219,30)" fg:x="9302" fg:w="9"/><text x="12.3286%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (17 samples, 0.02%)</title><rect x="12.0929%" y="901" width="0.0221%" height="15" fill="rgb(224,196,39)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (17 samples, 0.02%)</title><rect x="12.0929%" y="885" width="0.0221%" height="15" fill="rgb(205,35,43)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (17 samples, 0.02%)</title><rect x="12.0929%" y="869" width="0.0221%" height="15" fill="rgb(228,201,21)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="879.50"></text></g><g><title>rayon_core::job::JobRef::execute (17 samples, 0.02%)</title><rect x="12.0929%" y="853" width="0.0221%" height="15" fill="rgb(237,118,16)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="863.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (17 samples, 0.02%)</title><rect x="12.0929%" y="837" width="0.0221%" height="15" fill="rgb(241,17,19)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="847.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (17 samples, 0.02%)</title><rect x="12.0929%" y="821" width="0.0221%" height="15" fill="rgb(214,10,25)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="831.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="12.0929%" y="805" width="0.0221%" height="15" fill="rgb(238,37,29)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="815.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="12.0929%" y="789" width="0.0221%" height="15" fill="rgb(253,83,25)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="799.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="12.0929%" y="773" width="0.0221%" height="15" fill="rgb(234,192,12)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="783.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="12.0929%" y="757" width="0.0221%" height="15" fill="rgb(241,216,45)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="12.0929%" y="741" width="0.0221%" height="15" fill="rgb(242,22,33)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="751.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (17 samples, 0.02%)</title><rect x="12.0929%" y="725" width="0.0221%" height="15" fill="rgb(231,105,49)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.02%)</title><rect x="12.0929%" y="709" width="0.0221%" height="15" fill="rgb(218,204,15)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="12.0929%" y="693" width="0.0221%" height="15" fill="rgb(235,138,41)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.0929%" y="677" width="0.0221%" height="15" fill="rgb(246,0,9)" fg:x="9313" fg:w="17"/><text x="12.3429%" y="687.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="12.1020%" y="661" width="0.0130%" height="15" fill="rgb(210,74,4)" fg:x="9320" fg:w="10"/><text x="12.3520%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="12.1020%" y="645" width="0.0130%" height="15" fill="rgb(250,60,41)" fg:x="9320" fg:w="10"/><text x="12.3520%" y="655.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="12.1020%" y="629" width="0.0130%" height="15" fill="rgb(220,115,12)" fg:x="9320" fg:w="10"/><text x="12.3520%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 0.01%)</title><rect x="12.1384%" y="309" width="0.0143%" height="15" fill="rgb(237,100,13)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="319.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.01%)</title><rect x="12.1384%" y="293" width="0.0143%" height="15" fill="rgb(213,55,26)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="303.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (11 samples, 0.01%)</title><rect x="12.1384%" y="277" width="0.0143%" height="15" fill="rgb(216,17,4)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="12.1384%" y="261" width="0.0143%" height="15" fill="rgb(220,153,47)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="12.1384%" y="245" width="0.0143%" height="15" fill="rgb(215,131,9)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="12.1384%" y="229" width="0.0143%" height="15" fill="rgb(233,46,42)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.01%)</title><rect x="12.1384%" y="213" width="0.0143%" height="15" fill="rgb(226,86,7)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="223.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="12.1384%" y="197" width="0.0143%" height="15" fill="rgb(239,226,21)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="207.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (11 samples, 0.01%)</title><rect x="12.1384%" y="181" width="0.0143%" height="15" fill="rgb(244,137,22)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="191.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (11 samples, 0.01%)</title><rect x="12.1384%" y="165" width="0.0143%" height="15" fill="rgb(211,139,35)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="175.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (11 samples, 0.01%)</title><rect x="12.1384%" y="149" width="0.0143%" height="15" fill="rgb(214,62,50)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="159.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (11 samples, 0.01%)</title><rect x="12.1384%" y="133" width="0.0143%" height="15" fill="rgb(212,113,44)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="143.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (11 samples, 0.01%)</title><rect x="12.1384%" y="117" width="0.0143%" height="15" fill="rgb(226,150,43)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="12.1384%" y="101" width="0.0143%" height="15" fill="rgb(250,71,37)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="111.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (11 samples, 0.01%)</title><rect x="12.1384%" y="85" width="0.0143%" height="15" fill="rgb(219,76,19)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="95.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (11 samples, 0.01%)</title><rect x="12.1384%" y="69" width="0.0143%" height="15" fill="rgb(250,39,11)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="79.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (11 samples, 0.01%)</title><rect x="12.1384%" y="53" width="0.0143%" height="15" fill="rgb(230,64,31)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="63.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="12.1384%" y="37" width="0.0143%" height="15" fill="rgb(208,222,23)" fg:x="9348" fg:w="11"/><text x="12.3884%" y="47.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (31 samples, 0.04%)</title><rect x="12.1202%" y="725" width="0.0403%" height="15" fill="rgb(227,125,18)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="735.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (31 samples, 0.04%)</title><rect x="12.1202%" y="709" width="0.0403%" height="15" fill="rgb(234,210,9)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="719.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (31 samples, 0.04%)</title><rect x="12.1202%" y="693" width="0.0403%" height="15" fill="rgb(217,127,24)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="703.50"></text></g><g><title>rayon_core::job::JobRef::execute (31 samples, 0.04%)</title><rect x="12.1202%" y="677" width="0.0403%" height="15" fill="rgb(239,141,48)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="687.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (31 samples, 0.04%)</title><rect x="12.1202%" y="661" width="0.0403%" height="15" fill="rgb(227,109,8)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="671.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (31 samples, 0.04%)</title><rect x="12.1202%" y="645" width="0.0403%" height="15" fill="rgb(235,184,23)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="655.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (31 samples, 0.04%)</title><rect x="12.1202%" y="629" width="0.0403%" height="15" fill="rgb(227,226,48)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="639.50"></text></g><g><title>std::panic::catch_unwind (31 samples, 0.04%)</title><rect x="12.1202%" y="613" width="0.0403%" height="15" fill="rgb(206,150,11)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="623.50"></text></g><g><title>std::panicking::try (31 samples, 0.04%)</title><rect x="12.1202%" y="597" width="0.0403%" height="15" fill="rgb(254,2,33)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="607.50"></text></g><g><title>std::panicking::try::do_call (31 samples, 0.04%)</title><rect x="12.1202%" y="581" width="0.0403%" height="15" fill="rgb(243,160,20)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="591.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (31 samples, 0.04%)</title><rect x="12.1202%" y="565" width="0.0403%" height="15" fill="rgb(218,208,30)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="575.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (31 samples, 0.04%)</title><rect x="12.1202%" y="549" width="0.0403%" height="15" fill="rgb(224,120,49)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (31 samples, 0.04%)</title><rect x="12.1202%" y="533" width="0.0403%" height="15" fill="rgb(246,12,2)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (31 samples, 0.04%)</title><rect x="12.1202%" y="517" width="0.0403%" height="15" fill="rgb(236,117,3)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.04%)</title><rect x="12.1202%" y="501" width="0.0403%" height="15" fill="rgb(216,128,52)" fg:x="9334" fg:w="31"/><text x="12.3702%" y="511.50"></text></g><g><title>rayon_core::join::join_context (30 samples, 0.04%)</title><rect x="12.1215%" y="485" width="0.0390%" height="15" fill="rgb(246,145,19)" fg:x="9335" fg:w="30"/><text x="12.3715%" y="495.50"></text></g><g><title>rayon_core::registry::in_worker (30 samples, 0.04%)</title><rect x="12.1215%" y="469" width="0.0390%" height="15" fill="rgb(222,11,46)" fg:x="9335" fg:w="30"/><text x="12.3715%" y="479.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (30 samples, 0.04%)</title><rect x="12.1215%" y="453" width="0.0390%" height="15" fill="rgb(245,82,36)" fg:x="9335" fg:w="30"/><text x="12.3715%" y="463.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="12.1384%" y="437" width="0.0221%" height="15" fill="rgb(250,73,51)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="447.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="12.1384%" y="421" width="0.0221%" height="15" fill="rgb(221,189,23)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="431.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="12.1384%" y="405" width="0.0221%" height="15" fill="rgb(210,33,7)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="415.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="12.1384%" y="389" width="0.0221%" height="15" fill="rgb(210,107,22)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="399.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="12.1384%" y="373" width="0.0221%" height="15" fill="rgb(222,116,37)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="383.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="12.1384%" y="357" width="0.0221%" height="15" fill="rgb(254,17,48)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="12.1384%" y="341" width="0.0221%" height="15" fill="rgb(224,36,32)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.1384%" y="325" width="0.0221%" height="15" fill="rgb(232,90,46)" fg:x="9348" fg:w="17"/><text x="12.3884%" y="335.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (38 samples, 0.05%)</title><rect x="12.1656%" y="341" width="0.0493%" height="15" fill="rgb(241,66,40)" fg:x="9369" fg:w="38"/><text x="12.4156%" y="351.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (35 samples, 0.05%)</title><rect x="12.1695%" y="325" width="0.0454%" height="15" fill="rgb(249,184,29)" fg:x="9372" fg:w="35"/><text x="12.4195%" y="335.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}} (108 samples, 0.14%)</title><rect x="12.0773%" y="1541" width="0.1402%" height="15" fill="rgb(231,181,1)" fg:x="9301" fg:w="108"/><text x="12.3273%" y="1551.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (98 samples, 0.13%)</title><rect x="12.0903%" y="1525" width="0.1273%" height="15" fill="rgb(224,94,2)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1535.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (98 samples, 0.13%)</title><rect x="12.0903%" y="1509" width="0.1273%" height="15" fill="rgb(229,170,15)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1519.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (98 samples, 0.13%)</title><rect x="12.0903%" y="1493" width="0.1273%" height="15" fill="rgb(240,127,35)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1503.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (98 samples, 0.13%)</title><rect x="12.0903%" y="1477" width="0.1273%" height="15" fill="rgb(248,196,34)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1487.50"></text></g><g><title>rayon::iter::collect::special_extend (98 samples, 0.13%)</title><rect x="12.0903%" y="1461" width="0.1273%" height="15" fill="rgb(236,137,7)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1471.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (98 samples, 0.13%)</title><rect x="12.0903%" y="1445" width="0.1273%" height="15" fill="rgb(235,127,16)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1455.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (98 samples, 0.13%)</title><rect x="12.0903%" y="1429" width="0.1273%" height="15" fill="rgb(250,192,54)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1439.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (98 samples, 0.13%)</title><rect x="12.0903%" y="1413" width="0.1273%" height="15" fill="rgb(218,98,20)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1423.50"></text></g><g><title>&lt;rayon::slice::chunks::Chunks&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (98 samples, 0.13%)</title><rect x="12.0903%" y="1397" width="0.1273%" height="15" fill="rgb(230,176,47)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge (98 samples, 0.13%)</title><rect x="12.0903%" y="1381" width="0.1273%" height="15" fill="rgb(244,2,33)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1391.50"></text></g><g><title>&lt;rayon::slice::chunks::Chunks&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (98 samples, 0.13%)</title><rect x="12.0903%" y="1365" width="0.1273%" height="15" fill="rgb(231,100,17)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1375.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (98 samples, 0.13%)</title><rect x="12.0903%" y="1349" width="0.1273%" height="15" fill="rgb(245,23,12)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (98 samples, 0.13%)</title><rect x="12.0903%" y="1333" width="0.1273%" height="15" fill="rgb(249,55,22)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (98 samples, 0.13%)</title><rect x="12.0903%" y="1317" width="0.1273%" height="15" fill="rgb(207,134,9)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1327.50"></text></g><g><title>rayon_core::join::join_context (98 samples, 0.13%)</title><rect x="12.0903%" y="1301" width="0.1273%" height="15" fill="rgb(218,134,0)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1311.50"></text></g><g><title>rayon_core::registry::in_worker (98 samples, 0.13%)</title><rect x="12.0903%" y="1285" width="0.1273%" height="15" fill="rgb(213,212,33)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (98 samples, 0.13%)</title><rect x="12.0903%" y="1269" width="0.1273%" height="15" fill="rgb(252,106,18)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1279.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (98 samples, 0.13%)</title><rect x="12.0903%" y="1253" width="0.1273%" height="15" fill="rgb(208,126,42)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (98 samples, 0.13%)</title><rect x="12.0903%" y="1237" width="0.1273%" height="15" fill="rgb(246,175,29)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1247.50"></text></g><g><title>std::panicking::try (98 samples, 0.13%)</title><rect x="12.0903%" y="1221" width="0.1273%" height="15" fill="rgb(215,13,50)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (98 samples, 0.13%)</title><rect x="12.0903%" y="1205" width="0.1273%" height="15" fill="rgb(216,172,15)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (98 samples, 0.13%)</title><rect x="12.0903%" y="1189" width="0.1273%" height="15" fill="rgb(212,103,13)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (98 samples, 0.13%)</title><rect x="12.0903%" y="1173" width="0.1273%" height="15" fill="rgb(231,171,36)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (98 samples, 0.13%)</title><rect x="12.0903%" y="1157" width="0.1273%" height="15" fill="rgb(250,123,20)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (98 samples, 0.13%)</title><rect x="12.0903%" y="1141" width="0.1273%" height="15" fill="rgb(212,53,50)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1151.50"></text></g><g><title>rayon_core::join::join_context (98 samples, 0.13%)</title><rect x="12.0903%" y="1125" width="0.1273%" height="15" fill="rgb(243,54,12)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (98 samples, 0.13%)</title><rect x="12.0903%" y="1109" width="0.1273%" height="15" fill="rgb(234,101,34)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (98 samples, 0.13%)</title><rect x="12.0903%" y="1093" width="0.1273%" height="15" fill="rgb(254,67,22)" fg:x="9311" fg:w="98"/><text x="12.3403%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (96 samples, 0.12%)</title><rect x="12.0929%" y="1077" width="0.1247%" height="15" fill="rgb(250,35,47)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (96 samples, 0.12%)</title><rect x="12.0929%" y="1061" width="0.1247%" height="15" fill="rgb(226,126,38)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="1071.50"></text></g><g><title>std::panicking::try (96 samples, 0.12%)</title><rect x="12.0929%" y="1045" width="0.1247%" height="15" fill="rgb(216,138,53)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (96 samples, 0.12%)</title><rect x="12.0929%" y="1029" width="0.1247%" height="15" fill="rgb(246,199,43)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (96 samples, 0.12%)</title><rect x="12.0929%" y="1013" width="0.1247%" height="15" fill="rgb(232,125,11)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (96 samples, 0.12%)</title><rect x="12.0929%" y="997" width="0.1247%" height="15" fill="rgb(218,219,45)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (96 samples, 0.12%)</title><rect x="12.0929%" y="981" width="0.1247%" height="15" fill="rgb(216,102,54)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (96 samples, 0.12%)</title><rect x="12.0929%" y="965" width="0.1247%" height="15" fill="rgb(250,228,7)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="975.50"></text></g><g><title>rayon_core::join::join_context (96 samples, 0.12%)</title><rect x="12.0929%" y="949" width="0.1247%" height="15" fill="rgb(226,125,25)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (96 samples, 0.12%)</title><rect x="12.0929%" y="933" width="0.1247%" height="15" fill="rgb(224,165,27)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (96 samples, 0.12%)</title><rect x="12.0929%" y="917" width="0.1247%" height="15" fill="rgb(233,86,3)" fg:x="9313" fg:w="96"/><text x="12.3429%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (79 samples, 0.10%)</title><rect x="12.1150%" y="901" width="0.1026%" height="15" fill="rgb(228,116,20)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="911.50"></text></g><g><title>std::panic::catch_unwind (79 samples, 0.10%)</title><rect x="12.1150%" y="885" width="0.1026%" height="15" fill="rgb(209,192,17)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="895.50"></text></g><g><title>std::panicking::try (79 samples, 0.10%)</title><rect x="12.1150%" y="869" width="0.1026%" height="15" fill="rgb(224,88,34)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="879.50"></text></g><g><title>std::panicking::try::do_call (79 samples, 0.10%)</title><rect x="12.1150%" y="853" width="0.1026%" height="15" fill="rgb(233,38,6)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79 samples, 0.10%)</title><rect x="12.1150%" y="837" width="0.1026%" height="15" fill="rgb(212,59,30)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (79 samples, 0.10%)</title><rect x="12.1150%" y="821" width="0.1026%" height="15" fill="rgb(213,80,3)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (79 samples, 0.10%)</title><rect x="12.1150%" y="805" width="0.1026%" height="15" fill="rgb(251,178,7)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (79 samples, 0.10%)</title><rect x="12.1150%" y="789" width="0.1026%" height="15" fill="rgb(213,154,26)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="799.50"></text></g><g><title>rayon_core::join::join_context (79 samples, 0.10%)</title><rect x="12.1150%" y="773" width="0.1026%" height="15" fill="rgb(238,165,49)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="783.50"></text></g><g><title>rayon_core::registry::in_worker (79 samples, 0.10%)</title><rect x="12.1150%" y="757" width="0.1026%" height="15" fill="rgb(248,91,46)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="767.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (79 samples, 0.10%)</title><rect x="12.1150%" y="741" width="0.1026%" height="15" fill="rgb(244,21,52)" fg:x="9330" fg:w="79"/><text x="12.3650%" y="751.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (44 samples, 0.06%)</title><rect x="12.1604%" y="725" width="0.0571%" height="15" fill="rgb(247,122,20)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="735.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.06%)</title><rect x="12.1604%" y="709" width="0.0571%" height="15" fill="rgb(218,27,9)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="719.50"></text></g><g><title>std::panicking::try (44 samples, 0.06%)</title><rect x="12.1604%" y="693" width="0.0571%" height="15" fill="rgb(246,7,6)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="703.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.06%)</title><rect x="12.1604%" y="677" width="0.0571%" height="15" fill="rgb(227,135,54)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.06%)</title><rect x="12.1604%" y="661" width="0.0571%" height="15" fill="rgb(247,14,11)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (44 samples, 0.06%)</title><rect x="12.1604%" y="645" width="0.0571%" height="15" fill="rgb(206,149,34)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (44 samples, 0.06%)</title><rect x="12.1604%" y="629" width="0.0571%" height="15" fill="rgb(227,228,4)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.06%)</title><rect x="12.1604%" y="613" width="0.0571%" height="15" fill="rgb(238,218,28)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (44 samples, 0.06%)</title><rect x="12.1604%" y="597" width="0.0571%" height="15" fill="rgb(252,86,40)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="607.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (44 samples, 0.06%)</title><rect x="12.1604%" y="581" width="0.0571%" height="15" fill="rgb(251,225,11)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (44 samples, 0.06%)</title><rect x="12.1604%" y="565" width="0.0571%" height="15" fill="rgb(206,46,49)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.06%)</title><rect x="12.1604%" y="549" width="0.0571%" height="15" fill="rgb(245,128,24)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (44 samples, 0.06%)</title><rect x="12.1604%" y="533" width="0.0571%" height="15" fill="rgb(219,177,34)" fg:x="9365" fg:w="44"/><text x="12.4104%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (43 samples, 0.06%)</title><rect x="12.1617%" y="517" width="0.0558%" height="15" fill="rgb(218,60,48)" fg:x="9366" fg:w="43"/><text x="12.4117%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (43 samples, 0.06%)</title><rect x="12.1617%" y="501" width="0.0558%" height="15" fill="rgb(221,11,5)" fg:x="9366" fg:w="43"/><text x="12.4117%" y="511.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (43 samples, 0.06%)</title><rect x="12.1617%" y="485" width="0.0558%" height="15" fill="rgb(220,148,13)" fg:x="9366" fg:w="43"/><text x="12.4117%" y="495.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::take_output (42 samples, 0.05%)</title><rect x="12.1630%" y="469" width="0.0545%" height="15" fill="rgb(210,16,3)" fg:x="9367" fg:w="42"/><text x="12.4130%" y="479.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (40 samples, 0.05%)</title><rect x="12.1656%" y="453" width="0.0519%" height="15" fill="rgb(236,80,2)" fg:x="9369" fg:w="40"/><text x="12.4156%" y="463.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (40 samples, 0.05%)</title><rect x="12.1656%" y="437" width="0.0519%" height="15" fill="rgb(239,129,19)" fg:x="9369" fg:w="40"/><text x="12.4156%" y="447.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (40 samples, 0.05%)</title><rect x="12.1656%" y="421" width="0.0519%" height="15" fill="rgb(220,106,35)" fg:x="9369" fg:w="40"/><text x="12.4156%" y="431.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (40 samples, 0.05%)</title><rect x="12.1656%" y="405" width="0.0519%" height="15" fill="rgb(252,139,45)" fg:x="9369" fg:w="40"/><text x="12.4156%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.05%)</title><rect x="12.1656%" y="389" width="0.0519%" height="15" fill="rgb(229,8,36)" fg:x="9369" fg:w="40"/><text x="12.4156%" y="399.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (40 samples, 0.05%)</title><rect x="12.1656%" y="373" width="0.0519%" height="15" fill="rgb(230,126,33)" fg:x="9369" fg:w="40"/><text x="12.4156%" y="383.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (40 samples, 0.05%)</title><rect x="12.1656%" y="357" width="0.0519%" height="15" fill="rgb(239,140,21)" fg:x="9369" fg:w="40"/><text x="12.4156%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="12.2202%" y="1317" width="0.0117%" height="15" fill="rgb(254,104,9)" fg:x="9411" fg:w="9"/><text x="12.4702%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="12.2215%" y="1301" width="0.0104%" height="15" fill="rgb(239,52,14)" fg:x="9412" fg:w="8"/><text x="12.4715%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="12.2215%" y="1285" width="0.0104%" height="15" fill="rgb(208,227,44)" fg:x="9412" fg:w="8"/><text x="12.4715%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="12.2215%" y="1269" width="0.0104%" height="15" fill="rgb(246,18,19)" fg:x="9412" fg:w="8"/><text x="12.4715%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="12.2202%" y="1381" width="0.0156%" height="15" fill="rgb(235,228,25)" fg:x="9411" fg:w="12"/><text x="12.4702%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.02%)</title><rect x="12.2202%" y="1365" width="0.0156%" height="15" fill="rgb(240,156,20)" fg:x="9411" fg:w="12"/><text x="12.4702%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.02%)</title><rect x="12.2202%" y="1349" width="0.0156%" height="15" fill="rgb(224,8,20)" fg:x="9411" fg:w="12"/><text x="12.4702%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.02%)</title><rect x="12.2202%" y="1333" width="0.0156%" height="15" fill="rgb(214,12,52)" fg:x="9411" fg:w="12"/><text x="12.4702%" y="1343.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="12.2202%" y="1429" width="0.0208%" height="15" fill="rgb(211,220,47)" fg:x="9411" fg:w="16"/><text x="12.4702%" y="1439.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="12.2202%" y="1413" width="0.0208%" height="15" fill="rgb(250,173,5)" fg:x="9411" fg:w="16"/><text x="12.4702%" y="1423.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="12.2202%" y="1397" width="0.0208%" height="15" fill="rgb(250,125,52)" fg:x="9411" fg:w="16"/><text x="12.4702%" y="1407.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="12.2202%" y="1461" width="0.0312%" height="15" fill="rgb(209,133,18)" fg:x="9411" fg:w="24"/><text x="12.4702%" y="1471.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="12.2202%" y="1445" width="0.0312%" height="15" fill="rgb(216,173,22)" fg:x="9411" fg:w="24"/><text x="12.4702%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (33 samples, 0.04%)</title><rect x="12.2202%" y="1525" width="0.0429%" height="15" fill="rgb(205,3,22)" fg:x="9411" fg:w="33"/><text x="12.4702%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.04%)</title><rect x="12.2202%" y="1509" width="0.0429%" height="15" fill="rgb(248,22,20)" fg:x="9411" fg:w="33"/><text x="12.4702%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.04%)</title><rect x="12.2202%" y="1493" width="0.0429%" height="15" fill="rgb(233,6,29)" fg:x="9411" fg:w="33"/><text x="12.4702%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.04%)</title><rect x="12.2202%" y="1477" width="0.0429%" height="15" fill="rgb(240,22,54)" fg:x="9411" fg:w="33"/><text x="12.4702%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="12.2721%" y="485" width="0.0117%" height="15" fill="rgb(231,133,32)" fg:x="9451" fg:w="9"/><text x="12.5221%" y="495.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block::{{closure}} (50 samples, 0.06%)</title><rect x="12.2202%" y="1541" width="0.0649%" height="15" fill="rgb(248,193,4)" fg:x="9411" fg:w="50"/><text x="12.4702%" y="1551.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (17 samples, 0.02%)</title><rect x="12.2630%" y="1525" width="0.0221%" height="15" fill="rgb(211,178,46)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1535.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (17 samples, 0.02%)</title><rect x="12.2630%" y="1509" width="0.0221%" height="15" fill="rgb(224,5,42)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1519.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (17 samples, 0.02%)</title><rect x="12.2630%" y="1493" width="0.0221%" height="15" fill="rgb(239,176,25)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1503.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (17 samples, 0.02%)</title><rect x="12.2630%" y="1477" width="0.0221%" height="15" fill="rgb(245,187,50)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1487.50"></text></g><g><title>rayon::iter::collect::special_extend (17 samples, 0.02%)</title><rect x="12.2630%" y="1461" width="0.0221%" height="15" fill="rgb(248,24,15)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1471.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (17 samples, 0.02%)</title><rect x="12.2630%" y="1445" width="0.0221%" height="15" fill="rgb(205,166,13)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1455.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="1429" width="0.0221%" height="15" fill="rgb(208,114,23)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1439.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (17 samples, 0.02%)</title><rect x="12.2630%" y="1413" width="0.0221%" height="15" fill="rgb(239,127,18)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1423.50"></text></g><g><title>&lt;rayon::iter::len::MinLen&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (17 samples, 0.02%)</title><rect x="12.2630%" y="1397" width="0.0221%" height="15" fill="rgb(219,154,28)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge (17 samples, 0.02%)</title><rect x="12.2630%" y="1381" width="0.0221%" height="15" fill="rgb(225,157,23)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1391.50"></text></g><g><title>&lt;rayon::iter::len::MinLen&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (17 samples, 0.02%)</title><rect x="12.2630%" y="1365" width="0.0221%" height="15" fill="rgb(219,8,6)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1375.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (17 samples, 0.02%)</title><rect x="12.2630%" y="1349" width="0.0221%" height="15" fill="rgb(212,47,6)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1359.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (17 samples, 0.02%)</title><rect x="12.2630%" y="1333" width="0.0221%" height="15" fill="rgb(224,190,4)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1343.50"></text></g><g><title>&lt;&lt;rayon::iter::len::MinLen&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer::Callback&lt;CB&gt; as rayon::iter::plumbing::ProducerCallback&lt;T&gt;&gt;::callback (17 samples, 0.02%)</title><rect x="12.2630%" y="1317" width="0.0221%" height="15" fill="rgb(239,183,29)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1327.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (17 samples, 0.02%)</title><rect x="12.2630%" y="1301" width="0.0221%" height="15" fill="rgb(213,57,7)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (17 samples, 0.02%)</title><rect x="12.2630%" y="1285" width="0.0221%" height="15" fill="rgb(216,148,1)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.2630%" y="1269" width="0.0221%" height="15" fill="rgb(236,182,29)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="12.2630%" y="1253" width="0.0221%" height="15" fill="rgb(244,120,48)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="12.2630%" y="1237" width="0.0221%" height="15" fill="rgb(206,71,34)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="1221" width="0.0221%" height="15" fill="rgb(242,32,6)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="12.2630%" y="1205" width="0.0221%" height="15" fill="rgb(241,35,3)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="12.2630%" y="1189" width="0.0221%" height="15" fill="rgb(222,62,19)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1199.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="12.2630%" y="1173" width="0.0221%" height="15" fill="rgb(223,110,41)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="12.2630%" y="1157" width="0.0221%" height="15" fill="rgb(208,224,4)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="12.2630%" y="1141" width="0.0221%" height="15" fill="rgb(241,137,19)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="1125" width="0.0221%" height="15" fill="rgb(244,24,17)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="1109" width="0.0221%" height="15" fill="rgb(245,178,49)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.2630%" y="1093" width="0.0221%" height="15" fill="rgb(219,160,38)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="12.2630%" y="1077" width="0.0221%" height="15" fill="rgb(228,137,14)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1087.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="12.2630%" y="1061" width="0.0221%" height="15" fill="rgb(237,134,11)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="1045" width="0.0221%" height="15" fill="rgb(211,126,44)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="12.2630%" y="1029" width="0.0221%" height="15" fill="rgb(226,171,33)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="12.2630%" y="1013" width="0.0221%" height="15" fill="rgb(253,99,13)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1023.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="12.2630%" y="997" width="0.0221%" height="15" fill="rgb(244,48,7)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="12.2630%" y="981" width="0.0221%" height="15" fill="rgb(244,217,54)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="12.2630%" y="965" width="0.0221%" height="15" fill="rgb(224,15,18)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="949" width="0.0221%" height="15" fill="rgb(244,99,12)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="933" width="0.0221%" height="15" fill="rgb(233,226,8)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.2630%" y="917" width="0.0221%" height="15" fill="rgb(229,211,3)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="927.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="12.2630%" y="901" width="0.0221%" height="15" fill="rgb(216,140,21)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="12.2630%" y="885" width="0.0221%" height="15" fill="rgb(234,122,30)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="869" width="0.0221%" height="15" fill="rgb(236,25,46)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="879.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="12.2630%" y="853" width="0.0221%" height="15" fill="rgb(217,52,54)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="863.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="12.2630%" y="837" width="0.0221%" height="15" fill="rgb(222,29,26)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="847.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="12.2630%" y="821" width="0.0221%" height="15" fill="rgb(216,177,29)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="831.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="12.2630%" y="805" width="0.0221%" height="15" fill="rgb(247,136,51)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="815.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="12.2630%" y="789" width="0.0221%" height="15" fill="rgb(231,47,47)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="799.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="773" width="0.0221%" height="15" fill="rgb(211,192,36)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="757" width="0.0221%" height="15" fill="rgb(229,156,32)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="12.2630%" y="741" width="0.0221%" height="15" fill="rgb(248,213,20)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="751.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="12.2630%" y="725" width="0.0221%" height="15" fill="rgb(217,64,7)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="12.2630%" y="709" width="0.0221%" height="15" fill="rgb(232,142,8)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="12.2630%" y="693" width="0.0221%" height="15" fill="rgb(224,92,44)" fg:x="9444" fg:w="17"/><text x="12.5130%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.01%)</title><rect x="12.2721%" y="677" width="0.0130%" height="15" fill="rgb(214,169,17)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="687.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="12.2721%" y="661" width="0.0130%" height="15" fill="rgb(210,59,37)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="671.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="12.2721%" y="645" width="0.0130%" height="15" fill="rgb(214,116,48)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="655.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="12.2721%" y="629" width="0.0130%" height="15" fill="rgb(244,191,6)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="12.2721%" y="613" width="0.0130%" height="15" fill="rgb(241,50,52)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.01%)</title><rect x="12.2721%" y="597" width="0.0130%" height="15" fill="rgb(236,75,39)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="12.2721%" y="581" width="0.0130%" height="15" fill="rgb(236,99,0)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="12.2721%" y="565" width="0.0130%" height="15" fill="rgb(207,202,15)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="575.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (10 samples, 0.01%)</title><rect x="12.2721%" y="549" width="0.0130%" height="15" fill="rgb(233,207,14)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="559.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (10 samples, 0.01%)</title><rect x="12.2721%" y="533" width="0.0130%" height="15" fill="rgb(226,27,51)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="543.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.01%)</title><rect x="12.2721%" y="517" width="0.0130%" height="15" fill="rgb(206,104,42)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (10 samples, 0.01%)</title><rect x="12.2721%" y="501" width="0.0130%" height="15" fill="rgb(212,225,4)" fg:x="9451" fg:w="10"/><text x="12.5221%" y="511.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (12 samples, 0.02%)</title><rect x="12.3526%" y="1221" width="0.0156%" height="15" fill="rgb(233,96,42)" fg:x="9513" fg:w="12"/><text x="12.6026%" y="1231.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (12 samples, 0.02%)</title><rect x="12.3526%" y="1205" width="0.0156%" height="15" fill="rgb(229,21,32)" fg:x="9513" fg:w="12"/><text x="12.6026%" y="1215.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (10 samples, 0.01%)</title><rect x="12.3552%" y="1189" width="0.0130%" height="15" fill="rgb(226,216,24)" fg:x="9515" fg:w="10"/><text x="12.6052%" y="1199.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (11 samples, 0.01%)</title><rect x="12.3747%" y="1013" width="0.0143%" height="15" fill="rgb(221,163,17)" fg:x="9530" fg:w="11"/><text x="12.6247%" y="1023.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (11 samples, 0.01%)</title><rect x="12.3747%" y="997" width="0.0143%" height="15" fill="rgb(216,216,42)" fg:x="9530" fg:w="11"/><text x="12.6247%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (24 samples, 0.03%)</title><rect x="12.3747%" y="1029" width="0.0312%" height="15" fill="rgb(240,118,7)" fg:x="9530" fg:w="24"/><text x="12.6247%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (13 samples, 0.02%)</title><rect x="12.3890%" y="1013" width="0.0169%" height="15" fill="rgb(221,67,37)" fg:x="9541" fg:w="13"/><text x="12.6390%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (10 samples, 0.01%)</title><rect x="12.3929%" y="997" width="0.0130%" height="15" fill="rgb(241,32,44)" fg:x="9544" fg:w="10"/><text x="12.6429%" y="1007.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (10 samples, 0.01%)</title><rect x="12.3929%" y="981" width="0.0130%" height="15" fill="rgb(235,204,43)" fg:x="9544" fg:w="10"/><text x="12.6429%" y="991.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="12.3929%" y="965" width="0.0130%" height="15" fill="rgb(213,116,10)" fg:x="9544" fg:w="10"/><text x="12.6429%" y="975.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="12.3929%" y="949" width="0.0130%" height="15" fill="rgb(239,15,48)" fg:x="9544" fg:w="10"/><text x="12.6429%" y="959.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="12.3929%" y="933" width="0.0130%" height="15" fill="rgb(207,123,36)" fg:x="9544" fg:w="10"/><text x="12.6429%" y="943.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (10 samples, 0.01%)</title><rect x="12.3929%" y="917" width="0.0130%" height="15" fill="rgb(209,103,30)" fg:x="9544" fg:w="10"/><text x="12.6429%" y="927.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (12 samples, 0.02%)</title><rect x="12.4059%" y="1029" width="0.0156%" height="15" fill="rgb(238,100,19)" fg:x="9554" fg:w="12"/><text x="12.6559%" y="1039.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (10 samples, 0.01%)</title><rect x="12.4085%" y="1013" width="0.0130%" height="15" fill="rgb(244,30,14)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="12.4085%" y="997" width="0.0130%" height="15" fill="rgb(249,174,6)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="1007.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="12.4085%" y="981" width="0.0130%" height="15" fill="rgb(235,213,41)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="991.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="12.4085%" y="965" width="0.0130%" height="15" fill="rgb(213,118,6)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="975.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (10 samples, 0.01%)</title><rect x="12.4085%" y="949" width="0.0130%" height="15" fill="rgb(235,44,51)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="959.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (10 samples, 0.01%)</title><rect x="12.4085%" y="933" width="0.0130%" height="15" fill="rgb(217,9,53)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="943.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (10 samples, 0.01%)</title><rect x="12.4085%" y="917" width="0.0130%" height="15" fill="rgb(237,172,34)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="927.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (10 samples, 0.01%)</title><rect x="12.4085%" y="901" width="0.0130%" height="15" fill="rgb(206,206,11)" fg:x="9556" fg:w="10"/><text x="12.6585%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (43 samples, 0.06%)</title><rect x="12.3695%" y="1077" width="0.0558%" height="15" fill="rgb(214,149,29)" fg:x="9526" fg:w="43"/><text x="12.6195%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (43 samples, 0.06%)</title><rect x="12.3695%" y="1061" width="0.0558%" height="15" fill="rgb(208,123,3)" fg:x="9526" fg:w="43"/><text x="12.6195%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (39 samples, 0.05%)</title><rect x="12.3747%" y="1045" width="0.0506%" height="15" fill="rgb(229,126,4)" fg:x="9530" fg:w="39"/><text x="12.6247%" y="1055.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (12 samples, 0.02%)</title><rect x="12.4253%" y="1045" width="0.0156%" height="15" fill="rgb(222,92,36)" fg:x="9569" fg:w="12"/><text x="12.6753%" y="1055.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (12 samples, 0.02%)</title><rect x="12.4253%" y="1029" width="0.0156%" height="15" fill="rgb(216,39,41)" fg:x="9569" fg:w="12"/><text x="12.6753%" y="1039.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (8 samples, 0.01%)</title><rect x="12.4305%" y="1013" width="0.0104%" height="15" fill="rgb(253,127,28)" fg:x="9573" fg:w="8"/><text x="12.6805%" y="1023.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (8 samples, 0.01%)</title><rect x="12.4305%" y="997" width="0.0104%" height="15" fill="rgb(249,152,51)" fg:x="9573" fg:w="8"/><text x="12.6805%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (13 samples, 0.02%)</title><rect x="12.4253%" y="1061" width="0.0169%" height="15" fill="rgb(209,123,42)" fg:x="9569" fg:w="13"/><text x="12.6753%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (14 samples, 0.02%)</title><rect x="12.4539%" y="965" width="0.0182%" height="15" fill="rgb(241,118,22)" fg:x="9591" fg:w="14"/><text x="12.7039%" y="975.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (14 samples, 0.02%)</title><rect x="12.4539%" y="949" width="0.0182%" height="15" fill="rgb(208,25,7)" fg:x="9591" fg:w="14"/><text x="12.7039%" y="959.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (14 samples, 0.02%)</title><rect x="12.4539%" y="933" width="0.0182%" height="15" fill="rgb(243,144,39)" fg:x="9591" fg:w="14"/><text x="12.7039%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (26 samples, 0.03%)</title><rect x="12.4422%" y="1061" width="0.0338%" height="15" fill="rgb(250,50,5)" fg:x="9582" fg:w="26"/><text x="12.6922%" y="1071.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (19 samples, 0.02%)</title><rect x="12.4513%" y="1045" width="0.0247%" height="15" fill="rgb(207,67,11)" fg:x="9589" fg:w="19"/><text x="12.7013%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="12.4513%" y="1029" width="0.0247%" height="15" fill="rgb(245,204,40)" fg:x="9589" fg:w="19"/><text x="12.7013%" y="1039.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="12.4513%" y="1013" width="0.0247%" height="15" fill="rgb(238,228,24)" fg:x="9589" fg:w="19"/><text x="12.7013%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="12.4513%" y="997" width="0.0247%" height="15" fill="rgb(217,116,22)" fg:x="9589" fg:w="19"/><text x="12.7013%" y="1007.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (19 samples, 0.02%)</title><rect x="12.4513%" y="981" width="0.0247%" height="15" fill="rgb(234,98,12)" fg:x="9589" fg:w="19"/><text x="12.7013%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (83 samples, 0.11%)</title><rect x="12.3695%" y="1109" width="0.1078%" height="15" fill="rgb(242,170,50)" fg:x="9526" fg:w="83"/><text x="12.6195%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (83 samples, 0.11%)</title><rect x="12.3695%" y="1093" width="0.1078%" height="15" fill="rgb(235,7,5)" fg:x="9526" fg:w="83"/><text x="12.6195%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (40 samples, 0.05%)</title><rect x="12.4253%" y="1077" width="0.0519%" height="15" fill="rgb(241,114,28)" fg:x="9569" fg:w="40"/><text x="12.6753%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (9 samples, 0.01%)</title><rect x="12.4773%" y="1093" width="0.0117%" height="15" fill="rgb(246,112,42)" fg:x="9609" fg:w="9"/><text x="12.7273%" y="1103.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (8 samples, 0.01%)</title><rect x="12.4942%" y="949" width="0.0104%" height="15" fill="rgb(248,228,14)" fg:x="9622" fg:w="8"/><text x="12.7442%" y="959.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (13 samples, 0.02%)</title><rect x="12.4890%" y="1093" width="0.0169%" height="15" fill="rgb(208,133,18)" fg:x="9618" fg:w="13"/><text x="12.7390%" y="1103.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (9 samples, 0.01%)</title><rect x="12.4942%" y="1077" width="0.0117%" height="15" fill="rgb(207,35,49)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="12.4942%" y="1061" width="0.0117%" height="15" fill="rgb(205,68,36)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="1071.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="12.4942%" y="1045" width="0.0117%" height="15" fill="rgb(245,62,40)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="12.4942%" y="1029" width="0.0117%" height="15" fill="rgb(228,27,24)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="1039.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (9 samples, 0.01%)</title><rect x="12.4942%" y="1013" width="0.0117%" height="15" fill="rgb(253,19,12)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="1023.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (9 samples, 0.01%)</title><rect x="12.4942%" y="997" width="0.0117%" height="15" fill="rgb(232,28,20)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (9 samples, 0.01%)</title><rect x="12.4942%" y="981" width="0.0117%" height="15" fill="rgb(218,35,51)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="991.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (9 samples, 0.01%)</title><rect x="12.4942%" y="965" width="0.0117%" height="15" fill="rgb(212,90,40)" fg:x="9622" fg:w="9"/><text x="12.7442%" y="975.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (107 samples, 0.14%)</title><rect x="12.3682%" y="1221" width="0.1389%" height="15" fill="rgb(220,172,12)" fg:x="9525" fg:w="107"/><text x="12.6182%" y="1231.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (107 samples, 0.14%)</title><rect x="12.3682%" y="1205" width="0.1389%" height="15" fill="rgb(226,159,20)" fg:x="9525" fg:w="107"/><text x="12.6182%" y="1215.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (107 samples, 0.14%)</title><rect x="12.3682%" y="1189" width="0.1389%" height="15" fill="rgb(234,205,16)" fg:x="9525" fg:w="107"/><text x="12.6182%" y="1199.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (107 samples, 0.14%)</title><rect x="12.3682%" y="1173" width="0.1389%" height="15" fill="rgb(207,9,39)" fg:x="9525" fg:w="107"/><text x="12.6182%" y="1183.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (107 samples, 0.14%)</title><rect x="12.3682%" y="1157" width="0.1389%" height="15" fill="rgb(249,143,15)" fg:x="9525" fg:w="107"/><text x="12.6182%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (106 samples, 0.14%)</title><rect x="12.3695%" y="1141" width="0.1376%" height="15" fill="rgb(253,133,29)" fg:x="9526" fg:w="106"/><text x="12.6195%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (106 samples, 0.14%)</title><rect x="12.3695%" y="1125" width="0.1376%" height="15" fill="rgb(221,187,0)" fg:x="9526" fg:w="106"/><text x="12.6195%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (23 samples, 0.03%)</title><rect x="12.4773%" y="1109" width="0.0299%" height="15" fill="rgb(205,204,26)" fg:x="9609" fg:w="23"/><text x="12.7273%" y="1119.50"></text></g><g><title>alloc::fmt::format (11 samples, 0.01%)</title><rect x="12.5110%" y="1221" width="0.0143%" height="15" fill="rgb(224,68,54)" fg:x="9635" fg:w="11"/><text x="12.7610%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (11 samples, 0.01%)</title><rect x="12.5110%" y="1205" width="0.0143%" height="15" fill="rgb(209,67,4)" fg:x="9635" fg:w="11"/><text x="12.7610%" y="1215.50"></text></g><g><title>alloc::fmt::format::{{closure}} (11 samples, 0.01%)</title><rect x="12.5110%" y="1189" width="0.0143%" height="15" fill="rgb(228,229,18)" fg:x="9635" fg:w="11"/><text x="12.7610%" y="1199.50"></text></g><g><title>alloc::fmt::format::format_inner (11 samples, 0.01%)</title><rect x="12.5110%" y="1173" width="0.0143%" height="15" fill="rgb(231,89,13)" fg:x="9635" fg:w="11"/><text x="12.7610%" y="1183.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.01%)</title><rect x="12.5149%" y="1157" width="0.0104%" height="15" fill="rgb(210,182,18)" fg:x="9638" fg:w="8"/><text x="12.7649%" y="1167.50"></text></g><g><title>core::fmt::write (8 samples, 0.01%)</title><rect x="12.5149%" y="1141" width="0.0104%" height="15" fill="rgb(240,105,2)" fg:x="9638" fg:w="8"/><text x="12.7649%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.02%)</title><rect x="12.5902%" y="997" width="0.0156%" height="15" fill="rgb(207,170,50)" fg:x="9696" fg:w="12"/><text x="12.8402%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (11 samples, 0.01%)</title><rect x="12.5915%" y="981" width="0.0143%" height="15" fill="rgb(232,133,24)" fg:x="9697" fg:w="11"/><text x="12.8415%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="12.5915%" y="965" width="0.0143%" height="15" fill="rgb(235,166,27)" fg:x="9697" fg:w="11"/><text x="12.8415%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="12.5915%" y="949" width="0.0143%" height="15" fill="rgb(209,19,13)" fg:x="9697" fg:w="11"/><text x="12.8415%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="12.5915%" y="933" width="0.0143%" height="15" fill="rgb(226,79,39)" fg:x="9697" fg:w="11"/><text x="12.8415%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad_integral (9 samples, 0.01%)</title><rect x="12.6110%" y="997" width="0.0117%" height="15" fill="rgb(222,163,10)" fg:x="9712" fg:w="9"/><text x="12.8610%" y="1007.50"></text></g><g><title>core::fmt::run (37 samples, 0.05%)</title><rect x="12.5773%" y="1045" width="0.0480%" height="15" fill="rgb(214,44,19)" fg:x="9686" fg:w="37"/><text x="12.8273%" y="1055.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (30 samples, 0.04%)</title><rect x="12.5864%" y="1029" width="0.0390%" height="15" fill="rgb(210,217,13)" fg:x="9693" fg:w="30"/><text x="12.8364%" y="1039.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (27 samples, 0.04%)</title><rect x="12.5902%" y="1013" width="0.0351%" height="15" fill="rgb(237,61,54)" fg:x="9696" fg:w="27"/><text x="12.8402%" y="1023.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::Debug&gt;::fmt (61 samples, 0.08%)</title><rect x="12.5487%" y="1157" width="0.0792%" height="15" fill="rgb(226,184,24)" fg:x="9664" fg:w="61"/><text x="12.7987%" y="1167.50"></text></g><g><title>core::fmt::Formatter::write_fmt (61 samples, 0.08%)</title><rect x="12.5487%" y="1141" width="0.0792%" height="15" fill="rgb(223,226,4)" fg:x="9664" fg:w="61"/><text x="12.7987%" y="1151.50"></text></g><g><title>core::fmt::write (59 samples, 0.08%)</title><rect x="12.5513%" y="1125" width="0.0766%" height="15" fill="rgb(210,26,41)" fg:x="9666" fg:w="59"/><text x="12.8013%" y="1135.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (59 samples, 0.08%)</title><rect x="12.5513%" y="1109" width="0.0766%" height="15" fill="rgb(220,221,6)" fg:x="9666" fg:w="59"/><text x="12.8013%" y="1119.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::LowerHex&gt;::fmt (58 samples, 0.08%)</title><rect x="12.5526%" y="1093" width="0.0753%" height="15" fill="rgb(225,89,49)" fg:x="9667" fg:w="58"/><text x="12.8026%" y="1103.50"></text></g><g><title>core::fmt::Formatter::write_fmt (57 samples, 0.07%)</title><rect x="12.5539%" y="1077" width="0.0740%" height="15" fill="rgb(218,70,45)" fg:x="9668" fg:w="57"/><text x="12.8039%" y="1087.50"></text></g><g><title>core::fmt::write (46 samples, 0.06%)</title><rect x="12.5682%" y="1061" width="0.0597%" height="15" fill="rgb(238,166,21)" fg:x="9679" fg:w="46"/><text x="12.8182%" y="1071.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (62 samples, 0.08%)</title><rect x="12.5487%" y="1173" width="0.0805%" height="15" fill="rgb(224,141,44)" fg:x="9664" fg:w="62"/><text x="12.7987%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (8 samples, 0.01%)</title><rect x="12.6435%" y="1093" width="0.0104%" height="15" fill="rgb(230,12,49)" fg:x="9737" fg:w="8"/><text x="12.8935%" y="1103.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (12 samples, 0.02%)</title><rect x="12.6435%" y="1109" width="0.0156%" height="15" fill="rgb(212,174,12)" fg:x="9737" fg:w="12"/><text x="12.8935%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (15 samples, 0.02%)</title><rect x="12.6422%" y="1173" width="0.0195%" height="15" fill="rgb(246,67,9)" fg:x="9736" fg:w="15"/><text x="12.8922%" y="1183.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="12.6422%" y="1157" width="0.0195%" height="15" fill="rgb(239,35,23)" fg:x="9736" fg:w="15"/><text x="12.8922%" y="1167.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (15 samples, 0.02%)</title><rect x="12.6422%" y="1141" width="0.0195%" height="15" fill="rgb(211,167,0)" fg:x="9736" fg:w="15"/><text x="12.8922%" y="1151.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (14 samples, 0.02%)</title><rect x="12.6435%" y="1125" width="0.0182%" height="15" fill="rgb(225,119,45)" fg:x="9737" fg:w="14"/><text x="12.8935%" y="1135.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (101 samples, 0.13%)</title><rect x="12.5383%" y="1189" width="0.1311%" height="15" fill="rgb(210,162,6)" fg:x="9656" fg:w="101"/><text x="12.7883%" y="1199.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (110 samples, 0.14%)</title><rect x="12.5357%" y="1205" width="0.1428%" height="15" fill="rgb(208,118,35)" fg:x="9654" fg:w="110"/><text x="12.7857%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.02%)</title><rect x="12.7175%" y="1173" width="0.0169%" height="15" fill="rgb(239,4,53)" fg:x="9794" fg:w="13"/><text x="12.9675%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="12.7227%" y="1157" width="0.0117%" height="15" fill="rgb(213,130,21)" fg:x="9798" fg:w="9"/><text x="12.9727%" y="1167.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::entry (22 samples, 0.03%)</title><rect x="12.7383%" y="1173" width="0.0286%" height="15" fill="rgb(235,148,0)" fg:x="9810" fg:w="22"/><text x="12.9883%" y="1183.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (22 samples, 0.03%)</title><rect x="12.7383%" y="1157" width="0.0286%" height="15" fill="rgb(244,224,18)" fg:x="9810" fg:w="22"/><text x="12.9883%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (13 samples, 0.02%)</title><rect x="12.7500%" y="1141" width="0.0169%" height="15" fill="rgb(211,214,4)" fg:x="9819" fg:w="13"/><text x="13.0000%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.02%)</title><rect x="12.7500%" y="1125" width="0.0169%" height="15" fill="rgb(206,119,25)" fg:x="9819" fg:w="13"/><text x="13.0000%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="12.7720%" y="1109" width="0.0104%" height="15" fill="rgb(243,93,47)" fg:x="9836" fg:w="8"/><text x="13.0220%" y="1119.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="12.7720%" y="1093" width="0.0104%" height="15" fill="rgb(224,194,6)" fg:x="9836" fg:w="8"/><text x="13.0220%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (9 samples, 0.01%)</title><rect x="12.7720%" y="1141" width="0.0117%" height="15" fill="rgb(243,229,6)" fg:x="9836" fg:w="9"/><text x="13.0220%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.01%)</title><rect x="12.7720%" y="1125" width="0.0117%" height="15" fill="rgb(207,23,50)" fg:x="9836" fg:w="9"/><text x="13.0220%" y="1135.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (8 samples, 0.01%)</title><rect x="12.7941%" y="1045" width="0.0104%" height="15" fill="rgb(253,192,32)" fg:x="9853" fg:w="8"/><text x="13.0441%" y="1055.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (8 samples, 0.01%)</title><rect x="12.7941%" y="1029" width="0.0104%" height="15" fill="rgb(213,21,6)" fg:x="9853" fg:w="8"/><text x="13.0441%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="12.7941%" y="1013" width="0.0104%" height="15" fill="rgb(243,151,13)" fg:x="9853" fg:w="8"/><text x="13.0441%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="12.7941%" y="997" width="0.0104%" height="15" fill="rgb(233,165,41)" fg:x="9853" fg:w="8"/><text x="13.0441%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="12.7941%" y="981" width="0.0104%" height="15" fill="rgb(246,176,45)" fg:x="9853" fg:w="8"/><text x="13.0441%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="12.7941%" y="965" width="0.0104%" height="15" fill="rgb(217,170,52)" fg:x="9853" fg:w="8"/><text x="13.0441%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="12.7941%" y="949" width="0.0104%" height="15" fill="rgb(214,203,54)" fg:x="9853" fg:w="8"/><text x="13.0441%" y="959.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::add_write (73 samples, 0.09%)</title><rect x="12.7110%" y="1189" width="0.0948%" height="15" fill="rgb(248,215,49)" fg:x="9789" fg:w="73"/><text x="12.9610%" y="1199.50"></text></g><g><title>dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_default (30 samples, 0.04%)</title><rect x="12.7668%" y="1173" width="0.0390%" height="15" fill="rgb(208,46,10)" fg:x="9832" fg:w="30"/><text x="13.0168%" y="1183.50"></text></g><g><title>dashmap::mapref::entry::VacantEntry&lt;K,V,S&gt;::insert (26 samples, 0.03%)</title><rect x="12.7720%" y="1157" width="0.0338%" height="15" fill="rgb(254,5,31)" fg:x="9836" fg:w="26"/><text x="13.0220%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.02%)</title><rect x="12.7837%" y="1141" width="0.0221%" height="15" fill="rgb(222,104,33)" fg:x="9845" fg:w="17"/><text x="13.0337%" y="1151.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (10 samples, 0.01%)</title><rect x="12.7928%" y="1125" width="0.0130%" height="15" fill="rgb(248,49,16)" fg:x="9852" fg:w="10"/><text x="13.0428%" y="1135.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="12.7941%" y="1109" width="0.0117%" height="15" fill="rgb(232,198,41)" fg:x="9853" fg:w="9"/><text x="13.0441%" y="1119.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.01%)</title><rect x="12.7941%" y="1093" width="0.0117%" height="15" fill="rgb(214,125,3)" fg:x="9853" fg:w="9"/><text x="13.0441%" y="1103.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (9 samples, 0.01%)</title><rect x="12.7941%" y="1077" width="0.0117%" height="15" fill="rgb(229,220,28)" fg:x="9853" fg:w="9"/><text x="13.0441%" y="1087.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (9 samples, 0.01%)</title><rect x="12.7941%" y="1061" width="0.0117%" height="15" fill="rgb(222,64,37)" fg:x="9853" fg:w="9"/><text x="13.0441%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="12.8084%" y="1125" width="0.0130%" height="15" fill="rgb(249,184,13)" fg:x="9864" fg:w="10"/><text x="13.0584%" y="1135.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="12.8097%" y="1109" width="0.0117%" height="15" fill="rgb(252,176,6)" fg:x="9865" fg:w="9"/><text x="13.0597%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="12.8110%" y="1093" width="0.0104%" height="15" fill="rgb(228,153,7)" fg:x="9866" fg:w="8"/><text x="13.0610%" y="1103.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute::{{closure}} (100 samples, 0.13%)</title><rect x="12.6928%" y="1205" width="0.1298%" height="15" fill="rgb(242,193,5)" fg:x="9775" fg:w="100"/><text x="12.9428%" y="1215.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (11 samples, 0.01%)</title><rect x="12.8084%" y="1189" width="0.0143%" height="15" fill="rgb(232,140,9)" fg:x="9864" fg:w="11"/><text x="13.0584%" y="1199.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (11 samples, 0.01%)</title><rect x="12.8084%" y="1173" width="0.0143%" height="15" fill="rgb(213,222,16)" fg:x="9864" fg:w="11"/><text x="13.0584%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (11 samples, 0.01%)</title><rect x="12.8084%" y="1157" width="0.0143%" height="15" fill="rgb(222,75,50)" fg:x="9864" fg:w="11"/><text x="13.0584%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (11 samples, 0.01%)</title><rect x="12.8084%" y="1141" width="0.0143%" height="15" fill="rgb(205,180,2)" fg:x="9864" fg:w="11"/><text x="13.0584%" y="1151.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::finish_execution (12 samples, 0.02%)</title><rect x="12.8227%" y="1205" width="0.0156%" height="15" fill="rgb(216,34,7)" fg:x="9875" fg:w="12"/><text x="13.0727%" y="1215.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (20 samples, 0.03%)</title><rect x="12.8383%" y="1205" width="0.0260%" height="15" fill="rgb(253,16,32)" fg:x="9887" fg:w="20"/><text x="13.0883%" y="1215.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (13 samples, 0.02%)</title><rect x="12.8707%" y="1189" width="0.0169%" height="15" fill="rgb(208,97,28)" fg:x="9912" fg:w="13"/><text x="13.1207%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="12.8707%" y="1173" width="0.0169%" height="15" fill="rgb(225,92,11)" fg:x="9912" fg:w="13"/><text x="13.1207%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="12.8707%" y="1157" width="0.0169%" height="15" fill="rgb(243,38,12)" fg:x="9912" fg:w="13"/><text x="13.1207%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="12.8707%" y="1141" width="0.0169%" height="15" fill="rgb(208,139,16)" fg:x="9912" fg:w="13"/><text x="13.1207%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="12.8707%" y="1125" width="0.0169%" height="15" fill="rgb(227,24,9)" fg:x="9912" fg:w="13"/><text x="13.1207%" y="1135.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::swap (34 samples, 0.04%)</title><rect x="12.8902%" y="1173" width="0.0441%" height="15" fill="rgb(206,62,11)" fg:x="9927" fg:w="34"/><text x="13.1402%" y="1183.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::wait_for_readers (34 samples, 0.04%)</title><rect x="12.8902%" y="1157" width="0.0441%" height="15" fill="rgb(228,134,27)" fg:x="9927" fg:w="34"/><text x="13.1402%" y="1167.50"></text></g><g><title>arc_swap::debt::Debt::pay_all (34 samples, 0.04%)</title><rect x="12.8902%" y="1141" width="0.0441%" height="15" fill="rgb(205,55,33)" fg:x="9927" fg:w="34"/><text x="13.1402%" y="1151.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (34 samples, 0.04%)</title><rect x="12.8902%" y="1125" width="0.0441%" height="15" fill="rgb(243,75,43)" fg:x="9927" fg:w="34"/><text x="13.1402%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.04%)</title><rect x="12.8902%" y="1109" width="0.0441%" height="15" fill="rgb(223,27,42)" fg:x="9927" fg:w="34"/><text x="13.1402%" y="1119.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::{{closure}} (34 samples, 0.04%)</title><rect x="12.8902%" y="1093" width="0.0441%" height="15" fill="rgb(232,189,33)" fg:x="9927" fg:w="34"/><text x="13.1402%" y="1103.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (33 samples, 0.04%)</title><rect x="12.8915%" y="1077" width="0.0429%" height="15" fill="rgb(210,9,39)" fg:x="9928" fg:w="33"/><text x="13.1415%" y="1087.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (33 samples, 0.04%)</title><rect x="12.8915%" y="1061" width="0.0429%" height="15" fill="rgb(242,85,26)" fg:x="9928" fg:w="33"/><text x="13.1415%" y="1071.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (32 samples, 0.04%)</title><rect x="12.8928%" y="1045" width="0.0416%" height="15" fill="rgb(248,44,4)" fg:x="9929" fg:w="32"/><text x="13.1428%" y="1055.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::store (46 samples, 0.06%)</title><rect x="12.8902%" y="1189" width="0.0597%" height="15" fill="rgb(250,96,46)" fg:x="9927" fg:w="46"/><text x="13.1402%" y="1199.50"></text></g><g><title>core::mem::drop (12 samples, 0.02%)</title><rect x="12.9343%" y="1173" width="0.0156%" height="15" fill="rgb(229,116,26)" fg:x="9961" fg:w="12"/><text x="13.1843%" y="1183.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (36 samples, 0.05%)</title><rect x="12.9915%" y="741" width="0.0467%" height="15" fill="rgb(246,94,34)" fg:x="10005" fg:w="36"/><text x="13.2415%" y="751.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (32 samples, 0.04%)</title><rect x="12.9967%" y="725" width="0.0416%" height="15" fill="rgb(251,73,21)" fg:x="10009" fg:w="32"/><text x="13.2467%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (32 samples, 0.04%)</title><rect x="12.9967%" y="709" width="0.0416%" height="15" fill="rgb(254,121,25)" fg:x="10009" fg:w="32"/><text x="13.2467%" y="719.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (32 samples, 0.04%)</title><rect x="12.9967%" y="693" width="0.0416%" height="15" fill="rgb(215,161,49)" fg:x="10009" fg:w="32"/><text x="13.2467%" y="703.50"></text></g><g><title>serde::de::SeqAccess::next_element (23 samples, 0.03%)</title><rect x="13.0084%" y="677" width="0.0299%" height="15" fill="rgb(221,43,13)" fg:x="10018" fg:w="23"/><text x="13.2584%" y="687.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (23 samples, 0.03%)</title><rect x="13.0084%" y="661" width="0.0299%" height="15" fill="rgb(249,5,37)" fg:x="10018" fg:w="23"/><text x="13.2584%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 0.03%)</title><rect x="13.0084%" y="645" width="0.0299%" height="15" fill="rgb(226,25,44)" fg:x="10018" fg:w="23"/><text x="13.2584%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (23 samples, 0.03%)</title><rect x="13.0084%" y="629" width="0.0299%" height="15" fill="rgb(238,189,16)" fg:x="10018" fg:w="23"/><text x="13.2584%" y="639.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (23 samples, 0.03%)</title><rect x="13.0084%" y="613" width="0.0299%" height="15" fill="rgb(251,186,8)" fg:x="10018" fg:w="23"/><text x="13.2584%" y="623.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (16 samples, 0.02%)</title><rect x="13.0175%" y="597" width="0.0208%" height="15" fill="rgb(254,34,31)" fg:x="10025" fg:w="16"/><text x="13.2675%" y="607.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (48 samples, 0.06%)</title><rect x="12.9785%" y="789" width="0.0623%" height="15" fill="rgb(225,215,27)" fg:x="9995" fg:w="48"/><text x="13.2285%" y="799.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (42 samples, 0.05%)</title><rect x="12.9863%" y="773" width="0.0545%" height="15" fill="rgb(221,192,48)" fg:x="10001" fg:w="42"/><text x="13.2363%" y="783.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (42 samples, 0.05%)</title><rect x="12.9863%" y="757" width="0.0545%" height="15" fill="rgb(219,137,20)" fg:x="10001" fg:w="42"/><text x="13.2363%" y="767.50"></text></g><g><title>bcs::de::Deserializer::parse_string (9 samples, 0.01%)</title><rect x="13.0564%" y="677" width="0.0117%" height="15" fill="rgb(219,84,11)" fg:x="10055" fg:w="9"/><text x="13.3064%" y="687.50"></text></g><g><title>&lt;move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (18 samples, 0.02%)</title><rect x="13.0473%" y="757" width="0.0234%" height="15" fill="rgb(224,10,23)" fg:x="10048" fg:w="18"/><text x="13.2973%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;str&gt;&gt;::deserialize (13 samples, 0.02%)</title><rect x="13.0538%" y="741" width="0.0169%" height="15" fill="rgb(248,22,39)" fg:x="10053" fg:w="13"/><text x="13.3038%" y="751.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (12 samples, 0.02%)</title><rect x="13.0551%" y="725" width="0.0156%" height="15" fill="rgb(212,154,20)" fg:x="10054" fg:w="12"/><text x="13.3051%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (12 samples, 0.02%)</title><rect x="13.0551%" y="709" width="0.0156%" height="15" fill="rgb(236,199,50)" fg:x="10054" fg:w="12"/><text x="13.3051%" y="719.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (12 samples, 0.02%)</title><rect x="13.0551%" y="693" width="0.0156%" height="15" fill="rgb(211,9,17)" fg:x="10054" fg:w="12"/><text x="13.3051%" y="703.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (24 samples, 0.03%)</title><rect x="13.0408%" y="789" width="0.0312%" height="15" fill="rgb(243,216,36)" fg:x="10043" fg:w="24"/><text x="13.2908%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (24 samples, 0.03%)</title><rect x="13.0408%" y="773" width="0.0312%" height="15" fill="rgb(250,2,10)" fg:x="10043" fg:w="24"/><text x="13.2908%" y="783.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (8 samples, 0.01%)</title><rect x="13.0915%" y="357" width="0.0104%" height="15" fill="rgb(226,50,48)" fg:x="10082" fg:w="8"/><text x="13.3415%" y="367.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (12 samples, 0.02%)</title><rect x="13.0876%" y="453" width="0.0156%" height="15" fill="rgb(243,81,16)" fg:x="10079" fg:w="12"/><text x="13.3376%" y="463.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (11 samples, 0.01%)</title><rect x="13.0889%" y="437" width="0.0143%" height="15" fill="rgb(250,14,2)" fg:x="10080" fg:w="11"/><text x="13.3389%" y="447.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (11 samples, 0.01%)</title><rect x="13.0889%" y="421" width="0.0143%" height="15" fill="rgb(233,135,29)" fg:x="10080" fg:w="11"/><text x="13.3389%" y="431.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (9 samples, 0.01%)</title><rect x="13.0915%" y="405" width="0.0117%" height="15" fill="rgb(224,64,43)" fg:x="10082" fg:w="9"/><text x="13.3415%" y="415.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (9 samples, 0.01%)</title><rect x="13.0915%" y="389" width="0.0117%" height="15" fill="rgb(238,84,13)" fg:x="10082" fg:w="9"/><text x="13.3415%" y="399.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (9 samples, 0.01%)</title><rect x="13.0915%" y="373" width="0.0117%" height="15" fill="rgb(253,48,26)" fg:x="10082" fg:w="9"/><text x="13.3415%" y="383.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (20 samples, 0.03%)</title><rect x="13.0876%" y="517" width="0.0260%" height="15" fill="rgb(205,223,31)" fg:x="10079" fg:w="20"/><text x="13.3376%" y="527.50"></text></g><g><title>serde::de::SeqAccess::next_element (20 samples, 0.03%)</title><rect x="13.0876%" y="501" width="0.0260%" height="15" fill="rgb(221,41,32)" fg:x="10079" fg:w="20"/><text x="13.3376%" y="511.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.03%)</title><rect x="13.0876%" y="485" width="0.0260%" height="15" fill="rgb(213,158,31)" fg:x="10079" fg:w="20"/><text x="13.3376%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.03%)</title><rect x="13.0876%" y="469" width="0.0260%" height="15" fill="rgb(245,126,43)" fg:x="10079" fg:w="20"/><text x="13.3376%" y="479.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (8 samples, 0.01%)</title><rect x="13.1032%" y="453" width="0.0104%" height="15" fill="rgb(227,7,22)" fg:x="10091" fg:w="8"/><text x="13.3532%" y="463.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (8 samples, 0.01%)</title><rect x="13.1032%" y="437" width="0.0104%" height="15" fill="rgb(252,90,44)" fg:x="10091" fg:w="8"/><text x="13.3532%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (23 samples, 0.03%)</title><rect x="13.0850%" y="565" width="0.0299%" height="15" fill="rgb(253,91,0)" fg:x="10077" fg:w="23"/><text x="13.3350%" y="575.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (22 samples, 0.03%)</title><rect x="13.0863%" y="549" width="0.0286%" height="15" fill="rgb(252,175,49)" fg:x="10078" fg:w="22"/><text x="13.3363%" y="559.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (22 samples, 0.03%)</title><rect x="13.0863%" y="533" width="0.0286%" height="15" fill="rgb(246,150,1)" fg:x="10078" fg:w="22"/><text x="13.3363%" y="543.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (27 samples, 0.04%)</title><rect x="13.0824%" y="661" width="0.0351%" height="15" fill="rgb(241,192,25)" fg:x="10075" fg:w="27"/><text x="13.3324%" y="671.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (26 samples, 0.03%)</title><rect x="13.0837%" y="645" width="0.0338%" height="15" fill="rgb(239,187,11)" fg:x="10076" fg:w="26"/><text x="13.3337%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (26 samples, 0.03%)</title><rect x="13.0837%" y="629" width="0.0338%" height="15" fill="rgb(218,202,51)" fg:x="10076" fg:w="26"/><text x="13.3337%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (26 samples, 0.03%)</title><rect x="13.0837%" y="613" width="0.0338%" height="15" fill="rgb(225,176,8)" fg:x="10076" fg:w="26"/><text x="13.3337%" y="623.50"></text></g><g><title>&lt;&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum::__DeserializeWith as serde::de::Deserialize&gt;::deserialize (26 samples, 0.03%)</title><rect x="13.0837%" y="597" width="0.0338%" height="15" fill="rgb(219,122,41)" fg:x="10076" fg:w="26"/><text x="13.3337%" y="607.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_deserialize (25 samples, 0.03%)</title><rect x="13.0850%" y="581" width="0.0325%" height="15" fill="rgb(248,140,20)" fg:x="10077" fg:w="25"/><text x="13.3350%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 0.04%)</title><rect x="13.0824%" y="709" width="0.0364%" height="15" fill="rgb(245,41,37)" fg:x="10075" fg:w="28"/><text x="13.3324%" y="719.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize (28 samples, 0.04%)</title><rect x="13.0824%" y="693" width="0.0364%" height="15" fill="rgb(235,82,39)" fg:x="10075" fg:w="28"/><text x="13.3324%" y="703.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (28 samples, 0.04%)</title><rect x="13.0824%" y="677" width="0.0364%" height="15" fill="rgb(230,108,42)" fg:x="10075" fg:w="28"/><text x="13.3324%" y="687.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (36 samples, 0.05%)</title><rect x="13.0733%" y="757" width="0.0467%" height="15" fill="rgb(215,150,50)" fg:x="10068" fg:w="36"/><text x="13.3233%" y="767.50"></text></g><g><title>serde::de::SeqAccess::next_element (32 samples, 0.04%)</title><rect x="13.0785%" y="741" width="0.0416%" height="15" fill="rgb(233,212,5)" fg:x="10072" fg:w="32"/><text x="13.3285%" y="751.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (32 samples, 0.04%)</title><rect x="13.0785%" y="725" width="0.0416%" height="15" fill="rgb(245,80,22)" fg:x="10072" fg:w="32"/><text x="13.3285%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (111 samples, 0.14%)</title><rect x="12.9772%" y="805" width="0.1441%" height="15" fill="rgb(238,129,16)" fg:x="9994" fg:w="111"/><text x="13.2272%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (38 samples, 0.05%)</title><rect x="13.0720%" y="789" width="0.0493%" height="15" fill="rgb(240,19,0)" fg:x="10067" fg:w="38"/><text x="13.3220%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (37 samples, 0.05%)</title><rect x="13.0733%" y="773" width="0.0480%" height="15" fill="rgb(232,42,35)" fg:x="10068" fg:w="37"/><text x="13.3233%" y="783.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (115 samples, 0.15%)</title><rect x="12.9733%" y="853" width="0.1493%" height="15" fill="rgb(223,130,24)" fg:x="9991" fg:w="115"/><text x="13.2233%" y="863.50"></text></g><g><title>serde::de::SeqAccess::next_element (113 samples, 0.15%)</title><rect x="12.9759%" y="837" width="0.1467%" height="15" fill="rgb(237,16,22)" fg:x="9993" fg:w="113"/><text x="13.2259%" y="847.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (113 samples, 0.15%)</title><rect x="12.9759%" y="821" width="0.1467%" height="15" fill="rgb(248,192,20)" fg:x="9993" fg:w="113"/><text x="13.2259%" y="831.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (127 samples, 0.16%)</title><rect x="12.9616%" y="949" width="0.1649%" height="15" fill="rgb(233,167,2)" fg:x="9982" fg:w="127"/><text x="13.2116%" y="959.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (120 samples, 0.16%)</title><rect x="12.9707%" y="933" width="0.1558%" height="15" fill="rgb(252,71,44)" fg:x="9989" fg:w="120"/><text x="13.2207%" y="943.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (120 samples, 0.16%)</title><rect x="12.9707%" y="917" width="0.1558%" height="15" fill="rgb(238,37,47)" fg:x="9989" fg:w="120"/><text x="13.2207%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (120 samples, 0.16%)</title><rect x="12.9707%" y="901" width="0.1558%" height="15" fill="rgb(214,202,54)" fg:x="9989" fg:w="120"/><text x="13.2207%" y="911.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (120 samples, 0.16%)</title><rect x="12.9707%" y="885" width="0.1558%" height="15" fill="rgb(254,165,40)" fg:x="9989" fg:w="120"/><text x="13.2207%" y="895.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (120 samples, 0.16%)</title><rect x="12.9707%" y="869" width="0.1558%" height="15" fill="rgb(246,173,38)" fg:x="9989" fg:w="120"/><text x="13.2207%" y="879.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::de::Deserialize for aptos_types::access_path::Path&gt;::deserialize (131 samples, 0.17%)</title><rect x="12.9577%" y="981" width="0.1701%" height="15" fill="rgb(215,3,27)" fg:x="9979" fg:w="131"/><text x="13.2077%" y="991.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (131 samples, 0.17%)</title><rect x="12.9577%" y="965" width="0.1701%" height="15" fill="rgb(239,169,51)" fg:x="9979" fg:w="131"/><text x="13.2077%" y="975.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (137 samples, 0.18%)</title><rect x="12.9551%" y="1013" width="0.1779%" height="15" fill="rgb(212,5,25)" fg:x="9977" fg:w="137"/><text x="13.2051%" y="1023.50"></text></g><g><title>bcs::de::from_bytes (137 samples, 0.18%)</title><rect x="12.9551%" y="997" width="0.1779%" height="15" fill="rgb(243,45,17)" fg:x="9977" fg:w="137"/><text x="13.2051%" y="1007.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (149 samples, 0.19%)</title><rect x="12.9525%" y="1029" width="0.1935%" height="15" fill="rgb(242,97,9)" fg:x="9975" fg:w="149"/><text x="13.2025%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (9 samples, 0.01%)</title><rect x="13.1343%" y="1013" width="0.0117%" height="15" fill="rgb(228,71,31)" fg:x="10115" fg:w="9"/><text x="13.3843%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (9 samples, 0.01%)</title><rect x="13.1343%" y="997" width="0.0117%" height="15" fill="rgb(252,184,16)" fg:x="10115" fg:w="9"/><text x="13.3843%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (8 samples, 0.01%)</title><rect x="13.1356%" y="981" width="0.0104%" height="15" fill="rgb(236,169,46)" fg:x="10116" fg:w="8"/><text x="13.3856%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (8 samples, 0.01%)</title><rect x="13.1356%" y="965" width="0.0104%" height="15" fill="rgb(207,17,47)" fg:x="10116" fg:w="8"/><text x="13.3856%" y="975.50"></text></g><g><title>alloc::alloc::box_free (8 samples, 0.01%)</title><rect x="13.1356%" y="949" width="0.0104%" height="15" fill="rgb(206,201,28)" fg:x="10116" fg:w="8"/><text x="13.3856%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="13.1356%" y="933" width="0.0104%" height="15" fill="rgb(224,184,23)" fg:x="10116" fg:w="8"/><text x="13.3856%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="13.1356%" y="917" width="0.0104%" height="15" fill="rgb(208,139,48)" fg:x="10116" fg:w="8"/><text x="13.3856%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (151 samples, 0.20%)</title><rect x="12.9512%" y="1125" width="0.1961%" height="15" fill="rgb(208,130,10)" fg:x="9974" fg:w="151"/><text x="13.2012%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (151 samples, 0.20%)</title><rect x="12.9512%" y="1109" width="0.1961%" height="15" fill="rgb(211,213,45)" fg:x="9974" fg:w="151"/><text x="13.2012%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (150 samples, 0.19%)</title><rect x="12.9525%" y="1093" width="0.1948%" height="15" fill="rgb(235,100,30)" fg:x="9975" fg:w="150"/><text x="13.2025%" y="1103.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (150 samples, 0.19%)</title><rect x="12.9525%" y="1077" width="0.1948%" height="15" fill="rgb(206,144,31)" fg:x="9975" fg:w="150"/><text x="13.2025%" y="1087.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::ReadDescriptor&lt;K&gt;::module_path (150 samples, 0.19%)</title><rect x="12.9525%" y="1061" width="0.1948%" height="15" fill="rgb(224,200,26)" fg:x="9975" fg:w="150"/><text x="13.2025%" y="1071.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (150 samples, 0.19%)</title><rect x="12.9525%" y="1045" width="0.1948%" height="15" fill="rgb(247,104,53)" fg:x="9975" fg:w="150"/><text x="13.2025%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (153 samples, 0.20%)</title><rect x="12.9499%" y="1157" width="0.1987%" height="15" fill="rgb(220,14,17)" fg:x="9973" fg:w="153"/><text x="13.1999%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (152 samples, 0.20%)</title><rect x="12.9512%" y="1141" width="0.1974%" height="15" fill="rgb(230,140,40)" fg:x="9974" fg:w="152"/><text x="13.2012%" y="1151.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as aptos_block_executor::task::ModulePath&gt;::module_path (9 samples, 0.01%)</title><rect x="13.1512%" y="1029" width="0.0117%" height="15" fill="rgb(229,2,41)" fg:x="10128" fg:w="9"/><text x="13.4012%" y="1039.50"></text></g><g><title>aptos_types::access_path::AccessPath::is_code (8 samples, 0.01%)</title><rect x="13.1525%" y="1013" width="0.0104%" height="15" fill="rgb(232,89,16)" fg:x="10129" fg:w="8"/><text x="13.4025%" y="1023.50"></text></g><g><title>aptos_types::access_path::AccessPath::get_path (8 samples, 0.01%)</title><rect x="13.1525%" y="997" width="0.0104%" height="15" fill="rgb(247,59,52)" fg:x="10129" fg:w="8"/><text x="13.4025%" y="1007.50"></text></g><g><title>bcs::de::from_bytes (8 samples, 0.01%)</title><rect x="13.1525%" y="981" width="0.0104%" height="15" fill="rgb(226,110,21)" fg:x="10129" fg:w="8"/><text x="13.4025%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (165 samples, 0.21%)</title><rect x="12.9499%" y="1189" width="0.2143%" height="15" fill="rgb(224,176,43)" fg:x="9973" fg:w="165"/><text x="13.1999%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (165 samples, 0.21%)</title><rect x="12.9499%" y="1173" width="0.2143%" height="15" fill="rgb(221,73,6)" fg:x="9973" fg:w="165"/><text x="13.1999%" y="1183.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="13.1486%" y="1157" width="0.0156%" height="15" fill="rgb(232,78,19)" fg:x="10126" fg:w="12"/><text x="13.3986%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="13.1486%" y="1141" width="0.0156%" height="15" fill="rgb(233,112,48)" fg:x="10126" fg:w="12"/><text x="13.3986%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="13.1486%" y="1125" width="0.0156%" height="15" fill="rgb(243,131,47)" fg:x="10126" fg:w="12"/><text x="13.3986%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (12 samples, 0.02%)</title><rect x="13.1486%" y="1109" width="0.0156%" height="15" fill="rgb(226,51,1)" fg:x="10126" fg:w="12"/><text x="13.3986%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.02%)</title><rect x="13.1486%" y="1093" width="0.0156%" height="15" fill="rgb(247,58,7)" fg:x="10126" fg:w="12"/><text x="13.3986%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (12 samples, 0.02%)</title><rect x="13.1486%" y="1077" width="0.0156%" height="15" fill="rgb(209,7,32)" fg:x="10126" fg:w="12"/><text x="13.3986%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="13.1486%" y="1061" width="0.0156%" height="15" fill="rgb(209,39,41)" fg:x="10126" fg:w="12"/><text x="13.3986%" y="1071.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record::{{closure}} (10 samples, 0.01%)</title><rect x="13.1512%" y="1045" width="0.0130%" height="15" fill="rgb(226,182,46)" fg:x="10128" fg:w="10"/><text x="13.4012%" y="1055.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::record (234 samples, 0.30%)</title><rect x="12.8642%" y="1205" width="0.3038%" height="15" fill="rgb(230,219,10)" fg:x="9907" fg:w="234"/><text x="13.1142%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="13.1759%" y="1141" width="0.0130%" height="15" fill="rgb(227,175,30)" fg:x="10147" fg:w="10"/><text x="13.4259%" y="1151.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="13.1772%" y="1125" width="0.0117%" height="15" fill="rgb(217,2,50)" fg:x="10148" fg:w="9"/><text x="13.4272%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="13.1785%" y="1109" width="0.0104%" height="15" fill="rgb(229,160,0)" fg:x="10149" fg:w="8"/><text x="13.4285%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="13.1785%" y="1093" width="0.0104%" height="15" fill="rgb(207,78,37)" fg:x="10149" fg:w="8"/><text x="13.4285%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.01%)</title><rect x="13.1785%" y="1077" width="0.0104%" height="15" fill="rgb(225,57,0)" fg:x="10149" fg:w="8"/><text x="13.4285%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="13.1785%" y="1061" width="0.0104%" height="15" fill="rgb(232,154,2)" fg:x="10149" fg:w="8"/><text x="13.4285%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="13.1785%" y="1045" width="0.0104%" height="15" fill="rgb(241,212,25)" fg:x="10149" fg:w="8"/><text x="13.4285%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="13.1785%" y="1029" width="0.0104%" height="15" fill="rgb(226,69,20)" fg:x="10149" fg:w="8"/><text x="13.4285%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.02%)</title><rect x="13.1746%" y="1189" width="0.0195%" height="15" fill="rgb(247,184,54)" fg:x="10146" fg:w="15"/><text x="13.4246%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.02%)</title><rect x="13.1746%" y="1173" width="0.0195%" height="15" fill="rgb(210,145,0)" fg:x="10146" fg:w="15"/><text x="13.4246%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.02%)</title><rect x="13.1746%" y="1157" width="0.0195%" height="15" fill="rgb(253,82,12)" fg:x="10146" fg:w="15"/><text x="13.4246%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.01%)</title><rect x="13.1940%" y="1189" width="0.0130%" height="15" fill="rgb(245,42,11)" fg:x="10161" fg:w="10"/><text x="13.4440%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.01%)</title><rect x="13.1940%" y="1173" width="0.0130%" height="15" fill="rgb(219,147,32)" fg:x="10161" fg:w="10"/><text x="13.4440%" y="1183.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (36 samples, 0.05%)</title><rect x="13.1681%" y="1205" width="0.0467%" height="15" fill="rgb(246,12,7)" fg:x="10141" fg:w="36"/><text x="13.4181%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.01%)</title><rect x="13.2317%" y="1189" width="0.0130%" height="15" fill="rgb(243,50,9)" fg:x="10190" fg:w="10"/><text x="13.4817%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.01%)</title><rect x="13.2317%" y="1173" width="0.0130%" height="15" fill="rgb(219,149,6)" fg:x="10190" fg:w="10"/><text x="13.4817%" y="1183.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (26 samples, 0.03%)</title><rect x="13.2148%" y="1205" width="0.0338%" height="15" fill="rgb(241,51,42)" fg:x="10177" fg:w="26"/><text x="13.4648%" y="1215.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (572 samples, 0.74%)</title><rect x="12.5253%" y="1221" width="0.7427%" height="15" fill="rgb(226,128,27)" fg:x="9646" fg:w="572"/><text x="12.7753%" y="1231.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (10 samples, 0.01%)</title><rect x="13.2810%" y="1125" width="0.0130%" height="15" fill="rgb(244,144,4)" fg:x="10228" fg:w="10"/><text x="13.5310%" y="1135.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (9 samples, 0.01%)</title><rect x="13.2823%" y="1109" width="0.0117%" height="15" fill="rgb(221,4,13)" fg:x="10229" fg:w="9"/><text x="13.5323%" y="1119.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (9 samples, 0.01%)</title><rect x="13.2823%" y="1093" width="0.0117%" height="15" fill="rgb(208,170,28)" fg:x="10229" fg:w="9"/><text x="13.5323%" y="1103.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="13.3018%" y="1061" width="0.0143%" height="15" fill="rgb(226,131,13)" fg:x="10244" fg:w="11"/><text x="13.5518%" y="1071.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="13.3018%" y="1045" width="0.0143%" height="15" fill="rgb(215,72,41)" fg:x="10244" fg:w="11"/><text x="13.5518%" y="1055.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="13.3018%" y="1029" width="0.0143%" height="15" fill="rgb(243,108,20)" fg:x="10244" fg:w="11"/><text x="13.5518%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="13.3018%" y="1013" width="0.0143%" height="15" fill="rgb(230,189,17)" fg:x="10244" fg:w="11"/><text x="13.5518%" y="1023.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="13.3018%" y="1093" width="0.0156%" height="15" fill="rgb(220,50,17)" fg:x="10244" fg:w="12"/><text x="13.5518%" y="1103.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="13.3018%" y="1077" width="0.0156%" height="15" fill="rgb(248,152,48)" fg:x="10244" fg:w="12"/><text x="13.5518%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="13.3213%" y="1045" width="0.0143%" height="15" fill="rgb(244,91,11)" fg:x="10259" fg:w="11"/><text x="13.5713%" y="1055.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (31 samples, 0.04%)</title><rect x="13.2966%" y="1125" width="0.0403%" height="15" fill="rgb(220,157,5)" fg:x="10240" fg:w="31"/><text x="13.5466%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.04%)</title><rect x="13.3018%" y="1109" width="0.0351%" height="15" fill="rgb(253,137,8)" fg:x="10244" fg:w="27"/><text x="13.5518%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="13.3174%" y="1093" width="0.0195%" height="15" fill="rgb(217,137,51)" fg:x="10256" fg:w="15"/><text x="13.5674%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="13.3187%" y="1077" width="0.0182%" height="15" fill="rgb(218,209,53)" fg:x="10257" fg:w="14"/><text x="13.5687%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="13.3187%" y="1061" width="0.0182%" height="15" fill="rgb(249,137,25)" fg:x="10257" fg:w="14"/><text x="13.5687%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="13.3538%" y="1077" width="0.0117%" height="15" fill="rgb(239,155,26)" fg:x="10284" fg:w="9"/><text x="13.6038%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="13.3538%" y="1061" width="0.0117%" height="15" fill="rgb(227,85,46)" fg:x="10284" fg:w="9"/><text x="13.6038%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="13.3538%" y="1045" width="0.0117%" height="15" fill="rgb(251,107,43)" fg:x="10284" fg:w="9"/><text x="13.6038%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.03%)</title><rect x="13.3382%" y="1093" width="0.0286%" height="15" fill="rgb(234,170,33)" fg:x="10272" fg:w="22"/><text x="13.5882%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (89 samples, 0.12%)</title><rect x="13.2694%" y="1205" width="0.1156%" height="15" fill="rgb(206,29,35)" fg:x="10219" fg:w="89"/><text x="13.5194%" y="1215.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate::{{closure}} (89 samples, 0.12%)</title><rect x="13.2694%" y="1189" width="0.1156%" height="15" fill="rgb(227,138,25)" fg:x="10219" fg:w="89"/><text x="13.5194%" y="1199.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (89 samples, 0.12%)</title><rect x="13.2694%" y="1173" width="0.1156%" height="15" fill="rgb(249,131,35)" fg:x="10219" fg:w="89"/><text x="13.5194%" y="1183.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (81 samples, 0.11%)</title><rect x="13.2797%" y="1157" width="0.1052%" height="15" fill="rgb(239,6,40)" fg:x="10227" fg:w="81"/><text x="13.5297%" y="1167.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (81 samples, 0.11%)</title><rect x="13.2797%" y="1141" width="0.1052%" height="15" fill="rgb(246,136,47)" fg:x="10227" fg:w="81"/><text x="13.5297%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (37 samples, 0.05%)</title><rect x="13.3369%" y="1125" width="0.0480%" height="15" fill="rgb(253,58,26)" fg:x="10271" fg:w="37"/><text x="13.5869%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.05%)</title><rect x="13.3382%" y="1109" width="0.0467%" height="15" fill="rgb(237,141,10)" fg:x="10272" fg:w="36"/><text x="13.5882%" y="1119.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (14 samples, 0.02%)</title><rect x="13.3667%" y="1093" width="0.0182%" height="15" fill="rgb(234,156,12)" fg:x="10294" fg:w="14"/><text x="13.6167%" y="1103.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="13.3667%" y="1077" width="0.0182%" height="15" fill="rgb(243,224,36)" fg:x="10294" fg:w="14"/><text x="13.6167%" y="1087.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.02%)</title><rect x="13.3667%" y="1061" width="0.0182%" height="15" fill="rgb(205,229,51)" fg:x="10294" fg:w="14"/><text x="13.6167%" y="1071.50"></text></g><g><title>aptos_block_executor::txn_last_input_output::TxnLastInputOutput&lt;K,T,E&gt;::modified_keys (8 samples, 0.01%)</title><rect x="13.3966%" y="1205" width="0.0104%" height="15" fill="rgb(223,189,4)" fg:x="10317" fg:w="8"/><text x="13.6466%" y="1215.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::validate (121 samples, 0.16%)</title><rect x="13.2681%" y="1221" width="0.1571%" height="15" fill="rgb(249,167,54)" fg:x="10218" fg:w="121"/><text x="13.5181%" y="1231.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (9 samples, 0.01%)</title><rect x="13.4512%" y="1173" width="0.0117%" height="15" fill="rgb(218,34,28)" fg:x="10359" fg:w="9"/><text x="13.7012%" y="1183.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (10 samples, 0.01%)</title><rect x="13.4628%" y="1173" width="0.0130%" height="15" fill="rgb(232,109,42)" fg:x="10368" fg:w="10"/><text x="13.7128%" y="1183.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_incarnate (24 samples, 0.03%)</title><rect x="13.4473%" y="1189" width="0.0312%" height="15" fill="rgb(248,214,46)" fg:x="10356" fg:w="24"/><text x="13.6973%" y="1199.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_execute_next_version (25 samples, 0.03%)</title><rect x="13.4473%" y="1205" width="0.0325%" height="15" fill="rgb(244,216,40)" fg:x="10356" fg:w="25"/><text x="13.6973%" y="1215.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::next_task (50 samples, 0.06%)</title><rect x="13.4252%" y="1221" width="0.0649%" height="15" fill="rgb(231,226,31)" fg:x="10339" fg:w="50"/><text x="13.6752%" y="1231.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.01%)</title><rect x="13.5122%" y="1205" width="0.0117%" height="15" fill="rgb(238,38,43)" fg:x="10406" fg:w="9"/><text x="13.7622%" y="1215.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.01%)</title><rect x="13.5122%" y="1189" width="0.0117%" height="15" fill="rgb(208,88,43)" fg:x="10406" fg:w="9"/><text x="13.7622%" y="1199.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (8 samples, 0.01%)</title><rect x="13.5135%" y="1173" width="0.0104%" height="15" fill="rgb(205,136,37)" fg:x="10407" fg:w="8"/><text x="13.7635%" y="1183.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (8 samples, 0.01%)</title><rect x="13.5135%" y="1157" width="0.0104%" height="15" fill="rgb(237,34,14)" fg:x="10407" fg:w="8"/><text x="13.7635%" y="1167.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::try_commit (38 samples, 0.05%)</title><rect x="13.4901%" y="1221" width="0.0493%" height="15" fill="rgb(236,193,44)" fg:x="10389" fg:w="38"/><text x="13.7401%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.01%)</title><rect x="13.5472%" y="1205" width="0.0143%" height="15" fill="rgb(231,48,10)" fg:x="10433" fg:w="11"/><text x="13.7972%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.01%)</title><rect x="13.5472%" y="1189" width="0.0143%" height="15" fill="rgb(213,141,34)" fg:x="10433" fg:w="11"/><text x="13.7972%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="13.5472%" y="1173" width="0.0143%" height="15" fill="rgb(249,130,34)" fg:x="10433" fg:w="11"/><text x="13.7972%" y="1183.50"></text></g><g><title>aptos_types::transaction::Profiler::end_timing (23 samples, 0.03%)</title><rect x="13.5459%" y="1221" width="0.0299%" height="15" fill="rgb(219,42,41)" fg:x="10432" fg:w="23"/><text x="13.7959%" y="1231.50"></text></g><g><title>aptos_types::transaction::Profiler::touch_time (8 samples, 0.01%)</title><rect x="13.5758%" y="1205" width="0.0104%" height="15" fill="rgb(224,100,54)" fg:x="10455" fg:w="8"/><text x="13.8258%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.01%)</title><rect x="13.5758%" y="1189" width="0.0104%" height="15" fill="rgb(229,200,27)" fg:x="10455" fg:w="8"/><text x="13.8258%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.01%)</title><rect x="13.5758%" y="1173" width="0.0104%" height="15" fill="rgb(217,118,10)" fg:x="10455" fg:w="8"/><text x="13.8258%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="13.5758%" y="1157" width="0.0104%" height="15" fill="rgb(206,22,3)" fg:x="10455" fg:w="8"/><text x="13.8258%" y="1167.50"></text></g><g><title>aptos_types::transaction::Profiler::start_timing (12 samples, 0.02%)</title><rect x="13.5758%" y="1221" width="0.0156%" height="15" fill="rgb(232,163,46)" fg:x="10455" fg:w="12"/><text x="13.8258%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (8 samples, 0.01%)</title><rect x="13.6109%" y="901" width="0.0104%" height="15" fill="rgb(206,95,13)" fg:x="10482" fg:w="8"/><text x="13.8609%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (8 samples, 0.01%)</title><rect x="13.6109%" y="885" width="0.0104%" height="15" fill="rgb(253,154,18)" fg:x="10482" fg:w="8"/><text x="13.8609%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="13.5992%" y="1013" width="0.0234%" height="15" fill="rgb(219,32,23)" fg:x="10473" fg:w="18"/><text x="13.8492%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="13.5992%" y="997" width="0.0234%" height="15" fill="rgb(230,191,45)" fg:x="10473" fg:w="18"/><text x="13.8492%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (18 samples, 0.02%)</title><rect x="13.5992%" y="981" width="0.0234%" height="15" fill="rgb(229,64,36)" fg:x="10473" fg:w="18"/><text x="13.8492%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (18 samples, 0.02%)</title><rect x="13.5992%" y="965" width="0.0234%" height="15" fill="rgb(205,129,25)" fg:x="10473" fg:w="18"/><text x="13.8492%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="13.5992%" y="949" width="0.0234%" height="15" fill="rgb(254,112,7)" fg:x="10473" fg:w="18"/><text x="13.8492%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.02%)</title><rect x="13.6005%" y="933" width="0.0221%" height="15" fill="rgb(226,53,48)" fg:x="10474" fg:w="17"/><text x="13.8505%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (17 samples, 0.02%)</title><rect x="13.6005%" y="917" width="0.0221%" height="15" fill="rgb(214,153,38)" fg:x="10474" fg:w="17"/><text x="13.8505%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_binary_format::file_format::CompiledModule&gt;&gt; (17 samples, 0.02%)</title><rect x="13.6251%" y="885" width="0.0221%" height="15" fill="rgb(243,101,7)" fg:x="10493" fg:w="17"/><text x="13.8751%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="13.6251%" y="869" width="0.0221%" height="15" fill="rgb(240,140,22)" fg:x="10493" fg:w="17"/><text x="13.8751%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.02%)</title><rect x="13.6251%" y="853" width="0.0221%" height="15" fill="rgb(235,114,2)" fg:x="10493" fg:w="17"/><text x="13.8751%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (17 samples, 0.02%)</title><rect x="13.6251%" y="837" width="0.0221%" height="15" fill="rgb(242,59,12)" fg:x="10493" fg:w="17"/><text x="13.8751%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (42 samples, 0.05%)</title><rect x="13.5992%" y="1061" width="0.0545%" height="15" fill="rgb(252,134,9)" fg:x="10473" fg:w="42"/><text x="13.8492%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (42 samples, 0.05%)</title><rect x="13.5992%" y="1045" width="0.0545%" height="15" fill="rgb(236,4,44)" fg:x="10473" fg:w="42"/><text x="13.8492%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (42 samples, 0.05%)</title><rect x="13.5992%" y="1029" width="0.0545%" height="15" fill="rgb(254,172,41)" fg:x="10473" fg:w="42"/><text x="13.8492%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (23 samples, 0.03%)</title><rect x="13.6239%" y="1013" width="0.0299%" height="15" fill="rgb(244,63,20)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (23 samples, 0.03%)</title><rect x="13.6239%" y="997" width="0.0299%" height="15" fill="rgb(250,73,31)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="13.6239%" y="981" width="0.0299%" height="15" fill="rgb(241,38,36)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (23 samples, 0.03%)</title><rect x="13.6239%" y="965" width="0.0299%" height="15" fill="rgb(245,211,2)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (23 samples, 0.03%)</title><rect x="13.6239%" y="949" width="0.0299%" height="15" fill="rgb(206,120,28)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="13.6239%" y="933" width="0.0299%" height="15" fill="rgb(211,59,34)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (23 samples, 0.03%)</title><rect x="13.6239%" y="917" width="0.0299%" height="15" fill="rgb(233,168,5)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (23 samples, 0.03%)</title><rect x="13.6239%" y="901" width="0.0299%" height="15" fill="rgb(234,33,13)" fg:x="10492" fg:w="23"/><text x="13.8739%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1221" width="0.0558%" height="15" fill="rgb(231,150,26)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm::AptosVM&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1205" width="0.0558%" height="15" fill="rgb(217,191,4)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm_impl::AptosVMImpl&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1189" width="0.0558%" height="15" fill="rgb(246,198,38)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt;&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1173" width="0.0558%" height="15" fill="rgb(245,64,37)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.06%)</title><rect x="13.5992%" y="1157" width="0.0558%" height="15" fill="rgb(250,30,36)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (43 samples, 0.06%)</title><rect x="13.5992%" y="1141" width="0.0558%" height="15" fill="rgb(217,86,53)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1125" width="0.0558%" height="15" fill="rgb(228,157,16)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1109" width="0.0558%" height="15" fill="rgb(217,59,31)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1093" width="0.0558%" height="15" fill="rgb(237,138,41)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (43 samples, 0.06%)</title><rect x="13.5992%" y="1077" width="0.0558%" height="15" fill="rgb(227,91,49)" fg:x="10473" fg:w="43"/><text x="13.8492%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (10,007 samples, 12.99%)</title><rect x="0.6687%" y="1733" width="12.9941%" height="15" fill="rgb(247,21,44)" fg:x="515" fg:w="10007"/><text x="0.9187%" y="1743.50">rayon_core::registry..</text></g><g><title>rayon_core::job::JobRef::execute (10,007 samples, 12.99%)</title><rect x="0.6687%" y="1717" width="12.9941%" height="15" fill="rgb(219,210,51)" fg:x="515" fg:w="10007"/><text x="0.9187%" y="1727.50">rayon_core::job::Job..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,265 samples, 2.94%)</title><rect x="10.7217%" y="1701" width="2.9411%" height="15" fill="rgb(209,140,6)" fg:x="8257" fg:w="2265"/><text x="10.9717%" y="1711.50">&lt;r..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (2,261 samples, 2.94%)</title><rect x="10.7269%" y="1685" width="2.9359%" height="15" fill="rgb(221,188,24)" fg:x="8261" fg:w="2261"/><text x="10.9769%" y="1695.50">ra..</text></g><g><title>rayon_core::unwind::halt_unwinding (2,261 samples, 2.94%)</title><rect x="10.7269%" y="1669" width="2.9359%" height="15" fill="rgb(232,154,20)" fg:x="8261" fg:w="2261"/><text x="10.9769%" y="1679.50">ra..</text></g><g><title>std::panic::catch_unwind (2,261 samples, 2.94%)</title><rect x="10.7269%" y="1653" width="2.9359%" height="15" fill="rgb(244,137,50)" fg:x="8261" fg:w="2261"/><text x="10.9769%" y="1663.50">st..</text></g><g><title>std::panicking::try (2,261 samples, 2.94%)</title><rect x="10.7269%" y="1637" width="2.9359%" height="15" fill="rgb(225,185,43)" fg:x="8261" fg:w="2261"/><text x="10.9769%" y="1647.50">st..</text></g><g><title>std::panicking::try::do_call (2,261 samples, 2.94%)</title><rect x="10.7269%" y="1621" width="2.9359%" height="15" fill="rgb(213,205,38)" fg:x="8261" fg:w="2261"/><text x="10.9769%" y="1631.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,258 samples, 2.93%)</title><rect x="10.7308%" y="1605" width="2.9320%" height="15" fill="rgb(236,73,12)" fg:x="8264" fg:w="2258"/><text x="10.9808%" y="1615.50">&lt;c..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (2,257 samples, 2.93%)</title><rect x="10.7321%" y="1589" width="2.9307%" height="15" fill="rgb(235,219,13)" fg:x="8265" fg:w="2257"/><text x="10.9821%" y="1599.50">ra..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (1,234 samples, 1.60%)</title><rect x="12.0605%" y="1573" width="1.6023%" height="15" fill="rgb(218,59,36)" fg:x="9288" fg:w="1234"/><text x="12.3105%" y="1583.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (1,221 samples, 1.59%)</title><rect x="12.0773%" y="1557" width="1.5855%" height="15" fill="rgb(205,110,39)" fg:x="9301" fg:w="1221"/><text x="12.3273%" y="1567.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1541" width="1.3777%" height="15" fill="rgb(218,206,42)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1551.50"></text></g><g><title>rayon_core::scope::scope (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1525" width="1.3777%" height="15" fill="rgb(248,125,24)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1509" width="1.3777%" height="15" fill="rgb(242,28,27)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1519.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1493" width="1.3777%" height="15" fill="rgb(216,228,15)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1503.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1477" width="1.3777%" height="15" fill="rgb(235,116,46)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1461" width="1.3777%" height="15" fill="rgb(224,18,32)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1445" width="1.3777%" height="15" fill="rgb(252,5,12)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1455.50"></text></g><g><title>rayon_core::job::JobRef::execute (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1429" width="1.3777%" height="15" fill="rgb(251,36,5)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1439.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1413" width="1.3777%" height="15" fill="rgb(217,53,14)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1423.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1397" width="1.3777%" height="15" fill="rgb(215,86,45)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1407.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1381" width="1.3777%" height="15" fill="rgb(242,169,11)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1391.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1365" width="1.3777%" height="15" fill="rgb(211,213,45)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1349" width="1.3777%" height="15" fill="rgb(205,88,11)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1333" width="1.3777%" height="15" fill="rgb(252,69,26)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1343.50"></text></g><g><title>std::panicking::try (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1317" width="1.3777%" height="15" fill="rgb(246,123,37)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1301" width="1.3777%" height="15" fill="rgb(212,205,5)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1285" width="1.3777%" height="15" fill="rgb(253,148,0)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1295.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1269" width="1.3777%" height="15" fill="rgb(239,22,4)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1279.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1253" width="1.3777%" height="15" fill="rgb(226,26,53)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1263.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (1,061 samples, 1.38%)</title><rect x="12.2851%" y="1237" width="1.3777%" height="15" fill="rgb(225,229,45)" fg:x="9461" fg:w="1061"/><text x="12.5351%" y="1247.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (8 samples, 0.01%)</title><rect x="13.6784%" y="1541" width="0.0104%" height="15" fill="rgb(220,60,37)" fg:x="10534" fg:w="8"/><text x="13.9284%" y="1551.50"></text></g><g><title>crossbeam_epoch::default::with_handle (8 samples, 0.01%)</title><rect x="13.6784%" y="1525" width="0.0104%" height="15" fill="rgb(217,180,35)" fg:x="10534" fg:w="8"/><text x="13.9284%" y="1535.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (17 samples, 0.02%)</title><rect x="13.6745%" y="1605" width="0.0221%" height="15" fill="rgb(229,7,53)" fg:x="10531" fg:w="17"/><text x="13.9245%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (16 samples, 0.02%)</title><rect x="13.6758%" y="1589" width="0.0208%" height="15" fill="rgb(254,137,3)" fg:x="10532" fg:w="16"/><text x="13.9258%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (16 samples, 0.02%)</title><rect x="13.6758%" y="1573" width="0.0208%" height="15" fill="rgb(215,140,41)" fg:x="10532" fg:w="16"/><text x="13.9258%" y="1583.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (16 samples, 0.02%)</title><rect x="13.6758%" y="1557" width="0.0208%" height="15" fill="rgb(250,80,15)" fg:x="10532" fg:w="16"/><text x="13.9258%" y="1567.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (17 samples, 0.02%)</title><rect x="13.7173%" y="1525" width="0.0221%" height="15" fill="rgb(252,191,6)" fg:x="10564" fg:w="17"/><text x="13.9673%" y="1535.50"></text></g><g><title>crossbeam_epoch::default::with_handle (17 samples, 0.02%)</title><rect x="13.7173%" y="1509" width="0.0221%" height="15" fill="rgb(246,217,18)" fg:x="10564" fg:w="17"/><text x="13.9673%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.02%)</title><rect x="13.7186%" y="1493" width="0.0208%" height="15" fill="rgb(223,93,7)" fg:x="10565" fg:w="16"/><text x="13.9686%" y="1503.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (16 samples, 0.02%)</title><rect x="13.7186%" y="1477" width="0.0208%" height="15" fill="rgb(225,55,52)" fg:x="10565" fg:w="16"/><text x="13.9686%" y="1487.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (16 samples, 0.02%)</title><rect x="13.7186%" y="1461" width="0.0208%" height="15" fill="rgb(240,31,24)" fg:x="10565" fg:w="16"/><text x="13.9686%" y="1471.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (16 samples, 0.02%)</title><rect x="13.7186%" y="1445" width="0.0208%" height="15" fill="rgb(205,56,52)" fg:x="10565" fg:w="16"/><text x="13.9686%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (16 samples, 0.02%)</title><rect x="13.7186%" y="1429" width="0.0208%" height="15" fill="rgb(246,146,12)" fg:x="10565" fg:w="16"/><text x="13.9686%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (73 samples, 0.09%)</title><rect x="13.6628%" y="1717" width="0.0948%" height="15" fill="rgb(239,84,36)" fg:x="10522" fg:w="73"/><text x="13.9128%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (73 samples, 0.09%)</title><rect x="13.6628%" y="1701" width="0.0948%" height="15" fill="rgb(207,41,40)" fg:x="10522" fg:w="73"/><text x="13.9128%" y="1711.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (68 samples, 0.09%)</title><rect x="13.6693%" y="1685" width="0.0883%" height="15" fill="rgb(241,179,25)" fg:x="10527" fg:w="68"/><text x="13.9193%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (64 samples, 0.08%)</title><rect x="13.6745%" y="1669" width="0.0831%" height="15" fill="rgb(210,0,34)" fg:x="10531" fg:w="64"/><text x="13.9245%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 0.08%)</title><rect x="13.6745%" y="1653" width="0.0831%" height="15" fill="rgb(225,217,29)" fg:x="10531" fg:w="64"/><text x="13.9245%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 0.08%)</title><rect x="13.6745%" y="1637" width="0.0831%" height="15" fill="rgb(216,191,38)" fg:x="10531" fg:w="64"/><text x="13.9245%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64 samples, 0.08%)</title><rect x="13.6745%" y="1621" width="0.0831%" height="15" fill="rgb(232,140,52)" fg:x="10531" fg:w="64"/><text x="13.9245%" y="1631.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46 samples, 0.06%)</title><rect x="13.6979%" y="1605" width="0.0597%" height="15" fill="rgb(223,158,51)" fg:x="10549" fg:w="46"/><text x="13.9479%" y="1615.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (46 samples, 0.06%)</title><rect x="13.6979%" y="1589" width="0.0597%" height="15" fill="rgb(235,29,51)" fg:x="10549" fg:w="46"/><text x="13.9479%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (46 samples, 0.06%)</title><rect x="13.6979%" y="1573" width="0.0597%" height="15" fill="rgb(215,181,18)" fg:x="10549" fg:w="46"/><text x="13.9479%" y="1583.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (46 samples, 0.06%)</title><rect x="13.6979%" y="1557" width="0.0597%" height="15" fill="rgb(227,125,34)" fg:x="10549" fg:w="46"/><text x="13.9479%" y="1567.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (46 samples, 0.06%)</title><rect x="13.6979%" y="1541" width="0.0597%" height="15" fill="rgb(230,197,49)" fg:x="10549" fg:w="46"/><text x="13.9479%" y="1551.50"></text></g><g><title>crossbeam_epoch::default::pin (14 samples, 0.02%)</title><rect x="13.7394%" y="1525" width="0.0182%" height="15" fill="rgb(239,141,16)" fg:x="10581" fg:w="14"/><text x="13.9894%" y="1535.50"></text></g><g><title>crossbeam_epoch::default::with_handle (14 samples, 0.02%)</title><rect x="13.7394%" y="1509" width="0.0182%" height="15" fill="rgb(225,105,43)" fg:x="10581" fg:w="14"/><text x="13.9894%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.02%)</title><rect x="13.7407%" y="1493" width="0.0169%" height="15" fill="rgb(214,131,14)" fg:x="10582" fg:w="13"/><text x="13.9907%" y="1503.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (11 samples, 0.01%)</title><rect x="13.7433%" y="1477" width="0.0143%" height="15" fill="rgb(229,177,11)" fg:x="10584" fg:w="11"/><text x="13.9933%" y="1487.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (11 samples, 0.01%)</title><rect x="13.7433%" y="1461" width="0.0143%" height="15" fill="rgb(231,180,14)" fg:x="10584" fg:w="11"/><text x="13.9933%" y="1471.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (11 samples, 0.01%)</title><rect x="13.7433%" y="1445" width="0.0143%" height="15" fill="rgb(232,88,2)" fg:x="10584" fg:w="11"/><text x="13.9933%" y="1455.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (11 samples, 0.01%)</title><rect x="13.7433%" y="1429" width="0.0143%" height="15" fill="rgb(205,220,8)" fg:x="10584" fg:w="11"/><text x="13.9933%" y="1439.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (27 samples, 0.04%)</title><rect x="13.7602%" y="1685" width="0.0351%" height="15" fill="rgb(225,23,53)" fg:x="10597" fg:w="27"/><text x="14.0102%" y="1695.50"></text></g><g><title>crossbeam_epoch::default::with_handle (27 samples, 0.04%)</title><rect x="13.7602%" y="1669" width="0.0351%" height="15" fill="rgb(213,62,29)" fg:x="10597" fg:w="27"/><text x="14.0102%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.02%)</title><rect x="13.7771%" y="1653" width="0.0182%" height="15" fill="rgb(227,75,7)" fg:x="10610" fg:w="14"/><text x="14.0271%" y="1663.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (14 samples, 0.02%)</title><rect x="13.7771%" y="1637" width="0.0182%" height="15" fill="rgb(207,105,14)" fg:x="10610" fg:w="14"/><text x="14.0271%" y="1647.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="13.7771%" y="1621" width="0.0182%" height="15" fill="rgb(245,62,29)" fg:x="10610" fg:w="14"/><text x="14.0271%" y="1631.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.02%)</title><rect x="13.7784%" y="1605" width="0.0169%" height="15" fill="rgb(236,202,4)" fg:x="10611" fg:w="13"/><text x="14.0284%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.02%)</title><rect x="13.7784%" y="1589" width="0.0169%" height="15" fill="rgb(250,67,1)" fg:x="10611" fg:w="13"/><text x="14.0284%" y="1599.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (46 samples, 0.06%)</title><rect x="13.7576%" y="1701" width="0.0597%" height="15" fill="rgb(253,115,44)" fg:x="10595" fg:w="46"/><text x="14.0076%" y="1711.50"></text></g><g><title>crossbeam_epoch::default::pin (17 samples, 0.02%)</title><rect x="13.7953%" y="1685" width="0.0221%" height="15" fill="rgb(251,139,18)" fg:x="10624" fg:w="17"/><text x="14.0453%" y="1695.50"></text></g><g><title>crossbeam_epoch::default::with_handle (17 samples, 0.02%)</title><rect x="13.7953%" y="1669" width="0.0221%" height="15" fill="rgb(218,22,32)" fg:x="10624" fg:w="17"/><text x="14.0453%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.02%)</title><rect x="13.7953%" y="1653" width="0.0221%" height="15" fill="rgb(243,53,5)" fg:x="10624" fg:w="17"/><text x="14.0453%" y="1663.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (17 samples, 0.02%)</title><rect x="13.7953%" y="1637" width="0.0221%" height="15" fill="rgb(227,56,16)" fg:x="10624" fg:w="17"/><text x="14.0453%" y="1647.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (17 samples, 0.02%)</title><rect x="13.7953%" y="1621" width="0.0221%" height="15" fill="rgb(245,53,0)" fg:x="10624" fg:w="17"/><text x="14.0453%" y="1631.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (17 samples, 0.02%)</title><rect x="13.7953%" y="1605" width="0.0221%" height="15" fill="rgb(216,170,35)" fg:x="10624" fg:w="17"/><text x="14.0453%" y="1615.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (17 samples, 0.02%)</title><rect x="13.7953%" y="1589" width="0.0221%" height="15" fill="rgb(211,200,8)" fg:x="10624" fg:w="17"/><text x="14.0453%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (127 samples, 0.16%)</title><rect x="13.6628%" y="1733" width="0.1649%" height="15" fill="rgb(228,204,44)" fg:x="10522" fg:w="127"/><text x="13.9128%" y="1743.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (54 samples, 0.07%)</title><rect x="13.7576%" y="1717" width="0.0701%" height="15" fill="rgb(214,121,17)" fg:x="10595" fg:w="54"/><text x="14.0076%" y="1727.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (8 samples, 0.01%)</title><rect x="13.8173%" y="1701" width="0.0104%" height="15" fill="rgb(233,64,38)" fg:x="10641" fg:w="8"/><text x="14.0673%" y="1711.50"></text></g><g><title>__sched_yield (14 samples, 0.02%)</title><rect x="13.8277%" y="1717" width="0.0182%" height="15" fill="rgb(253,54,19)" fg:x="10649" fg:w="14"/><text x="14.0777%" y="1727.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="13.8303%" y="1701" width="0.0156%" height="15" fill="rgb(253,94,18)" fg:x="10651" fg:w="12"/><text x="14.0803%" y="1711.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="13.8316%" y="1685" width="0.0143%" height="15" fill="rgb(227,57,52)" fg:x="10652" fg:w="11"/><text x="14.0816%" y="1695.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="13.8329%" y="1669" width="0.0130%" height="15" fill="rgb(230,228,50)" fg:x="10653" fg:w="10"/><text x="14.0829%" y="1679.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="13.8342%" y="1653" width="0.0117%" height="15" fill="rgb(217,205,27)" fg:x="10654" fg:w="9"/><text x="14.0842%" y="1663.50"></text></g><g><title>rayon_core::latch::CoreLatch::wake_up (10 samples, 0.01%)</title><rect x="13.8485%" y="1701" width="0.0130%" height="15" fill="rgb(252,71,50)" fg:x="10665" fg:w="10"/><text x="14.0985%" y="1711.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (10 samples, 0.01%)</title><rect x="13.8485%" y="1685" width="0.0130%" height="15" fill="rgb(209,86,4)" fg:x="10665" fg:w="10"/><text x="14.0985%" y="1695.50"></text></g><g><title>std::sys::unix::futex::futex_wait (11 samples, 0.01%)</title><rect x="13.8667%" y="1637" width="0.0143%" height="15" fill="rgb(229,94,0)" fg:x="10679" fg:w="11"/><text x="14.1167%" y="1647.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (50 samples, 0.06%)</title><rect x="13.8277%" y="1733" width="0.0649%" height="15" fill="rgb(252,223,21)" fg:x="10649" fg:w="50"/><text x="14.0777%" y="1743.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (35 samples, 0.05%)</title><rect x="13.8472%" y="1717" width="0.0454%" height="15" fill="rgb(230,210,4)" fg:x="10664" fg:w="35"/><text x="14.0972%" y="1727.50"></text></g><g><title>std::sync::condvar::Condvar::wait (22 samples, 0.03%)</title><rect x="13.8641%" y="1701" width="0.0286%" height="15" fill="rgb(240,149,38)" fg:x="10677" fg:w="22"/><text x="14.1141%" y="1711.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (20 samples, 0.03%)</title><rect x="13.8667%" y="1685" width="0.0260%" height="15" fill="rgb(254,105,20)" fg:x="10679" fg:w="20"/><text x="14.1167%" y="1695.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (20 samples, 0.03%)</title><rect x="13.8667%" y="1669" width="0.0260%" height="15" fill="rgb(253,87,46)" fg:x="10679" fg:w="20"/><text x="14.1167%" y="1679.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (20 samples, 0.03%)</title><rect x="13.8667%" y="1653" width="0.0260%" height="15" fill="rgb(253,116,33)" fg:x="10679" fg:w="20"/><text x="14.1167%" y="1663.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (9 samples, 0.01%)</title><rect x="13.8810%" y="1637" width="0.0117%" height="15" fill="rgb(229,198,5)" fg:x="10690" fg:w="9"/><text x="14.1310%" y="1647.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (10,191 samples, 13.23%)</title><rect x="0.6635%" y="1813" width="13.2330%" height="15" fill="rgb(242,38,37)" fg:x="511" fg:w="10191"/><text x="0.9135%" y="1823.50">&lt;rayon_core::registr..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (10,191 samples, 13.23%)</title><rect x="0.6635%" y="1797" width="13.2330%" height="15" fill="rgb(242,69,53)" fg:x="511" fg:w="10191"/><text x="0.9135%" y="1807.50">rayon_core::registry..</text></g><g><title>rayon_core::registry::main_loop (10,191 samples, 13.23%)</title><rect x="0.6635%" y="1781" width="13.2330%" height="15" fill="rgb(249,80,16)" fg:x="511" fg:w="10191"/><text x="0.9135%" y="1791.50">rayon_core::registry..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10,189 samples, 13.23%)</title><rect x="0.6661%" y="1765" width="13.2304%" height="15" fill="rgb(206,128,11)" fg:x="513" fg:w="10189"/><text x="0.9161%" y="1775.50">rayon_core::registry..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10,189 samples, 13.23%)</title><rect x="0.6661%" y="1749" width="13.2304%" height="15" fill="rgb(212,35,20)" fg:x="513" fg:w="10189"/><text x="0.9161%" y="1759.50">rayon_core::registry..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,196 samples, 13.24%)</title><rect x="0.6635%" y="1829" width="13.2395%" height="15" fill="rgb(236,79,13)" fg:x="511" fg:w="10196"/><text x="0.9135%" y="1839.50">std::sys_common::bac..</text></g><g><title>std::panic::catch_unwind (10,197 samples, 13.24%)</title><rect x="0.6635%" y="1909" width="13.2408%" height="15" fill="rgb(233,123,3)" fg:x="511" fg:w="10197"/><text x="0.9135%" y="1919.50">std::panic::catch_un..</text></g><g><title>std::panicking::try (10,197 samples, 13.24%)</title><rect x="0.6635%" y="1893" width="13.2408%" height="15" fill="rgb(214,93,52)" fg:x="511" fg:w="10197"/><text x="0.9135%" y="1903.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,197 samples, 13.24%)</title><rect x="0.6635%" y="1877" width="13.2408%" height="15" fill="rgb(251,37,40)" fg:x="511" fg:w="10197"/><text x="0.9135%" y="1887.50">std::panicking::try:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,197 samples, 13.24%)</title><rect x="0.6635%" y="1861" width="13.2408%" height="15" fill="rgb(227,80,54)" fg:x="511" fg:w="10197"/><text x="0.9135%" y="1871.50">&lt;core::panic::unwind..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10,197 samples, 13.24%)</title><rect x="0.6635%" y="1845" width="13.2408%" height="15" fill="rgb(254,48,11)" fg:x="511" fg:w="10197"/><text x="0.9135%" y="1855.50">std::thread::Builder..</text></g><g><title>malloc (16 samples, 0.02%)</title><rect x="13.9095%" y="1877" width="0.0208%" height="15" fill="rgb(235,193,26)" fg:x="10712" fg:w="16"/><text x="14.1595%" y="1887.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="13.9121%" y="1861" width="0.0182%" height="15" fill="rgb(229,99,21)" fg:x="10714" fg:w="14"/><text x="14.1621%" y="1871.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="13.9121%" y="1845" width="0.0182%" height="15" fill="rgb(211,140,41)" fg:x="10714" fg:w="14"/><text x="14.1621%" y="1855.50"></text></g><g><title>std::sys::unix::thread::guard::current (25 samples, 0.03%)</title><rect x="13.9043%" y="1909" width="0.0325%" height="15" fill="rgb(240,227,30)" fg:x="10708" fg:w="25"/><text x="14.1543%" y="1919.50"></text></g><g><title>pthread_getattr_np (23 samples, 0.03%)</title><rect x="13.9069%" y="1893" width="0.0299%" height="15" fill="rgb(215,224,45)" fg:x="10710" fg:w="23"/><text x="14.1569%" y="1903.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,230 samples, 13.28%)</title><rect x="0.6609%" y="1973" width="13.2836%" height="15" fill="rgb(206,123,31)" fg:x="509" fg:w="10230"/><text x="0.9109%" y="1983.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,230 samples, 13.28%)</title><rect x="0.6609%" y="1957" width="13.2836%" height="15" fill="rgb(210,138,16)" fg:x="509" fg:w="10230"/><text x="0.9109%" y="1967.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10,230 samples, 13.28%)</title><rect x="0.6609%" y="1941" width="13.2836%" height="15" fill="rgb(228,57,28)" fg:x="509" fg:w="10230"/><text x="0.9109%" y="1951.50">core::ops::function:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10,229 samples, 13.28%)</title><rect x="0.6622%" y="1925" width="13.2823%" height="15" fill="rgb(242,170,10)" fg:x="510" fg:w="10229"/><text x="0.9122%" y="1935.50">std::thread::Builder..</text></g><g><title>sigaltstack (19 samples, 0.02%)</title><rect x="13.9498%" y="1941" width="0.0247%" height="15" fill="rgb(228,214,39)" fg:x="10743" fg:w="19"/><text x="14.1998%" y="1951.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="13.9537%" y="1925" width="0.0208%" height="15" fill="rgb(218,179,33)" fg:x="10746" fg:w="16"/><text x="14.2037%" y="1935.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="13.9537%" y="1909" width="0.0208%" height="15" fill="rgb(235,193,39)" fg:x="10746" fg:w="16"/><text x="14.2037%" y="1919.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="13.9563%" y="1893" width="0.0182%" height="15" fill="rgb(219,221,36)" fg:x="10748" fg:w="14"/><text x="14.2063%" y="1903.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="13.9641%" y="1877" width="0.0104%" height="15" fill="rgb(248,218,19)" fg:x="10754" fg:w="8"/><text x="14.2141%" y="1887.50"></text></g><g><title>__mmap (9 samples, 0.01%)</title><rect x="13.9744%" y="1909" width="0.0117%" height="15" fill="rgb(205,50,9)" fg:x="10762" fg:w="9"/><text x="14.2244%" y="1919.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="13.9757%" y="1893" width="0.0104%" height="15" fill="rgb(238,81,28)" fg:x="10763" fg:w="8"/><text x="14.2257%" y="1903.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="13.9757%" y="1877" width="0.0104%" height="15" fill="rgb(235,110,19)" fg:x="10763" fg:w="8"/><text x="14.2257%" y="1887.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="13.9757%" y="1861" width="0.0104%" height="15" fill="rgb(214,7,14)" fg:x="10763" fg:w="8"/><text x="14.2257%" y="1871.50"></text></g><g><title>[libc.so.6] (10,402 samples, 13.51%)</title><rect x="0.4999%" y="2005" width="13.5070%" height="15" fill="rgb(211,77,3)" fg:x="385" fg:w="10402"/><text x="0.7499%" y="2015.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10,284 samples, 13.35%)</title><rect x="0.6531%" y="1989" width="13.3538%" height="15" fill="rgb(229,5,9)" fg:x="503" fg:w="10284"/><text x="0.9031%" y="1999.50">std::sys::unix::thre..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (48 samples, 0.06%)</title><rect x="13.9446%" y="1973" width="0.0623%" height="15" fill="rgb(225,90,11)" fg:x="10739" fg:w="48"/><text x="14.1946%" y="1983.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (48 samples, 0.06%)</title><rect x="13.9446%" y="1957" width="0.0623%" height="15" fill="rgb(242,56,8)" fg:x="10739" fg:w="48"/><text x="14.1946%" y="1967.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (25 samples, 0.03%)</title><rect x="13.9744%" y="1941" width="0.0325%" height="15" fill="rgb(249,212,39)" fg:x="10762" fg:w="25"/><text x="14.2244%" y="1951.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (25 samples, 0.03%)</title><rect x="13.9744%" y="1925" width="0.0325%" height="15" fill="rgb(236,90,9)" fg:x="10762" fg:w="25"/><text x="14.2244%" y="1935.50"></text></g><g><title>std::sys::unix::os::page_size (10 samples, 0.01%)</title><rect x="13.9939%" y="1909" width="0.0130%" height="15" fill="rgb(206,88,35)" fg:x="10777" fg:w="10"/><text x="14.2439%" y="1919.50"></text></g><g><title>__sysconf (10 samples, 0.01%)</title><rect x="13.9939%" y="1893" width="0.0130%" height="15" fill="rgb(205,126,30)" fg:x="10777" fg:w="10"/><text x="14.2439%" y="1903.50"></text></g><g><title>[libc.so.6] (10,404 samples, 13.51%)</title><rect x="0.4986%" y="2021" width="13.5096%" height="15" fill="rgb(230,176,12)" fg:x="384" fg:w="10404"/><text x="0.7486%" y="2031.50">[libc.so.6]</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.01%)</title><rect x="14.0614%" y="1989" width="0.0104%" height="15" fill="rgb(243,19,9)" fg:x="10829" fg:w="8"/><text x="14.3114%" y="1999.50"></text></g><g><title>core::clone::Clone::clone (8 samples, 0.01%)</title><rect x="14.0614%" y="1973" width="0.0104%" height="15" fill="rgb(245,171,17)" fg:x="10829" fg:w="8"/><text x="14.3114%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 0.02%)</title><rect x="14.0614%" y="2005" width="0.0234%" height="15" fill="rgb(227,52,21)" fg:x="10829" fg:w="18"/><text x="14.3114%" y="2015.50"></text></g><g><title>core::clone::Clone::clone (10 samples, 0.01%)</title><rect x="14.0718%" y="1989" width="0.0130%" height="15" fill="rgb(238,69,14)" fg:x="10837" fg:w="10"/><text x="14.3218%" y="1999.50"></text></g><g><title>move_compiler::typing::expand::exp (9 samples, 0.01%)</title><rect x="14.0926%" y="1781" width="0.0117%" height="15" fill="rgb(241,156,39)" fg:x="10853" fg:w="9"/><text x="14.3426%" y="1791.50"></text></g><g><title>move_compiler::typing::expand::function_body_ (10 samples, 0.01%)</title><rect x="14.0926%" y="1829" width="0.0130%" height="15" fill="rgb(212,227,28)" fg:x="10853" fg:w="10"/><text x="14.3426%" y="1839.50"></text></g><g><title>move_compiler::typing::expand::sequence (10 samples, 0.01%)</title><rect x="14.0926%" y="1813" width="0.0130%" height="15" fill="rgb(209,118,27)" fg:x="10853" fg:w="10"/><text x="14.3426%" y="1823.50"></text></g><g><title>move_compiler::typing::expand::sequence_item (10 samples, 0.01%)</title><rect x="14.0926%" y="1797" width="0.0130%" height="15" fill="rgb(226,102,5)" fg:x="10853" fg:w="10"/><text x="14.3426%" y="1807.50"></text></g><g><title>move_compiler::typing::translate::module::{{closure}} (12 samples, 0.02%)</title><rect x="14.0913%" y="1877" width="0.0156%" height="15" fill="rgb(223,34,3)" fg:x="10852" fg:w="12"/><text x="14.3413%" y="1887.50"></text></g><g><title>move_compiler::typing::translate::function (11 samples, 0.01%)</title><rect x="14.0926%" y="1861" width="0.0143%" height="15" fill="rgb(221,81,38)" fg:x="10853" fg:w="11"/><text x="14.3426%" y="1871.50"></text></g><g><title>move_compiler::typing::translate::function_body (11 samples, 0.01%)</title><rect x="14.0926%" y="1845" width="0.0143%" height="15" fill="rgb(236,219,28)" fg:x="10853" fg:w="11"/><text x="14.3426%" y="1855.50"></text></g><g><title>move_compiler::typing::translate::function_body (10 samples, 0.01%)</title><rect x="14.1082%" y="1605" width="0.0130%" height="15" fill="rgb(213,200,14)" fg:x="10865" fg:w="10"/><text x="14.3582%" y="1615.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map::{{closure}} (27 samples, 0.04%)</title><rect x="14.0874%" y="1893" width="0.0351%" height="15" fill="rgb(240,33,19)" fg:x="10849" fg:w="27"/><text x="14.3374%" y="1903.50"></text></g><g><title>move_compiler::typing::translate::modules::{{closure}} (12 samples, 0.02%)</title><rect x="14.1069%" y="1877" width="0.0156%" height="15" fill="rgb(233,113,27)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1887.50"></text></g><g><title>move_compiler::typing::translate::module (12 samples, 0.02%)</title><rect x="14.1069%" y="1861" width="0.0156%" height="15" fill="rgb(220,221,18)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1871.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map (12 samples, 0.02%)</title><rect x="14.1069%" y="1845" width="0.0156%" height="15" fill="rgb(238,92,8)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.02%)</title><rect x="14.1069%" y="1829" width="0.0156%" height="15" fill="rgb(222,164,16)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="14.1069%" y="1813" width="0.0156%" height="15" fill="rgb(241,119,3)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.02%)</title><rect x="14.1069%" y="1797" width="0.0156%" height="15" fill="rgb(241,44,8)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="14.1069%" y="1781" width="0.0156%" height="15" fill="rgb(230,36,40)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="14.1069%" y="1765" width="0.0156%" height="15" fill="rgb(243,16,36)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="14.1069%" y="1749" width="0.0156%" height="15" fill="rgb(231,4,26)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="14.1069%" y="1733" width="0.0156%" height="15" fill="rgb(240,9,31)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 0.02%)</title><rect x="14.1069%" y="1717" width="0.0156%" height="15" fill="rgb(207,173,15)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="14.1069%" y="1701" width="0.0156%" height="15" fill="rgb(224,192,53)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.02%)</title><rect x="14.1069%" y="1685" width="0.0156%" height="15" fill="rgb(223,67,28)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1695.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.02%)</title><rect x="14.1069%" y="1669" width="0.0156%" height="15" fill="rgb(211,20,47)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1679.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map::{{closure}} (12 samples, 0.02%)</title><rect x="14.1069%" y="1653" width="0.0156%" height="15" fill="rgb(240,228,2)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1663.50"></text></g><g><title>move_compiler::typing::translate::module::{{closure}} (12 samples, 0.02%)</title><rect x="14.1069%" y="1637" width="0.0156%" height="15" fill="rgb(248,151,12)" fg:x="10864" fg:w="12"/><text x="14.3569%" y="1647.50"></text></g><g><title>move_compiler::typing::translate::function (11 samples, 0.01%)</title><rect x="14.1082%" y="1621" width="0.0143%" height="15" fill="rgb(244,8,39)" fg:x="10865" fg:w="11"/><text x="14.3582%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.04%)</title><rect x="14.0874%" y="1973" width="0.0364%" height="15" fill="rgb(222,26,8)" fg:x="10849" fg:w="28"/><text x="14.3374%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (28 samples, 0.04%)</title><rect x="14.0874%" y="1957" width="0.0364%" height="15" fill="rgb(213,106,44)" fg:x="10849" fg:w="28"/><text x="14.3374%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.04%)</title><rect x="14.0874%" y="1941" width="0.0364%" height="15" fill="rgb(214,129,20)" fg:x="10849" fg:w="28"/><text x="14.3374%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.04%)</title><rect x="14.0874%" y="1925" width="0.0364%" height="15" fill="rgb(212,32,13)" fg:x="10849" fg:w="28"/><text x="14.3374%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (28 samples, 0.04%)</title><rect x="14.0874%" y="1909" width="0.0364%" height="15" fill="rgb(208,168,33)" fg:x="10849" fg:w="28"/><text x="14.3374%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="14.0874%" y="2005" width="0.0390%" height="15" fill="rgb(231,207,8)" fg:x="10849" fg:w="30"/><text x="14.3374%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="14.0874%" y="1989" width="0.0390%" height="15" fill="rgb(235,219,23)" fg:x="10849" fg:w="30"/><text x="14.3374%" y="1999.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (215 samples, 0.28%)</title><rect x="14.1497%" y="1477" width="0.2792%" height="15" fill="rgb(226,216,26)" fg:x="10897" fg:w="215"/><text x="14.3997%" y="1487.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (214 samples, 0.28%)</title><rect x="14.1510%" y="1461" width="0.2779%" height="15" fill="rgb(239,137,16)" fg:x="10898" fg:w="214"/><text x="14.4010%" y="1471.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (214 samples, 0.28%)</title><rect x="14.1510%" y="1445" width="0.2779%" height="15" fill="rgb(207,12,36)" fg:x="10898" fg:w="214"/><text x="14.4010%" y="1455.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (213 samples, 0.28%)</title><rect x="14.1523%" y="1429" width="0.2766%" height="15" fill="rgb(210,214,24)" fg:x="10899" fg:w="213"/><text x="14.4023%" y="1439.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (41 samples, 0.05%)</title><rect x="14.3757%" y="1413" width="0.0532%" height="15" fill="rgb(206,56,30)" fg:x="11071" fg:w="41"/><text x="14.6257%" y="1423.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (231 samples, 0.30%)</title><rect x="14.1303%" y="1525" width="0.3000%" height="15" fill="rgb(228,143,26)" fg:x="10882" fg:w="231"/><text x="14.3803%" y="1535.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (226 samples, 0.29%)</title><rect x="14.1368%" y="1509" width="0.2935%" height="15" fill="rgb(216,218,46)" fg:x="10887" fg:w="226"/><text x="14.3868%" y="1519.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (225 samples, 0.29%)</title><rect x="14.1381%" y="1493" width="0.2922%" height="15" fill="rgb(206,6,19)" fg:x="10888" fg:w="225"/><text x="14.3881%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (234 samples, 0.30%)</title><rect x="14.1277%" y="1557" width="0.3038%" height="15" fill="rgb(239,177,51)" fg:x="10880" fg:w="234"/><text x="14.3777%" y="1567.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (234 samples, 0.30%)</title><rect x="14.1277%" y="1541" width="0.3038%" height="15" fill="rgb(216,55,25)" fg:x="10880" fg:w="234"/><text x="14.3777%" y="1551.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (242 samples, 0.31%)</title><rect x="14.1277%" y="1797" width="0.3142%" height="15" fill="rgb(231,163,29)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (242 samples, 0.31%)</title><rect x="14.1277%" y="1781" width="0.3142%" height="15" fill="rgb(232,149,50)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1791.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (242 samples, 0.31%)</title><rect x="14.1277%" y="1765" width="0.3142%" height="15" fill="rgb(223,142,48)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (242 samples, 0.31%)</title><rect x="14.1277%" y="1749" width="0.3142%" height="15" fill="rgb(245,83,23)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (242 samples, 0.31%)</title><rect x="14.1277%" y="1733" width="0.3142%" height="15" fill="rgb(224,63,2)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1743.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (242 samples, 0.31%)</title><rect x="14.1277%" y="1717" width="0.3142%" height="15" fill="rgb(218,65,53)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (242 samples, 0.31%)</title><rect x="14.1277%" y="1701" width="0.3142%" height="15" fill="rgb(221,84,29)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1711.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (242 samples, 0.31%)</title><rect x="14.1277%" y="1685" width="0.3142%" height="15" fill="rgb(234,0,32)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1695.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (242 samples, 0.31%)</title><rect x="14.1277%" y="1669" width="0.3142%" height="15" fill="rgb(206,20,16)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1679.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (242 samples, 0.31%)</title><rect x="14.1277%" y="1653" width="0.3142%" height="15" fill="rgb(244,172,18)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1663.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (242 samples, 0.31%)</title><rect x="14.1277%" y="1637" width="0.3142%" height="15" fill="rgb(254,133,1)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (242 samples, 0.31%)</title><rect x="14.1277%" y="1621" width="0.3142%" height="15" fill="rgb(222,206,41)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (242 samples, 0.31%)</title><rect x="14.1277%" y="1605" width="0.3142%" height="15" fill="rgb(212,3,42)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1615.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (242 samples, 0.31%)</title><rect x="14.1277%" y="1589" width="0.3142%" height="15" fill="rgb(241,11,4)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (242 samples, 0.31%)</title><rect x="14.1277%" y="1573" width="0.3142%" height="15" fill="rgb(205,19,26)" fg:x="10880" fg:w="242"/><text x="14.3777%" y="1583.50"></text></g><g><title>bcs::ser::serialize_into (8 samples, 0.01%)</title><rect x="14.4315%" y="1557" width="0.0104%" height="15" fill="rgb(210,179,32)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.01%)</title><rect x="14.4315%" y="1541" width="0.0104%" height="15" fill="rgb(227,116,49)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1551.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (8 samples, 0.01%)</title><rect x="14.4315%" y="1525" width="0.0104%" height="15" fill="rgb(211,146,6)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="14.4315%" y="1509" width="0.0104%" height="15" fill="rgb(219,44,39)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="14.4315%" y="1493" width="0.0104%" height="15" fill="rgb(234,128,11)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1503.50"></text></g><g><title>serde_bytes::serialize (8 samples, 0.01%)</title><rect x="14.4315%" y="1477" width="0.0104%" height="15" fill="rgb(220,183,53)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="14.4315%" y="1461" width="0.0104%" height="15" fill="rgb(213,219,32)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (8 samples, 0.01%)</title><rect x="14.4315%" y="1445" width="0.0104%" height="15" fill="rgb(232,156,16)" fg:x="11114" fg:w="8"/><text x="14.6815%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (219 samples, 0.28%)</title><rect x="14.4536%" y="1477" width="0.2844%" height="15" fill="rgb(246,135,34)" fg:x="11131" fg:w="219"/><text x="14.7036%" y="1487.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (219 samples, 0.28%)</title><rect x="14.4536%" y="1461" width="0.2844%" height="15" fill="rgb(241,99,0)" fg:x="11131" fg:w="219"/><text x="14.7036%" y="1471.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (219 samples, 0.28%)</title><rect x="14.4536%" y="1445" width="0.2844%" height="15" fill="rgb(222,103,45)" fg:x="11131" fg:w="219"/><text x="14.7036%" y="1455.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (218 samples, 0.28%)</title><rect x="14.4549%" y="1429" width="0.2831%" height="15" fill="rgb(212,57,4)" fg:x="11132" fg:w="218"/><text x="14.7049%" y="1439.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (39 samples, 0.05%)</title><rect x="14.6873%" y="1413" width="0.0506%" height="15" fill="rgb(215,68,47)" fg:x="11311" fg:w="39"/><text x="14.9373%" y="1423.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (230 samples, 0.30%)</title><rect x="14.4419%" y="1525" width="0.2987%" height="15" fill="rgb(230,84,2)" fg:x="11122" fg:w="230"/><text x="14.6919%" y="1535.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (228 samples, 0.30%)</title><rect x="14.4445%" y="1509" width="0.2961%" height="15" fill="rgb(220,102,14)" fg:x="11124" fg:w="228"/><text x="14.6945%" y="1519.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (228 samples, 0.30%)</title><rect x="14.4445%" y="1493" width="0.2961%" height="15" fill="rgb(240,10,32)" fg:x="11124" fg:w="228"/><text x="14.6945%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (232 samples, 0.30%)</title><rect x="14.4419%" y="1557" width="0.3013%" height="15" fill="rgb(215,47,27)" fg:x="11122" fg:w="232"/><text x="14.6919%" y="1567.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (232 samples, 0.30%)</title><rect x="14.4419%" y="1541" width="0.3013%" height="15" fill="rgb(233,188,43)" fg:x="11122" fg:w="232"/><text x="14.6919%" y="1551.50"></text></g><g><title>tiny_keccak::Buffer::xorin (15 samples, 0.02%)</title><rect x="14.7522%" y="1381" width="0.0195%" height="15" fill="rgb(253,190,1)" fg:x="11361" fg:w="15"/><text x="15.0022%" y="1391.50"></text></g><g><title>tiny_keccak::Buffer::execute (15 samples, 0.02%)</title><rect x="14.7522%" y="1365" width="0.0195%" height="15" fill="rgb(206,114,52)" fg:x="11361" fg:w="15"/><text x="15.0022%" y="1375.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (15 samples, 0.02%)</title><rect x="14.7522%" y="1349" width="0.0195%" height="15" fill="rgb(233,120,37)" fg:x="11361" fg:w="15"/><text x="15.0022%" y="1359.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.01%)</title><rect x="14.7613%" y="1333" width="0.0104%" height="15" fill="rgb(214,52,39)" fg:x="11368" fg:w="8"/><text x="15.0113%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.01%)</title><rect x="14.7613%" y="1317" width="0.0104%" height="15" fill="rgb(223,80,29)" fg:x="11368" fg:w="8"/><text x="15.0113%" y="1327.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (497 samples, 0.65%)</title><rect x="14.4419%" y="1749" width="0.6454%" height="15" fill="rgb(230,101,40)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (497 samples, 0.65%)</title><rect x="14.4419%" y="1733" width="0.6454%" height="15" fill="rgb(219,211,8)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1743.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (497 samples, 0.65%)</title><rect x="14.4419%" y="1717" width="0.6454%" height="15" fill="rgb(252,126,28)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (497 samples, 0.65%)</title><rect x="14.4419%" y="1701" width="0.6454%" height="15" fill="rgb(215,56,38)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1711.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (497 samples, 0.65%)</title><rect x="14.4419%" y="1685" width="0.6454%" height="15" fill="rgb(249,55,44)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1695.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (497 samples, 0.65%)</title><rect x="14.4419%" y="1669" width="0.6454%" height="15" fill="rgb(220,221,32)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1679.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (497 samples, 0.65%)</title><rect x="14.4419%" y="1653" width="0.6454%" height="15" fill="rgb(212,216,41)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1663.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (497 samples, 0.65%)</title><rect x="14.4419%" y="1637" width="0.6454%" height="15" fill="rgb(228,213,43)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (497 samples, 0.65%)</title><rect x="14.4419%" y="1621" width="0.6454%" height="15" fill="rgb(211,31,26)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (497 samples, 0.65%)</title><rect x="14.4419%" y="1605" width="0.6454%" height="15" fill="rgb(229,202,19)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1615.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (497 samples, 0.65%)</title><rect x="14.4419%" y="1589" width="0.6454%" height="15" fill="rgb(229,105,46)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (497 samples, 0.65%)</title><rect x="14.4419%" y="1573" width="0.6454%" height="15" fill="rgb(235,108,1)" fg:x="11122" fg:w="497"/><text x="14.6919%" y="1583.50"></text></g><g><title>bcs::ser::serialize_into (265 samples, 0.34%)</title><rect x="14.7432%" y="1557" width="0.3441%" height="15" fill="rgb(245,111,35)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (265 samples, 0.34%)</title><rect x="14.7432%" y="1541" width="0.3441%" height="15" fill="rgb(219,185,31)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1551.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (265 samples, 0.34%)</title><rect x="14.7432%" y="1525" width="0.3441%" height="15" fill="rgb(214,4,43)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (265 samples, 0.34%)</title><rect x="14.7432%" y="1509" width="0.3441%" height="15" fill="rgb(235,227,40)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (265 samples, 0.34%)</title><rect x="14.7432%" y="1493" width="0.3441%" height="15" fill="rgb(230,88,30)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1503.50"></text></g><g><title>serde_bytes::serialize (265 samples, 0.34%)</title><rect x="14.7432%" y="1477" width="0.3441%" height="15" fill="rgb(216,217,1)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (265 samples, 0.34%)</title><rect x="14.7432%" y="1461" width="0.3441%" height="15" fill="rgb(248,139,50)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (265 samples, 0.34%)</title><rect x="14.7432%" y="1445" width="0.3441%" height="15" fill="rgb(233,1,21)" fg:x="11354" fg:w="265"/><text x="14.9932%" y="1455.50"></text></g><g><title>std::io::Write::write_all (263 samples, 0.34%)</title><rect x="14.7458%" y="1429" width="0.3415%" height="15" fill="rgb(215,183,12)" fg:x="11356" fg:w="263"/><text x="14.9958%" y="1439.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (263 samples, 0.34%)</title><rect x="14.7458%" y="1413" width="0.3415%" height="15" fill="rgb(229,104,42)" fg:x="11356" fg:w="263"/><text x="14.9958%" y="1423.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (263 samples, 0.34%)</title><rect x="14.7458%" y="1397" width="0.3415%" height="15" fill="rgb(243,34,48)" fg:x="11356" fg:w="263"/><text x="14.9958%" y="1407.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (243 samples, 0.32%)</title><rect x="14.7717%" y="1381" width="0.3155%" height="15" fill="rgb(239,11,44)" fg:x="11376" fg:w="243"/><text x="15.0217%" y="1391.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (243 samples, 0.32%)</title><rect x="14.7717%" y="1365" width="0.3155%" height="15" fill="rgb(231,98,35)" fg:x="11376" fg:w="243"/><text x="15.0217%" y="1375.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (243 samples, 0.32%)</title><rect x="14.7717%" y="1349" width="0.3155%" height="15" fill="rgb(233,28,25)" fg:x="11376" fg:w="243"/><text x="15.0217%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (42 samples, 0.05%)</title><rect x="15.0327%" y="1333" width="0.0545%" height="15" fill="rgb(234,123,11)" fg:x="11577" fg:w="42"/><text x="15.2827%" y="1343.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="15.1197%" y="1413" width="0.0182%" height="15" fill="rgb(220,69,3)" fg:x="11644" fg:w="14"/><text x="15.3697%" y="1423.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="15.1457%" y="1333" width="0.0169%" height="15" fill="rgb(214,64,36)" fg:x="11664" fg:w="13"/><text x="15.3957%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.06%)</title><rect x="15.1626%" y="1333" width="0.0558%" height="15" fill="rgb(211,138,32)" fg:x="11677" fg:w="43"/><text x="15.4126%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.05%)</title><rect x="15.1639%" y="1317" width="0.0545%" height="15" fill="rgb(213,118,47)" fg:x="11678" fg:w="42"/><text x="15.4139%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.05%)</title><rect x="15.1639%" y="1301" width="0.0545%" height="15" fill="rgb(243,124,49)" fg:x="11678" fg:w="42"/><text x="15.4139%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.05%)</title><rect x="15.1678%" y="1285" width="0.0506%" height="15" fill="rgb(221,30,28)" fg:x="11681" fg:w="39"/><text x="15.4178%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.05%)</title><rect x="15.1678%" y="1269" width="0.0506%" height="15" fill="rgb(246,37,13)" fg:x="11681" fg:w="39"/><text x="15.4178%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.05%)</title><rect x="15.1678%" y="1253" width="0.0506%" height="15" fill="rgb(249,66,14)" fg:x="11681" fg:w="39"/><text x="15.4178%" y="1263.50"></text></g><g><title>malloc (36 samples, 0.05%)</title><rect x="15.1717%" y="1237" width="0.0467%" height="15" fill="rgb(213,166,5)" fg:x="11684" fg:w="36"/><text x="15.4217%" y="1247.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="15.1963%" y="1221" width="0.0221%" height="15" fill="rgb(221,66,24)" fg:x="11703" fg:w="17"/><text x="15.4463%" y="1231.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1701" width="0.1441%" height="15" fill="rgb(210,132,17)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1685" width="0.1441%" height="15" fill="rgb(243,202,5)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (111 samples, 0.14%)</title><rect x="15.0873%" y="1669" width="0.1441%" height="15" fill="rgb(233,70,48)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (111 samples, 0.14%)</title><rect x="15.0873%" y="1653" width="0.1441%" height="15" fill="rgb(238,41,26)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (111 samples, 0.14%)</title><rect x="15.0873%" y="1637" width="0.1441%" height="15" fill="rgb(241,19,31)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1647.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1621" width="0.1441%" height="15" fill="rgb(214,76,10)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1631.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1605" width="0.1441%" height="15" fill="rgb(254,202,22)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1589" width="0.1441%" height="15" fill="rgb(214,72,24)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (111 samples, 0.14%)</title><rect x="15.0873%" y="1573" width="0.1441%" height="15" fill="rgb(221,92,46)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (111 samples, 0.14%)</title><rect x="15.0873%" y="1557" width="0.1441%" height="15" fill="rgb(246,13,50)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (111 samples, 0.14%)</title><rect x="15.0873%" y="1541" width="0.1441%" height="15" fill="rgb(240,165,38)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1551.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1525" width="0.1441%" height="15" fill="rgb(241,24,51)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1535.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1509" width="0.1441%" height="15" fill="rgb(227,51,44)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1493" width="0.1441%" height="15" fill="rgb(231,121,3)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (111 samples, 0.14%)</title><rect x="15.0873%" y="1477" width="0.1441%" height="15" fill="rgb(245,3,41)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (111 samples, 0.14%)</title><rect x="15.0873%" y="1461" width="0.1441%" height="15" fill="rgb(214,13,26)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (111 samples, 0.14%)</title><rect x="15.0873%" y="1445" width="0.1441%" height="15" fill="rgb(252,75,11)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1455.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (111 samples, 0.14%)</title><rect x="15.0873%" y="1429" width="0.1441%" height="15" fill="rgb(218,226,17)" fg:x="11619" fg:w="111"/><text x="15.3373%" y="1439.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (72 samples, 0.09%)</title><rect x="15.1379%" y="1413" width="0.0935%" height="15" fill="rgb(248,89,38)" fg:x="11658" fg:w="72"/><text x="15.3879%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.09%)</title><rect x="15.1418%" y="1397" width="0.0896%" height="15" fill="rgb(237,73,46)" fg:x="11661" fg:w="69"/><text x="15.3918%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (67 samples, 0.09%)</title><rect x="15.1444%" y="1381" width="0.0870%" height="15" fill="rgb(242,78,33)" fg:x="11663" fg:w="67"/><text x="15.3944%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (67 samples, 0.09%)</title><rect x="15.1444%" y="1365" width="0.0870%" height="15" fill="rgb(235,60,3)" fg:x="11663" fg:w="67"/><text x="15.3944%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67 samples, 0.09%)</title><rect x="15.1444%" y="1349" width="0.0870%" height="15" fill="rgb(216,172,19)" fg:x="11663" fg:w="67"/><text x="15.3944%" y="1359.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10 samples, 0.01%)</title><rect x="15.2184%" y="1333" width="0.0130%" height="15" fill="rgb(227,6,42)" fg:x="11720" fg:w="10"/><text x="15.4684%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (113 samples, 0.15%)</title><rect x="15.0873%" y="1749" width="0.1467%" height="15" fill="rgb(223,207,42)" fg:x="11619" fg:w="113"/><text x="15.3373%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (113 samples, 0.15%)</title><rect x="15.0873%" y="1733" width="0.1467%" height="15" fill="rgb(246,138,30)" fg:x="11619" fg:w="113"/><text x="15.3373%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (113 samples, 0.15%)</title><rect x="15.0873%" y="1717" width="0.1467%" height="15" fill="rgb(251,199,47)" fg:x="11619" fg:w="113"/><text x="15.3373%" y="1727.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (889 samples, 1.15%)</title><rect x="14.1277%" y="1973" width="1.1544%" height="15" fill="rgb(228,218,44)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1983.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (889 samples, 1.15%)</title><rect x="14.1277%" y="1957" width="1.1544%" height="15" fill="rgb(220,68,6)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1967.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (889 samples, 1.15%)</title><rect x="14.1277%" y="1941" width="1.1544%" height="15" fill="rgb(240,60,26)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1951.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue (889 samples, 1.15%)</title><rect x="14.1277%" y="1925" width="1.1544%" height="15" fill="rgb(211,200,19)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1935.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (889 samples, 1.15%)</title><rect x="14.1277%" y="1909" width="1.1544%" height="15" fill="rgb(242,145,30)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1919.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (889 samples, 1.15%)</title><rect x="14.1277%" y="1893" width="1.1544%" height="15" fill="rgb(225,64,13)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1903.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (889 samples, 1.15%)</title><rect x="14.1277%" y="1877" width="1.1544%" height="15" fill="rgb(218,103,35)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1887.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (889 samples, 1.15%)</title><rect x="14.1277%" y="1861" width="1.1544%" height="15" fill="rgb(216,93,46)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1871.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (889 samples, 1.15%)</title><rect x="14.1277%" y="1845" width="1.1544%" height="15" fill="rgb(225,159,27)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (889 samples, 1.15%)</title><rect x="14.1277%" y="1829" width="1.1544%" height="15" fill="rgb(225,204,11)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (889 samples, 1.15%)</title><rect x="14.1277%" y="1813" width="1.1544%" height="15" fill="rgb(205,56,4)" fg:x="10880" fg:w="889"/><text x="14.3777%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (647 samples, 0.84%)</title><rect x="14.4419%" y="1797" width="0.8401%" height="15" fill="rgb(206,6,35)" fg:x="11122" fg:w="647"/><text x="14.6919%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (647 samples, 0.84%)</title><rect x="14.4419%" y="1781" width="0.8401%" height="15" fill="rgb(247,73,52)" fg:x="11122" fg:w="647"/><text x="14.6919%" y="1791.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (647 samples, 0.84%)</title><rect x="14.4419%" y="1765" width="0.8401%" height="15" fill="rgb(246,97,4)" fg:x="11122" fg:w="647"/><text x="14.6919%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1749" width="0.0480%" height="15" fill="rgb(212,37,15)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1759.50"></text></g><g><title>bcs::de::from_bytes_seed (37 samples, 0.05%)</title><rect x="15.2340%" y="1733" width="0.0480%" height="15" fill="rgb(208,130,40)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1717" width="0.0480%" height="15" fill="rgb(236,55,29)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1701" width="0.0480%" height="15" fill="rgb(209,156,45)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (37 samples, 0.05%)</title><rect x="15.2340%" y="1685" width="0.0480%" height="15" fill="rgb(249,107,4)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="15.2340%" y="1669" width="0.0480%" height="15" fill="rgb(227,7,13)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1679.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.05%)</title><rect x="15.2340%" y="1653" width="0.0480%" height="15" fill="rgb(250,129,14)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1637" width="0.0480%" height="15" fill="rgb(229,92,13)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1621" width="0.0480%" height="15" fill="rgb(245,98,39)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (37 samples, 0.05%)</title><rect x="15.2340%" y="1605" width="0.0480%" height="15" fill="rgb(234,135,48)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="15.2340%" y="1589" width="0.0480%" height="15" fill="rgb(230,98,28)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1599.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.05%)</title><rect x="15.2340%" y="1573" width="0.0480%" height="15" fill="rgb(223,121,0)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1583.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1557" width="0.0480%" height="15" fill="rgb(234,173,33)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1541" width="0.0480%" height="15" fill="rgb(245,47,8)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1551.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (37 samples, 0.05%)</title><rect x="15.2340%" y="1525" width="0.0480%" height="15" fill="rgb(205,17,20)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1535.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="15.2340%" y="1509" width="0.0480%" height="15" fill="rgb(232,151,16)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1519.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.05%)</title><rect x="15.2340%" y="1493" width="0.0480%" height="15" fill="rgb(208,30,32)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1477" width="0.0480%" height="15" fill="rgb(254,26,3)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1461" width="0.0480%" height="15" fill="rgb(240,177,30)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (37 samples, 0.05%)</title><rect x="15.2340%" y="1445" width="0.0480%" height="15" fill="rgb(248,76,44)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1455.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="15.2340%" y="1429" width="0.0480%" height="15" fill="rgb(241,186,54)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1439.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.05%)</title><rect x="15.2340%" y="1413" width="0.0480%" height="15" fill="rgb(249,171,29)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1397" width="0.0480%" height="15" fill="rgb(237,151,44)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1381" width="0.0480%" height="15" fill="rgb(228,174,30)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1391.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1365" width="0.0480%" height="15" fill="rgb(252,14,37)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (37 samples, 0.05%)</title><rect x="15.2340%" y="1349" width="0.0480%" height="15" fill="rgb(207,111,40)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1359.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (37 samples, 0.05%)</title><rect x="15.2340%" y="1333" width="0.0480%" height="15" fill="rgb(248,171,54)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1343.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1317" width="0.0480%" height="15" fill="rgb(211,127,2)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1327.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (37 samples, 0.05%)</title><rect x="15.2340%" y="1301" width="0.0480%" height="15" fill="rgb(236,87,47)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1311.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="15.2340%" y="1285" width="0.0480%" height="15" fill="rgb(223,190,45)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1295.50"></text></g><g><title>serde::de::SeqAccess::next_element (37 samples, 0.05%)</title><rect x="15.2340%" y="1269" width="0.0480%" height="15" fill="rgb(215,5,16)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1279.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.05%)</title><rect x="15.2340%" y="1253" width="0.0480%" height="15" fill="rgb(252,82,33)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1237" width="0.0480%" height="15" fill="rgb(247,213,44)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (37 samples, 0.05%)</title><rect x="15.2340%" y="1221" width="0.0480%" height="15" fill="rgb(205,196,44)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1231.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (37 samples, 0.05%)</title><rect x="15.2340%" y="1205" width="0.0480%" height="15" fill="rgb(237,96,54)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1215.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (37 samples, 0.05%)</title><rect x="15.2340%" y="1189" width="0.0480%" height="15" fill="rgb(230,113,34)" fg:x="11732" fg:w="37"/><text x="15.4840%" y="1199.50"></text></g><g><title>bcs::de::Deserializer::next (24 samples, 0.03%)</title><rect x="15.2509%" y="1173" width="0.0312%" height="15" fill="rgb(221,224,12)" fg:x="11745" fg:w="24"/><text x="15.5009%" y="1183.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.02%)</title><rect x="15.2574%" y="1157" width="0.0247%" height="15" fill="rgb(219,112,44)" fg:x="11750" fg:w="19"/><text x="15.5074%" y="1167.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.02%)</title><rect x="15.2574%" y="1141" width="0.0247%" height="15" fill="rgb(210,31,13)" fg:x="11750" fg:w="19"/><text x="15.5074%" y="1151.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (19 samples, 0.02%)</title><rect x="15.2574%" y="1125" width="0.0247%" height="15" fill="rgb(230,25,16)" fg:x="11750" fg:w="19"/><text x="15.5074%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (19 samples, 0.02%)</title><rect x="15.2574%" y="1109" width="0.0247%" height="15" fill="rgb(246,108,53)" fg:x="11750" fg:w="19"/><text x="15.5074%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (19 samples, 0.02%)</title><rect x="15.2574%" y="1093" width="0.0247%" height="15" fill="rgb(241,172,50)" fg:x="11750" fg:w="19"/><text x="15.5074%" y="1103.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (19 samples, 0.02%)</title><rect x="15.2574%" y="1077" width="0.0247%" height="15" fill="rgb(235,141,10)" fg:x="11750" fg:w="19"/><text x="15.5074%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (26 samples, 0.03%)</title><rect x="15.3041%" y="1477" width="0.0338%" height="15" fill="rgb(220,174,43)" fg:x="11786" fg:w="26"/><text x="15.5541%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (18 samples, 0.02%)</title><rect x="15.3145%" y="1461" width="0.0234%" height="15" fill="rgb(215,181,40)" fg:x="11794" fg:w="18"/><text x="15.5645%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (17 samples, 0.02%)</title><rect x="15.3158%" y="1445" width="0.0221%" height="15" fill="rgb(230,97,2)" fg:x="11795" fg:w="17"/><text x="15.5658%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (13 samples, 0.02%)</title><rect x="15.3379%" y="1477" width="0.0169%" height="15" fill="rgb(211,25,27)" fg:x="11812" fg:w="13"/><text x="15.5879%" y="1487.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (60 samples, 0.08%)</title><rect x="15.2820%" y="1733" width="0.0779%" height="15" fill="rgb(230,87,26)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1743.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (60 samples, 0.08%)</title><rect x="15.2820%" y="1717" width="0.0779%" height="15" fill="rgb(227,160,17)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1727.50"></text></g><g><title>bcs::de::from_bytes (60 samples, 0.08%)</title><rect x="15.2820%" y="1701" width="0.0779%" height="15" fill="rgb(244,85,34)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1711.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (60 samples, 0.08%)</title><rect x="15.2820%" y="1685" width="0.0779%" height="15" fill="rgb(207,70,0)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (60 samples, 0.08%)</title><rect x="15.2820%" y="1669" width="0.0779%" height="15" fill="rgb(223,129,7)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1679.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (60 samples, 0.08%)</title><rect x="15.2820%" y="1653" width="0.0779%" height="15" fill="rgb(246,105,7)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1663.50"></text></g><g><title>serde::de::SeqAccess::next_element (60 samples, 0.08%)</title><rect x="15.2820%" y="1637" width="0.0779%" height="15" fill="rgb(215,154,42)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1647.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (60 samples, 0.08%)</title><rect x="15.2820%" y="1621" width="0.0779%" height="15" fill="rgb(220,215,30)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1631.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (60 samples, 0.08%)</title><rect x="15.2820%" y="1605" width="0.0779%" height="15" fill="rgb(228,81,51)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1615.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (60 samples, 0.08%)</title><rect x="15.2820%" y="1589" width="0.0779%" height="15" fill="rgb(247,71,54)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (60 samples, 0.08%)</title><rect x="15.2820%" y="1573" width="0.0779%" height="15" fill="rgb(234,176,34)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1583.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (60 samples, 0.08%)</title><rect x="15.2820%" y="1557" width="0.0779%" height="15" fill="rgb(241,103,54)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (60 samples, 0.08%)</title><rect x="15.2820%" y="1541" width="0.0779%" height="15" fill="rgb(228,22,34)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (60 samples, 0.08%)</title><rect x="15.2820%" y="1525" width="0.0779%" height="15" fill="rgb(241,179,48)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (60 samples, 0.08%)</title><rect x="15.2820%" y="1509" width="0.0779%" height="15" fill="rgb(235,167,37)" fg:x="11769" fg:w="60"/><text x="15.5320%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (44 samples, 0.06%)</title><rect x="15.3028%" y="1493" width="0.0571%" height="15" fill="rgb(213,109,30)" fg:x="11785" fg:w="44"/><text x="15.5528%" y="1503.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (225 samples, 0.29%)</title><rect x="15.3677%" y="1461" width="0.2922%" height="15" fill="rgb(222,172,16)" fg:x="11835" fg:w="225"/><text x="15.6177%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (223 samples, 0.29%)</title><rect x="15.3703%" y="1445" width="0.2896%" height="15" fill="rgb(233,192,5)" fg:x="11837" fg:w="223"/><text x="15.6203%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (223 samples, 0.29%)</title><rect x="15.3703%" y="1429" width="0.2896%" height="15" fill="rgb(247,189,41)" fg:x="11837" fg:w="223"/><text x="15.6203%" y="1439.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (222 samples, 0.29%)</title><rect x="15.3716%" y="1413" width="0.2883%" height="15" fill="rgb(218,134,47)" fg:x="11838" fg:w="222"/><text x="15.6216%" y="1423.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (222 samples, 0.29%)</title><rect x="15.3716%" y="1397" width="0.2883%" height="15" fill="rgb(216,29,3)" fg:x="11838" fg:w="222"/><text x="15.6216%" y="1407.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (222 samples, 0.29%)</title><rect x="15.3716%" y="1381" width="0.2883%" height="15" fill="rgb(246,140,12)" fg:x="11838" fg:w="222"/><text x="15.6216%" y="1391.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (220 samples, 0.29%)</title><rect x="15.3742%" y="1365" width="0.2857%" height="15" fill="rgb(230,136,11)" fg:x="11840" fg:w="220"/><text x="15.6242%" y="1375.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (36 samples, 0.05%)</title><rect x="15.6132%" y="1349" width="0.0467%" height="15" fill="rgb(247,22,47)" fg:x="12024" fg:w="36"/><text x="15.8632%" y="1359.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (231 samples, 0.30%)</title><rect x="15.3612%" y="1493" width="0.3000%" height="15" fill="rgb(218,84,22)" fg:x="11830" fg:w="231"/><text x="15.6112%" y="1503.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (230 samples, 0.30%)</title><rect x="15.3625%" y="1477" width="0.2987%" height="15" fill="rgb(216,87,39)" fg:x="11831" fg:w="230"/><text x="15.6125%" y="1487.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (10 samples, 0.01%)</title><rect x="15.6664%" y="1365" width="0.0130%" height="15" fill="rgb(221,178,8)" fg:x="12065" fg:w="10"/><text x="15.9164%" y="1375.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (10 samples, 0.01%)</title><rect x="15.6664%" y="1349" width="0.0130%" height="15" fill="rgb(230,42,11)" fg:x="12065" fg:w="10"/><text x="15.9164%" y="1359.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.01%)</title><rect x="15.6664%" y="1333" width="0.0130%" height="15" fill="rgb(237,229,4)" fg:x="12065" fg:w="10"/><text x="15.9164%" y="1343.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (10 samples, 0.01%)</title><rect x="15.6664%" y="1317" width="0.0130%" height="15" fill="rgb(222,31,33)" fg:x="12065" fg:w="10"/><text x="15.9164%" y="1327.50"></text></g><g><title>tiny_keccak::Buffer::xorin (14 samples, 0.02%)</title><rect x="15.6833%" y="1317" width="0.0182%" height="15" fill="rgb(210,17,39)" fg:x="12078" fg:w="14"/><text x="15.9333%" y="1327.50"></text></g><g><title>tiny_keccak::Buffer::execute (14 samples, 0.02%)</title><rect x="15.6833%" y="1301" width="0.0182%" height="15" fill="rgb(244,93,20)" fg:x="12078" fg:w="14"/><text x="15.9333%" y="1311.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (13 samples, 0.02%)</title><rect x="15.6846%" y="1285" width="0.0169%" height="15" fill="rgb(210,40,47)" fg:x="12079" fg:w="13"/><text x="15.9346%" y="1295.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.01%)</title><rect x="15.6898%" y="1269" width="0.0117%" height="15" fill="rgb(239,211,47)" fg:x="12083" fg:w="9"/><text x="15.9398%" y="1279.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.01%)</title><rect x="15.6898%" y="1253" width="0.0117%" height="15" fill="rgb(251,223,49)" fg:x="12083" fg:w="9"/><text x="15.9398%" y="1263.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (156 samples, 0.20%)</title><rect x="15.6638%" y="1429" width="0.2026%" height="15" fill="rgb(221,149,5)" fg:x="12063" fg:w="156"/><text x="15.9138%" y="1439.50"></text></g><g><title>serde_bytes::serialize (156 samples, 0.20%)</title><rect x="15.6638%" y="1413" width="0.2026%" height="15" fill="rgb(219,224,51)" fg:x="12063" fg:w="156"/><text x="15.9138%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (156 samples, 0.20%)</title><rect x="15.6638%" y="1397" width="0.2026%" height="15" fill="rgb(223,7,8)" fg:x="12063" fg:w="156"/><text x="15.9138%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (156 samples, 0.20%)</title><rect x="15.6638%" y="1381" width="0.2026%" height="15" fill="rgb(241,217,22)" fg:x="12063" fg:w="156"/><text x="15.9138%" y="1391.50"></text></g><g><title>std::io::Write::write_all (144 samples, 0.19%)</title><rect x="15.6794%" y="1365" width="0.1870%" height="15" fill="rgb(248,209,0)" fg:x="12075" fg:w="144"/><text x="15.9294%" y="1375.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (144 samples, 0.19%)</title><rect x="15.6794%" y="1349" width="0.1870%" height="15" fill="rgb(217,205,4)" fg:x="12075" fg:w="144"/><text x="15.9294%" y="1359.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (144 samples, 0.19%)</title><rect x="15.6794%" y="1333" width="0.1870%" height="15" fill="rgb(228,124,39)" fg:x="12075" fg:w="144"/><text x="15.9294%" y="1343.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (127 samples, 0.16%)</title><rect x="15.7014%" y="1317" width="0.1649%" height="15" fill="rgb(250,116,42)" fg:x="12092" fg:w="127"/><text x="15.9514%" y="1327.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (127 samples, 0.16%)</title><rect x="15.7014%" y="1301" width="0.1649%" height="15" fill="rgb(223,202,9)" fg:x="12092" fg:w="127"/><text x="15.9514%" y="1311.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (127 samples, 0.16%)</title><rect x="15.7014%" y="1285" width="0.1649%" height="15" fill="rgb(242,222,40)" fg:x="12092" fg:w="127"/><text x="15.9514%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.03%)</title><rect x="15.8391%" y="1269" width="0.0273%" height="15" fill="rgb(229,99,46)" fg:x="12198" fg:w="21"/><text x="16.0891%" y="1279.50"></text></g><g><title>bcs::ser::serialize_into (160 samples, 0.21%)</title><rect x="15.6638%" y="1493" width="0.2078%" height="15" fill="rgb(225,56,46)" fg:x="12063" fg:w="160"/><text x="15.9138%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (160 samples, 0.21%)</title><rect x="15.6638%" y="1477" width="0.2078%" height="15" fill="rgb(227,94,5)" fg:x="12063" fg:w="160"/><text x="15.9138%" y="1487.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (160 samples, 0.21%)</title><rect x="15.6638%" y="1461" width="0.2078%" height="15" fill="rgb(205,112,38)" fg:x="12063" fg:w="160"/><text x="15.9138%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (160 samples, 0.21%)</title><rect x="15.6638%" y="1445" width="0.2078%" height="15" fill="rgb(231,133,46)" fg:x="12063" fg:w="160"/><text x="15.9138%" y="1455.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (395 samples, 0.51%)</title><rect x="15.3599%" y="1573" width="0.5129%" height="15" fill="rgb(217,16,9)" fg:x="11829" fg:w="395"/><text x="15.6099%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (395 samples, 0.51%)</title><rect x="15.3599%" y="1557" width="0.5129%" height="15" fill="rgb(249,173,9)" fg:x="11829" fg:w="395"/><text x="15.6099%" y="1567.50"></text></g><g><title>core::ops::function::FnOnce::call_once (395 samples, 0.51%)</title><rect x="15.3599%" y="1541" width="0.5129%" height="15" fill="rgb(205,163,53)" fg:x="11829" fg:w="395"/><text x="15.6099%" y="1551.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (395 samples, 0.51%)</title><rect x="15.3599%" y="1525" width="0.5129%" height="15" fill="rgb(217,54,41)" fg:x="11829" fg:w="395"/><text x="15.6099%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (395 samples, 0.51%)</title><rect x="15.3599%" y="1509" width="0.5129%" height="15" fill="rgb(228,216,12)" fg:x="11829" fg:w="395"/><text x="15.6099%" y="1519.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (8 samples, 0.01%)</title><rect x="15.8729%" y="1509" width="0.0104%" height="15" fill="rgb(244,228,15)" fg:x="12224" fg:w="8"/><text x="16.1229%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="15.8729%" y="1493" width="0.0104%" height="15" fill="rgb(221,176,53)" fg:x="12224" fg:w="8"/><text x="16.1229%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="15.8729%" y="1477" width="0.0104%" height="15" fill="rgb(205,94,34)" fg:x="12224" fg:w="8"/><text x="16.1229%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="15.8729%" y="1461" width="0.0104%" height="15" fill="rgb(213,110,48)" fg:x="12224" fg:w="8"/><text x="16.1229%" y="1471.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="15.8845%" y="1429" width="0.0130%" height="15" fill="rgb(236,142,28)" fg:x="12233" fg:w="10"/><text x="16.1345%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="15.8845%" y="1461" width="0.0156%" height="15" fill="rgb(225,135,29)" fg:x="12233" fg:w="12"/><text x="16.1345%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="15.8845%" y="1445" width="0.0156%" height="15" fill="rgb(252,45,31)" fg:x="12233" fg:w="12"/><text x="16.1345%" y="1455.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.03%)</title><rect x="15.8832%" y="1477" width="0.0325%" height="15" fill="rgb(211,187,50)" fg:x="12232" fg:w="25"/><text x="16.1332%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.01%)</title><rect x="15.9170%" y="1429" width="0.0117%" height="15" fill="rgb(229,109,7)" fg:x="12258" fg:w="9"/><text x="16.1670%" y="1439.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="15.9170%" y="1413" width="0.0117%" height="15" fill="rgb(251,131,51)" fg:x="12258" fg:w="9"/><text x="16.1670%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (9 samples, 0.01%)</title><rect x="15.9170%" y="1397" width="0.0117%" height="15" fill="rgb(251,180,35)" fg:x="12258" fg:w="9"/><text x="16.1670%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.01%)</title><rect x="15.9183%" y="1381" width="0.0104%" height="15" fill="rgb(211,46,32)" fg:x="12259" fg:w="8"/><text x="16.1683%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="15.9183%" y="1365" width="0.0104%" height="15" fill="rgb(248,123,17)" fg:x="12259" fg:w="8"/><text x="16.1683%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (9 samples, 0.01%)</title><rect x="15.9339%" y="1429" width="0.0117%" height="15" fill="rgb(227,141,18)" fg:x="12271" fg:w="9"/><text x="16.1839%" y="1439.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.01%)</title><rect x="15.9339%" y="1413" width="0.0117%" height="15" fill="rgb(216,102,9)" fg:x="12271" fg:w="9"/><text x="16.1839%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="15.9339%" y="1397" width="0.0117%" height="15" fill="rgb(253,47,13)" fg:x="12271" fg:w="9"/><text x="16.1839%" y="1407.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (512 samples, 0.66%)</title><rect x="15.2820%" y="1765" width="0.6648%" height="15" fill="rgb(226,93,23)" fg:x="11769" fg:w="512"/><text x="15.5320%" y="1775.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (512 samples, 0.66%)</title><rect x="15.2820%" y="1749" width="0.6648%" height="15" fill="rgb(247,104,17)" fg:x="11769" fg:w="512"/><text x="15.5320%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (452 samples, 0.59%)</title><rect x="15.3599%" y="1733" width="0.5869%" height="15" fill="rgb(233,203,26)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1743.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (452 samples, 0.59%)</title><rect x="15.3599%" y="1717" width="0.5869%" height="15" fill="rgb(244,98,49)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (452 samples, 0.59%)</title><rect x="15.3599%" y="1701" width="0.5869%" height="15" fill="rgb(235,134,22)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1711.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (452 samples, 0.59%)</title><rect x="15.3599%" y="1685" width="0.5869%" height="15" fill="rgb(221,70,32)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1695.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (452 samples, 0.59%)</title><rect x="15.3599%" y="1669" width="0.5869%" height="15" fill="rgb(238,15,50)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1679.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (452 samples, 0.59%)</title><rect x="15.3599%" y="1653" width="0.5869%" height="15" fill="rgb(215,221,48)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1663.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (452 samples, 0.59%)</title><rect x="15.3599%" y="1637" width="0.5869%" height="15" fill="rgb(236,73,3)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1647.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (452 samples, 0.59%)</title><rect x="15.3599%" y="1621" width="0.5869%" height="15" fill="rgb(250,107,11)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1631.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (452 samples, 0.59%)</title><rect x="15.3599%" y="1605" width="0.5869%" height="15" fill="rgb(242,39,14)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1615.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (452 samples, 0.59%)</title><rect x="15.3599%" y="1589" width="0.5869%" height="15" fill="rgb(248,164,37)" fg:x="11829" fg:w="452"/><text x="15.6099%" y="1599.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (57 samples, 0.07%)</title><rect x="15.8729%" y="1573" width="0.0740%" height="15" fill="rgb(217,60,12)" fg:x="12224" fg:w="57"/><text x="16.1229%" y="1583.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (57 samples, 0.07%)</title><rect x="15.8729%" y="1557" width="0.0740%" height="15" fill="rgb(240,125,29)" fg:x="12224" fg:w="57"/><text x="16.1229%" y="1567.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (57 samples, 0.07%)</title><rect x="15.8729%" y="1541" width="0.0740%" height="15" fill="rgb(208,207,28)" fg:x="12224" fg:w="57"/><text x="16.1229%" y="1551.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (57 samples, 0.07%)</title><rect x="15.8729%" y="1525" width="0.0740%" height="15" fill="rgb(209,159,27)" fg:x="12224" fg:w="57"/><text x="16.1229%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (49 samples, 0.06%)</title><rect x="15.8832%" y="1509" width="0.0636%" height="15" fill="rgb(251,176,53)" fg:x="12232" fg:w="49"/><text x="16.1332%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (49 samples, 0.06%)</title><rect x="15.8832%" y="1493" width="0.0636%" height="15" fill="rgb(211,85,7)" fg:x="12232" fg:w="49"/><text x="16.1332%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (24 samples, 0.03%)</title><rect x="15.9157%" y="1477" width="0.0312%" height="15" fill="rgb(216,64,54)" fg:x="12257" fg:w="24"/><text x="16.1657%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (24 samples, 0.03%)</title><rect x="15.9157%" y="1461" width="0.0312%" height="15" fill="rgb(217,54,24)" fg:x="12257" fg:w="24"/><text x="16.1657%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (24 samples, 0.03%)</title><rect x="15.9157%" y="1445" width="0.0312%" height="15" fill="rgb(208,206,53)" fg:x="12257" fg:w="24"/><text x="16.1657%" y="1455.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="16.0196%" y="1397" width="0.0143%" height="15" fill="rgb(251,74,39)" fg:x="12337" fg:w="11"/><text x="16.2696%" y="1407.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (13 samples, 0.02%)</title><rect x="16.0196%" y="1413" width="0.0169%" height="15" fill="rgb(226,47,5)" fg:x="12337" fg:w="13"/><text x="16.2696%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.05%)</title><rect x="16.0196%" y="1429" width="0.0506%" height="15" fill="rgb(234,111,33)" fg:x="12337" fg:w="39"/><text x="16.2696%" y="1439.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (26 samples, 0.03%)</title><rect x="16.0365%" y="1413" width="0.0338%" height="15" fill="rgb(251,14,10)" fg:x="12350" fg:w="26"/><text x="16.2865%" y="1423.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (26 samples, 0.03%)</title><rect x="16.0365%" y="1397" width="0.0338%" height="15" fill="rgb(232,43,0)" fg:x="12350" fg:w="26"/><text x="16.2865%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="16.0365%" y="1381" width="0.0338%" height="15" fill="rgb(222,68,43)" fg:x="12350" fg:w="26"/><text x="16.2865%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="16.0365%" y="1365" width="0.0338%" height="15" fill="rgb(217,24,23)" fg:x="12350" fg:w="26"/><text x="16.2865%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="16.0365%" y="1349" width="0.0338%" height="15" fill="rgb(229,209,14)" fg:x="12350" fg:w="26"/><text x="16.2865%" y="1359.50"></text></g><g><title>malloc (22 samples, 0.03%)</title><rect x="16.0417%" y="1333" width="0.0286%" height="15" fill="rgb(250,149,48)" fg:x="12354" fg:w="22"/><text x="16.2917%" y="1343.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="16.0456%" y="1317" width="0.0247%" height="15" fill="rgb(210,120,37)" fg:x="12357" fg:w="19"/><text x="16.2956%" y="1327.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="16.0819%" y="1349" width="0.0169%" height="15" fill="rgb(210,21,8)" fg:x="12385" fg:w="13"/><text x="16.3319%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="16.0988%" y="1349" width="0.0130%" height="15" fill="rgb(243,145,7)" fg:x="12398" fg:w="10"/><text x="16.3488%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="16.0988%" y="1333" width="0.0130%" height="15" fill="rgb(238,178,32)" fg:x="12398" fg:w="10"/><text x="16.3488%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.01%)</title><rect x="16.0988%" y="1317" width="0.0130%" height="15" fill="rgb(222,4,10)" fg:x="12398" fg:w="10"/><text x="16.3488%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="16.0988%" y="1301" width="0.0130%" height="15" fill="rgb(239,7,37)" fg:x="12398" fg:w="10"/><text x="16.3488%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="16.0988%" y="1285" width="0.0130%" height="15" fill="rgb(215,31,37)" fg:x="12398" fg:w="10"/><text x="16.3488%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="16.0988%" y="1269" width="0.0130%" height="15" fill="rgb(224,83,33)" fg:x="12398" fg:w="10"/><text x="16.3488%" y="1279.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="16.0988%" y="1253" width="0.0130%" height="15" fill="rgb(239,55,3)" fg:x="12398" fg:w="10"/><text x="16.3488%" y="1263.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (109 samples, 0.14%)</title><rect x="15.9832%" y="1445" width="0.1415%" height="15" fill="rgb(247,92,11)" fg:x="12309" fg:w="109"/><text x="16.2332%" y="1455.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (42 samples, 0.05%)</title><rect x="16.0702%" y="1429" width="0.0545%" height="15" fill="rgb(239,200,7)" fg:x="12376" fg:w="42"/><text x="16.3202%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.05%)</title><rect x="16.0728%" y="1413" width="0.0519%" height="15" fill="rgb(227,115,8)" fg:x="12378" fg:w="40"/><text x="16.3228%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36 samples, 0.05%)</title><rect x="16.0780%" y="1397" width="0.0467%" height="15" fill="rgb(215,189,27)" fg:x="12382" fg:w="36"/><text x="16.3280%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (36 samples, 0.05%)</title><rect x="16.0780%" y="1381" width="0.0467%" height="15" fill="rgb(251,216,39)" fg:x="12382" fg:w="36"/><text x="16.3280%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36 samples, 0.05%)</title><rect x="16.0780%" y="1365" width="0.0467%" height="15" fill="rgb(207,29,47)" fg:x="12382" fg:w="36"/><text x="16.3280%" y="1375.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10 samples, 0.01%)</title><rect x="16.1118%" y="1349" width="0.0130%" height="15" fill="rgb(210,71,34)" fg:x="12408" fg:w="10"/><text x="16.3618%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 0.06%)</title><rect x="16.1248%" y="1445" width="0.0597%" height="15" fill="rgb(253,217,51)" fg:x="12418" fg:w="46"/><text x="16.3748%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.06%)</title><rect x="16.1248%" y="1429" width="0.0597%" height="15" fill="rgb(222,117,46)" fg:x="12418" fg:w="46"/><text x="16.3748%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.06%)</title><rect x="16.1248%" y="1413" width="0.0597%" height="15" fill="rgb(226,132,6)" fg:x="12418" fg:w="46"/><text x="16.3748%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.06%)</title><rect x="16.1274%" y="1397" width="0.0571%" height="15" fill="rgb(254,145,51)" fg:x="12420" fg:w="44"/><text x="16.3774%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.06%)</title><rect x="16.1274%" y="1381" width="0.0571%" height="15" fill="rgb(231,199,27)" fg:x="12420" fg:w="44"/><text x="16.3774%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.06%)</title><rect x="16.1274%" y="1365" width="0.0571%" height="15" fill="rgb(245,158,14)" fg:x="12420" fg:w="44"/><text x="16.3774%" y="1375.50"></text></g><g><title>malloc (41 samples, 0.05%)</title><rect x="16.1313%" y="1349" width="0.0532%" height="15" fill="rgb(240,113,14)" fg:x="12423" fg:w="41"/><text x="16.3813%" y="1359.50"></text></g><g><title>[libc.so.6] (31 samples, 0.04%)</title><rect x="16.1442%" y="1333" width="0.0403%" height="15" fill="rgb(210,20,13)" fg:x="12433" fg:w="31"/><text x="16.3942%" y="1343.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="16.1728%" y="1317" width="0.0117%" height="15" fill="rgb(241,144,13)" fg:x="12455" fg:w="9"/><text x="16.4228%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (190 samples, 0.25%)</title><rect x="15.9469%" y="1765" width="0.2467%" height="15" fill="rgb(235,43,34)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (190 samples, 0.25%)</title><rect x="15.9469%" y="1749" width="0.2467%" height="15" fill="rgb(208,36,20)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (190 samples, 0.25%)</title><rect x="15.9469%" y="1733" width="0.2467%" height="15" fill="rgb(239,204,10)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1743.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (190 samples, 0.25%)</title><rect x="15.9469%" y="1717" width="0.2467%" height="15" fill="rgb(217,84,43)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (190 samples, 0.25%)</title><rect x="15.9469%" y="1701" width="0.2467%" height="15" fill="rgb(241,170,50)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (190 samples, 0.25%)</title><rect x="15.9469%" y="1685" width="0.2467%" height="15" fill="rgb(226,205,29)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (190 samples, 0.25%)</title><rect x="15.9469%" y="1669" width="0.2467%" height="15" fill="rgb(233,113,1)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (190 samples, 0.25%)</title><rect x="15.9469%" y="1653" width="0.2467%" height="15" fill="rgb(253,98,13)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1663.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (190 samples, 0.25%)</title><rect x="15.9469%" y="1637" width="0.2467%" height="15" fill="rgb(211,115,12)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1647.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (190 samples, 0.25%)</title><rect x="15.9469%" y="1621" width="0.2467%" height="15" fill="rgb(208,12,16)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (190 samples, 0.25%)</title><rect x="15.9469%" y="1605" width="0.2467%" height="15" fill="rgb(237,193,54)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (190 samples, 0.25%)</title><rect x="15.9469%" y="1589" width="0.2467%" height="15" fill="rgb(243,22,42)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (190 samples, 0.25%)</title><rect x="15.9469%" y="1573" width="0.2467%" height="15" fill="rgb(233,151,36)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (190 samples, 0.25%)</title><rect x="15.9469%" y="1557" width="0.2467%" height="15" fill="rgb(237,57,45)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1567.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (190 samples, 0.25%)</title><rect x="15.9469%" y="1541" width="0.2467%" height="15" fill="rgb(221,88,17)" fg:x="12281" fg:w="190"/><text x="16.1969%" y="1551.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (169 samples, 0.22%)</title><rect x="15.9741%" y="1525" width="0.2194%" height="15" fill="rgb(230,79,15)" fg:x="12302" fg:w="169"/><text x="16.2241%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (164 samples, 0.21%)</title><rect x="15.9806%" y="1509" width="0.2130%" height="15" fill="rgb(213,57,13)" fg:x="12307" fg:w="164"/><text x="16.2306%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (162 samples, 0.21%)</title><rect x="15.9832%" y="1493" width="0.2104%" height="15" fill="rgb(222,116,39)" fg:x="12309" fg:w="162"/><text x="16.2332%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (162 samples, 0.21%)</title><rect x="15.9832%" y="1477" width="0.2104%" height="15" fill="rgb(245,107,2)" fg:x="12309" fg:w="162"/><text x="16.2332%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (162 samples, 0.21%)</title><rect x="15.9832%" y="1461" width="0.2104%" height="15" fill="rgb(238,1,10)" fg:x="12309" fg:w="162"/><text x="16.2332%" y="1471.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (54 samples, 0.07%)</title><rect x="16.2221%" y="1349" width="0.0701%" height="15" fill="rgb(249,4,48)" fg:x="12493" fg:w="54"/><text x="16.4721%" y="1359.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (47 samples, 0.06%)</title><rect x="16.2312%" y="1333" width="0.0610%" height="15" fill="rgb(223,151,18)" fg:x="12500" fg:w="47"/><text x="16.4812%" y="1343.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (47 samples, 0.06%)</title><rect x="16.2312%" y="1317" width="0.0610%" height="15" fill="rgb(227,65,43)" fg:x="12500" fg:w="47"/><text x="16.4812%" y="1327.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (46 samples, 0.06%)</title><rect x="16.2325%" y="1301" width="0.0597%" height="15" fill="rgb(218,40,45)" fg:x="12501" fg:w="46"/><text x="16.4825%" y="1311.50"></text></g><g><title>serde::de::SeqAccess::next_element (30 samples, 0.04%)</title><rect x="16.2533%" y="1285" width="0.0390%" height="15" fill="rgb(252,121,31)" fg:x="12517" fg:w="30"/><text x="16.5033%" y="1295.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (30 samples, 0.04%)</title><rect x="16.2533%" y="1269" width="0.0390%" height="15" fill="rgb(219,158,43)" fg:x="12517" fg:w="30"/><text x="16.5033%" y="1279.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.04%)</title><rect x="16.2546%" y="1253" width="0.0377%" height="15" fill="rgb(231,162,42)" fg:x="12518" fg:w="29"/><text x="16.5046%" y="1263.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (29 samples, 0.04%)</title><rect x="16.2546%" y="1237" width="0.0377%" height="15" fill="rgb(217,179,25)" fg:x="12518" fg:w="29"/><text x="16.5046%" y="1247.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (29 samples, 0.04%)</title><rect x="16.2546%" y="1221" width="0.0377%" height="15" fill="rgb(206,212,31)" fg:x="12518" fg:w="29"/><text x="16.5046%" y="1231.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (25 samples, 0.03%)</title><rect x="16.2598%" y="1205" width="0.0325%" height="15" fill="rgb(235,144,12)" fg:x="12522" fg:w="25"/><text x="16.5098%" y="1215.50"></text></g><g><title>bcs::de::Deserializer::next (10 samples, 0.01%)</title><rect x="16.2793%" y="1189" width="0.0130%" height="15" fill="rgb(213,51,10)" fg:x="12537" fg:w="10"/><text x="16.5293%" y="1199.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.01%)</title><rect x="16.2806%" y="1173" width="0.0117%" height="15" fill="rgb(231,145,14)" fg:x="12538" fg:w="9"/><text x="16.5306%" y="1183.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.01%)</title><rect x="16.2806%" y="1157" width="0.0117%" height="15" fill="rgb(235,15,28)" fg:x="12538" fg:w="9"/><text x="16.5306%" y="1167.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.01%)</title><rect x="16.2806%" y="1141" width="0.0117%" height="15" fill="rgb(237,206,10)" fg:x="12538" fg:w="9"/><text x="16.5306%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.01%)</title><rect x="16.2806%" y="1125" width="0.0117%" height="15" fill="rgb(236,227,27)" fg:x="12538" fg:w="9"/><text x="16.5306%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.01%)</title><rect x="16.2806%" y="1109" width="0.0117%" height="15" fill="rgb(246,83,35)" fg:x="12538" fg:w="9"/><text x="16.5306%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.01%)</title><rect x="16.2806%" y="1093" width="0.0117%" height="15" fill="rgb(220,136,24)" fg:x="12538" fg:w="9"/><text x="16.5306%" y="1103.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (74 samples, 0.10%)</title><rect x="16.1988%" y="1397" width="0.0961%" height="15" fill="rgb(217,3,25)" fg:x="12475" fg:w="74"/><text x="16.4488%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (60 samples, 0.08%)</title><rect x="16.2170%" y="1381" width="0.0779%" height="15" fill="rgb(239,24,14)" fg:x="12489" fg:w="60"/><text x="16.4670%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (60 samples, 0.08%)</title><rect x="16.2170%" y="1365" width="0.0779%" height="15" fill="rgb(244,16,53)" fg:x="12489" fg:w="60"/><text x="16.4670%" y="1375.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (83 samples, 0.11%)</title><rect x="16.1936%" y="1429" width="0.1078%" height="15" fill="rgb(208,175,44)" fg:x="12471" fg:w="83"/><text x="16.4436%" y="1439.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (83 samples, 0.11%)</title><rect x="16.1936%" y="1413" width="0.1078%" height="15" fill="rgb(252,18,48)" fg:x="12471" fg:w="83"/><text x="16.4436%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.03%)</title><rect x="16.3014%" y="1381" width="0.0312%" height="15" fill="rgb(234,199,32)" fg:x="12554" fg:w="24"/><text x="16.5514%" y="1391.50"></text></g><g><title>malloc (22 samples, 0.03%)</title><rect x="16.3040%" y="1365" width="0.0286%" height="15" fill="rgb(225,77,54)" fg:x="12556" fg:w="22"/><text x="16.5540%" y="1375.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="16.3078%" y="1349" width="0.0247%" height="15" fill="rgb(225,42,25)" fg:x="12559" fg:w="19"/><text x="16.5578%" y="1359.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (810 samples, 1.05%)</title><rect x="15.2820%" y="1813" width="1.0518%" height="15" fill="rgb(242,227,46)" fg:x="11769" fg:w="810"/><text x="15.5320%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (810 samples, 1.05%)</title><rect x="15.2820%" y="1797" width="1.0518%" height="15" fill="rgb(246,197,35)" fg:x="11769" fg:w="810"/><text x="15.5320%" y="1807.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (810 samples, 1.05%)</title><rect x="15.2820%" y="1781" width="1.0518%" height="15" fill="rgb(215,159,26)" fg:x="11769" fg:w="810"/><text x="15.5320%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1765" width="0.1402%" height="15" fill="rgb(212,194,50)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1775.50"></text></g><g><title>bcs::de::from_bytes_seed (108 samples, 0.14%)</title><rect x="16.1936%" y="1749" width="0.1402%" height="15" fill="rgb(246,132,1)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1733" width="0.1402%" height="15" fill="rgb(217,71,7)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1717" width="0.1402%" height="15" fill="rgb(252,59,32)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1727.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (108 samples, 0.14%)</title><rect x="16.1936%" y="1701" width="0.1402%" height="15" fill="rgb(253,204,25)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (108 samples, 0.14%)</title><rect x="16.1936%" y="1685" width="0.1402%" height="15" fill="rgb(232,21,16)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1695.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (108 samples, 0.14%)</title><rect x="16.1936%" y="1669" width="0.1402%" height="15" fill="rgb(248,90,29)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1653" width="0.1402%" height="15" fill="rgb(249,223,7)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1637" width="0.1402%" height="15" fill="rgb(231,119,42)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (108 samples, 0.14%)</title><rect x="16.1936%" y="1621" width="0.1402%" height="15" fill="rgb(215,41,35)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (108 samples, 0.14%)</title><rect x="16.1936%" y="1605" width="0.1402%" height="15" fill="rgb(220,44,45)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (108 samples, 0.14%)</title><rect x="16.1936%" y="1589" width="0.1402%" height="15" fill="rgb(253,197,36)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1573" width="0.1402%" height="15" fill="rgb(245,225,54)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1583.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1557" width="0.1402%" height="15" fill="rgb(239,94,37)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1567.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (108 samples, 0.14%)</title><rect x="16.1936%" y="1541" width="0.1402%" height="15" fill="rgb(242,217,10)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (108 samples, 0.14%)</title><rect x="16.1936%" y="1525" width="0.1402%" height="15" fill="rgb(250,193,7)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1535.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (108 samples, 0.14%)</title><rect x="16.1936%" y="1509" width="0.1402%" height="15" fill="rgb(230,104,19)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1493" width="0.1402%" height="15" fill="rgb(230,181,4)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (108 samples, 0.14%)</title><rect x="16.1936%" y="1477" width="0.1402%" height="15" fill="rgb(216,219,49)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (108 samples, 0.14%)</title><rect x="16.1936%" y="1461" width="0.1402%" height="15" fill="rgb(254,144,0)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (108 samples, 0.14%)</title><rect x="16.1936%" y="1445" width="0.1402%" height="15" fill="rgb(205,209,38)" fg:x="12471" fg:w="108"/><text x="16.4436%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.03%)</title><rect x="16.3014%" y="1429" width="0.0325%" height="15" fill="rgb(240,21,42)" fg:x="12554" fg:w="25"/><text x="16.5514%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.03%)</title><rect x="16.3014%" y="1413" width="0.0325%" height="15" fill="rgb(241,132,3)" fg:x="12554" fg:w="25"/><text x="16.5514%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.03%)</title><rect x="16.3014%" y="1397" width="0.0325%" height="15" fill="rgb(225,14,2)" fg:x="12554" fg:w="25"/><text x="16.5514%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (15 samples, 0.02%)</title><rect x="16.3611%" y="1477" width="0.0195%" height="15" fill="rgb(210,141,35)" fg:x="12600" fg:w="15"/><text x="16.6111%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (9 samples, 0.01%)</title><rect x="16.3689%" y="1461" width="0.0117%" height="15" fill="rgb(251,14,44)" fg:x="12606" fg:w="9"/><text x="16.6189%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.01%)</title><rect x="16.3689%" y="1445" width="0.0117%" height="15" fill="rgb(247,48,18)" fg:x="12606" fg:w="9"/><text x="16.6189%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (45 samples, 0.06%)</title><rect x="16.3338%" y="1509" width="0.0584%" height="15" fill="rgb(225,0,40)" fg:x="12579" fg:w="45"/><text x="16.5838%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (26 samples, 0.03%)</title><rect x="16.3585%" y="1493" width="0.0338%" height="15" fill="rgb(221,31,33)" fg:x="12598" fg:w="26"/><text x="16.6085%" y="1503.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (62 samples, 0.08%)</title><rect x="16.3338%" y="1541" width="0.0805%" height="15" fill="rgb(237,42,40)" fg:x="12579" fg:w="62"/><text x="16.5838%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (62 samples, 0.08%)</title><rect x="16.3338%" y="1525" width="0.0805%" height="15" fill="rgb(233,51,29)" fg:x="12579" fg:w="62"/><text x="16.5838%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (16 samples, 0.02%)</title><rect x="16.3935%" y="1509" width="0.0208%" height="15" fill="rgb(226,58,20)" fg:x="12625" fg:w="16"/><text x="16.6435%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (16 samples, 0.02%)</title><rect x="16.3935%" y="1493" width="0.0208%" height="15" fill="rgb(208,98,7)" fg:x="12625" fg:w="16"/><text x="16.6435%" y="1503.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (16 samples, 0.02%)</title><rect x="16.3935%" y="1477" width="0.0208%" height="15" fill="rgb(228,143,44)" fg:x="12625" fg:w="16"/><text x="16.6435%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (16 samples, 0.02%)</title><rect x="16.3935%" y="1461" width="0.0208%" height="15" fill="rgb(246,55,38)" fg:x="12625" fg:w="16"/><text x="16.6435%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="16.3935%" y="1445" width="0.0208%" height="15" fill="rgb(247,87,16)" fg:x="12625" fg:w="16"/><text x="16.6435%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="16.3935%" y="1429" width="0.0208%" height="15" fill="rgb(234,129,42)" fg:x="12625" fg:w="16"/><text x="16.6435%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="16.3935%" y="1413" width="0.0208%" height="15" fill="rgb(220,82,16)" fg:x="12625" fg:w="16"/><text x="16.6435%" y="1423.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="16.4039%" y="1397" width="0.0104%" height="15" fill="rgb(211,88,4)" fg:x="12633" fg:w="8"/><text x="16.6539%" y="1407.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (10 samples, 0.01%)</title><rect x="16.4182%" y="1349" width="0.0130%" height="15" fill="rgb(248,151,21)" fg:x="12644" fg:w="10"/><text x="16.6682%" y="1359.50"></text></g><g><title>serde::de::SeqAccess::next_element (9 samples, 0.01%)</title><rect x="16.4195%" y="1333" width="0.0117%" height="15" fill="rgb(238,163,6)" fg:x="12645" fg:w="9"/><text x="16.6695%" y="1343.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (9 samples, 0.01%)</title><rect x="16.4195%" y="1317" width="0.0117%" height="15" fill="rgb(209,183,11)" fg:x="12645" fg:w="9"/><text x="16.6695%" y="1327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.01%)</title><rect x="16.4195%" y="1301" width="0.0117%" height="15" fill="rgb(219,37,20)" fg:x="12645" fg:w="9"/><text x="16.6695%" y="1311.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (9 samples, 0.01%)</title><rect x="16.4195%" y="1285" width="0.0117%" height="15" fill="rgb(210,158,4)" fg:x="12645" fg:w="9"/><text x="16.6695%" y="1295.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (9 samples, 0.01%)</title><rect x="16.4195%" y="1269" width="0.0117%" height="15" fill="rgb(221,167,53)" fg:x="12645" fg:w="9"/><text x="16.6695%" y="1279.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (80 samples, 0.10%)</title><rect x="16.3338%" y="1733" width="0.1039%" height="15" fill="rgb(237,151,45)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1743.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (80 samples, 0.10%)</title><rect x="16.3338%" y="1717" width="0.1039%" height="15" fill="rgb(231,39,3)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1727.50"></text></g><g><title>bcs::de::from_bytes (80 samples, 0.10%)</title><rect x="16.3338%" y="1701" width="0.1039%" height="15" fill="rgb(212,167,28)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1711.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (80 samples, 0.10%)</title><rect x="16.3338%" y="1685" width="0.1039%" height="15" fill="rgb(232,178,8)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (80 samples, 0.10%)</title><rect x="16.3338%" y="1669" width="0.1039%" height="15" fill="rgb(225,151,20)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1679.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (80 samples, 0.10%)</title><rect x="16.3338%" y="1653" width="0.1039%" height="15" fill="rgb(238,3,37)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1663.50"></text></g><g><title>serde::de::SeqAccess::next_element (80 samples, 0.10%)</title><rect x="16.3338%" y="1637" width="0.1039%" height="15" fill="rgb(251,147,42)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1647.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (80 samples, 0.10%)</title><rect x="16.3338%" y="1621" width="0.1039%" height="15" fill="rgb(208,173,10)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1631.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (80 samples, 0.10%)</title><rect x="16.3338%" y="1605" width="0.1039%" height="15" fill="rgb(246,225,4)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1615.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (80 samples, 0.10%)</title><rect x="16.3338%" y="1589" width="0.1039%" height="15" fill="rgb(248,102,6)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (80 samples, 0.10%)</title><rect x="16.3338%" y="1573" width="0.1039%" height="15" fill="rgb(232,6,21)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1583.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (80 samples, 0.10%)</title><rect x="16.3338%" y="1557" width="0.1039%" height="15" fill="rgb(221,179,22)" fg:x="12579" fg:w="80"/><text x="16.5838%" y="1567.50"></text></g><g><title>serde::de::MapAccess::next_entry (18 samples, 0.02%)</title><rect x="16.4143%" y="1541" width="0.0234%" height="15" fill="rgb(252,50,20)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1551.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (18 samples, 0.02%)</title><rect x="16.4143%" y="1525" width="0.0234%" height="15" fill="rgb(222,56,38)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1535.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (18 samples, 0.02%)</title><rect x="16.4143%" y="1509" width="0.0234%" height="15" fill="rgb(206,193,29)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1519.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.02%)</title><rect x="16.4143%" y="1493" width="0.0234%" height="15" fill="rgb(239,192,45)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1503.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (18 samples, 0.02%)</title><rect x="16.4143%" y="1477" width="0.0234%" height="15" fill="rgb(254,18,36)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (18 samples, 0.02%)</title><rect x="16.4143%" y="1461" width="0.0234%" height="15" fill="rgb(221,127,11)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1471.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (18 samples, 0.02%)</title><rect x="16.4143%" y="1445" width="0.0234%" height="15" fill="rgb(234,146,35)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1455.50"></text></g><g><title>serde::de::SeqAccess::next_element (18 samples, 0.02%)</title><rect x="16.4143%" y="1429" width="0.0234%" height="15" fill="rgb(254,201,37)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1439.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (18 samples, 0.02%)</title><rect x="16.4143%" y="1413" width="0.0234%" height="15" fill="rgb(211,202,23)" fg:x="12641" fg:w="18"/><text x="16.6643%" y="1423.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 0.02%)</title><rect x="16.4156%" y="1397" width="0.0221%" height="15" fill="rgb(237,91,2)" fg:x="12642" fg:w="17"/><text x="16.6656%" y="1407.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize (17 samples, 0.02%)</title><rect x="16.4156%" y="1381" width="0.0221%" height="15" fill="rgb(226,228,36)" fg:x="12642" fg:w="17"/><text x="16.6656%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (17 samples, 0.02%)</title><rect x="16.4156%" y="1365" width="0.0221%" height="15" fill="rgb(213,63,50)" fg:x="12642" fg:w="17"/><text x="16.6656%" y="1375.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (239 samples, 0.31%)</title><rect x="16.4650%" y="1413" width="0.3103%" height="15" fill="rgb(235,194,19)" fg:x="12680" fg:w="239"/><text x="16.7150%" y="1423.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (239 samples, 0.31%)</title><rect x="16.4650%" y="1397" width="0.3103%" height="15" fill="rgb(207,204,18)" fg:x="12680" fg:w="239"/><text x="16.7150%" y="1407.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (239 samples, 0.31%)</title><rect x="16.4650%" y="1381" width="0.3103%" height="15" fill="rgb(248,8,7)" fg:x="12680" fg:w="239"/><text x="16.7150%" y="1391.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (238 samples, 0.31%)</title><rect x="16.4663%" y="1365" width="0.3090%" height="15" fill="rgb(223,145,47)" fg:x="12681" fg:w="238"/><text x="16.7163%" y="1375.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43 samples, 0.06%)</title><rect x="16.7195%" y="1349" width="0.0558%" height="15" fill="rgb(228,84,11)" fg:x="12876" fg:w="43"/><text x="16.9695%" y="1359.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (251 samples, 0.33%)</title><rect x="16.4533%" y="1461" width="0.3259%" height="15" fill="rgb(218,76,45)" fg:x="12671" fg:w="251"/><text x="16.7033%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (248 samples, 0.32%)</title><rect x="16.4572%" y="1445" width="0.3220%" height="15" fill="rgb(223,80,15)" fg:x="12674" fg:w="248"/><text x="16.7072%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (248 samples, 0.32%)</title><rect x="16.4572%" y="1429" width="0.3220%" height="15" fill="rgb(219,218,33)" fg:x="12674" fg:w="248"/><text x="16.7072%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (263 samples, 0.34%)</title><rect x="16.4403%" y="1493" width="0.3415%" height="15" fill="rgb(208,51,11)" fg:x="12661" fg:w="263"/><text x="16.6903%" y="1503.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (259 samples, 0.34%)</title><rect x="16.4455%" y="1477" width="0.3363%" height="15" fill="rgb(229,165,39)" fg:x="12665" fg:w="259"/><text x="16.6955%" y="1487.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (8 samples, 0.01%)</title><rect x="16.7922%" y="1365" width="0.0104%" height="15" fill="rgb(241,100,24)" fg:x="12932" fg:w="8"/><text x="17.0422%" y="1375.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (8 samples, 0.01%)</title><rect x="16.7922%" y="1349" width="0.0104%" height="15" fill="rgb(228,14,23)" fg:x="12932" fg:w="8"/><text x="17.0422%" y="1359.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.01%)</title><rect x="16.7922%" y="1333" width="0.0104%" height="15" fill="rgb(247,116,52)" fg:x="12932" fg:w="8"/><text x="17.0422%" y="1343.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (8 samples, 0.01%)</title><rect x="16.7922%" y="1317" width="0.0104%" height="15" fill="rgb(216,149,33)" fg:x="12932" fg:w="8"/><text x="17.0422%" y="1327.50"></text></g><g><title>tiny_keccak::Buffer::xorin (11 samples, 0.01%)</title><rect x="16.8026%" y="1317" width="0.0143%" height="15" fill="rgb(238,142,29)" fg:x="12940" fg:w="11"/><text x="17.0526%" y="1327.50"></text></g><g><title>tiny_keccak::Buffer::execute (11 samples, 0.01%)</title><rect x="16.8026%" y="1301" width="0.0143%" height="15" fill="rgb(224,83,40)" fg:x="12940" fg:w="11"/><text x="17.0526%" y="1311.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (11 samples, 0.01%)</title><rect x="16.8026%" y="1285" width="0.0143%" height="15" fill="rgb(234,165,11)" fg:x="12940" fg:w="11"/><text x="17.0526%" y="1295.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (151 samples, 0.20%)</title><rect x="16.7883%" y="1429" width="0.1961%" height="15" fill="rgb(215,96,23)" fg:x="12929" fg:w="151"/><text x="17.0383%" y="1439.50"></text></g><g><title>serde_bytes::serialize (151 samples, 0.20%)</title><rect x="16.7883%" y="1413" width="0.1961%" height="15" fill="rgb(233,179,26)" fg:x="12929" fg:w="151"/><text x="17.0383%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (151 samples, 0.20%)</title><rect x="16.7883%" y="1397" width="0.1961%" height="15" fill="rgb(225,129,33)" fg:x="12929" fg:w="151"/><text x="17.0383%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (151 samples, 0.20%)</title><rect x="16.7883%" y="1381" width="0.1961%" height="15" fill="rgb(237,49,13)" fg:x="12929" fg:w="151"/><text x="17.0383%" y="1391.50"></text></g><g><title>std::io::Write::write_all (140 samples, 0.18%)</title><rect x="16.8026%" y="1365" width="0.1818%" height="15" fill="rgb(211,3,31)" fg:x="12940" fg:w="140"/><text x="17.0526%" y="1375.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (140 samples, 0.18%)</title><rect x="16.8026%" y="1349" width="0.1818%" height="15" fill="rgb(216,152,19)" fg:x="12940" fg:w="140"/><text x="17.0526%" y="1359.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (140 samples, 0.18%)</title><rect x="16.8026%" y="1333" width="0.1818%" height="15" fill="rgb(251,121,35)" fg:x="12940" fg:w="140"/><text x="17.0526%" y="1343.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (129 samples, 0.17%)</title><rect x="16.8169%" y="1317" width="0.1675%" height="15" fill="rgb(210,217,47)" fg:x="12951" fg:w="129"/><text x="17.0669%" y="1327.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (129 samples, 0.17%)</title><rect x="16.8169%" y="1301" width="0.1675%" height="15" fill="rgb(244,116,22)" fg:x="12951" fg:w="129"/><text x="17.0669%" y="1311.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (128 samples, 0.17%)</title><rect x="16.8182%" y="1285" width="0.1662%" height="15" fill="rgb(228,17,21)" fg:x="12952" fg:w="128"/><text x="17.0682%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.02%)</title><rect x="16.9623%" y="1269" width="0.0221%" height="15" fill="rgb(240,149,34)" fg:x="13063" fg:w="17"/><text x="17.2123%" y="1279.50"></text></g><g><title>bcs::ser::serialize_into (153 samples, 0.20%)</title><rect x="16.7883%" y="1493" width="0.1987%" height="15" fill="rgb(208,125,47)" fg:x="12929" fg:w="153"/><text x="17.0383%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (153 samples, 0.20%)</title><rect x="16.7883%" y="1477" width="0.1987%" height="15" fill="rgb(249,186,39)" fg:x="12929" fg:w="153"/><text x="17.0383%" y="1487.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (153 samples, 0.20%)</title><rect x="16.7883%" y="1461" width="0.1987%" height="15" fill="rgb(240,220,33)" fg:x="12929" fg:w="153"/><text x="17.0383%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (153 samples, 0.20%)</title><rect x="16.7883%" y="1445" width="0.1987%" height="15" fill="rgb(243,110,23)" fg:x="12929" fg:w="153"/><text x="17.0383%" y="1455.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (424 samples, 0.55%)</title><rect x="16.4377%" y="1573" width="0.5506%" height="15" fill="rgb(219,163,46)" fg:x="12659" fg:w="424"/><text x="16.6877%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (424 samples, 0.55%)</title><rect x="16.4377%" y="1557" width="0.5506%" height="15" fill="rgb(216,126,30)" fg:x="12659" fg:w="424"/><text x="16.6877%" y="1567.50"></text></g><g><title>core::ops::function::FnOnce::call_once (424 samples, 0.55%)</title><rect x="16.4377%" y="1541" width="0.5506%" height="15" fill="rgb(208,139,11)" fg:x="12659" fg:w="424"/><text x="16.6877%" y="1551.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (424 samples, 0.55%)</title><rect x="16.4377%" y="1525" width="0.5506%" height="15" fill="rgb(213,118,36)" fg:x="12659" fg:w="424"/><text x="16.6877%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (424 samples, 0.55%)</title><rect x="16.4377%" y="1509" width="0.5506%" height="15" fill="rgb(226,43,17)" fg:x="12659" fg:w="424"/><text x="16.6877%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="16.9896%" y="1429" width="0.0247%" height="15" fill="rgb(254,217,4)" fg:x="13084" fg:w="19"/><text x="17.2396%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (19 samples, 0.02%)</title><rect x="16.9896%" y="1413" width="0.0247%" height="15" fill="rgb(210,134,47)" fg:x="13084" fg:w="19"/><text x="17.2396%" y="1423.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (19 samples, 0.02%)</title><rect x="16.9896%" y="1397" width="0.0247%" height="15" fill="rgb(237,24,49)" fg:x="13084" fg:w="19"/><text x="17.2396%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.02%)</title><rect x="16.9896%" y="1381" width="0.0247%" height="15" fill="rgb(251,39,46)" fg:x="13084" fg:w="19"/><text x="17.2396%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="16.9896%" y="1365" width="0.0247%" height="15" fill="rgb(251,220,3)" fg:x="13084" fg:w="19"/><text x="17.2396%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="16.9974%" y="1349" width="0.0169%" height="15" fill="rgb(228,105,12)" fg:x="13090" fg:w="13"/><text x="17.2474%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="16.9974%" y="1333" width="0.0169%" height="15" fill="rgb(215,196,1)" fg:x="13090" fg:w="13"/><text x="17.2474%" y="1343.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (31 samples, 0.04%)</title><rect x="16.9896%" y="1445" width="0.0403%" height="15" fill="rgb(214,33,39)" fg:x="13084" fg:w="31"/><text x="17.2396%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="17.0142%" y="1429" width="0.0156%" height="15" fill="rgb(220,19,52)" fg:x="13103" fg:w="12"/><text x="17.2642%" y="1439.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.02%)</title><rect x="17.0142%" y="1413" width="0.0156%" height="15" fill="rgb(221,78,38)" fg:x="13103" fg:w="12"/><text x="17.2642%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.02%)</title><rect x="17.0142%" y="1397" width="0.0156%" height="15" fill="rgb(253,30,16)" fg:x="13103" fg:w="12"/><text x="17.2642%" y="1407.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (38 samples, 0.05%)</title><rect x="16.9883%" y="1509" width="0.0493%" height="15" fill="rgb(242,65,0)" fg:x="13083" fg:w="38"/><text x="17.2383%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (38 samples, 0.05%)</title><rect x="16.9883%" y="1493" width="0.0493%" height="15" fill="rgb(235,201,12)" fg:x="13083" fg:w="38"/><text x="17.2383%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (38 samples, 0.05%)</title><rect x="16.9883%" y="1477" width="0.0493%" height="15" fill="rgb(233,161,9)" fg:x="13083" fg:w="38"/><text x="17.2383%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (38 samples, 0.05%)</title><rect x="16.9883%" y="1461" width="0.0493%" height="15" fill="rgb(241,207,41)" fg:x="13083" fg:w="38"/><text x="17.2383%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="17.0415%" y="1461" width="0.0117%" height="15" fill="rgb(212,69,46)" fg:x="13124" fg:w="9"/><text x="17.2915%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="17.0415%" y="1445" width="0.0117%" height="15" fill="rgb(239,69,45)" fg:x="13124" fg:w="9"/><text x="17.2915%" y="1455.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="17.0415%" y="1429" width="0.0117%" height="15" fill="rgb(242,117,48)" fg:x="13124" fg:w="9"/><text x="17.2915%" y="1439.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="17.0415%" y="1413" width="0.0117%" height="15" fill="rgb(228,41,36)" fg:x="13124" fg:w="9"/><text x="17.2915%" y="1423.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (9 samples, 0.01%)</title><rect x="17.0415%" y="1397" width="0.0117%" height="15" fill="rgb(212,3,32)" fg:x="13124" fg:w="9"/><text x="17.2915%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.01%)</title><rect x="17.0415%" y="1381" width="0.0117%" height="15" fill="rgb(233,41,49)" fg:x="13124" fg:w="9"/><text x="17.2915%" y="1391.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="17.0662%" y="1397" width="0.0117%" height="15" fill="rgb(252,170,49)" fg:x="13143" fg:w="9"/><text x="17.3162%" y="1407.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.04%)</title><rect x="17.0415%" y="1477" width="0.0390%" height="15" fill="rgb(229,53,26)" fg:x="13124" fg:w="30"/><text x="17.2915%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="17.0623%" y="1461" width="0.0182%" height="15" fill="rgb(217,157,12)" fg:x="13140" fg:w="14"/><text x="17.3123%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="17.0623%" y="1445" width="0.0182%" height="15" fill="rgb(227,17,9)" fg:x="13140" fg:w="14"/><text x="17.3123%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="17.0623%" y="1429" width="0.0182%" height="15" fill="rgb(218,84,12)" fg:x="13140" fg:w="14"/><text x="17.3123%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="17.0649%" y="1413" width="0.0156%" height="15" fill="rgb(212,79,24)" fg:x="13142" fg:w="12"/><text x="17.3149%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (13 samples, 0.02%)</title><rect x="17.0882%" y="1429" width="0.0169%" height="15" fill="rgb(217,222,37)" fg:x="13160" fg:w="13"/><text x="17.3382%" y="1439.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.02%)</title><rect x="17.0882%" y="1413" width="0.0169%" height="15" fill="rgb(246,208,8)" fg:x="13160" fg:w="13"/><text x="17.3382%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="17.0882%" y="1397" width="0.0169%" height="15" fill="rgb(244,133,10)" fg:x="13160" fg:w="13"/><text x="17.3382%" y="1407.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (596 samples, 0.77%)</title><rect x="16.3338%" y="1765" width="0.7739%" height="15" fill="rgb(209,219,41)" fg:x="12579" fg:w="596"/><text x="16.5838%" y="1775.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (596 samples, 0.77%)</title><rect x="16.3338%" y="1749" width="0.7739%" height="15" fill="rgb(253,175,45)" fg:x="12579" fg:w="596"/><text x="16.5838%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (516 samples, 0.67%)</title><rect x="16.4377%" y="1733" width="0.6700%" height="15" fill="rgb(235,100,37)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1743.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (516 samples, 0.67%)</title><rect x="16.4377%" y="1717" width="0.6700%" height="15" fill="rgb(225,87,19)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (516 samples, 0.67%)</title><rect x="16.4377%" y="1701" width="0.6700%" height="15" fill="rgb(217,152,17)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1711.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (516 samples, 0.67%)</title><rect x="16.4377%" y="1685" width="0.6700%" height="15" fill="rgb(235,72,13)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1695.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (516 samples, 0.67%)</title><rect x="16.4377%" y="1669" width="0.6700%" height="15" fill="rgb(233,140,18)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1679.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (516 samples, 0.67%)</title><rect x="16.4377%" y="1653" width="0.6700%" height="15" fill="rgb(207,212,28)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1663.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (516 samples, 0.67%)</title><rect x="16.4377%" y="1637" width="0.6700%" height="15" fill="rgb(220,130,25)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1647.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (516 samples, 0.67%)</title><rect x="16.4377%" y="1621" width="0.6700%" height="15" fill="rgb(205,55,34)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1631.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (516 samples, 0.67%)</title><rect x="16.4377%" y="1605" width="0.6700%" height="15" fill="rgb(237,54,35)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1615.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (516 samples, 0.67%)</title><rect x="16.4377%" y="1589" width="0.6700%" height="15" fill="rgb(208,67,23)" fg:x="12659" fg:w="516"/><text x="16.6877%" y="1599.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (92 samples, 0.12%)</title><rect x="16.9883%" y="1573" width="0.1195%" height="15" fill="rgb(206,207,50)" fg:x="13083" fg:w="92"/><text x="17.2383%" y="1583.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (92 samples, 0.12%)</title><rect x="16.9883%" y="1557" width="0.1195%" height="15" fill="rgb(213,211,42)" fg:x="13083" fg:w="92"/><text x="17.2383%" y="1567.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (92 samples, 0.12%)</title><rect x="16.9883%" y="1541" width="0.1195%" height="15" fill="rgb(252,197,50)" fg:x="13083" fg:w="92"/><text x="17.2383%" y="1551.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (92 samples, 0.12%)</title><rect x="16.9883%" y="1525" width="0.1195%" height="15" fill="rgb(251,211,41)" fg:x="13083" fg:w="92"/><text x="17.2383%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (54 samples, 0.07%)</title><rect x="17.0376%" y="1509" width="0.0701%" height="15" fill="rgb(229,211,5)" fg:x="13121" fg:w="54"/><text x="17.2876%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (53 samples, 0.07%)</title><rect x="17.0389%" y="1493" width="0.0688%" height="15" fill="rgb(239,36,31)" fg:x="13122" fg:w="53"/><text x="17.2889%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (21 samples, 0.03%)</title><rect x="17.0805%" y="1477" width="0.0273%" height="15" fill="rgb(248,67,31)" fg:x="13154" fg:w="21"/><text x="17.3305%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (21 samples, 0.03%)</title><rect x="17.0805%" y="1461" width="0.0273%" height="15" fill="rgb(249,55,44)" fg:x="13154" fg:w="21"/><text x="17.3305%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.03%)</title><rect x="17.0805%" y="1445" width="0.0273%" height="15" fill="rgb(216,82,12)" fg:x="13154" fg:w="21"/><text x="17.3305%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="17.1493%" y="1349" width="0.0156%" height="15" fill="rgb(242,174,1)" fg:x="13207" fg:w="12"/><text x="17.3993%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="17.1493%" y="1333" width="0.0156%" height="15" fill="rgb(208,120,29)" fg:x="13207" fg:w="12"/><text x="17.3993%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="17.1493%" y="1317" width="0.0156%" height="15" fill="rgb(221,105,43)" fg:x="13207" fg:w="12"/><text x="17.3993%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="17.1506%" y="1301" width="0.0143%" height="15" fill="rgb(234,124,22)" fg:x="13208" fg:w="11"/><text x="17.4006%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="17.1506%" y="1285" width="0.0143%" height="15" fill="rgb(212,23,30)" fg:x="13208" fg:w="11"/><text x="17.4006%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="17.1506%" y="1269" width="0.0143%" height="15" fill="rgb(219,122,53)" fg:x="13208" fg:w="11"/><text x="17.4006%" y="1279.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="17.1519%" y="1253" width="0.0130%" height="15" fill="rgb(248,84,24)" fg:x="13209" fg:w="10"/><text x="17.4019%" y="1263.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="17.1246%" y="1445" width="0.0441%" height="15" fill="rgb(245,115,18)" fg:x="13188" fg:w="34"/><text x="17.3746%" y="1455.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="17.1376%" y="1429" width="0.0312%" height="15" fill="rgb(227,176,51)" fg:x="13198" fg:w="24"/><text x="17.3876%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="17.1389%" y="1413" width="0.0299%" height="15" fill="rgb(229,63,42)" fg:x="13199" fg:w="23"/><text x="17.3889%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.03%)</title><rect x="17.1402%" y="1397" width="0.0286%" height="15" fill="rgb(247,202,24)" fg:x="13200" fg:w="22"/><text x="17.3902%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.03%)</title><rect x="17.1402%" y="1381" width="0.0286%" height="15" fill="rgb(244,173,20)" fg:x="13200" fg:w="22"/><text x="17.3902%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.03%)</title><rect x="17.1402%" y="1365" width="0.0286%" height="15" fill="rgb(242,81,47)" fg:x="13200" fg:w="22"/><text x="17.3902%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.02%)</title><rect x="17.1688%" y="1445" width="0.0169%" height="15" fill="rgb(231,185,54)" fg:x="13222" fg:w="13"/><text x="17.4188%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.02%)</title><rect x="17.1688%" y="1429" width="0.0169%" height="15" fill="rgb(243,55,32)" fg:x="13222" fg:w="13"/><text x="17.4188%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.02%)</title><rect x="17.1688%" y="1413" width="0.0169%" height="15" fill="rgb(208,167,19)" fg:x="13222" fg:w="13"/><text x="17.4188%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="17.1713%" y="1397" width="0.0143%" height="15" fill="rgb(231,72,35)" fg:x="13224" fg:w="11"/><text x="17.4213%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="17.1713%" y="1381" width="0.0143%" height="15" fill="rgb(250,173,51)" fg:x="13224" fg:w="11"/><text x="17.4213%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="17.1713%" y="1365" width="0.0143%" height="15" fill="rgb(209,5,22)" fg:x="13224" fg:w="11"/><text x="17.4213%" y="1375.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="17.1726%" y="1349" width="0.0130%" height="15" fill="rgb(250,174,19)" fg:x="13225" fg:w="10"/><text x="17.4226%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (65 samples, 0.08%)</title><rect x="17.1077%" y="1765" width="0.0844%" height="15" fill="rgb(217,3,49)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (65 samples, 0.08%)</title><rect x="17.1077%" y="1749" width="0.0844%" height="15" fill="rgb(218,225,5)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (65 samples, 0.08%)</title><rect x="17.1077%" y="1733" width="0.0844%" height="15" fill="rgb(236,89,11)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1743.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="17.1077%" y="1717" width="0.0844%" height="15" fill="rgb(206,33,28)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="17.1077%" y="1701" width="0.0844%" height="15" fill="rgb(241,56,42)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.08%)</title><rect x="17.1077%" y="1685" width="0.0844%" height="15" fill="rgb(222,44,11)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.08%)</title><rect x="17.1077%" y="1669" width="0.0844%" height="15" fill="rgb(234,111,20)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.08%)</title><rect x="17.1077%" y="1653" width="0.0844%" height="15" fill="rgb(237,77,6)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1663.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="17.1077%" y="1637" width="0.0844%" height="15" fill="rgb(235,111,23)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1647.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="17.1077%" y="1621" width="0.0844%" height="15" fill="rgb(251,135,29)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="17.1077%" y="1605" width="0.0844%" height="15" fill="rgb(217,57,1)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.08%)</title><rect x="17.1077%" y="1589" width="0.0844%" height="15" fill="rgb(249,119,31)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.08%)</title><rect x="17.1077%" y="1573" width="0.0844%" height="15" fill="rgb(233,164,33)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.08%)</title><rect x="17.1077%" y="1557" width="0.0844%" height="15" fill="rgb(250,217,43)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1567.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="17.1077%" y="1541" width="0.0844%" height="15" fill="rgb(232,154,50)" fg:x="13175" fg:w="65"/><text x="17.3577%" y="1551.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="17.1220%" y="1525" width="0.0701%" height="15" fill="rgb(227,190,8)" fg:x="13186" fg:w="54"/><text x="17.3720%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.07%)</title><rect x="17.1246%" y="1509" width="0.0675%" height="15" fill="rgb(209,217,32)" fg:x="13188" fg:w="52"/><text x="17.3746%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.07%)</title><rect x="17.1246%" y="1493" width="0.0675%" height="15" fill="rgb(243,203,50)" fg:x="13188" fg:w="52"/><text x="17.3746%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.07%)</title><rect x="17.1246%" y="1477" width="0.0675%" height="15" fill="rgb(232,152,27)" fg:x="13188" fg:w="52"/><text x="17.3746%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.07%)</title><rect x="17.1246%" y="1461" width="0.0675%" height="15" fill="rgb(240,34,29)" fg:x="13188" fg:w="52"/><text x="17.3746%" y="1471.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (47 samples, 0.06%)</title><rect x="17.2259%" y="1349" width="0.0610%" height="15" fill="rgb(215,185,52)" fg:x="13266" fg:w="47"/><text x="17.4759%" y="1359.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (46 samples, 0.06%)</title><rect x="17.2272%" y="1333" width="0.0597%" height="15" fill="rgb(240,89,49)" fg:x="13267" fg:w="46"/><text x="17.4772%" y="1343.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (46 samples, 0.06%)</title><rect x="17.2272%" y="1317" width="0.0597%" height="15" fill="rgb(225,12,52)" fg:x="13267" fg:w="46"/><text x="17.4772%" y="1327.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (45 samples, 0.06%)</title><rect x="17.2285%" y="1301" width="0.0584%" height="15" fill="rgb(239,128,45)" fg:x="13268" fg:w="45"/><text x="17.4785%" y="1311.50"></text></g><g><title>serde::de::SeqAccess::next_element (33 samples, 0.04%)</title><rect x="17.2441%" y="1285" width="0.0429%" height="15" fill="rgb(211,78,47)" fg:x="13280" fg:w="33"/><text x="17.4941%" y="1295.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (33 samples, 0.04%)</title><rect x="17.2441%" y="1269" width="0.0429%" height="15" fill="rgb(232,31,21)" fg:x="13280" fg:w="33"/><text x="17.4941%" y="1279.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (32 samples, 0.04%)</title><rect x="17.2454%" y="1253" width="0.0416%" height="15" fill="rgb(222,168,14)" fg:x="13281" fg:w="32"/><text x="17.4954%" y="1263.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (32 samples, 0.04%)</title><rect x="17.2454%" y="1237" width="0.0416%" height="15" fill="rgb(209,128,24)" fg:x="13281" fg:w="32"/><text x="17.4954%" y="1247.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (32 samples, 0.04%)</title><rect x="17.2454%" y="1221" width="0.0416%" height="15" fill="rgb(249,35,13)" fg:x="13281" fg:w="32"/><text x="17.4954%" y="1231.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (29 samples, 0.04%)</title><rect x="17.2493%" y="1205" width="0.0377%" height="15" fill="rgb(218,7,2)" fg:x="13284" fg:w="29"/><text x="17.4993%" y="1215.50"></text></g><g><title>bcs::de::Deserializer::next (11 samples, 0.01%)</title><rect x="17.2726%" y="1189" width="0.0143%" height="15" fill="rgb(238,107,27)" fg:x="13302" fg:w="11"/><text x="17.5226%" y="1199.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="17.2739%" y="1173" width="0.0130%" height="15" fill="rgb(217,88,38)" fg:x="13303" fg:w="10"/><text x="17.5239%" y="1183.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.01%)</title><rect x="17.2739%" y="1157" width="0.0130%" height="15" fill="rgb(230,207,0)" fg:x="13303" fg:w="10"/><text x="17.5239%" y="1167.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="17.2739%" y="1141" width="0.0130%" height="15" fill="rgb(249,64,54)" fg:x="13303" fg:w="10"/><text x="17.5239%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="17.2739%" y="1125" width="0.0130%" height="15" fill="rgb(231,7,11)" fg:x="13303" fg:w="10"/><text x="17.5239%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.01%)</title><rect x="17.2739%" y="1109" width="0.0130%" height="15" fill="rgb(205,149,21)" fg:x="13303" fg:w="10"/><text x="17.5239%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (10 samples, 0.01%)</title><rect x="17.2739%" y="1093" width="0.0130%" height="15" fill="rgb(215,126,34)" fg:x="13303" fg:w="10"/><text x="17.5239%" y="1103.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (67 samples, 0.09%)</title><rect x="17.2025%" y="1397" width="0.0870%" height="15" fill="rgb(241,132,45)" fg:x="13248" fg:w="67"/><text x="17.4525%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (56 samples, 0.07%)</title><rect x="17.2168%" y="1381" width="0.0727%" height="15" fill="rgb(252,69,32)" fg:x="13259" fg:w="56"/><text x="17.4668%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (56 samples, 0.07%)</title><rect x="17.2168%" y="1365" width="0.0727%" height="15" fill="rgb(232,204,19)" fg:x="13259" fg:w="56"/><text x="17.4668%" y="1375.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (80 samples, 0.10%)</title><rect x="17.1921%" y="1429" width="0.1039%" height="15" fill="rgb(249,15,47)" fg:x="13240" fg:w="80"/><text x="17.4421%" y="1439.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (80 samples, 0.10%)</title><rect x="17.1921%" y="1413" width="0.1039%" height="15" fill="rgb(209,227,23)" fg:x="13240" fg:w="80"/><text x="17.4421%" y="1423.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (2,460 samples, 3.19%)</title><rect x="14.1277%" y="2005" width="3.1943%" height="15" fill="rgb(248,92,24)" fg:x="10880" fg:w="2460"/><text x="14.3777%" y="2015.50">&lt;ap..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (2,460 samples, 3.19%)</title><rect x="14.1277%" y="1989" width="3.1943%" height="15" fill="rgb(247,59,2)" fg:x="10880" fg:w="2460"/><text x="14.3777%" y="1999.50">apt..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1973" width="2.0399%" height="15" fill="rgb(221,30,5)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1983.50">a..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::success_transaction_cleanup (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1957" width="2.0399%" height="15" fill="rgb(208,108,53)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1967.50">a..</text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1941" width="2.0399%" height="15" fill="rgb(211,183,26)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1951.50">a..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1925" width="2.0399%" height="15" fill="rgb(232,132,4)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1935.50">m..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1909" width="2.0399%" height="15" fill="rgb(253,128,37)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1919.50">m..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1893" width="2.0399%" height="15" fill="rgb(221,58,24)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1903.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1877" width="2.0399%" height="15" fill="rgb(230,54,45)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1887.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1861" width="2.0399%" height="15" fill="rgb(254,21,18)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1871.50">m..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1845" width="2.0399%" height="15" fill="rgb(221,108,0)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1855.50">m..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (1,571 samples, 2.04%)</title><rect x="15.2820%" y="1829" width="2.0399%" height="15" fill="rgb(206,95,1)" fg:x="11769" fg:w="1571"/><text x="15.5320%" y="1839.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (761 samples, 0.99%)</title><rect x="16.3338%" y="1813" width="0.9882%" height="15" fill="rgb(237,52,5)" fg:x="12579" fg:w="761"/><text x="16.5838%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (761 samples, 0.99%)</title><rect x="16.3338%" y="1797" width="0.9882%" height="15" fill="rgb(218,150,34)" fg:x="12579" fg:w="761"/><text x="16.5838%" y="1807.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (761 samples, 0.99%)</title><rect x="16.3338%" y="1781" width="0.9882%" height="15" fill="rgb(235,194,28)" fg:x="12579" fg:w="761"/><text x="16.5838%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1765" width="0.1298%" height="15" fill="rgb(245,92,18)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1775.50"></text></g><g><title>bcs::de::from_bytes_seed (100 samples, 0.13%)</title><rect x="17.1921%" y="1749" width="0.1298%" height="15" fill="rgb(253,203,53)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1733" width="0.1298%" height="15" fill="rgb(249,185,47)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1717" width="0.1298%" height="15" fill="rgb(252,194,52)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1727.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (100 samples, 0.13%)</title><rect x="17.1921%" y="1701" width="0.1298%" height="15" fill="rgb(210,53,36)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (100 samples, 0.13%)</title><rect x="17.1921%" y="1685" width="0.1298%" height="15" fill="rgb(237,37,25)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1695.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (100 samples, 0.13%)</title><rect x="17.1921%" y="1669" width="0.1298%" height="15" fill="rgb(242,116,27)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1653" width="0.1298%" height="15" fill="rgb(213,185,26)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1637" width="0.1298%" height="15" fill="rgb(225,204,8)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (100 samples, 0.13%)</title><rect x="17.1921%" y="1621" width="0.1298%" height="15" fill="rgb(254,111,37)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (100 samples, 0.13%)</title><rect x="17.1921%" y="1605" width="0.1298%" height="15" fill="rgb(242,35,9)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (100 samples, 0.13%)</title><rect x="17.1921%" y="1589" width="0.1298%" height="15" fill="rgb(232,138,49)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1573" width="0.1298%" height="15" fill="rgb(247,56,4)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1583.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1557" width="0.1298%" height="15" fill="rgb(226,179,17)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1567.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (100 samples, 0.13%)</title><rect x="17.1921%" y="1541" width="0.1298%" height="15" fill="rgb(216,163,45)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (100 samples, 0.13%)</title><rect x="17.1921%" y="1525" width="0.1298%" height="15" fill="rgb(211,157,3)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1535.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (100 samples, 0.13%)</title><rect x="17.1921%" y="1509" width="0.1298%" height="15" fill="rgb(234,44,20)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1493" width="0.1298%" height="15" fill="rgb(254,138,23)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (100 samples, 0.13%)</title><rect x="17.1921%" y="1477" width="0.1298%" height="15" fill="rgb(206,119,39)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (100 samples, 0.13%)</title><rect x="17.1921%" y="1461" width="0.1298%" height="15" fill="rgb(231,105,52)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (100 samples, 0.13%)</title><rect x="17.1921%" y="1445" width="0.1298%" height="15" fill="rgb(250,20,5)" fg:x="13240" fg:w="100"/><text x="17.4421%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.03%)</title><rect x="17.2960%" y="1429" width="0.0260%" height="15" fill="rgb(215,198,30)" fg:x="13320" fg:w="20"/><text x="17.5460%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.03%)</title><rect x="17.2960%" y="1413" width="0.0260%" height="15" fill="rgb(246,142,8)" fg:x="13320" fg:w="20"/><text x="17.5460%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.03%)</title><rect x="17.2960%" y="1397" width="0.0260%" height="15" fill="rgb(243,26,38)" fg:x="13320" fg:w="20"/><text x="17.5460%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.03%)</title><rect x="17.2960%" y="1381" width="0.0260%" height="15" fill="rgb(205,133,28)" fg:x="13320" fg:w="20"/><text x="17.5460%" y="1391.50"></text></g><g><title>malloc (18 samples, 0.02%)</title><rect x="17.2986%" y="1365" width="0.0234%" height="15" fill="rgb(212,34,0)" fg:x="13322" fg:w="18"/><text x="17.5486%" y="1375.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="17.3012%" y="1349" width="0.0208%" height="15" fill="rgb(251,226,22)" fg:x="13324" fg:w="16"/><text x="17.5512%" y="1359.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.03%)</title><rect x="17.3311%" y="1509" width="0.0286%" height="15" fill="rgb(252,119,9)" fg:x="13347" fg:w="22"/><text x="17.5811%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (22 samples, 0.03%)</title><rect x="17.3311%" y="1493" width="0.0286%" height="15" fill="rgb(213,150,50)" fg:x="13347" fg:w="22"/><text x="17.5811%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (10 samples, 0.01%)</title><rect x="17.3466%" y="1477" width="0.0130%" height="15" fill="rgb(212,24,39)" fg:x="13359" fg:w="10"/><text x="17.5966%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (10 samples, 0.01%)</title><rect x="17.3466%" y="1461" width="0.0130%" height="15" fill="rgb(213,46,39)" fg:x="13359" fg:w="10"/><text x="17.5966%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.01%)</title><rect x="17.3466%" y="1445" width="0.0130%" height="15" fill="rgb(239,106,12)" fg:x="13359" fg:w="10"/><text x="17.5966%" y="1455.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="17.3466%" y="1429" width="0.0130%" height="15" fill="rgb(249,229,21)" fg:x="13359" fg:w="10"/><text x="17.5966%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="17.3466%" y="1413" width="0.0130%" height="15" fill="rgb(212,158,3)" fg:x="13359" fg:w="10"/><text x="17.5966%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="17.3466%" y="1397" width="0.0130%" height="15" fill="rgb(253,26,48)" fg:x="13359" fg:w="10"/><text x="17.5966%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="17.3466%" y="1381" width="0.0130%" height="15" fill="rgb(238,178,20)" fg:x="13359" fg:w="10"/><text x="17.5966%" y="1391.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="17.3479%" y="1365" width="0.0117%" height="15" fill="rgb(208,86,15)" fg:x="13360" fg:w="9"/><text x="17.5979%" y="1375.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.01%)</title><rect x="17.3622%" y="1461" width="0.0117%" height="15" fill="rgb(239,42,53)" fg:x="13371" fg:w="9"/><text x="17.6122%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (9 samples, 0.01%)</title><rect x="17.3622%" y="1445" width="0.0117%" height="15" fill="rgb(245,226,8)" fg:x="13371" fg:w="9"/><text x="17.6122%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (9 samples, 0.01%)</title><rect x="17.3622%" y="1429" width="0.0117%" height="15" fill="rgb(216,176,32)" fg:x="13371" fg:w="9"/><text x="17.6122%" y="1439.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (9 samples, 0.01%)</title><rect x="17.3622%" y="1413" width="0.0117%" height="15" fill="rgb(231,186,21)" fg:x="13371" fg:w="9"/><text x="17.6122%" y="1423.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (10 samples, 0.01%)</title><rect x="17.3622%" y="1477" width="0.0130%" height="15" fill="rgb(205,95,49)" fg:x="13371" fg:w="10"/><text x="17.6122%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::parse_string (33 samples, 0.04%)</title><rect x="17.3882%" y="1301" width="0.0429%" height="15" fill="rgb(217,145,8)" fg:x="13391" fg:w="33"/><text x="17.6382%" y="1311.50"></text></g><g><title>core::str::converts::from_utf8 (19 samples, 0.02%)</title><rect x="17.4064%" y="1285" width="0.0247%" height="15" fill="rgb(239,144,48)" fg:x="13405" fg:w="19"/><text x="17.6564%" y="1295.50"></text></g><g><title>core::str::validations::run_utf8_validation (14 samples, 0.02%)</title><rect x="17.4129%" y="1269" width="0.0182%" height="15" fill="rgb(214,189,23)" fg:x="13410" fg:w="14"/><text x="17.6629%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="17.4310%" y="1173" width="0.0182%" height="15" fill="rgb(229,157,17)" fg:x="13424" fg:w="14"/><text x="17.6810%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="17.4310%" y="1157" width="0.0182%" height="15" fill="rgb(230,5,48)" fg:x="13424" fg:w="14"/><text x="17.6810%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="17.4310%" y="1141" width="0.0182%" height="15" fill="rgb(224,156,48)" fg:x="13424" fg:w="14"/><text x="17.6810%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="17.4323%" y="1125" width="0.0169%" height="15" fill="rgb(223,14,29)" fg:x="13425" fg:w="13"/><text x="17.6823%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="17.4323%" y="1109" width="0.0169%" height="15" fill="rgb(229,96,36)" fg:x="13425" fg:w="13"/><text x="17.6823%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="17.4323%" y="1093" width="0.0169%" height="15" fill="rgb(231,102,53)" fg:x="13425" fg:w="13"/><text x="17.6823%" y="1103.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="17.4336%" y="1077" width="0.0156%" height="15" fill="rgb(210,77,38)" fg:x="13426" fg:w="12"/><text x="17.6836%" y="1087.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (54 samples, 0.07%)</title><rect x="17.3817%" y="1413" width="0.0701%" height="15" fill="rgb(235,131,6)" fg:x="13386" fg:w="54"/><text x="17.6317%" y="1423.50"></text></g><g><title>serde::de::SeqAccess::next_element (52 samples, 0.07%)</title><rect x="17.3843%" y="1397" width="0.0675%" height="15" fill="rgb(252,55,38)" fg:x="13388" fg:w="52"/><text x="17.6343%" y="1407.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (52 samples, 0.07%)</title><rect x="17.3843%" y="1381" width="0.0675%" height="15" fill="rgb(246,38,14)" fg:x="13388" fg:w="52"/><text x="17.6343%" y="1391.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (52 samples, 0.07%)</title><rect x="17.3843%" y="1365" width="0.0675%" height="15" fill="rgb(242,27,5)" fg:x="13388" fg:w="52"/><text x="17.6343%" y="1375.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (52 samples, 0.07%)</title><rect x="17.3843%" y="1349" width="0.0675%" height="15" fill="rgb(228,65,35)" fg:x="13388" fg:w="52"/><text x="17.6343%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (52 samples, 0.07%)</title><rect x="17.3843%" y="1333" width="0.0675%" height="15" fill="rgb(245,93,11)" fg:x="13388" fg:w="52"/><text x="17.6343%" y="1343.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (52 samples, 0.07%)</title><rect x="17.3843%" y="1317" width="0.0675%" height="15" fill="rgb(213,1,31)" fg:x="13388" fg:w="52"/><text x="17.6343%" y="1327.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (16 samples, 0.02%)</title><rect x="17.4310%" y="1301" width="0.0208%" height="15" fill="rgb(237,205,14)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1311.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (16 samples, 0.02%)</title><rect x="17.4310%" y="1285" width="0.0208%" height="15" fill="rgb(232,118,45)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1295.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (16 samples, 0.02%)</title><rect x="17.4310%" y="1269" width="0.0208%" height="15" fill="rgb(218,5,6)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (16 samples, 0.02%)</title><rect x="17.4310%" y="1253" width="0.0208%" height="15" fill="rgb(251,87,51)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.02%)</title><rect x="17.4310%" y="1237" width="0.0208%" height="15" fill="rgb(207,225,20)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.02%)</title><rect x="17.4310%" y="1221" width="0.0208%" height="15" fill="rgb(222,78,54)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.02%)</title><rect x="17.4310%" y="1205" width="0.0208%" height="15" fill="rgb(232,85,16)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.02%)</title><rect x="17.4310%" y="1189" width="0.0208%" height="15" fill="rgb(244,25,33)" fg:x="13424" fg:w="16"/><text x="17.6810%" y="1199.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (100 samples, 0.13%)</title><rect x="17.3259%" y="1525" width="0.1298%" height="15" fill="rgb(233,24,36)" fg:x="13343" fg:w="100"/><text x="17.5759%" y="1535.50"></text></g><g><title>serde::de::MapAccess::next_entry (73 samples, 0.09%)</title><rect x="17.3609%" y="1509" width="0.0948%" height="15" fill="rgb(253,49,54)" fg:x="13370" fg:w="73"/><text x="17.6109%" y="1519.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (73 samples, 0.09%)</title><rect x="17.3609%" y="1493" width="0.0948%" height="15" fill="rgb(245,12,22)" fg:x="13370" fg:w="73"/><text x="17.6109%" y="1503.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (62 samples, 0.08%)</title><rect x="17.3752%" y="1477" width="0.0805%" height="15" fill="rgb(253,141,28)" fg:x="13381" fg:w="62"/><text x="17.6252%" y="1487.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (62 samples, 0.08%)</title><rect x="17.3752%" y="1461" width="0.0805%" height="15" fill="rgb(225,207,27)" fg:x="13381" fg:w="62"/><text x="17.6252%" y="1471.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (62 samples, 0.08%)</title><rect x="17.3752%" y="1445" width="0.0805%" height="15" fill="rgb(220,84,2)" fg:x="13381" fg:w="62"/><text x="17.6252%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (62 samples, 0.08%)</title><rect x="17.3752%" y="1429" width="0.0805%" height="15" fill="rgb(224,37,37)" fg:x="13381" fg:w="62"/><text x="17.6252%" y="1439.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (110 samples, 0.14%)</title><rect x="17.3220%" y="1701" width="0.1428%" height="15" fill="rgb(220,143,18)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1711.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (110 samples, 0.14%)</title><rect x="17.3220%" y="1685" width="0.1428%" height="15" fill="rgb(210,88,33)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1695.50"></text></g><g><title>bcs::de::from_bytes (110 samples, 0.14%)</title><rect x="17.3220%" y="1669" width="0.1428%" height="15" fill="rgb(219,87,51)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1679.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (110 samples, 0.14%)</title><rect x="17.3220%" y="1653" width="0.1428%" height="15" fill="rgb(211,7,35)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1663.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (110 samples, 0.14%)</title><rect x="17.3220%" y="1637" width="0.1428%" height="15" fill="rgb(232,77,2)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1647.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (110 samples, 0.14%)</title><rect x="17.3220%" y="1621" width="0.1428%" height="15" fill="rgb(249,94,25)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1631.50"></text></g><g><title>serde::de::SeqAccess::next_element (110 samples, 0.14%)</title><rect x="17.3220%" y="1605" width="0.1428%" height="15" fill="rgb(215,112,2)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (110 samples, 0.14%)</title><rect x="17.3220%" y="1589" width="0.1428%" height="15" fill="rgb(226,115,48)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1599.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (110 samples, 0.14%)</title><rect x="17.3220%" y="1573" width="0.1428%" height="15" fill="rgb(249,196,10)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1583.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (110 samples, 0.14%)</title><rect x="17.3220%" y="1557" width="0.1428%" height="15" fill="rgb(237,109,14)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1567.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (110 samples, 0.14%)</title><rect x="17.3220%" y="1541" width="0.1428%" height="15" fill="rgb(217,103,53)" fg:x="13340" fg:w="110"/><text x="17.5720%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (57 samples, 0.07%)</title><rect x="17.4648%" y="1557" width="0.0740%" height="15" fill="rgb(244,137,9)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (57 samples, 0.07%)</title><rect x="17.4648%" y="1541" width="0.0740%" height="15" fill="rgb(227,201,3)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (57 samples, 0.07%)</title><rect x="17.4648%" y="1525" width="0.0740%" height="15" fill="rgb(243,94,6)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (57 samples, 0.07%)</title><rect x="17.4648%" y="1509" width="0.0740%" height="15" fill="rgb(235,118,5)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (57 samples, 0.07%)</title><rect x="17.4648%" y="1493" width="0.0740%" height="15" fill="rgb(247,10,30)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (57 samples, 0.07%)</title><rect x="17.4648%" y="1477" width="0.0740%" height="15" fill="rgb(205,26,28)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (57 samples, 0.07%)</title><rect x="17.4648%" y="1461" width="0.0740%" height="15" fill="rgb(206,99,35)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (57 samples, 0.07%)</title><rect x="17.4648%" y="1445" width="0.0740%" height="15" fill="rgb(238,130,40)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (57 samples, 0.07%)</title><rect x="17.4648%" y="1429" width="0.0740%" height="15" fill="rgb(224,126,31)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (57 samples, 0.07%)</title><rect x="17.4648%" y="1413" width="0.0740%" height="15" fill="rgb(254,105,17)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (57 samples, 0.07%)</title><rect x="17.4648%" y="1397" width="0.0740%" height="15" fill="rgb(216,87,36)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (57 samples, 0.07%)</title><rect x="17.4648%" y="1381" width="0.0740%" height="15" fill="rgb(240,21,12)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (57 samples, 0.07%)</title><rect x="17.4648%" y="1365" width="0.0740%" height="15" fill="rgb(245,192,34)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (57 samples, 0.07%)</title><rect x="17.4648%" y="1349" width="0.0740%" height="15" fill="rgb(226,100,49)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (57 samples, 0.07%)</title><rect x="17.4648%" y="1333" width="0.0740%" height="15" fill="rgb(245,188,27)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (57 samples, 0.07%)</title><rect x="17.4648%" y="1317" width="0.0740%" height="15" fill="rgb(212,170,8)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (57 samples, 0.07%)</title><rect x="17.4648%" y="1301" width="0.0740%" height="15" fill="rgb(217,113,29)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (57 samples, 0.07%)</title><rect x="17.4648%" y="1285" width="0.0740%" height="15" fill="rgb(237,30,3)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1295.50"></text></g><g><title>realloc (57 samples, 0.07%)</title><rect x="17.4648%" y="1269" width="0.0740%" height="15" fill="rgb(227,19,28)" fg:x="13450" fg:w="57"/><text x="17.7148%" y="1279.50"></text></g><g><title>[libc.so.6] (46 samples, 0.06%)</title><rect x="17.4791%" y="1253" width="0.0597%" height="15" fill="rgb(239,172,45)" fg:x="13461" fg:w="46"/><text x="17.7291%" y="1263.50"></text></g><g><title>[libc.so.6] (35 samples, 0.05%)</title><rect x="17.4934%" y="1237" width="0.0454%" height="15" fill="rgb(254,55,39)" fg:x="13472" fg:w="35"/><text x="17.7434%" y="1247.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (74 samples, 0.10%)</title><rect x="17.4648%" y="1669" width="0.0961%" height="15" fill="rgb(249,208,12)" fg:x="13450" fg:w="74"/><text x="17.7148%" y="1679.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (74 samples, 0.10%)</title><rect x="17.4648%" y="1653" width="0.0961%" height="15" fill="rgb(240,52,13)" fg:x="13450" fg:w="74"/><text x="17.7148%" y="1663.50"></text></g><g><title>bcs::ser::to_bytes (74 samples, 0.10%)</title><rect x="17.4648%" y="1637" width="0.0961%" height="15" fill="rgb(252,149,13)" fg:x="13450" fg:w="74"/><text x="17.7148%" y="1647.50"></text></g><g><title>bcs::ser::serialize_into (74 samples, 0.10%)</title><rect x="17.4648%" y="1621" width="0.0961%" height="15" fill="rgb(232,81,48)" fg:x="13450" fg:w="74"/><text x="17.7148%" y="1631.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (74 samples, 0.10%)</title><rect x="17.4648%" y="1605" width="0.0961%" height="15" fill="rgb(222,144,2)" fg:x="13450" fg:w="74"/><text x="17.7148%" y="1615.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (74 samples, 0.10%)</title><rect x="17.4648%" y="1589" width="0.0961%" height="15" fill="rgb(216,81,32)" fg:x="13450" fg:w="74"/><text x="17.7148%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (74 samples, 0.10%)</title><rect x="17.4648%" y="1573" width="0.0961%" height="15" fill="rgb(244,78,51)" fg:x="13450" fg:w="74"/><text x="17.7148%" y="1583.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (17 samples, 0.02%)</title><rect x="17.5388%" y="1557" width="0.0221%" height="15" fill="rgb(217,66,21)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 0.02%)</title><rect x="17.5388%" y="1541" width="0.0221%" height="15" fill="rgb(247,101,42)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (17 samples, 0.02%)</title><rect x="17.5388%" y="1525" width="0.0221%" height="15" fill="rgb(227,81,39)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (17 samples, 0.02%)</title><rect x="17.5388%" y="1509" width="0.0221%" height="15" fill="rgb(220,223,44)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (17 samples, 0.02%)</title><rect x="17.5388%" y="1493" width="0.0221%" height="15" fill="rgb(205,218,2)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (17 samples, 0.02%)</title><rect x="17.5388%" y="1477" width="0.0221%" height="15" fill="rgb(212,207,28)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (17 samples, 0.02%)</title><rect x="17.5388%" y="1461" width="0.0221%" height="15" fill="rgb(224,12,41)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.02%)</title><rect x="17.5388%" y="1445" width="0.0221%" height="15" fill="rgb(216,118,12)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="17.5388%" y="1429" width="0.0221%" height="15" fill="rgb(252,97,46)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.02%)</title><rect x="17.5388%" y="1413" width="0.0221%" height="15" fill="rgb(244,206,19)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="17.5388%" y="1397" width="0.0221%" height="15" fill="rgb(231,84,31)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="17.5388%" y="1381" width="0.0221%" height="15" fill="rgb(244,133,0)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="17.5388%" y="1365" width="0.0221%" height="15" fill="rgb(223,15,50)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="17.5388%" y="1349" width="0.0221%" height="15" fill="rgb(250,118,49)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="17.5388%" y="1333" width="0.0221%" height="15" fill="rgb(248,25,38)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.02%)</title><rect x="17.5388%" y="1317" width="0.0221%" height="15" fill="rgb(215,70,14)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.02%)</title><rect x="17.5388%" y="1301" width="0.0221%" height="15" fill="rgb(215,28,15)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.02%)</title><rect x="17.5388%" y="1285" width="0.0221%" height="15" fill="rgb(243,6,28)" fg:x="13507" fg:w="17"/><text x="17.7888%" y="1295.50"></text></g><g><title>realloc (15 samples, 0.02%)</title><rect x="17.5414%" y="1269" width="0.0195%" height="15" fill="rgb(222,130,1)" fg:x="13509" fg:w="15"/><text x="17.7914%" y="1279.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="17.5466%" y="1253" width="0.0143%" height="15" fill="rgb(236,166,44)" fg:x="13513" fg:w="11"/><text x="17.7966%" y="1263.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="17.5466%" y="1237" width="0.0143%" height="15" fill="rgb(221,108,14)" fg:x="13513" fg:w="11"/><text x="17.7966%" y="1247.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (8 samples, 0.01%)</title><rect x="17.5791%" y="1541" width="0.0104%" height="15" fill="rgb(252,3,45)" fg:x="13538" fg:w="8"/><text x="17.8291%" y="1551.50"></text></g><g><title>bcs::ser::serialize_into (10 samples, 0.01%)</title><rect x="17.5947%" y="1541" width="0.0130%" height="15" fill="rgb(237,68,30)" fg:x="13550" fg:w="10"/><text x="17.8447%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.01%)</title><rect x="17.5947%" y="1525" width="0.0130%" height="15" fill="rgb(211,79,22)" fg:x="13550" fg:w="10"/><text x="17.8447%" y="1535.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (10 samples, 0.01%)</title><rect x="17.5947%" y="1509" width="0.0130%" height="15" fill="rgb(252,185,21)" fg:x="13550" fg:w="10"/><text x="17.8447%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (10 samples, 0.01%)</title><rect x="17.5947%" y="1493" width="0.0130%" height="15" fill="rgb(225,189,26)" fg:x="13550" fg:w="10"/><text x="17.8447%" y="1503.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.04%)</title><rect x="17.5713%" y="1605" width="0.0377%" height="15" fill="rgb(241,30,40)" fg:x="13532" fg:w="29"/><text x="17.8213%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.04%)</title><rect x="17.5739%" y="1589" width="0.0351%" height="15" fill="rgb(235,215,44)" fg:x="13534" fg:w="27"/><text x="17.8239%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (27 samples, 0.04%)</title><rect x="17.5739%" y="1573" width="0.0351%" height="15" fill="rgb(205,8,29)" fg:x="13534" fg:w="27"/><text x="17.8239%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (23 samples, 0.03%)</title><rect x="17.5791%" y="1557" width="0.0299%" height="15" fill="rgb(241,137,42)" fg:x="13538" fg:w="23"/><text x="17.8291%" y="1567.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="17.6219%" y="1477" width="0.0143%" height="15" fill="rgb(237,155,2)" fg:x="13571" fg:w="11"/><text x="17.8719%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="17.6245%" y="1461" width="0.0117%" height="15" fill="rgb(245,29,42)" fg:x="13573" fg:w="9"/><text x="17.8745%" y="1471.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (9 samples, 0.01%)</title><rect x="17.6245%" y="1445" width="0.0117%" height="15" fill="rgb(234,101,35)" fg:x="13573" fg:w="9"/><text x="17.8745%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.01%)</title><rect x="17.6245%" y="1429" width="0.0117%" height="15" fill="rgb(228,64,37)" fg:x="13573" fg:w="9"/><text x="17.8745%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="17.6219%" y="1509" width="0.0156%" height="15" fill="rgb(217,214,36)" fg:x="13571" fg:w="12"/><text x="17.8719%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="17.6219%" y="1493" width="0.0156%" height="15" fill="rgb(243,70,3)" fg:x="13571" fg:w="12"/><text x="17.8719%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.03%)</title><rect x="17.6115%" y="1557" width="0.0325%" height="15" fill="rgb(253,158,52)" fg:x="13563" fg:w="25"/><text x="17.8615%" y="1567.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.03%)</title><rect x="17.6115%" y="1541" width="0.0325%" height="15" fill="rgb(234,111,54)" fg:x="13563" fg:w="25"/><text x="17.8615%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="17.6219%" y="1525" width="0.0221%" height="15" fill="rgb(217,70,32)" fg:x="13571" fg:w="17"/><text x="17.8719%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (43 samples, 0.06%)</title><rect x="17.6466%" y="1509" width="0.0558%" height="15" fill="rgb(234,18,33)" fg:x="13590" fg:w="43"/><text x="17.8966%" y="1519.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (43 samples, 0.06%)</title><rect x="17.6466%" y="1493" width="0.0558%" height="15" fill="rgb(234,12,49)" fg:x="13590" fg:w="43"/><text x="17.8966%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (43 samples, 0.06%)</title><rect x="17.6466%" y="1477" width="0.0558%" height="15" fill="rgb(236,10,21)" fg:x="13590" fg:w="43"/><text x="17.8966%" y="1487.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (41 samples, 0.05%)</title><rect x="17.6492%" y="1461" width="0.0532%" height="15" fill="rgb(248,182,45)" fg:x="13592" fg:w="41"/><text x="17.8992%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (41 samples, 0.05%)</title><rect x="17.6492%" y="1445" width="0.0532%" height="15" fill="rgb(217,95,36)" fg:x="13592" fg:w="41"/><text x="17.8992%" y="1455.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="17.6817%" y="1429" width="0.0208%" height="15" fill="rgb(212,110,31)" fg:x="13617" fg:w="16"/><text x="17.9317%" y="1439.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.02%)</title><rect x="17.7063%" y="1509" width="0.0169%" height="15" fill="rgb(206,32,53)" fg:x="13636" fg:w="13"/><text x="17.9563%" y="1519.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.02%)</title><rect x="17.7063%" y="1493" width="0.0169%" height="15" fill="rgb(246,141,37)" fg:x="13636" fg:w="13"/><text x="17.9563%" y="1503.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="17.7063%" y="1477" width="0.0169%" height="15" fill="rgb(219,16,7)" fg:x="13636" fg:w="13"/><text x="17.9563%" y="1487.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (126 samples, 0.16%)</title><rect x="17.5622%" y="1621" width="0.1636%" height="15" fill="rgb(230,205,45)" fg:x="13525" fg:w="126"/><text x="17.8122%" y="1631.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (90 samples, 0.12%)</title><rect x="17.6089%" y="1605" width="0.1169%" height="15" fill="rgb(231,43,49)" fg:x="13561" fg:w="90"/><text x="17.8589%" y="1615.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (90 samples, 0.12%)</title><rect x="17.6089%" y="1589" width="0.1169%" height="15" fill="rgb(212,106,34)" fg:x="13561" fg:w="90"/><text x="17.8589%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (90 samples, 0.12%)</title><rect x="17.6089%" y="1573" width="0.1169%" height="15" fill="rgb(206,83,17)" fg:x="13561" fg:w="90"/><text x="17.8589%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (63 samples, 0.08%)</title><rect x="17.6440%" y="1557" width="0.0818%" height="15" fill="rgb(244,154,49)" fg:x="13588" fg:w="63"/><text x="17.8940%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (63 samples, 0.08%)</title><rect x="17.6440%" y="1541" width="0.0818%" height="15" fill="rgb(244,149,49)" fg:x="13588" fg:w="63"/><text x="17.8940%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (63 samples, 0.08%)</title><rect x="17.6440%" y="1525" width="0.0818%" height="15" fill="rgb(227,134,18)" fg:x="13588" fg:w="63"/><text x="17.8940%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="17.7297%" y="1605" width="0.0130%" height="15" fill="rgb(237,116,36)" fg:x="13654" fg:w="10"/><text x="17.9797%" y="1615.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="17.7297%" y="1589" width="0.0130%" height="15" fill="rgb(205,129,40)" fg:x="13654" fg:w="10"/><text x="17.9797%" y="1599.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="17.7297%" y="1573" width="0.0130%" height="15" fill="rgb(236,178,4)" fg:x="13654" fg:w="10"/><text x="17.9797%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="17.7297%" y="1557" width="0.0130%" height="15" fill="rgb(251,76,53)" fg:x="13654" fg:w="10"/><text x="17.9797%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="17.7323%" y="1541" width="0.0104%" height="15" fill="rgb(242,92,40)" fg:x="13656" fg:w="8"/><text x="17.9823%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="17.7323%" y="1525" width="0.0104%" height="15" fill="rgb(209,45,30)" fg:x="13656" fg:w="8"/><text x="17.9823%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="17.7323%" y="1509" width="0.0104%" height="15" fill="rgb(218,157,36)" fg:x="13656" fg:w="8"/><text x="17.9823%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="17.7427%" y="1589" width="0.0221%" height="15" fill="rgb(222,186,16)" fg:x="13664" fg:w="17"/><text x="17.9927%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="17.7440%" y="1573" width="0.0208%" height="15" fill="rgb(254,72,35)" fg:x="13665" fg:w="16"/><text x="17.9940%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="17.7453%" y="1557" width="0.0195%" height="15" fill="rgb(224,25,35)" fg:x="13666" fg:w="15"/><text x="17.9953%" y="1567.50"></text></g><g><title>malloc (13 samples, 0.02%)</title><rect x="17.7479%" y="1541" width="0.0169%" height="15" fill="rgb(206,135,52)" fg:x="13668" fg:w="13"/><text x="17.9979%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.03%)</title><rect x="17.7427%" y="1605" width="0.0325%" height="15" fill="rgb(229,174,47)" fg:x="13664" fg:w="25"/><text x="17.9927%" y="1615.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="17.7648%" y="1589" width="0.0104%" height="15" fill="rgb(242,184,21)" fg:x="13681" fg:w="8"/><text x="18.0148%" y="1599.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="17.7648%" y="1573" width="0.0104%" height="15" fill="rgb(213,22,45)" fg:x="13681" fg:w="8"/><text x="18.0148%" y="1583.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (10 samples, 0.01%)</title><rect x="17.7881%" y="1557" width="0.0130%" height="15" fill="rgb(237,81,54)" fg:x="13699" fg:w="10"/><text x="18.0381%" y="1567.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.01%)</title><rect x="17.7881%" y="1541" width="0.0130%" height="15" fill="rgb(248,177,18)" fg:x="13699" fg:w="10"/><text x="18.0381%" y="1551.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.01%)</title><rect x="17.7881%" y="1525" width="0.0130%" height="15" fill="rgb(254,31,16)" fg:x="13699" fg:w="10"/><text x="18.0381%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="17.8063%" y="1541" width="0.0117%" height="15" fill="rgb(235,20,31)" fg:x="13713" fg:w="9"/><text x="18.0563%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="17.8063%" y="1525" width="0.0117%" height="15" fill="rgb(240,56,43)" fg:x="13713" fg:w="9"/><text x="18.0563%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="17.8063%" y="1509" width="0.0117%" height="15" fill="rgb(237,197,51)" fg:x="13713" fg:w="9"/><text x="18.0563%" y="1519.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="17.8206%" y="1493" width="0.0234%" height="15" fill="rgb(241,162,44)" fg:x="13724" fg:w="18"/><text x="18.0706%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="17.8284%" y="1477" width="0.0156%" height="15" fill="rgb(224,23,20)" fg:x="13730" fg:w="12"/><text x="18.0784%" y="1487.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.02%)</title><rect x="17.8284%" y="1461" width="0.0156%" height="15" fill="rgb(250,109,34)" fg:x="13730" fg:w="12"/><text x="18.0784%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.02%)</title><rect x="17.8284%" y="1445" width="0.0156%" height="15" fill="rgb(214,175,50)" fg:x="13730" fg:w="12"/><text x="18.0784%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (24 samples, 0.03%)</title><rect x="17.8180%" y="1525" width="0.0312%" height="15" fill="rgb(213,182,5)" fg:x="13722" fg:w="24"/><text x="18.0680%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (23 samples, 0.03%)</title><rect x="17.8193%" y="1509" width="0.0299%" height="15" fill="rgb(209,199,19)" fg:x="13723" fg:w="23"/><text x="18.0693%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="17.8505%" y="1477" width="0.0117%" height="15" fill="rgb(236,224,42)" fg:x="13747" fg:w="9"/><text x="18.1005%" y="1487.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (44 samples, 0.06%)</title><rect x="17.8063%" y="1557" width="0.0571%" height="15" fill="rgb(246,226,29)" fg:x="13713" fg:w="44"/><text x="18.0563%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.05%)</title><rect x="17.8180%" y="1541" width="0.0454%" height="15" fill="rgb(227,223,11)" fg:x="13722" fg:w="35"/><text x="18.0680%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="17.8492%" y="1525" width="0.0143%" height="15" fill="rgb(219,7,51)" fg:x="13746" fg:w="11"/><text x="18.0992%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="17.8492%" y="1509" width="0.0143%" height="15" fill="rgb(245,167,10)" fg:x="13746" fg:w="11"/><text x="18.0992%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="17.8492%" y="1493" width="0.0143%" height="15" fill="rgb(237,224,16)" fg:x="13746" fg:w="11"/><text x="18.0992%" y="1503.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="17.8686%" y="1477" width="0.0104%" height="15" fill="rgb(226,132,13)" fg:x="13761" fg:w="8"/><text x="18.1186%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="17.8686%" y="1509" width="0.0130%" height="15" fill="rgb(214,140,3)" fg:x="13761" fg:w="10"/><text x="18.1186%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="17.8686%" y="1493" width="0.0130%" height="15" fill="rgb(221,177,4)" fg:x="13761" fg:w="10"/><text x="18.1186%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.03%)</title><rect x="17.8673%" y="1525" width="0.0286%" height="15" fill="rgb(238,139,3)" fg:x="13760" fg:w="22"/><text x="18.1173%" y="1535.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (96 samples, 0.12%)</title><rect x="17.7829%" y="1605" width="0.1247%" height="15" fill="rgb(216,17,39)" fg:x="13695" fg:w="96"/><text x="18.0329%" y="1615.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (94 samples, 0.12%)</title><rect x="17.7855%" y="1589" width="0.1221%" height="15" fill="rgb(238,120,9)" fg:x="13697" fg:w="94"/><text x="18.0355%" y="1599.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (94 samples, 0.12%)</title><rect x="17.7855%" y="1573" width="0.1221%" height="15" fill="rgb(244,92,53)" fg:x="13697" fg:w="94"/><text x="18.0355%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (34 samples, 0.04%)</title><rect x="17.8634%" y="1557" width="0.0441%" height="15" fill="rgb(224,148,33)" fg:x="13757" fg:w="34"/><text x="18.1134%" y="1567.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 0.04%)</title><rect x="17.8660%" y="1541" width="0.0416%" height="15" fill="rgb(243,6,36)" fg:x="13759" fg:w="32"/><text x="18.1160%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (9 samples, 0.01%)</title><rect x="17.8959%" y="1525" width="0.0117%" height="15" fill="rgb(230,102,11)" fg:x="13782" fg:w="9"/><text x="18.1459%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (9 samples, 0.01%)</title><rect x="17.8959%" y="1509" width="0.0117%" height="15" fill="rgb(234,148,36)" fg:x="13782" fg:w="9"/><text x="18.1459%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.01%)</title><rect x="17.8959%" y="1493" width="0.0117%" height="15" fill="rgb(251,153,25)" fg:x="13782" fg:w="9"/><text x="18.1459%" y="1503.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (452 samples, 0.59%)</title><rect x="17.3220%" y="1733" width="0.5869%" height="15" fill="rgb(215,129,8)" fg:x="13340" fg:w="452"/><text x="17.5720%" y="1743.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (452 samples, 0.59%)</title><rect x="17.3220%" y="1717" width="0.5869%" height="15" fill="rgb(224,128,35)" fg:x="13340" fg:w="452"/><text x="17.5720%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (342 samples, 0.44%)</title><rect x="17.4648%" y="1701" width="0.4441%" height="15" fill="rgb(237,56,52)" fg:x="13450" fg:w="342"/><text x="17.7148%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (342 samples, 0.44%)</title><rect x="17.4648%" y="1685" width="0.4441%" height="15" fill="rgb(234,213,19)" fg:x="13450" fg:w="342"/><text x="17.7148%" y="1695.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (268 samples, 0.35%)</title><rect x="17.5609%" y="1669" width="0.3480%" height="15" fill="rgb(252,82,23)" fg:x="13524" fg:w="268"/><text x="17.8109%" y="1679.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (268 samples, 0.35%)</title><rect x="17.5609%" y="1653" width="0.3480%" height="15" fill="rgb(254,201,21)" fg:x="13524" fg:w="268"/><text x="17.8109%" y="1663.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (268 samples, 0.35%)</title><rect x="17.5609%" y="1637" width="0.3480%" height="15" fill="rgb(250,186,11)" fg:x="13524" fg:w="268"/><text x="17.8109%" y="1647.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (141 samples, 0.18%)</title><rect x="17.7258%" y="1621" width="0.1831%" height="15" fill="rgb(211,174,5)" fg:x="13651" fg:w="141"/><text x="17.9758%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.02%)</title><rect x="17.9089%" y="1733" width="0.0247%" height="15" fill="rgb(214,121,10)" fg:x="13792" fg:w="19"/><text x="18.1589%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (19 samples, 0.02%)</title><rect x="17.9089%" y="1717" width="0.0247%" height="15" fill="rgb(241,66,2)" fg:x="13792" fg:w="19"/><text x="18.1589%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (19 samples, 0.02%)</title><rect x="17.9089%" y="1701" width="0.0247%" height="15" fill="rgb(220,167,19)" fg:x="13792" fg:w="19"/><text x="18.1589%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (16 samples, 0.02%)</title><rect x="17.9128%" y="1685" width="0.0208%" height="15" fill="rgb(231,54,50)" fg:x="13795" fg:w="16"/><text x="18.1628%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (16 samples, 0.02%)</title><rect x="17.9128%" y="1669" width="0.0208%" height="15" fill="rgb(239,217,53)" fg:x="13795" fg:w="16"/><text x="18.1628%" y="1679.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (485 samples, 0.63%)</title><rect x="17.3220%" y="1781" width="0.6298%" height="15" fill="rgb(248,8,0)" fg:x="13340" fg:w="485"/><text x="17.5720%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (485 samples, 0.63%)</title><rect x="17.3220%" y="1765" width="0.6298%" height="15" fill="rgb(229,118,37)" fg:x="13340" fg:w="485"/><text x="17.5720%" y="1775.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (485 samples, 0.63%)</title><rect x="17.3220%" y="1749" width="0.6298%" height="15" fill="rgb(253,223,43)" fg:x="13340" fg:w="485"/><text x="17.5720%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (14 samples, 0.02%)</title><rect x="17.9336%" y="1733" width="0.0182%" height="15" fill="rgb(211,77,36)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (14 samples, 0.02%)</title><rect x="17.9336%" y="1717" width="0.0182%" height="15" fill="rgb(219,3,53)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (14 samples, 0.02%)</title><rect x="17.9336%" y="1701" width="0.0182%" height="15" fill="rgb(244,45,42)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1711.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="17.9336%" y="1685" width="0.0182%" height="15" fill="rgb(225,95,27)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="17.9336%" y="1669" width="0.0182%" height="15" fill="rgb(207,74,8)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.02%)</title><rect x="17.9336%" y="1653" width="0.0182%" height="15" fill="rgb(243,63,36)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.02%)</title><rect x="17.9336%" y="1637" width="0.0182%" height="15" fill="rgb(211,180,12)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.02%)</title><rect x="17.9336%" y="1621" width="0.0182%" height="15" fill="rgb(254,166,49)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1631.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="17.9336%" y="1605" width="0.0182%" height="15" fill="rgb(205,19,0)" fg:x="13811" fg:w="14"/><text x="18.1836%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (25 samples, 0.03%)</title><rect x="17.9868%" y="1493" width="0.0325%" height="15" fill="rgb(224,172,32)" fg:x="13852" fg:w="25"/><text x="18.2368%" y="1503.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (25 samples, 0.03%)</title><rect x="17.9868%" y="1477" width="0.0325%" height="15" fill="rgb(254,136,30)" fg:x="13852" fg:w="25"/><text x="18.2368%" y="1487.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (24 samples, 0.03%)</title><rect x="17.9881%" y="1461" width="0.0312%" height="15" fill="rgb(246,19,35)" fg:x="13853" fg:w="24"/><text x="18.2381%" y="1471.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (24 samples, 0.03%)</title><rect x="17.9881%" y="1445" width="0.0312%" height="15" fill="rgb(219,24,36)" fg:x="13853" fg:w="24"/><text x="18.2381%" y="1455.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (17 samples, 0.02%)</title><rect x="17.9972%" y="1429" width="0.0221%" height="15" fill="rgb(251,55,1)" fg:x="13860" fg:w="17"/><text x="18.2472%" y="1439.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.02%)</title><rect x="18.1855%" y="1413" width="0.0208%" height="15" fill="rgb(218,117,39)" fg:x="14005" fg:w="16"/><text x="18.4355%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (27 samples, 0.04%)</title><rect x="18.1725%" y="1445" width="0.0351%" height="15" fill="rgb(248,169,11)" fg:x="13995" fg:w="27"/><text x="18.4225%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (17 samples, 0.02%)</title><rect x="18.1855%" y="1429" width="0.0221%" height="15" fill="rgb(244,40,44)" fg:x="14005" fg:w="17"/><text x="18.4355%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (12 samples, 0.02%)</title><rect x="18.2076%" y="1413" width="0.0156%" height="15" fill="rgb(234,62,37)" fg:x="14022" fg:w="12"/><text x="18.4576%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="18.2076%" y="1397" width="0.0156%" height="15" fill="rgb(207,117,42)" fg:x="14022" fg:w="12"/><text x="18.4576%" y="1407.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="18.2076%" y="1381" width="0.0156%" height="15" fill="rgb(213,43,2)" fg:x="14022" fg:w="12"/><text x="18.4576%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (13 samples, 0.02%)</title><rect x="18.2076%" y="1429" width="0.0169%" height="15" fill="rgb(244,202,51)" fg:x="14022" fg:w="13"/><text x="18.4576%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (20 samples, 0.03%)</title><rect x="18.2076%" y="1445" width="0.0260%" height="15" fill="rgb(253,174,46)" fg:x="14022" fg:w="20"/><text x="18.4576%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (53 samples, 0.07%)</title><rect x="18.1673%" y="1461" width="0.0688%" height="15" fill="rgb(251,23,1)" fg:x="13991" fg:w="53"/><text x="18.4173%" y="1471.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (82 samples, 0.11%)</title><rect x="18.1309%" y="1477" width="0.1065%" height="15" fill="rgb(253,26,1)" fg:x="13963" fg:w="82"/><text x="18.3809%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (18 samples, 0.02%)</title><rect x="18.2452%" y="1477" width="0.0234%" height="15" fill="rgb(216,89,31)" fg:x="14051" fg:w="18"/><text x="18.4952%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (18 samples, 0.02%)</title><rect x="18.2452%" y="1461" width="0.0234%" height="15" fill="rgb(209,109,5)" fg:x="14051" fg:w="18"/><text x="18.4952%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (18 samples, 0.02%)</title><rect x="18.2452%" y="1445" width="0.0234%" height="15" fill="rgb(229,63,13)" fg:x="14051" fg:w="18"/><text x="18.4952%" y="1455.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (18 samples, 0.02%)</title><rect x="18.2452%" y="1429" width="0.0234%" height="15" fill="rgb(238,137,54)" fg:x="14051" fg:w="18"/><text x="18.4952%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="18.2452%" y="1413" width="0.0234%" height="15" fill="rgb(228,1,9)" fg:x="14051" fg:w="18"/><text x="18.4952%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="18.2452%" y="1397" width="0.0234%" height="15" fill="rgb(249,120,48)" fg:x="14051" fg:w="18"/><text x="18.4952%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="18.2452%" y="1381" width="0.0234%" height="15" fill="rgb(209,72,36)" fg:x="14051" fg:w="18"/><text x="18.4952%" y="1391.50"></text></g><g><title>malloc (16 samples, 0.02%)</title><rect x="18.2478%" y="1365" width="0.0208%" height="15" fill="rgb(247,98,49)" fg:x="14053" fg:w="16"/><text x="18.4978%" y="1375.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (233 samples, 0.30%)</title><rect x="17.9751%" y="1509" width="0.3026%" height="15" fill="rgb(233,75,36)" fg:x="13843" fg:w="233"/><text x="18.2251%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (199 samples, 0.26%)</title><rect x="18.0193%" y="1493" width="0.2584%" height="15" fill="rgb(225,14,24)" fg:x="13877" fg:w="199"/><text x="18.2693%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::parse_string (8 samples, 0.01%)</title><rect x="18.3491%" y="1397" width="0.0104%" height="15" fill="rgb(237,193,20)" fg:x="14131" fg:w="8"/><text x="18.5991%" y="1407.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (23 samples, 0.03%)</title><rect x="18.3478%" y="1445" width="0.0299%" height="15" fill="rgb(239,122,19)" fg:x="14130" fg:w="23"/><text x="18.5978%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (23 samples, 0.03%)</title><rect x="18.3478%" y="1429" width="0.0299%" height="15" fill="rgb(231,220,10)" fg:x="14130" fg:w="23"/><text x="18.5978%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (23 samples, 0.03%)</title><rect x="18.3478%" y="1413" width="0.0299%" height="15" fill="rgb(220,66,15)" fg:x="14130" fg:w="23"/><text x="18.5978%" y="1423.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (14 samples, 0.02%)</title><rect x="18.3595%" y="1397" width="0.0182%" height="15" fill="rgb(215,171,52)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (14 samples, 0.02%)</title><rect x="18.3595%" y="1381" width="0.0182%" height="15" fill="rgb(241,169,50)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1391.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (14 samples, 0.02%)</title><rect x="18.3595%" y="1365" width="0.0182%" height="15" fill="rgb(236,189,0)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (14 samples, 0.02%)</title><rect x="18.3595%" y="1349" width="0.0182%" height="15" fill="rgb(217,147,20)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.02%)</title><rect x="18.3595%" y="1333" width="0.0182%" height="15" fill="rgb(206,188,39)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.02%)</title><rect x="18.3595%" y="1317" width="0.0182%" height="15" fill="rgb(227,118,25)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.02%)</title><rect x="18.3595%" y="1301" width="0.0182%" height="15" fill="rgb(248,171,40)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.02%)</title><rect x="18.3595%" y="1285" width="0.0182%" height="15" fill="rgb(251,90,54)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="18.3595%" y="1269" width="0.0182%" height="15" fill="rgb(234,11,46)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="18.3595%" y="1253" width="0.0182%" height="15" fill="rgb(229,134,13)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="18.3595%" y="1237" width="0.0182%" height="15" fill="rgb(223,129,3)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="18.3595%" y="1221" width="0.0182%" height="15" fill="rgb(221,124,13)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="18.3595%" y="1205" width="0.0182%" height="15" fill="rgb(234,3,18)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="18.3595%" y="1189" width="0.0182%" height="15" fill="rgb(249,199,20)" fg:x="14139" fg:w="14"/><text x="18.6095%" y="1199.50"></text></g><g><title>malloc (13 samples, 0.02%)</title><rect x="18.3608%" y="1173" width="0.0169%" height="15" fill="rgb(224,134,6)" fg:x="14140" fg:w="13"/><text x="18.6108%" y="1183.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="18.3673%" y="1157" width="0.0104%" height="15" fill="rgb(254,83,26)" fg:x="14145" fg:w="8"/><text x="18.6173%" y="1167.50"></text></g><g><title>bcs::de::Deserializer::peek (15 samples, 0.02%)</title><rect x="18.4179%" y="1365" width="0.0195%" height="15" fill="rgb(217,88,9)" fg:x="14184" fg:w="15"/><text x="18.6679%" y="1375.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (9 samples, 0.01%)</title><rect x="18.4257%" y="1349" width="0.0117%" height="15" fill="rgb(225,73,2)" fg:x="14190" fg:w="9"/><text x="18.6757%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (73 samples, 0.09%)</title><rect x="18.3478%" y="1461" width="0.0948%" height="15" fill="rgb(226,44,39)" fg:x="14130" fg:w="73"/><text x="18.5978%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (50 samples, 0.06%)</title><rect x="18.3777%" y="1445" width="0.0649%" height="15" fill="rgb(228,53,17)" fg:x="14153" fg:w="50"/><text x="18.6277%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (50 samples, 0.06%)</title><rect x="18.3777%" y="1429" width="0.0649%" height="15" fill="rgb(212,27,27)" fg:x="14153" fg:w="50"/><text x="18.6277%" y="1439.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (44 samples, 0.06%)</title><rect x="18.3854%" y="1413" width="0.0571%" height="15" fill="rgb(241,50,6)" fg:x="14159" fg:w="44"/><text x="18.6354%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (25 samples, 0.03%)</title><rect x="18.4101%" y="1397" width="0.0325%" height="15" fill="rgb(225,28,51)" fg:x="14178" fg:w="25"/><text x="18.6601%" y="1407.50"></text></g><g><title>bcs::de::Deserializer::next (25 samples, 0.03%)</title><rect x="18.4101%" y="1381" width="0.0325%" height="15" fill="rgb(215,33,16)" fg:x="14178" fg:w="25"/><text x="18.6601%" y="1391.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (40 samples, 0.05%)</title><rect x="18.4426%" y="1461" width="0.0519%" height="15" fill="rgb(243,40,39)" fg:x="14203" fg:w="40"/><text x="18.6926%" y="1471.50"></text></g><g><title>core::cmp::PartialOrd::ge (40 samples, 0.05%)</title><rect x="18.4426%" y="1445" width="0.0519%" height="15" fill="rgb(225,11,42)" fg:x="14203" fg:w="40"/><text x="18.6926%" y="1455.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (35 samples, 0.05%)</title><rect x="18.4491%" y="1429" width="0.0454%" height="15" fill="rgb(241,220,38)" fg:x="14208" fg:w="35"/><text x="18.6991%" y="1439.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (35 samples, 0.05%)</title><rect x="18.4491%" y="1413" width="0.0454%" height="15" fill="rgb(244,52,35)" fg:x="14208" fg:w="35"/><text x="18.6991%" y="1423.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (35 samples, 0.05%)</title><rect x="18.4491%" y="1397" width="0.0454%" height="15" fill="rgb(246,42,46)" fg:x="14208" fg:w="35"/><text x="18.6991%" y="1407.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="18.4530%" y="1381" width="0.0416%" height="15" fill="rgb(205,184,13)" fg:x="14211" fg:w="32"/><text x="18.7030%" y="1391.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (128 samples, 0.17%)</title><rect x="18.3348%" y="1477" width="0.1662%" height="15" fill="rgb(209,48,36)" fg:x="14120" fg:w="128"/><text x="18.5848%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.04%)</title><rect x="18.6010%" y="1301" width="0.0403%" height="15" fill="rgb(244,34,51)" fg:x="14325" fg:w="31"/><text x="18.8510%" y="1311.50"></text></g><g><title>bcs::de::Deserializer::next (8 samples, 0.01%)</title><rect x="18.7373%" y="1237" width="0.0104%" height="15" fill="rgb(221,107,33)" fg:x="14430" fg:w="8"/><text x="18.9873%" y="1247.50"></text></g><g><title>bcs::de::Deserializer::parse_length (37 samples, 0.05%)</title><rect x="18.7010%" y="1269" width="0.0480%" height="15" fill="rgb(224,203,12)" fg:x="14402" fg:w="37"/><text x="18.9510%" y="1279.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (34 samples, 0.04%)</title><rect x="18.7049%" y="1253" width="0.0441%" height="15" fill="rgb(230,215,18)" fg:x="14405" fg:w="34"/><text x="18.9549%" y="1263.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (46 samples, 0.06%)</title><rect x="18.6906%" y="1285" width="0.0597%" height="15" fill="rgb(206,185,35)" fg:x="14394" fg:w="46"/><text x="18.9406%" y="1295.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (101 samples, 0.13%)</title><rect x="18.7503%" y="1285" width="0.1311%" height="15" fill="rgb(228,140,34)" fg:x="14440" fg:w="101"/><text x="19.0003%" y="1295.50"></text></g><g><title>bcs::de::Deserializer::parse_string (410 samples, 0.53%)</title><rect x="18.6413%" y="1301" width="0.5324%" height="15" fill="rgb(208,93,13)" fg:x="14356" fg:w="410"/><text x="18.8913%" y="1311.50"></text></g><g><title>core::str::converts::from_utf8 (225 samples, 0.29%)</title><rect x="18.8815%" y="1285" width="0.2922%" height="15" fill="rgb(221,193,39)" fg:x="14541" fg:w="225"/><text x="19.1315%" y="1295.50"></text></g><g><title>core::str::validations::run_utf8_validation (173 samples, 0.22%)</title><rect x="18.9490%" y="1269" width="0.2246%" height="15" fill="rgb(241,132,34)" fg:x="14593" fg:w="173"/><text x="19.1990%" y="1279.50"></text></g><g><title>__rust_alloc (11 samples, 0.01%)</title><rect x="19.2074%" y="1077" width="0.0143%" height="15" fill="rgb(221,141,10)" fg:x="14792" fg:w="11"/><text x="19.4574%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (391 samples, 0.51%)</title><rect x="19.1736%" y="1173" width="0.5077%" height="15" fill="rgb(226,90,31)" fg:x="14766" fg:w="391"/><text x="19.4236%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (391 samples, 0.51%)</title><rect x="19.1736%" y="1157" width="0.5077%" height="15" fill="rgb(243,75,5)" fg:x="14766" fg:w="391"/><text x="19.4236%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (391 samples, 0.51%)</title><rect x="19.1736%" y="1141" width="0.5077%" height="15" fill="rgb(227,156,21)" fg:x="14766" fg:w="391"/><text x="19.4236%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (378 samples, 0.49%)</title><rect x="19.1905%" y="1125" width="0.4908%" height="15" fill="rgb(250,195,8)" fg:x="14779" fg:w="378"/><text x="19.4405%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (378 samples, 0.49%)</title><rect x="19.1905%" y="1109" width="0.4908%" height="15" fill="rgb(220,134,5)" fg:x="14779" fg:w="378"/><text x="19.4405%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (378 samples, 0.49%)</title><rect x="19.1905%" y="1093" width="0.4908%" height="15" fill="rgb(246,106,34)" fg:x="14779" fg:w="378"/><text x="19.4405%" y="1103.50"></text></g><g><title>malloc (354 samples, 0.46%)</title><rect x="19.2217%" y="1077" width="0.4597%" height="15" fill="rgb(205,1,4)" fg:x="14803" fg:w="354"/><text x="19.4717%" y="1087.50"></text></g><g><title>[libc.so.6] (182 samples, 0.24%)</title><rect x="19.4450%" y="1061" width="0.2363%" height="15" fill="rgb(224,151,29)" fg:x="14975" fg:w="182"/><text x="19.6950%" y="1071.50"></text></g><g><title>[libc.so.6] (37 samples, 0.05%)</title><rect x="19.6333%" y="1045" width="0.0480%" height="15" fill="rgb(251,196,0)" fg:x="15120" fg:w="37"/><text x="19.8833%" y="1055.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (884 samples, 1.15%)</title><rect x="18.5880%" y="1413" width="1.1479%" height="15" fill="rgb(212,127,0)" fg:x="14315" fg:w="884"/><text x="18.8380%" y="1423.50"></text></g><g><title>serde::de::SeqAccess::next_element (876 samples, 1.14%)</title><rect x="18.5984%" y="1397" width="1.1375%" height="15" fill="rgb(236,71,53)" fg:x="14323" fg:w="876"/><text x="18.8484%" y="1407.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (876 samples, 1.14%)</title><rect x="18.5984%" y="1381" width="1.1375%" height="15" fill="rgb(227,99,0)" fg:x="14323" fg:w="876"/><text x="18.8484%" y="1391.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (875 samples, 1.14%)</title><rect x="18.5997%" y="1365" width="1.1362%" height="15" fill="rgb(239,89,21)" fg:x="14324" fg:w="875"/><text x="18.8497%" y="1375.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (875 samples, 1.14%)</title><rect x="18.5997%" y="1349" width="1.1362%" height="15" fill="rgb(243,122,19)" fg:x="14324" fg:w="875"/><text x="18.8497%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (875 samples, 1.14%)</title><rect x="18.5997%" y="1333" width="1.1362%" height="15" fill="rgb(229,192,45)" fg:x="14324" fg:w="875"/><text x="18.8497%" y="1343.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (875 samples, 1.14%)</title><rect x="18.5997%" y="1317" width="1.1362%" height="15" fill="rgb(235,165,35)" fg:x="14324" fg:w="875"/><text x="18.8497%" y="1327.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (433 samples, 0.56%)</title><rect x="19.1736%" y="1301" width="0.5623%" height="15" fill="rgb(253,202,0)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1311.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (433 samples, 0.56%)</title><rect x="19.1736%" y="1285" width="0.5623%" height="15" fill="rgb(235,51,20)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1295.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (433 samples, 0.56%)</title><rect x="19.1736%" y="1269" width="0.5623%" height="15" fill="rgb(218,95,46)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (433 samples, 0.56%)</title><rect x="19.1736%" y="1253" width="0.5623%" height="15" fill="rgb(212,81,10)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (433 samples, 0.56%)</title><rect x="19.1736%" y="1237" width="0.5623%" height="15" fill="rgb(240,59,0)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (433 samples, 0.56%)</title><rect x="19.1736%" y="1221" width="0.5623%" height="15" fill="rgb(212,191,42)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (433 samples, 0.56%)</title><rect x="19.1736%" y="1205" width="0.5623%" height="15" fill="rgb(233,140,3)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (433 samples, 0.56%)</title><rect x="19.1736%" y="1189" width="0.5623%" height="15" fill="rgb(215,69,23)" fg:x="14766" fg:w="433"/><text x="19.4236%" y="1199.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (42 samples, 0.05%)</title><rect x="19.6813%" y="1173" width="0.0545%" height="15" fill="rgb(240,202,20)" fg:x="15157" fg:w="42"/><text x="19.9313%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.05%)</title><rect x="19.6813%" y="1157" width="0.0545%" height="15" fill="rgb(209,146,50)" fg:x="15157" fg:w="42"/><text x="19.9313%" y="1167.50"></text></g><g><title>[libc.so.6] (42 samples, 0.05%)</title><rect x="19.6813%" y="1141" width="0.0545%" height="15" fill="rgb(253,102,54)" fg:x="15157" fg:w="42"/><text x="19.9313%" y="1151.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (11 samples, 0.01%)</title><rect x="19.7359%" y="1413" width="0.0143%" height="15" fill="rgb(250,173,47)" fg:x="15199" fg:w="11"/><text x="19.9859%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::leave_named_container (13 samples, 0.02%)</title><rect x="19.7502%" y="1413" width="0.0169%" height="15" fill="rgb(232,142,7)" fg:x="15210" fg:w="13"/><text x="20.0002%" y="1423.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (983 samples, 1.28%)</title><rect x="18.5010%" y="1445" width="1.2764%" height="15" fill="rgb(230,157,47)" fg:x="14248" fg:w="983"/><text x="18.7510%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (982 samples, 1.28%)</title><rect x="18.5023%" y="1429" width="1.2751%" height="15" fill="rgb(214,177,35)" fg:x="14249" fg:w="982"/><text x="18.7523%" y="1439.50"></text></g><g><title>bcs::de::SeqDeserializer::new (8 samples, 0.01%)</title><rect x="19.7670%" y="1413" width="0.0104%" height="15" fill="rgb(234,119,46)" fg:x="15223" fg:w="8"/><text x="20.0170%" y="1423.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (8 samples, 0.01%)</title><rect x="19.8177%" y="1221" width="0.0104%" height="15" fill="rgb(241,180,50)" fg:x="15262" fg:w="8"/><text x="20.0677%" y="1231.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (14 samples, 0.02%)</title><rect x="19.8164%" y="1253" width="0.0182%" height="15" fill="rgb(221,54,25)" fg:x="15261" fg:w="14"/><text x="20.0664%" y="1263.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.02%)</title><rect x="19.8164%" y="1237" width="0.0182%" height="15" fill="rgb(209,157,44)" fg:x="15261" fg:w="14"/><text x="20.0664%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.02%)</title><rect x="19.8164%" y="1269" width="0.0195%" height="15" fill="rgb(246,115,41)" fg:x="15261" fg:w="15"/><text x="20.0664%" y="1279.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (19 samples, 0.02%)</title><rect x="19.8125%" y="1317" width="0.0247%" height="15" fill="rgb(229,86,1)" fg:x="15258" fg:w="19"/><text x="20.0625%" y="1327.50"></text></g><g><title>serde::de::SeqAccess::next_element (16 samples, 0.02%)</title><rect x="19.8164%" y="1301" width="0.0208%" height="15" fill="rgb(240,108,53)" fg:x="15261" fg:w="16"/><text x="20.0664%" y="1311.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (16 samples, 0.02%)</title><rect x="19.8164%" y="1285" width="0.0208%" height="15" fill="rgb(227,134,2)" fg:x="15261" fg:w="16"/><text x="20.0664%" y="1295.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.03%)</title><rect x="19.8125%" y="1365" width="0.0312%" height="15" fill="rgb(213,129,25)" fg:x="15258" fg:w="24"/><text x="20.0625%" y="1375.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::KnownAttribute&gt;::deserialize (24 samples, 0.03%)</title><rect x="19.8125%" y="1349" width="0.0312%" height="15" fill="rgb(226,35,21)" fg:x="15258" fg:w="24"/><text x="20.0625%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (24 samples, 0.03%)</title><rect x="19.8125%" y="1333" width="0.0312%" height="15" fill="rgb(208,129,26)" fg:x="15258" fg:w="24"/><text x="20.0625%" y="1343.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (52 samples, 0.07%)</title><rect x="19.7774%" y="1413" width="0.0675%" height="15" fill="rgb(224,83,6)" fg:x="15231" fg:w="52"/><text x="20.0274%" y="1423.50"></text></g><g><title>serde::de::SeqAccess::next_element (37 samples, 0.05%)</title><rect x="19.7969%" y="1397" width="0.0480%" height="15" fill="rgb(227,52,39)" fg:x="15246" fg:w="37"/><text x="20.0469%" y="1407.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (35 samples, 0.05%)</title><rect x="19.7995%" y="1381" width="0.0454%" height="15" fill="rgb(241,30,17)" fg:x="15248" fg:w="35"/><text x="20.0495%" y="1391.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1,454 samples, 1.89%)</title><rect x="17.9608%" y="1525" width="1.8880%" height="15" fill="rgb(246,186,42)" fg:x="13832" fg:w="1454"/><text x="18.2108%" y="1535.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (1,210 samples, 1.57%)</title><rect x="18.2777%" y="1509" width="1.5712%" height="15" fill="rgb(221,169,15)" fg:x="14076" fg:w="1210"/><text x="18.5277%" y="1519.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,210 samples, 1.57%)</title><rect x="18.2777%" y="1493" width="1.5712%" height="15" fill="rgb(235,108,21)" fg:x="14076" fg:w="1210"/><text x="18.5277%" y="1503.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1,038 samples, 1.35%)</title><rect x="18.5010%" y="1477" width="1.3478%" height="15" fill="rgb(219,148,30)" fg:x="14248" fg:w="1038"/><text x="18.7510%" y="1487.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,038 samples, 1.35%)</title><rect x="18.5010%" y="1461" width="1.3478%" height="15" fill="rgb(220,109,5)" fg:x="14248" fg:w="1038"/><text x="18.7510%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (55 samples, 0.07%)</title><rect x="19.7774%" y="1445" width="0.0714%" height="15" fill="rgb(213,203,48)" fg:x="15231" fg:w="55"/><text x="20.0274%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (55 samples, 0.07%)</title><rect x="19.7774%" y="1429" width="0.0714%" height="15" fill="rgb(244,71,33)" fg:x="15231" fg:w="55"/><text x="20.0274%" y="1439.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1701" width="1.9088%" height="15" fill="rgb(209,23,2)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1711.50">&lt;..</text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1685" width="1.9088%" height="15" fill="rgb(219,97,7)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1695.50">a..</text></g><g><title>bcs::de::from_bytes (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1669" width="1.9088%" height="15" fill="rgb(216,161,23)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1679.50">b..</text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1653" width="1.9088%" height="15" fill="rgb(207,45,42)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1663.50">a..</text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1637" width="1.9088%" height="15" fill="rgb(241,61,4)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1647.50">&lt;..</text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1621" width="1.9088%" height="15" fill="rgb(236,170,1)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1631.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1605" width="1.9088%" height="15" fill="rgb(239,72,5)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1615.50">s..</text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1589" width="1.9088%" height="15" fill="rgb(214,13,50)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1599.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1573" width="1.9088%" height="15" fill="rgb(224,88,9)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1583.50">&lt;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1557" width="1.9088%" height="15" fill="rgb(238,192,34)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1567.50">s..</text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (1,470 samples, 1.91%)</title><rect x="17.9517%" y="1541" width="1.9088%" height="15" fill="rgb(217,203,50)" fg:x="13825" fg:w="1470"/><text x="18.2017%" y="1551.50">&lt;..</text></g><g><title>[libc.so.6] (37 samples, 0.05%)</title><rect x="19.8761%" y="1253" width="0.0480%" height="15" fill="rgb(241,123,32)" fg:x="15307" fg:w="37"/><text x="20.1261%" y="1263.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="19.8826%" y="1237" width="0.0416%" height="15" fill="rgb(248,151,39)" fg:x="15312" fg:w="32"/><text x="20.1326%" y="1247.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (50 samples, 0.06%)</title><rect x="19.8605%" y="1557" width="0.0649%" height="15" fill="rgb(208,89,6)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (50 samples, 0.06%)</title><rect x="19.8605%" y="1541" width="0.0649%" height="15" fill="rgb(254,43,26)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (50 samples, 0.06%)</title><rect x="19.8605%" y="1525" width="0.0649%" height="15" fill="rgb(216,158,13)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (50 samples, 0.06%)</title><rect x="19.8605%" y="1509" width="0.0649%" height="15" fill="rgb(212,47,37)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (50 samples, 0.06%)</title><rect x="19.8605%" y="1493" width="0.0649%" height="15" fill="rgb(254,16,10)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (50 samples, 0.06%)</title><rect x="19.8605%" y="1477" width="0.0649%" height="15" fill="rgb(223,228,16)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (50 samples, 0.06%)</title><rect x="19.8605%" y="1461" width="0.0649%" height="15" fill="rgb(249,108,50)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.06%)</title><rect x="19.8605%" y="1445" width="0.0649%" height="15" fill="rgb(208,220,5)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.06%)</title><rect x="19.8605%" y="1429" width="0.0649%" height="15" fill="rgb(217,89,48)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.06%)</title><rect x="19.8605%" y="1413" width="0.0649%" height="15" fill="rgb(212,113,41)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="19.8605%" y="1397" width="0.0649%" height="15" fill="rgb(231,127,5)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="19.8605%" y="1381" width="0.0649%" height="15" fill="rgb(217,141,17)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.06%)</title><rect x="19.8605%" y="1365" width="0.0649%" height="15" fill="rgb(245,125,54)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.06%)</title><rect x="19.8605%" y="1349" width="0.0649%" height="15" fill="rgb(248,125,3)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.06%)</title><rect x="19.8605%" y="1333" width="0.0649%" height="15" fill="rgb(236,119,51)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50 samples, 0.06%)</title><rect x="19.8605%" y="1317" width="0.0649%" height="15" fill="rgb(239,99,8)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (50 samples, 0.06%)</title><rect x="19.8605%" y="1301" width="0.0649%" height="15" fill="rgb(224,228,4)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (50 samples, 0.06%)</title><rect x="19.8605%" y="1285" width="0.0649%" height="15" fill="rgb(220,131,45)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1295.50"></text></g><g><title>realloc (50 samples, 0.06%)</title><rect x="19.8605%" y="1269" width="0.0649%" height="15" fill="rgb(215,62,5)" fg:x="15295" fg:w="50"/><text x="20.1105%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.04%)</title><rect x="19.9294%" y="1157" width="0.0351%" height="15" fill="rgb(253,12,24)" fg:x="15348" fg:w="27"/><text x="20.1794%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.04%)</title><rect x="19.9294%" y="1141" width="0.0351%" height="15" fill="rgb(248,120,50)" fg:x="15348" fg:w="27"/><text x="20.1794%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.03%)</title><rect x="19.9320%" y="1125" width="0.0325%" height="15" fill="rgb(245,194,10)" fg:x="15350" fg:w="25"/><text x="20.1820%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.03%)</title><rect x="19.9320%" y="1109" width="0.0325%" height="15" fill="rgb(241,149,38)" fg:x="15350" fg:w="25"/><text x="20.1820%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.03%)</title><rect x="19.9320%" y="1093" width="0.0325%" height="15" fill="rgb(219,215,7)" fg:x="15350" fg:w="25"/><text x="20.1820%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.03%)</title><rect x="19.9333%" y="1077" width="0.0312%" height="15" fill="rgb(208,120,31)" fg:x="15351" fg:w="24"/><text x="20.1833%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.03%)</title><rect x="19.9333%" y="1061" width="0.0312%" height="15" fill="rgb(244,30,8)" fg:x="15351" fg:w="24"/><text x="20.1833%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.03%)</title><rect x="19.9333%" y="1045" width="0.0312%" height="15" fill="rgb(238,35,44)" fg:x="15351" fg:w="24"/><text x="20.1833%" y="1055.50"></text></g><g><title>realloc (23 samples, 0.03%)</title><rect x="19.9346%" y="1029" width="0.0299%" height="15" fill="rgb(243,218,37)" fg:x="15352" fg:w="23"/><text x="20.1846%" y="1039.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="19.9397%" y="1013" width="0.0247%" height="15" fill="rgb(218,169,10)" fg:x="15356" fg:w="19"/><text x="20.1897%" y="1023.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="19.9436%" y="997" width="0.0208%" height="15" fill="rgb(221,144,10)" fg:x="15359" fg:w="16"/><text x="20.1936%" y="1007.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (30 samples, 0.04%)</title><rect x="19.9281%" y="1269" width="0.0390%" height="15" fill="rgb(226,41,38)" fg:x="15347" fg:w="30"/><text x="20.1781%" y="1279.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (30 samples, 0.04%)</title><rect x="19.9281%" y="1253" width="0.0390%" height="15" fill="rgb(228,3,1)" fg:x="15347" fg:w="30"/><text x="20.1781%" y="1263.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (30 samples, 0.04%)</title><rect x="19.9281%" y="1237" width="0.0390%" height="15" fill="rgb(209,129,12)" fg:x="15347" fg:w="30"/><text x="20.1781%" y="1247.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (30 samples, 0.04%)</title><rect x="19.9281%" y="1221" width="0.0390%" height="15" fill="rgb(213,136,33)" fg:x="15347" fg:w="30"/><text x="20.1781%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.04%)</title><rect x="19.9281%" y="1205" width="0.0390%" height="15" fill="rgb(209,181,29)" fg:x="15347" fg:w="30"/><text x="20.1781%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.04%)</title><rect x="19.9281%" y="1189" width="0.0390%" height="15" fill="rgb(234,173,18)" fg:x="15347" fg:w="30"/><text x="20.1781%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.04%)</title><rect x="19.9281%" y="1173" width="0.0390%" height="15" fill="rgb(227,73,47)" fg:x="15347" fg:w="30"/><text x="20.1781%" y="1183.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (32 samples, 0.04%)</title><rect x="19.9268%" y="1317" width="0.0416%" height="15" fill="rgb(234,9,34)" fg:x="15346" fg:w="32"/><text x="20.1768%" y="1327.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (32 samples, 0.04%)</title><rect x="19.9268%" y="1301" width="0.0416%" height="15" fill="rgb(235,172,15)" fg:x="15346" fg:w="32"/><text x="20.1768%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (31 samples, 0.04%)</title><rect x="19.9281%" y="1285" width="0.0403%" height="15" fill="rgb(245,61,2)" fg:x="15347" fg:w="31"/><text x="20.1781%" y="1295.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (9 samples, 0.01%)</title><rect x="19.9683%" y="1317" width="0.0117%" height="15" fill="rgb(238,39,47)" fg:x="15378" fg:w="9"/><text x="20.2183%" y="1327.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.01%)</title><rect x="19.9683%" y="1301" width="0.0117%" height="15" fill="rgb(234,37,24)" fg:x="15378" fg:w="9"/><text x="20.2183%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (8 samples, 0.01%)</title><rect x="19.9696%" y="1285" width="0.0104%" height="15" fill="rgb(248,223,24)" fg:x="15379" fg:w="8"/><text x="20.2196%" y="1295.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (8 samples, 0.01%)</title><rect x="19.9696%" y="1269" width="0.0104%" height="15" fill="rgb(223,12,15)" fg:x="15379" fg:w="8"/><text x="20.2196%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (8 samples, 0.01%)</title><rect x="19.9696%" y="1253" width="0.0104%" height="15" fill="rgb(249,6,3)" fg:x="15379" fg:w="8"/><text x="20.2196%" y="1263.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (8 samples, 0.01%)</title><rect x="19.9696%" y="1237" width="0.0104%" height="15" fill="rgb(237,105,33)" fg:x="15379" fg:w="8"/><text x="20.2196%" y="1247.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (44 samples, 0.06%)</title><rect x="19.9255%" y="1365" width="0.0571%" height="15" fill="rgb(252,208,35)" fg:x="15345" fg:w="44"/><text x="20.1755%" y="1375.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (44 samples, 0.06%)</title><rect x="19.9255%" y="1349" width="0.0571%" height="15" fill="rgb(215,181,35)" fg:x="15345" fg:w="44"/><text x="20.1755%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 0.06%)</title><rect x="19.9268%" y="1333" width="0.0558%" height="15" fill="rgb(246,212,3)" fg:x="15346" fg:w="43"/><text x="20.1768%" y="1343.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (103 samples, 0.13%)</title><rect x="19.8605%" y="1669" width="0.1337%" height="15" fill="rgb(247,156,24)" fg:x="15295" fg:w="103"/><text x="20.1105%" y="1679.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (103 samples, 0.13%)</title><rect x="19.8605%" y="1653" width="0.1337%" height="15" fill="rgb(248,9,31)" fg:x="15295" fg:w="103"/><text x="20.1105%" y="1663.50"></text></g><g><title>bcs::ser::to_bytes (103 samples, 0.13%)</title><rect x="19.8605%" y="1637" width="0.1337%" height="15" fill="rgb(234,26,45)" fg:x="15295" fg:w="103"/><text x="20.1105%" y="1647.50"></text></g><g><title>bcs::ser::serialize_into (103 samples, 0.13%)</title><rect x="19.8605%" y="1621" width="0.1337%" height="15" fill="rgb(249,11,32)" fg:x="15295" fg:w="103"/><text x="20.1105%" y="1631.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (103 samples, 0.13%)</title><rect x="19.8605%" y="1605" width="0.1337%" height="15" fill="rgb(249,162,33)" fg:x="15295" fg:w="103"/><text x="20.1105%" y="1615.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (103 samples, 0.13%)</title><rect x="19.8605%" y="1589" width="0.1337%" height="15" fill="rgb(232,4,32)" fg:x="15295" fg:w="103"/><text x="20.1105%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (103 samples, 0.13%)</title><rect x="19.8605%" y="1573" width="0.1337%" height="15" fill="rgb(212,5,45)" fg:x="15295" fg:w="103"/><text x="20.1105%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (53 samples, 0.07%)</title><rect x="19.9255%" y="1557" width="0.0688%" height="15" fill="rgb(227,95,13)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1567.50"></text></g><g><title>serde::ser::Serializer::collect_seq (53 samples, 0.07%)</title><rect x="19.9255%" y="1541" width="0.0688%" height="15" fill="rgb(223,205,10)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (53 samples, 0.07%)</title><rect x="19.9255%" y="1525" width="0.0688%" height="15" fill="rgb(222,178,8)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 0.07%)</title><rect x="19.9255%" y="1509" width="0.0688%" height="15" fill="rgb(216,13,22)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (53 samples, 0.07%)</title><rect x="19.9255%" y="1493" width="0.0688%" height="15" fill="rgb(240,167,12)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1503.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (53 samples, 0.07%)</title><rect x="19.9255%" y="1477" width="0.0688%" height="15" fill="rgb(235,68,35)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (53 samples, 0.07%)</title><rect x="19.9255%" y="1461" width="0.0688%" height="15" fill="rgb(253,40,27)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1471.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (53 samples, 0.07%)</title><rect x="19.9255%" y="1445" width="0.0688%" height="15" fill="rgb(214,19,28)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1455.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (53 samples, 0.07%)</title><rect x="19.9255%" y="1429" width="0.0688%" height="15" fill="rgb(210,167,45)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1439.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (53 samples, 0.07%)</title><rect x="19.9255%" y="1413" width="0.0688%" height="15" fill="rgb(232,97,40)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1423.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (53 samples, 0.07%)</title><rect x="19.9255%" y="1397" width="0.0688%" height="15" fill="rgb(250,35,23)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1407.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_serialize (53 samples, 0.07%)</title><rect x="19.9255%" y="1381" width="0.0688%" height="15" fill="rgb(248,47,53)" fg:x="15345" fg:w="53"/><text x="20.1755%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.01%)</title><rect x="19.9826%" y="1365" width="0.0117%" height="15" fill="rgb(226,58,50)" fg:x="15389" fg:w="9"/><text x="20.2326%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.01%)</title><rect x="19.9839%" y="1349" width="0.0104%" height="15" fill="rgb(217,105,26)" fg:x="15390" fg:w="8"/><text x="20.2339%" y="1359.50"></text></g><g><title>move_core_types::safe_serialize::TYPE_TAG_DEPTH::__getit (8 samples, 0.01%)</title><rect x="19.9839%" y="1333" width="0.0104%" height="15" fill="rgb(208,64,1)" fg:x="15390" fg:w="8"/><text x="20.2339%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="20.0021%" y="1525" width="0.0156%" height="15" fill="rgb(214,80,1)" fg:x="15404" fg:w="12"/><text x="20.2521%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="20.0021%" y="1509" width="0.0156%" height="15" fill="rgb(206,175,26)" fg:x="15404" fg:w="12"/><text x="20.2521%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="20.0021%" y="1493" width="0.0156%" height="15" fill="rgb(235,156,37)" fg:x="15404" fg:w="12"/><text x="20.2521%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="20.0021%" y="1477" width="0.0156%" height="15" fill="rgb(213,100,9)" fg:x="15404" fg:w="12"/><text x="20.2521%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="20.0021%" y="1461" width="0.0156%" height="15" fill="rgb(241,15,13)" fg:x="15404" fg:w="12"/><text x="20.2521%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="20.0021%" y="1445" width="0.0156%" height="15" fill="rgb(205,97,43)" fg:x="15404" fg:w="12"/><text x="20.2521%" y="1455.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="20.0034%" y="1429" width="0.0143%" height="15" fill="rgb(216,106,32)" fg:x="15405" fg:w="11"/><text x="20.2534%" y="1439.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (33 samples, 0.04%)</title><rect x="20.0008%" y="1605" width="0.0429%" height="15" fill="rgb(226,200,8)" fg:x="15403" fg:w="33"/><text x="20.2508%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.04%)</title><rect x="20.0008%" y="1589" width="0.0429%" height="15" fill="rgb(244,54,29)" fg:x="15403" fg:w="33"/><text x="20.2508%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.04%)</title><rect x="20.0021%" y="1573" width="0.0416%" height="15" fill="rgb(252,169,12)" fg:x="15404" fg:w="32"/><text x="20.2521%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.04%)</title><rect x="20.0021%" y="1557" width="0.0416%" height="15" fill="rgb(231,199,11)" fg:x="15404" fg:w="32"/><text x="20.2521%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.04%)</title><rect x="20.0021%" y="1541" width="0.0416%" height="15" fill="rgb(233,191,18)" fg:x="15404" fg:w="32"/><text x="20.2521%" y="1551.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.03%)</title><rect x="20.0177%" y="1525" width="0.0260%" height="15" fill="rgb(215,83,47)" fg:x="15416" fg:w="20"/><text x="20.2677%" y="1535.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.03%)</title><rect x="20.0177%" y="1509" width="0.0260%" height="15" fill="rgb(251,67,19)" fg:x="15416" fg:w="20"/><text x="20.2677%" y="1519.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="20.0177%" y="1493" width="0.0260%" height="15" fill="rgb(240,7,20)" fg:x="15416" fg:w="20"/><text x="20.2677%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (10 samples, 0.01%)</title><rect x="20.0631%" y="1477" width="0.0130%" height="15" fill="rgb(210,150,26)" fg:x="15451" fg:w="10"/><text x="20.3131%" y="1487.50"></text></g><g><title>serde_bytes::serialize (10 samples, 0.01%)</title><rect x="20.0631%" y="1461" width="0.0130%" height="15" fill="rgb(228,75,42)" fg:x="15451" fg:w="10"/><text x="20.3131%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (10 samples, 0.01%)</title><rect x="20.0631%" y="1445" width="0.0130%" height="15" fill="rgb(237,134,48)" fg:x="15451" fg:w="10"/><text x="20.3131%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (10 samples, 0.01%)</title><rect x="20.0631%" y="1429" width="0.0130%" height="15" fill="rgb(205,80,50)" fg:x="15451" fg:w="10"/><text x="20.3131%" y="1439.50"></text></g><g><title>bcs::ser::serialize_into (14 samples, 0.02%)</title><rect x="20.0631%" y="1541" width="0.0182%" height="15" fill="rgb(217,74,48)" fg:x="15451" fg:w="14"/><text x="20.3131%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 0.02%)</title><rect x="20.0631%" y="1525" width="0.0182%" height="15" fill="rgb(205,82,50)" fg:x="15451" fg:w="14"/><text x="20.3131%" y="1535.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (14 samples, 0.02%)</title><rect x="20.0631%" y="1509" width="0.0182%" height="15" fill="rgb(228,1,33)" fg:x="15451" fg:w="14"/><text x="20.3131%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (14 samples, 0.02%)</title><rect x="20.0631%" y="1493" width="0.0182%" height="15" fill="rgb(214,50,23)" fg:x="15451" fg:w="14"/><text x="20.3131%" y="1503.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.04%)</title><rect x="20.0436%" y="1605" width="0.0390%" height="15" fill="rgb(210,62,9)" fg:x="15436" fg:w="30"/><text x="20.2936%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (29 samples, 0.04%)</title><rect x="20.0449%" y="1589" width="0.0377%" height="15" fill="rgb(210,104,37)" fg:x="15437" fg:w="29"/><text x="20.2949%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (29 samples, 0.04%)</title><rect x="20.0449%" y="1573" width="0.0377%" height="15" fill="rgb(232,104,43)" fg:x="15437" fg:w="29"/><text x="20.2949%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (23 samples, 0.03%)</title><rect x="20.0527%" y="1557" width="0.0299%" height="15" fill="rgb(244,52,6)" fg:x="15443" fg:w="23"/><text x="20.3027%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="20.0943%" y="1509" width="0.0143%" height="15" fill="rgb(211,174,52)" fg:x="15475" fg:w="11"/><text x="20.3443%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="20.0943%" y="1493" width="0.0143%" height="15" fill="rgb(229,48,4)" fg:x="15475" fg:w="11"/><text x="20.3443%" y="1503.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="20.0943%" y="1477" width="0.0143%" height="15" fill="rgb(205,155,16)" fg:x="15475" fg:w="11"/><text x="20.3443%" y="1487.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.03%)</title><rect x="20.0826%" y="1557" width="0.0338%" height="15" fill="rgb(211,141,53)" fg:x="15466" fg:w="26"/><text x="20.3326%" y="1567.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.03%)</title><rect x="20.0826%" y="1541" width="0.0338%" height="15" fill="rgb(240,148,11)" fg:x="15466" fg:w="26"/><text x="20.3326%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="20.0943%" y="1525" width="0.0221%" height="15" fill="rgb(214,45,23)" fg:x="15475" fg:w="17"/><text x="20.3443%" y="1535.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::cmp::PartialEq&gt;::eq (21 samples, 0.03%)</title><rect x="20.2228%" y="1429" width="0.0273%" height="15" fill="rgb(248,74,26)" fg:x="15574" fg:w="21"/><text x="20.4728%" y="1439.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (21 samples, 0.03%)</title><rect x="20.2228%" y="1413" width="0.0273%" height="15" fill="rgb(218,121,16)" fg:x="15574" fg:w="21"/><text x="20.4728%" y="1423.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (21 samples, 0.03%)</title><rect x="20.2228%" y="1397" width="0.0273%" height="15" fill="rgb(218,10,47)" fg:x="15574" fg:w="21"/><text x="20.4728%" y="1407.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (21 samples, 0.03%)</title><rect x="20.2228%" y="1381" width="0.0273%" height="15" fill="rgb(227,99,14)" fg:x="15574" fg:w="21"/><text x="20.4728%" y="1391.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (182 samples, 0.24%)</title><rect x="20.1163%" y="1493" width="0.2363%" height="15" fill="rgb(229,83,46)" fg:x="15492" fg:w="182"/><text x="20.3663%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (182 samples, 0.24%)</title><rect x="20.1163%" y="1477" width="0.2363%" height="15" fill="rgb(228,25,1)" fg:x="15492" fg:w="182"/><text x="20.3663%" y="1487.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (182 samples, 0.24%)</title><rect x="20.1163%" y="1461" width="0.2363%" height="15" fill="rgb(252,190,15)" fg:x="15492" fg:w="182"/><text x="20.3663%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (182 samples, 0.24%)</title><rect x="20.1163%" y="1445" width="0.2363%" height="15" fill="rgb(213,103,51)" fg:x="15492" fg:w="182"/><text x="20.3663%" y="1455.50"></text></g><g><title>[libc.so.6] (79 samples, 0.10%)</title><rect x="20.2501%" y="1429" width="0.1026%" height="15" fill="rgb(220,38,44)" fg:x="15595" fg:w="79"/><text x="20.5001%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (184 samples, 0.24%)</title><rect x="20.1163%" y="1509" width="0.2389%" height="15" fill="rgb(210,45,26)" fg:x="15492" fg:w="184"/><text x="20.3663%" y="1519.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (69 samples, 0.09%)</title><rect x="20.3566%" y="1509" width="0.0896%" height="15" fill="rgb(205,95,48)" fg:x="15677" fg:w="69"/><text x="20.6066%" y="1519.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (69 samples, 0.09%)</title><rect x="20.3566%" y="1493" width="0.0896%" height="15" fill="rgb(225,179,37)" fg:x="15677" fg:w="69"/><text x="20.6066%" y="1503.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.09%)</title><rect x="20.3566%" y="1477" width="0.0896%" height="15" fill="rgb(230,209,3)" fg:x="15677" fg:w="69"/><text x="20.6066%" y="1487.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (346 samples, 0.45%)</title><rect x="19.9982%" y="1621" width="0.4493%" height="15" fill="rgb(248,12,46)" fg:x="15401" fg:w="346"/><text x="20.2482%" y="1631.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (281 samples, 0.36%)</title><rect x="20.0826%" y="1605" width="0.3649%" height="15" fill="rgb(234,18,0)" fg:x="15466" fg:w="281"/><text x="20.3326%" y="1615.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (281 samples, 0.36%)</title><rect x="20.0826%" y="1589" width="0.3649%" height="15" fill="rgb(238,197,14)" fg:x="15466" fg:w="281"/><text x="20.3326%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (281 samples, 0.36%)</title><rect x="20.0826%" y="1573" width="0.3649%" height="15" fill="rgb(251,162,48)" fg:x="15466" fg:w="281"/><text x="20.3326%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (255 samples, 0.33%)</title><rect x="20.1163%" y="1557" width="0.3311%" height="15" fill="rgb(237,73,42)" fg:x="15492" fg:w="255"/><text x="20.3663%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (255 samples, 0.33%)</title><rect x="20.1163%" y="1541" width="0.3311%" height="15" fill="rgb(211,108,8)" fg:x="15492" fg:w="255"/><text x="20.3663%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (255 samples, 0.33%)</title><rect x="20.1163%" y="1525" width="0.3311%" height="15" fill="rgb(213,45,22)" fg:x="15492" fg:w="255"/><text x="20.3663%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="20.4488%" y="1605" width="0.0104%" height="15" fill="rgb(252,154,5)" fg:x="15748" fg:w="8"/><text x="20.6988%" y="1615.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="20.4488%" y="1589" width="0.0104%" height="15" fill="rgb(221,79,52)" fg:x="15748" fg:w="8"/><text x="20.6988%" y="1599.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="20.4488%" y="1573" width="0.0104%" height="15" fill="rgb(229,220,36)" fg:x="15748" fg:w="8"/><text x="20.6988%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="20.4591%" y="1605" width="0.0130%" height="15" fill="rgb(211,17,16)" fg:x="15756" fg:w="10"/><text x="20.7091%" y="1615.50"></text></g><g><title>core::ptr::write (9 samples, 0.01%)</title><rect x="20.4604%" y="1589" width="0.0117%" height="15" fill="rgb(222,55,31)" fg:x="15757" fg:w="9"/><text x="20.7104%" y="1599.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="20.4604%" y="1573" width="0.0117%" height="15" fill="rgb(221,221,31)" fg:x="15757" fg:w="9"/><text x="20.7104%" y="1583.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (10 samples, 0.01%)</title><rect x="20.4799%" y="1557" width="0.0130%" height="15" fill="rgb(227,168,26)" fg:x="15772" fg:w="10"/><text x="20.7299%" y="1567.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.01%)</title><rect x="20.4799%" y="1541" width="0.0130%" height="15" fill="rgb(224,139,9)" fg:x="15772" fg:w="10"/><text x="20.7299%" y="1551.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.01%)</title><rect x="20.4799%" y="1525" width="0.0130%" height="15" fill="rgb(254,172,0)" fg:x="15772" fg:w="10"/><text x="20.7299%" y="1535.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="20.5085%" y="1493" width="0.0247%" height="15" fill="rgb(235,203,1)" fg:x="15794" fg:w="19"/><text x="20.7585%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="20.5150%" y="1477" width="0.0182%" height="15" fill="rgb(216,205,24)" fg:x="15799" fg:w="14"/><text x="20.7650%" y="1487.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (14 samples, 0.02%)</title><rect x="20.5150%" y="1461" width="0.0182%" height="15" fill="rgb(233,24,6)" fg:x="15799" fg:w="14"/><text x="20.7650%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.02%)</title><rect x="20.5150%" y="1445" width="0.0182%" height="15" fill="rgb(244,110,9)" fg:x="15799" fg:w="14"/><text x="20.7650%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (9 samples, 0.01%)</title><rect x="20.5215%" y="1429" width="0.0117%" height="15" fill="rgb(239,222,42)" fg:x="15804" fg:w="9"/><text x="20.7715%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="20.5215%" y="1413" width="0.0117%" height="15" fill="rgb(218,145,13)" fg:x="15804" fg:w="9"/><text x="20.7715%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="20.5215%" y="1397" width="0.0117%" height="15" fill="rgb(207,69,11)" fg:x="15804" fg:w="9"/><text x="20.7715%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="20.5215%" y="1381" width="0.0117%" height="15" fill="rgb(220,223,22)" fg:x="15804" fg:w="9"/><text x="20.7715%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="20.5228%" y="1365" width="0.0104%" height="15" fill="rgb(245,102,5)" fg:x="15805" fg:w="8"/><text x="20.7728%" y="1375.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (27 samples, 0.04%)</title><rect x="20.5072%" y="1525" width="0.0351%" height="15" fill="rgb(211,148,2)" fg:x="15793" fg:w="27"/><text x="20.7572%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (26 samples, 0.03%)</title><rect x="20.5085%" y="1509" width="0.0338%" height="15" fill="rgb(241,13,44)" fg:x="15794" fg:w="26"/><text x="20.7585%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="20.5449%" y="1461" width="0.0104%" height="15" fill="rgb(219,137,21)" fg:x="15822" fg:w="8"/><text x="20.7949%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="20.5449%" y="1477" width="0.0117%" height="15" fill="rgb(242,206,5)" fg:x="15822" fg:w="9"/><text x="20.7949%" y="1487.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (49 samples, 0.06%)</title><rect x="20.4942%" y="1557" width="0.0636%" height="15" fill="rgb(217,114,22)" fg:x="15783" fg:w="49"/><text x="20.7442%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (39 samples, 0.05%)</title><rect x="20.5072%" y="1541" width="0.0506%" height="15" fill="rgb(253,206,42)" fg:x="15793" fg:w="39"/><text x="20.7572%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="20.5423%" y="1525" width="0.0156%" height="15" fill="rgb(236,102,18)" fg:x="15820" fg:w="12"/><text x="20.7923%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="20.5423%" y="1509" width="0.0156%" height="15" fill="rgb(208,59,49)" fg:x="15820" fg:w="12"/><text x="20.7923%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="20.5423%" y="1493" width="0.0156%" height="15" fill="rgb(215,194,28)" fg:x="15820" fg:w="12"/><text x="20.7923%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="20.5617%" y="1509" width="0.0182%" height="15" fill="rgb(243,207,11)" fg:x="15835" fg:w="14"/><text x="20.8117%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="20.5617%" y="1493" width="0.0182%" height="15" fill="rgb(254,179,35)" fg:x="15835" fg:w="14"/><text x="20.8117%" y="1503.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="20.5617%" y="1477" width="0.0182%" height="15" fill="rgb(235,97,3)" fg:x="15835" fg:w="14"/><text x="20.8117%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="20.5656%" y="1461" width="0.0143%" height="15" fill="rgb(215,155,33)" fg:x="15838" fg:w="11"/><text x="20.8156%" y="1471.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="20.5656%" y="1445" width="0.0143%" height="15" fill="rgb(223,128,12)" fg:x="15838" fg:w="11"/><text x="20.8156%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="20.5656%" y="1429" width="0.0143%" height="15" fill="rgb(208,157,18)" fg:x="15838" fg:w="11"/><text x="20.8156%" y="1439.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.04%)</title><rect x="20.5604%" y="1525" width="0.0377%" height="15" fill="rgb(249,70,54)" fg:x="15834" fg:w="29"/><text x="20.8104%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="20.5838%" y="1509" width="0.0143%" height="15" fill="rgb(244,118,24)" fg:x="15852" fg:w="11"/><text x="20.8338%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="20.5838%" y="1493" width="0.0143%" height="15" fill="rgb(211,54,0)" fg:x="15852" fg:w="11"/><text x="20.8338%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="20.5838%" y="1477" width="0.0143%" height="15" fill="rgb(245,137,45)" fg:x="15852" fg:w="11"/><text x="20.8338%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="20.5838%" y="1461" width="0.0143%" height="15" fill="rgb(232,154,31)" fg:x="15852" fg:w="11"/><text x="20.8338%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (9 samples, 0.01%)</title><rect x="20.6163%" y="1477" width="0.0117%" height="15" fill="rgb(253,6,39)" fg:x="15877" fg:w="9"/><text x="20.8663%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.01%)</title><rect x="20.6163%" y="1461" width="0.0117%" height="15" fill="rgb(234,183,24)" fg:x="15877" fg:w="9"/><text x="20.8663%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="20.6163%" y="1445" width="0.0117%" height="15" fill="rgb(252,84,40)" fg:x="15877" fg:w="9"/><text x="20.8663%" y="1455.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (2,062 samples, 2.68%)</title><rect x="17.9517%" y="1733" width="2.6775%" height="15" fill="rgb(224,65,2)" fg:x="13825" fg:w="2062"/><text x="18.2017%" y="1743.50">&lt;a..</text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (2,062 samples, 2.68%)</title><rect x="17.9517%" y="1717" width="2.6775%" height="15" fill="rgb(229,38,24)" fg:x="13825" fg:w="2062"/><text x="18.2017%" y="1727.50">ap..</text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (592 samples, 0.77%)</title><rect x="19.8605%" y="1701" width="0.7687%" height="15" fill="rgb(218,131,50)" fg:x="15295" fg:w="592"/><text x="20.1105%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (592 samples, 0.77%)</title><rect x="19.8605%" y="1685" width="0.7687%" height="15" fill="rgb(233,106,18)" fg:x="15295" fg:w="592"/><text x="20.1105%" y="1695.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (489 samples, 0.63%)</title><rect x="19.9943%" y="1669" width="0.6350%" height="15" fill="rgb(220,216,11)" fg:x="15398" fg:w="489"/><text x="20.2443%" y="1679.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (489 samples, 0.63%)</title><rect x="19.9943%" y="1653" width="0.6350%" height="15" fill="rgb(251,100,45)" fg:x="15398" fg:w="489"/><text x="20.2443%" y="1663.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (489 samples, 0.63%)</title><rect x="19.9943%" y="1637" width="0.6350%" height="15" fill="rgb(235,143,32)" fg:x="15398" fg:w="489"/><text x="20.2443%" y="1647.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (140 samples, 0.18%)</title><rect x="20.4475%" y="1621" width="0.1818%" height="15" fill="rgb(248,124,34)" fg:x="15747" fg:w="140"/><text x="20.6975%" y="1631.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (118 samples, 0.15%)</title><rect x="20.4760%" y="1605" width="0.1532%" height="15" fill="rgb(225,221,4)" fg:x="15769" fg:w="118"/><text x="20.7260%" y="1615.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (117 samples, 0.15%)</title><rect x="20.4773%" y="1589" width="0.1519%" height="15" fill="rgb(242,27,43)" fg:x="15770" fg:w="117"/><text x="20.7273%" y="1599.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (116 samples, 0.15%)</title><rect x="20.4786%" y="1573" width="0.1506%" height="15" fill="rgb(227,54,8)" fg:x="15771" fg:w="116"/><text x="20.7286%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (55 samples, 0.07%)</title><rect x="20.5578%" y="1557" width="0.0714%" height="15" fill="rgb(253,139,49)" fg:x="15832" fg:w="55"/><text x="20.8078%" y="1567.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (53 samples, 0.07%)</title><rect x="20.5604%" y="1541" width="0.0688%" height="15" fill="rgb(231,26,43)" fg:x="15834" fg:w="53"/><text x="20.8104%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (24 samples, 0.03%)</title><rect x="20.5981%" y="1525" width="0.0312%" height="15" fill="rgb(207,121,39)" fg:x="15863" fg:w="24"/><text x="20.8481%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (24 samples, 0.03%)</title><rect x="20.5981%" y="1509" width="0.0312%" height="15" fill="rgb(223,101,35)" fg:x="15863" fg:w="24"/><text x="20.8481%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (24 samples, 0.03%)</title><rect x="20.5981%" y="1493" width="0.0312%" height="15" fill="rgb(232,87,23)" fg:x="15863" fg:w="24"/><text x="20.8481%" y="1503.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (9 samples, 0.01%)</title><rect x="20.6695%" y="1573" width="0.0117%" height="15" fill="rgb(225,180,29)" fg:x="15918" fg:w="9"/><text x="20.9195%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="20.6695%" y="1589" width="0.0182%" height="15" fill="rgb(225,25,17)" fg:x="15918" fg:w="14"/><text x="20.9195%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.07%)</title><rect x="20.7474%" y="1413" width="0.0688%" height="15" fill="rgb(223,8,52)" fg:x="15978" fg:w="53"/><text x="20.9974%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.07%)</title><rect x="20.7474%" y="1397" width="0.0688%" height="15" fill="rgb(246,42,21)" fg:x="15978" fg:w="53"/><text x="20.9974%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.07%)</title><rect x="20.7474%" y="1381" width="0.0688%" height="15" fill="rgb(205,64,43)" fg:x="15978" fg:w="53"/><text x="20.9974%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.06%)</title><rect x="20.7539%" y="1365" width="0.0623%" height="15" fill="rgb(221,160,13)" fg:x="15983" fg:w="48"/><text x="21.0039%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.06%)</title><rect x="20.7539%" y="1349" width="0.0623%" height="15" fill="rgb(239,58,35)" fg:x="15983" fg:w="48"/><text x="21.0039%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.06%)</title><rect x="20.7539%" y="1333" width="0.0623%" height="15" fill="rgb(251,26,40)" fg:x="15983" fg:w="48"/><text x="21.0039%" y="1343.50"></text></g><g><title>malloc (46 samples, 0.06%)</title><rect x="20.7565%" y="1317" width="0.0597%" height="15" fill="rgb(247,0,4)" fg:x="15985" fg:w="46"/><text x="21.0065%" y="1327.50"></text></g><g><title>[libc.so.6] (34 samples, 0.04%)</title><rect x="20.7721%" y="1301" width="0.0441%" height="15" fill="rgb(218,130,10)" fg:x="15997" fg:w="34"/><text x="21.0221%" y="1311.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (94 samples, 0.12%)</title><rect x="20.7059%" y="1509" width="0.1221%" height="15" fill="rgb(239,32,7)" fg:x="15946" fg:w="94"/><text x="20.9559%" y="1519.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (68 samples, 0.09%)</title><rect x="20.7396%" y="1493" width="0.0883%" height="15" fill="rgb(210,192,24)" fg:x="15972" fg:w="68"/><text x="20.9896%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (67 samples, 0.09%)</title><rect x="20.7409%" y="1477" width="0.0870%" height="15" fill="rgb(226,212,17)" fg:x="15973" fg:w="67"/><text x="20.9909%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.08%)</title><rect x="20.7461%" y="1461" width="0.0818%" height="15" fill="rgb(219,201,28)" fg:x="15977" fg:w="63"/><text x="20.9961%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.08%)</title><rect x="20.7461%" y="1445" width="0.0818%" height="15" fill="rgb(235,207,41)" fg:x="15977" fg:w="63"/><text x="20.9961%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.08%)</title><rect x="20.7461%" y="1429" width="0.0818%" height="15" fill="rgb(241,95,54)" fg:x="15977" fg:w="63"/><text x="20.9961%" y="1439.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.01%)</title><rect x="20.8162%" y="1413" width="0.0117%" height="15" fill="rgb(248,12,23)" fg:x="16031" fg:w="9"/><text x="21.0662%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.03%)</title><rect x="20.8279%" y="1509" width="0.0312%" height="15" fill="rgb(228,173,4)" fg:x="16040" fg:w="24"/><text x="21.0779%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="20.8305%" y="1493" width="0.0286%" height="15" fill="rgb(254,99,5)" fg:x="16042" fg:w="22"/><text x="21.0805%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.03%)</title><rect x="20.8305%" y="1477" width="0.0286%" height="15" fill="rgb(212,184,17)" fg:x="16042" fg:w="22"/><text x="21.0805%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.03%)</title><rect x="20.8318%" y="1461" width="0.0273%" height="15" fill="rgb(252,174,1)" fg:x="16043" fg:w="21"/><text x="21.0818%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.03%)</title><rect x="20.8318%" y="1445" width="0.0273%" height="15" fill="rgb(241,118,51)" fg:x="16043" fg:w="21"/><text x="21.0818%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.03%)</title><rect x="20.8318%" y="1429" width="0.0273%" height="15" fill="rgb(227,94,47)" fg:x="16043" fg:w="21"/><text x="21.0818%" y="1439.50"></text></g><g><title>malloc (18 samples, 0.02%)</title><rect x="20.8357%" y="1413" width="0.0234%" height="15" fill="rgb(229,104,2)" fg:x="16046" fg:w="18"/><text x="21.0857%" y="1423.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (186 samples, 0.24%)</title><rect x="20.6383%" y="1685" width="0.2415%" height="15" fill="rgb(219,28,31)" fg:x="15894" fg:w="186"/><text x="20.8883%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (186 samples, 0.24%)</title><rect x="20.6383%" y="1669" width="0.2415%" height="15" fill="rgb(233,109,36)" fg:x="15894" fg:w="186"/><text x="20.8883%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (186 samples, 0.24%)</title><rect x="20.6383%" y="1653" width="0.2415%" height="15" fill="rgb(246,88,11)" fg:x="15894" fg:w="186"/><text x="20.8883%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (186 samples, 0.24%)</title><rect x="20.6383%" y="1637" width="0.2415%" height="15" fill="rgb(209,212,17)" fg:x="15894" fg:w="186"/><text x="20.8883%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (186 samples, 0.24%)</title><rect x="20.6383%" y="1621" width="0.2415%" height="15" fill="rgb(243,59,29)" fg:x="15894" fg:w="186"/><text x="20.8883%" y="1631.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (186 samples, 0.24%)</title><rect x="20.6383%" y="1605" width="0.2415%" height="15" fill="rgb(244,205,48)" fg:x="15894" fg:w="186"/><text x="20.8883%" y="1615.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (148 samples, 0.19%)</title><rect x="20.6877%" y="1589" width="0.1922%" height="15" fill="rgb(227,30,6)" fg:x="15932" fg:w="148"/><text x="20.9377%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (145 samples, 0.19%)</title><rect x="20.6916%" y="1573" width="0.1883%" height="15" fill="rgb(220,205,48)" fg:x="15935" fg:w="145"/><text x="20.9416%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (136 samples, 0.18%)</title><rect x="20.7033%" y="1557" width="0.1766%" height="15" fill="rgb(250,94,14)" fg:x="15944" fg:w="136"/><text x="20.9533%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (136 samples, 0.18%)</title><rect x="20.7033%" y="1541" width="0.1766%" height="15" fill="rgb(216,119,42)" fg:x="15944" fg:w="136"/><text x="20.9533%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (136 samples, 0.18%)</title><rect x="20.7033%" y="1525" width="0.1766%" height="15" fill="rgb(232,155,0)" fg:x="15944" fg:w="136"/><text x="20.9533%" y="1535.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.02%)</title><rect x="20.8591%" y="1509" width="0.0208%" height="15" fill="rgb(212,24,32)" fg:x="16064" fg:w="16"/><text x="21.1091%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (187 samples, 0.24%)</title><rect x="20.6383%" y="1733" width="0.2428%" height="15" fill="rgb(216,69,20)" fg:x="15894" fg:w="187"/><text x="20.8883%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (187 samples, 0.24%)</title><rect x="20.6383%" y="1717" width="0.2428%" height="15" fill="rgb(229,73,31)" fg:x="15894" fg:w="187"/><text x="20.8883%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (187 samples, 0.24%)</title><rect x="20.6383%" y="1701" width="0.2428%" height="15" fill="rgb(224,219,20)" fg:x="15894" fg:w="187"/><text x="20.8883%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="21.0642%" y="1173" width="0.0117%" height="15" fill="rgb(215,146,41)" fg:x="16222" fg:w="9"/><text x="21.3142%" y="1183.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (97 samples, 0.13%)</title><rect x="20.9708%" y="1365" width="0.1260%" height="15" fill="rgb(244,71,31)" fg:x="16150" fg:w="97"/><text x="21.2208%" y="1375.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (75 samples, 0.10%)</title><rect x="20.9993%" y="1349" width="0.0974%" height="15" fill="rgb(224,24,11)" fg:x="16172" fg:w="75"/><text x="21.2493%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (75 samples, 0.10%)</title><rect x="20.9993%" y="1333" width="0.0974%" height="15" fill="rgb(229,76,15)" fg:x="16172" fg:w="75"/><text x="21.2493%" y="1343.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (68 samples, 0.09%)</title><rect x="21.0084%" y="1317" width="0.0883%" height="15" fill="rgb(209,93,2)" fg:x="16179" fg:w="68"/><text x="21.2584%" y="1327.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (62 samples, 0.08%)</title><rect x="21.0162%" y="1301" width="0.0805%" height="15" fill="rgb(216,200,50)" fg:x="16185" fg:w="62"/><text x="21.2662%" y="1311.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (62 samples, 0.08%)</title><rect x="21.0162%" y="1285" width="0.0805%" height="15" fill="rgb(211,67,34)" fg:x="16185" fg:w="62"/><text x="21.2662%" y="1295.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (61 samples, 0.08%)</title><rect x="21.0175%" y="1269" width="0.0792%" height="15" fill="rgb(225,87,47)" fg:x="16186" fg:w="61"/><text x="21.2675%" y="1279.50"></text></g><g><title>serde::de::SeqAccess::next_element (31 samples, 0.04%)</title><rect x="21.0565%" y="1253" width="0.0403%" height="15" fill="rgb(217,185,16)" fg:x="16216" fg:w="31"/><text x="21.3065%" y="1263.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (31 samples, 0.04%)</title><rect x="21.0565%" y="1237" width="0.0403%" height="15" fill="rgb(205,0,0)" fg:x="16216" fg:w="31"/><text x="21.3065%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.04%)</title><rect x="21.0591%" y="1221" width="0.0377%" height="15" fill="rgb(207,116,45)" fg:x="16218" fg:w="29"/><text x="21.3091%" y="1231.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (29 samples, 0.04%)</title><rect x="21.0591%" y="1205" width="0.0377%" height="15" fill="rgb(221,156,26)" fg:x="16218" fg:w="29"/><text x="21.3091%" y="1215.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (29 samples, 0.04%)</title><rect x="21.0591%" y="1189" width="0.0377%" height="15" fill="rgb(213,140,4)" fg:x="16218" fg:w="29"/><text x="21.3091%" y="1199.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (16 samples, 0.02%)</title><rect x="21.0759%" y="1173" width="0.0208%" height="15" fill="rgb(231,224,15)" fg:x="16231" fg:w="16"/><text x="21.3259%" y="1183.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (122 samples, 0.16%)</title><rect x="20.9578%" y="1381" width="0.1584%" height="15" fill="rgb(244,76,20)" fg:x="16140" fg:w="122"/><text x="21.2078%" y="1391.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (10 samples, 0.01%)</title><rect x="21.1032%" y="1365" width="0.0130%" height="15" fill="rgb(238,117,7)" fg:x="16252" fg:w="10"/><text x="21.3532%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (10 samples, 0.01%)</title><rect x="21.1032%" y="1349" width="0.0130%" height="15" fill="rgb(235,1,10)" fg:x="16252" fg:w="10"/><text x="21.3532%" y="1359.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (8 samples, 0.01%)</title><rect x="21.1058%" y="1333" width="0.0104%" height="15" fill="rgb(216,165,6)" fg:x="16254" fg:w="8"/><text x="21.3558%" y="1343.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (139 samples, 0.18%)</title><rect x="20.9539%" y="1397" width="0.1805%" height="15" fill="rgb(246,91,35)" fg:x="16137" fg:w="139"/><text x="21.2039%" y="1407.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (14 samples, 0.02%)</title><rect x="21.1162%" y="1381" width="0.0182%" height="15" fill="rgb(228,96,24)" fg:x="16262" fg:w="14"/><text x="21.3662%" y="1391.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="21.1383%" y="1397" width="0.0169%" height="15" fill="rgb(254,217,53)" fg:x="16279" fg:w="13"/><text x="21.3883%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.04%)</title><rect x="21.1590%" y="1349" width="0.0403%" height="15" fill="rgb(209,60,0)" fg:x="16295" fg:w="31"/><text x="21.4090%" y="1359.50"></text></g><g><title>malloc (27 samples, 0.04%)</title><rect x="21.1642%" y="1333" width="0.0351%" height="15" fill="rgb(250,93,26)" fg:x="16299" fg:w="27"/><text x="21.4142%" y="1343.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="21.1707%" y="1317" width="0.0286%" height="15" fill="rgb(211,9,40)" fg:x="16304" fg:w="22"/><text x="21.4207%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.04%)</title><rect x="21.1564%" y="1381" width="0.0441%" height="15" fill="rgb(242,57,20)" fg:x="16293" fg:w="34"/><text x="21.4064%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.04%)</title><rect x="21.1590%" y="1365" width="0.0416%" height="15" fill="rgb(248,85,48)" fg:x="16295" fg:w="32"/><text x="21.4090%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (213 samples, 0.28%)</title><rect x="20.9344%" y="1429" width="0.2766%" height="15" fill="rgb(212,117,2)" fg:x="16122" fg:w="213"/><text x="21.1844%" y="1439.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (212 samples, 0.28%)</title><rect x="20.9357%" y="1413" width="0.2753%" height="15" fill="rgb(243,19,3)" fg:x="16123" fg:w="212"/><text x="21.1857%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.06%)</title><rect x="21.1551%" y="1397" width="0.0558%" height="15" fill="rgb(232,217,24)" fg:x="16292" fg:w="43"/><text x="21.4051%" y="1407.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="21.2006%" y="1381" width="0.0104%" height="15" fill="rgb(224,175,40)" fg:x="16327" fg:w="8"/><text x="21.4506%" y="1391.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (31 samples, 0.04%)</title><rect x="21.2162%" y="1365" width="0.0403%" height="15" fill="rgb(212,162,32)" fg:x="16339" fg:w="31"/><text x="21.4662%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.04%)</title><rect x="21.2162%" y="1349" width="0.0403%" height="15" fill="rgb(215,9,4)" fg:x="16339" fg:w="31"/><text x="21.4662%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.04%)</title><rect x="21.2162%" y="1333" width="0.0403%" height="15" fill="rgb(242,42,7)" fg:x="16339" fg:w="31"/><text x="21.4662%" y="1343.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (30 samples, 0.04%)</title><rect x="21.2175%" y="1317" width="0.0390%" height="15" fill="rgb(242,184,45)" fg:x="16340" fg:w="30"/><text x="21.4675%" y="1327.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (30 samples, 0.04%)</title><rect x="21.2175%" y="1301" width="0.0390%" height="15" fill="rgb(228,111,51)" fg:x="16340" fg:w="30"/><text x="21.4675%" y="1311.50"></text></g><g><title>core::ptr::write (30 samples, 0.04%)</title><rect x="21.2175%" y="1285" width="0.0390%" height="15" fill="rgb(236,147,17)" fg:x="16340" fg:w="30"/><text x="21.4675%" y="1295.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (260 samples, 0.34%)</title><rect x="20.9292%" y="1445" width="0.3376%" height="15" fill="rgb(210,75,22)" fg:x="16118" fg:w="260"/><text x="21.1792%" y="1455.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (42 samples, 0.05%)</title><rect x="21.2123%" y="1429" width="0.0545%" height="15" fill="rgb(217,159,45)" fg:x="16336" fg:w="42"/><text x="21.4623%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41 samples, 0.05%)</title><rect x="21.2136%" y="1413" width="0.0532%" height="15" fill="rgb(245,165,53)" fg:x="16337" fg:w="41"/><text x="21.4636%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (41 samples, 0.05%)</title><rect x="21.2136%" y="1397" width="0.0532%" height="15" fill="rgb(251,190,50)" fg:x="16337" fg:w="41"/><text x="21.4636%" y="1407.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (41 samples, 0.05%)</title><rect x="21.2136%" y="1381" width="0.0532%" height="15" fill="rgb(208,203,29)" fg:x="16337" fg:w="41"/><text x="21.4636%" y="1391.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="21.2668%" y="1445" width="0.0208%" height="15" fill="rgb(207,209,35)" fg:x="16378" fg:w="16"/><text x="21.5168%" y="1455.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.02%)</title><rect x="21.2694%" y="1429" width="0.0182%" height="15" fill="rgb(230,144,49)" fg:x="16380" fg:w="14"/><text x="21.5194%" y="1439.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="21.2720%" y="1413" width="0.0156%" height="15" fill="rgb(229,31,6)" fg:x="16382" fg:w="12"/><text x="21.5220%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="21.2720%" y="1397" width="0.0156%" height="15" fill="rgb(251,129,24)" fg:x="16382" fg:w="12"/><text x="21.5220%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="21.2720%" y="1381" width="0.0156%" height="15" fill="rgb(235,105,15)" fg:x="16382" fg:w="12"/><text x="21.5220%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="21.2720%" y="1365" width="0.0156%" height="15" fill="rgb(216,52,43)" fg:x="16382" fg:w="12"/><text x="21.5220%" y="1375.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="21.2733%" y="1349" width="0.0143%" height="15" fill="rgb(238,144,41)" fg:x="16383" fg:w="11"/><text x="21.5233%" y="1359.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (17 samples, 0.02%)</title><rect x="21.2876%" y="1445" width="0.0221%" height="15" fill="rgb(243,63,9)" fg:x="16394" fg:w="17"/><text x="21.5376%" y="1455.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="21.2876%" y="1429" width="0.0221%" height="15" fill="rgb(246,208,1)" fg:x="16394" fg:w="17"/><text x="21.5376%" y="1439.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="21.2928%" y="1413" width="0.0169%" height="15" fill="rgb(233,182,18)" fg:x="16398" fg:w="13"/><text x="21.5428%" y="1423.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.02%)</title><rect x="21.2928%" y="1397" width="0.0169%" height="15" fill="rgb(242,224,8)" fg:x="16398" fg:w="13"/><text x="21.5428%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="21.2928%" y="1381" width="0.0169%" height="15" fill="rgb(243,54,37)" fg:x="16398" fg:w="13"/><text x="21.5428%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="21.2928%" y="1365" width="0.0169%" height="15" fill="rgb(233,192,12)" fg:x="16398" fg:w="13"/><text x="21.5428%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="21.2928%" y="1349" width="0.0169%" height="15" fill="rgb(251,192,53)" fg:x="16398" fg:w="13"/><text x="21.5428%" y="1359.50"></text></g><g><title>malloc (13 samples, 0.02%)</title><rect x="21.2928%" y="1333" width="0.0169%" height="15" fill="rgb(246,141,26)" fg:x="16398" fg:w="13"/><text x="21.5428%" y="1343.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="21.2993%" y="1317" width="0.0104%" height="15" fill="rgb(239,195,19)" fg:x="16403" fg:w="8"/><text x="21.5493%" y="1327.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (16 samples, 0.02%)</title><rect x="21.3175%" y="1413" width="0.0208%" height="15" fill="rgb(241,16,39)" fg:x="16417" fg:w="16"/><text x="21.5675%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (339 samples, 0.44%)</title><rect x="20.9019%" y="1461" width="0.4402%" height="15" fill="rgb(223,13,53)" fg:x="16097" fg:w="339"/><text x="21.1519%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (25 samples, 0.03%)</title><rect x="21.3097%" y="1445" width="0.0325%" height="15" fill="rgb(214,227,0)" fg:x="16411" fg:w="25"/><text x="21.5597%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (21 samples, 0.03%)</title><rect x="21.3149%" y="1429" width="0.0273%" height="15" fill="rgb(228,103,26)" fg:x="16415" fg:w="21"/><text x="21.5649%" y="1439.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (352 samples, 0.46%)</title><rect x="20.9019%" y="1477" width="0.4571%" height="15" fill="rgb(254,177,53)" fg:x="16097" fg:w="352"/><text x="21.1519%" y="1487.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (13 samples, 0.02%)</title><rect x="21.3421%" y="1461" width="0.0169%" height="15" fill="rgb(208,201,34)" fg:x="16436" fg:w="13"/><text x="21.5921%" y="1471.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="21.3590%" y="1477" width="0.0156%" height="15" fill="rgb(212,39,5)" fg:x="16449" fg:w="12"/><text x="21.6090%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.04%)</title><rect x="21.3759%" y="1461" width="0.0441%" height="15" fill="rgb(246,117,3)" fg:x="16462" fg:w="34"/><text x="21.6259%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.04%)</title><rect x="21.3798%" y="1445" width="0.0403%" height="15" fill="rgb(244,118,39)" fg:x="16465" fg:w="31"/><text x="21.6298%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.04%)</title><rect x="21.3798%" y="1429" width="0.0403%" height="15" fill="rgb(241,64,10)" fg:x="16465" fg:w="31"/><text x="21.6298%" y="1439.50"></text></g><g><title>malloc (27 samples, 0.04%)</title><rect x="21.3850%" y="1413" width="0.0351%" height="15" fill="rgb(229,39,44)" fg:x="16469" fg:w="27"/><text x="21.6350%" y="1423.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="21.3928%" y="1397" width="0.0273%" height="15" fill="rgb(230,226,3)" fg:x="16475" fg:w="21"/><text x="21.6428%" y="1407.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="21.4097%" y="1381" width="0.0104%" height="15" fill="rgb(222,13,42)" fg:x="16488" fg:w="8"/><text x="21.6597%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (417 samples, 0.54%)</title><rect x="20.8812%" y="1509" width="0.5415%" height="15" fill="rgb(247,180,54)" fg:x="16081" fg:w="417"/><text x="21.1312%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (417 samples, 0.54%)</title><rect x="20.8812%" y="1493" width="0.5415%" height="15" fill="rgb(205,96,16)" fg:x="16081" fg:w="417"/><text x="21.1312%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (37 samples, 0.05%)</title><rect x="21.3746%" y="1477" width="0.0480%" height="15" fill="rgb(205,100,21)" fg:x="16461" fg:w="37"/><text x="21.6246%" y="1487.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1957" width="4.1020%" height="15" fill="rgb(248,51,4)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1967.50">apto..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1941" width="4.1020%" height="15" fill="rgb(217,197,30)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1951.50">&lt;apt..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1925" width="4.1020%" height="15" fill="rgb(240,179,40)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1935.50">apto..</text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1909" width="4.1020%" height="15" fill="rgb(212,185,35)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1919.50">apto..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1893" width="4.1020%" height="15" fill="rgb(251,222,31)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1903.50">move..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1877" width="4.1020%" height="15" fill="rgb(208,140,36)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1887.50">move..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1861" width="4.1020%" height="15" fill="rgb(220,148,1)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1871.50">move..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1845" width="4.1020%" height="15" fill="rgb(254,4,28)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1855.50">move..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1829" width="4.1020%" height="15" fill="rgb(222,185,44)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1839.50">move..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1813" width="4.1020%" height="15" fill="rgb(215,74,39)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1823.50">move..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (3,159 samples, 4.10%)</title><rect x="17.3220%" y="1797" width="4.1020%" height="15" fill="rgb(247,86,4)" fg:x="13340" fg:w="3159"/><text x="17.5720%" y="1807.50">move..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (2,674 samples, 3.47%)</title><rect x="17.9517%" y="1781" width="3.4722%" height="15" fill="rgb(231,105,32)" fg:x="13825" fg:w="2674"/><text x="18.2017%" y="1791.50">mov..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (2,674 samples, 3.47%)</title><rect x="17.9517%" y="1765" width="3.4722%" height="15" fill="rgb(222,65,35)" fg:x="13825" fg:w="2674"/><text x="18.2017%" y="1775.50">mov..</text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (2,674 samples, 3.47%)</title><rect x="17.9517%" y="1749" width="3.4722%" height="15" fill="rgb(218,145,35)" fg:x="13825" fg:w="2674"/><text x="18.2017%" y="1759.50">&lt;mo..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (418 samples, 0.54%)</title><rect x="20.8812%" y="1733" width="0.5428%" height="15" fill="rgb(208,7,15)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1743.50"></text></g><g><title>bcs::de::from_bytes_seed (418 samples, 0.54%)</title><rect x="20.8812%" y="1717" width="0.5428%" height="15" fill="rgb(209,83,13)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (418 samples, 0.54%)</title><rect x="20.8812%" y="1701" width="0.5428%" height="15" fill="rgb(218,3,10)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (418 samples, 0.54%)</title><rect x="20.8812%" y="1685" width="0.5428%" height="15" fill="rgb(211,219,4)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (418 samples, 0.54%)</title><rect x="20.8812%" y="1669" width="0.5428%" height="15" fill="rgb(228,194,12)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (418 samples, 0.54%)</title><rect x="20.8812%" y="1653" width="0.5428%" height="15" fill="rgb(210,175,7)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1663.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (418 samples, 0.54%)</title><rect x="20.8812%" y="1637" width="0.5428%" height="15" fill="rgb(243,132,6)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (418 samples, 0.54%)</title><rect x="20.8812%" y="1621" width="0.5428%" height="15" fill="rgb(207,72,18)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (418 samples, 0.54%)</title><rect x="20.8812%" y="1605" width="0.5428%" height="15" fill="rgb(236,1,18)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1615.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (418 samples, 0.54%)</title><rect x="20.8812%" y="1589" width="0.5428%" height="15" fill="rgb(227,0,18)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (418 samples, 0.54%)</title><rect x="20.8812%" y="1573" width="0.5428%" height="15" fill="rgb(247,37,5)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1583.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (418 samples, 0.54%)</title><rect x="20.8812%" y="1557" width="0.5428%" height="15" fill="rgb(237,179,24)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (418 samples, 0.54%)</title><rect x="20.8812%" y="1541" width="0.5428%" height="15" fill="rgb(226,53,20)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (418 samples, 0.54%)</title><rect x="20.8812%" y="1525" width="0.5428%" height="15" fill="rgb(247,75,7)" fg:x="16081" fg:w="418"/><text x="21.1312%" y="1535.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="21.4473%" y="1685" width="0.0208%" height="15" fill="rgb(233,96,12)" fg:x="16517" fg:w="16"/><text x="21.6973%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="21.4473%" y="1669" width="0.0208%" height="15" fill="rgb(224,125,0)" fg:x="16517" fg:w="16"/><text x="21.6973%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="21.4473%" y="1653" width="0.0208%" height="15" fill="rgb(224,92,25)" fg:x="16517" fg:w="16"/><text x="21.6973%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.02%)</title><rect x="21.4499%" y="1637" width="0.0182%" height="15" fill="rgb(224,42,24)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (14 samples, 0.02%)</title><rect x="21.4499%" y="1621" width="0.0182%" height="15" fill="rgb(234,132,49)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.02%)</title><rect x="21.4499%" y="1605" width="0.0182%" height="15" fill="rgb(248,100,35)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="21.4499%" y="1589" width="0.0182%" height="15" fill="rgb(239,94,40)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="21.4499%" y="1573" width="0.0182%" height="15" fill="rgb(235,139,28)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="21.4499%" y="1557" width="0.0182%" height="15" fill="rgb(217,144,7)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="21.4499%" y="1541" width="0.0182%" height="15" fill="rgb(227,55,4)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="21.4499%" y="1525" width="0.0182%" height="15" fill="rgb(252,82,54)" fg:x="16519" fg:w="14"/><text x="21.6999%" y="1535.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="21.4538%" y="1509" width="0.0143%" height="15" fill="rgb(245,172,4)" fg:x="16522" fg:w="11"/><text x="21.7038%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (19 samples, 0.02%)</title><rect x="21.5317%" y="1509" width="0.0247%" height="15" fill="rgb(207,26,27)" fg:x="16582" fg:w="19"/><text x="21.7817%" y="1519.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19 samples, 0.02%)</title><rect x="21.5317%" y="1493" width="0.0247%" height="15" fill="rgb(252,98,18)" fg:x="16582" fg:w="19"/><text x="21.7817%" y="1503.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.02%)</title><rect x="21.5382%" y="1477" width="0.0182%" height="15" fill="rgb(244,8,26)" fg:x="16587" fg:w="14"/><text x="21.7882%" y="1487.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.02%)</title><rect x="21.5382%" y="1461" width="0.0182%" height="15" fill="rgb(237,173,45)" fg:x="16587" fg:w="14"/><text x="21.7882%" y="1471.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (8 samples, 0.01%)</title><rect x="21.5460%" y="1445" width="0.0104%" height="15" fill="rgb(208,213,49)" fg:x="16593" fg:w="8"/><text x="21.7960%" y="1455.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (95 samples, 0.12%)</title><rect x="21.5161%" y="1525" width="0.1234%" height="15" fill="rgb(212,122,37)" fg:x="16570" fg:w="95"/><text x="21.7661%" y="1535.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (64 samples, 0.08%)</title><rect x="21.5564%" y="1509" width="0.0831%" height="15" fill="rgb(213,80,17)" fg:x="16601" fg:w="64"/><text x="21.8064%" y="1519.50"></text></g><g><title>bcs::de::Deserializer::peek (12 samples, 0.02%)</title><rect x="21.7135%" y="1381" width="0.0156%" height="15" fill="rgb(206,210,43)" fg:x="16722" fg:w="12"/><text x="21.9635%" y="1391.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (32 samples, 0.04%)</title><rect x="21.6901%" y="1477" width="0.0416%" height="15" fill="rgb(229,214,3)" fg:x="16704" fg:w="32"/><text x="21.9401%" y="1487.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (32 samples, 0.04%)</title><rect x="21.6901%" y="1461" width="0.0416%" height="15" fill="rgb(235,213,29)" fg:x="16704" fg:w="32"/><text x="21.9401%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (32 samples, 0.04%)</title><rect x="21.6901%" y="1445" width="0.0416%" height="15" fill="rgb(248,135,26)" fg:x="16704" fg:w="32"/><text x="21.9401%" y="1455.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (29 samples, 0.04%)</title><rect x="21.6940%" y="1429" width="0.0377%" height="15" fill="rgb(242,188,12)" fg:x="16707" fg:w="29"/><text x="21.9440%" y="1439.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (16 samples, 0.02%)</title><rect x="21.7109%" y="1413" width="0.0208%" height="15" fill="rgb(245,38,12)" fg:x="16720" fg:w="16"/><text x="21.9609%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::next (16 samples, 0.02%)</title><rect x="21.7109%" y="1397" width="0.0208%" height="15" fill="rgb(218,42,13)" fg:x="16720" fg:w="16"/><text x="21.9609%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (29 samples, 0.04%)</title><rect x="21.7317%" y="1477" width="0.0377%" height="15" fill="rgb(238,132,49)" fg:x="16736" fg:w="29"/><text x="21.9817%" y="1487.50"></text></g><g><title>core::cmp::PartialOrd::ge (29 samples, 0.04%)</title><rect x="21.7317%" y="1461" width="0.0377%" height="15" fill="rgb(209,196,19)" fg:x="16736" fg:w="29"/><text x="21.9817%" y="1471.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (26 samples, 0.03%)</title><rect x="21.7356%" y="1445" width="0.0338%" height="15" fill="rgb(244,131,22)" fg:x="16739" fg:w="26"/><text x="21.9856%" y="1455.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (26 samples, 0.03%)</title><rect x="21.7356%" y="1429" width="0.0338%" height="15" fill="rgb(223,18,34)" fg:x="16739" fg:w="26"/><text x="21.9856%" y="1439.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (26 samples, 0.03%)</title><rect x="21.7356%" y="1413" width="0.0338%" height="15" fill="rgb(252,124,54)" fg:x="16739" fg:w="26"/><text x="21.9856%" y="1423.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="21.7447%" y="1397" width="0.0247%" height="15" fill="rgb(229,106,42)" fg:x="16746" fg:w="19"/><text x="21.9947%" y="1407.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (74 samples, 0.10%)</title><rect x="21.6836%" y="1493" width="0.0961%" height="15" fill="rgb(221,129,1)" fg:x="16699" fg:w="74"/><text x="21.9336%" y="1503.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.02%)</title><rect x="21.8395%" y="1317" width="0.0234%" height="15" fill="rgb(229,74,15)" fg:x="16819" fg:w="18"/><text x="22.0895%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::parse_length (34 samples, 0.04%)</title><rect x="21.9239%" y="1285" width="0.0441%" height="15" fill="rgb(210,206,50)" fg:x="16884" fg:w="34"/><text x="22.1739%" y="1295.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (33 samples, 0.04%)</title><rect x="21.9252%" y="1269" width="0.0429%" height="15" fill="rgb(251,114,31)" fg:x="16885" fg:w="33"/><text x="22.1752%" y="1279.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (50 samples, 0.06%)</title><rect x="21.9070%" y="1301" width="0.0649%" height="15" fill="rgb(215,225,28)" fg:x="16871" fg:w="50"/><text x="22.1570%" y="1311.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (63 samples, 0.08%)</title><rect x="21.9719%" y="1301" width="0.0818%" height="15" fill="rgb(237,109,14)" fg:x="16921" fg:w="63"/><text x="22.2219%" y="1311.50"></text></g><g><title>bcs::de::Deserializer::parse_string (330 samples, 0.43%)</title><rect x="21.8628%" y="1317" width="0.4285%" height="15" fill="rgb(230,13,37)" fg:x="16837" fg:w="330"/><text x="22.1128%" y="1327.50"></text></g><g><title>core::str::converts::from_utf8 (183 samples, 0.24%)</title><rect x="22.0537%" y="1301" width="0.2376%" height="15" fill="rgb(231,40,28)" fg:x="16984" fg:w="183"/><text x="22.3037%" y="1311.50"></text></g><g><title>core::str::validations::run_utf8_validation (140 samples, 0.18%)</title><rect x="22.1095%" y="1285" width="0.1818%" height="15" fill="rgb(231,202,18)" fg:x="17027" fg:w="140"/><text x="22.3595%" y="1295.50"></text></g><g><title>[libc.so.6] (128 samples, 0.17%)</title><rect x="22.4562%" y="1077" width="0.1662%" height="15" fill="rgb(225,33,18)" fg:x="17294" fg:w="128"/><text x="22.7062%" y="1087.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="22.5900%" y="1061" width="0.0325%" height="15" fill="rgb(223,64,47)" fg:x="17397" fg:w="25"/><text x="22.8400%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (242 samples, 0.31%)</title><rect x="22.3095%" y="1141" width="0.3142%" height="15" fill="rgb(234,114,13)" fg:x="17181" fg:w="242"/><text x="22.5595%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (242 samples, 0.31%)</title><rect x="22.3095%" y="1125" width="0.3142%" height="15" fill="rgb(248,56,40)" fg:x="17181" fg:w="242"/><text x="22.5595%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (242 samples, 0.31%)</title><rect x="22.3095%" y="1109" width="0.3142%" height="15" fill="rgb(221,194,21)" fg:x="17181" fg:w="242"/><text x="22.5595%" y="1119.50"></text></g><g><title>malloc (232 samples, 0.30%)</title><rect x="22.3225%" y="1093" width="0.3013%" height="15" fill="rgb(242,108,46)" fg:x="17191" fg:w="232"/><text x="22.5725%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (257 samples, 0.33%)</title><rect x="22.2913%" y="1189" width="0.3337%" height="15" fill="rgb(220,106,10)" fg:x="17167" fg:w="257"/><text x="22.5413%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (257 samples, 0.33%)</title><rect x="22.2913%" y="1173" width="0.3337%" height="15" fill="rgb(211,88,4)" fg:x="17167" fg:w="257"/><text x="22.5413%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (257 samples, 0.33%)</title><rect x="22.2913%" y="1157" width="0.3337%" height="15" fill="rgb(214,95,34)" fg:x="17167" fg:w="257"/><text x="22.5413%" y="1167.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (647 samples, 0.84%)</title><rect x="21.8291%" y="1429" width="0.8401%" height="15" fill="rgb(250,160,33)" fg:x="16811" fg:w="647"/><text x="22.0791%" y="1439.50"></text></g><g><title>serde::de::SeqAccess::next_element (641 samples, 0.83%)</title><rect x="21.8369%" y="1413" width="0.8323%" height="15" fill="rgb(225,29,10)" fg:x="16817" fg:w="641"/><text x="22.0869%" y="1423.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (641 samples, 0.83%)</title><rect x="21.8369%" y="1397" width="0.8323%" height="15" fill="rgb(224,28,30)" fg:x="16817" fg:w="641"/><text x="22.0869%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (640 samples, 0.83%)</title><rect x="21.8382%" y="1381" width="0.8310%" height="15" fill="rgb(231,77,4)" fg:x="16818" fg:w="640"/><text x="22.0882%" y="1391.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (640 samples, 0.83%)</title><rect x="21.8382%" y="1365" width="0.8310%" height="15" fill="rgb(209,63,21)" fg:x="16818" fg:w="640"/><text x="22.0882%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (640 samples, 0.83%)</title><rect x="21.8382%" y="1349" width="0.8310%" height="15" fill="rgb(226,22,11)" fg:x="16818" fg:w="640"/><text x="22.0882%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (640 samples, 0.83%)</title><rect x="21.8382%" y="1333" width="0.8310%" height="15" fill="rgb(216,82,30)" fg:x="16818" fg:w="640"/><text x="22.0882%" y="1343.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (291 samples, 0.38%)</title><rect x="22.2913%" y="1317" width="0.3779%" height="15" fill="rgb(246,227,38)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1327.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (291 samples, 0.38%)</title><rect x="22.2913%" y="1301" width="0.3779%" height="15" fill="rgb(251,203,53)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1311.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (291 samples, 0.38%)</title><rect x="22.2913%" y="1285" width="0.3779%" height="15" fill="rgb(254,101,1)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (291 samples, 0.38%)</title><rect x="22.2913%" y="1269" width="0.3779%" height="15" fill="rgb(241,180,5)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (291 samples, 0.38%)</title><rect x="22.2913%" y="1253" width="0.3779%" height="15" fill="rgb(218,168,4)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (291 samples, 0.38%)</title><rect x="22.2913%" y="1237" width="0.3779%" height="15" fill="rgb(224,223,32)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (291 samples, 0.38%)</title><rect x="22.2913%" y="1221" width="0.3779%" height="15" fill="rgb(236,106,22)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (291 samples, 0.38%)</title><rect x="22.2913%" y="1205" width="0.3779%" height="15" fill="rgb(206,121,5)" fg:x="17167" fg:w="291"/><text x="22.5413%" y="1215.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.04%)</title><rect x="22.6250%" y="1189" width="0.0441%" height="15" fill="rgb(233,87,28)" fg:x="17424" fg:w="34"/><text x="22.8750%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.04%)</title><rect x="22.6250%" y="1173" width="0.0441%" height="15" fill="rgb(236,137,17)" fg:x="17424" fg:w="34"/><text x="22.8750%" y="1183.50"></text></g><g><title>[libc.so.6] (33 samples, 0.04%)</title><rect x="22.6263%" y="1157" width="0.0429%" height="15" fill="rgb(209,183,38)" fg:x="17425" fg:w="33"/><text x="22.8763%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (917 samples, 1.19%)</title><rect x="21.5005%" y="1541" width="1.1907%" height="15" fill="rgb(206,162,44)" fg:x="16558" fg:w="917"/><text x="21.7505%" y="1551.50"></text></g><g><title>serde::de::MapAccess::next_entry (810 samples, 1.05%)</title><rect x="21.6395%" y="1525" width="1.0518%" height="15" fill="rgb(237,70,39)" fg:x="16665" fg:w="810"/><text x="21.8895%" y="1535.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (810 samples, 1.05%)</title><rect x="21.6395%" y="1509" width="1.0518%" height="15" fill="rgb(212,176,5)" fg:x="16665" fg:w="810"/><text x="21.8895%" y="1519.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (702 samples, 0.91%)</title><rect x="21.7797%" y="1493" width="0.9115%" height="15" fill="rgb(232,95,16)" fg:x="16773" fg:w="702"/><text x="22.0297%" y="1503.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (702 samples, 0.91%)</title><rect x="21.7797%" y="1477" width="0.9115%" height="15" fill="rgb(219,115,35)" fg:x="16773" fg:w="702"/><text x="22.0297%" y="1487.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (702 samples, 0.91%)</title><rect x="21.7797%" y="1461" width="0.9115%" height="15" fill="rgb(251,67,27)" fg:x="16773" fg:w="702"/><text x="22.0297%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (701 samples, 0.91%)</title><rect x="21.7810%" y="1445" width="0.9102%" height="15" fill="rgb(222,95,40)" fg:x="16774" fg:w="701"/><text x="22.0310%" y="1455.50"></text></g><g><title>bcs::de::Deserializer::parse_length (9 samples, 0.01%)</title><rect x="22.6913%" y="1541" width="0.0117%" height="15" fill="rgb(250,35,16)" fg:x="17475" fg:w="9"/><text x="22.9413%" y="1551.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (934 samples, 1.21%)</title><rect x="21.4915%" y="1589" width="1.2128%" height="15" fill="rgb(224,86,44)" fg:x="16551" fg:w="934"/><text x="21.7415%" y="1599.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (934 samples, 1.21%)</title><rect x="21.4915%" y="1573" width="1.2128%" height="15" fill="rgb(237,53,53)" fg:x="16551" fg:w="934"/><text x="21.7415%" y="1583.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (933 samples, 1.21%)</title><rect x="21.4928%" y="1557" width="1.2115%" height="15" fill="rgb(208,171,33)" fg:x="16552" fg:w="933"/><text x="21.7428%" y="1567.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (939 samples, 1.22%)</title><rect x="21.4889%" y="1637" width="1.2193%" height="15" fill="rgb(222,64,27)" fg:x="16549" fg:w="939"/><text x="21.7389%" y="1647.50"></text></g><g><title>serde::de::SeqAccess::next_element (937 samples, 1.22%)</title><rect x="21.4915%" y="1621" width="1.2167%" height="15" fill="rgb(221,121,35)" fg:x="16551" fg:w="937"/><text x="21.7415%" y="1631.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (937 samples, 1.22%)</title><rect x="21.4915%" y="1605" width="1.2167%" height="15" fill="rgb(228,137,42)" fg:x="16551" fg:w="937"/><text x="21.7415%" y="1615.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (944 samples, 1.23%)</title><rect x="21.4863%" y="1669" width="1.2258%" height="15" fill="rgb(227,54,21)" fg:x="16547" fg:w="944"/><text x="21.7363%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (944 samples, 1.23%)</title><rect x="21.4863%" y="1653" width="1.2258%" height="15" fill="rgb(240,168,33)" fg:x="16547" fg:w="944"/><text x="21.7363%" y="1663.50"></text></g><g><title>bcs::de::from_bytes (955 samples, 1.24%)</title><rect x="21.4759%" y="1685" width="1.2401%" height="15" fill="rgb(243,159,6)" fg:x="16539" fg:w="955"/><text x="21.7259%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::metadata::Metadata&gt; (13 samples, 0.02%)</title><rect x="22.7172%" y="1685" width="0.0169%" height="15" fill="rgb(205,211,41)" fg:x="17495" fg:w="13"/><text x="22.9672%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="22.7172%" y="1669" width="0.0169%" height="15" fill="rgb(253,30,1)" fg:x="17495" fg:w="13"/><text x="22.9672%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="22.7172%" y="1653" width="0.0169%" height="15" fill="rgb(226,80,18)" fg:x="17495" fg:w="13"/><text x="22.9672%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="22.7172%" y="1637" width="0.0169%" height="15" fill="rgb(253,156,46)" fg:x="17495" fg:w="13"/><text x="22.9672%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="22.7172%" y="1621" width="0.0169%" height="15" fill="rgb(248,87,27)" fg:x="17495" fg:w="13"/><text x="22.9672%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="22.7172%" y="1605" width="0.0169%" height="15" fill="rgb(227,122,2)" fg:x="17495" fg:w="13"/><text x="22.9672%" y="1615.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="22.7185%" y="1589" width="0.0156%" height="15" fill="rgb(229,94,39)" fg:x="17496" fg:w="12"/><text x="22.9685%" y="1599.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="22.7211%" y="1573" width="0.0130%" height="15" fill="rgb(225,173,31)" fg:x="17498" fg:w="10"/><text x="22.9711%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44 samples, 0.06%)</title><rect x="22.7497%" y="1557" width="0.0571%" height="15" fill="rgb(239,176,30)" fg:x="17520" fg:w="44"/><text x="22.9997%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44 samples, 0.06%)</title><rect x="22.7497%" y="1541" width="0.0571%" height="15" fill="rgb(212,104,21)" fg:x="17520" fg:w="44"/><text x="22.9997%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.06%)</title><rect x="22.7497%" y="1525" width="0.0571%" height="15" fill="rgb(240,209,40)" fg:x="17520" fg:w="44"/><text x="22.9997%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.06%)</title><rect x="22.7510%" y="1509" width="0.0558%" height="15" fill="rgb(234,195,5)" fg:x="17521" fg:w="43"/><text x="23.0010%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.06%)</title><rect x="22.7510%" y="1493" width="0.0558%" height="15" fill="rgb(238,213,1)" fg:x="17521" fg:w="43"/><text x="23.0010%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.06%)</title><rect x="22.7510%" y="1477" width="0.0558%" height="15" fill="rgb(235,182,54)" fg:x="17521" fg:w="43"/><text x="23.0010%" y="1487.50"></text></g><g><title>malloc (42 samples, 0.05%)</title><rect x="22.7523%" y="1461" width="0.0545%" height="15" fill="rgb(229,50,46)" fg:x="17522" fg:w="42"/><text x="23.0023%" y="1471.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="22.7653%" y="1445" width="0.0416%" height="15" fill="rgb(219,145,13)" fg:x="17532" fg:w="32"/><text x="23.0153%" y="1455.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="22.7887%" y="1429" width="0.0182%" height="15" fill="rgb(220,226,10)" fg:x="17550" fg:w="14"/><text x="23.0387%" y="1439.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (111 samples, 0.14%)</title><rect x="22.7471%" y="1653" width="0.1441%" height="15" fill="rgb(248,47,30)" fg:x="17518" fg:w="111"/><text x="22.9971%" y="1663.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (110 samples, 0.14%)</title><rect x="22.7484%" y="1637" width="0.1428%" height="15" fill="rgb(231,209,44)" fg:x="17519" fg:w="110"/><text x="22.9984%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (109 samples, 0.14%)</title><rect x="22.7497%" y="1621" width="0.1415%" height="15" fill="rgb(209,80,30)" fg:x="17520" fg:w="109"/><text x="22.9997%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (109 samples, 0.14%)</title><rect x="22.7497%" y="1605" width="0.1415%" height="15" fill="rgb(232,9,14)" fg:x="17520" fg:w="109"/><text x="22.9997%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (109 samples, 0.14%)</title><rect x="22.7497%" y="1589" width="0.1415%" height="15" fill="rgb(243,91,43)" fg:x="17520" fg:w="109"/><text x="22.9997%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (109 samples, 0.14%)</title><rect x="22.7497%" y="1573" width="0.1415%" height="15" fill="rgb(231,90,52)" fg:x="17520" fg:w="109"/><text x="22.9997%" y="1583.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (65 samples, 0.08%)</title><rect x="22.8068%" y="1557" width="0.0844%" height="15" fill="rgb(253,192,44)" fg:x="17564" fg:w="65"/><text x="23.0568%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.08%)</title><rect x="22.8068%" y="1541" width="0.0844%" height="15" fill="rgb(241,66,31)" fg:x="17564" fg:w="65"/><text x="23.0568%" y="1551.50"></text></g><g><title>[libc.so.6] (65 samples, 0.08%)</title><rect x="22.8068%" y="1525" width="0.0844%" height="15" fill="rgb(235,81,37)" fg:x="17564" fg:w="65"/><text x="23.0568%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (32 samples, 0.04%)</title><rect x="22.8912%" y="1653" width="0.0416%" height="15" fill="rgb(223,221,9)" fg:x="17629" fg:w="32"/><text x="23.1412%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (32 samples, 0.04%)</title><rect x="22.8912%" y="1637" width="0.0416%" height="15" fill="rgb(242,180,7)" fg:x="17629" fg:w="32"/><text x="23.1412%" y="1647.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (31 samples, 0.04%)</title><rect x="22.8925%" y="1621" width="0.0403%" height="15" fill="rgb(243,78,19)" fg:x="17630" fg:w="31"/><text x="23.1425%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (25 samples, 0.03%)</title><rect x="22.9003%" y="1605" width="0.0325%" height="15" fill="rgb(233,23,17)" fg:x="17636" fg:w="25"/><text x="23.1503%" y="1615.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (25 samples, 0.03%)</title><rect x="22.9003%" y="1589" width="0.0325%" height="15" fill="rgb(252,122,45)" fg:x="17636" fg:w="25"/><text x="23.1503%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25 samples, 0.03%)</title><rect x="22.9003%" y="1573" width="0.0325%" height="15" fill="rgb(247,108,20)" fg:x="17636" fg:w="25"/><text x="23.1503%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.03%)</title><rect x="22.9003%" y="1557" width="0.0325%" height="15" fill="rgb(235,84,21)" fg:x="17636" fg:w="25"/><text x="23.1503%" y="1567.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="22.9172%" y="1541" width="0.0156%" height="15" fill="rgb(247,129,10)" fg:x="17649" fg:w="12"/><text x="23.1672%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="22.9445%" y="1589" width="0.0195%" height="15" fill="rgb(208,173,14)" fg:x="17670" fg:w="15"/><text x="23.1945%" y="1599.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.02%)</title><rect x="22.9445%" y="1573" width="0.0195%" height="15" fill="rgb(236,31,38)" fg:x="17670" fg:w="15"/><text x="23.1945%" y="1583.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (1,199 samples, 1.56%)</title><rect x="21.4239%" y="1717" width="1.5569%" height="15" fill="rgb(232,65,17)" fg:x="16499" fg:w="1199"/><text x="21.6739%" y="1727.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (1,199 samples, 1.56%)</title><rect x="21.4239%" y="1701" width="1.5569%" height="15" fill="rgb(224,45,49)" fg:x="16499" fg:w="1199"/><text x="21.6739%" y="1711.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (188 samples, 0.24%)</title><rect x="22.7367%" y="1685" width="0.2441%" height="15" fill="rgb(225,2,53)" fg:x="17510" fg:w="188"/><text x="22.9867%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (182 samples, 0.24%)</title><rect x="22.7445%" y="1669" width="0.2363%" height="15" fill="rgb(248,210,53)" fg:x="17516" fg:w="182"/><text x="22.9945%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (29 samples, 0.04%)</title><rect x="22.9432%" y="1653" width="0.0377%" height="15" fill="rgb(211,1,30)" fg:x="17669" fg:w="29"/><text x="23.1932%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (28 samples, 0.04%)</title><rect x="22.9445%" y="1637" width="0.0364%" height="15" fill="rgb(224,96,15)" fg:x="17670" fg:w="28"/><text x="23.1945%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (28 samples, 0.04%)</title><rect x="22.9445%" y="1621" width="0.0364%" height="15" fill="rgb(252,45,11)" fg:x="17670" fg:w="28"/><text x="23.1945%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28 samples, 0.04%)</title><rect x="22.9445%" y="1605" width="0.0364%" height="15" fill="rgb(220,125,38)" fg:x="17670" fg:w="28"/><text x="23.1945%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.02%)</title><rect x="22.9640%" y="1589" width="0.0169%" height="15" fill="rgb(243,161,33)" fg:x="17685" fg:w="13"/><text x="23.2140%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="22.9640%" y="1573" width="0.0169%" height="15" fill="rgb(248,197,34)" fg:x="17685" fg:w="13"/><text x="23.2140%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.02%)</title><rect x="22.9640%" y="1557" width="0.0169%" height="15" fill="rgb(228,165,23)" fg:x="17685" fg:w="13"/><text x="23.2140%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="22.9808%" y="1413" width="0.0143%" height="15" fill="rgb(236,94,38)" fg:x="17698" fg:w="11"/><text x="23.2308%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (12 samples, 0.02%)</title><rect x="22.9808%" y="1589" width="0.0156%" height="15" fill="rgb(220,13,23)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1599.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (12 samples, 0.02%)</title><rect x="22.9808%" y="1573" width="0.0156%" height="15" fill="rgb(234,26,39)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1583.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (12 samples, 0.02%)</title><rect x="22.9808%" y="1557" width="0.0156%" height="15" fill="rgb(205,117,44)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="22.9808%" y="1541" width="0.0156%" height="15" fill="rgb(250,42,2)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="22.9808%" y="1525" width="0.0156%" height="15" fill="rgb(223,83,14)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="22.9808%" y="1509" width="0.0156%" height="15" fill="rgb(241,147,50)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="22.9808%" y="1493" width="0.0156%" height="15" fill="rgb(218,90,6)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="22.9808%" y="1477" width="0.0156%" height="15" fill="rgb(210,191,5)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="22.9808%" y="1461" width="0.0156%" height="15" fill="rgb(225,139,19)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="22.9808%" y="1445" width="0.0156%" height="15" fill="rgb(210,1,33)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.02%)</title><rect x="22.9808%" y="1429" width="0.0156%" height="15" fill="rgb(213,50,3)" fg:x="17698" fg:w="12"/><text x="23.2308%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (110 samples, 0.14%)</title><rect x="23.0120%" y="1397" width="0.1428%" height="15" fill="rgb(234,227,4)" fg:x="17722" fg:w="110"/><text x="23.2620%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (110 samples, 0.14%)</title><rect x="23.0120%" y="1381" width="0.1428%" height="15" fill="rgb(246,63,5)" fg:x="17722" fg:w="110"/><text x="23.2620%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (100 samples, 0.13%)</title><rect x="23.0250%" y="1365" width="0.1298%" height="15" fill="rgb(245,136,27)" fg:x="17732" fg:w="100"/><text x="23.2750%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (100 samples, 0.13%)</title><rect x="23.0250%" y="1349" width="0.1298%" height="15" fill="rgb(247,199,27)" fg:x="17732" fg:w="100"/><text x="23.2750%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (96 samples, 0.12%)</title><rect x="23.0302%" y="1333" width="0.1247%" height="15" fill="rgb(252,158,49)" fg:x="17736" fg:w="96"/><text x="23.2802%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (85 samples, 0.11%)</title><rect x="23.0445%" y="1317" width="0.1104%" height="15" fill="rgb(254,73,1)" fg:x="17747" fg:w="85"/><text x="23.2945%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (85 samples, 0.11%)</title><rect x="23.0445%" y="1301" width="0.1104%" height="15" fill="rgb(248,93,19)" fg:x="17747" fg:w="85"/><text x="23.2945%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (85 samples, 0.11%)</title><rect x="23.0445%" y="1285" width="0.1104%" height="15" fill="rgb(206,67,5)" fg:x="17747" fg:w="85"/><text x="23.2945%" y="1295.50"></text></g><g><title>realloc (83 samples, 0.11%)</title><rect x="23.0471%" y="1269" width="0.1078%" height="15" fill="rgb(209,210,4)" fg:x="17749" fg:w="83"/><text x="23.2971%" y="1279.50"></text></g><g><title>[libc.so.6] (61 samples, 0.08%)</title><rect x="23.0756%" y="1253" width="0.0792%" height="15" fill="rgb(214,185,36)" fg:x="17771" fg:w="61"/><text x="23.3256%" y="1263.50"></text></g><g><title>[libc.so.6] (49 samples, 0.06%)</title><rect x="23.0912%" y="1237" width="0.0636%" height="15" fill="rgb(233,191,26)" fg:x="17783" fg:w="49"/><text x="23.3412%" y="1247.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (120 samples, 0.16%)</title><rect x="23.0003%" y="1557" width="0.1558%" height="15" fill="rgb(248,94,17)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (120 samples, 0.16%)</title><rect x="23.0003%" y="1541" width="0.1558%" height="15" fill="rgb(250,64,4)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (120 samples, 0.16%)</title><rect x="23.0003%" y="1525" width="0.1558%" height="15" fill="rgb(218,41,53)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (120 samples, 0.16%)</title><rect x="23.0003%" y="1509" width="0.1558%" height="15" fill="rgb(251,176,28)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (120 samples, 0.16%)</title><rect x="23.0003%" y="1493" width="0.1558%" height="15" fill="rgb(247,22,9)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (120 samples, 0.16%)</title><rect x="23.0003%" y="1477" width="0.1558%" height="15" fill="rgb(218,201,14)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (120 samples, 0.16%)</title><rect x="23.0003%" y="1461" width="0.1558%" height="15" fill="rgb(218,94,10)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (120 samples, 0.16%)</title><rect x="23.0003%" y="1445" width="0.1558%" height="15" fill="rgb(222,183,52)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (120 samples, 0.16%)</title><rect x="23.0003%" y="1429" width="0.1558%" height="15" fill="rgb(242,140,25)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (120 samples, 0.16%)</title><rect x="23.0003%" y="1413" width="0.1558%" height="15" fill="rgb(235,197,38)" fg:x="17713" fg:w="120"/><text x="23.2503%" y="1423.50"></text></g><g><title>[libc.so.6] (15 samples, 0.02%)</title><rect x="23.1782%" y="1253" width="0.0195%" height="15" fill="rgb(237,136,15)" fg:x="17850" fg:w="15"/><text x="23.4282%" y="1263.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="23.1821%" y="1237" width="0.0156%" height="15" fill="rgb(223,44,49)" fg:x="17853" fg:w="12"/><text x="23.4321%" y="1247.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.03%)</title><rect x="23.1730%" y="1333" width="0.0260%" height="15" fill="rgb(227,71,15)" fg:x="17846" fg:w="20"/><text x="23.4230%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.03%)</title><rect x="23.1730%" y="1317" width="0.0260%" height="15" fill="rgb(225,153,20)" fg:x="17846" fg:w="20"/><text x="23.4230%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.03%)</title><rect x="23.1730%" y="1301" width="0.0260%" height="15" fill="rgb(210,190,26)" fg:x="17846" fg:w="20"/><text x="23.4230%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.03%)</title><rect x="23.1730%" y="1285" width="0.0260%" height="15" fill="rgb(223,147,5)" fg:x="17846" fg:w="20"/><text x="23.4230%" y="1295.50"></text></g><g><title>realloc (18 samples, 0.02%)</title><rect x="23.1756%" y="1269" width="0.0234%" height="15" fill="rgb(207,14,23)" fg:x="17848" fg:w="18"/><text x="23.4256%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 0.03%)</title><rect x="23.1665%" y="1397" width="0.0338%" height="15" fill="rgb(211,195,53)" fg:x="17841" fg:w="26"/><text x="23.4165%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.03%)</title><rect x="23.1665%" y="1381" width="0.0338%" height="15" fill="rgb(237,75,46)" fg:x="17841" fg:w="26"/><text x="23.4165%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.03%)</title><rect x="23.1704%" y="1365" width="0.0299%" height="15" fill="rgb(254,55,14)" fg:x="17844" fg:w="23"/><text x="23.4204%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.03%)</title><rect x="23.1730%" y="1349" width="0.0273%" height="15" fill="rgb(230,185,30)" fg:x="17846" fg:w="21"/><text x="23.4230%" y="1359.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (43 samples, 0.06%)</title><rect x="23.1561%" y="1557" width="0.0558%" height="15" fill="rgb(220,14,11)" fg:x="17833" fg:w="43"/><text x="23.4061%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (43 samples, 0.06%)</title><rect x="23.1561%" y="1541" width="0.0558%" height="15" fill="rgb(215,169,44)" fg:x="17833" fg:w="43"/><text x="23.4061%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (40 samples, 0.05%)</title><rect x="23.1600%" y="1525" width="0.0519%" height="15" fill="rgb(253,203,20)" fg:x="17836" fg:w="40"/><text x="23.4100%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (40 samples, 0.05%)</title><rect x="23.1600%" y="1509" width="0.0519%" height="15" fill="rgb(229,225,17)" fg:x="17836" fg:w="40"/><text x="23.4100%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (40 samples, 0.05%)</title><rect x="23.1600%" y="1493" width="0.0519%" height="15" fill="rgb(236,76,26)" fg:x="17836" fg:w="40"/><text x="23.4100%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (40 samples, 0.05%)</title><rect x="23.1600%" y="1477" width="0.0519%" height="15" fill="rgb(234,15,30)" fg:x="17836" fg:w="40"/><text x="23.4100%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (36 samples, 0.05%)</title><rect x="23.1652%" y="1461" width="0.0467%" height="15" fill="rgb(211,113,48)" fg:x="17840" fg:w="36"/><text x="23.4152%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.05%)</title><rect x="23.1652%" y="1445" width="0.0467%" height="15" fill="rgb(221,31,36)" fg:x="17840" fg:w="36"/><text x="23.4152%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.05%)</title><rect x="23.1652%" y="1429" width="0.0467%" height="15" fill="rgb(215,118,52)" fg:x="17840" fg:w="36"/><text x="23.4152%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.05%)</title><rect x="23.1652%" y="1413" width="0.0467%" height="15" fill="rgb(241,151,27)" fg:x="17840" fg:w="36"/><text x="23.4152%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="23.2003%" y="1397" width="0.0117%" height="15" fill="rgb(253,51,3)" fg:x="17867" fg:w="9"/><text x="23.4503%" y="1407.50"></text></g><g><title>bcs::ser::to_bytes (179 samples, 0.23%)</title><rect x="22.9808%" y="1637" width="0.2324%" height="15" fill="rgb(216,201,24)" fg:x="17698" fg:w="179"/><text x="23.2308%" y="1647.50"></text></g><g><title>bcs::ser::serialize_into (179 samples, 0.23%)</title><rect x="22.9808%" y="1621" width="0.2324%" height="15" fill="rgb(231,107,4)" fg:x="17698" fg:w="179"/><text x="23.2308%" y="1631.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (179 samples, 0.23%)</title><rect x="22.9808%" y="1605" width="0.2324%" height="15" fill="rgb(243,97,54)" fg:x="17698" fg:w="179"/><text x="23.2308%" y="1615.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (167 samples, 0.22%)</title><rect x="22.9964%" y="1589" width="0.2168%" height="15" fill="rgb(221,32,51)" fg:x="17710" fg:w="167"/><text x="23.2464%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (164 samples, 0.21%)</title><rect x="23.0003%" y="1573" width="0.2130%" height="15" fill="rgb(218,171,35)" fg:x="17713" fg:w="164"/><text x="23.2503%" y="1583.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (180 samples, 0.23%)</title><rect x="22.9808%" y="1669" width="0.2337%" height="15" fill="rgb(214,20,53)" fg:x="17698" fg:w="180"/><text x="23.2308%" y="1679.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (180 samples, 0.23%)</title><rect x="22.9808%" y="1653" width="0.2337%" height="15" fill="rgb(239,9,52)" fg:x="17698" fg:w="180"/><text x="23.2308%" y="1663.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (16 samples, 0.02%)</title><rect x="23.2483%" y="1413" width="0.0208%" height="15" fill="rgb(215,114,45)" fg:x="17904" fg:w="16"/><text x="23.4983%" y="1423.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="23.2535%" y="1397" width="0.0156%" height="15" fill="rgb(208,118,9)" fg:x="17908" fg:w="12"/><text x="23.5035%" y="1407.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.02%)</title><rect x="23.2535%" y="1381" width="0.0156%" height="15" fill="rgb(235,7,39)" fg:x="17908" fg:w="12"/><text x="23.5035%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.02%)</title><rect x="23.2535%" y="1365" width="0.0156%" height="15" fill="rgb(243,225,15)" fg:x="17908" fg:w="12"/><text x="23.5035%" y="1375.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (27 samples, 0.04%)</title><rect x="23.2483%" y="1445" width="0.0351%" height="15" fill="rgb(225,216,18)" fg:x="17904" fg:w="27"/><text x="23.4983%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (27 samples, 0.04%)</title><rect x="23.2483%" y="1429" width="0.0351%" height="15" fill="rgb(233,36,38)" fg:x="17904" fg:w="27"/><text x="23.4983%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (11 samples, 0.01%)</title><rect x="23.2691%" y="1413" width="0.0143%" height="15" fill="rgb(239,88,23)" fg:x="17920" fg:w="11"/><text x="23.5191%" y="1423.50"></text></g><g><title>core::hash::Hasher::write_isize (11 samples, 0.01%)</title><rect x="23.2691%" y="1397" width="0.0143%" height="15" fill="rgb(219,181,35)" fg:x="17920" fg:w="11"/><text x="23.5191%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.01%)</title><rect x="23.2691%" y="1381" width="0.0143%" height="15" fill="rgb(215,18,46)" fg:x="17920" fg:w="11"/><text x="23.5191%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="23.2691%" y="1365" width="0.0143%" height="15" fill="rgb(241,38,11)" fg:x="17920" fg:w="11"/><text x="23.5191%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="23.2704%" y="1349" width="0.0130%" height="15" fill="rgb(248,169,45)" fg:x="17921" fg:w="10"/><text x="23.5204%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="23.2704%" y="1333" width="0.0130%" height="15" fill="rgb(239,50,49)" fg:x="17921" fg:w="10"/><text x="23.5204%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="23.2730%" y="1317" width="0.0104%" height="15" fill="rgb(231,96,31)" fg:x="17923" fg:w="8"/><text x="23.5230%" y="1327.50"></text></g><g><title>hashbrown::map::make_hash (45 samples, 0.06%)</title><rect x="23.2366%" y="1493" width="0.0584%" height="15" fill="rgb(224,193,37)" fg:x="17895" fg:w="45"/><text x="23.4866%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45 samples, 0.06%)</title><rect x="23.2366%" y="1477" width="0.0584%" height="15" fill="rgb(227,153,50)" fg:x="17895" fg:w="45"/><text x="23.4866%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.05%)</title><rect x="23.2483%" y="1461" width="0.0467%" height="15" fill="rgb(249,228,3)" fg:x="17904" fg:w="36"/><text x="23.4983%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="23.2834%" y="1445" width="0.0117%" height="15" fill="rgb(219,164,43)" fg:x="17931" fg:w="9"/><text x="23.5334%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="23.2834%" y="1429" width="0.0117%" height="15" fill="rgb(216,45,41)" fg:x="17931" fg:w="9"/><text x="23.5334%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="23.2834%" y="1413" width="0.0117%" height="15" fill="rgb(210,226,51)" fg:x="17931" fg:w="9"/><text x="23.5334%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="23.2834%" y="1397" width="0.0117%" height="15" fill="rgb(209,117,49)" fg:x="17931" fg:w="9"/><text x="23.5334%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (32 samples, 0.04%)</title><rect x="23.2977%" y="1445" width="0.0416%" height="15" fill="rgb(206,196,24)" fg:x="17942" fg:w="32"/><text x="23.5477%" y="1455.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (32 samples, 0.04%)</title><rect x="23.2977%" y="1429" width="0.0416%" height="15" fill="rgb(253,218,3)" fg:x="17942" fg:w="32"/><text x="23.5477%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (32 samples, 0.04%)</title><rect x="23.2977%" y="1413" width="0.0416%" height="15" fill="rgb(252,166,2)" fg:x="17942" fg:w="32"/><text x="23.5477%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (32 samples, 0.04%)</title><rect x="23.2977%" y="1397" width="0.0416%" height="15" fill="rgb(236,218,26)" fg:x="17942" fg:w="32"/><text x="23.5477%" y="1407.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (32 samples, 0.04%)</title><rect x="23.2977%" y="1381" width="0.0416%" height="15" fill="rgb(254,84,19)" fg:x="17942" fg:w="32"/><text x="23.5477%" y="1391.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="23.3171%" y="1365" width="0.0221%" height="15" fill="rgb(219,137,29)" fg:x="17957" fg:w="17"/><text x="23.5671%" y="1375.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (100 samples, 0.13%)</title><rect x="23.2211%" y="1557" width="0.1298%" height="15" fill="rgb(227,47,52)" fg:x="17883" fg:w="100"/><text x="23.4711%" y="1567.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (88 samples, 0.11%)</title><rect x="23.2366%" y="1541" width="0.1143%" height="15" fill="rgb(229,167,24)" fg:x="17895" fg:w="88"/><text x="23.4866%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (88 samples, 0.11%)</title><rect x="23.2366%" y="1525" width="0.1143%" height="15" fill="rgb(233,164,1)" fg:x="17895" fg:w="88"/><text x="23.4866%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (88 samples, 0.11%)</title><rect x="23.2366%" y="1509" width="0.1143%" height="15" fill="rgb(218,88,48)" fg:x="17895" fg:w="88"/><text x="23.4866%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 0.06%)</title><rect x="23.2951%" y="1493" width="0.0558%" height="15" fill="rgb(226,214,24)" fg:x="17940" fg:w="43"/><text x="23.5451%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.06%)</title><rect x="23.2951%" y="1477" width="0.0558%" height="15" fill="rgb(233,29,12)" fg:x="17940" fg:w="43"/><text x="23.5451%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (43 samples, 0.06%)</title><rect x="23.2951%" y="1461" width="0.0558%" height="15" fill="rgb(219,120,34)" fg:x="17940" fg:w="43"/><text x="23.5451%" y="1471.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%)</title><rect x="23.3405%" y="1445" width="0.0104%" height="15" fill="rgb(226,78,44)" fg:x="17975" fg:w="8"/><text x="23.5905%" y="1455.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.01%)</title><rect x="23.3405%" y="1429" width="0.0104%" height="15" fill="rgb(240,15,48)" fg:x="17975" fg:w="8"/><text x="23.5905%" y="1439.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="23.3405%" y="1413" width="0.0104%" height="15" fill="rgb(253,176,7)" fg:x="17975" fg:w="8"/><text x="23.5905%" y="1423.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="23.3535%" y="1541" width="0.0117%" height="15" fill="rgb(206,166,28)" fg:x="17985" fg:w="9"/><text x="23.6035%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="23.3535%" y="1525" width="0.0117%" height="15" fill="rgb(241,53,51)" fg:x="17985" fg:w="9"/><text x="23.6035%" y="1535.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="23.3535%" y="1509" width="0.0117%" height="15" fill="rgb(249,112,30)" fg:x="17985" fg:w="9"/><text x="23.6035%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="23.3535%" y="1493" width="0.0117%" height="15" fill="rgb(217,85,30)" fg:x="17985" fg:w="9"/><text x="23.6035%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (106 samples, 0.14%)</title><rect x="23.3665%" y="1525" width="0.1376%" height="15" fill="rgb(233,49,7)" fg:x="17995" fg:w="106"/><text x="23.6165%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (106 samples, 0.14%)</title><rect x="23.3665%" y="1509" width="0.1376%" height="15" fill="rgb(234,109,9)" fg:x="17995" fg:w="106"/><text x="23.6165%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 samples, 0.14%)</title><rect x="23.3678%" y="1493" width="0.1363%" height="15" fill="rgb(253,95,22)" fg:x="17996" fg:w="105"/><text x="23.6178%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (104 samples, 0.14%)</title><rect x="23.3691%" y="1477" width="0.1350%" height="15" fill="rgb(233,176,25)" fg:x="17997" fg:w="104"/><text x="23.6191%" y="1487.50"></text></g><g><title>alloc::alloc::Global::grow_impl (104 samples, 0.14%)</title><rect x="23.3691%" y="1461" width="0.1350%" height="15" fill="rgb(236,33,39)" fg:x="17997" fg:w="104"/><text x="23.6191%" y="1471.50"></text></g><g><title>alloc::alloc::realloc (104 samples, 0.14%)</title><rect x="23.3691%" y="1445" width="0.1350%" height="15" fill="rgb(223,226,42)" fg:x="17997" fg:w="104"/><text x="23.6191%" y="1455.50"></text></g><g><title>realloc (103 samples, 0.13%)</title><rect x="23.3704%" y="1429" width="0.1337%" height="15" fill="rgb(216,99,33)" fg:x="17998" fg:w="103"/><text x="23.6204%" y="1439.50"></text></g><g><title>[libc.so.6] (98 samples, 0.13%)</title><rect x="23.3769%" y="1413" width="0.1273%" height="15" fill="rgb(235,84,23)" fg:x="18003" fg:w="98"/><text x="23.6269%" y="1423.50"></text></g><g><title>[libc.so.6] (94 samples, 0.12%)</title><rect x="23.3821%" y="1397" width="0.1221%" height="15" fill="rgb(232,2,27)" fg:x="18007" fg:w="94"/><text x="23.6321%" y="1407.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="23.4860%" y="1381" width="0.0182%" height="15" fill="rgb(241,23,22)" fg:x="18087" fg:w="14"/><text x="23.7360%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (116 samples, 0.15%)</title><rect x="23.3652%" y="1541" width="0.1506%" height="15" fill="rgb(211,73,27)" fg:x="17994" fg:w="116"/><text x="23.6152%" y="1551.50"></text></g><g><title>core::ptr::write (9 samples, 0.01%)</title><rect x="23.5041%" y="1525" width="0.0117%" height="15" fill="rgb(235,109,49)" fg:x="18101" fg:w="9"/><text x="23.7541%" y="1535.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="23.5041%" y="1509" width="0.0117%" height="15" fill="rgb(230,99,29)" fg:x="18101" fg:w="9"/><text x="23.7541%" y="1519.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (17 samples, 0.02%)</title><rect x="23.5392%" y="1493" width="0.0221%" height="15" fill="rgb(245,199,7)" fg:x="18128" fg:w="17"/><text x="23.7892%" y="1503.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (17 samples, 0.02%)</title><rect x="23.5392%" y="1477" width="0.0221%" height="15" fill="rgb(217,179,10)" fg:x="18128" fg:w="17"/><text x="23.7892%" y="1487.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (17 samples, 0.02%)</title><rect x="23.5392%" y="1461" width="0.0221%" height="15" fill="rgb(254,99,47)" fg:x="18128" fg:w="17"/><text x="23.7892%" y="1471.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (13 samples, 0.02%)</title><rect x="23.5444%" y="1445" width="0.0169%" height="15" fill="rgb(251,121,7)" fg:x="18132" fg:w="13"/><text x="23.7944%" y="1455.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (13 samples, 0.02%)</title><rect x="23.5444%" y="1429" width="0.0169%" height="15" fill="rgb(250,177,26)" fg:x="18132" fg:w="13"/><text x="23.7944%" y="1439.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (13 samples, 0.02%)</title><rect x="23.5444%" y="1413" width="0.0169%" height="15" fill="rgb(232,88,15)" fg:x="18132" fg:w="13"/><text x="23.7944%" y="1423.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (286 samples, 0.37%)</title><rect x="23.2146%" y="1589" width="0.3714%" height="15" fill="rgb(251,54,54)" fg:x="17878" fg:w="286"/><text x="23.4646%" y="1599.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (286 samples, 0.37%)</title><rect x="23.2146%" y="1573" width="0.3714%" height="15" fill="rgb(208,177,15)" fg:x="17878" fg:w="286"/><text x="23.4646%" y="1583.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (181 samples, 0.24%)</title><rect x="23.3509%" y="1557" width="0.2350%" height="15" fill="rgb(205,97,32)" fg:x="17983" fg:w="181"/><text x="23.6009%" y="1567.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (49 samples, 0.06%)</title><rect x="23.5223%" y="1541" width="0.0636%" height="15" fill="rgb(217,192,13)" fg:x="18115" fg:w="49"/><text x="23.7723%" y="1551.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (42 samples, 0.05%)</title><rect x="23.5314%" y="1525" width="0.0545%" height="15" fill="rgb(215,163,41)" fg:x="18122" fg:w="42"/><text x="23.7814%" y="1535.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (42 samples, 0.05%)</title><rect x="23.5314%" y="1509" width="0.0545%" height="15" fill="rgb(246,83,29)" fg:x="18122" fg:w="42"/><text x="23.7814%" y="1519.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (16 samples, 0.02%)</title><rect x="23.5652%" y="1493" width="0.0208%" height="15" fill="rgb(219,2,45)" fg:x="18148" fg:w="16"/><text x="23.8152%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.01%)</title><rect x="23.5742%" y="1477" width="0.0117%" height="15" fill="rgb(242,215,33)" fg:x="18155" fg:w="9"/><text x="23.8242%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="23.5742%" y="1461" width="0.0117%" height="15" fill="rgb(217,1,6)" fg:x="18155" fg:w="9"/><text x="23.8242%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="23.5742%" y="1445" width="0.0117%" height="15" fill="rgb(207,85,52)" fg:x="18155" fg:w="9"/><text x="23.8242%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="23.5742%" y="1429" width="0.0117%" height="15" fill="rgb(231,171,19)" fg:x="18155" fg:w="9"/><text x="23.8242%" y="1439.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (289 samples, 0.38%)</title><rect x="23.2146%" y="1605" width="0.3753%" height="15" fill="rgb(207,128,4)" fg:x="17878" fg:w="289"/><text x="23.4646%" y="1615.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (1,670 samples, 2.17%)</title><rect x="21.4239%" y="1749" width="2.1685%" height="15" fill="rgb(219,208,4)" fg:x="16499" fg:w="1670"/><text x="21.6739%" y="1759.50">&lt;..</text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (1,670 samples, 2.17%)</title><rect x="21.4239%" y="1733" width="2.1685%" height="15" fill="rgb(235,161,42)" fg:x="16499" fg:w="1670"/><text x="21.6739%" y="1743.50">a..</text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (471 samples, 0.61%)</title><rect x="22.9808%" y="1717" width="0.6116%" height="15" fill="rgb(247,218,18)" fg:x="17698" fg:w="471"/><text x="23.2308%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (471 samples, 0.61%)</title><rect x="22.9808%" y="1701" width="0.6116%" height="15" fill="rgb(232,114,51)" fg:x="17698" fg:w="471"/><text x="23.2308%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (471 samples, 0.61%)</title><rect x="22.9808%" y="1685" width="0.6116%" height="15" fill="rgb(222,95,3)" fg:x="17698" fg:w="471"/><text x="23.2308%" y="1695.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (291 samples, 0.38%)</title><rect x="23.2146%" y="1669" width="0.3779%" height="15" fill="rgb(240,65,29)" fg:x="17878" fg:w="291"/><text x="23.4646%" y="1679.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (291 samples, 0.38%)</title><rect x="23.2146%" y="1653" width="0.3779%" height="15" fill="rgb(249,209,20)" fg:x="17878" fg:w="291"/><text x="23.4646%" y="1663.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (291 samples, 0.38%)</title><rect x="23.2146%" y="1637" width="0.3779%" height="15" fill="rgb(241,48,37)" fg:x="17878" fg:w="291"/><text x="23.4646%" y="1647.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (291 samples, 0.38%)</title><rect x="23.2146%" y="1621" width="0.3779%" height="15" fill="rgb(230,140,42)" fg:x="17878" fg:w="291"/><text x="23.4646%" y="1631.50"></text></g><g><title>core::intrinsics::copy (8 samples, 0.01%)</title><rect x="23.6015%" y="1653" width="0.0104%" height="15" fill="rgb(230,176,45)" fg:x="18176" fg:w="8"/><text x="23.8515%" y="1663.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="23.6015%" y="1637" width="0.0104%" height="15" fill="rgb(245,112,21)" fg:x="18176" fg:w="8"/><text x="23.8515%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.02%)</title><rect x="23.5924%" y="1749" width="0.0247%" height="15" fill="rgb(207,183,35)" fg:x="18169" fg:w="19"/><text x="23.8424%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (19 samples, 0.02%)</title><rect x="23.5924%" y="1733" width="0.0247%" height="15" fill="rgb(227,44,33)" fg:x="18169" fg:w="19"/><text x="23.8424%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (19 samples, 0.02%)</title><rect x="23.5924%" y="1717" width="0.0247%" height="15" fill="rgb(246,120,21)" fg:x="18169" fg:w="19"/><text x="23.8424%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (14 samples, 0.02%)</title><rect x="23.5989%" y="1701" width="0.0182%" height="15" fill="rgb(235,57,52)" fg:x="18174" fg:w="14"/><text x="23.8489%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (14 samples, 0.02%)</title><rect x="23.5989%" y="1685" width="0.0182%" height="15" fill="rgb(238,84,10)" fg:x="18174" fg:w="14"/><text x="23.8489%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (12 samples, 0.02%)</title><rect x="23.6015%" y="1669" width="0.0156%" height="15" fill="rgb(251,200,32)" fg:x="18176" fg:w="12"/><text x="23.8515%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="23.6625%" y="1605" width="0.0104%" height="15" fill="rgb(247,159,13)" fg:x="18223" fg:w="8"/><text x="23.9125%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.10%)</title><rect x="23.6989%" y="1477" width="0.1000%" height="15" fill="rgb(238,64,4)" fg:x="18251" fg:w="77"/><text x="23.9489%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.10%)</title><rect x="23.6989%" y="1461" width="0.1000%" height="15" fill="rgb(221,131,51)" fg:x="18251" fg:w="77"/><text x="23.9489%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.10%)</title><rect x="23.7002%" y="1445" width="0.0987%" height="15" fill="rgb(242,5,29)" fg:x="18252" fg:w="76"/><text x="23.9502%" y="1455.50"></text></g><g><title>malloc (72 samples, 0.09%)</title><rect x="23.7054%" y="1429" width="0.0935%" height="15" fill="rgb(214,130,32)" fg:x="18256" fg:w="72"/><text x="23.9554%" y="1439.50"></text></g><g><title>[libc.so.6] (55 samples, 0.07%)</title><rect x="23.7275%" y="1413" width="0.0714%" height="15" fill="rgb(244,210,16)" fg:x="18273" fg:w="55"/><text x="23.9775%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (80 samples, 0.10%)</title><rect x="23.6963%" y="1525" width="0.1039%" height="15" fill="rgb(234,48,26)" fg:x="18249" fg:w="80"/><text x="23.9463%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (80 samples, 0.10%)</title><rect x="23.6963%" y="1509" width="0.1039%" height="15" fill="rgb(231,82,38)" fg:x="18249" fg:w="80"/><text x="23.9463%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (80 samples, 0.10%)</title><rect x="23.6963%" y="1493" width="0.1039%" height="15" fill="rgb(254,128,41)" fg:x="18249" fg:w="80"/><text x="23.9463%" y="1503.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (135 samples, 0.18%)</title><rect x="23.6366%" y="1621" width="0.1753%" height="15" fill="rgb(212,73,49)" fg:x="18203" fg:w="135"/><text x="23.8866%" y="1631.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (107 samples, 0.14%)</title><rect x="23.6729%" y="1605" width="0.1389%" height="15" fill="rgb(205,62,54)" fg:x="18231" fg:w="107"/><text x="23.9229%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (102 samples, 0.13%)</title><rect x="23.6794%" y="1589" width="0.1324%" height="15" fill="rgb(228,0,8)" fg:x="18236" fg:w="102"/><text x="23.9294%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (95 samples, 0.12%)</title><rect x="23.6885%" y="1573" width="0.1234%" height="15" fill="rgb(251,28,17)" fg:x="18243" fg:w="95"/><text x="23.9385%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (95 samples, 0.12%)</title><rect x="23.6885%" y="1557" width="0.1234%" height="15" fill="rgb(238,105,27)" fg:x="18243" fg:w="95"/><text x="23.9385%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (95 samples, 0.12%)</title><rect x="23.6885%" y="1541" width="0.1234%" height="15" fill="rgb(237,216,33)" fg:x="18243" fg:w="95"/><text x="23.9385%" y="1551.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.01%)</title><rect x="23.8002%" y="1525" width="0.0117%" height="15" fill="rgb(229,228,25)" fg:x="18329" fg:w="9"/><text x="24.0502%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="23.8119%" y="1621" width="0.0104%" height="15" fill="rgb(233,75,23)" fg:x="18338" fg:w="8"/><text x="24.0619%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="23.8119%" y="1605" width="0.0104%" height="15" fill="rgb(231,207,16)" fg:x="18338" fg:w="8"/><text x="24.0619%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="23.8119%" y="1589" width="0.0104%" height="15" fill="rgb(231,191,45)" fg:x="18338" fg:w="8"/><text x="24.0619%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="23.8119%" y="1573" width="0.0104%" height="15" fill="rgb(224,133,17)" fg:x="18338" fg:w="8"/><text x="24.0619%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="23.8119%" y="1557" width="0.0104%" height="15" fill="rgb(209,178,27)" fg:x="18338" fg:w="8"/><text x="24.0619%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="23.8119%" y="1541" width="0.0104%" height="15" fill="rgb(218,37,11)" fg:x="18338" fg:w="8"/><text x="24.0619%" y="1551.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="23.8119%" y="1525" width="0.0104%" height="15" fill="rgb(251,226,25)" fg:x="18338" fg:w="8"/><text x="24.0619%" y="1535.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (161 samples, 0.21%)</title><rect x="23.6327%" y="1701" width="0.2091%" height="15" fill="rgb(209,222,27)" fg:x="18200" fg:w="161"/><text x="23.8827%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (160 samples, 0.21%)</title><rect x="23.6340%" y="1685" width="0.2078%" height="15" fill="rgb(238,22,21)" fg:x="18201" fg:w="160"/><text x="23.8840%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (160 samples, 0.21%)</title><rect x="23.6340%" y="1669" width="0.2078%" height="15" fill="rgb(233,161,25)" fg:x="18201" fg:w="160"/><text x="23.8840%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (160 samples, 0.21%)</title><rect x="23.6340%" y="1653" width="0.2078%" height="15" fill="rgb(226,122,53)" fg:x="18201" fg:w="160"/><text x="23.8840%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (160 samples, 0.21%)</title><rect x="23.6340%" y="1637" width="0.2078%" height="15" fill="rgb(220,123,17)" fg:x="18201" fg:w="160"/><text x="23.8840%" y="1647.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.02%)</title><rect x="23.8223%" y="1621" width="0.0195%" height="15" fill="rgb(230,224,35)" fg:x="18346" fg:w="15"/><text x="24.0723%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="23.8508%" y="1621" width="0.0156%" height="15" fill="rgb(246,83,8)" fg:x="18368" fg:w="12"/><text x="24.1008%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="23.8508%" y="1605" width="0.0156%" height="15" fill="rgb(230,214,17)" fg:x="18368" fg:w="12"/><text x="24.1008%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="23.8508%" y="1589" width="0.0156%" height="15" fill="rgb(222,97,18)" fg:x="18368" fg:w="12"/><text x="24.1008%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="23.8495%" y="1653" width="0.0221%" height="15" fill="rgb(206,79,1)" fg:x="18367" fg:w="17"/><text x="24.0995%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="23.8495%" y="1637" width="0.0221%" height="15" fill="rgb(214,121,34)" fg:x="18367" fg:w="17"/><text x="24.0995%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (203 samples, 0.26%)</title><rect x="23.6171%" y="1749" width="0.2636%" height="15" fill="rgb(249,199,46)" fg:x="18188" fg:w="203"/><text x="23.8671%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (203 samples, 0.26%)</title><rect x="23.6171%" y="1733" width="0.2636%" height="15" fill="rgb(214,222,46)" fg:x="18188" fg:w="203"/><text x="23.8671%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (203 samples, 0.26%)</title><rect x="23.6171%" y="1717" width="0.2636%" height="15" fill="rgb(248,168,30)" fg:x="18188" fg:w="203"/><text x="23.8671%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (27 samples, 0.04%)</title><rect x="23.8456%" y="1701" width="0.0351%" height="15" fill="rgb(226,14,28)" fg:x="18364" fg:w="27"/><text x="24.0956%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (27 samples, 0.04%)</title><rect x="23.8456%" y="1685" width="0.0351%" height="15" fill="rgb(253,123,1)" fg:x="18364" fg:w="27"/><text x="24.0956%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (27 samples, 0.04%)</title><rect x="23.8456%" y="1669" width="0.0351%" height="15" fill="rgb(225,24,42)" fg:x="18364" fg:w="27"/><text x="24.0956%" y="1679.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (11 samples, 0.01%)</title><rect x="23.9534%" y="1413" width="0.0143%" height="15" fill="rgb(216,161,37)" fg:x="18447" fg:w="11"/><text x="24.2034%" y="1423.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="23.9690%" y="1413" width="0.0117%" height="15" fill="rgb(251,164,26)" fg:x="18459" fg:w="9"/><text x="24.2190%" y="1423.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (37 samples, 0.05%)</title><rect x="23.9404%" y="1445" width="0.0480%" height="15" fill="rgb(219,177,3)" fg:x="18437" fg:w="37"/><text x="24.1904%" y="1455.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="23.9404%" y="1429" width="0.0480%" height="15" fill="rgb(222,65,0)" fg:x="18437" fg:w="37"/><text x="24.1904%" y="1439.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (8 samples, 0.01%)</title><rect x="23.9911%" y="1381" width="0.0104%" height="15" fill="rgb(223,69,54)" fg:x="18476" fg:w="8"/><text x="24.2411%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="23.9911%" y="1365" width="0.0104%" height="15" fill="rgb(235,30,27)" fg:x="18476" fg:w="8"/><text x="24.2411%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="23.9911%" y="1349" width="0.0104%" height="15" fill="rgb(220,183,50)" fg:x="18476" fg:w="8"/><text x="24.2411%" y="1359.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="23.9911%" y="1333" width="0.0104%" height="15" fill="rgb(248,198,15)" fg:x="18476" fg:w="8"/><text x="24.2411%" y="1343.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (8 samples, 0.01%)</title><rect x="23.9911%" y="1317" width="0.0104%" height="15" fill="rgb(222,211,4)" fg:x="18476" fg:w="8"/><text x="24.2411%" y="1327.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="23.9911%" y="1301" width="0.0104%" height="15" fill="rgb(214,102,34)" fg:x="18476" fg:w="8"/><text x="24.2411%" y="1311.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (48 samples, 0.06%)</title><rect x="23.9404%" y="1461" width="0.0623%" height="15" fill="rgb(245,92,5)" fg:x="18437" fg:w="48"/><text x="24.1904%" y="1471.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (10 samples, 0.01%)</title><rect x="23.9898%" y="1445" width="0.0130%" height="15" fill="rgb(252,72,51)" fg:x="18475" fg:w="10"/><text x="24.2398%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.01%)</title><rect x="23.9898%" y="1429" width="0.0130%" height="15" fill="rgb(252,208,19)" fg:x="18475" fg:w="10"/><text x="24.2398%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="23.9898%" y="1413" width="0.0130%" height="15" fill="rgb(211,69,7)" fg:x="18475" fg:w="10"/><text x="24.2398%" y="1423.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="23.9898%" y="1397" width="0.0130%" height="15" fill="rgb(211,27,16)" fg:x="18475" fg:w="10"/><text x="24.2398%" y="1407.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="24.0028%" y="1461" width="0.0208%" height="15" fill="rgb(219,216,14)" fg:x="18485" fg:w="16"/><text x="24.2528%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="24.0066%" y="1445" width="0.0169%" height="15" fill="rgb(219,71,8)" fg:x="18488" fg:w="13"/><text x="24.2566%" y="1455.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="24.0079%" y="1429" width="0.0156%" height="15" fill="rgb(223,170,53)" fg:x="18489" fg:w="12"/><text x="24.2579%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="24.0079%" y="1413" width="0.0156%" height="15" fill="rgb(246,21,26)" fg:x="18489" fg:w="12"/><text x="24.2579%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="24.0079%" y="1397" width="0.0156%" height="15" fill="rgb(248,20,46)" fg:x="18489" fg:w="12"/><text x="24.2579%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="24.0079%" y="1381" width="0.0156%" height="15" fill="rgb(252,94,11)" fg:x="18489" fg:w="12"/><text x="24.2579%" y="1391.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="24.0118%" y="1365" width="0.0117%" height="15" fill="rgb(236,163,8)" fg:x="18492" fg:w="9"/><text x="24.2618%" y="1375.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (18 samples, 0.02%)</title><rect x="24.0235%" y="1461" width="0.0234%" height="15" fill="rgb(217,221,45)" fg:x="18501" fg:w="18"/><text x="24.2735%" y="1471.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="24.0235%" y="1445" width="0.0234%" height="15" fill="rgb(238,38,17)" fg:x="18501" fg:w="18"/><text x="24.2735%" y="1455.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="24.0248%" y="1429" width="0.0221%" height="15" fill="rgb(242,210,23)" fg:x="18502" fg:w="17"/><text x="24.2748%" y="1439.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="24.0248%" y="1413" width="0.0221%" height="15" fill="rgb(250,86,53)" fg:x="18502" fg:w="17"/><text x="24.2748%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="24.0248%" y="1397" width="0.0221%" height="15" fill="rgb(223,168,25)" fg:x="18502" fg:w="17"/><text x="24.2748%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="24.0248%" y="1381" width="0.0221%" height="15" fill="rgb(251,189,4)" fg:x="18502" fg:w="17"/><text x="24.2748%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="24.0248%" y="1365" width="0.0221%" height="15" fill="rgb(245,19,28)" fg:x="18502" fg:w="17"/><text x="24.2748%" y="1375.50"></text></g><g><title>malloc (16 samples, 0.02%)</title><rect x="24.0261%" y="1349" width="0.0208%" height="15" fill="rgb(207,10,34)" fg:x="18503" fg:w="16"/><text x="24.2761%" y="1359.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (9 samples, 0.01%)</title><rect x="24.0534%" y="1429" width="0.0117%" height="15" fill="rgb(235,153,31)" fg:x="18524" fg:w="9"/><text x="24.3034%" y="1439.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (112 samples, 0.15%)</title><rect x="23.9287%" y="1477" width="0.1454%" height="15" fill="rgb(228,72,37)" fg:x="18428" fg:w="112"/><text x="24.1787%" y="1487.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (21 samples, 0.03%)</title><rect x="24.0469%" y="1461" width="0.0273%" height="15" fill="rgb(215,15,16)" fg:x="18519" fg:w="21"/><text x="24.2969%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (18 samples, 0.02%)</title><rect x="24.0508%" y="1445" width="0.0234%" height="15" fill="rgb(250,119,29)" fg:x="18522" fg:w="18"/><text x="24.3008%" y="1455.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (126 samples, 0.16%)</title><rect x="23.9274%" y="1493" width="0.1636%" height="15" fill="rgb(214,59,1)" fg:x="18427" fg:w="126"/><text x="24.1774%" y="1503.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (13 samples, 0.02%)</title><rect x="24.0742%" y="1477" width="0.0169%" height="15" fill="rgb(223,109,25)" fg:x="18540" fg:w="13"/><text x="24.3242%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="24.0911%" y="1493" width="0.0117%" height="15" fill="rgb(230,198,22)" fg:x="18553" fg:w="9"/><text x="24.3411%" y="1503.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.05%)</title><rect x="24.1079%" y="1445" width="0.0480%" height="15" fill="rgb(245,184,46)" fg:x="18566" fg:w="37"/><text x="24.3579%" y="1455.50"></text></g><g><title>malloc (36 samples, 0.05%)</title><rect x="24.1092%" y="1429" width="0.0467%" height="15" fill="rgb(253,73,16)" fg:x="18567" fg:w="36"/><text x="24.3592%" y="1439.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="24.1287%" y="1413" width="0.0273%" height="15" fill="rgb(206,94,45)" fg:x="18582" fg:w="21"/><text x="24.3787%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (40 samples, 0.05%)</title><rect x="24.1053%" y="1477" width="0.0519%" height="15" fill="rgb(236,83,27)" fg:x="18564" fg:w="40"/><text x="24.3553%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.05%)</title><rect x="24.1053%" y="1461" width="0.0519%" height="15" fill="rgb(220,196,8)" fg:x="18564" fg:w="40"/><text x="24.3553%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (190 samples, 0.25%)</title><rect x="23.9119%" y="1509" width="0.2467%" height="15" fill="rgb(254,185,14)" fg:x="18415" fg:w="190"/><text x="24.1619%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.06%)</title><rect x="24.1027%" y="1493" width="0.0558%" height="15" fill="rgb(226,50,22)" fg:x="18562" fg:w="43"/><text x="24.3527%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (193 samples, 0.25%)</title><rect x="23.9093%" y="1525" width="0.2506%" height="15" fill="rgb(253,147,0)" fg:x="18413" fg:w="193"/><text x="24.1593%" y="1535.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (9 samples, 0.01%)</title><rect x="24.1677%" y="1461" width="0.0117%" height="15" fill="rgb(252,46,33)" fg:x="18612" fg:w="9"/><text x="24.4177%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="24.1677%" y="1445" width="0.0117%" height="15" fill="rgb(242,22,54)" fg:x="18612" fg:w="9"/><text x="24.4177%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="24.1677%" y="1429" width="0.0117%" height="15" fill="rgb(223,178,32)" fg:x="18612" fg:w="9"/><text x="24.4177%" y="1439.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (216 samples, 0.28%)</title><rect x="23.9028%" y="1541" width="0.2805%" height="15" fill="rgb(214,106,53)" fg:x="18408" fg:w="216"/><text x="24.1528%" y="1551.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (16 samples, 0.02%)</title><rect x="24.1625%" y="1525" width="0.0208%" height="15" fill="rgb(232,65,50)" fg:x="18608" fg:w="16"/><text x="24.4125%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.02%)</title><rect x="24.1625%" y="1509" width="0.0208%" height="15" fill="rgb(231,110,28)" fg:x="18608" fg:w="16"/><text x="24.4125%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="24.1625%" y="1493" width="0.0208%" height="15" fill="rgb(216,71,40)" fg:x="18608" fg:w="16"/><text x="24.4125%" y="1503.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="24.1625%" y="1477" width="0.0208%" height="15" fill="rgb(229,89,53)" fg:x="18608" fg:w="16"/><text x="24.4125%" y="1487.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (18 samples, 0.02%)</title><rect x="24.1884%" y="1541" width="0.0234%" height="15" fill="rgb(210,124,14)" fg:x="18628" fg:w="18"/><text x="24.4384%" y="1551.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="24.1884%" y="1525" width="0.0234%" height="15" fill="rgb(236,213,6)" fg:x="18628" fg:w="18"/><text x="24.4384%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="24.1988%" y="1509" width="0.0130%" height="15" fill="rgb(228,41,5)" fg:x="18636" fg:w="10"/><text x="24.4488%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.01%)</title><rect x="24.1988%" y="1493" width="0.0130%" height="15" fill="rgb(221,167,25)" fg:x="18636" fg:w="10"/><text x="24.4488%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="24.1988%" y="1477" width="0.0130%" height="15" fill="rgb(228,144,37)" fg:x="18636" fg:w="10"/><text x="24.4488%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="24.1988%" y="1461" width="0.0130%" height="15" fill="rgb(227,189,38)" fg:x="18636" fg:w="10"/><text x="24.4488%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="24.1988%" y="1445" width="0.0130%" height="15" fill="rgb(218,8,2)" fg:x="18636" fg:w="10"/><text x="24.4488%" y="1455.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="24.1988%" y="1429" width="0.0130%" height="15" fill="rgb(209,61,28)" fg:x="18636" fg:w="10"/><text x="24.4488%" y="1439.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="24.2001%" y="1413" width="0.0117%" height="15" fill="rgb(233,140,39)" fg:x="18637" fg:w="9"/><text x="24.4501%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (252 samples, 0.33%)</title><rect x="23.8898%" y="1557" width="0.3272%" height="15" fill="rgb(251,66,48)" fg:x="18398" fg:w="252"/><text x="24.1398%" y="1567.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (269 samples, 0.35%)</title><rect x="23.8885%" y="1573" width="0.3493%" height="15" fill="rgb(210,44,45)" fg:x="18397" fg:w="269"/><text x="24.1385%" y="1583.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (16 samples, 0.02%)</title><rect x="24.2170%" y="1557" width="0.0208%" height="15" fill="rgb(214,136,46)" fg:x="18650" fg:w="16"/><text x="24.4670%" y="1567.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="24.2391%" y="1573" width="0.0169%" height="15" fill="rgb(207,130,50)" fg:x="18667" fg:w="13"/><text x="24.4891%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (45 samples, 0.06%)</title><rect x="24.2586%" y="1525" width="0.0584%" height="15" fill="rgb(228,102,49)" fg:x="18682" fg:w="45"/><text x="24.5086%" y="1535.50"></text></g><g><title>malloc (40 samples, 0.05%)</title><rect x="24.2650%" y="1509" width="0.0519%" height="15" fill="rgb(253,55,1)" fg:x="18687" fg:w="40"/><text x="24.5150%" y="1519.50"></text></g><g><title>[libc.so.6] (30 samples, 0.04%)</title><rect x="24.2780%" y="1493" width="0.0390%" height="15" fill="rgb(238,222,9)" fg:x="18697" fg:w="30"/><text x="24.5280%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (48 samples, 0.06%)</title><rect x="24.2560%" y="1557" width="0.0623%" height="15" fill="rgb(246,99,6)" fg:x="18680" fg:w="48"/><text x="24.5060%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.06%)</title><rect x="24.2560%" y="1541" width="0.0623%" height="15" fill="rgb(219,110,26)" fg:x="18680" fg:w="48"/><text x="24.5060%" y="1551.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (347 samples, 0.45%)</title><rect x="23.8807%" y="1605" width="0.4506%" height="15" fill="rgb(239,160,33)" fg:x="18391" fg:w="347"/><text x="24.1307%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (347 samples, 0.45%)</title><rect x="23.8807%" y="1589" width="0.4506%" height="15" fill="rgb(220,202,23)" fg:x="18391" fg:w="347"/><text x="24.1307%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (58 samples, 0.08%)</title><rect x="24.2560%" y="1573" width="0.0753%" height="15" fill="rgb(208,80,26)" fg:x="18680" fg:w="58"/><text x="24.5060%" y="1583.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="24.3183%" y="1557" width="0.0130%" height="15" fill="rgb(243,85,7)" fg:x="18728" fg:w="10"/><text x="24.5683%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="24.3391%" y="1525" width="0.0338%" height="15" fill="rgb(228,77,47)" fg:x="18744" fg:w="26"/><text x="24.5891%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.03%)</title><rect x="24.3391%" y="1509" width="0.0338%" height="15" fill="rgb(212,226,8)" fg:x="18744" fg:w="26"/><text x="24.5891%" y="1519.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (21 samples, 0.03%)</title><rect x="24.3456%" y="1493" width="0.0273%" height="15" fill="rgb(241,120,54)" fg:x="18749" fg:w="21"/><text x="24.5956%" y="1503.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (21 samples, 0.03%)</title><rect x="24.3456%" y="1477" width="0.0273%" height="15" fill="rgb(226,80,16)" fg:x="18749" fg:w="21"/><text x="24.5956%" y="1487.50"></text></g><g><title>core::ptr::write (20 samples, 0.03%)</title><rect x="24.3469%" y="1461" width="0.0260%" height="15" fill="rgb(240,76,13)" fg:x="18750" fg:w="20"/><text x="24.5969%" y="1471.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (27 samples, 0.04%)</title><rect x="24.3391%" y="1541" width="0.0351%" height="15" fill="rgb(252,74,8)" fg:x="18744" fg:w="27"/><text x="24.5891%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (382 samples, 0.50%)</title><rect x="23.8807%" y="1621" width="0.4960%" height="15" fill="rgb(244,155,2)" fg:x="18391" fg:w="382"/><text x="24.1307%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (35 samples, 0.05%)</title><rect x="24.3313%" y="1605" width="0.0454%" height="15" fill="rgb(215,81,35)" fg:x="18738" fg:w="35"/><text x="24.5813%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.05%)</title><rect x="24.3313%" y="1589" width="0.0454%" height="15" fill="rgb(206,55,2)" fg:x="18738" fg:w="35"/><text x="24.5813%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (35 samples, 0.05%)</title><rect x="24.3313%" y="1573" width="0.0454%" height="15" fill="rgb(231,2,34)" fg:x="18738" fg:w="35"/><text x="24.5813%" y="1583.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (35 samples, 0.05%)</title><rect x="24.3313%" y="1557" width="0.0454%" height="15" fill="rgb(242,176,48)" fg:x="18738" fg:w="35"/><text x="24.5813%" y="1567.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="24.3988%" y="1493" width="0.0130%" height="15" fill="rgb(249,31,36)" fg:x="18790" fg:w="10"/><text x="24.6488%" y="1503.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (428 samples, 0.56%)</title><rect x="23.8807%" y="1653" width="0.5558%" height="15" fill="rgb(205,18,17)" fg:x="18391" fg:w="428"/><text x="24.1307%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (428 samples, 0.56%)</title><rect x="23.8807%" y="1637" width="0.5558%" height="15" fill="rgb(254,130,5)" fg:x="18391" fg:w="428"/><text x="24.1307%" y="1647.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (38 samples, 0.05%)</title><rect x="24.3871%" y="1621" width="0.0493%" height="15" fill="rgb(229,42,45)" fg:x="18781" fg:w="38"/><text x="24.6371%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (38 samples, 0.05%)</title><rect x="24.3871%" y="1605" width="0.0493%" height="15" fill="rgb(245,95,25)" fg:x="18781" fg:w="38"/><text x="24.6371%" y="1615.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (38 samples, 0.05%)</title><rect x="24.3871%" y="1589" width="0.0493%" height="15" fill="rgb(249,193,38)" fg:x="18781" fg:w="38"/><text x="24.6371%" y="1599.50"></text></g><g><title>serde::de::SeqAccess::next_element (33 samples, 0.04%)</title><rect x="24.3936%" y="1573" width="0.0429%" height="15" fill="rgb(241,140,43)" fg:x="18786" fg:w="33"/><text x="24.6436%" y="1583.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (33 samples, 0.04%)</title><rect x="24.3936%" y="1557" width="0.0429%" height="15" fill="rgb(245,78,48)" fg:x="18786" fg:w="33"/><text x="24.6436%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (30 samples, 0.04%)</title><rect x="24.3975%" y="1541" width="0.0390%" height="15" fill="rgb(214,92,39)" fg:x="18789" fg:w="30"/><text x="24.6475%" y="1551.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (30 samples, 0.04%)</title><rect x="24.3975%" y="1525" width="0.0390%" height="15" fill="rgb(211,189,14)" fg:x="18789" fg:w="30"/><text x="24.6475%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (30 samples, 0.04%)</title><rect x="24.3975%" y="1509" width="0.0390%" height="15" fill="rgb(218,7,24)" fg:x="18789" fg:w="30"/><text x="24.6475%" y="1519.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (19 samples, 0.02%)</title><rect x="24.4118%" y="1493" width="0.0247%" height="15" fill="rgb(224,200,49)" fg:x="18800" fg:w="19"/><text x="24.6618%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::next (16 samples, 0.02%)</title><rect x="24.4157%" y="1477" width="0.0208%" height="15" fill="rgb(218,210,14)" fg:x="18803" fg:w="16"/><text x="24.6657%" y="1487.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (2,335 samples, 3.03%)</title><rect x="21.4239%" y="1797" width="3.0320%" height="15" fill="rgb(234,142,31)" fg:x="16499" fg:w="2335"/><text x="21.6739%" y="1807.50">mov..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (2,335 samples, 3.03%)</title><rect x="21.4239%" y="1781" width="3.0320%" height="15" fill="rgb(227,165,2)" fg:x="16499" fg:w="2335"/><text x="21.6739%" y="1791.50">mov..</text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (2,335 samples, 3.03%)</title><rect x="21.4239%" y="1765" width="3.0320%" height="15" fill="rgb(232,44,46)" fg:x="16499" fg:w="2335"/><text x="21.6739%" y="1775.50">&lt;mo..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (443 samples, 0.58%)</title><rect x="23.8807%" y="1749" width="0.5752%" height="15" fill="rgb(236,149,47)" fg:x="18391" fg:w="443"/><text x="24.1307%" y="1759.50"></text></g><g><title>bcs::de::from_bytes_seed (443 samples, 0.58%)</title><rect x="23.8807%" y="1733" width="0.5752%" height="15" fill="rgb(227,45,31)" fg:x="18391" fg:w="443"/><text x="24.1307%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (443 samples, 0.58%)</title><rect x="23.8807%" y="1717" width="0.5752%" height="15" fill="rgb(240,176,51)" fg:x="18391" fg:w="443"/><text x="24.1307%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (443 samples, 0.58%)</title><rect x="23.8807%" y="1701" width="0.5752%" height="15" fill="rgb(249,146,41)" fg:x="18391" fg:w="443"/><text x="24.1307%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (443 samples, 0.58%)</title><rect x="23.8807%" y="1685" width="0.5752%" height="15" fill="rgb(213,208,4)" fg:x="18391" fg:w="443"/><text x="24.1307%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (443 samples, 0.58%)</title><rect x="23.8807%" y="1669" width="0.5752%" height="15" fill="rgb(245,84,36)" fg:x="18391" fg:w="443"/><text x="24.1307%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.02%)</title><rect x="24.4365%" y="1653" width="0.0195%" height="15" fill="rgb(254,84,18)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.02%)</title><rect x="24.4365%" y="1637" width="0.0195%" height="15" fill="rgb(225,38,54)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.02%)</title><rect x="24.4365%" y="1621" width="0.0195%" height="15" fill="rgb(246,50,30)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="24.4365%" y="1605" width="0.0195%" height="15" fill="rgb(246,148,9)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.02%)</title><rect x="24.4365%" y="1589" width="0.0195%" height="15" fill="rgb(223,75,4)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1599.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.02%)</title><rect x="24.4365%" y="1573" width="0.0195%" height="15" fill="rgb(239,148,41)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1583.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.02%)</title><rect x="24.4365%" y="1557" width="0.0195%" height="15" fill="rgb(205,195,3)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1567.50"></text></g><g><title>realloc (15 samples, 0.02%)</title><rect x="24.4365%" y="1541" width="0.0195%" height="15" fill="rgb(254,161,1)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1551.50"></text></g><g><title>[libc.so.6] (15 samples, 0.02%)</title><rect x="24.4365%" y="1525" width="0.0195%" height="15" fill="rgb(211,229,8)" fg:x="18819" fg:w="15"/><text x="24.6865%" y="1535.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="24.4416%" y="1509" width="0.0143%" height="15" fill="rgb(220,97,9)" fg:x="18823" fg:w="11"/><text x="24.6916%" y="1519.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="24.4663%" y="1685" width="0.0286%" height="15" fill="rgb(240,218,8)" fg:x="18842" fg:w="22"/><text x="24.7163%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="24.4689%" y="1669" width="0.0260%" height="15" fill="rgb(250,44,0)" fg:x="18844" fg:w="20"/><text x="24.7189%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="24.4689%" y="1653" width="0.0260%" height="15" fill="rgb(236,41,53)" fg:x="18844" fg:w="20"/><text x="24.7189%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="24.4715%" y="1637" width="0.0234%" height="15" fill="rgb(218,227,13)" fg:x="18846" fg:w="18"/><text x="24.7215%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (18 samples, 0.02%)</title><rect x="24.4715%" y="1621" width="0.0234%" height="15" fill="rgb(217,94,32)" fg:x="18846" fg:w="18"/><text x="24.7215%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (18 samples, 0.02%)</title><rect x="24.4715%" y="1605" width="0.0234%" height="15" fill="rgb(213,217,12)" fg:x="18846" fg:w="18"/><text x="24.7215%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="24.4715%" y="1589" width="0.0234%" height="15" fill="rgb(229,13,46)" fg:x="18846" fg:w="18"/><text x="24.7215%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="24.4715%" y="1573" width="0.0234%" height="15" fill="rgb(243,139,5)" fg:x="18846" fg:w="18"/><text x="24.7215%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="24.4728%" y="1557" width="0.0221%" height="15" fill="rgb(249,38,45)" fg:x="18847" fg:w="17"/><text x="24.7228%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="24.4728%" y="1541" width="0.0221%" height="15" fill="rgb(216,70,11)" fg:x="18847" fg:w="17"/><text x="24.7228%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="24.4728%" y="1525" width="0.0221%" height="15" fill="rgb(253,101,25)" fg:x="18847" fg:w="17"/><text x="24.7228%" y="1535.50"></text></g><g><title>malloc (16 samples, 0.02%)</title><rect x="24.4741%" y="1509" width="0.0208%" height="15" fill="rgb(207,197,30)" fg:x="18848" fg:w="16"/><text x="24.7241%" y="1519.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="24.4819%" y="1493" width="0.0130%" height="15" fill="rgb(238,87,13)" fg:x="18854" fg:w="10"/><text x="24.7319%" y="1503.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.01%)</title><rect x="24.4949%" y="1685" width="0.0117%" height="15" fill="rgb(215,155,8)" fg:x="18864" fg:w="9"/><text x="24.7449%" y="1695.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (9 samples, 0.01%)</title><rect x="24.4949%" y="1669" width="0.0117%" height="15" fill="rgb(239,166,38)" fg:x="18864" fg:w="9"/><text x="24.7449%" y="1679.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (9 samples, 0.01%)</title><rect x="24.4949%" y="1653" width="0.0117%" height="15" fill="rgb(240,194,35)" fg:x="18864" fg:w="9"/><text x="24.7449%" y="1663.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (9 samples, 0.01%)</title><rect x="24.4949%" y="1637" width="0.0117%" height="15" fill="rgb(219,10,44)" fg:x="18864" fg:w="9"/><text x="24.7449%" y="1647.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="24.4949%" y="1621" width="0.0117%" height="15" fill="rgb(251,220,35)" fg:x="18864" fg:w="9"/><text x="24.7449%" y="1631.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (8 samples, 0.01%)</title><rect x="24.4962%" y="1605" width="0.0104%" height="15" fill="rgb(218,117,13)" fg:x="18865" fg:w="8"/><text x="24.7462%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (11 samples, 0.01%)</title><rect x="24.5793%" y="1509" width="0.0143%" height="15" fill="rgb(221,213,40)" fg:x="18929" fg:w="11"/><text x="24.8293%" y="1519.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="24.5793%" y="1493" width="0.0143%" height="15" fill="rgb(251,224,35)" fg:x="18929" fg:w="11"/><text x="24.8293%" y="1503.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="24.5793%" y="1477" width="0.0143%" height="15" fill="rgb(241,33,39)" fg:x="18929" fg:w="11"/><text x="24.8293%" y="1487.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="24.5793%" y="1461" width="0.0143%" height="15" fill="rgb(222,74,17)" fg:x="18929" fg:w="11"/><text x="24.8293%" y="1471.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (8 samples, 0.01%)</title><rect x="24.5832%" y="1445" width="0.0104%" height="15" fill="rgb(225,103,0)" fg:x="18932" fg:w="8"/><text x="24.8332%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (15 samples, 0.02%)</title><rect x="24.6689%" y="1493" width="0.0195%" height="15" fill="rgb(240,0,12)" fg:x="18998" fg:w="15"/><text x="24.9189%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (15 samples, 0.02%)</title><rect x="24.6689%" y="1477" width="0.0195%" height="15" fill="rgb(233,213,37)" fg:x="18998" fg:w="15"/><text x="24.9189%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (15 samples, 0.02%)</title><rect x="24.6689%" y="1461" width="0.0195%" height="15" fill="rgb(225,84,52)" fg:x="18998" fg:w="15"/><text x="24.9189%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (15 samples, 0.02%)</title><rect x="24.6689%" y="1445" width="0.0195%" height="15" fill="rgb(247,160,51)" fg:x="18998" fg:w="15"/><text x="24.9189%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.02%)</title><rect x="24.6689%" y="1429" width="0.0195%" height="15" fill="rgb(244,60,51)" fg:x="18998" fg:w="15"/><text x="24.9189%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.02%)</title><rect x="24.6689%" y="1413" width="0.0195%" height="15" fill="rgb(233,114,7)" fg:x="18998" fg:w="15"/><text x="24.9189%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="24.6689%" y="1397" width="0.0195%" height="15" fill="rgb(246,136,16)" fg:x="18998" fg:w="15"/><text x="24.9189%" y="1407.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="24.6780%" y="1381" width="0.0104%" height="15" fill="rgb(243,114,45)" fg:x="19005" fg:w="8"/><text x="24.9280%" y="1391.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (119 samples, 0.15%)</title><rect x="24.5468%" y="1525" width="0.1545%" height="15" fill="rgb(247,183,43)" fg:x="18904" fg:w="119"/><text x="24.7968%" y="1535.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (83 samples, 0.11%)</title><rect x="24.5936%" y="1509" width="0.1078%" height="15" fill="rgb(251,210,42)" fg:x="18940" fg:w="83"/><text x="24.8436%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (10 samples, 0.01%)</title><rect x="24.6884%" y="1493" width="0.0130%" height="15" fill="rgb(221,88,35)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1503.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (10 samples, 0.01%)</title><rect x="24.6884%" y="1477" width="0.0130%" height="15" fill="rgb(242,21,20)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1487.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="24.6884%" y="1461" width="0.0130%" height="15" fill="rgb(233,226,36)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1471.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::{{closure}} (10 samples, 0.01%)</title><rect x="24.6884%" y="1445" width="0.0130%" height="15" fill="rgb(243,189,34)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (10 samples, 0.01%)</title><rect x="24.6884%" y="1429" width="0.0130%" height="15" fill="rgb(207,145,50)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (10 samples, 0.01%)</title><rect x="24.6884%" y="1413" width="0.0130%" height="15" fill="rgb(242,1,50)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (10 samples, 0.01%)</title><rect x="24.6884%" y="1397" width="0.0130%" height="15" fill="rgb(231,65,32)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1407.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.01%)</title><rect x="24.6884%" y="1381" width="0.0130%" height="15" fill="rgb(208,68,49)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1391.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="24.6884%" y="1365" width="0.0130%" height="15" fill="rgb(253,54,49)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="24.6884%" y="1349" width="0.0130%" height="15" fill="rgb(245,186,24)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="24.6884%" y="1333" width="0.0130%" height="15" fill="rgb(209,2,41)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="24.6884%" y="1317" width="0.0130%" height="15" fill="rgb(242,208,54)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1327.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="24.6884%" y="1301" width="0.0130%" height="15" fill="rgb(225,9,51)" fg:x="19013" fg:w="10"/><text x="24.9384%" y="1311.50"></text></g><g><title>bcs::de::Deserializer::parse_string (9 samples, 0.01%)</title><rect x="24.7481%" y="1413" width="0.0117%" height="15" fill="rgb(207,207,25)" fg:x="19059" fg:w="9"/><text x="24.9981%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="24.7598%" y="1285" width="0.0117%" height="15" fill="rgb(253,96,18)" fg:x="19068" fg:w="9"/><text x="25.0098%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="24.7598%" y="1269" width="0.0117%" height="15" fill="rgb(252,215,20)" fg:x="19068" fg:w="9"/><text x="25.0098%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="24.7598%" y="1253" width="0.0117%" height="15" fill="rgb(245,227,26)" fg:x="19068" fg:w="9"/><text x="25.0098%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="24.7598%" y="1237" width="0.0117%" height="15" fill="rgb(241,208,0)" fg:x="19068" fg:w="9"/><text x="25.0098%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="24.7598%" y="1221" width="0.0117%" height="15" fill="rgb(224,130,10)" fg:x="19068" fg:w="9"/><text x="25.0098%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="24.7598%" y="1205" width="0.0117%" height="15" fill="rgb(237,29,0)" fg:x="19068" fg:w="9"/><text x="25.0098%" y="1215.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (22 samples, 0.03%)</title><rect x="24.7442%" y="1461" width="0.0286%" height="15" fill="rgb(219,27,41)" fg:x="19056" fg:w="22"/><text x="24.9942%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (22 samples, 0.03%)</title><rect x="24.7442%" y="1445" width="0.0286%" height="15" fill="rgb(245,101,19)" fg:x="19056" fg:w="22"/><text x="24.9942%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (22 samples, 0.03%)</title><rect x="24.7442%" y="1429" width="0.0286%" height="15" fill="rgb(243,44,37)" fg:x="19056" fg:w="22"/><text x="24.9942%" y="1439.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.01%)</title><rect x="24.7598%" y="1413" width="0.0130%" height="15" fill="rgb(228,213,43)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1423.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (10 samples, 0.01%)</title><rect x="24.7598%" y="1397" width="0.0130%" height="15" fill="rgb(219,163,21)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1407.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (10 samples, 0.01%)</title><rect x="24.7598%" y="1381" width="0.0130%" height="15" fill="rgb(234,86,24)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (10 samples, 0.01%)</title><rect x="24.7598%" y="1365" width="0.0130%" height="15" fill="rgb(225,10,24)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.01%)</title><rect x="24.7598%" y="1349" width="0.0130%" height="15" fill="rgb(218,109,7)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.01%)</title><rect x="24.7598%" y="1333" width="0.0130%" height="15" fill="rgb(210,20,26)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.01%)</title><rect x="24.7598%" y="1317" width="0.0130%" height="15" fill="rgb(216,18,1)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.01%)</title><rect x="24.7598%" y="1301" width="0.0130%" height="15" fill="rgb(206,163,23)" fg:x="19068" fg:w="10"/><text x="25.0098%" y="1311.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (8 samples, 0.01%)</title><rect x="24.8026%" y="1365" width="0.0104%" height="15" fill="rgb(229,150,31)" fg:x="19101" fg:w="8"/><text x="25.0526%" y="1375.50"></text></g><g><title>bcs::de::Deserializer::peek (10 samples, 0.01%)</title><rect x="24.8026%" y="1381" width="0.0130%" height="15" fill="rgb(231,10,5)" fg:x="19101" fg:w="10"/><text x="25.0526%" y="1391.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (57 samples, 0.07%)</title><rect x="24.7442%" y="1477" width="0.0740%" height="15" fill="rgb(250,40,50)" fg:x="19056" fg:w="57"/><text x="24.9942%" y="1487.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (35 samples, 0.05%)</title><rect x="24.7728%" y="1461" width="0.0454%" height="15" fill="rgb(217,119,7)" fg:x="19078" fg:w="35"/><text x="25.0228%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (35 samples, 0.05%)</title><rect x="24.7728%" y="1445" width="0.0454%" height="15" fill="rgb(245,214,40)" fg:x="19078" fg:w="35"/><text x="25.0228%" y="1455.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (33 samples, 0.04%)</title><rect x="24.7754%" y="1429" width="0.0429%" height="15" fill="rgb(216,187,1)" fg:x="19080" fg:w="33"/><text x="25.0254%" y="1439.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (13 samples, 0.02%)</title><rect x="24.8013%" y="1413" width="0.0169%" height="15" fill="rgb(237,146,21)" fg:x="19100" fg:w="13"/><text x="25.0513%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::next (13 samples, 0.02%)</title><rect x="24.8013%" y="1397" width="0.0169%" height="15" fill="rgb(210,174,47)" fg:x="19100" fg:w="13"/><text x="25.0513%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (16 samples, 0.02%)</title><rect x="24.8182%" y="1477" width="0.0208%" height="15" fill="rgb(218,111,39)" fg:x="19113" fg:w="16"/><text x="25.0682%" y="1487.50"></text></g><g><title>core::cmp::PartialOrd::ge (16 samples, 0.02%)</title><rect x="24.8182%" y="1461" width="0.0208%" height="15" fill="rgb(224,95,19)" fg:x="19113" fg:w="16"/><text x="25.0682%" y="1471.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (14 samples, 0.02%)</title><rect x="24.8208%" y="1445" width="0.0182%" height="15" fill="rgb(234,15,38)" fg:x="19115" fg:w="14"/><text x="25.0708%" y="1455.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (14 samples, 0.02%)</title><rect x="24.8208%" y="1429" width="0.0182%" height="15" fill="rgb(246,56,12)" fg:x="19115" fg:w="14"/><text x="25.0708%" y="1439.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (14 samples, 0.02%)</title><rect x="24.8208%" y="1413" width="0.0182%" height="15" fill="rgb(247,16,17)" fg:x="19115" fg:w="14"/><text x="25.0708%" y="1423.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="24.8273%" y="1397" width="0.0117%" height="15" fill="rgb(215,151,11)" fg:x="19120" fg:w="9"/><text x="25.0773%" y="1407.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (89 samples, 0.12%)</title><rect x="24.7338%" y="1493" width="0.1156%" height="15" fill="rgb(225,16,24)" fg:x="19048" fg:w="89"/><text x="24.9838%" y="1503.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="24.9052%" y="1317" width="0.0104%" height="15" fill="rgb(217,117,5)" fg:x="19180" fg:w="8"/><text x="25.1552%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::parse_length (13 samples, 0.02%)</title><rect x="24.9494%" y="1285" width="0.0169%" height="15" fill="rgb(246,187,53)" fg:x="19214" fg:w="13"/><text x="25.1994%" y="1295.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (11 samples, 0.01%)</title><rect x="24.9520%" y="1269" width="0.0143%" height="15" fill="rgb(241,71,40)" fg:x="19216" fg:w="11"/><text x="25.2020%" y="1279.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (16 samples, 0.02%)</title><rect x="24.9481%" y="1301" width="0.0208%" height="15" fill="rgb(231,67,39)" fg:x="19213" fg:w="16"/><text x="25.1981%" y="1311.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (37 samples, 0.05%)</title><rect x="24.9688%" y="1301" width="0.0480%" height="15" fill="rgb(222,120,24)" fg:x="19229" fg:w="37"/><text x="25.2188%" y="1311.50"></text></g><g><title>bcs::de::Deserializer::parse_string (251 samples, 0.33%)</title><rect x="24.9156%" y="1317" width="0.3259%" height="15" fill="rgb(248,3,3)" fg:x="19188" fg:w="251"/><text x="25.1656%" y="1327.50"></text></g><g><title>core::str::converts::from_utf8 (173 samples, 0.22%)</title><rect x="25.0169%" y="1301" width="0.2246%" height="15" fill="rgb(228,218,5)" fg:x="19266" fg:w="173"/><text x="25.2669%" y="1311.50"></text></g><g><title>core::str::validations::run_utf8_validation (128 samples, 0.17%)</title><rect x="25.0753%" y="1285" width="0.1662%" height="15" fill="rgb(212,202,43)" fg:x="19311" fg:w="128"/><text x="25.3253%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (178 samples, 0.23%)</title><rect x="25.2415%" y="1189" width="0.2311%" height="15" fill="rgb(235,183,2)" fg:x="19439" fg:w="178"/><text x="25.4915%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (178 samples, 0.23%)</title><rect x="25.2415%" y="1173" width="0.2311%" height="15" fill="rgb(230,165,10)" fg:x="19439" fg:w="178"/><text x="25.4915%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (178 samples, 0.23%)</title><rect x="25.2415%" y="1157" width="0.2311%" height="15" fill="rgb(219,54,40)" fg:x="19439" fg:w="178"/><text x="25.4915%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (166 samples, 0.22%)</title><rect x="25.2571%" y="1141" width="0.2156%" height="15" fill="rgb(244,73,9)" fg:x="19451" fg:w="166"/><text x="25.5071%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (166 samples, 0.22%)</title><rect x="25.2571%" y="1125" width="0.2156%" height="15" fill="rgb(212,32,45)" fg:x="19451" fg:w="166"/><text x="25.5071%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (166 samples, 0.22%)</title><rect x="25.2571%" y="1109" width="0.2156%" height="15" fill="rgb(205,58,31)" fg:x="19451" fg:w="166"/><text x="25.5071%" y="1119.50"></text></g><g><title>malloc (159 samples, 0.21%)</title><rect x="25.2662%" y="1093" width="0.2065%" height="15" fill="rgb(250,120,43)" fg:x="19458" fg:w="159"/><text x="25.5162%" y="1103.50"></text></g><g><title>[libc.so.6] (85 samples, 0.11%)</title><rect x="25.3623%" y="1077" width="0.1104%" height="15" fill="rgb(235,13,10)" fg:x="19532" fg:w="85"/><text x="25.6123%" y="1087.50"></text></g><g><title>[libc.so.6] (29 samples, 0.04%)</title><rect x="25.4350%" y="1061" width="0.0377%" height="15" fill="rgb(232,219,31)" fg:x="19588" fg:w="29"/><text x="25.6850%" y="1071.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (465 samples, 0.60%)</title><rect x="24.9013%" y="1429" width="0.6038%" height="15" fill="rgb(218,157,51)" fg:x="19177" fg:w="465"/><text x="25.1513%" y="1439.50"></text></g><g><title>serde::de::SeqAccess::next_element (462 samples, 0.60%)</title><rect x="24.9052%" y="1413" width="0.5999%" height="15" fill="rgb(211,91,52)" fg:x="19180" fg:w="462"/><text x="25.1552%" y="1423.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (462 samples, 0.60%)</title><rect x="24.9052%" y="1397" width="0.5999%" height="15" fill="rgb(240,173,1)" fg:x="19180" fg:w="462"/><text x="25.1552%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (462 samples, 0.60%)</title><rect x="24.9052%" y="1381" width="0.5999%" height="15" fill="rgb(248,20,47)" fg:x="19180" fg:w="462"/><text x="25.1552%" y="1391.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (462 samples, 0.60%)</title><rect x="24.9052%" y="1365" width="0.5999%" height="15" fill="rgb(217,221,40)" fg:x="19180" fg:w="462"/><text x="25.1552%" y="1375.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (462 samples, 0.60%)</title><rect x="24.9052%" y="1349" width="0.5999%" height="15" fill="rgb(226,149,51)" fg:x="19180" fg:w="462"/><text x="25.1552%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (462 samples, 0.60%)</title><rect x="24.9052%" y="1333" width="0.5999%" height="15" fill="rgb(252,193,7)" fg:x="19180" fg:w="462"/><text x="25.1552%" y="1343.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (203 samples, 0.26%)</title><rect x="25.2415%" y="1317" width="0.2636%" height="15" fill="rgb(205,123,0)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1327.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (203 samples, 0.26%)</title><rect x="25.2415%" y="1301" width="0.2636%" height="15" fill="rgb(233,173,25)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1311.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (203 samples, 0.26%)</title><rect x="25.2415%" y="1285" width="0.2636%" height="15" fill="rgb(216,63,32)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (203 samples, 0.26%)</title><rect x="25.2415%" y="1269" width="0.2636%" height="15" fill="rgb(209,56,45)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (203 samples, 0.26%)</title><rect x="25.2415%" y="1253" width="0.2636%" height="15" fill="rgb(226,111,49)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (203 samples, 0.26%)</title><rect x="25.2415%" y="1237" width="0.2636%" height="15" fill="rgb(244,181,21)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (203 samples, 0.26%)</title><rect x="25.2415%" y="1221" width="0.2636%" height="15" fill="rgb(222,126,15)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (203 samples, 0.26%)</title><rect x="25.2415%" y="1205" width="0.2636%" height="15" fill="rgb(222,95,17)" fg:x="19439" fg:w="203"/><text x="25.4915%" y="1215.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (25 samples, 0.03%)</title><rect x="25.4727%" y="1189" width="0.0325%" height="15" fill="rgb(254,46,5)" fg:x="19617" fg:w="25"/><text x="25.7227%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.03%)</title><rect x="25.4727%" y="1173" width="0.0325%" height="15" fill="rgb(236,216,35)" fg:x="19617" fg:w="25"/><text x="25.7227%" y="1183.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="25.4753%" y="1157" width="0.0299%" height="15" fill="rgb(217,187,26)" fg:x="19619" fg:w="23"/><text x="25.7253%" y="1167.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (526 samples, 0.68%)</title><rect x="24.8494%" y="1461" width="0.6830%" height="15" fill="rgb(207,192,25)" fg:x="19137" fg:w="526"/><text x="25.0994%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (524 samples, 0.68%)</title><rect x="24.8520%" y="1445" width="0.6804%" height="15" fill="rgb(253,135,27)" fg:x="19139" fg:w="524"/><text x="25.1020%" y="1455.50"></text></g><g><title>bcs::de::SeqDeserializer::new (12 samples, 0.02%)</title><rect x="25.5168%" y="1429" width="0.0156%" height="15" fill="rgb(211,122,29)" fg:x="19651" fg:w="12"/><text x="25.7668%" y="1439.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (18 samples, 0.02%)</title><rect x="25.5324%" y="1429" width="0.0234%" height="15" fill="rgb(233,162,40)" fg:x="19663" fg:w="18"/><text x="25.7824%" y="1439.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (785 samples, 1.02%)</title><rect x="24.5390%" y="1541" width="1.0193%" height="15" fill="rgb(222,184,47)" fg:x="18898" fg:w="785"/><text x="24.7890%" y="1551.50"></text></g><g><title>serde::de::MapAccess::next_entry (659 samples, 0.86%)</title><rect x="24.7026%" y="1525" width="0.8557%" height="15" fill="rgb(249,99,23)" fg:x="19024" fg:w="659"/><text x="24.9526%" y="1535.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (659 samples, 0.86%)</title><rect x="24.7026%" y="1509" width="0.8557%" height="15" fill="rgb(214,60,12)" fg:x="19024" fg:w="659"/><text x="24.9526%" y="1519.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (546 samples, 0.71%)</title><rect x="24.8494%" y="1493" width="0.7090%" height="15" fill="rgb(250,229,36)" fg:x="19137" fg:w="546"/><text x="25.0994%" y="1503.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (546 samples, 0.71%)</title><rect x="24.8494%" y="1477" width="0.7090%" height="15" fill="rgb(232,195,10)" fg:x="19137" fg:w="546"/><text x="25.0994%" y="1487.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (20 samples, 0.03%)</title><rect x="25.5324%" y="1461" width="0.0260%" height="15" fill="rgb(205,213,31)" fg:x="19663" fg:w="20"/><text x="25.7824%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (20 samples, 0.03%)</title><rect x="25.5324%" y="1445" width="0.0260%" height="15" fill="rgb(237,43,8)" fg:x="19663" fg:w="20"/><text x="25.7824%" y="1455.50"></text></g><g><title>bcs::de::Deserializer::parse_length (13 samples, 0.02%)</title><rect x="25.5584%" y="1541" width="0.0169%" height="15" fill="rgb(216,208,3)" fg:x="19683" fg:w="13"/><text x="25.8084%" y="1551.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (823 samples, 1.07%)</title><rect x="24.5196%" y="1589" width="1.0687%" height="15" fill="rgb(228,179,44)" fg:x="18883" fg:w="823"/><text x="24.7696%" y="1599.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (823 samples, 1.07%)</title><rect x="24.5196%" y="1573" width="1.0687%" height="15" fill="rgb(230,192,27)" fg:x="18883" fg:w="823"/><text x="24.7696%" y="1583.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (820 samples, 1.06%)</title><rect x="24.5235%" y="1557" width="1.0648%" height="15" fill="rgb(251,30,38)" fg:x="18886" fg:w="820"/><text x="24.7735%" y="1567.50"></text></g><g><title>bcs::de::MapDeserializer::new (10 samples, 0.01%)</title><rect x="25.5752%" y="1541" width="0.0130%" height="15" fill="rgb(246,55,52)" fg:x="19696" fg:w="10"/><text x="25.8252%" y="1551.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (827 samples, 1.07%)</title><rect x="24.5157%" y="1637" width="1.0739%" height="15" fill="rgb(249,79,26)" fg:x="18880" fg:w="827"/><text x="24.7657%" y="1647.50"></text></g><g><title>serde::de::SeqAccess::next_element (824 samples, 1.07%)</title><rect x="24.5196%" y="1621" width="1.0700%" height="15" fill="rgb(220,202,16)" fg:x="18883" fg:w="824"/><text x="24.7696%" y="1631.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (824 samples, 1.07%)</title><rect x="24.5196%" y="1605" width="1.0700%" height="15" fill="rgb(250,170,23)" fg:x="18883" fg:w="824"/><text x="24.7696%" y="1615.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (11 samples, 0.01%)</title><rect x="25.5895%" y="1637" width="0.0143%" height="15" fill="rgb(230,7,37)" fg:x="19707" fg:w="11"/><text x="25.8395%" y="1647.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (841 samples, 1.09%)</title><rect x="24.5131%" y="1669" width="1.0920%" height="15" fill="rgb(213,71,1)" fg:x="18878" fg:w="841"/><text x="24.7631%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (841 samples, 1.09%)</title><rect x="24.5131%" y="1653" width="1.0920%" height="15" fill="rgb(227,87,39)" fg:x="18878" fg:w="841"/><text x="24.7631%" y="1663.50"></text></g><g><title>bcs::de::from_bytes (854 samples, 1.11%)</title><rect x="24.5066%" y="1685" width="1.1089%" height="15" fill="rgb(210,41,29)" fg:x="18873" fg:w="854"/><text x="24.7566%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="25.6246%" y="1621" width="0.0195%" height="15" fill="rgb(206,191,31)" fg:x="19734" fg:w="15"/><text x="25.8746%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.02%)</title><rect x="25.6246%" y="1605" width="0.0195%" height="15" fill="rgb(247,75,54)" fg:x="19734" fg:w="15"/><text x="25.8746%" y="1615.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="25.6259%" y="1589" width="0.0182%" height="15" fill="rgb(208,54,50)" fg:x="19735" fg:w="14"/><text x="25.8759%" y="1599.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="25.6324%" y="1573" width="0.0117%" height="15" fill="rgb(214,90,37)" fg:x="19740" fg:w="9"/><text x="25.8824%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::metadata::Metadata&gt; (16 samples, 0.02%)</title><rect x="25.6246%" y="1685" width="0.0208%" height="15" fill="rgb(220,132,6)" fg:x="19734" fg:w="16"/><text x="25.8746%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.02%)</title><rect x="25.6246%" y="1669" width="0.0208%" height="15" fill="rgb(213,167,7)" fg:x="19734" fg:w="16"/><text x="25.8746%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.02%)</title><rect x="25.6246%" y="1653" width="0.0208%" height="15" fill="rgb(243,36,27)" fg:x="19734" fg:w="16"/><text x="25.8746%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="25.6246%" y="1637" width="0.0208%" height="15" fill="rgb(235,147,12)" fg:x="19734" fg:w="16"/><text x="25.8746%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.07%)</title><rect x="25.6518%" y="1557" width="0.0662%" height="15" fill="rgb(212,198,44)" fg:x="19755" fg:w="51"/><text x="25.9018%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51 samples, 0.07%)</title><rect x="25.6518%" y="1541" width="0.0662%" height="15" fill="rgb(218,68,50)" fg:x="19755" fg:w="51"/><text x="25.9018%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (51 samples, 0.07%)</title><rect x="25.6518%" y="1525" width="0.0662%" height="15" fill="rgb(224,79,48)" fg:x="19755" fg:w="51"/><text x="25.9018%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.06%)</title><rect x="25.6531%" y="1509" width="0.0649%" height="15" fill="rgb(213,191,50)" fg:x="19756" fg:w="50"/><text x="25.9031%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.06%)</title><rect x="25.6531%" y="1493" width="0.0649%" height="15" fill="rgb(254,146,10)" fg:x="19756" fg:w="50"/><text x="25.9031%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.06%)</title><rect x="25.6531%" y="1477" width="0.0649%" height="15" fill="rgb(215,175,11)" fg:x="19756" fg:w="50"/><text x="25.9031%" y="1487.50"></text></g><g><title>malloc (50 samples, 0.06%)</title><rect x="25.6531%" y="1461" width="0.0649%" height="15" fill="rgb(207,49,7)" fg:x="19756" fg:w="50"/><text x="25.9031%" y="1471.50"></text></g><g><title>[libc.so.6] (44 samples, 0.06%)</title><rect x="25.6609%" y="1445" width="0.0571%" height="15" fill="rgb(234,144,29)" fg:x="19762" fg:w="44"/><text x="25.9109%" y="1455.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="25.6882%" y="1429" width="0.0299%" height="15" fill="rgb(213,222,48)" fg:x="19783" fg:w="23"/><text x="25.9382%" y="1439.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (63 samples, 0.08%)</title><rect x="25.6518%" y="1653" width="0.0818%" height="15" fill="rgb(222,8,6)" fg:x="19755" fg:w="63"/><text x="25.9018%" y="1663.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (63 samples, 0.08%)</title><rect x="25.6518%" y="1637" width="0.0818%" height="15" fill="rgb(221,114,49)" fg:x="19755" fg:w="63"/><text x="25.9018%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 0.08%)</title><rect x="25.6518%" y="1621" width="0.0818%" height="15" fill="rgb(250,140,42)" fg:x="19755" fg:w="63"/><text x="25.9018%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.08%)</title><rect x="25.6518%" y="1605" width="0.0818%" height="15" fill="rgb(250,150,27)" fg:x="19755" fg:w="63"/><text x="25.9018%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.08%)</title><rect x="25.6518%" y="1589" width="0.0818%" height="15" fill="rgb(252,159,3)" fg:x="19755" fg:w="63"/><text x="25.9018%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.08%)</title><rect x="25.6518%" y="1573" width="0.0818%" height="15" fill="rgb(241,182,3)" fg:x="19755" fg:w="63"/><text x="25.9018%" y="1583.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.02%)</title><rect x="25.7181%" y="1557" width="0.0156%" height="15" fill="rgb(236,3,9)" fg:x="19806" fg:w="12"/><text x="25.9681%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="25.7181%" y="1541" width="0.0156%" height="15" fill="rgb(223,227,51)" fg:x="19806" fg:w="12"/><text x="25.9681%" y="1551.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="25.7181%" y="1525" width="0.0156%" height="15" fill="rgb(232,133,30)" fg:x="19806" fg:w="12"/><text x="25.9681%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (39 samples, 0.05%)</title><rect x="25.7337%" y="1653" width="0.0506%" height="15" fill="rgb(209,93,27)" fg:x="19818" fg:w="39"/><text x="25.9837%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (39 samples, 0.05%)</title><rect x="25.7337%" y="1637" width="0.0506%" height="15" fill="rgb(208,108,34)" fg:x="19818" fg:w="39"/><text x="25.9837%" y="1647.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (34 samples, 0.04%)</title><rect x="25.7401%" y="1621" width="0.0441%" height="15" fill="rgb(215,189,13)" fg:x="19823" fg:w="34"/><text x="25.9901%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (27 samples, 0.04%)</title><rect x="25.7492%" y="1605" width="0.0351%" height="15" fill="rgb(206,88,23)" fg:x="19830" fg:w="27"/><text x="25.9992%" y="1615.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (27 samples, 0.04%)</title><rect x="25.7492%" y="1589" width="0.0351%" height="15" fill="rgb(240,173,0)" fg:x="19830" fg:w="27"/><text x="25.9992%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (27 samples, 0.04%)</title><rect x="25.7492%" y="1573" width="0.0351%" height="15" fill="rgb(223,106,52)" fg:x="19830" fg:w="27"/><text x="25.9992%" y="1583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (27 samples, 0.04%)</title><rect x="25.7492%" y="1557" width="0.0351%" height="15" fill="rgb(206,130,16)" fg:x="19830" fg:w="27"/><text x="25.9992%" y="1567.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="25.7661%" y="1541" width="0.0182%" height="15" fill="rgb(220,54,25)" fg:x="19843" fg:w="14"/><text x="26.0161%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="25.7973%" y="1589" width="0.0156%" height="15" fill="rgb(210,4,38)" fg:x="19867" fg:w="12"/><text x="26.0473%" y="1599.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="25.7973%" y="1573" width="0.0156%" height="15" fill="rgb(238,94,39)" fg:x="19867" fg:w="12"/><text x="26.0473%" y="1583.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (1,058 samples, 1.37%)</title><rect x="24.4559%" y="1717" width="1.3738%" height="15" fill="rgb(234,124,34)" fg:x="18834" fg:w="1058"/><text x="24.7059%" y="1727.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (1,058 samples, 1.37%)</title><rect x="24.4559%" y="1701" width="1.3738%" height="15" fill="rgb(221,91,40)" fg:x="18834" fg:w="1058"/><text x="24.7059%" y="1711.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (140 samples, 0.18%)</title><rect x="25.6480%" y="1685" width="0.1818%" height="15" fill="rgb(246,53,28)" fg:x="19752" fg:w="140"/><text x="25.8980%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (139 samples, 0.18%)</title><rect x="25.6492%" y="1669" width="0.1805%" height="15" fill="rgb(229,109,7)" fg:x="19753" fg:w="139"/><text x="25.8992%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (27 samples, 0.04%)</title><rect x="25.7947%" y="1653" width="0.0351%" height="15" fill="rgb(249,117,8)" fg:x="19865" fg:w="27"/><text x="26.0447%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.03%)</title><rect x="25.7960%" y="1637" width="0.0338%" height="15" fill="rgb(210,181,1)" fg:x="19866" fg:w="26"/><text x="26.0460%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.03%)</title><rect x="25.7960%" y="1621" width="0.0338%" height="15" fill="rgb(211,66,1)" fg:x="19866" fg:w="26"/><text x="26.0460%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.03%)</title><rect x="25.7960%" y="1605" width="0.0338%" height="15" fill="rgb(221,90,14)" fg:x="19866" fg:w="26"/><text x="26.0460%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.02%)</title><rect x="25.8129%" y="1589" width="0.0169%" height="15" fill="rgb(219,222,44)" fg:x="19879" fg:w="13"/><text x="26.0629%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="25.8129%" y="1573" width="0.0169%" height="15" fill="rgb(246,34,33)" fg:x="19879" fg:w="13"/><text x="26.0629%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.02%)</title><rect x="25.8129%" y="1557" width="0.0169%" height="15" fill="rgb(227,135,41)" fg:x="19879" fg:w="13"/><text x="26.0629%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="25.8297%" y="1413" width="0.0221%" height="15" fill="rgb(226,15,14)" fg:x="19892" fg:w="17"/><text x="26.0797%" y="1423.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="25.8375%" y="1397" width="0.0143%" height="15" fill="rgb(236,148,47)" fg:x="19898" fg:w="11"/><text x="26.0875%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (18 samples, 0.02%)</title><rect x="25.8297%" y="1589" width="0.0234%" height="15" fill="rgb(233,162,52)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1599.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (18 samples, 0.02%)</title><rect x="25.8297%" y="1573" width="0.0234%" height="15" fill="rgb(244,35,28)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1583.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (18 samples, 0.02%)</title><rect x="25.8297%" y="1557" width="0.0234%" height="15" fill="rgb(205,121,10)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (18 samples, 0.02%)</title><rect x="25.8297%" y="1541" width="0.0234%" height="15" fill="rgb(250,58,18)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.02%)</title><rect x="25.8297%" y="1525" width="0.0234%" height="15" fill="rgb(216,37,13)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.02%)</title><rect x="25.8297%" y="1509" width="0.0234%" height="15" fill="rgb(221,215,42)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 0.02%)</title><rect x="25.8297%" y="1493" width="0.0234%" height="15" fill="rgb(217,214,19)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="25.8297%" y="1477" width="0.0234%" height="15" fill="rgb(233,139,13)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="25.8297%" y="1461" width="0.0234%" height="15" fill="rgb(247,168,23)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="25.8297%" y="1445" width="0.0234%" height="15" fill="rgb(207,202,1)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="25.8297%" y="1429" width="0.0234%" height="15" fill="rgb(220,155,48)" fg:x="19892" fg:w="18"/><text x="26.0797%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (97 samples, 0.13%)</title><rect x="25.8713%" y="1397" width="0.1260%" height="15" fill="rgb(250,43,26)" fg:x="19924" fg:w="97"/><text x="26.1213%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (97 samples, 0.13%)</title><rect x="25.8713%" y="1381" width="0.1260%" height="15" fill="rgb(212,190,23)" fg:x="19924" fg:w="97"/><text x="26.1213%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (93 samples, 0.12%)</title><rect x="25.8765%" y="1365" width="0.1208%" height="15" fill="rgb(216,39,24)" fg:x="19928" fg:w="93"/><text x="26.1265%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (87 samples, 0.11%)</title><rect x="25.8843%" y="1349" width="0.1130%" height="15" fill="rgb(252,113,16)" fg:x="19934" fg:w="87"/><text x="26.1343%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (81 samples, 0.11%)</title><rect x="25.8921%" y="1333" width="0.1052%" height="15" fill="rgb(208,113,19)" fg:x="19940" fg:w="81"/><text x="26.1421%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (76 samples, 0.10%)</title><rect x="25.8986%" y="1317" width="0.0987%" height="15" fill="rgb(234,107,25)" fg:x="19945" fg:w="76"/><text x="26.1486%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (76 samples, 0.10%)</title><rect x="25.8986%" y="1301" width="0.0987%" height="15" fill="rgb(234,217,51)" fg:x="19945" fg:w="76"/><text x="26.1486%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (76 samples, 0.10%)</title><rect x="25.8986%" y="1285" width="0.0987%" height="15" fill="rgb(251,29,42)" fg:x="19945" fg:w="76"/><text x="26.1486%" y="1295.50"></text></g><g><title>realloc (70 samples, 0.09%)</title><rect x="25.9064%" y="1269" width="0.0909%" height="15" fill="rgb(221,62,51)" fg:x="19951" fg:w="70"/><text x="26.1564%" y="1279.50"></text></g><g><title>[libc.so.6] (53 samples, 0.07%)</title><rect x="25.9284%" y="1253" width="0.0688%" height="15" fill="rgb(240,192,43)" fg:x="19968" fg:w="53"/><text x="26.1784%" y="1263.50"></text></g><g><title>[libc.so.6] (39 samples, 0.05%)</title><rect x="25.9466%" y="1237" width="0.0506%" height="15" fill="rgb(224,157,47)" fg:x="19982" fg:w="39"/><text x="26.1966%" y="1247.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (111 samples, 0.14%)</title><rect x="25.8609%" y="1557" width="0.1441%" height="15" fill="rgb(226,84,45)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (111 samples, 0.14%)</title><rect x="25.8609%" y="1541" width="0.1441%" height="15" fill="rgb(208,207,23)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (111 samples, 0.14%)</title><rect x="25.8609%" y="1525" width="0.1441%" height="15" fill="rgb(253,34,51)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (111 samples, 0.14%)</title><rect x="25.8609%" y="1509" width="0.1441%" height="15" fill="rgb(227,26,34)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (111 samples, 0.14%)</title><rect x="25.8609%" y="1493" width="0.1441%" height="15" fill="rgb(245,75,19)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (111 samples, 0.14%)</title><rect x="25.8609%" y="1477" width="0.1441%" height="15" fill="rgb(250,191,31)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (111 samples, 0.14%)</title><rect x="25.8609%" y="1461" width="0.1441%" height="15" fill="rgb(224,11,50)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (111 samples, 0.14%)</title><rect x="25.8609%" y="1445" width="0.1441%" height="15" fill="rgb(231,171,7)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (111 samples, 0.14%)</title><rect x="25.8609%" y="1429" width="0.1441%" height="15" fill="rgb(252,214,10)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (111 samples, 0.14%)</title><rect x="25.8609%" y="1413" width="0.1441%" height="15" fill="rgb(249,45,46)" fg:x="19916" fg:w="111"/><text x="26.1109%" y="1423.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (24 samples, 0.03%)</title><rect x="26.0050%" y="1557" width="0.0312%" height="15" fill="rgb(240,173,7)" fg:x="20027" fg:w="24"/><text x="26.2550%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 0.03%)</title><rect x="26.0076%" y="1541" width="0.0286%" height="15" fill="rgb(235,214,13)" fg:x="20029" fg:w="22"/><text x="26.2576%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (17 samples, 0.02%)</title><rect x="26.0141%" y="1525" width="0.0221%" height="15" fill="rgb(245,156,8)" fg:x="20034" fg:w="17"/><text x="26.2641%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (17 samples, 0.02%)</title><rect x="26.0141%" y="1509" width="0.0221%" height="15" fill="rgb(235,46,12)" fg:x="20034" fg:w="17"/><text x="26.2641%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (17 samples, 0.02%)</title><rect x="26.0141%" y="1493" width="0.0221%" height="15" fill="rgb(221,81,14)" fg:x="20034" fg:w="17"/><text x="26.2641%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (17 samples, 0.02%)</title><rect x="26.0141%" y="1477" width="0.0221%" height="15" fill="rgb(238,207,9)" fg:x="20034" fg:w="17"/><text x="26.2641%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="26.0219%" y="1461" width="0.0143%" height="15" fill="rgb(224,129,35)" fg:x="20040" fg:w="11"/><text x="26.2719%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="26.0219%" y="1445" width="0.0143%" height="15" fill="rgb(243,218,34)" fg:x="20040" fg:w="11"/><text x="26.2719%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="26.0219%" y="1429" width="0.0143%" height="15" fill="rgb(220,166,13)" fg:x="20040" fg:w="11"/><text x="26.2719%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="26.0219%" y="1413" width="0.0143%" height="15" fill="rgb(227,167,49)" fg:x="20040" fg:w="11"/><text x="26.2719%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="26.0219%" y="1397" width="0.0143%" height="15" fill="rgb(234,142,12)" fg:x="20040" fg:w="11"/><text x="26.2719%" y="1407.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="26.0219%" y="1381" width="0.0143%" height="15" fill="rgb(207,100,48)" fg:x="20040" fg:w="11"/><text x="26.2719%" y="1391.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (23 samples, 0.03%)</title><rect x="26.0557%" y="1317" width="0.0299%" height="15" fill="rgb(210,25,14)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1327.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 0.03%)</title><rect x="26.0557%" y="1301" width="0.0299%" height="15" fill="rgb(246,116,27)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (23 samples, 0.03%)</title><rect x="26.0557%" y="1285" width="0.0299%" height="15" fill="rgb(214,193,42)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1295.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (23 samples, 0.03%)</title><rect x="26.0557%" y="1269" width="0.0299%" height="15" fill="rgb(214,122,8)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1279.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (23 samples, 0.03%)</title><rect x="26.0557%" y="1253" width="0.0299%" height="15" fill="rgb(244,173,18)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1263.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (23 samples, 0.03%)</title><rect x="26.0557%" y="1237" width="0.0299%" height="15" fill="rgb(232,68,19)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1247.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.03%)</title><rect x="26.0557%" y="1221" width="0.0299%" height="15" fill="rgb(236,224,1)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.03%)</title><rect x="26.0557%" y="1205" width="0.0299%" height="15" fill="rgb(240,11,8)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.03%)</title><rect x="26.0557%" y="1189" width="0.0299%" height="15" fill="rgb(244,159,20)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.03%)</title><rect x="26.0557%" y="1173" width="0.0299%" height="15" fill="rgb(240,223,54)" fg:x="20066" fg:w="23"/><text x="26.3057%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="26.0570%" y="1157" width="0.0286%" height="15" fill="rgb(237,146,5)" fg:x="20067" fg:w="22"/><text x="26.3070%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="26.0570%" y="1141" width="0.0286%" height="15" fill="rgb(218,221,32)" fg:x="20067" fg:w="22"/><text x="26.3070%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="26.0609%" y="1125" width="0.0247%" height="15" fill="rgb(244,96,26)" fg:x="20070" fg:w="19"/><text x="26.3109%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="26.0609%" y="1109" width="0.0247%" height="15" fill="rgb(245,184,37)" fg:x="20070" fg:w="19"/><text x="26.3109%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="26.0609%" y="1093" width="0.0247%" height="15" fill="rgb(248,91,47)" fg:x="20070" fg:w="19"/><text x="26.3109%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.02%)</title><rect x="26.0609%" y="1077" width="0.0247%" height="15" fill="rgb(243,199,8)" fg:x="20070" fg:w="19"/><text x="26.3109%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.02%)</title><rect x="26.0609%" y="1061" width="0.0247%" height="15" fill="rgb(249,12,15)" fg:x="20070" fg:w="19"/><text x="26.3109%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.02%)</title><rect x="26.0609%" y="1045" width="0.0247%" height="15" fill="rgb(245,97,12)" fg:x="20070" fg:w="19"/><text x="26.3109%" y="1055.50"></text></g><g><title>realloc (17 samples, 0.02%)</title><rect x="26.0635%" y="1029" width="0.0221%" height="15" fill="rgb(244,61,1)" fg:x="20072" fg:w="17"/><text x="26.3135%" y="1039.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="26.0635%" y="1013" width="0.0221%" height="15" fill="rgb(222,194,10)" fg:x="20072" fg:w="17"/><text x="26.3135%" y="1023.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="26.0752%" y="997" width="0.0104%" height="15" fill="rgb(226,178,8)" fg:x="20081" fg:w="8"/><text x="26.3252%" y="1007.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (29 samples, 0.04%)</title><rect x="26.0531%" y="1365" width="0.0377%" height="15" fill="rgb(241,32,34)" fg:x="20064" fg:w="29"/><text x="26.3031%" y="1375.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (29 samples, 0.04%)</title><rect x="26.0531%" y="1349" width="0.0377%" height="15" fill="rgb(254,26,6)" fg:x="20064" fg:w="29"/><text x="26.3031%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 0.04%)</title><rect x="26.0544%" y="1333" width="0.0364%" height="15" fill="rgb(249,71,11)" fg:x="20065" fg:w="28"/><text x="26.3044%" y="1343.50"></text></g><g><title>move_core_types::safe_serialize::TYPE_TAG_DEPTH::__getit (10 samples, 0.01%)</title><rect x="26.0959%" y="1333" width="0.0130%" height="15" fill="rgb(232,170,27)" fg:x="20097" fg:w="10"/><text x="26.3459%" y="1343.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (44 samples, 0.06%)</title><rect x="26.0531%" y="1397" width="0.0571%" height="15" fill="rgb(214,223,17)" fg:x="20064" fg:w="44"/><text x="26.3031%" y="1407.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_serialize (44 samples, 0.06%)</title><rect x="26.0531%" y="1381" width="0.0571%" height="15" fill="rgb(250,18,15)" fg:x="20064" fg:w="44"/><text x="26.3031%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.02%)</title><rect x="26.0907%" y="1365" width="0.0195%" height="15" fill="rgb(212,153,51)" fg:x="20093" fg:w="15"/><text x="26.3407%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="26.0959%" y="1349" width="0.0143%" height="15" fill="rgb(219,194,12)" fg:x="20097" fg:w="11"/><text x="26.3459%" y="1359.50"></text></g><g><title>bcs::ser::to_bytes (217 samples, 0.28%)</title><rect x="25.8297%" y="1637" width="0.2818%" height="15" fill="rgb(212,58,17)" fg:x="19892" fg:w="217"/><text x="26.0797%" y="1647.50"></text></g><g><title>bcs::ser::serialize_into (217 samples, 0.28%)</title><rect x="25.8297%" y="1621" width="0.2818%" height="15" fill="rgb(254,5,10)" fg:x="19892" fg:w="217"/><text x="26.0797%" y="1631.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (217 samples, 0.28%)</title><rect x="25.8297%" y="1605" width="0.2818%" height="15" fill="rgb(246,91,7)" fg:x="19892" fg:w="217"/><text x="26.0797%" y="1615.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (199 samples, 0.26%)</title><rect x="25.8531%" y="1589" width="0.2584%" height="15" fill="rgb(218,108,49)" fg:x="19910" fg:w="199"/><text x="26.1031%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (198 samples, 0.26%)</title><rect x="25.8544%" y="1573" width="0.2571%" height="15" fill="rgb(238,123,20)" fg:x="19911" fg:w="198"/><text x="26.1044%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (58 samples, 0.08%)</title><rect x="26.0362%" y="1557" width="0.0753%" height="15" fill="rgb(231,69,23)" fg:x="20051" fg:w="58"/><text x="26.2862%" y="1567.50"></text></g><g><title>serde::ser::Serializer::collect_seq (58 samples, 0.08%)</title><rect x="26.0362%" y="1541" width="0.0753%" height="15" fill="rgb(230,209,3)" fg:x="20051" fg:w="58"/><text x="26.2862%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (56 samples, 0.07%)</title><rect x="26.0388%" y="1525" width="0.0727%" height="15" fill="rgb(231,19,0)" fg:x="20053" fg:w="56"/><text x="26.2888%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (56 samples, 0.07%)</title><rect x="26.0388%" y="1509" width="0.0727%" height="15" fill="rgb(226,192,25)" fg:x="20053" fg:w="56"/><text x="26.2888%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (54 samples, 0.07%)</title><rect x="26.0414%" y="1493" width="0.0701%" height="15" fill="rgb(223,175,53)" fg:x="20055" fg:w="54"/><text x="26.2914%" y="1503.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (54 samples, 0.07%)</title><rect x="26.0414%" y="1477" width="0.0701%" height="15" fill="rgb(248,35,51)" fg:x="20055" fg:w="54"/><text x="26.2914%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (54 samples, 0.07%)</title><rect x="26.0414%" y="1461" width="0.0701%" height="15" fill="rgb(230,37,26)" fg:x="20055" fg:w="54"/><text x="26.2914%" y="1471.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (54 samples, 0.07%)</title><rect x="26.0414%" y="1445" width="0.0701%" height="15" fill="rgb(206,120,22)" fg:x="20055" fg:w="54"/><text x="26.2914%" y="1455.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (54 samples, 0.07%)</title><rect x="26.0414%" y="1429" width="0.0701%" height="15" fill="rgb(207,165,28)" fg:x="20055" fg:w="54"/><text x="26.2914%" y="1439.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (45 samples, 0.06%)</title><rect x="26.0531%" y="1413" width="0.0584%" height="15" fill="rgb(226,23,46)" fg:x="20064" fg:w="45"/><text x="26.3031%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (11 samples, 0.01%)</title><rect x="26.1141%" y="1605" width="0.0143%" height="15" fill="rgb(208,130,44)" fg:x="20111" fg:w="11"/><text x="26.3641%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="26.1141%" y="1589" width="0.0143%" height="15" fill="rgb(231,67,8)" fg:x="20111" fg:w="11"/><text x="26.3641%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (11 samples, 0.01%)</title><rect x="26.1141%" y="1573" width="0.0143%" height="15" fill="rgb(205,183,22)" fg:x="20111" fg:w="11"/><text x="26.3641%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (11 samples, 0.01%)</title><rect x="26.1141%" y="1557" width="0.0143%" height="15" fill="rgb(224,47,9)" fg:x="20111" fg:w="11"/><text x="26.3641%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (10 samples, 0.01%)</title><rect x="26.1154%" y="1541" width="0.0130%" height="15" fill="rgb(250,183,49)" fg:x="20112" fg:w="10"/><text x="26.3654%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (10 samples, 0.01%)</title><rect x="26.1154%" y="1525" width="0.0130%" height="15" fill="rgb(220,151,39)" fg:x="20112" fg:w="10"/><text x="26.3654%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (8 samples, 0.01%)</title><rect x="26.1180%" y="1509" width="0.0104%" height="15" fill="rgb(220,118,20)" fg:x="20114" fg:w="8"/><text x="26.3680%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (8 samples, 0.01%)</title><rect x="26.1180%" y="1493" width="0.0104%" height="15" fill="rgb(231,65,51)" fg:x="20114" fg:w="8"/><text x="26.3680%" y="1503.50"></text></g><g><title>alloc::alloc::box_free (8 samples, 0.01%)</title><rect x="26.1180%" y="1477" width="0.0104%" height="15" fill="rgb(253,125,37)" fg:x="20114" fg:w="8"/><text x="26.3680%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="26.1180%" y="1461" width="0.0104%" height="15" fill="rgb(232,102,6)" fg:x="20114" fg:w="8"/><text x="26.3680%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="26.1180%" y="1445" width="0.0104%" height="15" fill="rgb(251,105,13)" fg:x="20114" fg:w="8"/><text x="26.3680%" y="1455.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="26.1180%" y="1429" width="0.0104%" height="15" fill="rgb(222,179,29)" fg:x="20114" fg:w="8"/><text x="26.3680%" y="1439.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (237 samples, 0.31%)</title><rect x="25.8297%" y="1669" width="0.3077%" height="15" fill="rgb(229,180,53)" fg:x="19892" fg:w="237"/><text x="26.0797%" y="1679.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (237 samples, 0.31%)</title><rect x="25.8297%" y="1653" width="0.3077%" height="15" fill="rgb(238,104,13)" fg:x="19892" fg:w="237"/><text x="26.0797%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (18 samples, 0.02%)</title><rect x="26.1141%" y="1637" width="0.0234%" height="15" fill="rgb(210,130,5)" fg:x="20111" fg:w="18"/><text x="26.3641%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (18 samples, 0.02%)</title><rect x="26.1141%" y="1621" width="0.0234%" height="15" fill="rgb(233,87,49)" fg:x="20111" fg:w="18"/><text x="26.3641%" y="1631.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (9 samples, 0.01%)</title><rect x="26.1505%" y="1541" width="0.0117%" height="15" fill="rgb(243,34,9)" fg:x="20139" fg:w="9"/><text x="26.4005%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="26.1505%" y="1525" width="0.0117%" height="15" fill="rgb(235,225,10)" fg:x="20139" fg:w="9"/><text x="26.4005%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="26.1505%" y="1509" width="0.0117%" height="15" fill="rgb(212,0,30)" fg:x="20139" fg:w="9"/><text x="26.4005%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="26.1505%" y="1493" width="0.0117%" height="15" fill="rgb(211,177,0)" fg:x="20139" fg:w="9"/><text x="26.4005%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="26.1505%" y="1477" width="0.0117%" height="15" fill="rgb(225,220,11)" fg:x="20139" fg:w="9"/><text x="26.4005%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.02%)</title><rect x="26.1622%" y="1541" width="0.0195%" height="15" fill="rgb(215,10,13)" fg:x="20148" fg:w="15"/><text x="26.4122%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="26.1674%" y="1525" width="0.0143%" height="15" fill="rgb(240,177,14)" fg:x="20152" fg:w="11"/><text x="26.4174%" y="1535.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (11 samples, 0.01%)</title><rect x="26.1674%" y="1509" width="0.0143%" height="15" fill="rgb(243,7,39)" fg:x="20152" fg:w="11"/><text x="26.4174%" y="1519.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="26.1933%" y="1413" width="0.0247%" height="15" fill="rgb(212,99,0)" fg:x="20172" fg:w="19"/><text x="26.4433%" y="1423.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (15 samples, 0.02%)</title><rect x="26.1985%" y="1397" width="0.0195%" height="15" fill="rgb(225,162,48)" fg:x="20176" fg:w="15"/><text x="26.4485%" y="1407.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (15 samples, 0.02%)</title><rect x="26.1985%" y="1381" width="0.0195%" height="15" fill="rgb(246,16,25)" fg:x="20176" fg:w="15"/><text x="26.4485%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (15 samples, 0.02%)</title><rect x="26.1985%" y="1365" width="0.0195%" height="15" fill="rgb(220,150,2)" fg:x="20176" fg:w="15"/><text x="26.4485%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (9 samples, 0.01%)</title><rect x="26.2063%" y="1349" width="0.0117%" height="15" fill="rgb(237,113,11)" fg:x="20182" fg:w="9"/><text x="26.4563%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="26.2063%" y="1333" width="0.0117%" height="15" fill="rgb(236,70,20)" fg:x="20182" fg:w="9"/><text x="26.4563%" y="1343.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (26 samples, 0.03%)</title><rect x="26.1933%" y="1445" width="0.0338%" height="15" fill="rgb(234,94,7)" fg:x="20172" fg:w="26"/><text x="26.4433%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (26 samples, 0.03%)</title><rect x="26.1933%" y="1429" width="0.0338%" height="15" fill="rgb(250,221,0)" fg:x="20172" fg:w="26"/><text x="26.4433%" y="1439.50"></text></g><g><title>hashbrown::map::make_hash (36 samples, 0.05%)</title><rect x="26.1868%" y="1493" width="0.0467%" height="15" fill="rgb(245,149,46)" fg:x="20167" fg:w="36"/><text x="26.4368%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.05%)</title><rect x="26.1868%" y="1477" width="0.0467%" height="15" fill="rgb(215,37,27)" fg:x="20167" fg:w="36"/><text x="26.4368%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.04%)</title><rect x="26.1933%" y="1461" width="0.0403%" height="15" fill="rgb(232,65,3)" fg:x="20172" fg:w="31"/><text x="26.4433%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (26 samples, 0.03%)</title><rect x="26.2349%" y="1445" width="0.0338%" height="15" fill="rgb(214,2,16)" fg:x="20204" fg:w="26"/><text x="26.4849%" y="1455.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (26 samples, 0.03%)</title><rect x="26.2349%" y="1429" width="0.0338%" height="15" fill="rgb(227,131,50)" fg:x="20204" fg:w="26"/><text x="26.4849%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (26 samples, 0.03%)</title><rect x="26.2349%" y="1413" width="0.0338%" height="15" fill="rgb(247,131,45)" fg:x="20204" fg:w="26"/><text x="26.4849%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.03%)</title><rect x="26.2349%" y="1397" width="0.0338%" height="15" fill="rgb(215,97,47)" fg:x="20204" fg:w="26"/><text x="26.4849%" y="1407.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (26 samples, 0.03%)</title><rect x="26.2349%" y="1381" width="0.0338%" height="15" fill="rgb(233,143,12)" fg:x="20204" fg:w="26"/><text x="26.4849%" y="1391.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="26.2543%" y="1365" width="0.0143%" height="15" fill="rgb(222,57,17)" fg:x="20219" fg:w="11"/><text x="26.5043%" y="1375.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (117 samples, 0.15%)</title><rect x="26.1427%" y="1557" width="0.1519%" height="15" fill="rgb(214,119,38)" fg:x="20133" fg:w="117"/><text x="26.3927%" y="1567.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (87 samples, 0.11%)</title><rect x="26.1816%" y="1541" width="0.1130%" height="15" fill="rgb(217,28,47)" fg:x="20163" fg:w="87"/><text x="26.4316%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (87 samples, 0.11%)</title><rect x="26.1816%" y="1525" width="0.1130%" height="15" fill="rgb(231,14,52)" fg:x="20163" fg:w="87"/><text x="26.4316%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (87 samples, 0.11%)</title><rect x="26.1816%" y="1509" width="0.1130%" height="15" fill="rgb(220,158,18)" fg:x="20163" fg:w="87"/><text x="26.4316%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (47 samples, 0.06%)</title><rect x="26.2336%" y="1493" width="0.0610%" height="15" fill="rgb(222,143,46)" fg:x="20203" fg:w="47"/><text x="26.4836%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (47 samples, 0.06%)</title><rect x="26.2336%" y="1477" width="0.0610%" height="15" fill="rgb(227,165,5)" fg:x="20203" fg:w="47"/><text x="26.4836%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (47 samples, 0.06%)</title><rect x="26.2336%" y="1461" width="0.0610%" height="15" fill="rgb(216,222,49)" fg:x="20203" fg:w="47"/><text x="26.4836%" y="1471.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (20 samples, 0.03%)</title><rect x="26.2686%" y="1445" width="0.0260%" height="15" fill="rgb(238,73,39)" fg:x="20230" fg:w="20"/><text x="26.5186%" y="1455.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (20 samples, 0.03%)</title><rect x="26.2686%" y="1429" width="0.0260%" height="15" fill="rgb(252,115,9)" fg:x="20230" fg:w="20"/><text x="26.5186%" y="1439.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.03%)</title><rect x="26.2686%" y="1413" width="0.0260%" height="15" fill="rgb(238,202,4)" fg:x="20230" fg:w="20"/><text x="26.5186%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="26.3076%" y="1429" width="0.0117%" height="15" fill="rgb(252,153,44)" fg:x="20260" fg:w="9"/><text x="26.5576%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="26.3076%" y="1413" width="0.0117%" height="15" fill="rgb(235,128,27)" fg:x="20260" fg:w="9"/><text x="26.5576%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="26.3076%" y="1397" width="0.0117%" height="15" fill="rgb(221,121,47)" fg:x="20260" fg:w="9"/><text x="26.5576%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="26.3089%" y="1381" width="0.0104%" height="15" fill="rgb(247,211,47)" fg:x="20261" fg:w="8"/><text x="26.5589%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="26.3089%" y="1365" width="0.0104%" height="15" fill="rgb(252,47,49)" fg:x="20261" fg:w="8"/><text x="26.5589%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="26.3089%" y="1349" width="0.0104%" height="15" fill="rgb(219,119,53)" fg:x="20261" fg:w="8"/><text x="26.5589%" y="1359.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="26.3024%" y="1541" width="0.0221%" height="15" fill="rgb(243,165,53)" fg:x="20256" fg:w="17"/><text x="26.5524%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="26.3050%" y="1525" width="0.0195%" height="15" fill="rgb(230,12,35)" fg:x="20258" fg:w="15"/><text x="26.5550%" y="1535.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="26.3063%" y="1509" width="0.0182%" height="15" fill="rgb(239,57,49)" fg:x="20259" fg:w="14"/><text x="26.5563%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="26.3063%" y="1493" width="0.0182%" height="15" fill="rgb(231,154,7)" fg:x="20259" fg:w="14"/><text x="26.5563%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.02%)</title><rect x="26.3076%" y="1477" width="0.0169%" height="15" fill="rgb(248,81,34)" fg:x="20260" fg:w="13"/><text x="26.5576%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.02%)</title><rect x="26.3076%" y="1461" width="0.0169%" height="15" fill="rgb(247,9,5)" fg:x="20260" fg:w="13"/><text x="26.5576%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.02%)</title><rect x="26.3076%" y="1445" width="0.0169%" height="15" fill="rgb(228,172,27)" fg:x="20260" fg:w="13"/><text x="26.5576%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.02%)</title><rect x="26.3245%" y="1525" width="0.0156%" height="15" fill="rgb(230,57,44)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.02%)</title><rect x="26.3245%" y="1509" width="0.0156%" height="15" fill="rgb(249,35,22)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="26.3245%" y="1493" width="0.0156%" height="15" fill="rgb(250,137,27)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.02%)</title><rect x="26.3245%" y="1477" width="0.0156%" height="15" fill="rgb(251,57,31)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1487.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.02%)</title><rect x="26.3245%" y="1461" width="0.0156%" height="15" fill="rgb(238,60,0)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1471.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.02%)</title><rect x="26.3245%" y="1445" width="0.0156%" height="15" fill="rgb(242,185,39)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1455.50"></text></g><g><title>realloc (12 samples, 0.02%)</title><rect x="26.3245%" y="1429" width="0.0156%" height="15" fill="rgb(240,63,43)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1439.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="26.3245%" y="1413" width="0.0156%" height="15" fill="rgb(236,155,6)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1423.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="26.3245%" y="1397" width="0.0156%" height="15" fill="rgb(215,11,29)" fg:x="20273" fg:w="12"/><text x="26.5745%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.03%)</title><rect x="26.3245%" y="1541" width="0.0260%" height="15" fill="rgb(228,180,48)" fg:x="20273" fg:w="20"/><text x="26.5745%" y="1551.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="26.3401%" y="1525" width="0.0104%" height="15" fill="rgb(241,102,12)" fg:x="20285" fg:w="8"/><text x="26.5901%" y="1535.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="26.3401%" y="1509" width="0.0104%" height="15" fill="rgb(246,213,4)" fg:x="20285" fg:w="8"/><text x="26.5901%" y="1519.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (10 samples, 0.01%)</title><rect x="26.3738%" y="1493" width="0.0130%" height="15" fill="rgb(218,134,35)" fg:x="20311" fg:w="10"/><text x="26.6238%" y="1503.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.01%)</title><rect x="26.3738%" y="1477" width="0.0130%" height="15" fill="rgb(251,117,35)" fg:x="20311" fg:w="10"/><text x="26.6238%" y="1487.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.01%)</title><rect x="26.3738%" y="1461" width="0.0130%" height="15" fill="rgb(206,156,45)" fg:x="20311" fg:w="10"/><text x="26.6238%" y="1471.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (9 samples, 0.01%)</title><rect x="26.3751%" y="1445" width="0.0117%" height="15" fill="rgb(218,52,27)" fg:x="20312" fg:w="9"/><text x="26.6251%" y="1455.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (9 samples, 0.01%)</title><rect x="26.3751%" y="1429" width="0.0117%" height="15" fill="rgb(238,83,36)" fg:x="20312" fg:w="9"/><text x="26.6251%" y="1439.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (9 samples, 0.01%)</title><rect x="26.3751%" y="1413" width="0.0117%" height="15" fill="rgb(218,53,43)" fg:x="20312" fg:w="9"/><text x="26.6251%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="26.4050%" y="1413" width="0.0104%" height="15" fill="rgb(239,54,39)" fg:x="20335" fg:w="8"/><text x="26.6550%" y="1423.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (21 samples, 0.03%)</title><rect x="26.3894%" y="1493" width="0.0273%" height="15" fill="rgb(212,198,13)" fg:x="20323" fg:w="21"/><text x="26.6394%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.02%)</title><rect x="26.4011%" y="1477" width="0.0156%" height="15" fill="rgb(234,54,46)" fg:x="20332" fg:w="12"/><text x="26.6511%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="26.4011%" y="1461" width="0.0156%" height="15" fill="rgb(217,120,7)" fg:x="20332" fg:w="12"/><text x="26.6511%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="26.4024%" y="1445" width="0.0143%" height="15" fill="rgb(246,39,15)" fg:x="20333" fg:w="11"/><text x="26.6524%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="26.4024%" y="1429" width="0.0143%" height="15" fill="rgb(242,143,31)" fg:x="20333" fg:w="11"/><text x="26.6524%" y="1439.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (48 samples, 0.06%)</title><rect x="26.3556%" y="1541" width="0.0623%" height="15" fill="rgb(252,60,24)" fg:x="20297" fg:w="48"/><text x="26.6056%" y="1551.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (45 samples, 0.06%)</title><rect x="26.3595%" y="1525" width="0.0584%" height="15" fill="rgb(249,220,7)" fg:x="20300" fg:w="45"/><text x="26.6095%" y="1535.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (42 samples, 0.05%)</title><rect x="26.3634%" y="1509" width="0.0545%" height="15" fill="rgb(236,67,13)" fg:x="20303" fg:w="42"/><text x="26.6134%" y="1519.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (218 samples, 0.28%)</title><rect x="26.1375%" y="1589" width="0.2831%" height="15" fill="rgb(210,62,39)" fg:x="20129" fg:w="218"/><text x="26.3875%" y="1599.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (218 samples, 0.28%)</title><rect x="26.1375%" y="1573" width="0.2831%" height="15" fill="rgb(219,122,53)" fg:x="20129" fg:w="218"/><text x="26.3875%" y="1583.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (97 samples, 0.13%)</title><rect x="26.2946%" y="1557" width="0.1260%" height="15" fill="rgb(218,87,25)" fg:x="20250" fg:w="97"/><text x="26.5446%" y="1567.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="26.4219%" y="1541" width="0.0104%" height="15" fill="rgb(234,179,48)" fg:x="20348" fg:w="8"/><text x="26.6719%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.01%)</title><rect x="26.4219%" y="1525" width="0.0104%" height="15" fill="rgb(248,90,0)" fg:x="20348" fg:w="8"/><text x="26.6719%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.01%)</title><rect x="26.4219%" y="1509" width="0.0104%" height="15" fill="rgb(207,228,37)" fg:x="20348" fg:w="8"/><text x="26.6719%" y="1519.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (229 samples, 0.30%)</title><rect x="26.1375%" y="1605" width="0.2974%" height="15" fill="rgb(235,214,15)" fg:x="20129" fg:w="229"/><text x="26.3875%" y="1615.50"></text></g><g><title>aptos_types::write_set::WriteSetV0::get (11 samples, 0.01%)</title><rect x="26.4206%" y="1589" width="0.0143%" height="15" fill="rgb(210,144,39)" fg:x="20347" fg:w="11"/><text x="26.6706%" y="1599.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::get (10 samples, 0.01%)</title><rect x="26.4219%" y="1573" width="0.0130%" height="15" fill="rgb(222,67,41)" fg:x="20348" fg:w="10"/><text x="26.6719%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (10 samples, 0.01%)</title><rect x="26.4219%" y="1557" width="0.0130%" height="15" fill="rgb(205,35,37)" fg:x="20348" fg:w="10"/><text x="26.6719%" y="1567.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (1,529 samples, 1.99%)</title><rect x="24.4559%" y="1749" width="1.9854%" height="15" fill="rgb(216,125,40)" fg:x="18834" fg:w="1529"/><text x="24.7059%" y="1759.50">&lt;..</text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (1,529 samples, 1.99%)</title><rect x="24.4559%" y="1733" width="1.9854%" height="15" fill="rgb(228,227,20)" fg:x="18834" fg:w="1529"/><text x="24.7059%" y="1743.50">a..</text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (471 samples, 0.61%)</title><rect x="25.8297%" y="1717" width="0.6116%" height="15" fill="rgb(242,173,45)" fg:x="19892" fg:w="471"/><text x="26.0797%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (471 samples, 0.61%)</title><rect x="25.8297%" y="1701" width="0.6116%" height="15" fill="rgb(215,79,24)" fg:x="19892" fg:w="471"/><text x="26.0797%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (471 samples, 0.61%)</title><rect x="25.8297%" y="1685" width="0.6116%" height="15" fill="rgb(238,164,38)" fg:x="19892" fg:w="471"/><text x="26.0797%" y="1695.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (234 samples, 0.30%)</title><rect x="26.1375%" y="1669" width="0.3038%" height="15" fill="rgb(245,196,38)" fg:x="20129" fg:w="234"/><text x="26.3875%" y="1679.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (234 samples, 0.30%)</title><rect x="26.1375%" y="1653" width="0.3038%" height="15" fill="rgb(231,217,29)" fg:x="20129" fg:w="234"/><text x="26.3875%" y="1663.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (234 samples, 0.30%)</title><rect x="26.1375%" y="1637" width="0.3038%" height="15" fill="rgb(245,6,4)" fg:x="20129" fg:w="234"/><text x="26.3875%" y="1647.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (234 samples, 0.30%)</title><rect x="26.1375%" y="1621" width="0.3038%" height="15" fill="rgb(214,76,49)" fg:x="20129" fg:w="234"/><text x="26.3875%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (133 samples, 0.17%)</title><rect x="26.4413%" y="1749" width="0.1727%" height="15" fill="rgb(205,96,12)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (133 samples, 0.17%)</title><rect x="26.4413%" y="1733" width="0.1727%" height="15" fill="rgb(243,131,4)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (133 samples, 0.17%)</title><rect x="26.4413%" y="1717" width="0.1727%" height="15" fill="rgb(214,114,4)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (133 samples, 0.17%)</title><rect x="26.4413%" y="1701" width="0.1727%" height="15" fill="rgb(234,215,15)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (133 samples, 0.17%)</title><rect x="26.4413%" y="1685" width="0.1727%" height="15" fill="rgb(250,216,45)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (133 samples, 0.17%)</title><rect x="26.4413%" y="1669" width="0.1727%" height="15" fill="rgb(236,128,4)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.17%)</title><rect x="26.4413%" y="1653" width="0.1727%" height="15" fill="rgb(234,50,33)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (133 samples, 0.17%)</title><rect x="26.4413%" y="1637" width="0.1727%" height="15" fill="rgb(253,131,37)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (133 samples, 0.17%)</title><rect x="26.4413%" y="1621" width="0.1727%" height="15" fill="rgb(218,55,27)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1631.50"></text></g><g><title>malloc (133 samples, 0.17%)</title><rect x="26.4413%" y="1605" width="0.1727%" height="15" fill="rgb(241,220,28)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1615.50"></text></g><g><title>[libc.so.6] (133 samples, 0.17%)</title><rect x="26.4413%" y="1589" width="0.1727%" height="15" fill="rgb(241,90,48)" fg:x="20363" fg:w="133"/><text x="26.6913%" y="1599.50"></text></g><g><title>[libc.so.6] (66 samples, 0.09%)</title><rect x="26.5283%" y="1573" width="0.0857%" height="15" fill="rgb(216,43,37)" fg:x="20430" fg:w="66"/><text x="26.7783%" y="1583.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (16 samples, 0.02%)</title><rect x="26.6140%" y="1749" width="0.0208%" height="15" fill="rgb(207,173,9)" fg:x="20496" fg:w="16"/><text x="26.8640%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.02%)</title><rect x="26.6140%" y="1733" width="0.0208%" height="15" fill="rgb(240,126,30)" fg:x="20496" fg:w="16"/><text x="26.8640%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (16 samples, 0.02%)</title><rect x="26.6140%" y="1717" width="0.0208%" height="15" fill="rgb(228,178,53)" fg:x="20496" fg:w="16"/><text x="26.8640%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (16 samples, 0.02%)</title><rect x="26.6140%" y="1701" width="0.0208%" height="15" fill="rgb(217,33,4)" fg:x="20496" fg:w="16"/><text x="26.8640%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (10 samples, 0.01%)</title><rect x="26.6218%" y="1685" width="0.0130%" height="15" fill="rgb(206,124,34)" fg:x="20502" fg:w="10"/><text x="26.8718%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (10 samples, 0.01%)</title><rect x="26.6218%" y="1669" width="0.0130%" height="15" fill="rgb(208,122,53)" fg:x="20502" fg:w="10"/><text x="26.8718%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (8 samples, 0.01%)</title><rect x="26.6244%" y="1653" width="0.0104%" height="15" fill="rgb(215,202,26)" fg:x="20504" fg:w="8"/><text x="26.8744%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="26.6958%" y="1605" width="0.0156%" height="15" fill="rgb(232,198,31)" fg:x="20559" fg:w="12"/><text x="26.9458%" y="1615.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.01%)</title><rect x="26.6997%" y="1589" width="0.0117%" height="15" fill="rgb(222,23,35)" fg:x="20562" fg:w="9"/><text x="26.9497%" y="1599.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.01%)</title><rect x="26.6997%" y="1573" width="0.0117%" height="15" fill="rgb(242,27,53)" fg:x="20562" fg:w="9"/><text x="26.9497%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="26.6997%" y="1557" width="0.0117%" height="15" fill="rgb(210,216,42)" fg:x="20562" fg:w="9"/><text x="26.9497%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="26.6997%" y="1541" width="0.0117%" height="15" fill="rgb(234,39,38)" fg:x="20562" fg:w="9"/><text x="26.9497%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="26.6997%" y="1525" width="0.0117%" height="15" fill="rgb(235,126,54)" fg:x="20562" fg:w="9"/><text x="26.9497%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="26.7231%" y="1525" width="0.0117%" height="15" fill="rgb(235,150,33)" fg:x="20580" fg:w="9"/><text x="26.9731%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="26.7231%" y="1509" width="0.0117%" height="15" fill="rgb(249,49,53)" fg:x="20580" fg:w="9"/><text x="26.9731%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="26.7231%" y="1493" width="0.0117%" height="15" fill="rgb(238,60,50)" fg:x="20580" fg:w="9"/><text x="26.9731%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="26.7244%" y="1477" width="0.0104%" height="15" fill="rgb(210,5,2)" fg:x="20581" fg:w="8"/><text x="26.9744%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="26.7244%" y="1461" width="0.0104%" height="15" fill="rgb(214,207,24)" fg:x="20581" fg:w="8"/><text x="26.9744%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="26.7244%" y="1445" width="0.0104%" height="15" fill="rgb(228,173,2)" fg:x="20581" fg:w="8"/><text x="26.9744%" y="1455.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (68 samples, 0.09%)</title><rect x="26.6582%" y="1621" width="0.0883%" height="15" fill="rgb(244,26,8)" fg:x="20530" fg:w="68"/><text x="26.9082%" y="1631.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="26.7114%" y="1605" width="0.0351%" height="15" fill="rgb(249,153,35)" fg:x="20571" fg:w="27"/><text x="26.9614%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="26.7179%" y="1589" width="0.0286%" height="15" fill="rgb(221,215,40)" fg:x="20576" fg:w="22"/><text x="26.9679%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.03%)</title><rect x="26.7179%" y="1573" width="0.0286%" height="15" fill="rgb(238,106,35)" fg:x="20576" fg:w="22"/><text x="26.9679%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.03%)</title><rect x="26.7179%" y="1557" width="0.0286%" height="15" fill="rgb(207,195,21)" fg:x="20576" fg:w="22"/><text x="26.9679%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.03%)</title><rect x="26.7179%" y="1541" width="0.0286%" height="15" fill="rgb(205,43,29)" fg:x="20576" fg:w="22"/><text x="26.9679%" y="1551.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.01%)</title><rect x="26.7348%" y="1525" width="0.0117%" height="15" fill="rgb(236,35,21)" fg:x="20589" fg:w="9"/><text x="26.9848%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="26.7465%" y="1621" width="0.0104%" height="15" fill="rgb(244,74,8)" fg:x="20598" fg:w="8"/><text x="26.9965%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="26.7465%" y="1605" width="0.0104%" height="15" fill="rgb(241,229,7)" fg:x="20598" fg:w="8"/><text x="26.9965%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="26.7465%" y="1589" width="0.0104%" height="15" fill="rgb(212,223,25)" fg:x="20598" fg:w="8"/><text x="26.9965%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="26.7465%" y="1573" width="0.0104%" height="15" fill="rgb(234,58,53)" fg:x="20598" fg:w="8"/><text x="26.9965%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="26.7465%" y="1557" width="0.0104%" height="15" fill="rgb(244,36,1)" fg:x="20598" fg:w="8"/><text x="26.9965%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="26.7465%" y="1541" width="0.0104%" height="15" fill="rgb(222,40,54)" fg:x="20598" fg:w="8"/><text x="26.9965%" y="1551.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (87 samples, 0.11%)</title><rect x="26.6543%" y="1701" width="0.1130%" height="15" fill="rgb(210,207,39)" fg:x="20527" fg:w="87"/><text x="26.9043%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (85 samples, 0.11%)</title><rect x="26.6569%" y="1685" width="0.1104%" height="15" fill="rgb(234,52,14)" fg:x="20529" fg:w="85"/><text x="26.9069%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84 samples, 0.11%)</title><rect x="26.6582%" y="1669" width="0.1091%" height="15" fill="rgb(239,108,46)" fg:x="20530" fg:w="84"/><text x="26.9082%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (84 samples, 0.11%)</title><rect x="26.6582%" y="1653" width="0.1091%" height="15" fill="rgb(252,223,5)" fg:x="20530" fg:w="84"/><text x="26.9082%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84 samples, 0.11%)</title><rect x="26.6582%" y="1637" width="0.1091%" height="15" fill="rgb(227,181,11)" fg:x="20530" fg:w="84"/><text x="26.9082%" y="1647.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.01%)</title><rect x="26.7569%" y="1621" width="0.0104%" height="15" fill="rgb(248,126,40)" fg:x="20606" fg:w="8"/><text x="27.0069%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="26.7763%" y="1621" width="0.0143%" height="15" fill="rgb(243,1,18)" fg:x="20621" fg:w="11"/><text x="27.0263%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="26.7763%" y="1605" width="0.0143%" height="15" fill="rgb(214,145,23)" fg:x="20621" fg:w="11"/><text x="27.0263%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="26.7763%" y="1589" width="0.0143%" height="15" fill="rgb(241,218,11)" fg:x="20621" fg:w="11"/><text x="27.0263%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.04%)</title><rect x="26.7750%" y="1653" width="0.0364%" height="15" fill="rgb(214,219,24)" fg:x="20620" fg:w="28"/><text x="27.0250%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.04%)</title><rect x="26.7750%" y="1637" width="0.0364%" height="15" fill="rgb(235,32,7)" fg:x="20620" fg:w="28"/><text x="27.0250%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.02%)</title><rect x="26.7945%" y="1621" width="0.0169%" height="15" fill="rgb(227,121,28)" fg:x="20635" fg:w="13"/><text x="27.0445%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (146 samples, 0.19%)</title><rect x="26.6348%" y="1749" width="0.1896%" height="15" fill="rgb(216,129,49)" fg:x="20512" fg:w="146"/><text x="26.8848%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (146 samples, 0.19%)</title><rect x="26.6348%" y="1733" width="0.1896%" height="15" fill="rgb(207,194,50)" fg:x="20512" fg:w="146"/><text x="26.8848%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (146 samples, 0.19%)</title><rect x="26.6348%" y="1717" width="0.1896%" height="15" fill="rgb(207,4,18)" fg:x="20512" fg:w="146"/><text x="26.8848%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (40 samples, 0.05%)</title><rect x="26.7725%" y="1701" width="0.0519%" height="15" fill="rgb(213,50,30)" fg:x="20618" fg:w="40"/><text x="27.0225%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (40 samples, 0.05%)</title><rect x="26.7725%" y="1685" width="0.0519%" height="15" fill="rgb(208,77,22)" fg:x="20618" fg:w="40"/><text x="27.0225%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (40 samples, 0.05%)</title><rect x="26.7725%" y="1669" width="0.0519%" height="15" fill="rgb(244,204,34)" fg:x="20618" fg:w="40"/><text x="27.0225%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="26.8114%" y="1653" width="0.0130%" height="15" fill="rgb(230,20,17)" fg:x="20648" fg:w="10"/><text x="27.0614%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="26.8114%" y="1637" width="0.0130%" height="15" fill="rgb(237,83,15)" fg:x="20648" fg:w="10"/><text x="27.0614%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.01%)</title><rect x="26.8114%" y="1621" width="0.0130%" height="15" fill="rgb(221,109,25)" fg:x="20648" fg:w="10"/><text x="27.0614%" y="1631.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.02%)</title><rect x="26.8776%" y="1413" width="0.0156%" height="15" fill="rgb(205,194,52)" fg:x="20699" fg:w="12"/><text x="27.1276%" y="1423.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (11 samples, 0.01%)</title><rect x="26.8789%" y="1397" width="0.0143%" height="15" fill="rgb(244,173,54)" fg:x="20700" fg:w="11"/><text x="27.1289%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.02%)</title><rect x="26.8971%" y="1413" width="0.0156%" height="15" fill="rgb(227,181,18)" fg:x="20714" fg:w="12"/><text x="27.1471%" y="1423.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="26.8997%" y="1397" width="0.0130%" height="15" fill="rgb(238,36,30)" fg:x="20716" fg:w="10"/><text x="27.1497%" y="1407.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (39 samples, 0.05%)</title><rect x="26.8633%" y="1429" width="0.0506%" height="15" fill="rgb(254,85,0)" fg:x="20688" fg:w="39"/><text x="27.1133%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (42 samples, 0.05%)</title><rect x="26.8620%" y="1445" width="0.0545%" height="15" fill="rgb(247,63,33)" fg:x="20687" fg:w="42"/><text x="27.1120%" y="1455.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (51 samples, 0.07%)</title><rect x="26.8595%" y="1461" width="0.0662%" height="15" fill="rgb(220,7,54)" fg:x="20685" fg:w="51"/><text x="27.1095%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (68 samples, 0.09%)</title><rect x="26.8543%" y="1477" width="0.0883%" height="15" fill="rgb(238,227,21)" fg:x="20681" fg:w="68"/><text x="27.1043%" y="1487.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (13 samples, 0.02%)</title><rect x="26.9257%" y="1461" width="0.0169%" height="15" fill="rgb(237,29,31)" fg:x="20736" fg:w="13"/><text x="27.1757%" y="1471.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="26.9257%" y="1445" width="0.0169%" height="15" fill="rgb(211,21,50)" fg:x="20736" fg:w="13"/><text x="27.1757%" y="1455.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="26.9283%" y="1429" width="0.0143%" height="15" fill="rgb(239,119,2)" fg:x="20738" fg:w="11"/><text x="27.1783%" y="1439.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="26.9283%" y="1413" width="0.0143%" height="15" fill="rgb(250,2,39)" fg:x="20738" fg:w="11"/><text x="27.1783%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="26.9309%" y="1397" width="0.0117%" height="15" fill="rgb(244,46,53)" fg:x="20740" fg:w="9"/><text x="27.1809%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="26.9309%" y="1381" width="0.0117%" height="15" fill="rgb(209,21,19)" fg:x="20740" fg:w="9"/><text x="27.1809%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="26.9309%" y="1365" width="0.0117%" height="15" fill="rgb(236,145,4)" fg:x="20740" fg:w="9"/><text x="27.1809%" y="1375.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="26.9309%" y="1349" width="0.0117%" height="15" fill="rgb(220,133,36)" fg:x="20740" fg:w="9"/><text x="27.1809%" y="1359.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (70 samples, 0.09%)</title><rect x="26.8543%" y="1493" width="0.0909%" height="15" fill="rgb(244,18,3)" fg:x="20681" fg:w="70"/><text x="27.1043%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (84 samples, 0.11%)</title><rect x="26.8504%" y="1525" width="0.1091%" height="15" fill="rgb(232,171,48)" fg:x="20678" fg:w="84"/><text x="27.1004%" y="1535.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (84 samples, 0.11%)</title><rect x="26.8504%" y="1509" width="0.1091%" height="15" fill="rgb(223,223,53)" fg:x="20678" fg:w="84"/><text x="27.1004%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="26.9490%" y="1493" width="0.0104%" height="15" fill="rgb(246,92,13)" fg:x="20754" fg:w="8"/><text x="27.1990%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (89 samples, 0.12%)</title><rect x="26.8504%" y="1541" width="0.1156%" height="15" fill="rgb(229,171,10)" fg:x="20678" fg:w="89"/><text x="27.1004%" y="1551.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (10 samples, 0.01%)</title><rect x="26.9737%" y="1541" width="0.0130%" height="15" fill="rgb(213,131,26)" fg:x="20773" fg:w="10"/><text x="27.2237%" y="1551.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="26.9737%" y="1525" width="0.0130%" height="15" fill="rgb(242,87,54)" fg:x="20773" fg:w="10"/><text x="27.2237%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="26.9750%" y="1509" width="0.0117%" height="15" fill="rgb(237,21,35)" fg:x="20774" fg:w="9"/><text x="27.2250%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="26.9750%" y="1493" width="0.0117%" height="15" fill="rgb(253,13,47)" fg:x="20774" fg:w="9"/><text x="27.2250%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="26.9750%" y="1477" width="0.0117%" height="15" fill="rgb(215,122,49)" fg:x="20774" fg:w="9"/><text x="27.2250%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="26.9750%" y="1461" width="0.0117%" height="15" fill="rgb(209,179,30)" fg:x="20774" fg:w="9"/><text x="27.2250%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="26.9750%" y="1445" width="0.0117%" height="15" fill="rgb(235,100,24)" fg:x="20774" fg:w="9"/><text x="27.2250%" y="1455.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="26.9750%" y="1429" width="0.0117%" height="15" fill="rgb(209,67,24)" fg:x="20774" fg:w="9"/><text x="27.2250%" y="1439.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (117 samples, 0.15%)</title><rect x="26.8439%" y="1557" width="0.1519%" height="15" fill="rgb(206,74,32)" fg:x="20673" fg:w="117"/><text x="27.0939%" y="1567.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (126 samples, 0.16%)</title><rect x="26.8439%" y="1573" width="0.1636%" height="15" fill="rgb(212,45,25)" fg:x="20673" fg:w="126"/><text x="27.0939%" y="1583.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (9 samples, 0.01%)</title><rect x="26.9958%" y="1557" width="0.0117%" height="15" fill="rgb(239,26,3)" fg:x="20790" fg:w="9"/><text x="27.2458%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.01%)</title><rect x="27.0166%" y="1557" width="0.0143%" height="15" fill="rgb(218,36,15)" fg:x="20806" fg:w="11"/><text x="27.2666%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="27.0166%" y="1541" width="0.0143%" height="15" fill="rgb(206,108,24)" fg:x="20806" fg:w="11"/><text x="27.2666%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="27.0166%" y="1525" width="0.0143%" height="15" fill="rgb(234,204,42)" fg:x="20806" fg:w="11"/><text x="27.2666%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (158 samples, 0.21%)</title><rect x="26.8335%" y="1605" width="0.2052%" height="15" fill="rgb(229,2,11)" fg:x="20665" fg:w="158"/><text x="27.0835%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (158 samples, 0.21%)</title><rect x="26.8335%" y="1589" width="0.2052%" height="15" fill="rgb(221,20,48)" fg:x="20665" fg:w="158"/><text x="27.0835%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="27.0166%" y="1573" width="0.0221%" height="15" fill="rgb(244,164,10)" fg:x="20806" fg:w="17"/><text x="27.2666%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.01%)</title><rect x="27.0438%" y="1525" width="0.0130%" height="15" fill="rgb(243,229,2)" fg:x="20827" fg:w="10"/><text x="27.2938%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.01%)</title><rect x="27.0438%" y="1509" width="0.0130%" height="15" fill="rgb(232,131,37)" fg:x="20827" fg:w="10"/><text x="27.2938%" y="1519.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10 samples, 0.01%)</title><rect x="27.0438%" y="1493" width="0.0130%" height="15" fill="rgb(217,156,11)" fg:x="20827" fg:w="10"/><text x="27.2938%" y="1503.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (10 samples, 0.01%)</title><rect x="27.0438%" y="1477" width="0.0130%" height="15" fill="rgb(239,99,48)" fg:x="20827" fg:w="10"/><text x="27.2938%" y="1487.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="27.0438%" y="1461" width="0.0130%" height="15" fill="rgb(231,209,9)" fg:x="20827" fg:w="10"/><text x="27.2938%" y="1471.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (11 samples, 0.01%)</title><rect x="27.0438%" y="1541" width="0.0143%" height="15" fill="rgb(254,97,27)" fg:x="20827" fg:w="11"/><text x="27.2938%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (177 samples, 0.23%)</title><rect x="26.8335%" y="1621" width="0.2298%" height="15" fill="rgb(223,151,38)" fg:x="20665" fg:w="177"/><text x="27.0835%" y="1631.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (19 samples, 0.02%)</title><rect x="27.0386%" y="1605" width="0.0247%" height="15" fill="rgb(219,206,35)" fg:x="20823" fg:w="19"/><text x="27.2886%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="27.0386%" y="1589" width="0.0247%" height="15" fill="rgb(216,130,31)" fg:x="20823" fg:w="19"/><text x="27.2886%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="27.0386%" y="1573" width="0.0247%" height="15" fill="rgb(251,97,34)" fg:x="20823" fg:w="19"/><text x="27.2886%" y="1583.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="27.0386%" y="1557" width="0.0247%" height="15" fill="rgb(246,159,47)" fg:x="20823" fg:w="19"/><text x="27.2886%" y="1567.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (8 samples, 0.01%)</title><rect x="27.0659%" y="1621" width="0.0104%" height="15" fill="rgb(232,87,10)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1631.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="27.0659%" y="1605" width="0.0104%" height="15" fill="rgb(249,1,37)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1615.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="27.0659%" y="1589" width="0.0104%" height="15" fill="rgb(239,135,14)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1599.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.01%)</title><rect x="27.0659%" y="1573" width="0.0104%" height="15" fill="rgb(253,116,46)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="27.0659%" y="1557" width="0.0104%" height="15" fill="rgb(222,217,37)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="27.0659%" y="1541" width="0.0104%" height="15" fill="rgb(252,96,8)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="27.0659%" y="1525" width="0.0104%" height="15" fill="rgb(254,103,41)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1535.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="27.0659%" y="1509" width="0.0104%" height="15" fill="rgb(218,213,19)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1519.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="27.0659%" y="1493" width="0.0104%" height="15" fill="rgb(253,95,21)" fg:x="20844" fg:w="8"/><text x="27.3159%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1925" width="5.6654%" height="15" fill="rgb(229,26,28)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1935.50">aptos_v..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1909" width="5.6654%" height="15" fill="rgb(230,129,16)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1919.50">move_vm..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1893" width="5.6654%" height="15" fill="rgb(236,126,17)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1903.50">move_vm..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1877" width="5.6654%" height="15" fill="rgb(209,33,33)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1887.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1861" width="5.6654%" height="15" fill="rgb(227,85,29)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1871.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1845" width="5.6654%" height="15" fill="rgb(241,53,46)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1855.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1829" width="5.6654%" height="15" fill="rgb(228,167,53)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1839.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (4,363 samples, 5.67%)</title><rect x="21.4239%" y="1813" width="5.6654%" height="15" fill="rgb(238,195,45)" fg:x="16499" fg:w="4363"/><text x="21.6739%" y="1823.50">move_vm..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (2,028 samples, 2.63%)</title><rect x="24.4559%" y="1797" width="2.6334%" height="15" fill="rgb(252,124,45)" fg:x="18834" fg:w="2028"/><text x="24.7059%" y="1807.50">mo..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (2,028 samples, 2.63%)</title><rect x="24.4559%" y="1781" width="2.6334%" height="15" fill="rgb(251,38,35)" fg:x="18834" fg:w="2028"/><text x="24.7059%" y="1791.50">mo..</text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (2,028 samples, 2.63%)</title><rect x="24.4559%" y="1765" width="2.6334%" height="15" fill="rgb(227,33,2)" fg:x="18834" fg:w="2028"/><text x="24.7059%" y="1775.50">&lt;m..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (197 samples, 0.26%)</title><rect x="26.8335%" y="1749" width="0.2558%" height="15" fill="rgb(223,157,46)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1759.50"></text></g><g><title>bcs::de::from_bytes_seed (197 samples, 0.26%)</title><rect x="26.8335%" y="1733" width="0.2558%" height="15" fill="rgb(222,78,41)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (197 samples, 0.26%)</title><rect x="26.8335%" y="1717" width="0.2558%" height="15" fill="rgb(248,176,11)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (197 samples, 0.26%)</title><rect x="26.8335%" y="1701" width="0.2558%" height="15" fill="rgb(241,221,18)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (197 samples, 0.26%)</title><rect x="26.8335%" y="1685" width="0.2558%" height="15" fill="rgb(218,85,22)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (197 samples, 0.26%)</title><rect x="26.8335%" y="1669" width="0.2558%" height="15" fill="rgb(222,223,7)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1679.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (197 samples, 0.26%)</title><rect x="26.8335%" y="1653" width="0.2558%" height="15" fill="rgb(254,59,39)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (197 samples, 0.26%)</title><rect x="26.8335%" y="1637" width="0.2558%" height="15" fill="rgb(247,100,27)" fg:x="20665" fg:w="197"/><text x="27.0835%" y="1647.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (10 samples, 0.01%)</title><rect x="27.0763%" y="1621" width="0.0130%" height="15" fill="rgb(237,207,10)" fg:x="20852" fg:w="10"/><text x="27.3263%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (10 samples, 0.01%)</title><rect x="27.0763%" y="1605" width="0.0130%" height="15" fill="rgb(220,121,28)" fg:x="20852" fg:w="10"/><text x="27.3263%" y="1615.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.01%)</title><rect x="27.0763%" y="1589" width="0.0130%" height="15" fill="rgb(213,223,20)" fg:x="20852" fg:w="10"/><text x="27.3263%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.04%)</title><rect x="27.1321%" y="1477" width="0.0390%" height="15" fill="rgb(205,121,27)" fg:x="20895" fg:w="30"/><text x="27.3821%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (29 samples, 0.04%)</title><rect x="27.1334%" y="1461" width="0.0377%" height="15" fill="rgb(253,24,53)" fg:x="20896" fg:w="29"/><text x="27.3834%" y="1471.50"></text></g><g><title>alloc::alloc::Global::grow_impl (29 samples, 0.04%)</title><rect x="27.1334%" y="1445" width="0.0377%" height="15" fill="rgb(224,224,47)" fg:x="20896" fg:w="29"/><text x="27.3834%" y="1455.50"></text></g><g><title>alloc::alloc::realloc (29 samples, 0.04%)</title><rect x="27.1334%" y="1429" width="0.0377%" height="15" fill="rgb(250,125,36)" fg:x="20896" fg:w="29"/><text x="27.3834%" y="1439.50"></text></g><g><title>realloc (28 samples, 0.04%)</title><rect x="27.1347%" y="1413" width="0.0364%" height="15" fill="rgb(240,144,38)" fg:x="20897" fg:w="28"/><text x="27.3847%" y="1423.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="27.1386%" y="1397" width="0.0325%" height="15" fill="rgb(250,15,50)" fg:x="20900" fg:w="25"/><text x="27.3886%" y="1407.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="27.1438%" y="1381" width="0.0273%" height="15" fill="rgb(210,24,26)" fg:x="20904" fg:w="21"/><text x="27.3938%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.04%)</title><rect x="27.1295%" y="1541" width="0.0429%" height="15" fill="rgb(234,53,53)" fg:x="20893" fg:w="33"/><text x="27.3795%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.04%)</title><rect x="27.1295%" y="1525" width="0.0429%" height="15" fill="rgb(208,108,28)" fg:x="20893" fg:w="33"/><text x="27.3795%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.04%)</title><rect x="27.1295%" y="1509" width="0.0429%" height="15" fill="rgb(227,143,7)" fg:x="20893" fg:w="33"/><text x="27.3795%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.04%)</title><rect x="27.1308%" y="1493" width="0.0416%" height="15" fill="rgb(238,189,38)" fg:x="20894" fg:w="32"/><text x="27.3808%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (34 samples, 0.04%)</title><rect x="27.1295%" y="1621" width="0.0441%" height="15" fill="rgb(222,69,15)" fg:x="20893" fg:w="34"/><text x="27.3795%" y="1631.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.04%)</title><rect x="27.1295%" y="1605" width="0.0441%" height="15" fill="rgb(213,169,7)" fg:x="20893" fg:w="34"/><text x="27.3795%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.04%)</title><rect x="27.1295%" y="1589" width="0.0441%" height="15" fill="rgb(251,219,4)" fg:x="20893" fg:w="34"/><text x="27.3795%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.04%)</title><rect x="27.1295%" y="1573" width="0.0441%" height="15" fill="rgb(241,55,40)" fg:x="20893" fg:w="34"/><text x="27.3795%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.04%)</title><rect x="27.1295%" y="1557" width="0.0441%" height="15" fill="rgb(243,57,30)" fg:x="20893" fg:w="34"/><text x="27.3795%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 0.05%)</title><rect x="27.1841%" y="1461" width="0.0454%" height="15" fill="rgb(234,50,30)" fg:x="20935" fg:w="35"/><text x="27.4341%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.05%)</title><rect x="27.1841%" y="1445" width="0.0454%" height="15" fill="rgb(239,23,42)" fg:x="20935" fg:w="35"/><text x="27.4341%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.04%)</title><rect x="27.1919%" y="1429" width="0.0377%" height="15" fill="rgb(217,38,19)" fg:x="20941" fg:w="29"/><text x="27.4419%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.04%)</title><rect x="27.1932%" y="1413" width="0.0364%" height="15" fill="rgb(215,179,16)" fg:x="20942" fg:w="28"/><text x="27.4432%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.04%)</title><rect x="27.1932%" y="1397" width="0.0364%" height="15" fill="rgb(254,21,37)" fg:x="20942" fg:w="28"/><text x="27.4432%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.04%)</title><rect x="27.1932%" y="1381" width="0.0364%" height="15" fill="rgb(219,207,48)" fg:x="20942" fg:w="28"/><text x="27.4432%" y="1391.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.04%)</title><rect x="27.1932%" y="1365" width="0.0364%" height="15" fill="rgb(227,225,41)" fg:x="20942" fg:w="28"/><text x="27.4432%" y="1375.50"></text></g><g><title>alloc::alloc::realloc (27 samples, 0.04%)</title><rect x="27.1945%" y="1349" width="0.0351%" height="15" fill="rgb(223,130,1)" fg:x="20943" fg:w="27"/><text x="27.4445%" y="1359.50"></text></g><g><title>realloc (26 samples, 0.03%)</title><rect x="27.1958%" y="1333" width="0.0338%" height="15" fill="rgb(249,54,42)" fg:x="20944" fg:w="26"/><text x="27.4458%" y="1343.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="27.1997%" y="1317" width="0.0299%" height="15" fill="rgb(248,69,25)" fg:x="20947" fg:w="23"/><text x="27.4497%" y="1327.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="27.2049%" y="1301" width="0.0247%" height="15" fill="rgb(234,21,32)" fg:x="20951" fg:w="19"/><text x="27.4549%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (54 samples, 0.07%)</title><rect x="27.1737%" y="1573" width="0.0701%" height="15" fill="rgb(252,136,6)" fg:x="20927" fg:w="54"/><text x="27.4237%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (53 samples, 0.07%)</title><rect x="27.1750%" y="1557" width="0.0688%" height="15" fill="rgb(245,87,12)" fg:x="20928" fg:w="53"/><text x="27.4250%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (53 samples, 0.07%)</title><rect x="27.1750%" y="1541" width="0.0688%" height="15" fill="rgb(208,12,15)" fg:x="20928" fg:w="53"/><text x="27.4250%" y="1551.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (53 samples, 0.07%)</title><rect x="27.1750%" y="1525" width="0.0688%" height="15" fill="rgb(250,98,2)" fg:x="20928" fg:w="53"/><text x="27.4250%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (53 samples, 0.07%)</title><rect x="27.1750%" y="1509" width="0.0688%" height="15" fill="rgb(205,213,15)" fg:x="20928" fg:w="53"/><text x="27.4250%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 0.07%)</title><rect x="27.1750%" y="1493" width="0.0688%" height="15" fill="rgb(248,192,44)" fg:x="20928" fg:w="53"/><text x="27.4250%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (53 samples, 0.07%)</title><rect x="27.1750%" y="1477" width="0.0688%" height="15" fill="rgb(221,89,17)" fg:x="20928" fg:w="53"/><text x="27.4250%" y="1487.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="27.2295%" y="1461" width="0.0143%" height="15" fill="rgb(209,55,3)" fg:x="20970" fg:w="11"/><text x="27.4795%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (98 samples, 0.13%)</title><rect x="27.1217%" y="1653" width="0.1273%" height="15" fill="rgb(247,23,45)" fg:x="20887" fg:w="98"/><text x="27.3717%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (98 samples, 0.13%)</title><rect x="27.1217%" y="1637" width="0.1273%" height="15" fill="rgb(235,152,23)" fg:x="20887" fg:w="98"/><text x="27.3717%" y="1647.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (58 samples, 0.08%)</title><rect x="27.1737%" y="1621" width="0.0753%" height="15" fill="rgb(244,63,13)" fg:x="20927" fg:w="58"/><text x="27.4237%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (58 samples, 0.08%)</title><rect x="27.1737%" y="1605" width="0.0753%" height="15" fill="rgb(227,30,37)" fg:x="20927" fg:w="58"/><text x="27.4237%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (58 samples, 0.08%)</title><rect x="27.1737%" y="1589" width="0.0753%" height="15" fill="rgb(224,49,42)" fg:x="20927" fg:w="58"/><text x="27.4237%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (103 samples, 0.13%)</title><rect x="27.1192%" y="1669" width="0.1337%" height="15" fill="rgb(218,129,5)" fg:x="20885" fg:w="103"/><text x="27.3692%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::success_transaction_cleanup (4,504 samples, 5.85%)</title><rect x="21.4239%" y="1941" width="5.8484%" height="15" fill="rgb(240,199,54)" fg:x="16499" fg:w="4504"/><text x="21.6739%" y="1951.50">aptos_v..</text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::finish (141 samples, 0.18%)</title><rect x="27.0893%" y="1925" width="0.1831%" height="15" fill="rgb(234,31,13)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1935.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (141 samples, 0.18%)</title><rect x="27.0893%" y="1909" width="0.1831%" height="15" fill="rgb(219,73,54)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1919.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (141 samples, 0.18%)</title><rect x="27.0893%" y="1893" width="0.1831%" height="15" fill="rgb(251,162,10)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1903.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1877" width="0.1831%" height="15" fill="rgb(240,138,47)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1887.50"></text></g><g><title>bcs::ser::to_bytes (141 samples, 0.18%)</title><rect x="27.0893%" y="1861" width="0.1831%" height="15" fill="rgb(216,138,26)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1871.50"></text></g><g><title>bcs::ser::serialize_into (141 samples, 0.18%)</title><rect x="27.0893%" y="1845" width="0.1831%" height="15" fill="rgb(243,17,35)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1855.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1829" width="0.1831%" height="15" fill="rgb(241,60,18)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1839.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1813" width="0.1831%" height="15" fill="rgb(234,2,44)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1823.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (141 samples, 0.18%)</title><rect x="27.0893%" y="1797" width="0.1831%" height="15" fill="rgb(225,225,33)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1807.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1781" width="0.1831%" height="15" fill="rgb(234,50,31)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1765" width="0.1831%" height="15" fill="rgb(249,6,25)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (141 samples, 0.18%)</title><rect x="27.0893%" y="1749" width="0.1831%" height="15" fill="rgb(241,5,17)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1733" width="0.1831%" height="15" fill="rgb(207,116,10)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1717" width="0.1831%" height="15" fill="rgb(222,128,18)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1727.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (141 samples, 0.18%)</title><rect x="27.0893%" y="1701" width="0.1831%" height="15" fill="rgb(229,109,25)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (141 samples, 0.18%)</title><rect x="27.0893%" y="1685" width="0.1831%" height="15" fill="rgb(222,102,25)" fg:x="20862" fg:w="141"/><text x="27.3393%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (12 samples, 0.02%)</title><rect x="27.2568%" y="1669" width="0.0156%" height="15" fill="rgb(239,211,5)" fg:x="20991" fg:w="12"/><text x="27.5068%" y="1679.50"></text></g><g><title>serde::ser::Serializer::collect_seq (12 samples, 0.02%)</title><rect x="27.2568%" y="1653" width="0.0156%" height="15" fill="rgb(223,136,26)" fg:x="20991" fg:w="12"/><text x="27.5068%" y="1663.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (117 samples, 0.15%)</title><rect x="27.2802%" y="1509" width="0.1519%" height="15" fill="rgb(227,30,15)" fg:x="21009" fg:w="117"/><text x="27.5302%" y="1519.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (116 samples, 0.15%)</title><rect x="27.2815%" y="1493" width="0.1506%" height="15" fill="rgb(247,76,4)" fg:x="21010" fg:w="116"/><text x="27.5315%" y="1503.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (116 samples, 0.15%)</title><rect x="27.2815%" y="1477" width="0.1506%" height="15" fill="rgb(245,38,48)" fg:x="21010" fg:w="116"/><text x="27.5315%" y="1487.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (116 samples, 0.15%)</title><rect x="27.2815%" y="1461" width="0.1506%" height="15" fill="rgb(210,220,14)" fg:x="21010" fg:w="116"/><text x="27.5315%" y="1471.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.03%)</title><rect x="27.4048%" y="1445" width="0.0273%" height="15" fill="rgb(224,60,51)" fg:x="21105" fg:w="21"/><text x="27.6548%" y="1455.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (124 samples, 0.16%)</title><rect x="27.2737%" y="1557" width="0.1610%" height="15" fill="rgb(212,133,49)" fg:x="21004" fg:w="124"/><text x="27.5237%" y="1567.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (122 samples, 0.16%)</title><rect x="27.2763%" y="1541" width="0.1584%" height="15" fill="rgb(231,39,22)" fg:x="21006" fg:w="122"/><text x="27.5263%" y="1551.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (122 samples, 0.16%)</title><rect x="27.2763%" y="1525" width="0.1584%" height="15" fill="rgb(236,173,22)" fg:x="21006" fg:w="122"/><text x="27.5263%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (126 samples, 0.16%)</title><rect x="27.2724%" y="1589" width="0.1636%" height="15" fill="rgb(210,70,0)" fg:x="21003" fg:w="126"/><text x="27.5224%" y="1599.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (126 samples, 0.16%)</title><rect x="27.2724%" y="1573" width="0.1636%" height="15" fill="rgb(215,170,11)" fg:x="21003" fg:w="126"/><text x="27.5224%" y="1583.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (133 samples, 0.17%)</title><rect x="27.2724%" y="1941" width="0.1727%" height="15" fill="rgb(220,154,28)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1951.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (133 samples, 0.17%)</title><rect x="27.2724%" y="1925" width="0.1727%" height="15" fill="rgb(240,160,41)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1935.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (133 samples, 0.17%)</title><rect x="27.2724%" y="1909" width="0.1727%" height="15" fill="rgb(243,215,41)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1919.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (133 samples, 0.17%)</title><rect x="27.2724%" y="1893" width="0.1727%" height="15" fill="rgb(214,208,31)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1903.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (133 samples, 0.17%)</title><rect x="27.2724%" y="1877" width="0.1727%" height="15" fill="rgb(247,57,22)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1887.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (133 samples, 0.17%)</title><rect x="27.2724%" y="1861" width="0.1727%" height="15" fill="rgb(228,73,52)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1871.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (133 samples, 0.17%)</title><rect x="27.2724%" y="1845" width="0.1727%" height="15" fill="rgb(252,60,9)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1855.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (133 samples, 0.17%)</title><rect x="27.2724%" y="1829" width="0.1727%" height="15" fill="rgb(233,9,51)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (133 samples, 0.17%)</title><rect x="27.2724%" y="1813" width="0.1727%" height="15" fill="rgb(223,67,14)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1823.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (133 samples, 0.17%)</title><rect x="27.2724%" y="1797" width="0.1727%" height="15" fill="rgb(222,86,2)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1807.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (133 samples, 0.17%)</title><rect x="27.2724%" y="1781" width="0.1727%" height="15" fill="rgb(243,58,54)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1791.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (133 samples, 0.17%)</title><rect x="27.2724%" y="1765" width="0.1727%" height="15" fill="rgb(210,200,39)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1775.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (133 samples, 0.17%)</title><rect x="27.2724%" y="1749" width="0.1727%" height="15" fill="rgb(238,135,9)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (133 samples, 0.17%)</title><rect x="27.2724%" y="1733" width="0.1727%" height="15" fill="rgb(232,179,7)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1743.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (133 samples, 0.17%)</title><rect x="27.2724%" y="1717" width="0.1727%" height="15" fill="rgb(245,65,41)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1727.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (133 samples, 0.17%)</title><rect x="27.2724%" y="1701" width="0.1727%" height="15" fill="rgb(227,43,8)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1711.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (133 samples, 0.17%)</title><rect x="27.2724%" y="1685" width="0.1727%" height="15" fill="rgb(235,91,14)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1695.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (133 samples, 0.17%)</title><rect x="27.2724%" y="1669" width="0.1727%" height="15" fill="rgb(235,219,31)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (133 samples, 0.17%)</title><rect x="27.2724%" y="1653" width="0.1727%" height="15" fill="rgb(227,121,25)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (133 samples, 0.17%)</title><rect x="27.2724%" y="1637" width="0.1727%" height="15" fill="rgb(254,129,24)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1647.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (133 samples, 0.17%)</title><rect x="27.2724%" y="1621" width="0.1727%" height="15" fill="rgb(226,144,49)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (133 samples, 0.17%)</title><rect x="27.2724%" y="1605" width="0.1727%" height="15" fill="rgb(214,187,32)" fg:x="21003" fg:w="133"/><text x="27.5224%" y="1615.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (7,798 samples, 10.13%)</title><rect x="17.3220%" y="2005" width="10.1257%" height="15" fill="rgb(243,129,46)" fg:x="13340" fg:w="7798"/><text x="17.5720%" y="2015.50">&lt;aptos_vm::bloc..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (7,798 samples, 10.13%)</title><rect x="17.3220%" y="1989" width="10.1257%" height="15" fill="rgb(221,185,35)" fg:x="13340" fg:w="7798"/><text x="17.5720%" y="1999.50">&lt;aptos_vm::apto..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (7,798 samples, 10.13%)</title><rect x="17.3220%" y="1973" width="10.1257%" height="15" fill="rgb(205,0,32)" fg:x="13340" fg:w="7798"/><text x="17.5720%" y="1983.50">aptos_vm::aptos..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (4,639 samples, 6.02%)</title><rect x="21.4239%" y="1957" width="6.0237%" height="15" fill="rgb(229,179,12)" fg:x="16499" fg:w="4639"/><text x="21.6739%" y="1967.50">aptos_vm..</text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (10 samples, 0.01%)</title><rect x="27.4581%" y="1717" width="0.0130%" height="15" fill="rgb(252,107,19)" fg:x="21146" fg:w="10"/><text x="27.7081%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (10 samples, 0.01%)</title><rect x="27.4581%" y="1701" width="0.0130%" height="15" fill="rgb(220,95,27)" fg:x="21146" fg:w="10"/><text x="27.7081%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (10 samples, 0.01%)</title><rect x="27.4581%" y="1685" width="0.0130%" height="15" fill="rgb(240,113,40)" fg:x="21146" fg:w="10"/><text x="27.7081%" y="1695.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (9 samples, 0.01%)</title><rect x="27.4594%" y="1669" width="0.0117%" height="15" fill="rgb(208,4,43)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="27.4594%" y="1653" width="0.0117%" height="15" fill="rgb(247,189,30)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1663.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="27.4594%" y="1637" width="0.0117%" height="15" fill="rgb(231,157,17)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="27.4594%" y="1621" width="0.0117%" height="15" fill="rgb(224,139,6)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1631.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (9 samples, 0.01%)</title><rect x="27.4594%" y="1605" width="0.0117%" height="15" fill="rgb(223,83,16)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1615.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (9 samples, 0.01%)</title><rect x="27.4594%" y="1589" width="0.0117%" height="15" fill="rgb(232,211,20)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1599.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (9 samples, 0.01%)</title><rect x="27.4594%" y="1573" width="0.0117%" height="15" fill="rgb(225,203,35)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (9 samples, 0.01%)</title><rect x="27.4594%" y="1557" width="0.0117%" height="15" fill="rgb(215,211,44)" fg:x="21147" fg:w="9"/><text x="27.7094%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (17 samples, 0.02%)</title><rect x="27.4581%" y="1797" width="0.0221%" height="15" fill="rgb(248,213,26)" fg:x="21146" fg:w="17"/><text x="27.7081%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (17 samples, 0.02%)</title><rect x="27.4581%" y="1781" width="0.0221%" height="15" fill="rgb(214,23,52)" fg:x="21146" fg:w="17"/><text x="27.7081%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (17 samples, 0.02%)</title><rect x="27.4581%" y="1765" width="0.0221%" height="15" fill="rgb(225,173,50)" fg:x="21146" fg:w="17"/><text x="27.7081%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (17 samples, 0.02%)</title><rect x="27.4581%" y="1749" width="0.0221%" height="15" fill="rgb(206,150,22)" fg:x="21146" fg:w="17"/><text x="27.7081%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (17 samples, 0.02%)</title><rect x="27.4581%" y="1733" width="0.0221%" height="15" fill="rgb(239,64,23)" fg:x="21146" fg:w="17"/><text x="27.7081%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (26 samples, 0.03%)</title><rect x="27.4581%" y="1829" width="0.0338%" height="15" fill="rgb(242,50,38)" fg:x="21146" fg:w="26"/><text x="27.7081%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (26 samples, 0.03%)</title><rect x="27.4581%" y="1813" width="0.0338%" height="15" fill="rgb(217,91,15)" fg:x="21146" fg:w="26"/><text x="27.7081%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (9 samples, 0.01%)</title><rect x="27.4801%" y="1797" width="0.0117%" height="15" fill="rgb(230,172,6)" fg:x="21163" fg:w="9"/><text x="27.7301%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (9 samples, 0.01%)</title><rect x="27.4801%" y="1781" width="0.0117%" height="15" fill="rgb(221,98,26)" fg:x="21163" fg:w="9"/><text x="27.7301%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (9 samples, 0.01%)</title><rect x="27.4801%" y="1765" width="0.0117%" height="15" fill="rgb(227,210,45)" fg:x="21163" fg:w="9"/><text x="27.7301%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (9 samples, 0.01%)</title><rect x="27.4801%" y="1749" width="0.0117%" height="15" fill="rgb(206,8,30)" fg:x="21163" fg:w="9"/><text x="27.7301%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (9 samples, 0.01%)</title><rect x="27.4801%" y="1733" width="0.0117%" height="15" fill="rgb(241,219,17)" fg:x="21163" fg:w="9"/><text x="27.7301%" y="1743.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (29 samples, 0.04%)</title><rect x="27.4581%" y="1925" width="0.0377%" height="15" fill="rgb(247,121,29)" fg:x="21146" fg:w="29"/><text x="27.7081%" y="1935.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (29 samples, 0.04%)</title><rect x="27.4581%" y="1909" width="0.0377%" height="15" fill="rgb(219,169,49)" fg:x="21146" fg:w="29"/><text x="27.7081%" y="1919.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (29 samples, 0.04%)</title><rect x="27.4581%" y="1893" width="0.0377%" height="15" fill="rgb(253,49,49)" fg:x="21146" fg:w="29"/><text x="27.7081%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (29 samples, 0.04%)</title><rect x="27.4581%" y="1877" width="0.0377%" height="15" fill="rgb(217,178,3)" fg:x="21146" fg:w="29"/><text x="27.7081%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (29 samples, 0.04%)</title><rect x="27.4581%" y="1861" width="0.0377%" height="15" fill="rgb(234,73,37)" fg:x="21146" fg:w="29"/><text x="27.7081%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (29 samples, 0.04%)</title><rect x="27.4581%" y="1845" width="0.0377%" height="15" fill="rgb(250,98,22)" fg:x="21146" fg:w="29"/><text x="27.7081%" y="1855.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (33 samples, 0.04%)</title><rect x="27.4581%" y="1941" width="0.0429%" height="15" fill="rgb(220,108,37)" fg:x="21146" fg:w="33"/><text x="27.7081%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="27.5035%" y="1813" width="0.0143%" height="15" fill="rgb(225,168,10)" fg:x="21181" fg:w="11"/><text x="27.7535%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="27.5035%" y="1797" width="0.0143%" height="15" fill="rgb(247,215,21)" fg:x="21181" fg:w="11"/><text x="27.7535%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.01%)</title><rect x="27.5035%" y="1781" width="0.0143%" height="15" fill="rgb(253,189,31)" fg:x="21181" fg:w="11"/><text x="27.7535%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (8 samples, 0.01%)</title><rect x="27.5074%" y="1765" width="0.0104%" height="15" fill="rgb(241,54,22)" fg:x="21184" fg:w="8"/><text x="27.7574%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="27.5074%" y="1749" width="0.0104%" height="15" fill="rgb(211,87,4)" fg:x="21184" fg:w="8"/><text x="27.7574%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="27.5074%" y="1733" width="0.0104%" height="15" fill="rgb(245,112,24)" fg:x="21184" fg:w="8"/><text x="27.7574%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (12 samples, 0.02%)</title><rect x="27.5035%" y="1829" width="0.0156%" height="15" fill="rgb(235,190,41)" fg:x="21181" fg:w="12"/><text x="27.7535%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="27.5191%" y="1813" width="0.0117%" height="15" fill="rgb(214,89,8)" fg:x="21193" fg:w="9"/><text x="27.7691%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="27.5191%" y="1797" width="0.0117%" height="15" fill="rgb(249,155,35)" fg:x="21193" fg:w="9"/><text x="27.7691%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.01%)</title><rect x="27.5191%" y="1781" width="0.0117%" height="15" fill="rgb(249,88,26)" fg:x="21193" fg:w="9"/><text x="27.7691%" y="1791.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="27.5308%" y="1749" width="0.0130%" height="15" fill="rgb(232,56,8)" fg:x="21202" fg:w="10"/><text x="27.7808%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (8 samples, 0.01%)</title><rect x="27.5334%" y="1733" width="0.0104%" height="15" fill="rgb(240,95,3)" fg:x="21204" fg:w="8"/><text x="27.7834%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (8 samples, 0.01%)</title><rect x="27.5334%" y="1717" width="0.0104%" height="15" fill="rgb(222,44,28)" fg:x="21204" fg:w="8"/><text x="27.7834%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (8 samples, 0.01%)</title><rect x="27.5334%" y="1701" width="0.0104%" height="15" fill="rgb(234,16,30)" fg:x="21204" fg:w="8"/><text x="27.7834%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (16 samples, 0.02%)</title><rect x="27.5308%" y="1765" width="0.0208%" height="15" fill="rgb(223,26,17)" fg:x="21202" fg:w="16"/><text x="27.7808%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="27.5308%" y="1781" width="0.0234%" height="15" fill="rgb(239,187,47)" fg:x="21202" fg:w="18"/><text x="27.7808%" y="1791.50"></text></g><g><title>core::mem::drop (20 samples, 0.03%)</title><rect x="27.5308%" y="1813" width="0.0260%" height="15" fill="rgb(247,102,50)" fg:x="21202" fg:w="20"/><text x="27.7808%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (20 samples, 0.03%)</title><rect x="27.5308%" y="1797" width="0.0260%" height="15" fill="rgb(231,216,22)" fg:x="21202" fg:w="20"/><text x="27.7808%" y="1807.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (45 samples, 0.06%)</title><rect x="27.5035%" y="1861" width="0.0584%" height="15" fill="rgb(216,201,26)" fg:x="21181" fg:w="45"/><text x="27.7535%" y="1871.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (45 samples, 0.06%)</title><rect x="27.5035%" y="1845" width="0.0584%" height="15" fill="rgb(214,186,23)" fg:x="21181" fg:w="45"/><text x="27.7535%" y="1855.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (33 samples, 0.04%)</title><rect x="27.5191%" y="1829" width="0.0429%" height="15" fill="rgb(235,184,4)" fg:x="21193" fg:w="33"/><text x="27.7691%" y="1839.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (58 samples, 0.08%)</title><rect x="27.5009%" y="1877" width="0.0753%" height="15" fill="rgb(244,46,17)" fg:x="21179" fg:w="58"/><text x="27.7509%" y="1887.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (11 samples, 0.01%)</title><rect x="27.5619%" y="1861" width="0.0143%" height="15" fill="rgb(248,74,46)" fg:x="21226" fg:w="11"/><text x="27.8119%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (11 samples, 0.01%)</title><rect x="27.5619%" y="1845" width="0.0143%" height="15" fill="rgb(243,79,5)" fg:x="21226" fg:w="11"/><text x="27.8119%" y="1855.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (8 samples, 0.01%)</title><rect x="27.5775%" y="1813" width="0.0104%" height="15" fill="rgb(213,148,1)" fg:x="21238" fg:w="8"/><text x="27.8275%" y="1823.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as core::default::Default&gt;::default (9 samples, 0.01%)</title><rect x="27.5879%" y="1813" width="0.0117%" height="15" fill="rgb(221,30,0)" fg:x="21246" fg:w="9"/><text x="27.8379%" y="1823.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (23 samples, 0.03%)</title><rect x="27.5762%" y="1845" width="0.0299%" height="15" fill="rgb(207,85,29)" fg:x="21237" fg:w="23"/><text x="27.8262%" y="1855.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (23 samples, 0.03%)</title><rect x="27.5762%" y="1829" width="0.0299%" height="15" fill="rgb(239,31,46)" fg:x="21237" fg:w="23"/><text x="27.8262%" y="1839.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (39 samples, 0.05%)</title><rect x="27.5762%" y="1877" width="0.0506%" height="15" fill="rgb(219,6,1)" fg:x="21237" fg:w="39"/><text x="27.8262%" y="1887.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (39 samples, 0.05%)</title><rect x="27.5762%" y="1861" width="0.0506%" height="15" fill="rgb(229,90,29)" fg:x="21237" fg:w="39"/><text x="27.8262%" y="1871.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (16 samples, 0.02%)</title><rect x="27.6061%" y="1845" width="0.0208%" height="15" fill="rgb(242,201,42)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1855.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (16 samples, 0.02%)</title><rect x="27.6061%" y="1829" width="0.0208%" height="15" fill="rgb(243,80,54)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.02%)</title><rect x="27.6061%" y="1813" width="0.0208%" height="15" fill="rgb(223,166,15)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (16 samples, 0.02%)</title><rect x="27.6061%" y="1797" width="0.0208%" height="15" fill="rgb(238,78,27)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="27.6061%" y="1781" width="0.0208%" height="15" fill="rgb(235,28,43)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.02%)</title><rect x="27.6061%" y="1765" width="0.0208%" height="15" fill="rgb(240,210,28)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (16 samples, 0.02%)</title><rect x="27.6061%" y="1749" width="0.0208%" height="15" fill="rgb(253,6,46)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (16 samples, 0.02%)</title><rect x="27.6061%" y="1733" width="0.0208%" height="15" fill="rgb(250,159,47)" fg:x="21260" fg:w="16"/><text x="27.8561%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (12 samples, 0.02%)</title><rect x="27.6113%" y="1717" width="0.0156%" height="15" fill="rgb(216,139,2)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (12 samples, 0.02%)</title><rect x="27.6113%" y="1701" width="0.0156%" height="15" fill="rgb(221,124,44)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (12 samples, 0.02%)</title><rect x="27.6113%" y="1685" width="0.0156%" height="15" fill="rgb(205,37,22)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1695.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (12 samples, 0.02%)</title><rect x="27.6113%" y="1669" width="0.0156%" height="15" fill="rgb(250,55,8)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="27.6113%" y="1653" width="0.0156%" height="15" fill="rgb(215,83,48)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="27.6113%" y="1637" width="0.0156%" height="15" fill="rgb(253,2,32)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="27.6113%" y="1621" width="0.0156%" height="15" fill="rgb(236,67,28)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1631.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="27.6113%" y="1605" width="0.0156%" height="15" fill="rgb(252,55,15)" fg:x="21264" fg:w="12"/><text x="27.8613%" y="1615.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="27.6165%" y="1589" width="0.0104%" height="15" fill="rgb(243,173,17)" fg:x="21268" fg:w="8"/><text x="27.8665%" y="1599.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="27.6269%" y="1333" width="0.0182%" height="15" fill="rgb(215,212,13)" fg:x="21276" fg:w="14"/><text x="27.8769%" y="1343.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="27.6269%" y="1317" width="0.0182%" height="15" fill="rgb(253,176,6)" fg:x="21276" fg:w="14"/><text x="27.8769%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (8 samples, 0.01%)</title><rect x="27.6450%" y="1317" width="0.0104%" height="15" fill="rgb(236,105,26)" fg:x="21290" fg:w="8"/><text x="27.8950%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (8 samples, 0.01%)</title><rect x="27.6450%" y="1301" width="0.0104%" height="15" fill="rgb(239,226,32)" fg:x="21290" fg:w="8"/><text x="27.8950%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1573" width="0.0377%" height="15" fill="rgb(236,104,51)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1557" width="0.0377%" height="15" fill="rgb(220,172,33)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1541" width="0.0377%" height="15" fill="rgb(224,182,25)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.04%)</title><rect x="27.6269%" y="1525" width="0.0377%" height="15" fill="rgb(236,184,24)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1509" width="0.0377%" height="15" fill="rgb(241,221,14)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1493" width="0.0377%" height="15" fill="rgb(227,146,5)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1477" width="0.0377%" height="15" fill="rgb(214,15,23)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1461" width="0.0377%" height="15" fill="rgb(233,157,31)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.04%)</title><rect x="27.6269%" y="1445" width="0.0377%" height="15" fill="rgb(211,27,52)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1429" width="0.0377%" height="15" fill="rgb(212,223,15)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1413" width="0.0377%" height="15" fill="rgb(254,211,0)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1397" width="0.0377%" height="15" fill="rgb(205,43,38)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1381" width="0.0377%" height="15" fill="rgb(242,206,46)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.04%)</title><rect x="27.6269%" y="1365" width="0.0377%" height="15" fill="rgb(220,221,12)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (29 samples, 0.04%)</title><rect x="27.6269%" y="1349" width="0.0377%" height="15" fill="rgb(217,156,35)" fg:x="21276" fg:w="29"/><text x="27.8769%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (15 samples, 0.02%)</title><rect x="27.6450%" y="1333" width="0.0195%" height="15" fill="rgb(207,181,49)" fg:x="21290" fg:w="15"/><text x="27.8950%" y="1343.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (164 samples, 0.21%)</title><rect x="27.4568%" y="2005" width="0.2130%" height="15" fill="rgb(235,103,47)" fg:x="21145" fg:w="164"/><text x="27.7068%" y="2015.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (163 samples, 0.21%)</title><rect x="27.4581%" y="1989" width="0.2117%" height="15" fill="rgb(222,63,28)" fg:x="21146" fg:w="163"/><text x="27.7081%" y="1999.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (163 samples, 0.21%)</title><rect x="27.4581%" y="1973" width="0.2117%" height="15" fill="rgb(244,137,21)" fg:x="21146" fg:w="163"/><text x="27.7081%" y="1983.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (163 samples, 0.21%)</title><rect x="27.4581%" y="1957" width="0.2117%" height="15" fill="rgb(228,35,27)" fg:x="21146" fg:w="163"/><text x="27.7081%" y="1967.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (130 samples, 0.17%)</title><rect x="27.5009%" y="1941" width="0.1688%" height="15" fill="rgb(226,191,41)" fg:x="21179" fg:w="130"/><text x="27.7509%" y="1951.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (130 samples, 0.17%)</title><rect x="27.5009%" y="1925" width="0.1688%" height="15" fill="rgb(210,154,3)" fg:x="21179" fg:w="130"/><text x="27.7509%" y="1935.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (130 samples, 0.17%)</title><rect x="27.5009%" y="1909" width="0.1688%" height="15" fill="rgb(216,60,49)" fg:x="21179" fg:w="130"/><text x="27.7509%" y="1919.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (130 samples, 0.17%)</title><rect x="27.5009%" y="1893" width="0.1688%" height="15" fill="rgb(226,17,20)" fg:x="21179" fg:w="130"/><text x="27.7509%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1877" width="0.0429%" height="15" fill="rgb(206,115,35)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1861" width="0.0429%" height="15" fill="rgb(227,88,1)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1845" width="0.0429%" height="15" fill="rgb(230,222,24)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1829" width="0.0429%" height="15" fill="rgb(214,124,32)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1813" width="0.0429%" height="15" fill="rgb(240,41,36)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1823.50"></text></g><g><title>core::mem::drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1797" width="0.0429%" height="15" fill="rgb(221,17,52)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1781" width="0.0429%" height="15" fill="rgb(252,70,16)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1765" width="0.0429%" height="15" fill="rgb(250,177,4)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (33 samples, 0.04%)</title><rect x="27.6269%" y="1749" width="0.0429%" height="15" fill="rgb(240,188,47)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1733" width="0.0429%" height="15" fill="rgb(215,92,12)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1717" width="0.0429%" height="15" fill="rgb(242,110,29)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1701" width="0.0429%" height="15" fill="rgb(208,211,26)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1685" width="0.0429%" height="15" fill="rgb(244,147,6)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1695.50"></text></g><g><title>core::mem::drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1669" width="0.0429%" height="15" fill="rgb(211,130,42)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1653" width="0.0429%" height="15" fill="rgb(220,63,1)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1637" width="0.0429%" height="15" fill="rgb(241,212,30)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (33 samples, 0.04%)</title><rect x="27.6269%" y="1621" width="0.0429%" height="15" fill="rgb(233,153,17)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1631.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (33 samples, 0.04%)</title><rect x="27.6269%" y="1605" width="0.0429%" height="15" fill="rgb(236,3,10)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (33 samples, 0.04%)</title><rect x="27.6269%" y="1589" width="0.0429%" height="15" fill="rgb(232,41,21)" fg:x="21276" fg:w="33"/><text x="27.8769%" y="1599.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (8 samples, 0.01%)</title><rect x="27.6853%" y="1461" width="0.0104%" height="15" fill="rgb(206,63,51)" fg:x="21321" fg:w="8"/><text x="27.9353%" y="1471.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (8 samples, 0.01%)</title><rect x="27.6853%" y="1445" width="0.0104%" height="15" fill="rgb(250,214,3)" fg:x="21321" fg:w="8"/><text x="27.9353%" y="1455.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (8 samples, 0.01%)</title><rect x="27.6853%" y="1429" width="0.0104%" height="15" fill="rgb(254,89,27)" fg:x="21321" fg:w="8"/><text x="27.9353%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (9 samples, 0.01%)</title><rect x="27.6853%" y="1589" width="0.0117%" height="15" fill="rgb(249,41,14)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (9 samples, 0.01%)</title><rect x="27.6853%" y="1573" width="0.0117%" height="15" fill="rgb(221,196,51)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (9 samples, 0.01%)</title><rect x="27.6853%" y="1557" width="0.0117%" height="15" fill="rgb(214,116,26)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1567.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (9 samples, 0.01%)</title><rect x="27.6853%" y="1541" width="0.0117%" height="15" fill="rgb(236,67,7)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="27.6853%" y="1525" width="0.0117%" height="15" fill="rgb(253,179,32)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1535.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="27.6853%" y="1509" width="0.0117%" height="15" fill="rgb(218,33,15)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="27.6853%" y="1493" width="0.0117%" height="15" fill="rgb(217,202,41)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1503.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (9 samples, 0.01%)</title><rect x="27.6853%" y="1477" width="0.0117%" height="15" fill="rgb(234,133,5)" fg:x="21321" fg:w="9"/><text x="27.9353%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (17 samples, 0.02%)</title><rect x="27.6970%" y="1589" width="0.0221%" height="15" fill="rgb(240,47,40)" fg:x="21330" fg:w="17"/><text x="27.9470%" y="1599.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (11 samples, 0.01%)</title><rect x="27.7048%" y="1573" width="0.0143%" height="15" fill="rgb(234,166,26)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="27.7048%" y="1557" width="0.0143%" height="15" fill="rgb(244,125,51)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1567.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="27.7048%" y="1541" width="0.0143%" height="15" fill="rgb(229,171,11)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="27.7048%" y="1525" width="0.0143%" height="15" fill="rgb(224,38,45)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1535.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (11 samples, 0.01%)</title><rect x="27.7048%" y="1509" width="0.0143%" height="15" fill="rgb(237,27,7)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1519.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="27.7048%" y="1493" width="0.0143%" height="15" fill="rgb(216,52,7)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1503.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="27.7048%" y="1477" width="0.0143%" height="15" fill="rgb(243,11,11)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1487.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="27.7048%" y="1461" width="0.0143%" height="15" fill="rgb(253,167,20)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1471.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (11 samples, 0.01%)</title><rect x="27.7048%" y="1445" width="0.0143%" height="15" fill="rgb(215,207,5)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1455.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (11 samples, 0.01%)</title><rect x="27.7048%" y="1429" width="0.0143%" height="15" fill="rgb(252,127,31)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1439.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (11 samples, 0.01%)</title><rect x="27.7048%" y="1413" width="0.0143%" height="15" fill="rgb(209,106,27)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1423.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="27.7048%" y="1397" width="0.0143%" height="15" fill="rgb(214,220,18)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1407.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (11 samples, 0.01%)</title><rect x="27.7048%" y="1381" width="0.0143%" height="15" fill="rgb(237,89,12)" fg:x="21336" fg:w="11"/><text x="27.9548%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (27 samples, 0.04%)</title><rect x="27.6853%" y="1669" width="0.0351%" height="15" fill="rgb(209,167,36)" fg:x="21321" fg:w="27"/><text x="27.9353%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (27 samples, 0.04%)</title><rect x="27.6853%" y="1653" width="0.0351%" height="15" fill="rgb(243,45,22)" fg:x="21321" fg:w="27"/><text x="27.9353%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (27 samples, 0.04%)</title><rect x="27.6853%" y="1637" width="0.0351%" height="15" fill="rgb(239,2,46)" fg:x="21321" fg:w="27"/><text x="27.9353%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (27 samples, 0.04%)</title><rect x="27.6853%" y="1621" width="0.0351%" height="15" fill="rgb(241,101,0)" fg:x="21321" fg:w="27"/><text x="27.9353%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (27 samples, 0.04%)</title><rect x="27.6853%" y="1605" width="0.0351%" height="15" fill="rgb(244,34,31)" fg:x="21321" fg:w="27"/><text x="27.9353%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (28 samples, 0.04%)</title><rect x="27.6853%" y="1701" width="0.0364%" height="15" fill="rgb(248,23,22)" fg:x="21321" fg:w="28"/><text x="27.9353%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (28 samples, 0.04%)</title><rect x="27.6853%" y="1685" width="0.0364%" height="15" fill="rgb(218,27,48)" fg:x="21321" fg:w="28"/><text x="27.9353%" y="1695.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (34 samples, 0.04%)</title><rect x="27.6853%" y="1813" width="0.0441%" height="15" fill="rgb(232,78,1)" fg:x="21321" fg:w="34"/><text x="27.9353%" y="1823.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (34 samples, 0.04%)</title><rect x="27.6853%" y="1797" width="0.0441%" height="15" fill="rgb(233,169,12)" fg:x="21321" fg:w="34"/><text x="27.9353%" y="1807.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (34 samples, 0.04%)</title><rect x="27.6853%" y="1781" width="0.0441%" height="15" fill="rgb(225,222,54)" fg:x="21321" fg:w="34"/><text x="27.9353%" y="1791.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (34 samples, 0.04%)</title><rect x="27.6853%" y="1765" width="0.0441%" height="15" fill="rgb(245,126,29)" fg:x="21321" fg:w="34"/><text x="27.9353%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (34 samples, 0.04%)</title><rect x="27.6853%" y="1749" width="0.0441%" height="15" fill="rgb(241,63,48)" fg:x="21321" fg:w="34"/><text x="27.9353%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (34 samples, 0.04%)</title><rect x="27.6853%" y="1733" width="0.0441%" height="15" fill="rgb(235,126,38)" fg:x="21321" fg:w="34"/><text x="27.9353%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (34 samples, 0.04%)</title><rect x="27.6853%" y="1717" width="0.0441%" height="15" fill="rgb(232,96,49)" fg:x="21321" fg:w="34"/><text x="27.9353%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (9 samples, 0.01%)</title><rect x="27.7294%" y="1701" width="0.0117%" height="15" fill="rgb(211,146,40)" fg:x="21355" fg:w="9"/><text x="27.9794%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.02%)</title><rect x="27.7567%" y="1685" width="0.0195%" height="15" fill="rgb(247,93,44)" fg:x="21376" fg:w="15"/><text x="28.0067%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="27.7606%" y="1669" width="0.0156%" height="15" fill="rgb(251,41,49)" fg:x="21379" fg:w="12"/><text x="28.0106%" y="1679.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.01%)</title><rect x="27.7619%" y="1653" width="0.0143%" height="15" fill="rgb(218,155,12)" fg:x="21380" fg:w="11"/><text x="28.0119%" y="1663.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (53 samples, 0.07%)</title><rect x="27.7294%" y="1733" width="0.0688%" height="15" fill="rgb(221,161,30)" fg:x="21355" fg:w="53"/><text x="27.9794%" y="1743.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (53 samples, 0.07%)</title><rect x="27.7294%" y="1717" width="0.0688%" height="15" fill="rgb(221,179,11)" fg:x="21355" fg:w="53"/><text x="27.9794%" y="1727.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (44 samples, 0.06%)</title><rect x="27.7411%" y="1701" width="0.0571%" height="15" fill="rgb(224,170,48)" fg:x="21364" fg:w="44"/><text x="27.9911%" y="1711.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (9 samples, 0.01%)</title><rect x="27.7866%" y="1685" width="0.0117%" height="15" fill="rgb(223,117,5)" fg:x="21399" fg:w="9"/><text x="28.0366%" y="1695.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (70 samples, 0.09%)</title><rect x="27.7294%" y="1749" width="0.0909%" height="15" fill="rgb(209,52,20)" fg:x="21355" fg:w="70"/><text x="27.9794%" y="1759.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (17 samples, 0.02%)</title><rect x="27.7983%" y="1733" width="0.0221%" height="15" fill="rgb(209,19,41)" fg:x="21408" fg:w="17"/><text x="28.0483%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (17 samples, 0.02%)</title><rect x="27.7983%" y="1717" width="0.0221%" height="15" fill="rgb(210,177,12)" fg:x="21408" fg:w="17"/><text x="28.0483%" y="1727.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="27.8437%" y="1525" width="0.0117%" height="15" fill="rgb(211,159,37)" fg:x="21443" fg:w="9"/><text x="28.0937%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="27.8437%" y="1509" width="0.0117%" height="15" fill="rgb(209,20,2)" fg:x="21443" fg:w="9"/><text x="28.0937%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="27.8437%" y="1493" width="0.0117%" height="15" fill="rgb(244,3,46)" fg:x="21443" fg:w="9"/><text x="28.0937%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (15 samples, 0.02%)</title><rect x="27.8398%" y="1589" width="0.0195%" height="15" fill="rgb(220,94,38)" fg:x="21440" fg:w="15"/><text x="28.0898%" y="1599.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (15 samples, 0.02%)</title><rect x="27.8398%" y="1573" width="0.0195%" height="15" fill="rgb(253,14,31)" fg:x="21440" fg:w="15"/><text x="28.0898%" y="1583.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="27.8398%" y="1557" width="0.0195%" height="15" fill="rgb(234,176,13)" fg:x="21440" fg:w="15"/><text x="28.0898%" y="1567.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.02%)</title><rect x="27.8398%" y="1541" width="0.0195%" height="15" fill="rgb(218,62,25)" fg:x="21440" fg:w="15"/><text x="28.0898%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (14 samples, 0.02%)</title><rect x="27.8606%" y="1589" width="0.0182%" height="15" fill="rgb(216,124,40)" fg:x="21456" fg:w="14"/><text x="28.1106%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (14 samples, 0.02%)</title><rect x="27.8606%" y="1573" width="0.0182%" height="15" fill="rgb(228,170,12)" fg:x="21456" fg:w="14"/><text x="28.1106%" y="1583.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (9 samples, 0.01%)</title><rect x="27.8788%" y="1557" width="0.0117%" height="15" fill="rgb(231,226,5)" fg:x="21470" fg:w="9"/><text x="28.1288%" y="1567.50"></text></g><g><title>core::intrinsics::write_bytes (9 samples, 0.01%)</title><rect x="27.8788%" y="1541" width="0.0117%" height="15" fill="rgb(237,122,22)" fg:x="21470" fg:w="9"/><text x="28.1288%" y="1551.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="27.8788%" y="1525" width="0.0117%" height="15" fill="rgb(209,185,25)" fg:x="21470" fg:w="9"/><text x="28.1288%" y="1535.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (8 samples, 0.01%)</title><rect x="27.8944%" y="1541" width="0.0104%" height="15" fill="rgb(228,200,32)" fg:x="21482" fg:w="8"/><text x="28.1444%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (21 samples, 0.03%)</title><rect x="27.8905%" y="1557" width="0.0273%" height="15" fill="rgb(217,140,10)" fg:x="21479" fg:w="21"/><text x="28.1405%" y="1567.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10 samples, 0.01%)</title><rect x="27.9047%" y="1541" width="0.0130%" height="15" fill="rgb(253,17,24)" fg:x="21490" fg:w="10"/><text x="28.1547%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="27.9047%" y="1525" width="0.0130%" height="15" fill="rgb(212,61,6)" fg:x="21490" fg:w="10"/><text x="28.1547%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="27.9047%" y="1509" width="0.0130%" height="15" fill="rgb(205,14,25)" fg:x="21490" fg:w="10"/><text x="28.1547%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="27.9047%" y="1493" width="0.0130%" height="15" fill="rgb(232,69,41)" fg:x="21490" fg:w="10"/><text x="28.1547%" y="1503.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="27.9073%" y="1477" width="0.0104%" height="15" fill="rgb(241,106,47)" fg:x="21492" fg:w="8"/><text x="28.1573%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (73 samples, 0.09%)</title><rect x="27.8242%" y="1605" width="0.0948%" height="15" fill="rgb(210,213,53)" fg:x="21428" fg:w="73"/><text x="28.0742%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (31 samples, 0.04%)</title><rect x="27.8788%" y="1589" width="0.0403%" height="15" fill="rgb(253,175,27)" fg:x="21470" fg:w="31"/><text x="28.1288%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (31 samples, 0.04%)</title><rect x="27.8788%" y="1573" width="0.0403%" height="15" fill="rgb(211,171,24)" fg:x="21470" fg:w="31"/><text x="28.1288%" y="1583.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (77 samples, 0.10%)</title><rect x="27.8203%" y="1749" width="0.1000%" height="15" fill="rgb(229,80,7)" fg:x="21425" fg:w="77"/><text x="28.0703%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (77 samples, 0.10%)</title><rect x="27.8203%" y="1733" width="0.1000%" height="15" fill="rgb(212,46,39)" fg:x="21425" fg:w="77"/><text x="28.0703%" y="1743.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (75 samples, 0.10%)</title><rect x="27.8229%" y="1717" width="0.0974%" height="15" fill="rgb(240,80,45)" fg:x="21427" fg:w="75"/><text x="28.0729%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (75 samples, 0.10%)</title><rect x="27.8229%" y="1701" width="0.0974%" height="15" fill="rgb(253,177,40)" fg:x="21427" fg:w="75"/><text x="28.0729%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (75 samples, 0.10%)</title><rect x="27.8229%" y="1685" width="0.0974%" height="15" fill="rgb(249,200,15)" fg:x="21427" fg:w="75"/><text x="28.0729%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (75 samples, 0.10%)</title><rect x="27.8229%" y="1669" width="0.0974%" height="15" fill="rgb(217,78,26)" fg:x="21427" fg:w="75"/><text x="28.0729%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (75 samples, 0.10%)</title><rect x="27.8229%" y="1653" width="0.0974%" height="15" fill="rgb(254,151,32)" fg:x="21427" fg:w="75"/><text x="28.0729%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (75 samples, 0.10%)</title><rect x="27.8229%" y="1637" width="0.0974%" height="15" fill="rgb(226,165,27)" fg:x="21427" fg:w="75"/><text x="28.0729%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (75 samples, 0.10%)</title><rect x="27.8229%" y="1621" width="0.0974%" height="15" fill="rgb(250,206,4)" fg:x="21427" fg:w="75"/><text x="28.0729%" y="1631.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="27.9203%" y="1285" width="0.0117%" height="15" fill="rgb(231,229,27)" fg:x="21502" fg:w="9"/><text x="28.1703%" y="1295.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="27.9203%" y="1269" width="0.0117%" height="15" fill="rgb(239,217,8)" fg:x="21502" fg:w="9"/><text x="28.1703%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1445" width="0.0403%" height="15" fill="rgb(225,204,27)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1429" width="0.0403%" height="15" fill="rgb(230,56,32)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1413" width="0.0403%" height="15" fill="rgb(222,56,27)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="27.9203%" y="1397" width="0.0403%" height="15" fill="rgb(253,108,27)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1381" width="0.0403%" height="15" fill="rgb(212,87,36)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1365" width="0.0403%" height="15" fill="rgb(247,82,36)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1349" width="0.0403%" height="15" fill="rgb(222,143,9)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1333" width="0.0403%" height="15" fill="rgb(238,162,48)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="27.9203%" y="1317" width="0.0403%" height="15" fill="rgb(221,59,43)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (31 samples, 0.04%)</title><rect x="27.9203%" y="1301" width="0.0403%" height="15" fill="rgb(205,166,41)" fg:x="21502" fg:w="31"/><text x="28.1703%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (22 samples, 0.03%)</title><rect x="27.9320%" y="1285" width="0.0286%" height="15" fill="rgb(241,186,40)" fg:x="21511" fg:w="22"/><text x="28.1820%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (22 samples, 0.03%)</title><rect x="27.9320%" y="1269" width="0.0286%" height="15" fill="rgb(216,119,35)" fg:x="21511" fg:w="22"/><text x="28.1820%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (22 samples, 0.03%)</title><rect x="27.9320%" y="1253" width="0.0286%" height="15" fill="rgb(208,68,38)" fg:x="21511" fg:w="22"/><text x="28.1820%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="27.9320%" y="1237" width="0.0286%" height="15" fill="rgb(217,113,1)" fg:x="21511" fg:w="22"/><text x="28.1820%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (22 samples, 0.03%)</title><rect x="27.9320%" y="1221" width="0.0286%" height="15" fill="rgb(242,153,3)" fg:x="21511" fg:w="22"/><text x="28.1820%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (15 samples, 0.02%)</title><rect x="27.9411%" y="1205" width="0.0195%" height="15" fill="rgb(229,76,35)" fg:x="21518" fg:w="15"/><text x="28.1911%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (8 samples, 0.01%)</title><rect x="27.9502%" y="1189" width="0.0104%" height="15" fill="rgb(229,125,34)" fg:x="21525" fg:w="8"/><text x="28.2002%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (8 samples, 0.01%)</title><rect x="27.9502%" y="1173" width="0.0104%" height="15" fill="rgb(238,179,36)" fg:x="21525" fg:w="8"/><text x="28.2002%" y="1183.50"></text></g><g><title>cfree (29 samples, 0.04%)</title><rect x="27.9606%" y="1285" width="0.0377%" height="15" fill="rgb(244,183,19)" fg:x="21533" fg:w="29"/><text x="28.2106%" y="1295.50"></text></g><g><title>[libc.so.6] (29 samples, 0.04%)</title><rect x="27.9606%" y="1269" width="0.0377%" height="15" fill="rgb(216,85,49)" fg:x="21533" fg:w="29"/><text x="28.2106%" y="1279.50"></text></g><g><title>cfree (23 samples, 0.03%)</title><rect x="28.0021%" y="1157" width="0.0299%" height="15" fill="rgb(208,161,47)" fg:x="21565" fg:w="23"/><text x="28.2521%" y="1167.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="28.0021%" y="1141" width="0.0299%" height="15" fill="rgb(233,210,18)" fg:x="21565" fg:w="23"/><text x="28.2521%" y="1151.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="28.0320%" y="1045" width="0.0104%" height="15" fill="rgb(205,104,42)" fg:x="21588" fg:w="8"/><text x="28.2820%" y="1055.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="28.0320%" y="1029" width="0.0104%" height="15" fill="rgb(248,90,43)" fg:x="21588" fg:w="8"/><text x="28.2820%" y="1039.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (282 samples, 0.37%)</title><rect x="27.6853%" y="2005" width="0.3662%" height="15" fill="rgb(206,198,11)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="2015.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (282 samples, 0.37%)</title><rect x="27.6853%" y="1989" width="0.3662%" height="15" fill="rgb(239,165,27)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1999.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (282 samples, 0.37%)</title><rect x="27.6853%" y="1973" width="0.3662%" height="15" fill="rgb(246,44,32)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1983.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (282 samples, 0.37%)</title><rect x="27.6853%" y="1957" width="0.3662%" height="15" fill="rgb(252,65,42)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (282 samples, 0.37%)</title><rect x="27.6853%" y="1941" width="0.3662%" height="15" fill="rgb(246,197,18)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (282 samples, 0.37%)</title><rect x="27.6853%" y="1925" width="0.3662%" height="15" fill="rgb(216,192,4)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1935.50"></text></g><g><title>std::panicking::try (282 samples, 0.37%)</title><rect x="27.6853%" y="1909" width="0.3662%" height="15" fill="rgb(208,117,10)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (282 samples, 0.37%)</title><rect x="27.6853%" y="1893" width="0.3662%" height="15" fill="rgb(240,61,47)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (282 samples, 0.37%)</title><rect x="27.6853%" y="1877" width="0.3662%" height="15" fill="rgb(228,178,21)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1887.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (282 samples, 0.37%)</title><rect x="27.6853%" y="1861" width="0.3662%" height="15" fill="rgb(219,96,54)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1871.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (282 samples, 0.37%)</title><rect x="27.6853%" y="1845" width="0.3662%" height="15" fill="rgb(250,177,24)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1855.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (282 samples, 0.37%)</title><rect x="27.6853%" y="1829" width="0.3662%" height="15" fill="rgb(242,154,46)" fg:x="21321" fg:w="282"/><text x="27.9353%" y="1839.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (248 samples, 0.32%)</title><rect x="27.7294%" y="1813" width="0.3220%" height="15" fill="rgb(226,176,29)" fg:x="21355" fg:w="248"/><text x="27.9794%" y="1823.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (248 samples, 0.32%)</title><rect x="27.7294%" y="1797" width="0.3220%" height="15" fill="rgb(226,29,2)" fg:x="21355" fg:w="248"/><text x="27.9794%" y="1807.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (248 samples, 0.32%)</title><rect x="27.7294%" y="1781" width="0.3220%" height="15" fill="rgb(237,104,14)" fg:x="21355" fg:w="248"/><text x="27.9794%" y="1791.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (248 samples, 0.32%)</title><rect x="27.7294%" y="1765" width="0.3220%" height="15" fill="rgb(245,207,31)" fg:x="21355" fg:w="248"/><text x="27.9794%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1749" width="0.1311%" height="15" fill="rgb(229,211,45)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1733" width="0.1311%" height="15" fill="rgb(229,113,15)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1717" width="0.1311%" height="15" fill="rgb(237,147,15)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1701" width="0.1311%" height="15" fill="rgb(244,120,12)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1685" width="0.1311%" height="15" fill="rgb(205,120,12)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1695.50"></text></g><g><title>core::mem::drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1669" width="0.1311%" height="15" fill="rgb(231,26,45)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1653" width="0.1311%" height="15" fill="rgb(246,98,1)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1637" width="0.1311%" height="15" fill="rgb(207,68,45)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (101 samples, 0.13%)</title><rect x="27.9203%" y="1621" width="0.1311%" height="15" fill="rgb(231,27,38)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1631.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1605" width="0.1311%" height="15" fill="rgb(214,223,3)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1589" width="0.1311%" height="15" fill="rgb(228,195,46)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1573" width="0.1311%" height="15" fill="rgb(231,100,42)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1557" width="0.1311%" height="15" fill="rgb(236,53,4)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1567.50"></text></g><g><title>core::mem::drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1541" width="0.1311%" height="15" fill="rgb(230,152,12)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1525" width="0.1311%" height="15" fill="rgb(226,101,19)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1509" width="0.1311%" height="15" fill="rgb(250,149,32)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (101 samples, 0.13%)</title><rect x="27.9203%" y="1493" width="0.1311%" height="15" fill="rgb(232,178,12)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (101 samples, 0.13%)</title><rect x="27.9203%" y="1477" width="0.1311%" height="15" fill="rgb(246,151,17)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (101 samples, 0.13%)</title><rect x="27.9203%" y="1461" width="0.1311%" height="15" fill="rgb(252,17,51)" fg:x="21502" fg:w="101"/><text x="28.1703%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1445" width="0.0909%" height="15" fill="rgb(250,207,23)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1429" width="0.0909%" height="15" fill="rgb(205,27,5)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1413" width="0.0909%" height="15" fill="rgb(224,32,19)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1423.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.09%)</title><rect x="27.9606%" y="1397" width="0.0909%" height="15" fill="rgb(247,214,40)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1381" width="0.0909%" height="15" fill="rgb(239,199,17)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1365" width="0.0909%" height="15" fill="rgb(251,159,9)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1349" width="0.0909%" height="15" fill="rgb(225,78,32)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.09%)</title><rect x="27.9606%" y="1333" width="0.0909%" height="15" fill="rgb(206,97,47)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1317" width="0.0909%" height="15" fill="rgb(227,107,4)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (70 samples, 0.09%)</title><rect x="27.9606%" y="1301" width="0.0909%" height="15" fill="rgb(241,146,50)" fg:x="21533" fg:w="70"/><text x="28.2106%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (41 samples, 0.05%)</title><rect x="27.9982%" y="1285" width="0.0532%" height="15" fill="rgb(232,92,30)" fg:x="21562" fg:w="41"/><text x="28.2482%" y="1295.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="27.9982%" y="1269" width="0.0532%" height="15" fill="rgb(222,0,40)" fg:x="21562" fg:w="41"/><text x="28.2482%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (41 samples, 0.05%)</title><rect x="27.9982%" y="1253" width="0.0532%" height="15" fill="rgb(219,54,33)" fg:x="21562" fg:w="41"/><text x="28.2482%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (41 samples, 0.05%)</title><rect x="27.9982%" y="1237" width="0.0532%" height="15" fill="rgb(226,209,28)" fg:x="21562" fg:w="41"/><text x="28.2482%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (41 samples, 0.05%)</title><rect x="27.9982%" y="1221" width="0.0532%" height="15" fill="rgb(254,205,35)" fg:x="21562" fg:w="41"/><text x="28.2482%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="27.9982%" y="1205" width="0.0532%" height="15" fill="rgb(230,159,3)" fg:x="21562" fg:w="41"/><text x="28.2482%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (41 samples, 0.05%)</title><rect x="27.9982%" y="1189" width="0.0532%" height="15" fill="rgb(232,190,24)" fg:x="21562" fg:w="41"/><text x="28.2482%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (38 samples, 0.05%)</title><rect x="28.0021%" y="1173" width="0.0493%" height="15" fill="rgb(217,227,44)" fg:x="21565" fg:w="38"/><text x="28.2521%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="28.0320%" y="1157" width="0.0195%" height="15" fill="rgb(236,211,1)" fg:x="21588" fg:w="15"/><text x="28.2820%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="28.0320%" y="1141" width="0.0195%" height="15" fill="rgb(250,127,46)" fg:x="21588" fg:w="15"/><text x="28.2820%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="28.0320%" y="1125" width="0.0195%" height="15" fill="rgb(229,213,6)" fg:x="21588" fg:w="15"/><text x="28.2820%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="28.0320%" y="1109" width="0.0195%" height="15" fill="rgb(237,15,36)" fg:x="21588" fg:w="15"/><text x="28.2820%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (15 samples, 0.02%)</title><rect x="28.0320%" y="1093" width="0.0195%" height="15" fill="rgb(213,131,41)" fg:x="21588" fg:w="15"/><text x="28.2820%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="28.0320%" y="1077" width="0.0195%" height="15" fill="rgb(225,82,44)" fg:x="21588" fg:w="15"/><text x="28.2820%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (15 samples, 0.02%)</title><rect x="28.0320%" y="1061" width="0.0195%" height="15" fill="rgb(249,42,11)" fg:x="21588" fg:w="15"/><text x="28.2820%" y="1071.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.03%)</title><rect x="28.0515%" y="2005" width="0.0299%" height="15" fill="rgb(253,11,29)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="2015.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (23 samples, 0.03%)</title><rect x="28.0515%" y="1989" width="0.0299%" height="15" fill="rgb(206,8,54)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1999.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.03%)</title><rect x="28.0515%" y="1973" width="0.0299%" height="15" fill="rgb(222,186,2)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1983.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="28.0515%" y="1957" width="0.0299%" height="15" fill="rgb(221,206,53)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1967.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="28.0515%" y="1941" width="0.0299%" height="15" fill="rgb(230,150,21)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1951.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="28.0515%" y="1925" width="0.0299%" height="15" fill="rgb(253,202,10)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1935.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="28.0515%" y="1909" width="0.0299%" height="15" fill="rgb(238,109,40)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1919.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1893" width="0.0299%" height="15" fill="rgb(247,120,22)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1903.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1877" width="0.0299%" height="15" fill="rgb(207,43,30)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1887.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1861" width="0.0299%" height="15" fill="rgb(213,211,24)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1871.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1845" width="0.0299%" height="15" fill="rgb(239,73,39)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1855.50"></text></g><g><title>rayon_core::scope::scope (23 samples, 0.03%)</title><rect x="28.0515%" y="1829" width="0.0299%" height="15" fill="rgb(245,182,19)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1839.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.03%)</title><rect x="28.0515%" y="1813" width="0.0299%" height="15" fill="rgb(247,143,26)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1823.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1797" width="0.0299%" height="15" fill="rgb(228,191,23)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1807.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (23 samples, 0.03%)</title><rect x="28.0515%" y="1781" width="0.0299%" height="15" fill="rgb(253,165,31)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.03%)</title><rect x="28.0515%" y="1765" width="0.0299%" height="15" fill="rgb(234,138,20)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (23 samples, 0.03%)</title><rect x="28.0515%" y="1749" width="0.0299%" height="15" fill="rgb(218,191,29)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1759.50"></text></g><g><title>rayon_core::job::JobRef::execute (23 samples, 0.03%)</title><rect x="28.0515%" y="1733" width="0.0299%" height="15" fill="rgb(221,157,19)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1743.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.03%)</title><rect x="28.0515%" y="1717" width="0.0299%" height="15" fill="rgb(237,26,42)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1727.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1701" width="0.0299%" height="15" fill="rgb(220,163,24)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1711.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (23 samples, 0.03%)</title><rect x="28.0515%" y="1685" width="0.0299%" height="15" fill="rgb(242,115,20)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1695.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (23 samples, 0.03%)</title><rect x="28.0515%" y="1669" width="0.0299%" height="15" fill="rgb(210,206,9)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1679.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.03%)</title><rect x="28.0515%" y="1653" width="0.0299%" height="15" fill="rgb(208,71,17)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="28.0515%" y="1637" width="0.0299%" height="15" fill="rgb(233,7,5)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1647.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="28.0515%" y="1621" width="0.0299%" height="15" fill="rgb(207,92,33)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="28.0515%" y="1605" width="0.0299%" height="15" fill="rgb(218,87,9)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="28.0515%" y="1589" width="0.0299%" height="15" fill="rgb(219,47,37)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1599.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1573" width="0.0299%" height="15" fill="rgb(221,152,34)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1583.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="28.0515%" y="1557" width="0.0299%" height="15" fill="rgb(235,176,21)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1567.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (23 samples, 0.03%)</title><rect x="28.0515%" y="1541" width="0.0299%" height="15" fill="rgb(232,212,21)" fg:x="21603" fg:w="23"/><text x="28.3015%" y="1551.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (17 samples, 0.02%)</title><rect x="28.0593%" y="1525" width="0.0221%" height="15" fill="rgb(245,82,39)" fg:x="21609" fg:w="17"/><text x="28.3093%" y="1535.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (17 samples, 0.02%)</title><rect x="28.0593%" y="1509" width="0.0221%" height="15" fill="rgb(241,52,51)" fg:x="21609" fg:w="17"/><text x="28.3093%" y="1519.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (17 samples, 0.02%)</title><rect x="28.0593%" y="1493" width="0.0221%" height="15" fill="rgb(219,91,24)" fg:x="21609" fg:w="17"/><text x="28.3093%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (17 samples, 0.02%)</title><rect x="28.0593%" y="1477" width="0.0221%" height="15" fill="rgb(241,142,12)" fg:x="21609" fg:w="17"/><text x="28.3093%" y="1487.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_defs (8 samples, 0.01%)</title><rect x="28.0969%" y="1173" width="0.0104%" height="15" fill="rgb(230,27,9)" fg:x="21638" fg:w="8"/><text x="28.3469%" y="1183.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_def (8 samples, 0.01%)</title><rect x="28.0969%" y="1157" width="0.0104%" height="15" fill="rgb(249,181,32)" fg:x="21638" fg:w="8"/><text x="28.3469%" y="1167.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_code (8 samples, 0.01%)</title><rect x="28.0969%" y="1141" width="0.0104%" height="15" fill="rgb(230,107,3)" fg:x="21638" fg:w="8"/><text x="28.3469%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (10 samples, 0.01%)</title><rect x="28.0969%" y="1269" width="0.0130%" height="15" fill="rgb(246,204,14)" fg:x="21638" fg:w="10"/><text x="28.3469%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="28.0969%" y="1253" width="0.0130%" height="15" fill="rgb(213,192,47)" fg:x="21638" fg:w="10"/><text x="28.3469%" y="1263.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="28.0969%" y="1237" width="0.0130%" height="15" fill="rgb(240,44,36)" fg:x="21638" fg:w="10"/><text x="28.3469%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="28.0969%" y="1221" width="0.0130%" height="15" fill="rgb(244,209,38)" fg:x="21638" fg:w="10"/><text x="28.3469%" y="1231.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (10 samples, 0.01%)</title><rect x="28.0969%" y="1205" width="0.0130%" height="15" fill="rgb(219,34,37)" fg:x="21638" fg:w="10"/><text x="28.3469%" y="1215.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_module (10 samples, 0.01%)</title><rect x="28.0969%" y="1189" width="0.0130%" height="15" fill="rgb(210,28,6)" fg:x="21638" fg:w="10"/><text x="28.3469%" y="1199.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (12 samples, 0.02%)</title><rect x="28.1151%" y="1125" width="0.0156%" height="15" fill="rgb(244,110,52)" fg:x="21652" fg:w="12"/><text x="28.3651%" y="1135.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (12 samples, 0.02%)</title><rect x="28.1151%" y="1109" width="0.0156%" height="15" fill="rgb(254,124,47)" fg:x="21652" fg:w="12"/><text x="28.3651%" y="1119.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (25 samples, 0.03%)</title><rect x="28.1125%" y="1141" width="0.0325%" height="15" fill="rgb(254,110,13)" fg:x="21650" fg:w="25"/><text x="28.3625%" y="1151.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (11 samples, 0.01%)</title><rect x="28.1307%" y="1125" width="0.0143%" height="15" fill="rgb(252,57,21)" fg:x="21664" fg:w="11"/><text x="28.3807%" y="1135.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (10 samples, 0.01%)</title><rect x="28.1320%" y="1109" width="0.0130%" height="15" fill="rgb(242,60,45)" fg:x="21665" fg:w="10"/><text x="28.3820%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (9 samples, 0.01%)</title><rect x="28.1450%" y="1125" width="0.0117%" height="15" fill="rgb(234,49,30)" fg:x="21675" fg:w="9"/><text x="28.3950%" y="1135.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (9 samples, 0.01%)</title><rect x="28.1450%" y="1109" width="0.0117%" height="15" fill="rgb(218,98,6)" fg:x="21675" fg:w="9"/><text x="28.3950%" y="1119.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (39 samples, 0.05%)</title><rect x="28.1099%" y="1189" width="0.0506%" height="15" fill="rgb(220,174,29)" fg:x="21648" fg:w="39"/><text x="28.3599%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (39 samples, 0.05%)</title><rect x="28.1099%" y="1173" width="0.0506%" height="15" fill="rgb(236,163,23)" fg:x="21648" fg:w="39"/><text x="28.3599%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (39 samples, 0.05%)</title><rect x="28.1099%" y="1157" width="0.0506%" height="15" fill="rgb(242,114,45)" fg:x="21648" fg:w="39"/><text x="28.3599%" y="1167.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (12 samples, 0.02%)</title><rect x="28.1450%" y="1141" width="0.0156%" height="15" fill="rgb(232,10,53)" fg:x="21675" fg:w="12"/><text x="28.3950%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (51 samples, 0.07%)</title><rect x="28.0956%" y="1317" width="0.0662%" height="15" fill="rgb(245,108,29)" fg:x="21637" fg:w="51"/><text x="28.3456%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (51 samples, 0.07%)</title><rect x="28.0956%" y="1301" width="0.0662%" height="15" fill="rgb(240,89,53)" fg:x="21637" fg:w="51"/><text x="28.3456%" y="1311.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (51 samples, 0.07%)</title><rect x="28.0956%" y="1285" width="0.0662%" height="15" fill="rgb(226,60,45)" fg:x="21637" fg:w="51"/><text x="28.3456%" y="1295.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (40 samples, 0.05%)</title><rect x="28.1099%" y="1269" width="0.0519%" height="15" fill="rgb(230,41,44)" fg:x="21648" fg:w="40"/><text x="28.3599%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="28.1099%" y="1253" width="0.0519%" height="15" fill="rgb(230,26,20)" fg:x="21648" fg:w="40"/><text x="28.3599%" y="1263.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="28.1099%" y="1237" width="0.0519%" height="15" fill="rgb(237,170,32)" fg:x="21648" fg:w="40"/><text x="28.3599%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="28.1099%" y="1221" width="0.0519%" height="15" fill="rgb(212,35,42)" fg:x="21648" fg:w="40"/><text x="28.3599%" y="1231.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (40 samples, 0.05%)</title><rect x="28.1099%" y="1205" width="0.0519%" height="15" fill="rgb(227,31,34)" fg:x="21648" fg:w="40"/><text x="28.3599%" y="1215.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (59 samples, 0.08%)</title><rect x="28.0891%" y="1365" width="0.0766%" height="15" fill="rgb(216,19,18)" fg:x="21632" fg:w="59"/><text x="28.3391%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (59 samples, 0.08%)</title><rect x="28.0891%" y="1349" width="0.0766%" height="15" fill="rgb(211,133,42)" fg:x="21632" fg:w="59"/><text x="28.3391%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (54 samples, 0.07%)</title><rect x="28.0956%" y="1333" width="0.0701%" height="15" fill="rgb(244,66,13)" fg:x="21637" fg:w="54"/><text x="28.3456%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (61 samples, 0.08%)</title><rect x="28.0891%" y="1397" width="0.0792%" height="15" fill="rgb(218,185,50)" fg:x="21632" fg:w="61"/><text x="28.3391%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (61 samples, 0.08%)</title><rect x="28.0891%" y="1381" width="0.0792%" height="15" fill="rgb(219,149,13)" fg:x="21632" fg:w="61"/><text x="28.3391%" y="1391.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (65 samples, 0.08%)</title><rect x="28.0891%" y="1701" width="0.0844%" height="15" fill="rgb(221,125,0)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1711.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (65 samples, 0.08%)</title><rect x="28.0891%" y="1685" width="0.0844%" height="15" fill="rgb(247,126,27)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1695.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (65 samples, 0.08%)</title><rect x="28.0891%" y="1669" width="0.0844%" height="15" fill="rgb(250,138,30)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1679.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (65 samples, 0.08%)</title><rect x="28.0891%" y="1653" width="0.0844%" height="15" fill="rgb(230,151,9)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1663.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (65 samples, 0.08%)</title><rect x="28.0891%" y="1637" width="0.0844%" height="15" fill="rgb(233,80,38)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1647.50"></text></g><g><title>std::panic::catch_unwind (65 samples, 0.08%)</title><rect x="28.0891%" y="1621" width="0.0844%" height="15" fill="rgb(232,68,43)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1631.50"></text></g><g><title>std::panicking::try (65 samples, 0.08%)</title><rect x="28.0891%" y="1605" width="0.0844%" height="15" fill="rgb(254,5,50)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1615.50"></text></g><g><title>std::panicking::try::do_call (65 samples, 0.08%)</title><rect x="28.0891%" y="1589" width="0.0844%" height="15" fill="rgb(225,45,5)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1599.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (65 samples, 0.08%)</title><rect x="28.0891%" y="1573" width="0.0844%" height="15" fill="rgb(239,22,3)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1583.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (65 samples, 0.08%)</title><rect x="28.0891%" y="1557" width="0.0844%" height="15" fill="rgb(243,129,0)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1567.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (65 samples, 0.08%)</title><rect x="28.0891%" y="1541" width="0.0844%" height="15" fill="rgb(223,164,0)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1551.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (65 samples, 0.08%)</title><rect x="28.0891%" y="1525" width="0.0844%" height="15" fill="rgb(221,46,29)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1535.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (65 samples, 0.08%)</title><rect x="28.0891%" y="1509" width="0.0844%" height="15" fill="rgb(205,97,47)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1519.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (65 samples, 0.08%)</title><rect x="28.0891%" y="1493" width="0.0844%" height="15" fill="rgb(249,14,8)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (65 samples, 0.08%)</title><rect x="28.0891%" y="1477" width="0.0844%" height="15" fill="rgb(216,77,3)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1487.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (65 samples, 0.08%)</title><rect x="28.0891%" y="1461" width="0.0844%" height="15" fill="rgb(206,168,54)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (65 samples, 0.08%)</title><rect x="28.0891%" y="1445" width="0.0844%" height="15" fill="rgb(236,3,41)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (65 samples, 0.08%)</title><rect x="28.0891%" y="1429" width="0.0844%" height="15" fill="rgb(231,132,24)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (65 samples, 0.08%)</title><rect x="28.0891%" y="1413" width="0.0844%" height="15" fill="rgb(227,221,40)" fg:x="21632" fg:w="65"/><text x="28.3391%" y="1423.50"></text></g><g><title>[libc.so.6] (80 samples, 0.10%)</title><rect x="28.0813%" y="2005" width="0.1039%" height="15" fill="rgb(233,151,11)" fg:x="21626" fg:w="80"/><text x="28.3313%" y="2015.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (74 samples, 0.10%)</title><rect x="28.0891%" y="1989" width="0.0961%" height="15" fill="rgb(247,81,35)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1999.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (74 samples, 0.10%)</title><rect x="28.0891%" y="1973" width="0.0961%" height="15" fill="rgb(243,128,48)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (74 samples, 0.10%)</title><rect x="28.0891%" y="1957" width="0.0961%" height="15" fill="rgb(253,16,10)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1967.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (74 samples, 0.10%)</title><rect x="28.0891%" y="1941" width="0.0961%" height="15" fill="rgb(228,67,27)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1951.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (74 samples, 0.10%)</title><rect x="28.0891%" y="1925" width="0.0961%" height="15" fill="rgb(231,105,25)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (74 samples, 0.10%)</title><rect x="28.0891%" y="1909" width="0.0961%" height="15" fill="rgb(213,166,47)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1919.50"></text></g><g><title>std::panicking::try (74 samples, 0.10%)</title><rect x="28.0891%" y="1893" width="0.0961%" height="15" fill="rgb(209,27,10)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (74 samples, 0.10%)</title><rect x="28.0891%" y="1877" width="0.0961%" height="15" fill="rgb(241,44,30)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1887.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (74 samples, 0.10%)</title><rect x="28.0891%" y="1861" width="0.0961%" height="15" fill="rgb(223,216,15)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1871.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (74 samples, 0.10%)</title><rect x="28.0891%" y="1845" width="0.0961%" height="15" fill="rgb(227,14,7)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1855.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (74 samples, 0.10%)</title><rect x="28.0891%" y="1829" width="0.0961%" height="15" fill="rgb(237,14,5)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1839.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (74 samples, 0.10%)</title><rect x="28.0891%" y="1813" width="0.0961%" height="15" fill="rgb(232,14,36)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1823.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (74 samples, 0.10%)</title><rect x="28.0891%" y="1797" width="0.0961%" height="15" fill="rgb(234,0,38)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1807.50"></text></g><g><title>rayon_core::registry::main_loop (74 samples, 0.10%)</title><rect x="28.0891%" y="1781" width="0.0961%" height="15" fill="rgb(207,170,14)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (74 samples, 0.10%)</title><rect x="28.0891%" y="1765" width="0.0961%" height="15" fill="rgb(252,45,13)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (74 samples, 0.10%)</title><rect x="28.0891%" y="1749" width="0.0961%" height="15" fill="rgb(213,142,7)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (74 samples, 0.10%)</title><rect x="28.0891%" y="1733" width="0.0961%" height="15" fill="rgb(216,157,23)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1743.50"></text></g><g><title>rayon_core::job::JobRef::execute (74 samples, 0.10%)</title><rect x="28.0891%" y="1717" width="0.0961%" height="15" fill="rgb(212,145,33)" fg:x="21632" fg:w="74"/><text x="28.3391%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="28.1735%" y="1701" width="0.0117%" height="15" fill="rgb(233,26,13)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1711.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (9 samples, 0.01%)</title><rect x="28.1735%" y="1685" width="0.0117%" height="15" fill="rgb(219,196,19)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1695.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="28.1735%" y="1669" width="0.0117%" height="15" fill="rgb(246,56,21)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="28.1735%" y="1653" width="0.0117%" height="15" fill="rgb(222,28,53)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1663.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="28.1735%" y="1637" width="0.0117%" height="15" fill="rgb(224,5,27)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="28.1735%" y="1621" width="0.0117%" height="15" fill="rgb(220,153,33)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="28.1735%" y="1605" width="0.0117%" height="15" fill="rgb(226,58,19)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1615.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (9 samples, 0.01%)</title><rect x="28.1735%" y="1589" width="0.0117%" height="15" fill="rgb(239,112,23)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1599.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (9 samples, 0.01%)</title><rect x="28.1735%" y="1573" width="0.0117%" height="15" fill="rgb(251,213,20)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1583.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (9 samples, 0.01%)</title><rect x="28.1735%" y="1557" width="0.0117%" height="15" fill="rgb(215,181,21)" fg:x="21697" fg:w="9"/><text x="28.4235%" y="1567.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (8 samples, 0.01%)</title><rect x="28.1748%" y="1541" width="0.0104%" height="15" fill="rgb(240,8,35)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1551.50"></text></g><g><title>rayon_core::scope::scope (8 samples, 0.01%)</title><rect x="28.1748%" y="1525" width="0.0104%" height="15" fill="rgb(232,203,3)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="28.1748%" y="1509" width="0.0104%" height="15" fill="rgb(214,202,43)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1519.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (8 samples, 0.01%)</title><rect x="28.1748%" y="1493" width="0.0104%" height="15" fill="rgb(254,35,11)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1503.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (8 samples, 0.01%)</title><rect x="28.1748%" y="1477" width="0.0104%" height="15" fill="rgb(239,173,13)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.01%)</title><rect x="28.1748%" y="1461" width="0.0104%" height="15" fill="rgb(220,141,0)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.01%)</title><rect x="28.1748%" y="1445" width="0.0104%" height="15" fill="rgb(210,98,12)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1455.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.01%)</title><rect x="28.1748%" y="1429" width="0.0104%" height="15" fill="rgb(254,153,22)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1439.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.01%)</title><rect x="28.1748%" y="1413" width="0.0104%" height="15" fill="rgb(247,223,17)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1423.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (8 samples, 0.01%)</title><rect x="28.1748%" y="1397" width="0.0104%" height="15" fill="rgb(246,56,7)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1407.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (8 samples, 0.01%)</title><rect x="28.1748%" y="1381" width="0.0104%" height="15" fill="rgb(240,226,12)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1391.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (8 samples, 0.01%)</title><rect x="28.1748%" y="1365" width="0.0104%" height="15" fill="rgb(205,87,46)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="28.1748%" y="1349" width="0.0104%" height="15" fill="rgb(245,214,51)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="28.1748%" y="1333" width="0.0104%" height="15" fill="rgb(223,172,33)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1343.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="28.1748%" y="1317" width="0.0104%" height="15" fill="rgb(227,203,34)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="28.1748%" y="1301" width="0.0104%" height="15" fill="rgb(248,143,44)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="28.1748%" y="1285" width="0.0104%" height="15" fill="rgb(226,162,5)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1295.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (8 samples, 0.01%)</title><rect x="28.1748%" y="1269" width="0.0104%" height="15" fill="rgb(211,143,1)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1279.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (8 samples, 0.01%)</title><rect x="28.1748%" y="1253" width="0.0104%" height="15" fill="rgb(224,96,15)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1263.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (8 samples, 0.01%)</title><rect x="28.1748%" y="1237" width="0.0104%" height="15" fill="rgb(222,4,38)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1247.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (8 samples, 0.01%)</title><rect x="28.1748%" y="1221" width="0.0104%" height="15" fill="rgb(253,228,15)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1231.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (8 samples, 0.01%)</title><rect x="28.1748%" y="1205" width="0.0104%" height="15" fill="rgb(242,194,12)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1215.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (8 samples, 0.01%)</title><rect x="28.1748%" y="1189" width="0.0104%" height="15" fill="rgb(214,177,31)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1199.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (8 samples, 0.01%)</title><rect x="28.1748%" y="1173" width="0.0104%" height="15" fill="rgb(226,58,51)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1183.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (8 samples, 0.01%)</title><rect x="28.1748%" y="1157" width="0.0104%" height="15" fill="rgb(250,119,16)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (8 samples, 0.01%)</title><rect x="28.1748%" y="1141" width="0.0104%" height="15" fill="rgb(223,128,53)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (8 samples, 0.01%)</title><rect x="28.1748%" y="1125" width="0.0104%" height="15" fill="rgb(251,199,15)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (8 samples, 0.01%)</title><rect x="28.1748%" y="1109" width="0.0104%" height="15" fill="rgb(235,168,42)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (8 samples, 0.01%)</title><rect x="28.1748%" y="1093" width="0.0104%" height="15" fill="rgb(250,210,17)" fg:x="21698" fg:w="8"/><text x="28.4248%" y="1103.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="28.1852%" y="2005" width="0.0130%" height="15" fill="rgb(226,36,41)" fg:x="21706" fg:w="10"/><text x="28.4352%" y="2015.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="28.2333%" y="1509" width="0.0104%" height="15" fill="rgb(225,87,10)" fg:x="21743" fg:w="8"/><text x="28.4833%" y="1519.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (8 samples, 0.01%)</title><rect x="28.2333%" y="1493" width="0.0104%" height="15" fill="rgb(228,83,9)" fg:x="21743" fg:w="8"/><text x="28.4833%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (8 samples, 0.01%)</title><rect x="28.2333%" y="1477" width="0.0104%" height="15" fill="rgb(225,16,36)" fg:x="21743" fg:w="8"/><text x="28.4833%" y="1487.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (8 samples, 0.01%)</title><rect x="28.2333%" y="1461" width="0.0104%" height="15" fill="rgb(242,198,13)" fg:x="21743" fg:w="8"/><text x="28.4833%" y="1471.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (8 samples, 0.01%)</title><rect x="28.2333%" y="1445" width="0.0104%" height="15" fill="rgb(239,25,51)" fg:x="21743" fg:w="8"/><text x="28.4833%" y="1455.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (17 samples, 0.02%)</title><rect x="28.2268%" y="1605" width="0.0221%" height="15" fill="rgb(239,28,37)" fg:x="21738" fg:w="17"/><text x="28.4768%" y="1615.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.02%)</title><rect x="28.2268%" y="1589" width="0.0221%" height="15" fill="rgb(234,70,17)" fg:x="21738" fg:w="17"/><text x="28.4768%" y="1599.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="28.2268%" y="1573" width="0.0221%" height="15" fill="rgb(231,215,53)" fg:x="21738" fg:w="17"/><text x="28.4768%" y="1583.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="28.2268%" y="1557" width="0.0221%" height="15" fill="rgb(218,140,42)" fg:x="21738" fg:w="17"/><text x="28.4768%" y="1567.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (17 samples, 0.02%)</title><rect x="28.2268%" y="1541" width="0.0221%" height="15" fill="rgb(233,227,45)" fg:x="21738" fg:w="17"/><text x="28.4768%" y="1551.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (12 samples, 0.02%)</title><rect x="28.2333%" y="1525" width="0.0156%" height="15" fill="rgb(225,189,21)" fg:x="21743" fg:w="12"/><text x="28.4833%" y="1535.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.03%)</title><rect x="28.2255%" y="1621" width="0.0286%" height="15" fill="rgb(237,176,54)" fg:x="21737" fg:w="22"/><text x="28.4755%" y="1631.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (35 samples, 0.05%)</title><rect x="28.2138%" y="1653" width="0.0454%" height="15" fill="rgb(215,131,46)" fg:x="21728" fg:w="35"/><text x="28.4638%" y="1663.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (35 samples, 0.05%)</title><rect x="28.2138%" y="1637" width="0.0454%" height="15" fill="rgb(218,95,20)" fg:x="21728" fg:w="35"/><text x="28.4638%" y="1647.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (43 samples, 0.06%)</title><rect x="28.2112%" y="1685" width="0.0558%" height="15" fill="rgb(208,198,12)" fg:x="21726" fg:w="43"/><text x="28.4612%" y="1695.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (43 samples, 0.06%)</title><rect x="28.2112%" y="1669" width="0.0558%" height="15" fill="rgb(239,107,50)" fg:x="21726" fg:w="43"/><text x="28.4612%" y="1679.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (12 samples, 0.02%)</title><rect x="28.3216%" y="1461" width="0.0156%" height="15" fill="rgb(240,217,37)" fg:x="21811" fg:w="12"/><text x="28.5716%" y="1471.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (21 samples, 0.03%)</title><rect x="28.3151%" y="1509" width="0.0273%" height="15" fill="rgb(242,197,49)" fg:x="21806" fg:w="21"/><text x="28.5651%" y="1519.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (21 samples, 0.03%)</title><rect x="28.3151%" y="1493" width="0.0273%" height="15" fill="rgb(219,171,17)" fg:x="21806" fg:w="21"/><text x="28.5651%" y="1503.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (17 samples, 0.02%)</title><rect x="28.3203%" y="1477" width="0.0221%" height="15" fill="rgb(209,81,40)" fg:x="21810" fg:w="17"/><text x="28.5703%" y="1487.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (32 samples, 0.04%)</title><rect x="28.3060%" y="1525" width="0.0416%" height="15" fill="rgb(237,156,30)" fg:x="21799" fg:w="32"/><text x="28.5560%" y="1535.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (49 samples, 0.06%)</title><rect x="28.2982%" y="1573" width="0.0636%" height="15" fill="rgb(212,127,16)" fg:x="21793" fg:w="49"/><text x="28.5482%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (49 samples, 0.06%)</title><rect x="28.2982%" y="1557" width="0.0636%" height="15" fill="rgb(226,66,32)" fg:x="21793" fg:w="49"/><text x="28.5482%" y="1567.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (49 samples, 0.06%)</title><rect x="28.2982%" y="1541" width="0.0636%" height="15" fill="rgb(245,22,46)" fg:x="21793" fg:w="49"/><text x="28.5482%" y="1551.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (11 samples, 0.01%)</title><rect x="28.3475%" y="1525" width="0.0143%" height="15" fill="rgb(210,112,21)" fg:x="21831" fg:w="11"/><text x="28.5975%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (72 samples, 0.09%)</title><rect x="28.2748%" y="1669" width="0.0935%" height="15" fill="rgb(207,118,39)" fg:x="21775" fg:w="72"/><text x="28.5248%" y="1679.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (63 samples, 0.08%)</title><rect x="28.2865%" y="1653" width="0.0818%" height="15" fill="rgb(205,206,35)" fg:x="21784" fg:w="63"/><text x="28.5365%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (63 samples, 0.08%)</title><rect x="28.2865%" y="1637" width="0.0818%" height="15" fill="rgb(222,120,2)" fg:x="21784" fg:w="63"/><text x="28.5365%" y="1647.50"></text></g><g><title>std::panicking::try (63 samples, 0.08%)</title><rect x="28.2865%" y="1621" width="0.0818%" height="15" fill="rgb(205,38,18)" fg:x="21784" fg:w="63"/><text x="28.5365%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (63 samples, 0.08%)</title><rect x="28.2865%" y="1605" width="0.0818%" height="15" fill="rgb(226,61,2)" fg:x="21784" fg:w="63"/><text x="28.5365%" y="1615.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (63 samples, 0.08%)</title><rect x="28.2865%" y="1589" width="0.0818%" height="15" fill="rgb(242,161,23)" fg:x="21784" fg:w="63"/><text x="28.5365%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (88 samples, 0.11%)</title><rect x="28.2670%" y="1685" width="0.1143%" height="15" fill="rgb(213,13,52)" fg:x="21769" fg:w="88"/><text x="28.5170%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (10 samples, 0.01%)</title><rect x="28.3683%" y="1669" width="0.0130%" height="15" fill="rgb(246,209,47)" fg:x="21847" fg:w="10"/><text x="28.6183%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (132 samples, 0.17%)</title><rect x="28.2112%" y="1701" width="0.1714%" height="15" fill="rgb(214,41,3)" fg:x="21726" fg:w="132"/><text x="28.4612%" y="1711.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (8 samples, 0.01%)</title><rect x="28.3826%" y="1685" width="0.0104%" height="15" fill="rgb(236,119,38)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (8 samples, 0.01%)</title><rect x="28.3826%" y="1669" width="0.0104%" height="15" fill="rgb(218,50,11)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1679.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (8 samples, 0.01%)</title><rect x="28.3826%" y="1653" width="0.0104%" height="15" fill="rgb(228,38,11)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1663.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (8 samples, 0.01%)</title><rect x="28.3826%" y="1637" width="0.0104%" height="15" fill="rgb(212,13,9)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1647.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (8 samples, 0.01%)</title><rect x="28.3826%" y="1621" width="0.0104%" height="15" fill="rgb(208,211,9)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="28.3826%" y="1605" width="0.0104%" height="15" fill="rgb(239,39,32)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="28.3826%" y="1589" width="0.0104%" height="15" fill="rgb(254,179,26)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (8 samples, 0.01%)</title><rect x="28.3826%" y="1573" width="0.0104%" height="15" fill="rgb(249,165,28)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (8 samples, 0.01%)</title><rect x="28.3826%" y="1557" width="0.0104%" height="15" fill="rgb(225,59,50)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1567.50"></text></g><g><title>bcs::ser::serialize_into (8 samples, 0.01%)</title><rect x="28.3826%" y="1541" width="0.0104%" height="15" fill="rgb(209,122,5)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.01%)</title><rect x="28.3826%" y="1525" width="0.0104%" height="15" fill="rgb(214,65,34)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1535.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (8 samples, 0.01%)</title><rect x="28.3826%" y="1509" width="0.0104%" height="15" fill="rgb(249,183,32)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="28.3826%" y="1493" width="0.0104%" height="15" fill="rgb(218,122,24)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="28.3826%" y="1477" width="0.0104%" height="15" fill="rgb(224,109,18)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1487.50"></text></g><g><title>serde_bytes::serialize (8 samples, 0.01%)</title><rect x="28.3826%" y="1461" width="0.0104%" height="15" fill="rgb(210,68,50)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="28.3826%" y="1445" width="0.0104%" height="15" fill="rgb(212,184,34)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (8 samples, 0.01%)</title><rect x="28.3826%" y="1429" width="0.0104%" height="15" fill="rgb(238,105,48)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1439.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.01%)</title><rect x="28.3826%" y="1413" width="0.0104%" height="15" fill="rgb(222,134,54)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1423.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (8 samples, 0.01%)</title><rect x="28.3826%" y="1397" width="0.0104%" height="15" fill="rgb(246,24,43)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1407.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (8 samples, 0.01%)</title><rect x="28.3826%" y="1381" width="0.0104%" height="15" fill="rgb(227,169,22)" fg:x="21858" fg:w="8"/><text x="28.6326%" y="1391.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (13 samples, 0.02%)</title><rect x="28.4047%" y="1557" width="0.0169%" height="15" fill="rgb(253,152,4)" fg:x="21875" fg:w="13"/><text x="28.6547%" y="1567.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (12 samples, 0.02%)</title><rect x="28.4060%" y="1541" width="0.0156%" height="15" fill="rgb(219,158,36)" fg:x="21876" fg:w="12"/><text x="28.6560%" y="1551.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (12 samples, 0.02%)</title><rect x="28.4060%" y="1525" width="0.0156%" height="15" fill="rgb(251,128,40)" fg:x="21876" fg:w="12"/><text x="28.6560%" y="1535.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (19 samples, 0.02%)</title><rect x="28.3995%" y="1573" width="0.0247%" height="15" fill="rgb(254,101,39)" fg:x="21871" fg:w="19"/><text x="28.6495%" y="1583.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (9 samples, 0.01%)</title><rect x="28.4241%" y="1525" width="0.0117%" height="15" fill="rgb(221,168,40)" fg:x="21890" fg:w="9"/><text x="28.6741%" y="1535.50"></text></g><g><title>move_binary_format::deserializer::load_code (9 samples, 0.01%)</title><rect x="28.4241%" y="1509" width="0.0117%" height="15" fill="rgb(221,14,27)" fg:x="21890" fg:w="9"/><text x="28.6741%" y="1519.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (10 samples, 0.01%)</title><rect x="28.4241%" y="1557" width="0.0130%" height="15" fill="rgb(207,36,43)" fg:x="21890" fg:w="10"/><text x="28.6741%" y="1567.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (10 samples, 0.01%)</title><rect x="28.4241%" y="1541" width="0.0130%" height="15" fill="rgb(240,172,53)" fg:x="21890" fg:w="10"/><text x="28.6741%" y="1551.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (31 samples, 0.04%)</title><rect x="28.3995%" y="1589" width="0.0403%" height="15" fill="rgb(241,138,43)" fg:x="21871" fg:w="31"/><text x="28.6495%" y="1599.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (12 samples, 0.02%)</title><rect x="28.4241%" y="1573" width="0.0156%" height="15" fill="rgb(227,78,19)" fg:x="21890" fg:w="12"/><text x="28.6741%" y="1583.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (38 samples, 0.05%)</title><rect x="28.3930%" y="1685" width="0.0493%" height="15" fill="rgb(215,127,44)" fg:x="21866" fg:w="38"/><text x="28.6430%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (38 samples, 0.05%)</title><rect x="28.3930%" y="1669" width="0.0493%" height="15" fill="rgb(227,13,10)" fg:x="21866" fg:w="38"/><text x="28.6430%" y="1679.50"></text></g><g><title>std::panicking::try (38 samples, 0.05%)</title><rect x="28.3930%" y="1653" width="0.0493%" height="15" fill="rgb(249,177,6)" fg:x="21866" fg:w="38"/><text x="28.6430%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (38 samples, 0.05%)</title><rect x="28.3930%" y="1637" width="0.0493%" height="15" fill="rgb(215,154,26)" fg:x="21866" fg:w="38"/><text x="28.6430%" y="1647.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (38 samples, 0.05%)</title><rect x="28.3930%" y="1621" width="0.0493%" height="15" fill="rgb(250,168,20)" fg:x="21866" fg:w="38"/><text x="28.6430%" y="1631.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (33 samples, 0.04%)</title><rect x="28.3995%" y="1605" width="0.0429%" height="15" fill="rgb(222,53,38)" fg:x="21871" fg:w="33"/><text x="28.6495%" y="1615.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (15 samples, 0.02%)</title><rect x="28.4488%" y="1605" width="0.0195%" height="15" fill="rgb(245,154,5)" fg:x="21909" fg:w="15"/><text x="28.6988%" y="1615.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (15 samples, 0.02%)</title><rect x="28.4488%" y="1589" width="0.0195%" height="15" fill="rgb(214,89,50)" fg:x="21909" fg:w="15"/><text x="28.6988%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (15 samples, 0.02%)</title><rect x="28.4891%" y="1493" width="0.0195%" height="15" fill="rgb(232,73,14)" fg:x="21940" fg:w="15"/><text x="28.7391%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.02%)</title><rect x="28.4891%" y="1477" width="0.0195%" height="15" fill="rgb(230,101,20)" fg:x="21940" fg:w="15"/><text x="28.7391%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (15 samples, 0.02%)</title><rect x="28.4891%" y="1461" width="0.0195%" height="15" fill="rgb(208,56,28)" fg:x="21940" fg:w="15"/><text x="28.7391%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (15 samples, 0.02%)</title><rect x="28.4891%" y="1445" width="0.0195%" height="15" fill="rgb(247,205,22)" fg:x="21940" fg:w="15"/><text x="28.7391%" y="1455.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (35 samples, 0.05%)</title><rect x="28.4709%" y="1557" width="0.0454%" height="15" fill="rgb(252,109,51)" fg:x="21926" fg:w="35"/><text x="28.7209%" y="1567.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (29 samples, 0.04%)</title><rect x="28.4787%" y="1541" width="0.0377%" height="15" fill="rgb(220,40,24)" fg:x="21932" fg:w="29"/><text x="28.7287%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (29 samples, 0.04%)</title><rect x="28.4787%" y="1525" width="0.0377%" height="15" fill="rgb(251,108,7)" fg:x="21932" fg:w="29"/><text x="28.7287%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (21 samples, 0.03%)</title><rect x="28.4891%" y="1509" width="0.0273%" height="15" fill="rgb(238,102,51)" fg:x="21940" fg:w="21"/><text x="28.7391%" y="1519.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (12 samples, 0.02%)</title><rect x="28.5163%" y="1525" width="0.0156%" height="15" fill="rgb(219,149,34)" fg:x="21961" fg:w="12"/><text x="28.7663%" y="1535.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (15 samples, 0.02%)</title><rect x="28.5163%" y="1541" width="0.0195%" height="15" fill="rgb(239,70,0)" fg:x="21961" fg:w="15"/><text x="28.7663%" y="1551.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::abstract_state::AbstractState as move_bytecode_verifier::absint::AbstractDomain&gt;::join (10 samples, 0.01%)</title><rect x="28.5462%" y="1509" width="0.0130%" height="15" fill="rgb(246,214,23)" fg:x="21984" fg:w="10"/><text x="28.7962%" y="1519.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (10 samples, 0.01%)</title><rect x="28.5462%" y="1493" width="0.0130%" height="15" fill="rgb(239,221,51)" fg:x="21984" fg:w="10"/><text x="28.7962%" y="1503.50"></text></g><g><title>&lt;move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="28.5878%" y="1461" width="0.0117%" height="15" fill="rgb(254,62,14)" fg:x="22016" fg:w="9"/><text x="28.8378%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="28.5878%" y="1445" width="0.0117%" height="15" fill="rgb(253,57,33)" fg:x="22016" fg:w="9"/><text x="28.8378%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.01%)</title><rect x="28.5878%" y="1429" width="0.0117%" height="15" fill="rgb(229,34,6)" fg:x="22016" fg:w="9"/><text x="28.8378%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="28.6202%" y="1349" width="0.0104%" height="15" fill="rgb(235,191,23)" fg:x="22041" fg:w="8"/><text x="28.8702%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.02%)</title><rect x="28.6085%" y="1445" width="0.0234%" height="15" fill="rgb(217,207,27)" fg:x="22032" fg:w="18"/><text x="28.8585%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="28.6085%" y="1429" width="0.0234%" height="15" fill="rgb(232,41,44)" fg:x="22032" fg:w="18"/><text x="28.8585%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.02%)</title><rect x="28.6137%" y="1413" width="0.0182%" height="15" fill="rgb(221,188,19)" fg:x="22036" fg:w="14"/><text x="28.8637%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="28.6137%" y="1397" width="0.0182%" height="15" fill="rgb(245,180,45)" fg:x="22036" fg:w="14"/><text x="28.8637%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="28.6137%" y="1381" width="0.0182%" height="15" fill="rgb(250,220,42)" fg:x="22036" fg:w="14"/><text x="28.8637%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="28.6137%" y="1365" width="0.0182%" height="15" fill="rgb(234,16,34)" fg:x="22036" fg:w="14"/><text x="28.8637%" y="1375.50"></text></g><g><title>move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (19 samples, 0.02%)</title><rect x="28.6085%" y="1461" width="0.0247%" height="15" fill="rgb(233,217,23)" fg:x="22032" fg:w="19"/><text x="28.8585%" y="1471.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (36 samples, 0.05%)</title><rect x="28.5878%" y="1477" width="0.0467%" height="15" fill="rgb(209,22,46)" fg:x="22016" fg:w="36"/><text x="28.8378%" y="1487.50"></text></g><g><title>move_bytecode_verifier::reference_safety::call (10 samples, 0.01%)</title><rect x="28.6358%" y="1477" width="0.0130%" height="15" fill="rgb(213,101,18)" fg:x="22053" fg:w="10"/><text x="28.8858%" y="1487.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field (13 samples, 0.02%)</title><rect x="28.6540%" y="1461" width="0.0169%" height="15" fill="rgb(215,179,52)" fg:x="22067" fg:w="13"/><text x="28.9040%" y="1471.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::release (8 samples, 0.01%)</title><rect x="28.6605%" y="1445" width="0.0104%" height="15" fill="rgb(223,50,25)" fg:x="22072" fg:w="8"/><text x="28.9105%" y="1455.50"></text></g><g><title>move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (8 samples, 0.01%)</title><rect x="28.6605%" y="1429" width="0.0104%" height="15" fill="rgb(224,51,44)" fg:x="22072" fg:w="8"/><text x="28.9105%" y="1439.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (84 samples, 0.11%)</title><rect x="28.5826%" y="1493" width="0.1091%" height="15" fill="rgb(224,13,54)" fg:x="22012" fg:w="84"/><text x="28.8326%" y="1503.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (33 samples, 0.04%)</title><rect x="28.6488%" y="1477" width="0.0429%" height="15" fill="rgb(219,58,47)" fg:x="22063" fg:w="33"/><text x="28.8988%" y="1487.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (130 samples, 0.17%)</title><rect x="28.5358%" y="1541" width="0.1688%" height="15" fill="rgb(246,124,34)" fg:x="21976" fg:w="130"/><text x="28.7858%" y="1551.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (130 samples, 0.17%)</title><rect x="28.5358%" y="1525" width="0.1688%" height="15" fill="rgb(245,109,25)" fg:x="21976" fg:w="130"/><text x="28.7858%" y="1535.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (95 samples, 0.12%)</title><rect x="28.5813%" y="1509" width="0.1234%" height="15" fill="rgb(235,48,23)" fg:x="22011" fg:w="95"/><text x="28.8313%" y="1519.50"></text></g><g><title>move_bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify (10 samples, 0.01%)</title><rect x="28.7046%" y="1541" width="0.0130%" height="15" fill="rgb(229,203,36)" fg:x="22106" fg:w="10"/><text x="28.9546%" y="1551.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (173 samples, 0.22%)</title><rect x="28.5163%" y="1557" width="0.2246%" height="15" fill="rgb(234,180,9)" fg:x="21961" fg:w="173"/><text x="28.7663%" y="1567.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (18 samples, 0.02%)</title><rect x="28.7176%" y="1541" width="0.0234%" height="15" fill="rgb(228,98,45)" fg:x="22116" fg:w="18"/><text x="28.9676%" y="1551.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (13 samples, 0.02%)</title><rect x="28.7241%" y="1525" width="0.0169%" height="15" fill="rgb(240,24,36)" fg:x="22121" fg:w="13"/><text x="28.9741%" y="1535.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (15 samples, 0.02%)</title><rect x="28.7423%" y="1541" width="0.0195%" height="15" fill="rgb(227,154,19)" fg:x="22135" fg:w="15"/><text x="28.9923%" y="1551.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (15 samples, 0.02%)</title><rect x="28.7423%" y="1525" width="0.0195%" height="15" fill="rgb(231,2,48)" fg:x="22135" fg:w="15"/><text x="28.9923%" y="1535.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (236 samples, 0.31%)</title><rect x="28.4683%" y="1605" width="0.3064%" height="15" fill="rgb(219,216,0)" fg:x="21924" fg:w="236"/><text x="28.7183%" y="1615.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (236 samples, 0.31%)</title><rect x="28.4683%" y="1589" width="0.3064%" height="15" fill="rgb(251,88,0)" fg:x="21924" fg:w="236"/><text x="28.7183%" y="1599.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (236 samples, 0.31%)</title><rect x="28.4683%" y="1573" width="0.3064%" height="15" fill="rgb(242,45,45)" fg:x="21924" fg:w="236"/><text x="28.7183%" y="1583.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (26 samples, 0.03%)</title><rect x="28.7410%" y="1557" width="0.0338%" height="15" fill="rgb(218,149,45)" fg:x="22134" fg:w="26"/><text x="28.9910%" y="1567.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_reducibility (10 samples, 0.01%)</title><rect x="28.7618%" y="1541" width="0.0130%" height="15" fill="rgb(247,194,10)" fg:x="22150" fg:w="10"/><text x="29.0118%" y="1551.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module (9 samples, 0.01%)</title><rect x="28.7838%" y="1605" width="0.0117%" height="15" fill="rgb(234,33,37)" fg:x="22167" fg:w="9"/><text x="29.0338%" y="1615.50"></text></g><g><title>move_bytecode_verifier::signature::SignatureChecker::verify_module_impl (9 samples, 0.01%)</title><rect x="28.7838%" y="1589" width="0.0117%" height="15" fill="rgb(218,61,13)" fg:x="22167" fg:w="9"/><text x="29.0338%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (322 samples, 0.42%)</title><rect x="28.3826%" y="1701" width="0.4181%" height="15" fill="rgb(210,80,52)" fg:x="21858" fg:w="322"/><text x="28.6326%" y="1711.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (276 samples, 0.36%)</title><rect x="28.4423%" y="1685" width="0.3584%" height="15" fill="rgb(218,203,27)" fg:x="21904" fg:w="276"/><text x="28.6923%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (276 samples, 0.36%)</title><rect x="28.4423%" y="1669" width="0.3584%" height="15" fill="rgb(209,126,33)" fg:x="21904" fg:w="276"/><text x="28.6923%" y="1679.50"></text></g><g><title>std::panicking::try (276 samples, 0.36%)</title><rect x="28.4423%" y="1653" width="0.3584%" height="15" fill="rgb(234,173,41)" fg:x="21904" fg:w="276"/><text x="28.6923%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (276 samples, 0.36%)</title><rect x="28.4423%" y="1637" width="0.3584%" height="15" fill="rgb(228,166,9)" fg:x="21904" fg:w="276"/><text x="28.6923%" y="1647.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (276 samples, 0.36%)</title><rect x="28.4423%" y="1621" width="0.3584%" height="15" fill="rgb(208,124,43)" fg:x="21904" fg:w="276"/><text x="28.6923%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Module::new (10 samples, 0.01%)</title><rect x="28.8007%" y="1685" width="0.0130%" height="15" fill="rgb(212,154,38)" fg:x="22180" fg:w="10"/><text x="29.0507%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Module::new::{{closure}} (10 samples, 0.01%)</title><rect x="28.8007%" y="1669" width="0.0130%" height="15" fill="rgb(246,179,35)" fg:x="22180" fg:w="10"/><text x="29.0507%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="28.8228%" y="1653" width="0.0104%" height="15" fill="rgb(251,3,50)" fg:x="22197" fg:w="8"/><text x="29.0728%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="28.8228%" y="1637" width="0.0104%" height="15" fill="rgb(219,96,8)" fg:x="22197" fg:w="8"/><text x="29.0728%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="28.8228%" y="1621" width="0.0104%" height="15" fill="rgb(251,216,33)" fg:x="22197" fg:w="8"/><text x="29.0728%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="28.8228%" y="1605" width="0.0104%" height="15" fill="rgb(243,145,29)" fg:x="22197" fg:w="8"/><text x="29.0728%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Function::new (11 samples, 0.01%)</title><rect x="28.8228%" y="1669" width="0.0143%" height="15" fill="rgb(210,75,20)" fg:x="22197" fg:w="11"/><text x="29.0728%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (489 samples, 0.63%)</title><rect x="28.2060%" y="1733" width="0.6350%" height="15" fill="rgb(235,56,8)" fg:x="21722" fg:w="489"/><text x="28.4560%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (485 samples, 0.63%)</title><rect x="28.2112%" y="1717" width="0.6298%" height="15" fill="rgb(226,175,49)" fg:x="21726" fg:w="485"/><text x="28.4612%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (31 samples, 0.04%)</title><rect x="28.8007%" y="1701" width="0.0403%" height="15" fill="rgb(242,204,23)" fg:x="22180" fg:w="31"/><text x="29.0507%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (21 samples, 0.03%)</title><rect x="28.8137%" y="1685" width="0.0273%" height="15" fill="rgb(225,104,24)" fg:x="22190" fg:w="21"/><text x="29.0637%" y="1695.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (8 samples, 0.01%)</title><rect x="28.8410%" y="1717" width="0.0104%" height="15" fill="rgb(253,34,1)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (8 samples, 0.01%)</title><rect x="28.8410%" y="1701" width="0.0104%" height="15" fill="rgb(233,199,23)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1711.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (8 samples, 0.01%)</title><rect x="28.8410%" y="1685" width="0.0104%" height="15" fill="rgb(247,7,51)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1695.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (8 samples, 0.01%)</title><rect x="28.8410%" y="1669" width="0.0104%" height="15" fill="rgb(214,146,12)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1679.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (8 samples, 0.01%)</title><rect x="28.8410%" y="1653" width="0.0104%" height="15" fill="rgb(234,181,43)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="28.8410%" y="1637" width="0.0104%" height="15" fill="rgb(239,148,6)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1647.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="28.8410%" y="1621" width="0.0104%" height="15" fill="rgb(206,151,17)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1631.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (8 samples, 0.01%)</title><rect x="28.8410%" y="1605" width="0.0104%" height="15" fill="rgb(213,215,10)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1615.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (8 samples, 0.01%)</title><rect x="28.8410%" y="1589" width="0.0104%" height="15" fill="rgb(215,220,44)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1599.50"></text></g><g><title>bcs::ser::serialize_into (8 samples, 0.01%)</title><rect x="28.8410%" y="1573" width="0.0104%" height="15" fill="rgb(245,205,37)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.01%)</title><rect x="28.8410%" y="1557" width="0.0104%" height="15" fill="rgb(245,130,43)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1567.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (8 samples, 0.01%)</title><rect x="28.8410%" y="1541" width="0.0104%" height="15" fill="rgb(231,227,38)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="28.8410%" y="1525" width="0.0104%" height="15" fill="rgb(233,185,4)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="28.8410%" y="1509" width="0.0104%" height="15" fill="rgb(224,154,43)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1519.50"></text></g><g><title>serde_bytes::serialize (8 samples, 0.01%)</title><rect x="28.8410%" y="1493" width="0.0104%" height="15" fill="rgb(235,156,15)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="28.8410%" y="1477" width="0.0104%" height="15" fill="rgb(211,55,43)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (8 samples, 0.01%)</title><rect x="28.8410%" y="1461" width="0.0104%" height="15" fill="rgb(247,149,40)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1471.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.01%)</title><rect x="28.8410%" y="1445" width="0.0104%" height="15" fill="rgb(232,171,16)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1455.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (8 samples, 0.01%)</title><rect x="28.8410%" y="1429" width="0.0104%" height="15" fill="rgb(215,117,49)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1439.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (8 samples, 0.01%)</title><rect x="28.8410%" y="1413" width="0.0104%" height="15" fill="rgb(246,194,11)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1423.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (8 samples, 0.01%)</title><rect x="28.8410%" y="1397" width="0.0104%" height="15" fill="rgb(242,101,44)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1407.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (8 samples, 0.01%)</title><rect x="28.8410%" y="1381" width="0.0104%" height="15" fill="rgb(226,174,6)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1391.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (8 samples, 0.01%)</title><rect x="28.8410%" y="1365" width="0.0104%" height="15" fill="rgb(213,150,20)" fg:x="22211" fg:w="8"/><text x="29.0910%" y="1375.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (14 samples, 0.02%)</title><rect x="28.8578%" y="1605" width="0.0182%" height="15" fill="rgb(222,124,42)" fg:x="22224" fg:w="14"/><text x="29.1078%" y="1615.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (23 samples, 0.03%)</title><rect x="28.8578%" y="1621" width="0.0299%" height="15" fill="rgb(250,19,47)" fg:x="22224" fg:w="23"/><text x="29.1078%" y="1631.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (9 samples, 0.01%)</title><rect x="28.8760%" y="1605" width="0.0117%" height="15" fill="rgb(241,217,19)" fg:x="22238" fg:w="9"/><text x="29.1260%" y="1615.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (9 samples, 0.01%)</title><rect x="28.8760%" y="1589" width="0.0117%" height="15" fill="rgb(207,210,34)" fg:x="22238" fg:w="9"/><text x="29.1260%" y="1599.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (9 samples, 0.01%)</title><rect x="28.8760%" y="1573" width="0.0117%" height="15" fill="rgb(244,45,4)" fg:x="22238" fg:w="9"/><text x="29.1260%" y="1583.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (8 samples, 0.01%)</title><rect x="28.8773%" y="1557" width="0.0104%" height="15" fill="rgb(252,134,50)" fg:x="22239" fg:w="8"/><text x="29.1273%" y="1567.50"></text></g><g><title>move_binary_format::deserializer::load_code (8 samples, 0.01%)</title><rect x="28.8773%" y="1541" width="0.0104%" height="15" fill="rgb(238,74,2)" fg:x="22239" fg:w="8"/><text x="29.1273%" y="1551.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (29 samples, 0.04%)</title><rect x="28.8513%" y="1717" width="0.0377%" height="15" fill="rgb(226,58,46)" fg:x="22219" fg:w="29"/><text x="29.1013%" y="1727.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.04%)</title><rect x="28.8513%" y="1701" width="0.0377%" height="15" fill="rgb(232,83,35)" fg:x="22219" fg:w="29"/><text x="29.1013%" y="1711.50"></text></g><g><title>std::panicking::try (29 samples, 0.04%)</title><rect x="28.8513%" y="1685" width="0.0377%" height="15" fill="rgb(212,148,47)" fg:x="22219" fg:w="29"/><text x="29.1013%" y="1695.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.04%)</title><rect x="28.8513%" y="1669" width="0.0377%" height="15" fill="rgb(235,29,1)" fg:x="22219" fg:w="29"/><text x="29.1013%" y="1679.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (29 samples, 0.04%)</title><rect x="28.8513%" y="1653" width="0.0377%" height="15" fill="rgb(247,55,37)" fg:x="22219" fg:w="29"/><text x="29.1013%" y="1663.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (24 samples, 0.03%)</title><rect x="28.8578%" y="1637" width="0.0312%" height="15" fill="rgb(222,48,3)" fg:x="22224" fg:w="24"/><text x="29.1078%" y="1647.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (12 samples, 0.02%)</title><rect x="28.9163%" y="1509" width="0.0156%" height="15" fill="rgb(234,21,33)" fg:x="22269" fg:w="12"/><text x="29.1663%" y="1519.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field (15 samples, 0.02%)</title><rect x="28.9435%" y="1493" width="0.0195%" height="15" fill="rgb(247,178,53)" fg:x="22290" fg:w="15"/><text x="29.1935%" y="1503.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::release (8 samples, 0.01%)</title><rect x="28.9526%" y="1477" width="0.0104%" height="15" fill="rgb(225,75,7)" fg:x="22297" fg:w="8"/><text x="29.2026%" y="1487.50"></text></g><g><title>move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (8 samples, 0.01%)</title><rect x="28.9526%" y="1461" width="0.0104%" height="15" fill="rgb(219,199,7)" fg:x="22297" fg:w="8"/><text x="29.2026%" y="1471.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (52 samples, 0.07%)</title><rect x="28.9150%" y="1525" width="0.0675%" height="15" fill="rgb(209,93,42)" fg:x="22268" fg:w="52"/><text x="29.1650%" y="1535.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (32 samples, 0.04%)</title><rect x="28.9409%" y="1509" width="0.0416%" height="15" fill="rgb(240,175,17)" fg:x="22288" fg:w="32"/><text x="29.1909%" y="1519.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (71 samples, 0.09%)</title><rect x="28.8942%" y="1573" width="0.0922%" height="15" fill="rgb(232,106,7)" fg:x="22252" fg:w="71"/><text x="29.1442%" y="1583.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (70 samples, 0.09%)</title><rect x="28.8955%" y="1557" width="0.0909%" height="15" fill="rgb(242,106,43)" fg:x="22253" fg:w="70"/><text x="29.1455%" y="1567.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (57 samples, 0.07%)</title><rect x="28.9124%" y="1541" width="0.0740%" height="15" fill="rgb(242,61,37)" fg:x="22266" fg:w="57"/><text x="29.1624%" y="1551.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (83 samples, 0.11%)</title><rect x="28.8916%" y="1589" width="0.1078%" height="15" fill="rgb(205,72,10)" fg:x="22250" fg:w="83"/><text x="29.1416%" y="1599.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (10 samples, 0.01%)</title><rect x="28.9864%" y="1573" width="0.0130%" height="15" fill="rgb(214,184,36)" fg:x="22323" fg:w="10"/><text x="29.2364%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (96 samples, 0.12%)</title><rect x="28.8890%" y="1637" width="0.1247%" height="15" fill="rgb(206,107,18)" fg:x="22248" fg:w="96"/><text x="29.1390%" y="1647.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (96 samples, 0.12%)</title><rect x="28.8890%" y="1621" width="0.1247%" height="15" fill="rgb(210,75,5)" fg:x="22248" fg:w="96"/><text x="29.1390%" y="1631.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (96 samples, 0.12%)</title><rect x="28.8890%" y="1605" width="0.1247%" height="15" fill="rgb(205,3,19)" fg:x="22248" fg:w="96"/><text x="29.1390%" y="1615.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (11 samples, 0.01%)</title><rect x="28.9994%" y="1589" width="0.0143%" height="15" fill="rgb(207,181,42)" fg:x="22333" fg:w="11"/><text x="29.2494%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (136 samples, 0.18%)</title><rect x="28.8410%" y="1733" width="0.1766%" height="15" fill="rgb(229,179,43)" fg:x="22211" fg:w="136"/><text x="29.0910%" y="1743.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (99 samples, 0.13%)</title><rect x="28.8890%" y="1717" width="0.1286%" height="15" fill="rgb(246,95,30)" fg:x="22248" fg:w="99"/><text x="29.1390%" y="1727.50"></text></g><g><title>std::panic::catch_unwind (99 samples, 0.13%)</title><rect x="28.8890%" y="1701" width="0.1286%" height="15" fill="rgb(234,144,45)" fg:x="22248" fg:w="99"/><text x="29.1390%" y="1711.50"></text></g><g><title>std::panicking::try (99 samples, 0.13%)</title><rect x="28.8890%" y="1685" width="0.1286%" height="15" fill="rgb(250,54,25)" fg:x="22248" fg:w="99"/><text x="29.1390%" y="1695.50"></text></g><g><title>std::panicking::try::do_call (99 samples, 0.13%)</title><rect x="28.8890%" y="1669" width="0.1286%" height="15" fill="rgb(215,195,40)" fg:x="22248" fg:w="99"/><text x="29.1390%" y="1679.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (99 samples, 0.13%)</title><rect x="28.8890%" y="1653" width="0.1286%" height="15" fill="rgb(233,188,42)" fg:x="22248" fg:w="99"/><text x="29.1390%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="29.0331%" y="1685" width="0.0117%" height="15" fill="rgb(247,227,35)" fg:x="22359" fg:w="9"/><text x="29.2831%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="29.0331%" y="1669" width="0.0117%" height="15" fill="rgb(249,124,27)" fg:x="22359" fg:w="9"/><text x="29.2831%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="29.0331%" y="1653" width="0.0117%" height="15" fill="rgb(219,207,25)" fg:x="22359" fg:w="9"/><text x="29.2831%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="29.0331%" y="1637" width="0.0117%" height="15" fill="rgb(241,216,47)" fg:x="22359" fg:w="9"/><text x="29.2831%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Function::new (11 samples, 0.01%)</title><rect x="29.0331%" y="1701" width="0.0143%" height="15" fill="rgb(233,82,50)" fg:x="22359" fg:w="11"/><text x="29.2831%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (649 samples, 0.84%)</title><rect x="28.2060%" y="1765" width="0.8427%" height="15" fill="rgb(232,63,2)" fg:x="21722" fg:w="649"/><text x="28.4560%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (649 samples, 0.84%)</title><rect x="28.2060%" y="1749" width="0.8427%" height="15" fill="rgb(236,184,28)" fg:x="21722" fg:w="649"/><text x="28.4560%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (24 samples, 0.03%)</title><rect x="29.0176%" y="1733" width="0.0312%" height="15" fill="rgb(254,63,27)" fg:x="22347" fg:w="24"/><text x="29.2676%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (20 samples, 0.03%)</title><rect x="29.0227%" y="1717" width="0.0260%" height="15" fill="rgb(253,106,28)" fg:x="22351" fg:w="20"/><text x="29.2727%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (12 samples, 0.02%)</title><rect x="29.0487%" y="1765" width="0.0156%" height="15" fill="rgb(225,141,39)" fg:x="22371" fg:w="12"/><text x="29.2987%" y="1775.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (10 samples, 0.01%)</title><rect x="29.0513%" y="1749" width="0.0130%" height="15" fill="rgb(222,157,20)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="29.0513%" y="1733" width="0.0130%" height="15" fill="rgb(210,190,9)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1743.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="29.0513%" y="1717" width="0.0130%" height="15" fill="rgb(242,167,7)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="29.0513%" y="1701" width="0.0130%" height="15" fill="rgb(227,82,41)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1711.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (10 samples, 0.01%)</title><rect x="29.0513%" y="1685" width="0.0130%" height="15" fill="rgb(222,131,13)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1695.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (10 samples, 0.01%)</title><rect x="29.0513%" y="1669" width="0.0130%" height="15" fill="rgb(221,98,26)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (10 samples, 0.01%)</title><rect x="29.0513%" y="1653" width="0.0130%" height="15" fill="rgb(251,63,52)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1663.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (10 samples, 0.01%)</title><rect x="29.0513%" y="1637" width="0.0130%" height="15" fill="rgb(246,25,43)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1647.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (10 samples, 0.01%)</title><rect x="29.0513%" y="1621" width="0.0130%" height="15" fill="rgb(247,167,15)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1631.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (10 samples, 0.01%)</title><rect x="29.0513%" y="1605" width="0.0130%" height="15" fill="rgb(240,104,42)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1615.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (10 samples, 0.01%)</title><rect x="29.0513%" y="1589" width="0.0130%" height="15" fill="rgb(224,54,6)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1599.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (10 samples, 0.01%)</title><rect x="29.0513%" y="1573" width="0.0130%" height="15" fill="rgb(244,108,35)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1583.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (10 samples, 0.01%)</title><rect x="29.0513%" y="1557" width="0.0130%" height="15" fill="rgb(216,154,2)" fg:x="22373" fg:w="10"/><text x="29.3013%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (662 samples, 0.86%)</title><rect x="28.2060%" y="1845" width="0.8596%" height="15" fill="rgb(222,8,47)" fg:x="21722" fg:w="662"/><text x="28.4560%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (662 samples, 0.86%)</title><rect x="28.2060%" y="1829" width="0.8596%" height="15" fill="rgb(252,93,1)" fg:x="21722" fg:w="662"/><text x="28.4560%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (662 samples, 0.86%)</title><rect x="28.2060%" y="1813" width="0.8596%" height="15" fill="rgb(223,226,51)" fg:x="21722" fg:w="662"/><text x="28.4560%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (662 samples, 0.86%)</title><rect x="28.2060%" y="1797" width="0.8596%" height="15" fill="rgb(206,147,9)" fg:x="21722" fg:w="662"/><text x="28.4560%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (662 samples, 0.86%)</title><rect x="28.2060%" y="1781" width="0.8596%" height="15" fill="rgb(248,180,41)" fg:x="21722" fg:w="662"/><text x="28.4560%" y="1791.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (11 samples, 0.01%)</title><rect x="29.0838%" y="1525" width="0.0143%" height="15" fill="rgb(209,47,50)" fg:x="22398" fg:w="11"/><text x="29.3338%" y="1535.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (13 samples, 0.02%)</title><rect x="29.0825%" y="1557" width="0.0169%" height="15" fill="rgb(243,65,31)" fg:x="22397" fg:w="13"/><text x="29.3325%" y="1567.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (12 samples, 0.02%)</title><rect x="29.0838%" y="1541" width="0.0156%" height="15" fill="rgb(228,128,1)" fg:x="22398" fg:w="12"/><text x="29.3338%" y="1551.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (14 samples, 0.02%)</title><rect x="29.0825%" y="1573" width="0.0182%" height="15" fill="rgb(231,192,16)" fg:x="22397" fg:w="14"/><text x="29.3325%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (18 samples, 0.02%)</title><rect x="29.0812%" y="1589" width="0.0234%" height="15" fill="rgb(224,26,40)" fg:x="22396" fg:w="18"/><text x="29.3312%" y="1599.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (24 samples, 0.03%)</title><rect x="29.0773%" y="1637" width="0.0312%" height="15" fill="rgb(214,192,17)" fg:x="22393" fg:w="24"/><text x="29.3273%" y="1647.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (24 samples, 0.03%)</title><rect x="29.0773%" y="1621" width="0.0312%" height="15" fill="rgb(225,147,18)" fg:x="22393" fg:w="24"/><text x="29.3273%" y="1631.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (24 samples, 0.03%)</title><rect x="29.0773%" y="1605" width="0.0312%" height="15" fill="rgb(205,35,11)" fg:x="22393" fg:w="24"/><text x="29.3273%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (30 samples, 0.04%)</title><rect x="29.0708%" y="1733" width="0.0390%" height="15" fill="rgb(242,40,42)" fg:x="22388" fg:w="30"/><text x="29.3208%" y="1743.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (25 samples, 0.03%)</title><rect x="29.0773%" y="1717" width="0.0325%" height="15" fill="rgb(250,170,13)" fg:x="22393" fg:w="25"/><text x="29.3273%" y="1727.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="29.0773%" y="1701" width="0.0325%" height="15" fill="rgb(240,161,28)" fg:x="22393" fg:w="25"/><text x="29.3273%" y="1711.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="29.0773%" y="1685" width="0.0325%" height="15" fill="rgb(245,179,12)" fg:x="22393" fg:w="25"/><text x="29.3273%" y="1695.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="29.0773%" y="1669" width="0.0325%" height="15" fill="rgb(250,92,32)" fg:x="22393" fg:w="25"/><text x="29.3273%" y="1679.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (25 samples, 0.03%)</title><rect x="29.0773%" y="1653" width="0.0325%" height="15" fill="rgb(233,10,40)" fg:x="22393" fg:w="25"/><text x="29.3273%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (41 samples, 0.05%)</title><rect x="29.0656%" y="1765" width="0.0532%" height="15" fill="rgb(217,98,1)" fg:x="22384" fg:w="41"/><text x="29.3156%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (41 samples, 0.05%)</title><rect x="29.0656%" y="1749" width="0.0532%" height="15" fill="rgb(238,202,7)" fg:x="22384" fg:w="41"/><text x="29.3156%" y="1759.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (9 samples, 0.01%)</title><rect x="29.1279%" y="1589" width="0.0117%" height="15" fill="rgb(222,91,3)" fg:x="22432" fg:w="9"/><text x="29.3779%" y="1599.50"></text></g><g><title>move_binary_format::deserializer::load_code (9 samples, 0.01%)</title><rect x="29.1279%" y="1573" width="0.0117%" height="15" fill="rgb(211,170,49)" fg:x="22432" fg:w="9"/><text x="29.3779%" y="1583.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (15 samples, 0.02%)</title><rect x="29.1214%" y="1749" width="0.0195%" height="15" fill="rgb(253,139,18)" fg:x="22427" fg:w="15"/><text x="29.3714%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.02%)</title><rect x="29.1214%" y="1733" width="0.0195%" height="15" fill="rgb(222,4,43)" fg:x="22427" fg:w="15"/><text x="29.3714%" y="1743.50"></text></g><g><title>std::panicking::try (15 samples, 0.02%)</title><rect x="29.1214%" y="1717" width="0.0195%" height="15" fill="rgb(207,205,12)" fg:x="22427" fg:w="15"/><text x="29.3714%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.02%)</title><rect x="29.1214%" y="1701" width="0.0195%" height="15" fill="rgb(216,159,46)" fg:x="22427" fg:w="15"/><text x="29.3714%" y="1711.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (15 samples, 0.02%)</title><rect x="29.1214%" y="1685" width="0.0195%" height="15" fill="rgb(236,115,1)" fg:x="22427" fg:w="15"/><text x="29.3714%" y="1695.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (15 samples, 0.02%)</title><rect x="29.1214%" y="1669" width="0.0195%" height="15" fill="rgb(251,35,33)" fg:x="22427" fg:w="15"/><text x="29.3714%" y="1679.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (15 samples, 0.02%)</title><rect x="29.1214%" y="1653" width="0.0195%" height="15" fill="rgb(248,62,51)" fg:x="22427" fg:w="15"/><text x="29.3714%" y="1663.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (10 samples, 0.01%)</title><rect x="29.1279%" y="1637" width="0.0130%" height="15" fill="rgb(254,180,19)" fg:x="22432" fg:w="10"/><text x="29.3779%" y="1647.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (10 samples, 0.01%)</title><rect x="29.1279%" y="1621" width="0.0130%" height="15" fill="rgb(217,100,32)" fg:x="22432" fg:w="10"/><text x="29.3779%" y="1631.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (10 samples, 0.01%)</title><rect x="29.1279%" y="1605" width="0.0130%" height="15" fill="rgb(224,71,22)" fg:x="22432" fg:w="10"/><text x="29.3779%" y="1615.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (8 samples, 0.01%)</title><rect x="29.1474%" y="1541" width="0.0104%" height="15" fill="rgb(251,185,33)" fg:x="22447" fg:w="8"/><text x="29.3974%" y="1551.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (20 samples, 0.03%)</title><rect x="29.1422%" y="1589" width="0.0260%" height="15" fill="rgb(209,75,48)" fg:x="22443" fg:w="20"/><text x="29.3922%" y="1599.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (17 samples, 0.02%)</title><rect x="29.1461%" y="1573" width="0.0221%" height="15" fill="rgb(253,190,16)" fg:x="22446" fg:w="17"/><text x="29.3961%" y="1583.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (17 samples, 0.02%)</title><rect x="29.1461%" y="1557" width="0.0221%" height="15" fill="rgb(226,140,1)" fg:x="22446" fg:w="17"/><text x="29.3961%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (39 samples, 0.05%)</title><rect x="29.1188%" y="1765" width="0.0506%" height="15" fill="rgb(206,75,30)" fg:x="22425" fg:w="39"/><text x="29.3688%" y="1775.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (22 samples, 0.03%)</title><rect x="29.1409%" y="1749" width="0.0286%" height="15" fill="rgb(231,208,37)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="29.1409%" y="1733" width="0.0286%" height="15" fill="rgb(238,136,40)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1743.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="29.1409%" y="1717" width="0.0286%" height="15" fill="rgb(247,137,17)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="29.1409%" y="1701" width="0.0286%" height="15" fill="rgb(240,60,40)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1711.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (22 samples, 0.03%)</title><rect x="29.1409%" y="1685" width="0.0286%" height="15" fill="rgb(236,68,50)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1695.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (22 samples, 0.03%)</title><rect x="29.1409%" y="1669" width="0.0286%" height="15" fill="rgb(230,42,12)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (22 samples, 0.03%)</title><rect x="29.1409%" y="1653" width="0.0286%" height="15" fill="rgb(219,16,16)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1663.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (22 samples, 0.03%)</title><rect x="29.1409%" y="1637" width="0.0286%" height="15" fill="rgb(220,38,35)" fg:x="22442" fg:w="22"/><text x="29.3909%" y="1647.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (21 samples, 0.03%)</title><rect x="29.1422%" y="1621" width="0.0273%" height="15" fill="rgb(228,33,1)" fg:x="22443" fg:w="21"/><text x="29.3922%" y="1631.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (21 samples, 0.03%)</title><rect x="29.1422%" y="1605" width="0.0273%" height="15" fill="rgb(241,46,31)" fg:x="22443" fg:w="21"/><text x="29.3922%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="29.1734%" y="1733" width="0.0117%" height="15" fill="rgb(232,58,20)" fg:x="22467" fg:w="9"/><text x="29.4234%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="29.1734%" y="1717" width="0.0117%" height="15" fill="rgb(206,228,53)" fg:x="22467" fg:w="9"/><text x="29.4234%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.01%)</title><rect x="29.1734%" y="1701" width="0.0117%" height="15" fill="rgb(206,88,33)" fg:x="22467" fg:w="9"/><text x="29.4234%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (9 samples, 0.01%)</title><rect x="29.1734%" y="1685" width="0.0117%" height="15" fill="rgb(238,69,7)" fg:x="22467" fg:w="9"/><text x="29.4234%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="29.1734%" y="1669" width="0.0117%" height="15" fill="rgb(250,21,46)" fg:x="22467" fg:w="9"/><text x="29.4234%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="29.1734%" y="1653" width="0.0117%" height="15" fill="rgb(215,212,21)" fg:x="22467" fg:w="9"/><text x="29.4234%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="29.1747%" y="1637" width="0.0104%" height="15" fill="rgb(211,35,12)" fg:x="22468" fg:w="8"/><text x="29.4247%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="29.1747%" y="1621" width="0.0104%" height="15" fill="rgb(231,184,16)" fg:x="22468" fg:w="8"/><text x="29.4247%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (757 samples, 0.98%)</title><rect x="28.2060%" y="1877" width="0.9830%" height="15" fill="rgb(242,140,15)" fg:x="21722" fg:w="757"/><text x="28.4560%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (757 samples, 0.98%)</title><rect x="28.2060%" y="1861" width="0.9830%" height="15" fill="rgb(220,37,14)" fg:x="21722" fg:w="757"/><text x="28.4560%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (95 samples, 0.12%)</title><rect x="29.0656%" y="1845" width="0.1234%" height="15" fill="rgb(223,146,22)" fg:x="22384" fg:w="95"/><text x="29.3156%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (95 samples, 0.12%)</title><rect x="29.0656%" y="1829" width="0.1234%" height="15" fill="rgb(216,132,15)" fg:x="22384" fg:w="95"/><text x="29.3156%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (95 samples, 0.12%)</title><rect x="29.0656%" y="1813" width="0.1234%" height="15" fill="rgb(248,83,5)" fg:x="22384" fg:w="95"/><text x="29.3156%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (95 samples, 0.12%)</title><rect x="29.0656%" y="1797" width="0.1234%" height="15" fill="rgb(231,206,48)" fg:x="22384" fg:w="95"/><text x="29.3156%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (95 samples, 0.12%)</title><rect x="29.0656%" y="1781" width="0.1234%" height="15" fill="rgb(253,185,37)" fg:x="22384" fg:w="95"/><text x="29.3156%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (15 samples, 0.02%)</title><rect x="29.1695%" y="1765" width="0.0195%" height="15" fill="rgb(208,21,44)" fg:x="22464" fg:w="15"/><text x="29.4195%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (12 samples, 0.02%)</title><rect x="29.1734%" y="1749" width="0.0156%" height="15" fill="rgb(236,125,4)" fg:x="22467" fg:w="12"/><text x="29.4234%" y="1759.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (9 samples, 0.01%)</title><rect x="29.1967%" y="1637" width="0.0117%" height="15" fill="rgb(226,134,25)" fg:x="22485" fg:w="9"/><text x="29.4467%" y="1647.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (18 samples, 0.02%)</title><rect x="29.1942%" y="1749" width="0.0234%" height="15" fill="rgb(250,201,12)" fg:x="22483" fg:w="18"/><text x="29.4442%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="29.1942%" y="1733" width="0.0234%" height="15" fill="rgb(225,92,18)" fg:x="22483" fg:w="18"/><text x="29.4442%" y="1743.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="29.1942%" y="1717" width="0.0234%" height="15" fill="rgb(227,35,22)" fg:x="22483" fg:w="18"/><text x="29.4442%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="29.1942%" y="1701" width="0.0234%" height="15" fill="rgb(214,180,52)" fg:x="22483" fg:w="18"/><text x="29.4442%" y="1711.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (18 samples, 0.02%)</title><rect x="29.1942%" y="1685" width="0.0234%" height="15" fill="rgb(233,55,38)" fg:x="22483" fg:w="18"/><text x="29.4442%" y="1695.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (16 samples, 0.02%)</title><rect x="29.1967%" y="1669" width="0.0208%" height="15" fill="rgb(249,171,43)" fg:x="22485" fg:w="16"/><text x="29.4467%" y="1679.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (16 samples, 0.02%)</title><rect x="29.1967%" y="1653" width="0.0208%" height="15" fill="rgb(239,87,2)" fg:x="22485" fg:w="16"/><text x="29.4467%" y="1663.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (8 samples, 0.01%)</title><rect x="29.2292%" y="1605" width="0.0104%" height="15" fill="rgb(248,141,5)" fg:x="22510" fg:w="8"/><text x="29.4792%" y="1615.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (8 samples, 0.01%)</title><rect x="29.2409%" y="1541" width="0.0104%" height="15" fill="rgb(238,33,42)" fg:x="22519" fg:w="8"/><text x="29.4909%" y="1551.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (18 samples, 0.02%)</title><rect x="29.2409%" y="1557" width="0.0234%" height="15" fill="rgb(231,57,19)" fg:x="22519" fg:w="18"/><text x="29.4909%" y="1567.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (21 samples, 0.03%)</title><rect x="29.2396%" y="1605" width="0.0273%" height="15" fill="rgb(214,78,53)" fg:x="22518" fg:w="21"/><text x="29.4896%" y="1615.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (21 samples, 0.03%)</title><rect x="29.2396%" y="1589" width="0.0273%" height="15" fill="rgb(206,132,29)" fg:x="22518" fg:w="21"/><text x="29.4896%" y="1599.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (21 samples, 0.03%)</title><rect x="29.2396%" y="1573" width="0.0273%" height="15" fill="rgb(248,174,31)" fg:x="22518" fg:w="21"/><text x="29.4896%" y="1583.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (32 samples, 0.04%)</title><rect x="29.2292%" y="1621" width="0.0416%" height="15" fill="rgb(221,87,13)" fg:x="22510" fg:w="32"/><text x="29.4792%" y="1631.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (43 samples, 0.06%)</title><rect x="29.2240%" y="1637" width="0.0558%" height="15" fill="rgb(223,197,17)" fg:x="22506" fg:w="43"/><text x="29.4740%" y="1647.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (45 samples, 0.06%)</title><rect x="29.2240%" y="1669" width="0.0584%" height="15" fill="rgb(220,144,50)" fg:x="22506" fg:w="45"/><text x="29.4740%" y="1679.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (45 samples, 0.06%)</title><rect x="29.2240%" y="1653" width="0.0584%" height="15" fill="rgb(244,201,11)" fg:x="22506" fg:w="45"/><text x="29.4740%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (72 samples, 0.09%)</title><rect x="29.1929%" y="1765" width="0.0935%" height="15" fill="rgb(249,81,34)" fg:x="22482" fg:w="72"/><text x="29.4429%" y="1775.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (53 samples, 0.07%)</title><rect x="29.2175%" y="1749" width="0.0688%" height="15" fill="rgb(205,161,12)" fg:x="22501" fg:w="53"/><text x="29.4675%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (53 samples, 0.07%)</title><rect x="29.2175%" y="1733" width="0.0688%" height="15" fill="rgb(252,139,50)" fg:x="22501" fg:w="53"/><text x="29.4675%" y="1743.50"></text></g><g><title>std::panicking::try (53 samples, 0.07%)</title><rect x="29.2175%" y="1717" width="0.0688%" height="15" fill="rgb(205,169,14)" fg:x="22501" fg:w="53"/><text x="29.4675%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (53 samples, 0.07%)</title><rect x="29.2175%" y="1701" width="0.0688%" height="15" fill="rgb(248,198,33)" fg:x="22501" fg:w="53"/><text x="29.4675%" y="1711.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (53 samples, 0.07%)</title><rect x="29.2175%" y="1685" width="0.0688%" height="15" fill="rgb(236,23,21)" fg:x="22501" fg:w="53"/><text x="29.4675%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (91 samples, 0.12%)</title><rect x="29.1890%" y="1797" width="0.1182%" height="15" fill="rgb(231,13,38)" fg:x="22479" fg:w="91"/><text x="29.4390%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (91 samples, 0.12%)</title><rect x="29.1890%" y="1781" width="0.1182%" height="15" fill="rgb(239,139,21)" fg:x="22479" fg:w="91"/><text x="29.4390%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (16 samples, 0.02%)</title><rect x="29.2863%" y="1765" width="0.0208%" height="15" fill="rgb(222,164,45)" fg:x="22554" fg:w="16"/><text x="29.5363%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (11 samples, 0.01%)</title><rect x="29.2928%" y="1749" width="0.0143%" height="15" fill="rgb(230,52,27)" fg:x="22559" fg:w="11"/><text x="29.5428%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (12 samples, 0.02%)</title><rect x="29.3071%" y="1797" width="0.0156%" height="15" fill="rgb(227,143,42)" fg:x="22570" fg:w="12"/><text x="29.5571%" y="1807.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (861 samples, 1.12%)</title><rect x="28.2060%" y="1973" width="1.1180%" height="15" fill="rgb(249,127,1)" fg:x="21722" fg:w="861"/><text x="28.4560%" y="1983.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (861 samples, 1.12%)</title><rect x="28.2060%" y="1957" width="1.1180%" height="15" fill="rgb(243,107,26)" fg:x="21722" fg:w="861"/><text x="28.4560%" y="1967.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (861 samples, 1.12%)</title><rect x="28.2060%" y="1941" width="1.1180%" height="15" fill="rgb(225,7,45)" fg:x="21722" fg:w="861"/><text x="28.4560%" y="1951.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (861 samples, 1.12%)</title><rect x="28.2060%" y="1925" width="1.1180%" height="15" fill="rgb(241,88,38)" fg:x="21722" fg:w="861"/><text x="28.4560%" y="1935.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (861 samples, 1.12%)</title><rect x="28.2060%" y="1909" width="1.1180%" height="15" fill="rgb(226,121,9)" fg:x="21722" fg:w="861"/><text x="28.4560%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (861 samples, 1.12%)</title><rect x="28.2060%" y="1893" width="1.1180%" height="15" fill="rgb(253,60,29)" fg:x="21722" fg:w="861"/><text x="28.4560%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (104 samples, 0.14%)</title><rect x="29.1890%" y="1877" width="0.1350%" height="15" fill="rgb(244,181,39)" fg:x="22479" fg:w="104"/><text x="29.4390%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (104 samples, 0.14%)</title><rect x="29.1890%" y="1861" width="0.1350%" height="15" fill="rgb(252,203,31)" fg:x="22479" fg:w="104"/><text x="29.4390%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (104 samples, 0.14%)</title><rect x="29.1890%" y="1845" width="0.1350%" height="15" fill="rgb(224,120,8)" fg:x="22479" fg:w="104"/><text x="29.4390%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (104 samples, 0.14%)</title><rect x="29.1890%" y="1829" width="0.1350%" height="15" fill="rgb(205,171,54)" fg:x="22479" fg:w="104"/><text x="29.4390%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (104 samples, 0.14%)</title><rect x="29.1890%" y="1813" width="0.1350%" height="15" fill="rgb(235,89,11)" fg:x="22479" fg:w="104"/><text x="29.4390%" y="1823.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (879 samples, 1.14%)</title><rect x="28.2060%" y="1989" width="1.1414%" height="15" fill="rgb(212,180,28)" fg:x="21722" fg:w="879"/><text x="28.4560%" y="1999.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::new (18 samples, 0.02%)</title><rect x="29.3240%" y="1973" width="0.0234%" height="15" fill="rgb(247,84,49)" fg:x="22583" fg:w="18"/><text x="29.5740%" y="1983.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new (18 samples, 0.02%)</title><rect x="29.3240%" y="1957" width="0.0234%" height="15" fill="rgb(236,187,52)" fg:x="22583" fg:w="18"/><text x="29.5740%" y="1967.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new (9 samples, 0.01%)</title><rect x="29.3357%" y="1941" width="0.0117%" height="15" fill="rgb(227,24,15)" fg:x="22592" fg:w="9"/><text x="29.5857%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="29.3682%" y="1861" width="0.0104%" height="15" fill="rgb(227,211,13)" fg:x="22617" fg:w="8"/><text x="29.6182%" y="1871.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="29.3785%" y="1861" width="0.0104%" height="15" fill="rgb(245,52,14)" fg:x="22625" fg:w="8"/><text x="29.6285%" y="1871.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.03%)</title><rect x="29.3889%" y="1861" width="0.0286%" height="15" fill="rgb(225,185,13)" fg:x="22633" fg:w="22"/><text x="29.6389%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.03%)</title><rect x="29.3889%" y="1845" width="0.0286%" height="15" fill="rgb(217,160,29)" fg:x="22633" fg:w="22"/><text x="29.6389%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.03%)</title><rect x="29.3889%" y="1829" width="0.0286%" height="15" fill="rgb(216,115,53)" fg:x="22633" fg:w="22"/><text x="29.6389%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.03%)</title><rect x="29.3889%" y="1813" width="0.0286%" height="15" fill="rgb(236,99,5)" fg:x="22633" fg:w="22"/><text x="29.6389%" y="1823.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="29.3954%" y="1797" width="0.0221%" height="15" fill="rgb(222,60,38)" fg:x="22638" fg:w="17"/><text x="29.6454%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.01%)</title><rect x="29.4175%" y="1861" width="0.0104%" height="15" fill="rgb(212,82,22)" fg:x="22655" fg:w="8"/><text x="29.6675%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="29.4175%" y="1845" width="0.0104%" height="15" fill="rgb(214,48,28)" fg:x="22655" fg:w="8"/><text x="29.6675%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="29.4175%" y="1829" width="0.0104%" height="15" fill="rgb(245,196,50)" fg:x="22655" fg:w="8"/><text x="29.6675%" y="1839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="29.4175%" y="1813" width="0.0104%" height="15" fill="rgb(225,159,46)" fg:x="22655" fg:w="8"/><text x="29.6675%" y="1823.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="29.4344%" y="1845" width="0.0156%" height="15" fill="rgb(207,195,48)" fg:x="22668" fg:w="12"/><text x="29.6844%" y="1855.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.4357%" y="1829" width="0.0143%" height="15" fill="rgb(240,73,3)" fg:x="22669" fg:w="11"/><text x="29.6857%" y="1839.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="29.4396%" y="1813" width="0.0104%" height="15" fill="rgb(245,57,23)" fg:x="22672" fg:w="8"/><text x="29.6896%" y="1823.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (8 samples, 0.01%)</title><rect x="29.4396%" y="1797" width="0.0104%" height="15" fill="rgb(240,75,18)" fg:x="22672" fg:w="8"/><text x="29.6896%" y="1807.50"></text></g><g><title>aptos_types::account_config::resources::transaction_validation::TransactionValidation::module_id (20 samples, 0.03%)</title><rect x="29.4305%" y="1861" width="0.0260%" height="15" fill="rgb(238,168,12)" fg:x="22665" fg:w="20"/><text x="29.6805%" y="1871.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::transaction_validation (17 samples, 0.02%)</title><rect x="29.4564%" y="1861" width="0.0221%" height="15" fill="rgb(226,20,40)" fg:x="22685" fg:w="17"/><text x="29.7064%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="29.4941%" y="1861" width="0.0143%" height="15" fill="rgb(224,130,35)" fg:x="22714" fg:w="11"/><text x="29.7441%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="29.4941%" y="1845" width="0.0143%" height="15" fill="rgb(225,63,41)" fg:x="22714" fg:w="11"/><text x="29.7441%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="29.4941%" y="1829" width="0.0143%" height="15" fill="rgb(219,3,3)" fg:x="22714" fg:w="11"/><text x="29.7441%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="29.4980%" y="1813" width="0.0104%" height="15" fill="rgb(218,157,4)" fg:x="22717" fg:w="8"/><text x="29.7480%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.08%)</title><rect x="29.5084%" y="1845" width="0.0844%" height="15" fill="rgb(232,76,36)" fg:x="22725" fg:w="65"/><text x="29.7584%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveValue]&gt; (65 samples, 0.08%)</title><rect x="29.5084%" y="1829" width="0.0844%" height="15" fill="rgb(247,36,0)" fg:x="22725" fg:w="65"/><text x="29.7584%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (59 samples, 0.08%)</title><rect x="29.5162%" y="1813" width="0.0766%" height="15" fill="rgb(205,2,34)" fg:x="22731" fg:w="59"/><text x="29.7662%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveValue&gt;&gt; (40 samples, 0.05%)</title><rect x="29.5409%" y="1797" width="0.0519%" height="15" fill="rgb(239,136,13)" fg:x="22750" fg:w="40"/><text x="29.7909%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.05%)</title><rect x="29.5409%" y="1781" width="0.0519%" height="15" fill="rgb(253,122,12)" fg:x="22750" fg:w="40"/><text x="29.7909%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveValue]&gt; (37 samples, 0.05%)</title><rect x="29.5447%" y="1765" width="0.0480%" height="15" fill="rgb(222,174,7)" fg:x="22753" fg:w="37"/><text x="29.7947%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (35 samples, 0.05%)</title><rect x="29.5473%" y="1749" width="0.0454%" height="15" fill="rgb(208,191,42)" fg:x="22755" fg:w="35"/><text x="29.7973%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveValue&gt;&gt; (75 samples, 0.10%)</title><rect x="29.5084%" y="1861" width="0.0974%" height="15" fill="rgb(237,212,15)" fg:x="22725" fg:w="75"/><text x="29.7584%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_core_types::value::MoveValue&gt;&gt; (10 samples, 0.01%)</title><rect x="29.5928%" y="1845" width="0.0130%" height="15" fill="rgb(215,65,20)" fg:x="22790" fg:w="10"/><text x="29.8428%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="29.5928%" y="1829" width="0.0130%" height="15" fill="rgb(232,103,11)" fg:x="22790" fg:w="10"/><text x="29.8428%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="29.5928%" y="1813" width="0.0130%" height="15" fill="rgb(235,148,18)" fg:x="22790" fg:w="10"/><text x="29.8428%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="29.5928%" y="1797" width="0.0130%" height="15" fill="rgb(240,173,7)" fg:x="22790" fg:w="10"/><text x="29.8428%" y="1807.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (16 samples, 0.02%)</title><rect x="29.6110%" y="1861" width="0.0208%" height="15" fill="rgb(228,182,25)" fg:x="22804" fg:w="16"/><text x="29.8610%" y="1871.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue::{{closure}} (8 samples, 0.01%)</title><rect x="29.6214%" y="1845" width="0.0104%" height="15" fill="rgb(247,3,52)" fg:x="22812" fg:w="8"/><text x="29.8714%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::SerializedReturnValues&gt; (8 samples, 0.01%)</title><rect x="29.6214%" y="1829" width="0.0104%" height="15" fill="rgb(226,155,8)" fg:x="22812" fg:w="8"/><text x="29.8714%" y="1839.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.01%)</title><rect x="29.7123%" y="1717" width="0.0130%" height="15" fill="rgb(243,195,38)" fg:x="22882" fg:w="10"/><text x="29.9623%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.01%)</title><rect x="29.7123%" y="1701" width="0.0130%" height="15" fill="rgb(254,181,33)" fg:x="22882" fg:w="10"/><text x="29.9623%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (10 samples, 0.01%)</title><rect x="29.7123%" y="1685" width="0.0130%" height="15" fill="rgb(232,98,23)" fg:x="22882" fg:w="10"/><text x="29.9623%" y="1695.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="29.7123%" y="1669" width="0.0130%" height="15" fill="rgb(205,23,10)" fg:x="22882" fg:w="10"/><text x="29.9623%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="29.7252%" y="1621" width="0.0104%" height="15" fill="rgb(212,124,38)" fg:x="22892" fg:w="8"/><text x="29.9752%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="29.7252%" y="1605" width="0.0104%" height="15" fill="rgb(228,207,2)" fg:x="22892" fg:w="8"/><text x="29.9752%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (32 samples, 0.04%)</title><rect x="29.6980%" y="1781" width="0.0416%" height="15" fill="rgb(215,120,22)" fg:x="22871" fg:w="32"/><text x="29.9480%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (30 samples, 0.04%)</title><rect x="29.7006%" y="1765" width="0.0390%" height="15" fill="rgb(251,172,33)" fg:x="22873" fg:w="30"/><text x="29.9506%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.04%)</title><rect x="29.7032%" y="1749" width="0.0364%" height="15" fill="rgb(250,83,2)" fg:x="22875" fg:w="28"/><text x="29.9532%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 0.04%)</title><rect x="29.7032%" y="1733" width="0.0364%" height="15" fill="rgb(210,132,53)" fg:x="22875" fg:w="28"/><text x="29.9532%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="29.7252%" y="1717" width="0.0143%" height="15" fill="rgb(221,208,36)" fg:x="22892" fg:w="11"/><text x="29.9752%" y="1727.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="29.7252%" y="1701" width="0.0143%" height="15" fill="rgb(205,192,46)" fg:x="22892" fg:w="11"/><text x="29.9752%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (11 samples, 0.01%)</title><rect x="29.7252%" y="1685" width="0.0143%" height="15" fill="rgb(223,163,14)" fg:x="22892" fg:w="11"/><text x="29.9752%" y="1695.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="29.7252%" y="1669" width="0.0143%" height="15" fill="rgb(218,41,28)" fg:x="22892" fg:w="11"/><text x="29.9752%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="29.7252%" y="1653" width="0.0143%" height="15" fill="rgb(235,104,10)" fg:x="22892" fg:w="11"/><text x="29.9752%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="29.7252%" y="1637" width="0.0143%" height="15" fill="rgb(246,17,4)" fg:x="22892" fg:w="11"/><text x="29.9752%" y="1647.50"></text></g><g><title>move_core_types::value::MoveValue::vector_u8 (168 samples, 0.22%)</title><rect x="29.6369%" y="1861" width="0.2181%" height="15" fill="rgb(240,7,16)" fg:x="22824" fg:w="168"/><text x="29.8869%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (162 samples, 0.21%)</title><rect x="29.6447%" y="1845" width="0.2104%" height="15" fill="rgb(213,160,23)" fg:x="22830" fg:w="162"/><text x="29.8947%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (162 samples, 0.21%)</title><rect x="29.6447%" y="1829" width="0.2104%" height="15" fill="rgb(251,179,49)" fg:x="22830" fg:w="162"/><text x="29.8947%" y="1839.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (160 samples, 0.21%)</title><rect x="29.6473%" y="1813" width="0.2078%" height="15" fill="rgb(247,198,10)" fg:x="22832" fg:w="160"/><text x="29.8973%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (138 samples, 0.18%)</title><rect x="29.6759%" y="1797" width="0.1792%" height="15" fill="rgb(220,65,29)" fg:x="22854" fg:w="138"/><text x="29.9259%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (89 samples, 0.12%)</title><rect x="29.7395%" y="1781" width="0.1156%" height="15" fill="rgb(237,171,28)" fg:x="22903" fg:w="89"/><text x="29.9895%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (89 samples, 0.12%)</title><rect x="29.7395%" y="1765" width="0.1156%" height="15" fill="rgb(228,44,26)" fg:x="22903" fg:w="89"/><text x="29.9895%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (85 samples, 0.11%)</title><rect x="29.7447%" y="1749" width="0.1104%" height="15" fill="rgb(216,210,27)" fg:x="22907" fg:w="85"/><text x="29.9947%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (85 samples, 0.11%)</title><rect x="29.7447%" y="1733" width="0.1104%" height="15" fill="rgb(252,10,17)" fg:x="22907" fg:w="85"/><text x="29.9947%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84 samples, 0.11%)</title><rect x="29.7460%" y="1717" width="0.1091%" height="15" fill="rgb(214,172,30)" fg:x="22908" fg:w="84"/><text x="29.9960%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84 samples, 0.11%)</title><rect x="29.7460%" y="1701" width="0.1091%" height="15" fill="rgb(253,130,48)" fg:x="22908" fg:w="84"/><text x="29.9960%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (84 samples, 0.11%)</title><rect x="29.7460%" y="1685" width="0.1091%" height="15" fill="rgb(226,99,43)" fg:x="22908" fg:w="84"/><text x="29.9960%" y="1695.50"></text></g><g><title>malloc (80 samples, 0.10%)</title><rect x="29.7512%" y="1669" width="0.1039%" height="15" fill="rgb(239,111,26)" fg:x="22912" fg:w="80"/><text x="30.0012%" y="1679.50"></text></g><g><title>[libc.so.6] (70 samples, 0.09%)</title><rect x="29.7642%" y="1653" width="0.0909%" height="15" fill="rgb(240,27,53)" fg:x="22922" fg:w="70"/><text x="30.0142%" y="1663.50"></text></g><g><title>[libc.so.6] (52 samples, 0.07%)</title><rect x="29.7876%" y="1637" width="0.0675%" height="15" fill="rgb(254,163,12)" fg:x="22940" fg:w="52"/><text x="30.0376%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (94 samples, 0.12%)</title><rect x="29.8927%" y="1621" width="0.1221%" height="15" fill="rgb(225,51,48)" fg:x="23021" fg:w="94"/><text x="30.1427%" y="1631.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (93 samples, 0.12%)</title><rect x="29.8940%" y="1605" width="0.1208%" height="15" fill="rgb(205,19,32)" fg:x="23022" fg:w="93"/><text x="30.1440%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 0.07%)</title><rect x="29.9486%" y="1589" width="0.0662%" height="15" fill="rgb(218,119,26)" fg:x="23064" fg:w="51"/><text x="30.1986%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.07%)</title><rect x="29.9486%" y="1573" width="0.0662%" height="15" fill="rgb(231,173,33)" fg:x="23064" fg:w="51"/><text x="30.1986%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.06%)</title><rect x="29.9512%" y="1557" width="0.0636%" height="15" fill="rgb(241,100,29)" fg:x="23066" fg:w="49"/><text x="30.2012%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (46 samples, 0.06%)</title><rect x="29.9551%" y="1541" width="0.0597%" height="15" fill="rgb(250,194,34)" fg:x="23069" fg:w="46"/><text x="30.2051%" y="1551.50"></text></g><g><title>alloc::alloc::Global::grow_impl (46 samples, 0.06%)</title><rect x="29.9551%" y="1525" width="0.0597%" height="15" fill="rgb(215,23,50)" fg:x="23069" fg:w="46"/><text x="30.2051%" y="1535.50"></text></g><g><title>alloc::alloc::realloc (46 samples, 0.06%)</title><rect x="29.9551%" y="1509" width="0.0597%" height="15" fill="rgb(206,49,37)" fg:x="23069" fg:w="46"/><text x="30.2051%" y="1519.50"></text></g><g><title>realloc (39 samples, 0.05%)</title><rect x="29.9642%" y="1493" width="0.0506%" height="15" fill="rgb(247,39,21)" fg:x="23076" fg:w="39"/><text x="30.2142%" y="1503.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="29.9733%" y="1477" width="0.0416%" height="15" fill="rgb(209,220,15)" fg:x="23083" fg:w="32"/><text x="30.2233%" y="1487.50"></text></g><g><title>[libc.so.6] (24 samples, 0.03%)</title><rect x="29.9836%" y="1461" width="0.0312%" height="15" fill="rgb(206,41,33)" fg:x="23091" fg:w="24"/><text x="30.2336%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="30.0226%" y="1445" width="0.0221%" height="15" fill="rgb(221,225,45)" fg:x="23121" fg:w="17"/><text x="30.2726%" y="1455.50"></text></g><g><title>malloc (15 samples, 0.02%)</title><rect x="30.0252%" y="1429" width="0.0195%" height="15" fill="rgb(216,27,18)" fg:x="23123" fg:w="15"/><text x="30.2752%" y="1439.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="30.0343%" y="1413" width="0.0104%" height="15" fill="rgb(250,193,34)" fg:x="23130" fg:w="8"/><text x="30.2843%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_seq (25 samples, 0.03%)</title><rect x="30.0148%" y="1621" width="0.0325%" height="15" fill="rgb(227,215,20)" fg:x="23115" fg:w="25"/><text x="30.2648%" y="1631.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (25 samples, 0.03%)</title><rect x="30.0148%" y="1605" width="0.0325%" height="15" fill="rgb(242,211,27)" fg:x="23115" fg:w="25"/><text x="30.2648%" y="1615.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (25 samples, 0.03%)</title><rect x="30.0148%" y="1589" width="0.0325%" height="15" fill="rgb(229,190,30)" fg:x="23115" fg:w="25"/><text x="30.2648%" y="1599.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.03%)</title><rect x="30.0174%" y="1573" width="0.0299%" height="15" fill="rgb(253,31,29)" fg:x="23117" fg:w="23"/><text x="30.2674%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.03%)</title><rect x="30.0174%" y="1557" width="0.0299%" height="15" fill="rgb(229,177,52)" fg:x="23117" fg:w="23"/><text x="30.2674%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.03%)</title><rect x="30.0174%" y="1541" width="0.0299%" height="15" fill="rgb(226,88,8)" fg:x="23117" fg:w="23"/><text x="30.2674%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.03%)</title><rect x="30.0174%" y="1525" width="0.0299%" height="15" fill="rgb(214,55,27)" fg:x="23117" fg:w="23"/><text x="30.2674%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.03%)</title><rect x="30.0174%" y="1509" width="0.0299%" height="15" fill="rgb(233,202,5)" fg:x="23117" fg:w="23"/><text x="30.2674%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.03%)</title><rect x="30.0174%" y="1493" width="0.0299%" height="15" fill="rgb(251,49,30)" fg:x="23117" fg:w="23"/><text x="30.2674%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.03%)</title><rect x="30.0213%" y="1477" width="0.0260%" height="15" fill="rgb(235,18,52)" fg:x="23120" fg:w="20"/><text x="30.2713%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="30.0226%" y="1461" width="0.0247%" height="15" fill="rgb(250,111,51)" fg:x="23121" fg:w="19"/><text x="30.2726%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="30.0615%" y="1477" width="0.0195%" height="15" fill="rgb(218,13,25)" fg:x="23151" fg:w="15"/><text x="30.3115%" y="1487.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="30.0654%" y="1461" width="0.0156%" height="15" fill="rgb(248,96,7)" fg:x="23154" fg:w="12"/><text x="30.3154%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (27 samples, 0.04%)</title><rect x="30.0473%" y="1621" width="0.0351%" height="15" fill="rgb(217,31,15)" fg:x="23140" fg:w="27"/><text x="30.2973%" y="1631.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (27 samples, 0.04%)</title><rect x="30.0473%" y="1605" width="0.0351%" height="15" fill="rgb(228,59,49)" fg:x="23140" fg:w="27"/><text x="30.2973%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.04%)</title><rect x="30.0473%" y="1589" width="0.0351%" height="15" fill="rgb(210,152,38)" fg:x="23140" fg:w="27"/><text x="30.2973%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.04%)</title><rect x="30.0473%" y="1573" width="0.0351%" height="15" fill="rgb(206,71,11)" fg:x="23140" fg:w="27"/><text x="30.2973%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.04%)</title><rect x="30.0473%" y="1557" width="0.0351%" height="15" fill="rgb(244,199,5)" fg:x="23140" fg:w="27"/><text x="30.2973%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.03%)</title><rect x="30.0512%" y="1541" width="0.0312%" height="15" fill="rgb(253,49,1)" fg:x="23143" fg:w="24"/><text x="30.3012%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.03%)</title><rect x="30.0512%" y="1525" width="0.0312%" height="15" fill="rgb(225,206,40)" fg:x="23143" fg:w="24"/><text x="30.3012%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.03%)</title><rect x="30.0564%" y="1509" width="0.0260%" height="15" fill="rgb(243,116,47)" fg:x="23147" fg:w="20"/><text x="30.3064%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="30.0577%" y="1493" width="0.0247%" height="15" fill="rgb(219,225,16)" fg:x="23148" fg:w="19"/><text x="30.3077%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.04%)</title><rect x="30.1161%" y="1381" width="0.0390%" height="15" fill="rgb(233,29,47)" fg:x="23193" fg:w="30"/><text x="30.3661%" y="1391.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.04%)</title><rect x="30.1161%" y="1365" width="0.0390%" height="15" fill="rgb(250,179,18)" fg:x="23193" fg:w="30"/><text x="30.3661%" y="1375.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.04%)</title><rect x="30.1161%" y="1349" width="0.0390%" height="15" fill="rgb(215,176,6)" fg:x="23193" fg:w="30"/><text x="30.3661%" y="1359.50"></text></g><g><title>realloc (27 samples, 0.04%)</title><rect x="30.1200%" y="1333" width="0.0351%" height="15" fill="rgb(214,117,39)" fg:x="23196" fg:w="27"/><text x="30.3700%" y="1343.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="30.1278%" y="1317" width="0.0273%" height="15" fill="rgb(247,183,36)" fg:x="23202" fg:w="21"/><text x="30.3778%" y="1327.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="30.1330%" y="1301" width="0.0221%" height="15" fill="rgb(237,200,3)" fg:x="23206" fg:w="17"/><text x="30.3830%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.05%)</title><rect x="30.1135%" y="1397" width="0.0545%" height="15" fill="rgb(212,220,24)" fg:x="23191" fg:w="42"/><text x="30.3635%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (55 samples, 0.07%)</title><rect x="30.0979%" y="1461" width="0.0714%" height="15" fill="rgb(245,216,20)" fg:x="23179" fg:w="55"/><text x="30.3479%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (54 samples, 0.07%)</title><rect x="30.0992%" y="1445" width="0.0701%" height="15" fill="rgb(219,124,7)" fg:x="23180" fg:w="54"/><text x="30.3492%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.06%)</title><rect x="30.1044%" y="1429" width="0.0649%" height="15" fill="rgb(227,167,8)" fg:x="23184" fg:w="50"/><text x="30.3544%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.06%)</title><rect x="30.1044%" y="1413" width="0.0649%" height="15" fill="rgb(241,37,2)" fg:x="23184" fg:w="50"/><text x="30.3544%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (62 samples, 0.08%)</title><rect x="30.0927%" y="1573" width="0.0805%" height="15" fill="rgb(238,134,33)" fg:x="23175" fg:w="62"/><text x="30.3427%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (62 samples, 0.08%)</title><rect x="30.0927%" y="1557" width="0.0805%" height="15" fill="rgb(248,48,27)" fg:x="23175" fg:w="62"/><text x="30.3427%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (62 samples, 0.08%)</title><rect x="30.0927%" y="1541" width="0.0805%" height="15" fill="rgb(212,14,16)" fg:x="23175" fg:w="62"/><text x="30.3427%" y="1551.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (62 samples, 0.08%)</title><rect x="30.0927%" y="1525" width="0.0805%" height="15" fill="rgb(217,205,37)" fg:x="23175" fg:w="62"/><text x="30.3427%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (62 samples, 0.08%)</title><rect x="30.0927%" y="1509" width="0.0805%" height="15" fill="rgb(233,185,47)" fg:x="23175" fg:w="62"/><text x="30.3427%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (62 samples, 0.08%)</title><rect x="30.0927%" y="1493" width="0.0805%" height="15" fill="rgb(244,88,8)" fg:x="23175" fg:w="62"/><text x="30.3427%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (62 samples, 0.08%)</title><rect x="30.0927%" y="1477" width="0.0805%" height="15" fill="rgb(213,0,20)" fg:x="23175" fg:w="62"/><text x="30.3427%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (66 samples, 0.09%)</title><rect x="30.0888%" y="1621" width="0.0857%" height="15" fill="rgb(238,159,36)" fg:x="23172" fg:w="66"/><text x="30.3388%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (66 samples, 0.09%)</title><rect x="30.0888%" y="1605" width="0.0857%" height="15" fill="rgb(253,173,17)" fg:x="23172" fg:w="66"/><text x="30.3388%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (63 samples, 0.08%)</title><rect x="30.0927%" y="1589" width="0.0818%" height="15" fill="rgb(221,23,28)" fg:x="23175" fg:w="63"/><text x="30.3427%" y="1599.50"></text></g><g><title>bcs::ser::to_bytes (243 samples, 0.32%)</title><rect x="29.8707%" y="1669" width="0.3155%" height="15" fill="rgb(218,113,15)" fg:x="23004" fg:w="243"/><text x="30.1207%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (234 samples, 0.30%)</title><rect x="29.8824%" y="1653" width="0.3038%" height="15" fill="rgb(233,58,3)" fg:x="23013" fg:w="234"/><text x="30.1324%" y="1663.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (234 samples, 0.30%)</title><rect x="29.8824%" y="1637" width="0.3038%" height="15" fill="rgb(250,46,35)" fg:x="23013" fg:w="234"/><text x="30.1324%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="30.1745%" y="1621" width="0.0117%" height="15" fill="rgb(210,169,11)" fg:x="23238" fg:w="9"/><text x="30.4245%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="30.1745%" y="1605" width="0.0117%" height="15" fill="rgb(246,88,19)" fg:x="23238" fg:w="9"/><text x="30.4245%" y="1615.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="30.1745%" y="1589" width="0.0117%" height="15" fill="rgb(206,81,49)" fg:x="23238" fg:w="9"/><text x="30.4245%" y="1599.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="30.1745%" y="1573" width="0.0117%" height="15" fill="rgb(232,144,18)" fg:x="23238" fg:w="9"/><text x="30.4245%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (256 samples, 0.33%)</title><rect x="29.8551%" y="1781" width="0.3324%" height="15" fill="rgb(235,2,27)" fg:x="22992" fg:w="256"/><text x="30.1051%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (256 samples, 0.33%)</title><rect x="29.8551%" y="1765" width="0.3324%" height="15" fill="rgb(239,157,39)" fg:x="22992" fg:w="256"/><text x="30.1051%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (256 samples, 0.33%)</title><rect x="29.8551%" y="1749" width="0.3324%" height="15" fill="rgb(220,11,17)" fg:x="22992" fg:w="256"/><text x="30.1051%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (256 samples, 0.33%)</title><rect x="29.8551%" y="1733" width="0.3324%" height="15" fill="rgb(243,94,50)" fg:x="22992" fg:w="256"/><text x="30.1051%" y="1743.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (256 samples, 0.33%)</title><rect x="29.8551%" y="1717" width="0.3324%" height="15" fill="rgb(218,22,0)" fg:x="22992" fg:w="256"/><text x="30.1051%" y="1727.50"></text></g><g><title>move_core_types::value::serialize_values::{{closure}} (254 samples, 0.33%)</title><rect x="29.8577%" y="1701" width="0.3298%" height="15" fill="rgb(249,70,21)" fg:x="22994" fg:w="254"/><text x="30.1077%" y="1711.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (249 samples, 0.32%)</title><rect x="29.8642%" y="1685" width="0.3233%" height="15" fill="rgb(245,111,46)" fg:x="22999" fg:w="249"/><text x="30.1142%" y="1695.50"></text></g><g><title>move_core_types::value::serialize_values (259 samples, 0.34%)</title><rect x="29.8551%" y="1861" width="0.3363%" height="15" fill="rgb(244,183,12)" fg:x="22992" fg:w="259"/><text x="30.1051%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (259 samples, 0.34%)</title><rect x="29.8551%" y="1845" width="0.3363%" height="15" fill="rgb(207,117,0)" fg:x="22992" fg:w="259"/><text x="30.1051%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (259 samples, 0.34%)</title><rect x="29.8551%" y="1829" width="0.3363%" height="15" fill="rgb(206,20,43)" fg:x="22992" fg:w="259"/><text x="30.1051%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (259 samples, 0.34%)</title><rect x="29.8551%" y="1813" width="0.3363%" height="15" fill="rgb(221,104,11)" fg:x="22992" fg:w="259"/><text x="30.1051%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (259 samples, 0.34%)</title><rect x="29.8551%" y="1797" width="0.3363%" height="15" fill="rgb(254,36,50)" fg:x="22992" fg:w="259"/><text x="30.1051%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (10 samples, 0.01%)</title><rect x="30.2109%" y="1829" width="0.0130%" height="15" fill="rgb(252,17,15)" fg:x="23266" fg:w="10"/><text x="30.4609%" y="1839.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="30.2109%" y="1813" width="0.0130%" height="15" fill="rgb(219,129,43)" fg:x="23266" fg:w="10"/><text x="30.4609%" y="1823.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature (15 samples, 0.02%)</title><rect x="30.2291%" y="1829" width="0.0195%" height="15" fill="rgb(205,34,45)" fg:x="23280" fg:w="15"/><text x="30.4791%" y="1839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.02%)</title><rect x="30.2745%" y="1717" width="0.0208%" height="15" fill="rgb(251,201,32)" fg:x="23315" fg:w="16"/><text x="30.5245%" y="1727.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::cmp::PartialEq&gt;::eq (16 samples, 0.02%)</title><rect x="30.2745%" y="1701" width="0.0208%" height="15" fill="rgb(205,56,0)" fg:x="23315" fg:w="16"/><text x="30.5245%" y="1711.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (16 samples, 0.02%)</title><rect x="30.2745%" y="1685" width="0.0208%" height="15" fill="rgb(211,193,27)" fg:x="23315" fg:w="16"/><text x="30.5245%" y="1695.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.02%)</title><rect x="30.2745%" y="1669" width="0.0208%" height="15" fill="rgb(231,100,42)" fg:x="23315" fg:w="16"/><text x="30.5245%" y="1679.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (16 samples, 0.02%)</title><rect x="30.2745%" y="1653" width="0.0208%" height="15" fill="rgb(245,85,27)" fg:x="23315" fg:w="16"/><text x="30.5245%" y="1663.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (16 samples, 0.02%)</title><rect x="30.2745%" y="1637" width="0.0208%" height="15" fill="rgb(241,76,24)" fg:x="23315" fg:w="16"/><text x="30.5245%" y="1647.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="30.2784%" y="1621" width="0.0169%" height="15" fill="rgb(249,157,15)" fg:x="23318" fg:w="13"/><text x="30.5284%" y="1631.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (13 samples, 0.02%)</title><rect x="30.2953%" y="1717" width="0.0169%" height="15" fill="rgb(222,218,25)" fg:x="23331" fg:w="13"/><text x="30.5453%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (52 samples, 0.07%)</title><rect x="30.2615%" y="1813" width="0.0675%" height="15" fill="rgb(252,156,52)" fg:x="23305" fg:w="52"/><text x="30.5115%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (52 samples, 0.07%)</title><rect x="30.2615%" y="1797" width="0.0675%" height="15" fill="rgb(211,185,7)" fg:x="23305" fg:w="52"/><text x="30.5115%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (52 samples, 0.07%)</title><rect x="30.2615%" y="1781" width="0.0675%" height="15" fill="rgb(234,108,24)" fg:x="23305" fg:w="52"/><text x="30.5115%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (49 samples, 0.06%)</title><rect x="30.2654%" y="1765" width="0.0636%" height="15" fill="rgb(227,218,2)" fg:x="23308" fg:w="49"/><text x="30.5154%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (49 samples, 0.06%)</title><rect x="30.2654%" y="1749" width="0.0636%" height="15" fill="rgb(224,0,36)" fg:x="23308" fg:w="49"/><text x="30.5154%" y="1759.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (49 samples, 0.06%)</title><rect x="30.2654%" y="1733" width="0.0636%" height="15" fill="rgb(233,201,10)" fg:x="23308" fg:w="49"/><text x="30.5154%" y="1743.50"></text></g><g><title>move_binary_format::access::ModuleAccess::identifier_at (13 samples, 0.02%)</title><rect x="30.3122%" y="1717" width="0.0169%" height="15" fill="rgb(252,209,14)" fg:x="23344" fg:w="13"/><text x="30.5622%" y="1727.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (69 samples, 0.09%)</title><rect x="30.2485%" y="1829" width="0.0896%" height="15" fill="rgb(205,93,49)" fg:x="23295" fg:w="69"/><text x="30.4985%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 0.06%)</title><rect x="30.3810%" y="1605" width="0.0571%" height="15" fill="rgb(234,116,45)" fg:x="23397" fg:w="44"/><text x="30.6310%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (39 samples, 0.05%)</title><rect x="30.3875%" y="1589" width="0.0506%" height="15" fill="rgb(248,89,35)" fg:x="23402" fg:w="39"/><text x="30.6375%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (36 samples, 0.05%)</title><rect x="30.3914%" y="1573" width="0.0467%" height="15" fill="rgb(233,167,45)" fg:x="23405" fg:w="36"/><text x="30.6414%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (33 samples, 0.04%)</title><rect x="30.3953%" y="1557" width="0.0429%" height="15" fill="rgb(248,228,14)" fg:x="23408" fg:w="33"/><text x="30.6453%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (25 samples, 0.03%)</title><rect x="30.4057%" y="1541" width="0.0325%" height="15" fill="rgb(246,91,14)" fg:x="23416" fg:w="25"/><text x="30.6557%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (22 samples, 0.03%)</title><rect x="30.4095%" y="1525" width="0.0286%" height="15" fill="rgb(227,142,5)" fg:x="23419" fg:w="22"/><text x="30.6595%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (52 samples, 0.07%)</title><rect x="30.3810%" y="1637" width="0.0675%" height="15" fill="rgb(221,63,33)" fg:x="23397" fg:w="52"/><text x="30.6310%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (52 samples, 0.07%)</title><rect x="30.3810%" y="1621" width="0.0675%" height="15" fill="rgb(233,49,0)" fg:x="23397" fg:w="52"/><text x="30.6310%" y="1631.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (8 samples, 0.01%)</title><rect x="30.4381%" y="1605" width="0.0104%" height="15" fill="rgb(251,115,38)" fg:x="23441" fg:w="8"/><text x="30.6881%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.07%)</title><rect x="30.3810%" y="1653" width="0.0727%" height="15" fill="rgb(231,214,32)" fg:x="23397" fg:w="56"/><text x="30.6310%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.04%)</title><rect x="30.4589%" y="1589" width="0.0441%" height="15" fill="rgb(248,73,46)" fg:x="23457" fg:w="34"/><text x="30.7089%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.04%)</title><rect x="30.4602%" y="1573" width="0.0429%" height="15" fill="rgb(237,156,4)" fg:x="23458" fg:w="33"/><text x="30.7102%" y="1583.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.04%)</title><rect x="30.4602%" y="1557" width="0.0429%" height="15" fill="rgb(227,132,2)" fg:x="23458" fg:w="33"/><text x="30.7102%" y="1567.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.04%)</title><rect x="30.4602%" y="1541" width="0.0429%" height="15" fill="rgb(248,161,9)" fg:x="23458" fg:w="33"/><text x="30.7102%" y="1551.50"></text></g><g><title>realloc (32 samples, 0.04%)</title><rect x="30.4615%" y="1525" width="0.0416%" height="15" fill="rgb(238,77,38)" fg:x="23459" fg:w="32"/><text x="30.7115%" y="1535.50"></text></g><g><title>[libc.so.6] (27 samples, 0.04%)</title><rect x="30.4680%" y="1509" width="0.0351%" height="15" fill="rgb(222,166,40)" fg:x="23464" fg:w="27"/><text x="30.7180%" y="1519.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="30.4706%" y="1493" width="0.0325%" height="15" fill="rgb(214,168,45)" fg:x="23466" fg:w="25"/><text x="30.7206%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.05%)</title><rect x="30.4550%" y="1653" width="0.0493%" height="15" fill="rgb(226,64,37)" fg:x="23454" fg:w="38"/><text x="30.7050%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (38 samples, 0.05%)</title><rect x="30.4550%" y="1637" width="0.0493%" height="15" fill="rgb(232,210,43)" fg:x="23454" fg:w="38"/><text x="30.7050%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.05%)</title><rect x="30.4550%" y="1621" width="0.0493%" height="15" fill="rgb(214,76,33)" fg:x="23454" fg:w="38"/><text x="30.7050%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.05%)</title><rect x="30.4576%" y="1605" width="0.0467%" height="15" fill="rgb(210,78,5)" fg:x="23456" fg:w="36"/><text x="30.7076%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (106 samples, 0.14%)</title><rect x="30.3797%" y="1685" width="0.1376%" height="15" fill="rgb(211,107,37)" fg:x="23396" fg:w="106"/><text x="30.6297%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (106 samples, 0.14%)</title><rect x="30.3797%" y="1669" width="0.1376%" height="15" fill="rgb(249,67,16)" fg:x="23396" fg:w="106"/><text x="30.6297%" y="1679.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="30.5043%" y="1653" width="0.0130%" height="15" fill="rgb(222,114,31)" fg:x="23492" fg:w="10"/><text x="30.7543%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Module::module (9 samples, 0.01%)</title><rect x="30.5342%" y="1573" width="0.0117%" height="15" fill="rgb(242,118,19)" fg:x="23515" fg:w="9"/><text x="30.7842%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.04%)</title><rect x="30.5264%" y="1637" width="0.0441%" height="15" fill="rgb(223,115,1)" fg:x="23509" fg:w="34"/><text x="30.7764%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33 samples, 0.04%)</title><rect x="30.5277%" y="1621" width="0.0429%" height="15" fill="rgb(241,182,54)" fg:x="23510" fg:w="33"/><text x="30.7777%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (33 samples, 0.04%)</title><rect x="30.5277%" y="1605" width="0.0429%" height="15" fill="rgb(244,166,36)" fg:x="23510" fg:w="33"/><text x="30.7777%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (32 samples, 0.04%)</title><rect x="30.5290%" y="1589" width="0.0416%" height="15" fill="rgb(241,52,43)" fg:x="23511" fg:w="32"/><text x="30.7790%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (19 samples, 0.02%)</title><rect x="30.5459%" y="1573" width="0.0247%" height="15" fill="rgb(236,82,9)" fg:x="23524" fg:w="19"/><text x="30.7959%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (10 samples, 0.01%)</title><rect x="30.5576%" y="1557" width="0.0130%" height="15" fill="rgb(241,119,0)" fg:x="23533" fg:w="10"/><text x="30.8076%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (36 samples, 0.05%)</title><rect x="30.5264%" y="1669" width="0.0467%" height="15" fill="rgb(221,19,22)" fg:x="23509" fg:w="36"/><text x="30.7764%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.05%)</title><rect x="30.5264%" y="1653" width="0.0467%" height="15" fill="rgb(254,144,35)" fg:x="23509" fg:w="36"/><text x="30.7764%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.06%)</title><rect x="30.5173%" y="1685" width="0.0610%" height="15" fill="rgb(246,132,30)" fg:x="23502" fg:w="47"/><text x="30.7673%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (176 samples, 0.23%)</title><rect x="30.3563%" y="1813" width="0.2285%" height="15" fill="rgb(234,69,28)" fg:x="23378" fg:w="176"/><text x="30.6063%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (176 samples, 0.23%)</title><rect x="30.3563%" y="1797" width="0.2285%" height="15" fill="rgb(219,106,47)" fg:x="23378" fg:w="176"/><text x="30.6063%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (176 samples, 0.23%)</title><rect x="30.3563%" y="1781" width="0.2285%" height="15" fill="rgb(218,79,24)" fg:x="23378" fg:w="176"/><text x="30.6063%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (166 samples, 0.22%)</title><rect x="30.3693%" y="1765" width="0.2156%" height="15" fill="rgb(225,26,21)" fg:x="23388" fg:w="166"/><text x="30.6193%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (166 samples, 0.22%)</title><rect x="30.3693%" y="1749" width="0.2156%" height="15" fill="rgb(217,68,49)" fg:x="23388" fg:w="166"/><text x="30.6193%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (166 samples, 0.22%)</title><rect x="30.3693%" y="1733" width="0.2156%" height="15" fill="rgb(220,204,28)" fg:x="23388" fg:w="166"/><text x="30.6193%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (164 samples, 0.21%)</title><rect x="30.3719%" y="1717" width="0.2130%" height="15" fill="rgb(237,208,43)" fg:x="23390" fg:w="164"/><text x="30.6219%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (160 samples, 0.21%)</title><rect x="30.3771%" y="1701" width="0.2078%" height="15" fill="rgb(213,97,42)" fg:x="23394" fg:w="160"/><text x="30.6271%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="30.6407%" y="1685" width="0.0104%" height="15" fill="rgb(238,96,52)" fg:x="23597" fg:w="8"/><text x="30.8907%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.02%)</title><rect x="30.6407%" y="1733" width="0.0156%" height="15" fill="rgb(228,14,13)" fg:x="23597" fg:w="12"/><text x="30.8907%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.02%)</title><rect x="30.6407%" y="1717" width="0.0156%" height="15" fill="rgb(219,123,13)" fg:x="23597" fg:w="12"/><text x="30.8907%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.02%)</title><rect x="30.6407%" y="1701" width="0.0156%" height="15" fill="rgb(216,144,17)" fg:x="23597" fg:w="12"/><text x="30.8907%" y="1711.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (22 samples, 0.03%)</title><rect x="30.6368%" y="1781" width="0.0286%" height="15" fill="rgb(230,228,29)" fg:x="23594" fg:w="22"/><text x="30.8868%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.03%)</title><rect x="30.6368%" y="1765" width="0.0286%" height="15" fill="rgb(233,18,5)" fg:x="23594" fg:w="22"/><text x="30.8868%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (20 samples, 0.03%)</title><rect x="30.6394%" y="1749" width="0.0260%" height="15" fill="rgb(233,197,12)" fg:x="23596" fg:w="20"/><text x="30.8894%" y="1759.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="30.6926%" y="1541" width="0.0117%" height="15" fill="rgb(234,140,29)" fg:x="23637" fg:w="9"/><text x="30.9426%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.02%)</title><rect x="30.6809%" y="1701" width="0.0247%" height="15" fill="rgb(233,113,19)" fg:x="23628" fg:w="19"/><text x="30.9309%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (19 samples, 0.02%)</title><rect x="30.6809%" y="1685" width="0.0247%" height="15" fill="rgb(246,209,13)" fg:x="23628" fg:w="19"/><text x="30.9309%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14 samples, 0.02%)</title><rect x="30.6874%" y="1669" width="0.0182%" height="15" fill="rgb(242,79,54)" fg:x="23633" fg:w="14"/><text x="30.9374%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="30.6874%" y="1653" width="0.0182%" height="15" fill="rgb(219,73,16)" fg:x="23633" fg:w="14"/><text x="30.9374%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="30.6926%" y="1637" width="0.0130%" height="15" fill="rgb(224,52,10)" fg:x="23637" fg:w="10"/><text x="30.9426%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="30.6926%" y="1621" width="0.0130%" height="15" fill="rgb(237,179,5)" fg:x="23637" fg:w="10"/><text x="30.9426%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 0.01%)</title><rect x="30.6926%" y="1605" width="0.0130%" height="15" fill="rgb(231,20,6)" fg:x="23637" fg:w="10"/><text x="30.9426%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (10 samples, 0.01%)</title><rect x="30.6926%" y="1589" width="0.0130%" height="15" fill="rgb(253,171,45)" fg:x="23637" fg:w="10"/><text x="30.9426%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (10 samples, 0.01%)</title><rect x="30.6926%" y="1573" width="0.0130%" height="15" fill="rgb(230,75,49)" fg:x="23637" fg:w="10"/><text x="30.9426%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (10 samples, 0.01%)</title><rect x="30.6926%" y="1557" width="0.0130%" height="15" fill="rgb(216,83,46)" fg:x="23637" fg:w="10"/><text x="30.9426%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.01%)</title><rect x="30.7082%" y="1653" width="0.0117%" height="15" fill="rgb(236,56,9)" fg:x="23649" fg:w="9"/><text x="30.9582%" y="1663.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="30.7082%" y="1637" width="0.0117%" height="15" fill="rgb(215,28,34)" fg:x="23649" fg:w="9"/><text x="30.9582%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (9 samples, 0.01%)</title><rect x="30.7082%" y="1621" width="0.0117%" height="15" fill="rgb(230,222,20)" fg:x="23649" fg:w="9"/><text x="30.9582%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (98 samples, 0.13%)</title><rect x="30.6004%" y="1813" width="0.1273%" height="15" fill="rgb(235,209,51)" fg:x="23566" fg:w="98"/><text x="30.8504%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (78 samples, 0.10%)</title><rect x="30.6264%" y="1797" width="0.1013%" height="15" fill="rgb(235,167,1)" fg:x="23586" fg:w="78"/><text x="30.8764%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (47 samples, 0.06%)</title><rect x="30.6666%" y="1781" width="0.0610%" height="15" fill="rgb(248,220,0)" fg:x="23617" fg:w="47"/><text x="30.9166%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (38 samples, 0.05%)</title><rect x="30.6783%" y="1765" width="0.0493%" height="15" fill="rgb(239,0,18)" fg:x="23626" fg:w="38"/><text x="30.9283%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (38 samples, 0.05%)</title><rect x="30.6783%" y="1749" width="0.0493%" height="15" fill="rgb(229,179,11)" fg:x="23626" fg:w="38"/><text x="30.9283%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (38 samples, 0.05%)</title><rect x="30.6783%" y="1733" width="0.0493%" height="15" fill="rgb(226,116,53)" fg:x="23626" fg:w="38"/><text x="30.9283%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (38 samples, 0.05%)</title><rect x="30.6783%" y="1717" width="0.0493%" height="15" fill="rgb(218,1,49)" fg:x="23626" fg:w="38"/><text x="30.9283%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.02%)</title><rect x="30.7056%" y="1701" width="0.0221%" height="15" fill="rgb(208,184,47)" fg:x="23647" fg:w="17"/><text x="30.9556%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="30.7056%" y="1685" width="0.0221%" height="15" fill="rgb(238,174,3)" fg:x="23647" fg:w="17"/><text x="30.9556%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.02%)</title><rect x="30.7056%" y="1669" width="0.0221%" height="15" fill="rgb(247,188,6)" fg:x="23647" fg:w="17"/><text x="30.9556%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (9 samples, 0.01%)</title><rect x="30.7277%" y="1813" width="0.0117%" height="15" fill="rgb(211,165,46)" fg:x="23664" fg:w="9"/><text x="30.9777%" y="1823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="30.7588%" y="1589" width="0.0104%" height="15" fill="rgb(222,190,10)" fg:x="23688" fg:w="8"/><text x="31.0088%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.03%)</title><rect x="30.7536%" y="1717" width="0.0273%" height="15" fill="rgb(206,185,3)" fg:x="23684" fg:w="21"/><text x="31.0036%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.03%)</title><rect x="30.7536%" y="1701" width="0.0273%" height="15" fill="rgb(244,125,37)" fg:x="23684" fg:w="21"/><text x="31.0036%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="30.7588%" y="1685" width="0.0221%" height="15" fill="rgb(211,43,7)" fg:x="23688" fg:w="17"/><text x="31.0088%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="30.7588%" y="1669" width="0.0221%" height="15" fill="rgb(250,41,42)" fg:x="23688" fg:w="17"/><text x="31.0088%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.02%)</title><rect x="30.7588%" y="1653" width="0.0221%" height="15" fill="rgb(254,54,42)" fg:x="23688" fg:w="17"/><text x="31.0088%" y="1663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (17 samples, 0.02%)</title><rect x="30.7588%" y="1637" width="0.0221%" height="15" fill="rgb(213,71,43)" fg:x="23688" fg:w="17"/><text x="31.0088%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (17 samples, 0.02%)</title><rect x="30.7588%" y="1621" width="0.0221%" height="15" fill="rgb(249,3,44)" fg:x="23688" fg:w="17"/><text x="31.0088%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (17 samples, 0.02%)</title><rect x="30.7588%" y="1605" width="0.0221%" height="15" fill="rgb(229,80,41)" fg:x="23688" fg:w="17"/><text x="31.0088%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_u8 (9 samples, 0.01%)</title><rect x="30.7692%" y="1589" width="0.0117%" height="15" fill="rgb(231,25,28)" fg:x="23696" fg:w="9"/><text x="31.0192%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="30.7692%" y="1573" width="0.0117%" height="15" fill="rgb(208,79,48)" fg:x="23696" fg:w="9"/><text x="31.0192%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="30.7835%" y="1669" width="0.0156%" height="15" fill="rgb(207,196,38)" fg:x="23707" fg:w="12"/><text x="31.0335%" y="1679.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="30.7835%" y="1653" width="0.0156%" height="15" fill="rgb(228,105,49)" fg:x="23707" fg:w="12"/><text x="31.0335%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (45 samples, 0.06%)</title><rect x="30.7472%" y="1797" width="0.0584%" height="15" fill="rgb(237,99,15)" fg:x="23679" fg:w="45"/><text x="30.9972%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (45 samples, 0.06%)</title><rect x="30.7472%" y="1781" width="0.0584%" height="15" fill="rgb(224,207,46)" fg:x="23679" fg:w="45"/><text x="30.9972%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.06%)</title><rect x="30.7472%" y="1765" width="0.0584%" height="15" fill="rgb(249,117,50)" fg:x="23679" fg:w="45"/><text x="30.9972%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (45 samples, 0.06%)</title><rect x="30.7472%" y="1749" width="0.0584%" height="15" fill="rgb(248,17,13)" fg:x="23679" fg:w="45"/><text x="30.9972%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.06%)</title><rect x="30.7472%" y="1733" width="0.0584%" height="15" fill="rgb(228,187,36)" fg:x="23679" fg:w="45"/><text x="30.9972%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.02%)</title><rect x="30.7809%" y="1717" width="0.0247%" height="15" fill="rgb(234,132,20)" fg:x="23705" fg:w="19"/><text x="31.0309%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.02%)</title><rect x="30.7809%" y="1701" width="0.0247%" height="15" fill="rgb(209,170,46)" fg:x="23705" fg:w="19"/><text x="31.0309%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.02%)</title><rect x="30.7809%" y="1685" width="0.0247%" height="15" fill="rgb(237,23,19)" fg:x="23705" fg:w="19"/><text x="31.0309%" y="1695.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="30.8082%" y="1733" width="0.0156%" height="15" fill="rgb(227,21,26)" fg:x="23726" fg:w="12"/><text x="31.0582%" y="1743.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="30.8082%" y="1717" width="0.0156%" height="15" fill="rgb(222,220,48)" fg:x="23726" fg:w="12"/><text x="31.0582%" y="1727.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.01%)</title><rect x="30.8108%" y="1701" width="0.0130%" height="15" fill="rgb(214,9,16)" fg:x="23728" fg:w="10"/><text x="31.0608%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="30.8108%" y="1685" width="0.0130%" height="15" fill="rgb(209,73,30)" fg:x="23728" fg:w="10"/><text x="31.0608%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (376 samples, 0.49%)</title><rect x="30.3381%" y="1829" width="0.4882%" height="15" fill="rgb(207,20,33)" fg:x="23364" fg:w="376"/><text x="30.5881%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (67 samples, 0.09%)</title><rect x="30.7394%" y="1813" width="0.0870%" height="15" fill="rgb(219,153,12)" fg:x="23673" fg:w="67"/><text x="30.9894%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (16 samples, 0.02%)</title><rect x="30.8056%" y="1797" width="0.0208%" height="15" fill="rgb(235,97,25)" fg:x="23724" fg:w="16"/><text x="31.0556%" y="1807.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.02%)</title><rect x="30.8082%" y="1781" width="0.0182%" height="15" fill="rgb(244,30,34)" fg:x="23726" fg:w="14"/><text x="31.0582%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.02%)</title><rect x="30.8082%" y="1765" width="0.0182%" height="15" fill="rgb(214,106,45)" fg:x="23726" fg:w="14"/><text x="31.0582%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.02%)</title><rect x="30.8082%" y="1749" width="0.0182%" height="15" fill="rgb(226,41,9)" fg:x="23726" fg:w="14"/><text x="31.0582%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="30.8536%" y="1797" width="0.0221%" height="15" fill="rgb(253,139,29)" fg:x="23761" fg:w="17"/><text x="31.1036%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="30.8536%" y="1781" width="0.0221%" height="15" fill="rgb(213,205,39)" fg:x="23761" fg:w="17"/><text x="31.1036%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="30.8627%" y="1765" width="0.0130%" height="15" fill="rgb(209,27,10)" fg:x="23768" fg:w="10"/><text x="31.1127%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (18 samples, 0.02%)</title><rect x="30.9614%" y="1605" width="0.0234%" height="15" fill="rgb(249,142,16)" fg:x="23844" fg:w="18"/><text x="31.2114%" y="1615.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="31.0121%" y="1573" width="0.0117%" height="15" fill="rgb(242,65,12)" fg:x="23883" fg:w="9"/><text x="31.2621%" y="1583.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="31.0121%" y="1557" width="0.0117%" height="15" fill="rgb(232,48,10)" fg:x="23883" fg:w="9"/><text x="31.2621%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.10%)</title><rect x="30.9315%" y="1685" width="0.0974%" height="15" fill="rgb(253,67,19)" fg:x="23821" fg:w="75"/><text x="31.1815%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.10%)</title><rect x="30.9315%" y="1669" width="0.0974%" height="15" fill="rgb(227,93,29)" fg:x="23821" fg:w="75"/><text x="31.1815%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74 samples, 0.10%)</title><rect x="30.9328%" y="1653" width="0.0961%" height="15" fill="rgb(226,189,53)" fg:x="23822" fg:w="74"/><text x="31.1828%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (65 samples, 0.08%)</title><rect x="30.9445%" y="1637" width="0.0844%" height="15" fill="rgb(223,224,1)" fg:x="23831" fg:w="65"/><text x="31.1945%" y="1647.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (60 samples, 0.08%)</title><rect x="30.9510%" y="1621" width="0.0779%" height="15" fill="rgb(221,84,32)" fg:x="23836" fg:w="60"/><text x="31.2010%" y="1631.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (34 samples, 0.04%)</title><rect x="30.9848%" y="1605" width="0.0441%" height="15" fill="rgb(214,189,28)" fg:x="23862" fg:w="34"/><text x="31.2348%" y="1615.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (24 samples, 0.03%)</title><rect x="30.9978%" y="1589" width="0.0312%" height="15" fill="rgb(234,7,52)" fg:x="23872" fg:w="24"/><text x="31.2478%" y="1599.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (77 samples, 0.10%)</title><rect x="30.9315%" y="1701" width="0.1000%" height="15" fill="rgb(249,73,31)" fg:x="23821" fg:w="77"/><text x="31.1815%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="31.0315%" y="1637" width="0.0104%" height="15" fill="rgb(253,153,41)" fg:x="23898" fg:w="8"/><text x="31.2815%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="31.0315%" y="1685" width="0.0117%" height="15" fill="rgb(249,52,34)" fg:x="23898" fg:w="9"/><text x="31.2815%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (9 samples, 0.01%)</title><rect x="31.0315%" y="1669" width="0.0117%" height="15" fill="rgb(236,177,47)" fg:x="23898" fg:w="9"/><text x="31.2815%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="31.0315%" y="1653" width="0.0117%" height="15" fill="rgb(252,185,45)" fg:x="23898" fg:w="9"/><text x="31.2815%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="31.0315%" y="1701" width="0.0169%" height="15" fill="rgb(251,15,30)" fg:x="23898" fg:w="13"/><text x="31.2815%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (159 samples, 0.21%)</title><rect x="30.8536%" y="1813" width="0.2065%" height="15" fill="rgb(233,31,4)" fg:x="23761" fg:w="159"/><text x="31.1036%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (142 samples, 0.18%)</title><rect x="30.8757%" y="1797" width="0.1844%" height="15" fill="rgb(254,44,24)" fg:x="23778" fg:w="142"/><text x="31.1257%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (142 samples, 0.18%)</title><rect x="30.8757%" y="1781" width="0.1844%" height="15" fill="rgb(218,54,1)" fg:x="23778" fg:w="142"/><text x="31.1257%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (123 samples, 0.16%)</title><rect x="30.9004%" y="1765" width="0.1597%" height="15" fill="rgb(243,209,39)" fg:x="23797" fg:w="123"/><text x="31.1504%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (123 samples, 0.16%)</title><rect x="30.9004%" y="1749" width="0.1597%" height="15" fill="rgb(206,75,33)" fg:x="23797" fg:w="123"/><text x="31.1504%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (123 samples, 0.16%)</title><rect x="30.9004%" y="1733" width="0.1597%" height="15" fill="rgb(223,108,18)" fg:x="23797" fg:w="123"/><text x="31.1504%" y="1743.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (119 samples, 0.15%)</title><rect x="30.9056%" y="1717" width="0.1545%" height="15" fill="rgb(244,89,31)" fg:x="23801" fg:w="119"/><text x="31.1556%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="31.0601%" y="1781" width="0.0117%" height="15" fill="rgb(222,167,27)" fg:x="23920" fg:w="9"/><text x="31.3101%" y="1791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="31.0718%" y="1765" width="0.0130%" height="15" fill="rgb(247,41,16)" fg:x="23929" fg:w="10"/><text x="31.3218%" y="1775.50"></text></g><g><title>core::mem::drop (23 samples, 0.03%)</title><rect x="31.0601%" y="1813" width="0.0299%" height="15" fill="rgb(233,168,40)" fg:x="23920" fg:w="23"/><text x="31.3101%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (23 samples, 0.03%)</title><rect x="31.0601%" y="1797" width="0.0299%" height="15" fill="rgb(205,211,8)" fg:x="23920" fg:w="23"/><text x="31.3101%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="31.0718%" y="1781" width="0.0182%" height="15" fill="rgb(238,105,11)" fg:x="23929" fg:w="14"/><text x="31.3218%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::new (9 samples, 0.01%)</title><rect x="31.1003%" y="1797" width="0.0117%" height="15" fill="rgb(223,142,52)" fg:x="23951" fg:w="9"/><text x="31.3503%" y="1807.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (13 samples, 0.02%)</title><rect x="31.2081%" y="1717" width="0.0169%" height="15" fill="rgb(238,51,33)" fg:x="24034" fg:w="13"/><text x="31.4581%" y="1727.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (13 samples, 0.02%)</title><rect x="31.2081%" y="1701" width="0.0169%" height="15" fill="rgb(231,188,43)" fg:x="24034" fg:w="13"/><text x="31.4581%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="31.2432%" y="1669" width="0.0104%" height="15" fill="rgb(216,92,17)" fg:x="24061" fg:w="8"/><text x="31.4932%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (12 samples, 0.02%)</title><rect x="31.2666%" y="1669" width="0.0156%" height="15" fill="rgb(228,2,40)" fg:x="24079" fg:w="12"/><text x="31.5166%" y="1679.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.08%)</title><rect x="31.2029%" y="1733" width="0.0844%" height="15" fill="rgb(226,73,15)" fg:x="24030" fg:w="65"/><text x="31.4529%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (43 samples, 0.06%)</title><rect x="31.2315%" y="1717" width="0.0558%" height="15" fill="rgb(227,66,46)" fg:x="24052" fg:w="43"/><text x="31.4815%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (34 samples, 0.04%)</title><rect x="31.2432%" y="1701" width="0.0441%" height="15" fill="rgb(209,71,6)" fg:x="24061" fg:w="34"/><text x="31.4932%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (34 samples, 0.04%)</title><rect x="31.2432%" y="1685" width="0.0441%" height="15" fill="rgb(246,100,25)" fg:x="24061" fg:w="34"/><text x="31.4932%" y="1695.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (69 samples, 0.09%)</title><rect x="31.2029%" y="1781" width="0.0896%" height="15" fill="rgb(248,185,27)" fg:x="24030" fg:w="69"/><text x="31.4529%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;,move_vm_runtime::interpreter::Interpreter::execute_main&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (69 samples, 0.09%)</title><rect x="31.2029%" y="1765" width="0.0896%" height="15" fill="rgb(225,118,47)" fg:x="24030" fg:w="69"/><text x="31.4529%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (69 samples, 0.09%)</title><rect x="31.2029%" y="1749" width="0.0896%" height="15" fill="rgb(220,185,44)" fg:x="24030" fg:w="69"/><text x="31.4529%" y="1759.50"></text></g><g><title>cfree (20 samples, 0.03%)</title><rect x="31.2938%" y="1781" width="0.0260%" height="15" fill="rgb(227,95,24)" fg:x="24100" fg:w="20"/><text x="31.5438%" y="1791.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="31.3068%" y="1765" width="0.0130%" height="15" fill="rgb(252,84,24)" fg:x="24110" fg:w="10"/><text x="31.5568%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (20 samples, 0.03%)</title><rect x="31.3198%" y="1781" width="0.0260%" height="15" fill="rgb(240,34,44)" fg:x="24120" fg:w="20"/><text x="31.5698%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="31.3484%" y="1765" width="0.0234%" height="15" fill="rgb(209,72,54)" fg:x="24142" fg:w="18"/><text x="31.5984%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (15 samples, 0.02%)</title><rect x="31.3523%" y="1749" width="0.0195%" height="15" fill="rgb(226,19,45)" fg:x="24145" fg:w="15"/><text x="31.6023%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (13 samples, 0.02%)</title><rect x="31.3549%" y="1733" width="0.0169%" height="15" fill="rgb(246,7,45)" fg:x="24147" fg:w="13"/><text x="31.6049%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (30 samples, 0.04%)</title><rect x="31.3484%" y="1781" width="0.0390%" height="15" fill="rgb(225,45,2)" fg:x="24142" fg:w="30"/><text x="31.5984%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (12 samples, 0.02%)</title><rect x="31.3717%" y="1765" width="0.0156%" height="15" fill="rgb(221,80,29)" fg:x="24160" fg:w="12"/><text x="31.6217%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="31.3717%" y="1749" width="0.0156%" height="15" fill="rgb(228,11,19)" fg:x="24160" fg:w="12"/><text x="31.6217%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="31.3717%" y="1733" width="0.0156%" height="15" fill="rgb(243,17,21)" fg:x="24160" fg:w="12"/><text x="31.6217%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="31.3717%" y="1717" width="0.0156%" height="15" fill="rgb(243,88,8)" fg:x="24160" fg:w="12"/><text x="31.6217%" y="1727.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="31.3730%" y="1701" width="0.0143%" height="15" fill="rgb(214,17,9)" fg:x="24161" fg:w="11"/><text x="31.6230%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (9 samples, 0.01%)</title><rect x="31.3990%" y="1765" width="0.0117%" height="15" fill="rgb(232,169,15)" fg:x="24181" fg:w="9"/><text x="31.6490%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="31.3990%" y="1749" width="0.0117%" height="15" fill="rgb(232,86,53)" fg:x="24181" fg:w="9"/><text x="31.6490%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.07%)</title><rect x="31.4107%" y="1749" width="0.0701%" height="15" fill="rgb(222,100,4)" fg:x="24190" fg:w="54"/><text x="31.6607%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (53 samples, 0.07%)</title><rect x="31.4120%" y="1733" width="0.0688%" height="15" fill="rgb(253,151,38)" fg:x="24191" fg:w="53"/><text x="31.6620%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (40 samples, 0.05%)</title><rect x="31.4289%" y="1717" width="0.0519%" height="15" fill="rgb(238,215,29)" fg:x="24204" fg:w="40"/><text x="31.6789%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (14 samples, 0.02%)</title><rect x="31.4626%" y="1701" width="0.0182%" height="15" fill="rgb(205,128,53)" fg:x="24230" fg:w="14"/><text x="31.7126%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (9 samples, 0.01%)</title><rect x="31.4691%" y="1685" width="0.0117%" height="15" fill="rgb(248,183,14)" fg:x="24235" fg:w="9"/><text x="31.7191%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="31.4821%" y="1717" width="0.0104%" height="15" fill="rgb(244,172,35)" fg:x="24245" fg:w="8"/><text x="31.7321%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="31.4821%" y="1701" width="0.0104%" height="15" fill="rgb(234,93,19)" fg:x="24245" fg:w="8"/><text x="31.7321%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (66 samples, 0.09%)</title><rect x="31.4107%" y="1765" width="0.0857%" height="15" fill="rgb(227,109,7)" fg:x="24190" fg:w="66"/><text x="31.6607%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (12 samples, 0.02%)</title><rect x="31.4808%" y="1749" width="0.0156%" height="15" fill="rgb(233,136,54)" fg:x="24244" fg:w="12"/><text x="31.7308%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="31.4808%" y="1733" width="0.0156%" height="15" fill="rgb(233,19,40)" fg:x="24244" fg:w="12"/><text x="31.7308%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (8 samples, 0.01%)</title><rect x="31.5055%" y="1733" width="0.0104%" height="15" fill="rgb(247,41,18)" fg:x="24263" fg:w="8"/><text x="31.7555%" y="1743.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="31.5055%" y="1717" width="0.0104%" height="15" fill="rgb(220,34,34)" fg:x="24263" fg:w="8"/><text x="31.7555%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="31.4964%" y="1749" width="0.0403%" height="15" fill="rgb(222,135,32)" fg:x="24256" fg:w="31"/><text x="31.7464%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (16 samples, 0.02%)</title><rect x="31.5159%" y="1733" width="0.0208%" height="15" fill="rgb(214,80,19)" fg:x="24271" fg:w="16"/><text x="31.7659%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="31.5431%" y="1669" width="0.0117%" height="15" fill="rgb(234,54,46)" fg:x="24292" fg:w="9"/><text x="31.7931%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (8 samples, 0.01%)</title><rect x="31.5444%" y="1653" width="0.0104%" height="15" fill="rgb(251,48,23)" fg:x="24293" fg:w="8"/><text x="31.7944%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="31.5548%" y="1637" width="0.0221%" height="15" fill="rgb(254,109,52)" fg:x="24301" fg:w="17"/><text x="31.8048%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="31.5548%" y="1621" width="0.0221%" height="15" fill="rgb(240,186,19)" fg:x="24301" fg:w="17"/><text x="31.8048%" y="1631.50"></text></g><g><title>cfree (15 samples, 0.02%)</title><rect x="31.5574%" y="1605" width="0.0195%" height="15" fill="rgb(246,187,17)" fg:x="24303" fg:w="15"/><text x="31.8074%" y="1615.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="31.5665%" y="1589" width="0.0104%" height="15" fill="rgb(212,21,5)" fg:x="24310" fg:w="8"/><text x="31.8165%" y="1599.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.04%)</title><rect x="31.5366%" y="1733" width="0.0416%" height="15" fill="rgb(225,185,18)" fg:x="24287" fg:w="32"/><text x="31.7866%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (27 samples, 0.04%)</title><rect x="31.5431%" y="1717" width="0.0351%" height="15" fill="rgb(245,114,17)" fg:x="24292" fg:w="27"/><text x="31.7931%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (27 samples, 0.04%)</title><rect x="31.5431%" y="1701" width="0.0351%" height="15" fill="rgb(223,164,24)" fg:x="24292" fg:w="27"/><text x="31.7931%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (27 samples, 0.04%)</title><rect x="31.5431%" y="1685" width="0.0351%" height="15" fill="rgb(211,228,3)" fg:x="24292" fg:w="27"/><text x="31.7931%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (18 samples, 0.02%)</title><rect x="31.5548%" y="1669" width="0.0234%" height="15" fill="rgb(223,16,38)" fg:x="24301" fg:w="18"/><text x="31.8048%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="31.5548%" y="1653" width="0.0234%" height="15" fill="rgb(207,31,54)" fg:x="24301" fg:w="18"/><text x="31.8048%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (164 samples, 0.21%)</title><rect x="31.3951%" y="1781" width="0.2130%" height="15" fill="rgb(220,39,11)" fg:x="24178" fg:w="164"/><text x="31.6451%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (86 samples, 0.11%)</title><rect x="31.4964%" y="1765" width="0.1117%" height="15" fill="rgb(235,185,0)" fg:x="24256" fg:w="86"/><text x="31.7464%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (55 samples, 0.07%)</title><rect x="31.5366%" y="1749" width="0.0714%" height="15" fill="rgb(249,39,18)" fg:x="24287" fg:w="55"/><text x="31.7866%" y="1759.50"></text></g><g><title>cfree (23 samples, 0.03%)</title><rect x="31.5782%" y="1733" width="0.0299%" height="15" fill="rgb(240,110,33)" fg:x="24319" fg:w="23"/><text x="31.8282%" y="1743.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="31.5860%" y="1717" width="0.0221%" height="15" fill="rgb(210,92,42)" fg:x="24325" fg:w="17"/><text x="31.8360%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (34 samples, 0.04%)</title><rect x="31.6081%" y="1781" width="0.0441%" height="15" fill="rgb(218,215,28)" fg:x="24342" fg:w="34"/><text x="31.8581%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (34 samples, 0.04%)</title><rect x="31.6081%" y="1765" width="0.0441%" height="15" fill="rgb(238,215,36)" fg:x="24342" fg:w="34"/><text x="31.8581%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (27 samples, 0.04%)</title><rect x="31.6172%" y="1749" width="0.0351%" height="15" fill="rgb(220,31,10)" fg:x="24349" fg:w="27"/><text x="31.8672%" y="1759.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.04%)</title><rect x="31.6172%" y="1733" width="0.0351%" height="15" fill="rgb(212,93,14)" fg:x="24349" fg:w="27"/><text x="31.8672%" y="1743.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.01%)</title><rect x="31.6418%" y="1717" width="0.0104%" height="15" fill="rgb(254,207,2)" fg:x="24368" fg:w="8"/><text x="31.8918%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.01%)</title><rect x="31.6418%" y="1701" width="0.0104%" height="15" fill="rgb(205,57,44)" fg:x="24368" fg:w="8"/><text x="31.8918%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (15 samples, 0.02%)</title><rect x="31.6522%" y="1781" width="0.0195%" height="15" fill="rgb(226,151,19)" fg:x="24376" fg:w="15"/><text x="31.9022%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="31.6587%" y="1765" width="0.0130%" height="15" fill="rgb(230,72,30)" fg:x="24381" fg:w="10"/><text x="31.9087%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (24 samples, 0.03%)</title><rect x="31.6717%" y="1781" width="0.0312%" height="15" fill="rgb(244,0,8)" fg:x="24391" fg:w="24"/><text x="31.9217%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (14 samples, 0.02%)</title><rect x="31.7067%" y="1781" width="0.0182%" height="15" fill="rgb(230,192,6)" fg:x="24418" fg:w="14"/><text x="31.9567%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (23 samples, 0.03%)</title><rect x="31.7249%" y="1781" width="0.0299%" height="15" fill="rgb(233,207,13)" fg:x="24432" fg:w="23"/><text x="31.9749%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.02%)</title><rect x="31.7392%" y="1765" width="0.0156%" height="15" fill="rgb(206,227,7)" fg:x="24443" fg:w="12"/><text x="31.9892%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (23 samples, 0.03%)</title><rect x="31.7587%" y="1765" width="0.0299%" height="15" fill="rgb(213,217,25)" fg:x="24458" fg:w="23"/><text x="32.0087%" y="1775.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="32.3885%" y="1749" width="0.0117%" height="15" fill="rgb(249,75,4)" fg:x="24943" fg:w="9"/><text x="32.6385%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (62 samples, 0.08%)</title><rect x="32.4014%" y="1749" width="0.0805%" height="15" fill="rgb(225,114,18)" fg:x="24953" fg:w="62"/><text x="32.6514%" y="1759.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (35 samples, 0.05%)</title><rect x="32.4871%" y="1749" width="0.0454%" height="15" fill="rgb(211,162,40)" fg:x="25019" fg:w="35"/><text x="32.7371%" y="1759.50"></text></g><g><title>cfree (15 samples, 0.02%)</title><rect x="32.5404%" y="1749" width="0.0195%" height="15" fill="rgb(206,49,29)" fg:x="25060" fg:w="15"/><text x="32.7904%" y="1759.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="32.5495%" y="1733" width="0.0104%" height="15" fill="rgb(244,8,6)" fg:x="25067" fg:w="8"/><text x="32.7995%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (18 samples, 0.02%)</title><rect x="32.5625%" y="1749" width="0.0234%" height="15" fill="rgb(231,194,28)" fg:x="25077" fg:w="18"/><text x="32.8125%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (13 samples, 0.02%)</title><rect x="32.5858%" y="1749" width="0.0169%" height="15" fill="rgb(210,69,5)" fg:x="25095" fg:w="13"/><text x="32.8358%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (9 samples, 0.01%)</title><rect x="32.6040%" y="1749" width="0.0117%" height="15" fill="rgb(216,186,12)" fg:x="25109" fg:w="9"/><text x="32.8540%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (9 samples, 0.01%)</title><rect x="32.6040%" y="1733" width="0.0117%" height="15" fill="rgb(238,61,15)" fg:x="25109" fg:w="9"/><text x="32.8540%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (57 samples, 0.07%)</title><rect x="32.9066%" y="1733" width="0.0740%" height="15" fill="rgb(226,104,1)" fg:x="25342" fg:w="57"/><text x="33.1566%" y="1743.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (52 samples, 0.07%)</title><rect x="32.9806%" y="1733" width="0.0675%" height="15" fill="rgb(229,128,15)" fg:x="25399" fg:w="52"/><text x="33.2306%" y="1743.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="33.0182%" y="1717" width="0.0299%" height="15" fill="rgb(247,110,15)" fg:x="25428" fg:w="23"/><text x="33.2682%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.02%)</title><rect x="33.0260%" y="1701" width="0.0221%" height="15" fill="rgb(210,74,48)" fg:x="25434" fg:w="17"/><text x="33.2760%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (17 samples, 0.02%)</title><rect x="33.0260%" y="1685" width="0.0221%" height="15" fill="rgb(246,121,10)" fg:x="25434" fg:w="17"/><text x="33.2760%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="33.0260%" y="1669" width="0.0221%" height="15" fill="rgb(214,156,37)" fg:x="25434" fg:w="17"/><text x="33.2760%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="33.0260%" y="1653" width="0.0221%" height="15" fill="rgb(214,210,34)" fg:x="25434" fg:w="17"/><text x="33.2760%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="33.0260%" y="1637" width="0.0221%" height="15" fill="rgb(237,93,35)" fg:x="25434" fg:w="17"/><text x="33.2760%" y="1647.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="33.0377%" y="1621" width="0.0104%" height="15" fill="rgb(206,36,8)" fg:x="25443" fg:w="8"/><text x="33.2877%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (33 samples, 0.04%)</title><rect x="33.0494%" y="1733" width="0.0429%" height="15" fill="rgb(208,151,12)" fg:x="25452" fg:w="33"/><text x="33.2994%" y="1743.50"></text></g><g><title>alloc::alloc::exchange_malloc (31 samples, 0.04%)</title><rect x="33.0520%" y="1717" width="0.0403%" height="15" fill="rgb(225,133,52)" fg:x="25454" fg:w="31"/><text x="33.3020%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.03%)</title><rect x="33.0663%" y="1701" width="0.0260%" height="15" fill="rgb(231,71,53)" fg:x="25465" fg:w="20"/><text x="33.3163%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.03%)</title><rect x="33.0663%" y="1685" width="0.0260%" height="15" fill="rgb(243,76,21)" fg:x="25465" fg:w="20"/><text x="33.3163%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="33.0663%" y="1669" width="0.0260%" height="15" fill="rgb(252,144,3)" fg:x="25465" fg:w="20"/><text x="33.3163%" y="1679.50"></text></g><g><title>malloc (13 samples, 0.02%)</title><rect x="33.0754%" y="1653" width="0.0169%" height="15" fill="rgb(231,199,10)" fg:x="25472" fg:w="13"/><text x="33.3254%" y="1663.50"></text></g><g><title>cfree (37 samples, 0.05%)</title><rect x="33.0922%" y="1733" width="0.0480%" height="15" fill="rgb(215,18,11)" fg:x="25485" fg:w="37"/><text x="33.3422%" y="1743.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="33.1156%" y="1717" width="0.0247%" height="15" fill="rgb(241,65,24)" fg:x="25503" fg:w="19"/><text x="33.3656%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (9 samples, 0.01%)</title><rect x="33.1455%" y="1733" width="0.0117%" height="15" fill="rgb(251,192,38)" fg:x="25526" fg:w="9"/><text x="33.3955%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (12 samples, 0.02%)</title><rect x="33.1883%" y="1717" width="0.0156%" height="15" fill="rgb(205,9,35)" fg:x="25559" fg:w="12"/><text x="33.4383%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (38 samples, 0.05%)</title><rect x="33.1572%" y="1733" width="0.0493%" height="15" fill="rgb(229,225,49)" fg:x="25535" fg:w="38"/><text x="33.4072%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.02%)</title><rect x="33.2442%" y="1717" width="0.0169%" height="15" fill="rgb(207,125,39)" fg:x="25602" fg:w="13"/><text x="33.4942%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (46 samples, 0.06%)</title><rect x="33.2221%" y="1733" width="0.0597%" height="15" fill="rgb(222,78,19)" fg:x="25585" fg:w="46"/><text x="33.4721%" y="1743.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (16 samples, 0.02%)</title><rect x="33.2611%" y="1717" width="0.0208%" height="15" fill="rgb(248,207,20)" fg:x="25615" fg:w="16"/><text x="33.5111%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.04%)</title><rect x="33.3883%" y="1701" width="0.0364%" height="15" fill="rgb(205,103,49)" fg:x="25713" fg:w="28"/><text x="33.6383%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.04%)</title><rect x="33.3883%" y="1685" width="0.0364%" height="15" fill="rgb(216,42,28)" fg:x="25713" fg:w="28"/><text x="33.6383%" y="1695.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.04%)</title><rect x="33.3883%" y="1669" width="0.0364%" height="15" fill="rgb(213,205,53)" fg:x="25713" fg:w="28"/><text x="33.6383%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (27 samples, 0.04%)</title><rect x="33.3896%" y="1653" width="0.0351%" height="15" fill="rgb(239,140,53)" fg:x="25714" fg:w="27"/><text x="33.6396%" y="1663.50"></text></g><g><title>alloc::alloc::Global::grow_impl (27 samples, 0.04%)</title><rect x="33.3896%" y="1637" width="0.0351%" height="15" fill="rgb(248,95,9)" fg:x="25714" fg:w="27"/><text x="33.6396%" y="1647.50"></text></g><g><title>alloc::alloc::realloc (27 samples, 0.04%)</title><rect x="33.3896%" y="1621" width="0.0351%" height="15" fill="rgb(254,58,47)" fg:x="25714" fg:w="27"/><text x="33.6396%" y="1631.50"></text></g><g><title>realloc (26 samples, 0.03%)</title><rect x="33.3909%" y="1605" width="0.0338%" height="15" fill="rgb(234,227,14)" fg:x="25715" fg:w="26"/><text x="33.6409%" y="1615.50"></text></g><g><title>[libc.so.6] (24 samples, 0.03%)</title><rect x="33.3935%" y="1589" width="0.0312%" height="15" fill="rgb(205,192,45)" fg:x="25717" fg:w="24"/><text x="33.6435%" y="1599.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="33.3961%" y="1573" width="0.0286%" height="15" fill="rgb(253,187,31)" fg:x="25719" fg:w="22"/><text x="33.6461%" y="1583.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (124 samples, 0.16%)</title><rect x="33.2818%" y="1733" width="0.1610%" height="15" fill="rgb(222,6,32)" fg:x="25631" fg:w="124"/><text x="33.5318%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (51 samples, 0.07%)</title><rect x="33.3766%" y="1717" width="0.0662%" height="15" fill="rgb(249,190,19)" fg:x="25704" fg:w="51"/><text x="33.6266%" y="1727.50"></text></g><g><title>core::ptr::write (14 samples, 0.02%)</title><rect x="33.4247%" y="1701" width="0.0182%" height="15" fill="rgb(251,28,20)" fg:x="25741" fg:w="14"/><text x="33.6747%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::check_ability (9 samples, 0.01%)</title><rect x="33.4428%" y="1733" width="0.0117%" height="15" fill="rgb(210,223,40)" fg:x="25755" fg:w="9"/><text x="33.6928%" y="1743.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.02%)</title><rect x="33.5039%" y="1717" width="0.0169%" height="15" fill="rgb(216,137,22)" fg:x="25802" fg:w="13"/><text x="33.7539%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="33.5039%" y="1701" width="0.0169%" height="15" fill="rgb(247,39,34)" fg:x="25802" fg:w="13"/><text x="33.7539%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="33.5039%" y="1685" width="0.0169%" height="15" fill="rgb(239,43,50)" fg:x="25802" fg:w="13"/><text x="33.7539%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="33.5039%" y="1669" width="0.0169%" height="15" fill="rgb(241,212,9)" fg:x="25802" fg:w="13"/><text x="33.7539%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="33.5246%" y="1589" width="0.0104%" height="15" fill="rgb(205,8,2)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (8 samples, 0.01%)</title><rect x="33.5246%" y="1573" width="0.0104%" height="15" fill="rgb(217,173,54)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="33.5246%" y="1557" width="0.0104%" height="15" fill="rgb(208,149,52)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="33.5246%" y="1541" width="0.0104%" height="15" fill="rgb(239,99,40)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="33.5246%" y="1525" width="0.0104%" height="15" fill="rgb(233,214,26)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1535.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="33.5246%" y="1509" width="0.0104%" height="15" fill="rgb(231,225,37)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (8 samples, 0.01%)</title><rect x="33.5246%" y="1493" width="0.0104%" height="15" fill="rgb(252,55,35)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (8 samples, 0.01%)</title><rect x="33.5246%" y="1477" width="0.0104%" height="15" fill="rgb(239,43,18)" fg:x="25818" fg:w="8"/><text x="33.7746%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="33.5208%" y="1717" width="0.0169%" height="15" fill="rgb(251,125,49)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="33.5208%" y="1701" width="0.0169%" height="15" fill="rgb(212,83,54)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 0.02%)</title><rect x="33.5208%" y="1685" width="0.0169%" height="15" fill="rgb(250,75,6)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (13 samples, 0.02%)</title><rect x="33.5208%" y="1669" width="0.0169%" height="15" fill="rgb(252,36,40)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="33.5208%" y="1653" width="0.0169%" height="15" fill="rgb(230,91,51)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="33.5208%" y="1637" width="0.0169%" height="15" fill="rgb(212,92,28)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="33.5208%" y="1621" width="0.0169%" height="15" fill="rgb(227,13,22)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="33.5208%" y="1605" width="0.0169%" height="15" fill="rgb(239,204,32)" fg:x="25815" fg:w="13"/><text x="33.7708%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (8 samples, 0.01%)</title><rect x="33.5389%" y="1717" width="0.0104%" height="15" fill="rgb(228,49,41)" fg:x="25829" fg:w="8"/><text x="33.7889%" y="1727.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="33.5389%" y="1701" width="0.0104%" height="15" fill="rgb(206,95,6)" fg:x="25829" fg:w="8"/><text x="33.7889%" y="1711.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (8 samples, 0.01%)</title><rect x="33.5389%" y="1685" width="0.0104%" height="15" fill="rgb(251,20,14)" fg:x="25829" fg:w="8"/><text x="33.7889%" y="1695.50"></text></g><g><title>&lt;move_binary_format::file_format::AbilitySetIterator as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="33.5948%" y="1573" width="0.0104%" height="15" fill="rgb(214,99,28)" fg:x="25872" fg:w="8"/><text x="33.8448%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.04%)</title><rect x="33.5935%" y="1605" width="0.0351%" height="15" fill="rgb(239,122,54)" fg:x="25871" fg:w="27"/><text x="33.8435%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (27 samples, 0.04%)</title><rect x="33.5935%" y="1589" width="0.0351%" height="15" fill="rgb(218,217,46)" fg:x="25871" fg:w="27"/><text x="33.8435%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (18 samples, 0.02%)</title><rect x="33.6052%" y="1573" width="0.0234%" height="15" fill="rgb(249,106,28)" fg:x="25880" fg:w="18"/><text x="33.8552%" y="1583.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities::{{closure}}::{{closure}} (12 samples, 0.02%)</title><rect x="33.6129%" y="1557" width="0.0156%" height="15" fill="rgb(250,158,18)" fg:x="25886" fg:w="12"/><text x="33.8629%" y="1567.50"></text></g><g><title>move_binary_format::file_format::Ability::required_by (12 samples, 0.02%)</title><rect x="33.6129%" y="1541" width="0.0156%" height="15" fill="rgb(226,137,29)" fg:x="25886" fg:w="12"/><text x="33.8629%" y="1551.50"></text></g><g><title>&lt;move_binary_format::file_format::AbilitySet as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.02%)</title><rect x="33.6285%" y="1605" width="0.0169%" height="15" fill="rgb(210,188,1)" fg:x="25898" fg:w="13"/><text x="33.8785%" y="1615.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (48 samples, 0.06%)</title><rect x="33.5857%" y="1653" width="0.0623%" height="15" fill="rgb(227,84,42)" fg:x="25865" fg:w="48"/><text x="33.8357%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (43 samples, 0.06%)</title><rect x="33.5922%" y="1637" width="0.0558%" height="15" fill="rgb(222,147,48)" fg:x="25870" fg:w="43"/><text x="33.8422%" y="1647.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities::{{closure}} (43 samples, 0.06%)</title><rect x="33.5922%" y="1621" width="0.0558%" height="15" fill="rgb(241,150,43)" fg:x="25870" fg:w="43"/><text x="33.8422%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="33.6519%" y="1541" width="0.0130%" height="15" fill="rgb(206,139,52)" fg:x="25916" fg:w="10"/><text x="33.9019%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="33.6519%" y="1525" width="0.0130%" height="15" fill="rgb(230,63,14)" fg:x="25916" fg:w="10"/><text x="33.9019%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;,alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="33.6480%" y="1653" width="0.0182%" height="15" fill="rgb(247,8,20)" fg:x="25913" fg:w="14"/><text x="33.8980%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (11 samples, 0.01%)</title><rect x="33.6519%" y="1637" width="0.0143%" height="15" fill="rgb(213,115,4)" fg:x="25916" fg:w="11"/><text x="33.9019%" y="1647.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="33.6519%" y="1621" width="0.0143%" height="15" fill="rgb(241,79,49)" fg:x="25916" fg:w="11"/><text x="33.9019%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;move_binary_format::file_format::AbilitySet,alloc::alloc::Global&gt;&gt; (11 samples, 0.01%)</title><rect x="33.6519%" y="1605" width="0.0143%" height="15" fill="rgb(222,42,35)" fg:x="25916" fg:w="11"/><text x="33.9019%" y="1615.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="33.6519%" y="1589" width="0.0143%" height="15" fill="rgb(247,59,23)" fg:x="25916" fg:w="11"/><text x="33.9019%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (11 samples, 0.01%)</title><rect x="33.6519%" y="1573" width="0.0143%" height="15" fill="rgb(247,93,18)" fg:x="25916" fg:w="11"/><text x="33.9019%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="33.6519%" y="1557" width="0.0143%" height="15" fill="rgb(249,107,47)" fg:x="25916" fg:w="11"/><text x="33.9019%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 0.10%)</title><rect x="33.5649%" y="1701" width="0.1039%" height="15" fill="rgb(219,27,1)" fg:x="25849" fg:w="80"/><text x="33.8149%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (79 samples, 0.10%)</title><rect x="33.5662%" y="1685" width="0.1026%" height="15" fill="rgb(217,82,32)" fg:x="25850" fg:w="79"/><text x="33.8162%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 0.09%)</title><rect x="33.5805%" y="1669" width="0.0883%" height="15" fill="rgb(250,129,47)" fg:x="25861" fg:w="68"/><text x="33.8305%" y="1679.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (89 samples, 0.12%)</title><rect x="33.5545%" y="1717" width="0.1156%" height="15" fill="rgb(253,88,35)" fg:x="25841" fg:w="89"/><text x="33.8045%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (201 samples, 0.26%)</title><rect x="33.4545%" y="1733" width="0.2610%" height="15" fill="rgb(245,221,14)" fg:x="25764" fg:w="201"/><text x="33.7045%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (30 samples, 0.04%)</title><rect x="33.6766%" y="1717" width="0.0390%" height="15" fill="rgb(217,119,54)" fg:x="25935" fg:w="30"/><text x="33.9266%" y="1727.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.04%)</title><rect x="33.6779%" y="1701" width="0.0377%" height="15" fill="rgb(247,128,31)" fg:x="25936" fg:w="29"/><text x="33.9279%" y="1711.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="33.7012%" y="1685" width="0.0143%" height="15" fill="rgb(211,99,22)" fg:x="25954" fg:w="11"/><text x="33.9512%" y="1695.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="33.7012%" y="1669" width="0.0143%" height="15" fill="rgb(212,20,17)" fg:x="25954" fg:w="11"/><text x="33.9512%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="33.7532%" y="1589" width="0.0234%" height="15" fill="rgb(209,159,29)" fg:x="25994" fg:w="18"/><text x="34.0032%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (18 samples, 0.02%)</title><rect x="33.7532%" y="1573" width="0.0234%" height="15" fill="rgb(222,177,53)" fg:x="25994" fg:w="18"/><text x="34.0032%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="33.7532%" y="1557" width="0.0234%" height="15" fill="rgb(234,46,43)" fg:x="25994" fg:w="18"/><text x="34.0032%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="33.7532%" y="1541" width="0.0234%" height="15" fill="rgb(208,108,14)" fg:x="25994" fg:w="18"/><text x="34.0032%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="33.7532%" y="1525" width="0.0234%" height="15" fill="rgb(226,78,53)" fg:x="25994" fg:w="18"/><text x="34.0032%" y="1535.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (17 samples, 0.02%)</title><rect x="33.7545%" y="1509" width="0.0221%" height="15" fill="rgb(230,20,41)" fg:x="25995" fg:w="17"/><text x="34.0045%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (17 samples, 0.02%)</title><rect x="33.7545%" y="1493" width="0.0221%" height="15" fill="rgb(213,195,35)" fg:x="25995" fg:w="17"/><text x="34.0045%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (17 samples, 0.02%)</title><rect x="33.7545%" y="1477" width="0.0221%" height="15" fill="rgb(242,62,36)" fg:x="25995" fg:w="17"/><text x="34.0045%" y="1487.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (16 samples, 0.02%)</title><rect x="33.7558%" y="1461" width="0.0208%" height="15" fill="rgb(222,210,37)" fg:x="25996" fg:w="16"/><text x="34.0058%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (40 samples, 0.05%)</title><rect x="33.7324%" y="1717" width="0.0519%" height="15" fill="rgb(232,107,19)" fg:x="25978" fg:w="40"/><text x="33.9824%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (40 samples, 0.05%)</title><rect x="33.7324%" y="1701" width="0.0519%" height="15" fill="rgb(235,85,17)" fg:x="25978" fg:w="40"/><text x="33.9824%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (38 samples, 0.05%)</title><rect x="33.7350%" y="1685" width="0.0493%" height="15" fill="rgb(219,195,31)" fg:x="25980" fg:w="38"/><text x="33.9850%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (31 samples, 0.04%)</title><rect x="33.7441%" y="1669" width="0.0403%" height="15" fill="rgb(231,183,30)" fg:x="25987" fg:w="31"/><text x="33.9941%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.04%)</title><rect x="33.7441%" y="1653" width="0.0403%" height="15" fill="rgb(212,0,11)" fg:x="25987" fg:w="31"/><text x="33.9941%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 0.04%)</title><rect x="33.7441%" y="1637" width="0.0403%" height="15" fill="rgb(249,53,54)" fg:x="25987" fg:w="31"/><text x="33.9941%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.04%)</title><rect x="33.7480%" y="1621" width="0.0364%" height="15" fill="rgb(211,118,13)" fg:x="25990" fg:w="28"/><text x="33.9980%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.03%)</title><rect x="33.7532%" y="1605" width="0.0312%" height="15" fill="rgb(237,42,9)" fg:x="25994" fg:w="24"/><text x="34.0032%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (49 samples, 0.06%)</title><rect x="33.7246%" y="1733" width="0.0636%" height="15" fill="rgb(227,68,32)" fg:x="25972" fg:w="49"/><text x="33.9746%" y="1743.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.01%)</title><rect x="33.8259%" y="1685" width="0.0104%" height="15" fill="rgb(238,10,7)" fg:x="26050" fg:w="8"/><text x="34.0759%" y="1695.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="33.8142%" y="1717" width="0.0260%" height="15" fill="rgb(224,42,12)" fg:x="26041" fg:w="20"/><text x="34.0642%" y="1727.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="33.8259%" y="1701" width="0.0143%" height="15" fill="rgb(252,190,5)" fg:x="26050" fg:w="11"/><text x="34.0759%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (54 samples, 0.07%)</title><rect x="33.7882%" y="1733" width="0.0701%" height="15" fill="rgb(220,214,39)" fg:x="26021" fg:w="54"/><text x="34.0382%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (10 samples, 0.01%)</title><rect x="33.8454%" y="1717" width="0.0130%" height="15" fill="rgb(247,98,4)" fg:x="26065" fg:w="10"/><text x="34.0954%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="33.8908%" y="1589" width="0.0104%" height="15" fill="rgb(211,60,12)" fg:x="26100" fg:w="8"/><text x="34.1408%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (8 samples, 0.01%)</title><rect x="33.8908%" y="1573" width="0.0104%" height="15" fill="rgb(224,42,10)" fg:x="26100" fg:w="8"/><text x="34.1408%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="33.8908%" y="1557" width="0.0104%" height="15" fill="rgb(217,167,4)" fg:x="26100" fg:w="8"/><text x="34.1408%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="33.8908%" y="1541" width="0.0104%" height="15" fill="rgb(253,18,17)" fg:x="26100" fg:w="8"/><text x="34.1408%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="33.8908%" y="1525" width="0.0104%" height="15" fill="rgb(249,186,44)" fg:x="26100" fg:w="8"/><text x="34.1408%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.03%)</title><rect x="33.8739%" y="1717" width="0.0325%" height="15" fill="rgb(254,124,54)" fg:x="26087" fg:w="25"/><text x="34.1239%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="33.8739%" y="1701" width="0.0325%" height="15" fill="rgb(220,124,39)" fg:x="26087" fg:w="25"/><text x="34.1239%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 0.03%)</title><rect x="33.8752%" y="1685" width="0.0312%" height="15" fill="rgb(225,96,46)" fg:x="26088" fg:w="24"/><text x="34.1252%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (20 samples, 0.03%)</title><rect x="33.8804%" y="1669" width="0.0260%" height="15" fill="rgb(221,106,12)" fg:x="26092" fg:w="20"/><text x="34.1304%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="33.8804%" y="1653" width="0.0260%" height="15" fill="rgb(227,133,23)" fg:x="26092" fg:w="20"/><text x="34.1304%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="33.8804%" y="1637" width="0.0260%" height="15" fill="rgb(216,44,52)" fg:x="26092" fg:w="20"/><text x="34.1304%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="33.8843%" y="1621" width="0.0221%" height="15" fill="rgb(239,149,7)" fg:x="26095" fg:w="17"/><text x="34.1343%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="33.8882%" y="1605" width="0.0182%" height="15" fill="rgb(211,157,31)" fg:x="26098" fg:w="14"/><text x="34.1382%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="33.9129%" y="1669" width="0.0117%" height="15" fill="rgb(206,215,22)" fg:x="26117" fg:w="9"/><text x="34.1629%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="33.9129%" y="1653" width="0.0117%" height="15" fill="rgb(208,113,15)" fg:x="26117" fg:w="9"/><text x="34.1629%" y="1663.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="33.9142%" y="1637" width="0.0104%" height="15" fill="rgb(207,189,15)" fg:x="26118" fg:w="8"/><text x="34.1642%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.02%)</title><rect x="33.9064%" y="1717" width="0.0195%" height="15" fill="rgb(231,115,4)" fg:x="26112" fg:w="15"/><text x="34.1564%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (10 samples, 0.01%)</title><rect x="33.9129%" y="1701" width="0.0130%" height="15" fill="rgb(253,117,2)" fg:x="26117" fg:w="10"/><text x="34.1629%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="33.9129%" y="1685" width="0.0130%" height="15" fill="rgb(248,48,24)" fg:x="26117" fg:w="10"/><text x="34.1629%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (9 samples, 0.01%)</title><rect x="33.9259%" y="1717" width="0.0117%" height="15" fill="rgb(241,28,46)" fg:x="26127" fg:w="9"/><text x="34.1759%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="33.9609%" y="1685" width="0.0104%" height="15" fill="rgb(216,165,52)" fg:x="26154" fg:w="8"/><text x="34.2109%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.01%)</title><rect x="33.9609%" y="1669" width="0.0104%" height="15" fill="rgb(220,222,34)" fg:x="26154" fg:w="8"/><text x="34.2109%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="33.9609%" y="1653" width="0.0104%" height="15" fill="rgb(247,222,49)" fg:x="26154" fg:w="8"/><text x="34.2109%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (96 samples, 0.12%)</title><rect x="33.8610%" y="1733" width="0.1247%" height="15" fill="rgb(240,10,31)" fg:x="26077" fg:w="96"/><text x="34.1110%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (37 samples, 0.05%)</title><rect x="33.9376%" y="1717" width="0.0480%" height="15" fill="rgb(221,199,35)" fg:x="26136" fg:w="37"/><text x="34.1876%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (33 samples, 0.04%)</title><rect x="33.9428%" y="1701" width="0.0429%" height="15" fill="rgb(230,223,11)" fg:x="26140" fg:w="33"/><text x="34.1928%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="33.9713%" y="1685" width="0.0143%" height="15" fill="rgb(218,82,45)" fg:x="26162" fg:w="11"/><text x="34.2213%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="34.0038%" y="1589" width="0.0117%" height="15" fill="rgb(233,213,33)" fg:x="26187" fg:w="9"/><text x="34.2538%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (9 samples, 0.01%)</title><rect x="34.0038%" y="1573" width="0.0117%" height="15" fill="rgb(210,143,52)" fg:x="26187" fg:w="9"/><text x="34.2538%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="34.0038%" y="1557" width="0.0117%" height="15" fill="rgb(206,95,4)" fg:x="26187" fg:w="9"/><text x="34.2538%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="34.0038%" y="1541" width="0.0117%" height="15" fill="rgb(246,164,46)" fg:x="26187" fg:w="9"/><text x="34.2538%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="34.0038%" y="1525" width="0.0117%" height="15" fill="rgb(213,210,47)" fg:x="26187" fg:w="9"/><text x="34.2538%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="33.9921%" y="1717" width="0.0260%" height="15" fill="rgb(210,12,38)" fg:x="26178" fg:w="20"/><text x="34.2421%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="33.9921%" y="1701" width="0.0260%" height="15" fill="rgb(252,192,54)" fg:x="26178" fg:w="20"/><text x="34.2421%" y="1711.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 0.03%)</title><rect x="33.9921%" y="1685" width="0.0260%" height="15" fill="rgb(242,92,6)" fg:x="26178" fg:w="20"/><text x="34.2421%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (19 samples, 0.02%)</title><rect x="33.9934%" y="1669" width="0.0247%" height="15" fill="rgb(253,154,15)" fg:x="26179" fg:w="19"/><text x="34.2434%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="33.9934%" y="1653" width="0.0247%" height="15" fill="rgb(209,20,43)" fg:x="26179" fg:w="19"/><text x="34.2434%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="33.9934%" y="1637" width="0.0247%" height="15" fill="rgb(232,28,49)" fg:x="26179" fg:w="19"/><text x="34.2434%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="33.9947%" y="1621" width="0.0234%" height="15" fill="rgb(248,131,53)" fg:x="26180" fg:w="18"/><text x="34.2447%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="33.9999%" y="1605" width="0.0182%" height="15" fill="rgb(214,16,30)" fg:x="26184" fg:w="14"/><text x="34.2499%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (39 samples, 0.05%)</title><rect x="33.9856%" y="1733" width="0.0506%" height="15" fill="rgb(245,16,0)" fg:x="26173" fg:w="39"/><text x="34.2356%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (14 samples, 0.02%)</title><rect x="34.0181%" y="1717" width="0.0182%" height="15" fill="rgb(245,17,35)" fg:x="26198" fg:w="14"/><text x="34.2681%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (13 samples, 0.02%)</title><rect x="34.0363%" y="1733" width="0.0169%" height="15" fill="rgb(249,27,53)" fg:x="26212" fg:w="13"/><text x="34.2863%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (54 samples, 0.07%)</title><rect x="34.0531%" y="1733" width="0.0701%" height="15" fill="rgb(214,73,24)" fg:x="26225" fg:w="54"/><text x="34.3031%" y="1743.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (29 samples, 0.04%)</title><rect x="34.0856%" y="1717" width="0.0377%" height="15" fill="rgb(223,84,37)" fg:x="26250" fg:w="29"/><text x="34.3356%" y="1727.50"></text></g><g><title>core::cmp::PartialEq::ne (29 samples, 0.04%)</title><rect x="34.0856%" y="1701" width="0.0377%" height="15" fill="rgb(210,109,28)" fg:x="26250" fg:w="29"/><text x="34.3356%" y="1711.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (29 samples, 0.04%)</title><rect x="34.0856%" y="1685" width="0.0377%" height="15" fill="rgb(208,186,6)" fg:x="26250" fg:w="29"/><text x="34.3356%" y="1695.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_ref_eq (8 samples, 0.01%)</title><rect x="34.1233%" y="1733" width="0.0104%" height="15" fill="rgb(235,201,30)" fg:x="26279" fg:w="8"/><text x="34.3733%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (1,176 samples, 1.53%)</title><rect x="32.6209%" y="1749" width="1.5270%" height="15" fill="rgb(216,198,48)" fg:x="25122" fg:w="1176"/><text x="32.8709%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::from_const_signature (11 samples, 0.01%)</title><rect x="34.1336%" y="1733" width="0.0143%" height="15" fill="rgb(254,186,25)" fg:x="26287" fg:w="11"/><text x="34.3836%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="34.5245%" y="1733" width="0.0273%" height="15" fill="rgb(227,87,5)" fg:x="26588" fg:w="21"/><text x="34.7745%" y="1743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="34.5245%" y="1717" width="0.0273%" height="15" fill="rgb(236,205,25)" fg:x="26588" fg:w="21"/><text x="34.7745%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (10 samples, 0.01%)</title><rect x="34.5673%" y="1733" width="0.0130%" height="15" fill="rgb(229,99,32)" fg:x="26621" fg:w="10"/><text x="34.8173%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="34.6011%" y="1701" width="0.0221%" height="15" fill="rgb(231,177,31)" fg:x="26647" fg:w="17"/><text x="34.8511%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="34.6024%" y="1685" width="0.0208%" height="15" fill="rgb(246,15,2)" fg:x="26648" fg:w="16"/><text x="34.8524%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.02%)</title><rect x="34.6063%" y="1669" width="0.0169%" height="15" fill="rgb(207,39,15)" fg:x="26651" fg:w="13"/><text x="34.8563%" y="1679.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (20 samples, 0.03%)</title><rect x="34.5985%" y="1717" width="0.0260%" height="15" fill="rgb(207,44,9)" fg:x="26645" fg:w="20"/><text x="34.8485%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (36 samples, 0.05%)</title><rect x="34.5803%" y="1733" width="0.0467%" height="15" fill="rgb(225,224,33)" fg:x="26631" fg:w="36"/><text x="34.8303%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (9 samples, 0.01%)</title><rect x="34.6751%" y="1717" width="0.0117%" height="15" fill="rgb(252,151,3)" fg:x="26704" fg:w="9"/><text x="34.9251%" y="1727.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (9 samples, 0.01%)</title><rect x="34.6751%" y="1701" width="0.0117%" height="15" fill="rgb(211,140,13)" fg:x="26704" fg:w="9"/><text x="34.9251%" y="1711.50"></text></g><g><title>core::cell::BorrowRef::new (9 samples, 0.01%)</title><rect x="34.6751%" y="1685" width="0.0117%" height="15" fill="rgb(239,225,17)" fg:x="26704" fg:w="9"/><text x="34.9251%" y="1695.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="34.6751%" y="1669" width="0.0117%" height="15" fill="rgb(223,170,52)" fg:x="26704" fg:w="9"/><text x="34.9251%" y="1679.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (418 samples, 0.54%)</title><rect x="34.1479%" y="1749" width="0.5428%" height="15" fill="rgb(212,64,21)" fg:x="26298" fg:w="418"/><text x="34.3979%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (46 samples, 0.06%)</title><rect x="34.6310%" y="1733" width="0.0597%" height="15" fill="rgb(236,126,48)" fg:x="26670" fg:w="46"/><text x="34.8810%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (25 samples, 0.03%)</title><rect x="34.6907%" y="1749" width="0.0325%" height="15" fill="rgb(209,135,11)" fg:x="26716" fg:w="25"/><text x="34.9407%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.02%)</title><rect x="34.7361%" y="1717" width="0.0247%" height="15" fill="rgb(228,126,40)" fg:x="26751" fg:w="19"/><text x="34.9861%" y="1727.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="34.7764%" y="1701" width="0.0143%" height="15" fill="rgb(205,196,36)" fg:x="26782" fg:w="11"/><text x="35.0264%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (28 samples, 0.04%)</title><rect x="34.7608%" y="1717" width="0.0364%" height="15" fill="rgb(243,160,33)" fg:x="26770" fg:w="28"/><text x="35.0108%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="34.7972%" y="1701" width="0.0156%" height="15" fill="rgb(210,84,20)" fg:x="26798" fg:w="12"/><text x="35.0472%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (20 samples, 0.03%)</title><rect x="34.8128%" y="1701" width="0.0260%" height="15" fill="rgb(228,213,30)" fg:x="26810" fg:w="20"/><text x="35.0628%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (8 samples, 0.01%)</title><rect x="34.8283%" y="1685" width="0.0104%" height="15" fill="rgb(252,33,45)" fg:x="26822" fg:w="8"/><text x="35.0783%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (68 samples, 0.09%)</title><rect x="34.7972%" y="1717" width="0.0883%" height="15" fill="rgb(254,227,20)" fg:x="26798" fg:w="68"/><text x="35.0472%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (36 samples, 0.05%)</title><rect x="34.8387%" y="1701" width="0.0467%" height="15" fill="rgb(228,192,2)" fg:x="26830" fg:w="36"/><text x="35.0887%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (26 samples, 0.03%)</title><rect x="34.8517%" y="1685" width="0.0338%" height="15" fill="rgb(233,32,8)" fg:x="26840" fg:w="26"/><text x="35.1017%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (133 samples, 0.17%)</title><rect x="34.7232%" y="1749" width="0.1727%" height="15" fill="rgb(220,146,47)" fg:x="26741" fg:w="133"/><text x="34.9732%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (128 samples, 0.17%)</title><rect x="34.7297%" y="1733" width="0.1662%" height="15" fill="rgb(246,194,1)" fg:x="26746" fg:w="128"/><text x="34.9797%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (8 samples, 0.01%)</title><rect x="34.8855%" y="1717" width="0.0104%" height="15" fill="rgb(218,203,9)" fg:x="26866" fg:w="8"/><text x="35.1355%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="34.9179%" y="1717" width="0.0117%" height="15" fill="rgb(237,97,14)" fg:x="26891" fg:w="9"/><text x="35.1679%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::div_checked (8 samples, 0.01%)</title><rect x="34.9517%" y="1685" width="0.0104%" height="15" fill="rgb(239,76,15)" fg:x="26917" fg:w="8"/><text x="35.2017%" y="1695.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 0.04%)</title><rect x="34.9517%" y="1701" width="0.0364%" height="15" fill="rgb(222,53,45)" fg:x="26917" fg:w="28"/><text x="35.2017%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::mul_checked (20 samples, 0.03%)</title><rect x="34.9621%" y="1685" width="0.0260%" height="15" fill="rgb(237,88,5)" fg:x="26925" fg:w="20"/><text x="35.2121%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (51 samples, 0.07%)</title><rect x="34.9296%" y="1717" width="0.0662%" height="15" fill="rgb(218,223,35)" fg:x="26900" fg:w="51"/><text x="35.1796%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="34.9958%" y="1701" width="0.0117%" height="15" fill="rgb(243,229,38)" fg:x="26951" fg:w="9"/><text x="35.2458%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (35 samples, 0.05%)</title><rect x="34.9958%" y="1717" width="0.0454%" height="15" fill="rgb(240,75,41)" fg:x="26951" fg:w="35"/><text x="35.2458%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (21 samples, 0.03%)</title><rect x="35.0140%" y="1701" width="0.0273%" height="15" fill="rgb(209,110,37)" fg:x="26965" fg:w="21"/><text x="35.2640%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (17 samples, 0.02%)</title><rect x="35.0192%" y="1685" width="0.0221%" height="15" fill="rgb(221,130,46)" fg:x="26969" fg:w="17"/><text x="35.2692%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (8 samples, 0.01%)</title><rect x="35.0309%" y="1669" width="0.0104%" height="15" fill="rgb(237,160,20)" fg:x="26978" fg:w="8"/><text x="35.2809%" y="1679.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (119 samples, 0.15%)</title><rect x="34.8959%" y="1749" width="0.1545%" height="15" fill="rgb(234,126,24)" fg:x="26874" fg:w="119"/><text x="35.1459%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (112 samples, 0.15%)</title><rect x="34.9049%" y="1733" width="0.1454%" height="15" fill="rgb(207,177,9)" fg:x="26881" fg:w="112"/><text x="35.1549%" y="1743.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="35.1569%" y="1637" width="0.0104%" height="15" fill="rgb(231,191,33)" fg:x="27075" fg:w="8"/><text x="35.4069%" y="1647.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.01%)</title><rect x="35.1672%" y="1637" width="0.0130%" height="15" fill="rgb(207,42,1)" fg:x="27083" fg:w="10"/><text x="35.4172%" y="1647.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (10 samples, 0.01%)</title><rect x="35.1672%" y="1621" width="0.0130%" height="15" fill="rgb(218,34,50)" fg:x="27083" fg:w="10"/><text x="35.4172%" y="1631.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (10 samples, 0.01%)</title><rect x="35.1672%" y="1605" width="0.0130%" height="15" fill="rgb(254,126,39)" fg:x="27083" fg:w="10"/><text x="35.4172%" y="1615.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (10 samples, 0.01%)</title><rect x="35.1672%" y="1589" width="0.0130%" height="15" fill="rgb(251,17,26)" fg:x="27083" fg:w="10"/><text x="35.4172%" y="1599.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (10 samples, 0.01%)</title><rect x="35.1672%" y="1573" width="0.0130%" height="15" fill="rgb(252,215,34)" fg:x="27083" fg:w="10"/><text x="35.4172%" y="1583.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (10 samples, 0.01%)</title><rect x="35.1672%" y="1557" width="0.0130%" height="15" fill="rgb(217,120,44)" fg:x="27083" fg:w="10"/><text x="35.4172%" y="1567.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (8 samples, 0.01%)</title><rect x="35.1841%" y="1621" width="0.0104%" height="15" fill="rgb(211,31,11)" fg:x="27096" fg:w="8"/><text x="35.4341%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (8 samples, 0.01%)</title><rect x="35.1841%" y="1605" width="0.0104%" height="15" fill="rgb(222,69,51)" fg:x="27096" fg:w="8"/><text x="35.4341%" y="1615.50"></text></g><g><title>bcs::de::from_bytes (12 samples, 0.02%)</title><rect x="35.1802%" y="1637" width="0.0156%" height="15" fill="rgb(215,229,42)" fg:x="27093" fg:w="12"/><text x="35.4302%" y="1647.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (9 samples, 0.01%)</title><rect x="35.2231%" y="1605" width="0.0117%" height="15" fill="rgb(212,102,15)" fg:x="27126" fg:w="9"/><text x="35.4731%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (10 samples, 0.01%)</title><rect x="35.2348%" y="1605" width="0.0130%" height="15" fill="rgb(205,179,41)" fg:x="27135" fg:w="10"/><text x="35.4848%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (10 samples, 0.01%)</title><rect x="35.2348%" y="1589" width="0.0130%" height="15" fill="rgb(219,148,46)" fg:x="27135" fg:w="10"/><text x="35.4848%" y="1599.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (9 samples, 0.01%)</title><rect x="35.2361%" y="1573" width="0.0117%" height="15" fill="rgb(243,40,19)" fg:x="27136" fg:w="9"/><text x="35.4861%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (8 samples, 0.01%)</title><rect x="35.2374%" y="1557" width="0.0104%" height="15" fill="rgb(208,206,34)" fg:x="27137" fg:w="8"/><text x="35.4874%" y="1567.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (8 samples, 0.01%)</title><rect x="35.2374%" y="1541" width="0.0104%" height="15" fill="rgb(244,184,38)" fg:x="27137" fg:w="8"/><text x="35.4874%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.01%)</title><rect x="35.2374%" y="1525" width="0.0104%" height="15" fill="rgb(244,151,47)" fg:x="27137" fg:w="8"/><text x="35.4874%" y="1535.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.01%)</title><rect x="35.2374%" y="1509" width="0.0104%" height="15" fill="rgb(236,134,42)" fg:x="27137" fg:w="8"/><text x="35.4874%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (13 samples, 0.02%)</title><rect x="35.2478%" y="1605" width="0.0169%" height="15" fill="rgb(233,93,22)" fg:x="27145" fg:w="13"/><text x="35.4978%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (13 samples, 0.02%)</title><rect x="35.2478%" y="1589" width="0.0169%" height="15" fill="rgb(211,202,10)" fg:x="27145" fg:w="13"/><text x="35.4978%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (13 samples, 0.02%)</title><rect x="35.2478%" y="1573" width="0.0169%" height="15" fill="rgb(240,63,8)" fg:x="27145" fg:w="13"/><text x="35.4978%" y="1583.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.02%)</title><rect x="35.2478%" y="1557" width="0.0169%" height="15" fill="rgb(214,9,4)" fg:x="27145" fg:w="13"/><text x="35.4978%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="35.2478%" y="1541" width="0.0169%" height="15" fill="rgb(243,66,45)" fg:x="27145" fg:w="13"/><text x="35.4978%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="35.2478%" y="1525" width="0.0169%" height="15" fill="rgb(220,50,42)" fg:x="27145" fg:w="13"/><text x="35.4978%" y="1535.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="35.2478%" y="1509" width="0.0169%" height="15" fill="rgb(220,134,27)" fg:x="27145" fg:w="13"/><text x="35.4978%" y="1519.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="35.2529%" y="1493" width="0.0117%" height="15" fill="rgb(246,151,50)" fg:x="27149" fg:w="9"/><text x="35.5029%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.03%)</title><rect x="35.2659%" y="1541" width="0.0273%" height="15" fill="rgb(238,216,27)" fg:x="27159" fg:w="21"/><text x="35.5159%" y="1551.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.03%)</title><rect x="35.2672%" y="1525" width="0.0260%" height="15" fill="rgb(250,92,11)" fg:x="27160" fg:w="20"/><text x="35.5172%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.02%)</title><rect x="35.2776%" y="1509" width="0.0156%" height="15" fill="rgb(248,183,6)" fg:x="27168" fg:w="12"/><text x="35.5276%" y="1519.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="35.2776%" y="1493" width="0.0156%" height="15" fill="rgb(211,204,50)" fg:x="27168" fg:w="12"/><text x="35.5276%" y="1503.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (134 samples, 0.17%)</title><rect x="35.1374%" y="1669" width="0.1740%" height="15" fill="rgb(252,55,47)" fg:x="27060" fg:w="134"/><text x="35.3874%" y="1679.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (132 samples, 0.17%)</title><rect x="35.1400%" y="1653" width="0.1714%" height="15" fill="rgb(240,198,32)" fg:x="27062" fg:w="132"/><text x="35.3900%" y="1663.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (77 samples, 0.10%)</title><rect x="35.2114%" y="1637" width="0.1000%" height="15" fill="rgb(224,203,19)" fg:x="27117" fg:w="77"/><text x="35.4614%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (71 samples, 0.09%)</title><rect x="35.2192%" y="1621" width="0.0922%" height="15" fill="rgb(205,27,16)" fg:x="27123" fg:w="71"/><text x="35.4692%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (36 samples, 0.05%)</title><rect x="35.2646%" y="1605" width="0.0467%" height="15" fill="rgb(224,226,17)" fg:x="27158" fg:w="36"/><text x="35.5146%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.05%)</title><rect x="35.2646%" y="1589" width="0.0467%" height="15" fill="rgb(205,216,54)" fg:x="27158" fg:w="36"/><text x="35.5146%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.05%)</title><rect x="35.2646%" y="1573" width="0.0467%" height="15" fill="rgb(248,168,46)" fg:x="27158" fg:w="36"/><text x="35.5146%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.05%)</title><rect x="35.2646%" y="1557" width="0.0467%" height="15" fill="rgb(226,111,45)" fg:x="27158" fg:w="36"/><text x="35.5146%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.02%)</title><rect x="35.2932%" y="1541" width="0.0182%" height="15" fill="rgb(231,15,9)" fg:x="27180" fg:w="14"/><text x="35.5432%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="35.2932%" y="1525" width="0.0182%" height="15" fill="rgb(243,168,3)" fg:x="27180" fg:w="14"/><text x="35.5432%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.02%)</title><rect x="35.2932%" y="1509" width="0.0182%" height="15" fill="rgb(221,220,54)" fg:x="27180" fg:w="14"/><text x="35.5432%" y="1519.50"></text></g><g><title>__rdl_alloc (8 samples, 0.01%)</title><rect x="35.3490%" y="1461" width="0.0104%" height="15" fill="rgb(232,174,38)" fg:x="27223" fg:w="8"/><text x="35.5990%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="35.3477%" y="1557" width="0.0143%" height="15" fill="rgb(205,14,38)" fg:x="27222" fg:w="11"/><text x="35.5977%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="35.3477%" y="1541" width="0.0143%" height="15" fill="rgb(234,89,19)" fg:x="27222" fg:w="11"/><text x="35.5977%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="35.3477%" y="1525" width="0.0143%" height="15" fill="rgb(216,68,51)" fg:x="27222" fg:w="11"/><text x="35.5977%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="35.3490%" y="1509" width="0.0130%" height="15" fill="rgb(213,49,2)" fg:x="27223" fg:w="10"/><text x="35.5990%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="35.3490%" y="1493" width="0.0130%" height="15" fill="rgb(242,146,30)" fg:x="27223" fg:w="10"/><text x="35.5990%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="35.3490%" y="1477" width="0.0130%" height="15" fill="rgb(224,188,11)" fg:x="27223" fg:w="10"/><text x="35.5990%" y="1487.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (29 samples, 0.04%)</title><rect x="35.3270%" y="1637" width="0.0377%" height="15" fill="rgb(213,159,11)" fg:x="27206" fg:w="29"/><text x="35.5770%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="35.3438%" y="1621" width="0.0208%" height="15" fill="rgb(229,13,31)" fg:x="27219" fg:w="16"/><text x="35.5938%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="35.3438%" y="1605" width="0.0208%" height="15" fill="rgb(209,103,11)" fg:x="27219" fg:w="16"/><text x="35.5938%" y="1615.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.02%)</title><rect x="35.3477%" y="1589" width="0.0169%" height="15" fill="rgb(206,3,4)" fg:x="27222" fg:w="13"/><text x="35.5977%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (13 samples, 0.02%)</title><rect x="35.3477%" y="1573" width="0.0169%" height="15" fill="rgb(252,10,49)" fg:x="27222" fg:w="13"/><text x="35.5977%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="35.3997%" y="1445" width="0.0156%" height="15" fill="rgb(217,160,32)" fg:x="27262" fg:w="12"/><text x="35.6497%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="35.3997%" y="1429" width="0.0156%" height="15" fill="rgb(249,196,0)" fg:x="27262" fg:w="12"/><text x="35.6497%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="35.4023%" y="1413" width="0.0130%" height="15" fill="rgb(213,17,48)" fg:x="27264" fg:w="10"/><text x="35.6523%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="35.4036%" y="1397" width="0.0117%" height="15" fill="rgb(206,42,46)" fg:x="27265" fg:w="9"/><text x="35.6536%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="35.4036%" y="1381" width="0.0117%" height="15" fill="rgb(212,105,24)" fg:x="27265" fg:w="9"/><text x="35.6536%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (17 samples, 0.02%)</title><rect x="35.3971%" y="1557" width="0.0221%" height="15" fill="rgb(243,216,30)" fg:x="27260" fg:w="17"/><text x="35.6471%" y="1567.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (16 samples, 0.02%)</title><rect x="35.3984%" y="1541" width="0.0208%" height="15" fill="rgb(207,121,3)" fg:x="27261" fg:w="16"/><text x="35.6484%" y="1551.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (16 samples, 0.02%)</title><rect x="35.3984%" y="1525" width="0.0208%" height="15" fill="rgb(249,78,0)" fg:x="27261" fg:w="16"/><text x="35.6484%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.02%)</title><rect x="35.3984%" y="1509" width="0.0208%" height="15" fill="rgb(244,151,32)" fg:x="27261" fg:w="16"/><text x="35.6484%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.02%)</title><rect x="35.3984%" y="1493" width="0.0208%" height="15" fill="rgb(228,63,25)" fg:x="27261" fg:w="16"/><text x="35.6484%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="35.3984%" y="1477" width="0.0208%" height="15" fill="rgb(231,158,23)" fg:x="27261" fg:w="16"/><text x="35.6484%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.02%)</title><rect x="35.3984%" y="1461" width="0.0208%" height="15" fill="rgb(248,107,23)" fg:x="27261" fg:w="16"/><text x="35.6484%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="35.4555%" y="1301" width="0.0156%" height="15" fill="rgb(215,168,21)" fg:x="27305" fg:w="12"/><text x="35.7055%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="35.4594%" y="1285" width="0.0117%" height="15" fill="rgb(227,83,22)" fg:x="27308" fg:w="9"/><text x="35.7094%" y="1295.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="35.4594%" y="1269" width="0.0117%" height="15" fill="rgb(217,118,43)" fg:x="27308" fg:w="9"/><text x="35.7094%" y="1279.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="35.4594%" y="1253" width="0.0117%" height="15" fill="rgb(229,220,41)" fg:x="27308" fg:w="9"/><text x="35.7094%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.04%)</title><rect x="35.4386%" y="1365" width="0.0403%" height="15" fill="rgb(254,146,46)" fg:x="27292" fg:w="31"/><text x="35.6886%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.04%)</title><rect x="35.4386%" y="1349" width="0.0403%" height="15" fill="rgb(233,208,31)" fg:x="27292" fg:w="31"/><text x="35.6886%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.03%)</title><rect x="35.4464%" y="1333" width="0.0325%" height="15" fill="rgb(222,162,7)" fg:x="27298" fg:w="25"/><text x="35.6964%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.03%)</title><rect x="35.4503%" y="1317" width="0.0286%" height="15" fill="rgb(230,117,45)" fg:x="27301" fg:w="22"/><text x="35.7003%" y="1327.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (46 samples, 0.06%)</title><rect x="35.4256%" y="1525" width="0.0597%" height="15" fill="rgb(239,163,6)" fg:x="27282" fg:w="46"/><text x="35.6756%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (46 samples, 0.06%)</title><rect x="35.4256%" y="1509" width="0.0597%" height="15" fill="rgb(246,130,17)" fg:x="27282" fg:w="46"/><text x="35.6756%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (46 samples, 0.06%)</title><rect x="35.4256%" y="1493" width="0.0597%" height="15" fill="rgb(216,84,5)" fg:x="27282" fg:w="46"/><text x="35.6756%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (46 samples, 0.06%)</title><rect x="35.4256%" y="1477" width="0.0597%" height="15" fill="rgb(230,200,21)" fg:x="27282" fg:w="46"/><text x="35.6756%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (45 samples, 0.06%)</title><rect x="35.4269%" y="1461" width="0.0584%" height="15" fill="rgb(224,2,8)" fg:x="27283" fg:w="45"/><text x="35.6769%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (45 samples, 0.06%)</title><rect x="35.4269%" y="1445" width="0.0584%" height="15" fill="rgb(238,178,10)" fg:x="27283" fg:w="45"/><text x="35.6769%" y="1455.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (45 samples, 0.06%)</title><rect x="35.4269%" y="1429" width="0.0584%" height="15" fill="rgb(242,153,24)" fg:x="27283" fg:w="45"/><text x="35.6769%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (45 samples, 0.06%)</title><rect x="35.4269%" y="1413" width="0.0584%" height="15" fill="rgb(242,32,48)" fg:x="27283" fg:w="45"/><text x="35.6769%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.06%)</title><rect x="35.4269%" y="1397" width="0.0584%" height="15" fill="rgb(227,36,0)" fg:x="27283" fg:w="45"/><text x="35.6769%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (45 samples, 0.06%)</title><rect x="35.4269%" y="1381" width="0.0584%" height="15" fill="rgb(251,33,35)" fg:x="27283" fg:w="45"/><text x="35.6769%" y="1391.50"></text></g><g><title>bcs::ser::to_bytes (82 samples, 0.11%)</title><rect x="35.3945%" y="1605" width="0.1065%" height="15" fill="rgb(232,168,51)" fg:x="27258" fg:w="82"/><text x="35.6445%" y="1615.50"></text></g><g><title>bcs::ser::serialize_into (81 samples, 0.11%)</title><rect x="35.3958%" y="1589" width="0.1052%" height="15" fill="rgb(228,56,10)" fg:x="27259" fg:w="81"/><text x="35.6458%" y="1599.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (81 samples, 0.11%)</title><rect x="35.3958%" y="1573" width="0.1052%" height="15" fill="rgb(231,10,26)" fg:x="27259" fg:w="81"/><text x="35.6458%" y="1583.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (63 samples, 0.08%)</title><rect x="35.4192%" y="1557" width="0.0818%" height="15" fill="rgb(226,202,12)" fg:x="27277" fg:w="63"/><text x="35.6692%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 0.08%)</title><rect x="35.4243%" y="1541" width="0.0766%" height="15" fill="rgb(251,49,21)" fg:x="27281" fg:w="59"/><text x="35.6743%" y="1551.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (12 samples, 0.02%)</title><rect x="35.4854%" y="1525" width="0.0156%" height="15" fill="rgb(206,228,28)" fg:x="27328" fg:w="12"/><text x="35.7354%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.02%)</title><rect x="35.4854%" y="1509" width="0.0156%" height="15" fill="rgb(205,198,31)" fg:x="27328" fg:w="12"/><text x="35.7354%" y="1519.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (121 samples, 0.16%)</title><rect x="35.3646%" y="1637" width="0.1571%" height="15" fill="rgb(213,69,1)" fg:x="27235" fg:w="121"/><text x="35.6146%" y="1647.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (106 samples, 0.14%)</title><rect x="35.3841%" y="1621" width="0.1376%" height="15" fill="rgb(209,177,9)" fg:x="27250" fg:w="106"/><text x="35.6341%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (16 samples, 0.02%)</title><rect x="35.5010%" y="1605" width="0.0208%" height="15" fill="rgb(227,119,30)" fg:x="27340" fg:w="16"/><text x="35.7510%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (12 samples, 0.02%)</title><rect x="35.5062%" y="1589" width="0.0156%" height="15" fill="rgb(234,106,41)" fg:x="27344" fg:w="12"/><text x="35.7562%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (11 samples, 0.01%)</title><rect x="35.5075%" y="1573" width="0.0143%" height="15" fill="rgb(244,103,47)" fg:x="27345" fg:w="11"/><text x="35.7575%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (11 samples, 0.01%)</title><rect x="35.5075%" y="1557" width="0.0143%" height="15" fill="rgb(212,211,25)" fg:x="27345" fg:w="11"/><text x="35.7575%" y="1567.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="35.5075%" y="1541" width="0.0143%" height="15" fill="rgb(208,63,53)" fg:x="27345" fg:w="11"/><text x="35.7575%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="35.5075%" y="1525" width="0.0143%" height="15" fill="rgb(213,176,21)" fg:x="27345" fg:w="11"/><text x="35.7575%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="35.5075%" y="1509" width="0.0143%" height="15" fill="rgb(243,124,12)" fg:x="27345" fg:w="11"/><text x="35.7575%" y="1519.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="35.5088%" y="1493" width="0.0130%" height="15" fill="rgb(239,2,35)" fg:x="27346" fg:w="10"/><text x="35.7588%" y="1503.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (13 samples, 0.02%)</title><rect x="35.5243%" y="1621" width="0.0169%" height="15" fill="rgb(253,169,22)" fg:x="27358" fg:w="13"/><text x="35.7743%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.01%)</title><rect x="35.5282%" y="1605" width="0.0130%" height="15" fill="rgb(254,51,12)" fg:x="27361" fg:w="10"/><text x="35.7782%" y="1615.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::access_path (17 samples, 0.02%)</title><rect x="35.5412%" y="1621" width="0.0221%" height="15" fill="rgb(244,17,47)" fg:x="27371" fg:w="17"/><text x="35.7912%" y="1631.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::new (12 samples, 0.02%)</title><rect x="35.5477%" y="1605" width="0.0156%" height="15" fill="rgb(251,45,46)" fg:x="27376" fg:w="12"/><text x="35.7977%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="35.5672%" y="1573" width="0.0169%" height="15" fill="rgb(223,87,43)" fg:x="27391" fg:w="13"/><text x="35.8172%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="35.5672%" y="1557" width="0.0169%" height="15" fill="rgb(230,132,31)" fg:x="27391" fg:w="13"/><text x="35.8172%" y="1567.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="35.5685%" y="1541" width="0.0156%" height="15" fill="rgb(206,99,1)" fg:x="27392" fg:w="12"/><text x="35.8185%" y="1551.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (49 samples, 0.06%)</title><rect x="35.5217%" y="1637" width="0.0636%" height="15" fill="rgb(227,110,25)" fg:x="27356" fg:w="49"/><text x="35.7717%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (17 samples, 0.02%)</title><rect x="35.5633%" y="1621" width="0.0221%" height="15" fill="rgb(217,182,7)" fg:x="27388" fg:w="17"/><text x="35.8133%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (17 samples, 0.02%)</title><rect x="35.5633%" y="1605" width="0.0221%" height="15" fill="rgb(250,176,4)" fg:x="27388" fg:w="17"/><text x="35.8133%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="35.5633%" y="1589" width="0.0221%" height="15" fill="rgb(244,98,30)" fg:x="27388" fg:w="17"/><text x="35.8133%" y="1599.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (212 samples, 0.28%)</title><rect x="35.3114%" y="1669" width="0.2753%" height="15" fill="rgb(228,150,42)" fg:x="27194" fg:w="212"/><text x="35.5614%" y="1679.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (207 samples, 0.27%)</title><rect x="35.3179%" y="1653" width="0.2688%" height="15" fill="rgb(231,91,46)" fg:x="27199" fg:w="207"/><text x="35.5679%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::borrow::Borrow&lt;move_core_types::identifier::IdentStr&gt;&gt;::borrow (8 samples, 0.01%)</title><rect x="35.5893%" y="1621" width="0.0104%" height="15" fill="rgb(252,161,32)" fg:x="27408" fg:w="8"/><text x="35.8393%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="35.6074%" y="1605" width="0.0143%" height="15" fill="rgb(236,69,41)" fg:x="27422" fg:w="11"/><text x="35.8574%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="35.6074%" y="1589" width="0.0143%" height="15" fill="rgb(212,160,3)" fg:x="27422" fg:w="11"/><text x="35.8574%" y="1599.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="35.6269%" y="1525" width="0.0156%" height="15" fill="rgb(216,5,50)" fg:x="27437" fg:w="12"/><text x="35.8769%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="35.6438%" y="1413" width="0.0182%" height="15" fill="rgb(241,138,25)" fg:x="27450" fg:w="14"/><text x="35.8938%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="35.6438%" y="1397" width="0.0182%" height="15" fill="rgb(239,42,18)" fg:x="27450" fg:w="14"/><text x="35.8938%" y="1407.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="35.6451%" y="1381" width="0.0169%" height="15" fill="rgb(239,40,7)" fg:x="27451" fg:w="13"/><text x="35.8951%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (44 samples, 0.06%)</title><rect x="35.6074%" y="1621" width="0.0571%" height="15" fill="rgb(239,11,31)" fg:x="27422" fg:w="44"/><text x="35.8574%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (33 samples, 0.04%)</title><rect x="35.6217%" y="1605" width="0.0429%" height="15" fill="rgb(224,77,40)" fg:x="27433" fg:w="33"/><text x="35.8717%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="35.6217%" y="1589" width="0.0429%" height="15" fill="rgb(226,15,5)" fg:x="27433" fg:w="33"/><text x="35.8717%" y="1599.50"></text></g><g><title>core::mem::drop (30 samples, 0.04%)</title><rect x="35.6256%" y="1573" width="0.0390%" height="15" fill="rgb(254,188,5)" fg:x="27436" fg:w="30"/><text x="35.8756%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (30 samples, 0.04%)</title><rect x="35.6256%" y="1557" width="0.0390%" height="15" fill="rgb(241,148,52)" fg:x="27436" fg:w="30"/><text x="35.8756%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.04%)</title><rect x="35.6256%" y="1541" width="0.0390%" height="15" fill="rgb(251,48,36)" fg:x="27436" fg:w="30"/><text x="35.8756%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (17 samples, 0.02%)</title><rect x="35.6425%" y="1525" width="0.0221%" height="15" fill="rgb(243,83,13)" fg:x="27449" fg:w="17"/><text x="35.8925%" y="1535.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (17 samples, 0.02%)</title><rect x="35.6425%" y="1509" width="0.0221%" height="15" fill="rgb(210,105,0)" fg:x="27449" fg:w="17"/><text x="35.8925%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (17 samples, 0.02%)</title><rect x="35.6425%" y="1493" width="0.0221%" height="15" fill="rgb(239,60,36)" fg:x="27449" fg:w="17"/><text x="35.8925%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (17 samples, 0.02%)</title><rect x="35.6425%" y="1477" width="0.0221%" height="15" fill="rgb(210,20,0)" fg:x="27449" fg:w="17"/><text x="35.8925%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="35.6425%" y="1461" width="0.0221%" height="15" fill="rgb(244,26,53)" fg:x="27449" fg:w="17"/><text x="35.8925%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="35.6425%" y="1445" width="0.0221%" height="15" fill="rgb(240,100,49)" fg:x="27449" fg:w="17"/><text x="35.8925%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="35.6425%" y="1429" width="0.0221%" height="15" fill="rgb(250,46,45)" fg:x="27449" fg:w="17"/><text x="35.8925%" y="1439.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (63 samples, 0.08%)</title><rect x="35.5867%" y="1669" width="0.0818%" height="15" fill="rgb(220,181,29)" fg:x="27406" fg:w="63"/><text x="35.8367%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (63 samples, 0.08%)</title><rect x="35.5867%" y="1653" width="0.0818%" height="15" fill="rgb(213,137,33)" fg:x="27406" fg:w="63"/><text x="35.8367%" y="1663.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (61 samples, 0.08%)</title><rect x="35.5893%" y="1637" width="0.0792%" height="15" fill="rgb(213,27,48)" fg:x="27408" fg:w="61"/><text x="35.8393%" y="1647.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (8 samples, 0.01%)</title><rect x="35.6815%" y="1653" width="0.0104%" height="15" fill="rgb(245,180,39)" fg:x="27479" fg:w="8"/><text x="35.9315%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="35.6815%" y="1637" width="0.0104%" height="15" fill="rgb(212,158,42)" fg:x="27479" fg:w="8"/><text x="35.9315%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="35.6815%" y="1621" width="0.0104%" height="15" fill="rgb(228,193,18)" fg:x="27479" fg:w="8"/><text x="35.9315%" y="1631.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (438 samples, 0.57%)</title><rect x="35.1244%" y="1701" width="0.5687%" height="15" fill="rgb(245,172,29)" fg:x="27050" fg:w="438"/><text x="35.3744%" y="1711.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (429 samples, 0.56%)</title><rect x="35.1361%" y="1685" width="0.5571%" height="15" fill="rgb(207,98,24)" fg:x="27059" fg:w="429"/><text x="35.3861%" y="1695.50"></text></g><g><title>move_core_types::language_storage::StructTag::module_id (19 samples, 0.02%)</title><rect x="35.6685%" y="1669" width="0.0247%" height="15" fill="rgb(249,92,26)" fg:x="27469" fg:w="19"/><text x="35.9185%" y="1679.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="35.6983%" y="1701" width="0.0169%" height="15" fill="rgb(217,176,26)" fg:x="27492" fg:w="13"/><text x="35.9483%" y="1711.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (9 samples, 0.01%)</title><rect x="35.7347%" y="1621" width="0.0117%" height="15" fill="rgb(221,8,39)" fg:x="27520" fg:w="9"/><text x="35.9847%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (23 samples, 0.03%)</title><rect x="35.7178%" y="1669" width="0.0299%" height="15" fill="rgb(208,90,18)" fg:x="27507" fg:w="23"/><text x="35.9678%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.02%)</title><rect x="35.7295%" y="1653" width="0.0182%" height="15" fill="rgb(207,202,30)" fg:x="27516" fg:w="14"/><text x="35.9795%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.02%)</title><rect x="35.7295%" y="1637" width="0.0182%" height="15" fill="rgb(231,124,22)" fg:x="27516" fg:w="14"/><text x="35.9795%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (25 samples, 0.03%)</title><rect x="35.7165%" y="1701" width="0.0325%" height="15" fill="rgb(206,15,5)" fg:x="27506" fg:w="25"/><text x="35.9665%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (25 samples, 0.03%)</title><rect x="35.7165%" y="1685" width="0.0325%" height="15" fill="rgb(239,16,52)" fg:x="27506" fg:w="25"/><text x="35.9665%" y="1695.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (11 samples, 0.01%)</title><rect x="35.7594%" y="1637" width="0.0143%" height="15" fill="rgb(245,213,29)" fg:x="27539" fg:w="11"/><text x="36.0094%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (21 samples, 0.03%)</title><rect x="35.7490%" y="1701" width="0.0273%" height="15" fill="rgb(213,203,36)" fg:x="27531" fg:w="21"/><text x="35.9990%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.03%)</title><rect x="35.7503%" y="1685" width="0.0260%" height="15" fill="rgb(209,55,18)" fg:x="27532" fg:w="20"/><text x="36.0003%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.02%)</title><rect x="35.7568%" y="1669" width="0.0195%" height="15" fill="rgb(207,133,49)" fg:x="27537" fg:w="15"/><text x="36.0068%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.02%)</title><rect x="35.7568%" y="1653" width="0.0195%" height="15" fill="rgb(240,33,46)" fg:x="27537" fg:w="15"/><text x="36.0068%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (96 samples, 0.12%)</title><rect x="35.7762%" y="1701" width="0.1247%" height="15" fill="rgb(212,35,2)" fg:x="27552" fg:w="96"/><text x="36.0262%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (82 samples, 0.11%)</title><rect x="35.7944%" y="1685" width="0.1065%" height="15" fill="rgb(231,119,28)" fg:x="27566" fg:w="82"/><text x="36.0444%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (54 samples, 0.07%)</title><rect x="35.8308%" y="1669" width="0.0701%" height="15" fill="rgb(252,178,7)" fg:x="27594" fg:w="54"/><text x="36.0808%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (54 samples, 0.07%)</title><rect x="35.8308%" y="1653" width="0.0701%" height="15" fill="rgb(251,91,4)" fg:x="27594" fg:w="54"/><text x="36.0808%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (54 samples, 0.07%)</title><rect x="35.8308%" y="1637" width="0.0701%" height="15" fill="rgb(233,122,19)" fg:x="27594" fg:w="54"/><text x="36.0808%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (53 samples, 0.07%)</title><rect x="35.8321%" y="1621" width="0.0688%" height="15" fill="rgb(231,208,46)" fg:x="27595" fg:w="53"/><text x="36.0821%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.07%)</title><rect x="35.8321%" y="1605" width="0.0688%" height="15" fill="rgb(243,15,41)" fg:x="27595" fg:w="53"/><text x="36.0821%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.07%)</title><rect x="35.8321%" y="1589" width="0.0688%" height="15" fill="rgb(210,32,43)" fg:x="27595" fg:w="53"/><text x="36.0821%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.07%)</title><rect x="35.8321%" y="1573" width="0.0688%" height="15" fill="rgb(222,177,15)" fg:x="27595" fg:w="53"/><text x="36.0821%" y="1583.50"></text></g><g><title>malloc (49 samples, 0.06%)</title><rect x="35.8373%" y="1557" width="0.0636%" height="15" fill="rgb(244,121,34)" fg:x="27599" fg:w="49"/><text x="36.0873%" y="1567.50"></text></g><g><title>[libc.so.6] (44 samples, 0.06%)</title><rect x="35.8438%" y="1541" width="0.0571%" height="15" fill="rgb(234,138,4)" fg:x="27604" fg:w="44"/><text x="36.0938%" y="1551.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="35.8749%" y="1525" width="0.0260%" height="15" fill="rgb(240,97,48)" fg:x="27628" fg:w="20"/><text x="36.1249%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (35 samples, 0.05%)</title><rect x="35.9087%" y="1701" width="0.0454%" height="15" fill="rgb(237,65,54)" fg:x="27654" fg:w="35"/><text x="36.1587%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (27 samples, 0.04%)</title><rect x="35.9191%" y="1685" width="0.0351%" height="15" fill="rgb(214,25,24)" fg:x="27662" fg:w="27"/><text x="36.1691%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (20 samples, 0.03%)</title><rect x="35.9282%" y="1669" width="0.0260%" height="15" fill="rgb(213,5,3)" fg:x="27669" fg:w="20"/><text x="36.1782%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (20 samples, 0.03%)</title><rect x="35.9282%" y="1653" width="0.0260%" height="15" fill="rgb(219,81,29)" fg:x="27669" fg:w="20"/><text x="36.1782%" y="1663.50"></text></g><g><title>alloc::alloc::box_free (20 samples, 0.03%)</title><rect x="35.9282%" y="1637" width="0.0260%" height="15" fill="rgb(220,43,48)" fg:x="27669" fg:w="20"/><text x="36.1782%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="35.9282%" y="1621" width="0.0260%" height="15" fill="rgb(239,157,2)" fg:x="27669" fg:w="20"/><text x="36.1782%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="35.9295%" y="1605" width="0.0247%" height="15" fill="rgb(213,104,43)" fg:x="27670" fg:w="19"/><text x="36.1795%" y="1615.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="35.9295%" y="1589" width="0.0247%" height="15" fill="rgb(237,84,9)" fg:x="27670" fg:w="19"/><text x="36.1795%" y="1599.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="35.9373%" y="1573" width="0.0169%" height="15" fill="rgb(252,6,33)" fg:x="27676" fg:w="13"/><text x="36.1873%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="35.9541%" y="1701" width="0.0143%" height="15" fill="rgb(251,172,22)" fg:x="27689" fg:w="11"/><text x="36.2041%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="35.9541%" y="1685" width="0.0143%" height="15" fill="rgb(244,91,53)" fg:x="27689" fg:w="11"/><text x="36.2041%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="35.9541%" y="1669" width="0.0143%" height="15" fill="rgb(219,29,30)" fg:x="27689" fg:w="11"/><text x="36.2041%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="35.9541%" y="1653" width="0.0143%" height="15" fill="rgb(213,3,15)" fg:x="27689" fg:w="11"/><text x="36.2041%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="35.9541%" y="1637" width="0.0143%" height="15" fill="rgb(208,25,28)" fg:x="27689" fg:w="11"/><text x="36.2041%" y="1647.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="35.9580%" y="1621" width="0.0104%" height="15" fill="rgb(252,144,25)" fg:x="27692" fg:w="8"/><text x="36.2080%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (9 samples, 0.01%)</title><rect x="35.9853%" y="1685" width="0.0117%" height="15" fill="rgb(226,220,25)" fg:x="27713" fg:w="9"/><text x="36.2353%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (9 samples, 0.01%)</title><rect x="35.9853%" y="1669" width="0.0117%" height="15" fill="rgb(212,131,28)" fg:x="27713" fg:w="9"/><text x="36.2353%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="35.9866%" y="1653" width="0.0104%" height="15" fill="rgb(219,143,52)" fg:x="27714" fg:w="8"/><text x="36.2366%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.01%)</title><rect x="35.9866%" y="1637" width="0.0104%" height="15" fill="rgb(215,56,7)" fg:x="27714" fg:w="8"/><text x="36.2366%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.01%)</title><rect x="35.9866%" y="1621" width="0.0104%" height="15" fill="rgb(239,59,51)" fg:x="27714" fg:w="8"/><text x="36.2366%" y="1631.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="36.0048%" y="1541" width="0.0130%" height="15" fill="rgb(209,215,4)" fg:x="27728" fg:w="10"/><text x="36.2548%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (20 samples, 0.03%)</title><rect x="36.0035%" y="1621" width="0.0260%" height="15" fill="rgb(221,118,39)" fg:x="27727" fg:w="20"/><text x="36.2535%" y="1631.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (20 samples, 0.03%)</title><rect x="36.0035%" y="1605" width="0.0260%" height="15" fill="rgb(236,6,44)" fg:x="27727" fg:w="20"/><text x="36.2535%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (20 samples, 0.03%)</title><rect x="36.0035%" y="1589" width="0.0260%" height="15" fill="rgb(216,122,9)" fg:x="27727" fg:w="20"/><text x="36.2535%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (20 samples, 0.03%)</title><rect x="36.0035%" y="1573" width="0.0260%" height="15" fill="rgb(244,134,42)" fg:x="27727" fg:w="20"/><text x="36.2535%" y="1583.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.03%)</title><rect x="36.0035%" y="1557" width="0.0260%" height="15" fill="rgb(209,189,35)" fg:x="27727" fg:w="20"/><text x="36.2535%" y="1567.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (9 samples, 0.01%)</title><rect x="36.0178%" y="1541" width="0.0117%" height="15" fill="rgb(250,47,36)" fg:x="27738" fg:w="9"/><text x="36.2678%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (23 samples, 0.03%)</title><rect x="36.0009%" y="1669" width="0.0299%" height="15" fill="rgb(252,112,4)" fg:x="27725" fg:w="23"/><text x="36.2509%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (23 samples, 0.03%)</title><rect x="36.0009%" y="1653" width="0.0299%" height="15" fill="rgb(221,79,51)" fg:x="27725" fg:w="23"/><text x="36.2509%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (23 samples, 0.03%)</title><rect x="36.0009%" y="1637" width="0.0299%" height="15" fill="rgb(232,65,53)" fg:x="27725" fg:w="23"/><text x="36.2509%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (29 samples, 0.04%)</title><rect x="35.9970%" y="1685" width="0.0377%" height="15" fill="rgb(211,37,7)" fg:x="27722" fg:w="29"/><text x="36.2470%" y="1695.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (66 samples, 0.09%)</title><rect x="35.9749%" y="1701" width="0.0857%" height="15" fill="rgb(234,221,18)" fg:x="27705" fg:w="66"/><text x="36.2249%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (20 samples, 0.03%)</title><rect x="36.0346%" y="1685" width="0.0260%" height="15" fill="rgb(220,158,26)" fg:x="27751" fg:w="20"/><text x="36.2846%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (16 samples, 0.02%)</title><rect x="36.0398%" y="1669" width="0.0208%" height="15" fill="rgb(220,70,6)" fg:x="27755" fg:w="16"/><text x="36.2898%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (11 samples, 0.01%)</title><rect x="36.0463%" y="1653" width="0.0143%" height="15" fill="rgb(250,39,48)" fg:x="27760" fg:w="11"/><text x="36.2963%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (11 samples, 0.01%)</title><rect x="36.0463%" y="1637" width="0.0143%" height="15" fill="rgb(206,40,27)" fg:x="27760" fg:w="11"/><text x="36.2963%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="36.0463%" y="1621" width="0.0143%" height="15" fill="rgb(247,80,36)" fg:x="27760" fg:w="11"/><text x="36.2963%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.01%)</title><rect x="36.0463%" y="1605" width="0.0143%" height="15" fill="rgb(222,9,20)" fg:x="27760" fg:w="11"/><text x="36.2963%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="36.0463%" y="1589" width="0.0143%" height="15" fill="rgb(217,26,45)" fg:x="27760" fg:w="11"/><text x="36.2963%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="36.0463%" y="1573" width="0.0143%" height="15" fill="rgb(221,67,14)" fg:x="27760" fg:w="11"/><text x="36.2963%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="36.0463%" y="1557" width="0.0143%" height="15" fill="rgb(248,100,24)" fg:x="27760" fg:w="11"/><text x="36.2963%" y="1567.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="36.0502%" y="1541" width="0.0104%" height="15" fill="rgb(230,187,16)" fg:x="27763" fg:w="8"/><text x="36.3002%" y="1551.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="36.0944%" y="1653" width="0.0234%" height="15" fill="rgb(205,108,13)" fg:x="27797" fg:w="18"/><text x="36.3444%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="36.1009%" y="1637" width="0.0169%" height="15" fill="rgb(235,71,51)" fg:x="27802" fg:w="13"/><text x="36.3509%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.01%)</title><rect x="36.1048%" y="1621" width="0.0130%" height="15" fill="rgb(251,172,48)" fg:x="27805" fg:w="10"/><text x="36.3548%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.01%)</title><rect x="36.1048%" y="1605" width="0.0130%" height="15" fill="rgb(240,96,49)" fg:x="27805" fg:w="10"/><text x="36.3548%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.01%)</title><rect x="36.1048%" y="1589" width="0.0130%" height="15" fill="rgb(235,46,36)" fg:x="27805" fg:w="10"/><text x="36.3548%" y="1599.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.02%)</title><rect x="36.1229%" y="1605" width="0.0247%" height="15" fill="rgb(244,3,49)" fg:x="27819" fg:w="19"/><text x="36.3729%" y="1615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.02%)</title><rect x="36.1242%" y="1589" width="0.0234%" height="15" fill="rgb(206,78,54)" fg:x="27820" fg:w="18"/><text x="36.3742%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (71 samples, 0.09%)</title><rect x="36.0606%" y="1701" width="0.0922%" height="15" fill="rgb(208,85,42)" fg:x="27771" fg:w="71"/><text x="36.3106%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (71 samples, 0.09%)</title><rect x="36.0606%" y="1685" width="0.0922%" height="15" fill="rgb(219,196,21)" fg:x="27771" fg:w="71"/><text x="36.3106%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (61 samples, 0.08%)</title><rect x="36.0736%" y="1669" width="0.0792%" height="15" fill="rgb(238,19,9)" fg:x="27781" fg:w="61"/><text x="36.3236%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (24 samples, 0.03%)</title><rect x="36.1216%" y="1653" width="0.0312%" height="15" fill="rgb(206,86,13)" fg:x="27818" fg:w="24"/><text x="36.3716%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (24 samples, 0.03%)</title><rect x="36.1216%" y="1637" width="0.0312%" height="15" fill="rgb(214,123,40)" fg:x="27818" fg:w="24"/><text x="36.3716%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 0.03%)</title><rect x="36.1216%" y="1621" width="0.0312%" height="15" fill="rgb(243,53,5)" fg:x="27818" fg:w="24"/><text x="36.3716%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.02%)</title><rect x="36.1840%" y="1573" width="0.0156%" height="15" fill="rgb(254,186,31)" fg:x="27866" fg:w="12"/><text x="36.4340%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="36.1840%" y="1557" width="0.0156%" height="15" fill="rgb(221,216,25)" fg:x="27866" fg:w="12"/><text x="36.4340%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="36.1840%" y="1541" width="0.0156%" height="15" fill="rgb(248,107,42)" fg:x="27866" fg:w="12"/><text x="36.4340%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="36.1853%" y="1525" width="0.0143%" height="15" fill="rgb(221,85,43)" fg:x="27867" fg:w="11"/><text x="36.4353%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="36.1853%" y="1509" width="0.0143%" height="15" fill="rgb(225,34,24)" fg:x="27867" fg:w="11"/><text x="36.4353%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="36.1853%" y="1493" width="0.0143%" height="15" fill="rgb(211,119,1)" fg:x="27867" fg:w="11"/><text x="36.4353%" y="1503.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (35 samples, 0.05%)</title><rect x="36.1775%" y="1653" width="0.0454%" height="15" fill="rgb(254,216,46)" fg:x="27861" fg:w="35"/><text x="36.4275%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="36.1814%" y="1637" width="0.0416%" height="15" fill="rgb(238,11,38)" fg:x="27864" fg:w="32"/><text x="36.4314%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="36.1814%" y="1621" width="0.0416%" height="15" fill="rgb(233,50,15)" fg:x="27864" fg:w="32"/><text x="36.4314%" y="1631.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (30 samples, 0.04%)</title><rect x="36.1840%" y="1605" width="0.0390%" height="15" fill="rgb(217,181,29)" fg:x="27866" fg:w="30"/><text x="36.4340%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (30 samples, 0.04%)</title><rect x="36.1840%" y="1589" width="0.0390%" height="15" fill="rgb(214,56,3)" fg:x="27866" fg:w="30"/><text x="36.4340%" y="1599.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="36.1996%" y="1573" width="0.0234%" height="15" fill="rgb(230,69,45)" fg:x="27878" fg:w="18"/><text x="36.4496%" y="1583.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="36.2009%" y="1557" width="0.0221%" height="15" fill="rgb(224,201,50)" fg:x="27879" fg:w="17"/><text x="36.4509%" y="1567.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.02%)</title><rect x="36.2346%" y="1605" width="0.0234%" height="15" fill="rgb(217,228,18)" fg:x="27905" fg:w="18"/><text x="36.4846%" y="1615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.02%)</title><rect x="36.2346%" y="1589" width="0.0234%" height="15" fill="rgb(239,33,44)" fg:x="27905" fg:w="18"/><text x="36.4846%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.01%)</title><rect x="36.2450%" y="1573" width="0.0130%" height="15" fill="rgb(248,210,23)" fg:x="27913" fg:w="10"/><text x="36.4950%" y="1583.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="36.2788%" y="1541" width="0.0117%" height="15" fill="rgb(253,135,8)" fg:x="27939" fg:w="9"/><text x="36.5288%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.01%)</title><rect x="36.2788%" y="1525" width="0.0117%" height="15" fill="rgb(217,98,21)" fg:x="27939" fg:w="9"/><text x="36.5288%" y="1535.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.01%)</title><rect x="36.2788%" y="1509" width="0.0117%" height="15" fill="rgb(253,130,21)" fg:x="27939" fg:w="9"/><text x="36.5288%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.01%)</title><rect x="36.2788%" y="1557" width="0.0130%" height="15" fill="rgb(207,81,54)" fg:x="27939" fg:w="10"/><text x="36.5288%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (125 samples, 0.16%)</title><rect x="36.1528%" y="1701" width="0.1623%" height="15" fill="rgb(232,48,33)" fg:x="27842" fg:w="125"/><text x="36.4028%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (118 samples, 0.15%)</title><rect x="36.1619%" y="1685" width="0.1532%" height="15" fill="rgb(211,9,35)" fg:x="27849" fg:w="118"/><text x="36.4119%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (107 samples, 0.14%)</title><rect x="36.1762%" y="1669" width="0.1389%" height="15" fill="rgb(205,152,21)" fg:x="27860" fg:w="107"/><text x="36.4262%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (65 samples, 0.08%)</title><rect x="36.2307%" y="1653" width="0.0844%" height="15" fill="rgb(249,21,27)" fg:x="27902" fg:w="65"/><text x="36.4807%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (65 samples, 0.08%)</title><rect x="36.2307%" y="1637" width="0.0844%" height="15" fill="rgb(252,29,24)" fg:x="27902" fg:w="65"/><text x="36.4807%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (65 samples, 0.08%)</title><rect x="36.2307%" y="1621" width="0.0844%" height="15" fill="rgb(230,130,50)" fg:x="27902" fg:w="65"/><text x="36.4807%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 0.06%)</title><rect x="36.2580%" y="1605" width="0.0571%" height="15" fill="rgb(239,144,14)" fg:x="27923" fg:w="44"/><text x="36.5080%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (44 samples, 0.06%)</title><rect x="36.2580%" y="1589" width="0.0571%" height="15" fill="rgb(227,111,50)" fg:x="27923" fg:w="44"/><text x="36.5080%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (44 samples, 0.06%)</title><rect x="36.2580%" y="1573" width="0.0571%" height="15" fill="rgb(254,84,20)" fg:x="27923" fg:w="44"/><text x="36.5080%" y="1583.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.01%)</title><rect x="36.3034%" y="1557" width="0.0117%" height="15" fill="rgb(232,90,48)" fg:x="27958" fg:w="9"/><text x="36.5534%" y="1567.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.01%)</title><rect x="36.3034%" y="1541" width="0.0117%" height="15" fill="rgb(253,63,47)" fg:x="27958" fg:w="9"/><text x="36.5534%" y="1551.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (16 samples, 0.02%)</title><rect x="36.3151%" y="1701" width="0.0208%" height="15" fill="rgb(251,146,35)" fg:x="27967" fg:w="16"/><text x="36.5651%" y="1711.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (10 samples, 0.01%)</title><rect x="36.3852%" y="1573" width="0.0130%" height="15" fill="rgb(229,192,35)" fg:x="28021" fg:w="10"/><text x="36.6352%" y="1583.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (10 samples, 0.01%)</title><rect x="36.3852%" y="1557" width="0.0130%" height="15" fill="rgb(225,68,9)" fg:x="28021" fg:w="10"/><text x="36.6352%" y="1567.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (8 samples, 0.01%)</title><rect x="36.3878%" y="1541" width="0.0104%" height="15" fill="rgb(214,97,34)" fg:x="28023" fg:w="8"/><text x="36.6378%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.02%)</title><rect x="36.3813%" y="1589" width="0.0208%" height="15" fill="rgb(253,31,26)" fg:x="28018" fg:w="16"/><text x="36.6313%" y="1599.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (22 samples, 0.03%)</title><rect x="36.3813%" y="1605" width="0.0286%" height="15" fill="rgb(225,151,47)" fg:x="28018" fg:w="22"/><text x="36.6313%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (38 samples, 0.05%)</title><rect x="36.3723%" y="1621" width="0.0493%" height="15" fill="rgb(206,185,9)" fg:x="28011" fg:w="38"/><text x="36.6223%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (39 samples, 0.05%)</title><rect x="36.3723%" y="1637" width="0.0506%" height="15" fill="rgb(249,65,17)" fg:x="28011" fg:w="39"/><text x="36.6223%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (57 samples, 0.07%)</title><rect x="36.3710%" y="1653" width="0.0740%" height="15" fill="rgb(220,110,10)" fg:x="28010" fg:w="57"/><text x="36.6210%" y="1663.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (15 samples, 0.02%)</title><rect x="36.4255%" y="1637" width="0.0195%" height="15" fill="rgb(222,198,49)" fg:x="28052" fg:w="15"/><text x="36.6755%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.02%)</title><rect x="36.4255%" y="1621" width="0.0195%" height="15" fill="rgb(239,81,13)" fg:x="28052" fg:w="15"/><text x="36.6755%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="36.4255%" y="1605" width="0.0195%" height="15" fill="rgb(216,128,11)" fg:x="28052" fg:w="15"/><text x="36.6755%" y="1615.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="36.4281%" y="1589" width="0.0169%" height="15" fill="rgb(247,156,8)" fg:x="28054" fg:w="13"/><text x="36.6781%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (73 samples, 0.09%)</title><rect x="36.3697%" y="1669" width="0.0948%" height="15" fill="rgb(219,173,1)" fg:x="28009" fg:w="73"/><text x="36.6197%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (15 samples, 0.02%)</title><rect x="36.4450%" y="1653" width="0.0195%" height="15" fill="rgb(227,42,24)" fg:x="28067" fg:w="15"/><text x="36.6950%" y="1663.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="36.4450%" y="1637" width="0.0195%" height="15" fill="rgb(253,219,50)" fg:x="28067" fg:w="15"/><text x="36.6950%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="36.4489%" y="1621" width="0.0156%" height="15" fill="rgb(215,191,54)" fg:x="28070" fg:w="12"/><text x="36.6989%" y="1631.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="36.4489%" y="1605" width="0.0156%" height="15" fill="rgb(238,83,12)" fg:x="28070" fg:w="12"/><text x="36.6989%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="36.4489%" y="1589" width="0.0156%" height="15" fill="rgb(205,124,9)" fg:x="28070" fg:w="12"/><text x="36.6989%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="36.4489%" y="1573" width="0.0156%" height="15" fill="rgb(253,174,7)" fg:x="28070" fg:w="12"/><text x="36.6989%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="36.4489%" y="1557" width="0.0156%" height="15" fill="rgb(206,134,49)" fg:x="28070" fg:w="12"/><text x="36.6989%" y="1567.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="36.4515%" y="1541" width="0.0130%" height="15" fill="rgb(221,89,20)" fg:x="28072" fg:w="10"/><text x="36.7015%" y="1551.50"></text></g><g><title>bcs::de::from_bytes_seed (93 samples, 0.12%)</title><rect x="36.3489%" y="1685" width="0.1208%" height="15" fill="rgb(240,205,13)" fg:x="27993" fg:w="93"/><text x="36.5989%" y="1695.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,076 samples, 1.40%)</title><rect x="35.0764%" y="1717" width="1.3972%" height="15" fill="rgb(237,174,32)" fg:x="27013" fg:w="1076"/><text x="35.3264%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (106 samples, 0.14%)</title><rect x="36.3359%" y="1701" width="0.1376%" height="15" fill="rgb(226,12,15)" fg:x="27983" fg:w="106"/><text x="36.5859%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,102 samples, 1.43%)</title><rect x="35.0582%" y="1733" width="1.4309%" height="15" fill="rgb(245,160,52)" fg:x="26999" fg:w="1102"/><text x="35.3082%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::view (10 samples, 0.01%)</title><rect x="36.4761%" y="1717" width="0.0130%" height="15" fill="rgb(253,80,21)" fg:x="28091" fg:w="10"/><text x="36.7261%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (10 samples, 0.01%)</title><rect x="36.4891%" y="1733" width="0.0130%" height="15" fill="rgb(231,225,22)" fg:x="28101" fg:w="10"/><text x="36.7391%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (1,136 samples, 1.48%)</title><rect x="35.0504%" y="1749" width="1.4751%" height="15" fill="rgb(253,185,12)" fg:x="26993" fg:w="1136"/><text x="35.3004%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (18 samples, 0.02%)</title><rect x="36.5021%" y="1733" width="0.0234%" height="15" fill="rgb(234,197,21)" fg:x="28111" fg:w="18"/><text x="36.7521%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::borrow_global (9 samples, 0.01%)</title><rect x="36.5138%" y="1717" width="0.0117%" height="15" fill="rgb(210,47,30)" fg:x="28120" fg:w="9"/><text x="36.7638%" y="1727.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="36.5774%" y="1637" width="0.0104%" height="15" fill="rgb(246,139,27)" fg:x="28169" fg:w="8"/><text x="36.8274%" y="1647.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (10 samples, 0.01%)</title><rect x="36.5943%" y="1621" width="0.0130%" height="15" fill="rgb(226,130,16)" fg:x="28182" fg:w="10"/><text x="36.8443%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (10 samples, 0.01%)</title><rect x="36.5943%" y="1605" width="0.0130%" height="15" fill="rgb(237,208,20)" fg:x="28182" fg:w="10"/><text x="36.8443%" y="1615.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (9 samples, 0.01%)</title><rect x="36.5956%" y="1589" width="0.0117%" height="15" fill="rgb(245,186,28)" fg:x="28183" fg:w="9"/><text x="36.8456%" y="1599.50"></text></g><g><title>bcs::de::from_bytes (14 samples, 0.02%)</title><rect x="36.5917%" y="1637" width="0.0182%" height="15" fill="rgb(238,105,39)" fg:x="28180" fg:w="14"/><text x="36.8417%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::metadata::Metadata&gt; (19 samples, 0.02%)</title><rect x="36.6164%" y="1637" width="0.0247%" height="15" fill="rgb(253,228,11)" fg:x="28199" fg:w="19"/><text x="36.8664%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="36.6164%" y="1621" width="0.0247%" height="15" fill="rgb(224,136,38)" fg:x="28199" fg:w="19"/><text x="36.8664%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="36.6164%" y="1605" width="0.0247%" height="15" fill="rgb(211,3,25)" fg:x="28199" fg:w="19"/><text x="36.8664%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="36.6164%" y="1589" width="0.0247%" height="15" fill="rgb(238,66,34)" fg:x="28199" fg:w="19"/><text x="36.8664%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="36.6164%" y="1573" width="0.0247%" height="15" fill="rgb(223,188,11)" fg:x="28199" fg:w="19"/><text x="36.8664%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="36.6164%" y="1557" width="0.0247%" height="15" fill="rgb(221,10,35)" fg:x="28199" fg:w="19"/><text x="36.8664%" y="1567.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="36.6177%" y="1541" width="0.0234%" height="15" fill="rgb(223,18,44)" fg:x="28200" fg:w="18"/><text x="36.8677%" y="1551.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="36.6190%" y="1525" width="0.0221%" height="15" fill="rgb(220,97,41)" fg:x="28201" fg:w="17"/><text x="36.8690%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (79 samples, 0.10%)</title><rect x="36.6644%" y="1509" width="0.1026%" height="15" fill="rgb(206,95,45)" fg:x="28236" fg:w="79"/><text x="36.9144%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.10%)</title><rect x="36.6657%" y="1493" width="0.1013%" height="15" fill="rgb(209,96,13)" fg:x="28237" fg:w="78"/><text x="36.9157%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.10%)</title><rect x="36.6657%" y="1477" width="0.1013%" height="15" fill="rgb(237,39,34)" fg:x="28237" fg:w="78"/><text x="36.9157%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.10%)</title><rect x="36.6670%" y="1461" width="0.1000%" height="15" fill="rgb(213,49,47)" fg:x="28238" fg:w="77"/><text x="36.9170%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.10%)</title><rect x="36.6670%" y="1445" width="0.1000%" height="15" fill="rgb(205,107,27)" fg:x="28238" fg:w="77"/><text x="36.9170%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.10%)</title><rect x="36.6670%" y="1429" width="0.1000%" height="15" fill="rgb(212,142,9)" fg:x="28238" fg:w="77"/><text x="36.9170%" y="1439.50"></text></g><g><title>malloc (76 samples, 0.10%)</title><rect x="36.6683%" y="1413" width="0.0987%" height="15" fill="rgb(226,182,0)" fg:x="28239" fg:w="76"/><text x="36.9183%" y="1423.50"></text></g><g><title>[libc.so.6] (61 samples, 0.08%)</title><rect x="36.6878%" y="1397" width="0.0792%" height="15" fill="rgb(231,3,53)" fg:x="28254" fg:w="61"/><text x="36.9378%" y="1407.50"></text></g><g><title>[libc.so.6] (29 samples, 0.04%)</title><rect x="36.7293%" y="1381" width="0.0377%" height="15" fill="rgb(246,111,28)" fg:x="28286" fg:w="29"/><text x="36.9793%" y="1391.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (156 samples, 0.20%)</title><rect x="36.6501%" y="1605" width="0.2026%" height="15" fill="rgb(254,183,7)" fg:x="28225" fg:w="156"/><text x="36.9001%" y="1615.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (150 samples, 0.19%)</title><rect x="36.6579%" y="1589" width="0.1948%" height="15" fill="rgb(247,177,28)" fg:x="28231" fg:w="150"/><text x="36.9079%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (146 samples, 0.19%)</title><rect x="36.6631%" y="1573" width="0.1896%" height="15" fill="rgb(244,43,1)" fg:x="28235" fg:w="146"/><text x="36.9131%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (146 samples, 0.19%)</title><rect x="36.6631%" y="1557" width="0.1896%" height="15" fill="rgb(207,2,35)" fg:x="28235" fg:w="146"/><text x="36.9131%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (146 samples, 0.19%)</title><rect x="36.6631%" y="1541" width="0.1896%" height="15" fill="rgb(213,83,22)" fg:x="28235" fg:w="146"/><text x="36.9131%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (146 samples, 0.19%)</title><rect x="36.6631%" y="1525" width="0.1896%" height="15" fill="rgb(246,212,13)" fg:x="28235" fg:w="146"/><text x="36.9131%" y="1535.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (66 samples, 0.09%)</title><rect x="36.7670%" y="1509" width="0.0857%" height="15" fill="rgb(213,127,46)" fg:x="28315" fg:w="66"/><text x="37.0170%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (66 samples, 0.09%)</title><rect x="36.7670%" y="1493" width="0.0857%" height="15" fill="rgb(219,215,39)" fg:x="28315" fg:w="66"/><text x="37.0170%" y="1503.50"></text></g><g><title>[libc.so.6] (66 samples, 0.09%)</title><rect x="36.7670%" y="1477" width="0.0857%" height="15" fill="rgb(227,99,17)" fg:x="28315" fg:w="66"/><text x="37.0170%" y="1487.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="36.8553%" y="1557" width="0.0143%" height="15" fill="rgb(208,155,18)" fg:x="28383" fg:w="11"/><text x="37.1053%" y="1567.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (33 samples, 0.04%)</title><rect x="36.8527%" y="1605" width="0.0429%" height="15" fill="rgb(223,204,38)" fg:x="28381" fg:w="33"/><text x="37.1027%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (33 samples, 0.04%)</title><rect x="36.8527%" y="1589" width="0.0429%" height="15" fill="rgb(212,114,21)" fg:x="28381" fg:w="33"/><text x="37.1027%" y="1599.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (31 samples, 0.04%)</title><rect x="36.8553%" y="1573" width="0.0403%" height="15" fill="rgb(250,74,13)" fg:x="28383" fg:w="31"/><text x="37.1053%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}}::{{closure}} (20 samples, 0.03%)</title><rect x="36.8696%" y="1557" width="0.0260%" height="15" fill="rgb(234,7,1)" fg:x="28394" fg:w="20"/><text x="37.1196%" y="1567.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;&amp;[U]&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (20 samples, 0.03%)</title><rect x="36.8696%" y="1541" width="0.0260%" height="15" fill="rgb(207,138,31)" fg:x="28394" fg:w="20"/><text x="37.1196%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (20 samples, 0.03%)</title><rect x="36.8696%" y="1525" width="0.0260%" height="15" fill="rgb(215,186,42)" fg:x="28394" fg:w="20"/><text x="37.1196%" y="1535.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20 samples, 0.03%)</title><rect x="36.8696%" y="1509" width="0.0260%" height="15" fill="rgb(229,205,49)" fg:x="28394" fg:w="20"/><text x="37.1196%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (23 samples, 0.03%)</title><rect x="36.9007%" y="1605" width="0.0299%" height="15" fill="rgb(216,156,32)" fg:x="28418" fg:w="23"/><text x="37.1507%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (23 samples, 0.03%)</title><rect x="36.9007%" y="1589" width="0.0299%" height="15" fill="rgb(238,7,21)" fg:x="28418" fg:w="23"/><text x="37.1507%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (23 samples, 0.03%)</title><rect x="36.9007%" y="1573" width="0.0299%" height="15" fill="rgb(249,190,22)" fg:x="28418" fg:w="23"/><text x="37.1507%" y="1583.50"></text></g><g><title>alloc::alloc::box_free (23 samples, 0.03%)</title><rect x="36.9007%" y="1557" width="0.0299%" height="15" fill="rgb(253,51,31)" fg:x="28418" fg:w="23"/><text x="37.1507%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.03%)</title><rect x="36.9007%" y="1541" width="0.0299%" height="15" fill="rgb(237,90,54)" fg:x="28418" fg:w="23"/><text x="37.1507%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.03%)</title><rect x="36.9007%" y="1525" width="0.0299%" height="15" fill="rgb(250,214,33)" fg:x="28418" fg:w="23"/><text x="37.1507%" y="1535.50"></text></g><g><title>cfree (21 samples, 0.03%)</title><rect x="36.9033%" y="1509" width="0.0273%" height="15" fill="rgb(237,10,49)" fg:x="28420" fg:w="21"/><text x="37.1533%" y="1519.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="36.9124%" y="1493" width="0.0182%" height="15" fill="rgb(241,56,36)" fg:x="28427" fg:w="14"/><text x="37.1624%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.02%)</title><rect x="36.9319%" y="1541" width="0.0208%" height="15" fill="rgb(227,164,12)" fg:x="28442" fg:w="16"/><text x="37.1819%" y="1551.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="36.9319%" y="1525" width="0.0208%" height="15" fill="rgb(249,149,35)" fg:x="28442" fg:w="16"/><text x="37.1819%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.01%)</title><rect x="36.9410%" y="1509" width="0.0117%" height="15" fill="rgb(238,227,50)" fg:x="28449" fg:w="9"/><text x="37.1910%" y="1519.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="36.9410%" y="1493" width="0.0117%" height="15" fill="rgb(235,102,45)" fg:x="28449" fg:w="9"/><text x="37.1910%" y="1503.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (321 samples, 0.42%)</title><rect x="36.5488%" y="1669" width="0.4168%" height="15" fill="rgb(211,10,38)" fg:x="28147" fg:w="321"/><text x="36.7988%" y="1679.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (319 samples, 0.41%)</title><rect x="36.5514%" y="1653" width="0.4142%" height="15" fill="rgb(219,77,48)" fg:x="28149" fg:w="319"/><text x="36.8014%" y="1663.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (248 samples, 0.32%)</title><rect x="36.6436%" y="1637" width="0.3220%" height="15" fill="rgb(246,6,15)" fg:x="28220" fg:w="248"/><text x="36.8936%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (246 samples, 0.32%)</title><rect x="36.6462%" y="1621" width="0.3194%" height="15" fill="rgb(207,220,2)" fg:x="28222" fg:w="246"/><text x="36.8962%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (26 samples, 0.03%)</title><rect x="36.9319%" y="1605" width="0.0338%" height="15" fill="rgb(242,48,14)" fg:x="28442" fg:w="26"/><text x="37.1819%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.03%)</title><rect x="36.9319%" y="1589" width="0.0338%" height="15" fill="rgb(218,19,27)" fg:x="28442" fg:w="26"/><text x="37.1819%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.03%)</title><rect x="36.9319%" y="1573" width="0.0338%" height="15" fill="rgb(228,0,35)" fg:x="28442" fg:w="26"/><text x="37.1819%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.03%)</title><rect x="36.9319%" y="1557" width="0.0338%" height="15" fill="rgb(244,142,54)" fg:x="28442" fg:w="26"/><text x="37.1819%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="36.9527%" y="1541" width="0.0130%" height="15" fill="rgb(243,217,40)" fg:x="28458" fg:w="10"/><text x="37.2027%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="36.9527%" y="1525" width="0.0130%" height="15" fill="rgb(207,114,16)" fg:x="28458" fg:w="10"/><text x="37.2027%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.01%)</title><rect x="36.9527%" y="1509" width="0.0130%" height="15" fill="rgb(224,33,25)" fg:x="28458" fg:w="10"/><text x="37.2027%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (17 samples, 0.02%)</title><rect x="37.0111%" y="1429" width="0.0221%" height="15" fill="rgb(230,93,54)" fg:x="28503" fg:w="17"/><text x="37.2611%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="37.0111%" y="1413" width="0.0221%" height="15" fill="rgb(224,56,24)" fg:x="28503" fg:w="17"/><text x="37.2611%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="37.0111%" y="1397" width="0.0221%" height="15" fill="rgb(235,189,50)" fg:x="28503" fg:w="17"/><text x="37.2611%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="37.0111%" y="1381" width="0.0221%" height="15" fill="rgb(242,173,8)" fg:x="28503" fg:w="17"/><text x="37.2611%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="37.0111%" y="1365" width="0.0221%" height="15" fill="rgb(209,206,10)" fg:x="28503" fg:w="17"/><text x="37.2611%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="37.0111%" y="1349" width="0.0221%" height="15" fill="rgb(213,182,44)" fg:x="28503" fg:w="17"/><text x="37.2611%" y="1359.50"></text></g><g><title>malloc (16 samples, 0.02%)</title><rect x="37.0124%" y="1333" width="0.0208%" height="15" fill="rgb(243,51,15)" fg:x="28504" fg:w="16"/><text x="37.2624%" y="1343.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="37.0163%" y="1317" width="0.0169%" height="15" fill="rgb(241,13,14)" fg:x="28507" fg:w="13"/><text x="37.2663%" y="1327.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (25 samples, 0.03%)</title><rect x="37.0020%" y="1525" width="0.0325%" height="15" fill="rgb(239,147,24)" fg:x="28496" fg:w="25"/><text x="37.2520%" y="1535.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="37.0020%" y="1509" width="0.0325%" height="15" fill="rgb(223,129,16)" fg:x="28496" fg:w="25"/><text x="37.2520%" y="1519.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="37.0098%" y="1493" width="0.0247%" height="15" fill="rgb(209,169,13)" fg:x="28502" fg:w="19"/><text x="37.2598%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="37.0098%" y="1477" width="0.0247%" height="15" fill="rgb(235,159,41)" fg:x="28502" fg:w="19"/><text x="37.2598%" y="1487.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="37.0111%" y="1461" width="0.0234%" height="15" fill="rgb(223,219,48)" fg:x="28503" fg:w="18"/><text x="37.2611%" y="1471.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (18 samples, 0.02%)</title><rect x="37.0111%" y="1445" width="0.0234%" height="15" fill="rgb(236,80,13)" fg:x="28503" fg:w="18"/><text x="37.2611%" y="1455.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (42 samples, 0.05%)</title><rect x="36.9890%" y="1557" width="0.0545%" height="15" fill="rgb(213,5,6)" fg:x="28486" fg:w="42"/><text x="37.2390%" y="1567.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="37.0020%" y="1541" width="0.0416%" height="15" fill="rgb(205,59,21)" fg:x="28496" fg:w="32"/><text x="37.2520%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.07%)</title><rect x="36.9864%" y="1621" width="0.0675%" height="15" fill="rgb(247,137,35)" fg:x="28484" fg:w="52"/><text x="37.2364%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.06%)</title><rect x="36.9890%" y="1605" width="0.0649%" height="15" fill="rgb(242,208,28)" fg:x="28486" fg:w="50"/><text x="37.2390%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.06%)</title><rect x="36.9890%" y="1589" width="0.0649%" height="15" fill="rgb(245,62,25)" fg:x="28486" fg:w="50"/><text x="37.2390%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.06%)</title><rect x="36.9890%" y="1573" width="0.0649%" height="15" fill="rgb(233,99,54)" fg:x="28486" fg:w="50"/><text x="37.2390%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="37.0436%" y="1557" width="0.0104%" height="15" fill="rgb(213,10,37)" fg:x="28528" fg:w="8"/><text x="37.2936%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (10 samples, 0.01%)</title><rect x="37.0540%" y="1557" width="0.0130%" height="15" fill="rgb(235,143,30)" fg:x="28536" fg:w="10"/><text x="37.3040%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="37.0540%" y="1541" width="0.0130%" height="15" fill="rgb(250,146,33)" fg:x="28536" fg:w="10"/><text x="37.3040%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.01%)</title><rect x="37.0540%" y="1525" width="0.0130%" height="15" fill="rgb(226,198,42)" fg:x="28536" fg:w="10"/><text x="37.3040%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="37.0540%" y="1509" width="0.0130%" height="15" fill="rgb(222,55,6)" fg:x="28536" fg:w="10"/><text x="37.3040%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="37.0540%" y="1493" width="0.0130%" height="15" fill="rgb(213,224,31)" fg:x="28536" fg:w="10"/><text x="37.3040%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="37.0540%" y="1477" width="0.0130%" height="15" fill="rgb(226,103,35)" fg:x="28536" fg:w="10"/><text x="37.3040%" y="1487.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (72 samples, 0.09%)</title><rect x="36.9812%" y="1637" width="0.0935%" height="15" fill="rgb(205,66,45)" fg:x="28480" fg:w="72"/><text x="37.2312%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="37.0540%" y="1621" width="0.0208%" height="15" fill="rgb(226,51,42)" fg:x="28536" fg:w="16"/><text x="37.3040%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="37.0540%" y="1605" width="0.0208%" height="15" fill="rgb(206,69,1)" fg:x="28536" fg:w="16"/><text x="37.3040%" y="1615.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.02%)</title><rect x="37.0540%" y="1589" width="0.0208%" height="15" fill="rgb(213,228,47)" fg:x="28536" fg:w="16"/><text x="37.3040%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (16 samples, 0.02%)</title><rect x="37.0540%" y="1573" width="0.0208%" height="15" fill="rgb(224,204,18)" fg:x="28536" fg:w="16"/><text x="37.3040%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="37.0825%" y="1445" width="0.0130%" height="15" fill="rgb(253,187,47)" fg:x="28558" fg:w="10"/><text x="37.3325%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="37.0825%" y="1429" width="0.0130%" height="15" fill="rgb(232,61,2)" fg:x="28558" fg:w="10"/><text x="37.3325%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="37.0851%" y="1413" width="0.0104%" height="15" fill="rgb(213,132,35)" fg:x="28560" fg:w="8"/><text x="37.3351%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="37.0851%" y="1397" width="0.0104%" height="15" fill="rgb(247,33,21)" fg:x="28560" fg:w="8"/><text x="37.3351%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (12 samples, 0.02%)</title><rect x="37.0825%" y="1557" width="0.0156%" height="15" fill="rgb(233,71,46)" fg:x="28558" fg:w="12"/><text x="37.3325%" y="1567.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (12 samples, 0.02%)</title><rect x="37.0825%" y="1541" width="0.0156%" height="15" fill="rgb(222,173,43)" fg:x="28558" fg:w="12"/><text x="37.3325%" y="1551.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (12 samples, 0.02%)</title><rect x="37.0825%" y="1525" width="0.0156%" height="15" fill="rgb(249,218,47)" fg:x="28558" fg:w="12"/><text x="37.3325%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="37.0825%" y="1509" width="0.0156%" height="15" fill="rgb(254,185,48)" fg:x="28558" fg:w="12"/><text x="37.3325%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="37.0825%" y="1493" width="0.0156%" height="15" fill="rgb(252,165,50)" fg:x="28558" fg:w="12"/><text x="37.3325%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="37.0825%" y="1477" width="0.0156%" height="15" fill="rgb(206,219,6)" fg:x="28558" fg:w="12"/><text x="37.3325%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="37.0825%" y="1461" width="0.0156%" height="15" fill="rgb(212,212,45)" fg:x="28558" fg:w="12"/><text x="37.3325%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.03%)</title><rect x="37.1176%" y="1365" width="0.0312%" height="15" fill="rgb(221,31,9)" fg:x="28585" fg:w="24"/><text x="37.3676%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.03%)</title><rect x="37.1176%" y="1349" width="0.0312%" height="15" fill="rgb(234,198,39)" fg:x="28585" fg:w="24"/><text x="37.3676%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="37.1254%" y="1333" width="0.0234%" height="15" fill="rgb(252,145,46)" fg:x="28591" fg:w="18"/><text x="37.3754%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="37.1280%" y="1317" width="0.0208%" height="15" fill="rgb(237,149,0)" fg:x="28593" fg:w="16"/><text x="37.3780%" y="1327.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="37.1332%" y="1301" width="0.0156%" height="15" fill="rgb(229,65,5)" fg:x="28597" fg:w="12"/><text x="37.3832%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (45 samples, 0.06%)</title><rect x="37.1020%" y="1477" width="0.0584%" height="15" fill="rgb(235,60,36)" fg:x="28573" fg:w="45"/><text x="37.3520%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (45 samples, 0.06%)</title><rect x="37.1020%" y="1461" width="0.0584%" height="15" fill="rgb(222,47,18)" fg:x="28573" fg:w="45"/><text x="37.3520%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (45 samples, 0.06%)</title><rect x="37.1020%" y="1445" width="0.0584%" height="15" fill="rgb(235,114,22)" fg:x="28573" fg:w="45"/><text x="37.3520%" y="1455.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (45 samples, 0.06%)</title><rect x="37.1020%" y="1429" width="0.0584%" height="15" fill="rgb(209,167,11)" fg:x="28573" fg:w="45"/><text x="37.3520%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (45 samples, 0.06%)</title><rect x="37.1020%" y="1413" width="0.0584%" height="15" fill="rgb(251,73,18)" fg:x="28573" fg:w="45"/><text x="37.3520%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.06%)</title><rect x="37.1020%" y="1397" width="0.0584%" height="15" fill="rgb(217,60,17)" fg:x="28573" fg:w="45"/><text x="37.3520%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (45 samples, 0.06%)</title><rect x="37.1020%" y="1381" width="0.0584%" height="15" fill="rgb(224,36,37)" fg:x="28573" fg:w="45"/><text x="37.3520%" y="1391.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="37.1488%" y="1365" width="0.0117%" height="15" fill="rgb(211,21,32)" fg:x="28609" fg:w="9"/><text x="37.3988%" y="1375.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (48 samples, 0.06%)</title><rect x="37.1020%" y="1525" width="0.0623%" height="15" fill="rgb(231,55,48)" fg:x="28573" fg:w="48"/><text x="37.3520%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (48 samples, 0.06%)</title><rect x="37.1020%" y="1509" width="0.0623%" height="15" fill="rgb(227,42,18)" fg:x="28573" fg:w="48"/><text x="37.3520%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (48 samples, 0.06%)</title><rect x="37.1020%" y="1493" width="0.0623%" height="15" fill="rgb(217,2,27)" fg:x="28573" fg:w="48"/><text x="37.3520%" y="1503.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (19 samples, 0.02%)</title><rect x="37.1643%" y="1525" width="0.0247%" height="15" fill="rgb(251,138,23)" fg:x="28621" fg:w="19"/><text x="37.4143%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 0.02%)</title><rect x="37.1656%" y="1509" width="0.0234%" height="15" fill="rgb(226,184,11)" fg:x="28622" fg:w="18"/><text x="37.4156%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (14 samples, 0.02%)</title><rect x="37.1708%" y="1493" width="0.0182%" height="15" fill="rgb(242,142,12)" fg:x="28626" fg:w="14"/><text x="37.4208%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (14 samples, 0.02%)</title><rect x="37.1708%" y="1477" width="0.0182%" height="15" fill="rgb(234,187,18)" fg:x="28626" fg:w="14"/><text x="37.4208%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (14 samples, 0.02%)</title><rect x="37.1708%" y="1461" width="0.0182%" height="15" fill="rgb(237,44,42)" fg:x="28626" fg:w="14"/><text x="37.4208%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (14 samples, 0.02%)</title><rect x="37.1708%" y="1445" width="0.0182%" height="15" fill="rgb(211,90,23)" fg:x="28626" fg:w="14"/><text x="37.4208%" y="1455.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.01%)</title><rect x="37.1773%" y="1429" width="0.0117%" height="15" fill="rgb(207,81,18)" fg:x="28631" fg:w="9"/><text x="37.4273%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.01%)</title><rect x="37.1773%" y="1413" width="0.0117%" height="15" fill="rgb(222,107,28)" fg:x="28631" fg:w="9"/><text x="37.4273%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="37.1773%" y="1397" width="0.0117%" height="15" fill="rgb(237,83,52)" fg:x="28631" fg:w="9"/><text x="37.4273%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="37.1773%" y="1381" width="0.0117%" height="15" fill="rgb(208,67,11)" fg:x="28631" fg:w="9"/><text x="37.4273%" y="1391.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="37.1786%" y="1365" width="0.0104%" height="15" fill="rgb(249,157,49)" fg:x="28632" fg:w="8"/><text x="37.4286%" y="1375.50"></text></g><g><title>bcs::ser::to_bytes (108 samples, 0.14%)</title><rect x="37.0773%" y="1605" width="0.1402%" height="15" fill="rgb(243,200,1)" fg:x="28554" fg:w="108"/><text x="37.3273%" y="1615.50"></text></g><g><title>bcs::ser::serialize_into (107 samples, 0.14%)</title><rect x="37.0786%" y="1589" width="0.1389%" height="15" fill="rgb(225,162,37)" fg:x="28555" fg:w="107"/><text x="37.3286%" y="1599.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (107 samples, 0.14%)</title><rect x="37.0786%" y="1573" width="0.1389%" height="15" fill="rgb(242,92,13)" fg:x="28555" fg:w="107"/><text x="37.3286%" y="1583.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (92 samples, 0.12%)</title><rect x="37.0981%" y="1557" width="0.1195%" height="15" fill="rgb(220,43,36)" fg:x="28570" fg:w="92"/><text x="37.3481%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (89 samples, 0.12%)</title><rect x="37.1020%" y="1541" width="0.1156%" height="15" fill="rgb(213,165,48)" fg:x="28573" fg:w="89"/><text x="37.3520%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (22 samples, 0.03%)</title><rect x="37.1890%" y="1525" width="0.0286%" height="15" fill="rgb(227,200,9)" fg:x="28640" fg:w="22"/><text x="37.4390%" y="1535.50"></text></g><g><title>serde::ser::Serializer::collect_seq (22 samples, 0.03%)</title><rect x="37.1890%" y="1509" width="0.0286%" height="15" fill="rgb(221,222,28)" fg:x="28640" fg:w="22"/><text x="37.4390%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (20 samples, 0.03%)</title><rect x="37.1916%" y="1493" width="0.0260%" height="15" fill="rgb(223,142,26)" fg:x="28642" fg:w="20"/><text x="37.4416%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.03%)</title><rect x="37.1916%" y="1477" width="0.0260%" height="15" fill="rgb(243,46,9)" fg:x="28642" fg:w="20"/><text x="37.4416%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (18 samples, 0.02%)</title><rect x="37.1942%" y="1461" width="0.0234%" height="15" fill="rgb(250,56,11)" fg:x="28644" fg:w="18"/><text x="37.4442%" y="1471.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (18 samples, 0.02%)</title><rect x="37.1942%" y="1445" width="0.0234%" height="15" fill="rgb(229,113,5)" fg:x="28644" fg:w="18"/><text x="37.4442%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (18 samples, 0.02%)</title><rect x="37.1942%" y="1429" width="0.0234%" height="15" fill="rgb(244,108,28)" fg:x="28644" fg:w="18"/><text x="37.4442%" y="1439.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 0.02%)</title><rect x="37.1942%" y="1413" width="0.0234%" height="15" fill="rgb(242,119,50)" fg:x="28644" fg:w="18"/><text x="37.4442%" y="1423.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (18 samples, 0.02%)</title><rect x="37.1942%" y="1397" width="0.0234%" height="15" fill="rgb(224,164,23)" fg:x="28644" fg:w="18"/><text x="37.4442%" y="1407.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="37.2072%" y="1381" width="0.0104%" height="15" fill="rgb(214,227,44)" fg:x="28654" fg:w="8"/><text x="37.4572%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (21 samples, 0.03%)</title><rect x="37.2254%" y="1573" width="0.0273%" height="15" fill="rgb(238,202,4)" fg:x="28668" fg:w="21"/><text x="37.4754%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.03%)</title><rect x="37.2254%" y="1557" width="0.0273%" height="15" fill="rgb(213,190,30)" fg:x="28668" fg:w="21"/><text x="37.4754%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (20 samples, 0.03%)</title><rect x="37.2267%" y="1541" width="0.0260%" height="15" fill="rgb(239,15,2)" fg:x="28669" fg:w="20"/><text x="37.4767%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (20 samples, 0.03%)</title><rect x="37.2267%" y="1525" width="0.0260%" height="15" fill="rgb(249,229,4)" fg:x="28669" fg:w="20"/><text x="37.4767%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (15 samples, 0.02%)</title><rect x="37.2332%" y="1509" width="0.0195%" height="15" fill="rgb(239,75,44)" fg:x="28674" fg:w="15"/><text x="37.4832%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (11 samples, 0.01%)</title><rect x="37.2384%" y="1493" width="0.0143%" height="15" fill="rgb(251,206,23)" fg:x="28678" fg:w="11"/><text x="37.4884%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (9 samples, 0.01%)</title><rect x="37.2409%" y="1477" width="0.0117%" height="15" fill="rgb(215,208,0)" fg:x="28680" fg:w="9"/><text x="37.4909%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (9 samples, 0.01%)</title><rect x="37.2409%" y="1461" width="0.0117%" height="15" fill="rgb(230,75,50)" fg:x="28680" fg:w="9"/><text x="37.4909%" y="1471.50"></text></g><g><title>alloc::alloc::box_free (9 samples, 0.01%)</title><rect x="37.2409%" y="1445" width="0.0117%" height="15" fill="rgb(246,180,39)" fg:x="28680" fg:w="9"/><text x="37.4909%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="37.2409%" y="1429" width="0.0117%" height="15" fill="rgb(249,175,24)" fg:x="28680" fg:w="9"/><text x="37.4909%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="37.2422%" y="1413" width="0.0104%" height="15" fill="rgb(247,176,22)" fg:x="28681" fg:w="8"/><text x="37.4922%" y="1423.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (148 samples, 0.19%)</title><rect x="37.0747%" y="1637" width="0.1922%" height="15" fill="rgb(241,100,24)" fg:x="28552" fg:w="148"/><text x="37.3247%" y="1647.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (146 samples, 0.19%)</title><rect x="37.0773%" y="1621" width="0.1896%" height="15" fill="rgb(233,4,35)" fg:x="28554" fg:w="146"/><text x="37.3273%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (34 samples, 0.04%)</title><rect x="37.2228%" y="1605" width="0.0441%" height="15" fill="rgb(211,164,46)" fg:x="28666" fg:w="34"/><text x="37.4728%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (32 samples, 0.04%)</title><rect x="37.2254%" y="1589" width="0.0416%" height="15" fill="rgb(242,99,53)" fg:x="28668" fg:w="32"/><text x="37.4754%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (11 samples, 0.01%)</title><rect x="37.2526%" y="1573" width="0.0143%" height="15" fill="rgb(243,45,33)" fg:x="28689" fg:w="11"/><text x="37.5026%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (11 samples, 0.01%)</title><rect x="37.2526%" y="1557" width="0.0143%" height="15" fill="rgb(217,55,21)" fg:x="28689" fg:w="11"/><text x="37.5026%" y="1567.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="37.2526%" y="1541" width="0.0143%" height="15" fill="rgb(245,145,46)" fg:x="28689" fg:w="11"/><text x="37.5026%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="37.2526%" y="1525" width="0.0143%" height="15" fill="rgb(215,112,45)" fg:x="28689" fg:w="11"/><text x="37.5026%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="37.2526%" y="1509" width="0.0143%" height="15" fill="rgb(228,104,16)" fg:x="28689" fg:w="11"/><text x="37.5026%" y="1519.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="37.2539%" y="1493" width="0.0130%" height="15" fill="rgb(239,186,38)" fg:x="28690" fg:w="10"/><text x="37.5039%" y="1503.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (12 samples, 0.02%)</title><rect x="37.2682%" y="1621" width="0.0156%" height="15" fill="rgb(228,38,35)" fg:x="28701" fg:w="12"/><text x="37.5182%" y="1631.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (26 samples, 0.03%)</title><rect x="37.2669%" y="1637" width="0.0338%" height="15" fill="rgb(251,42,40)" fg:x="28700" fg:w="26"/><text x="37.5169%" y="1647.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (260 samples, 0.34%)</title><rect x="36.9657%" y="1669" width="0.3376%" height="15" fill="rgb(210,51,19)" fg:x="28468" fg:w="260"/><text x="37.2157%" y="1679.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (254 samples, 0.33%)</title><rect x="36.9735%" y="1653" width="0.3298%" height="15" fill="rgb(236,94,42)" fg:x="28474" fg:w="254"/><text x="37.2235%" y="1663.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (10 samples, 0.01%)</title><rect x="37.3241%" y="1509" width="0.0130%" height="15" fill="rgb(239,167,16)" fg:x="28744" fg:w="10"/><text x="37.5741%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (21 samples, 0.03%)</title><rect x="37.3202%" y="1525" width="0.0273%" height="15" fill="rgb(252,175,31)" fg:x="28741" fg:w="21"/><text x="37.5702%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (8 samples, 0.01%)</title><rect x="37.3370%" y="1509" width="0.0104%" height="15" fill="rgb(206,166,30)" fg:x="28754" fg:w="8"/><text x="37.5870%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.01%)</title><rect x="37.3500%" y="1493" width="0.0104%" height="15" fill="rgb(206,209,37)" fg:x="28764" fg:w="8"/><text x="37.6000%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="37.3500%" y="1477" width="0.0104%" height="15" fill="rgb(226,91,4)" fg:x="28764" fg:w="8"/><text x="37.6000%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="37.3500%" y="1461" width="0.0104%" height="15" fill="rgb(222,167,0)" fg:x="28764" fg:w="8"/><text x="37.6000%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="37.3500%" y="1445" width="0.0104%" height="15" fill="rgb(211,70,14)" fg:x="28764" fg:w="8"/><text x="37.6000%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="37.3500%" y="1429" width="0.0104%" height="15" fill="rgb(214,84,42)" fg:x="28764" fg:w="8"/><text x="37.6000%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="37.3500%" y="1413" width="0.0104%" height="15" fill="rgb(235,157,37)" fg:x="28764" fg:w="8"/><text x="37.6000%" y="1423.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="37.3500%" y="1397" width="0.0104%" height="15" fill="rgb(225,13,6)" fg:x="28764" fg:w="8"/><text x="37.6000%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (50 samples, 0.06%)</title><rect x="37.3124%" y="1605" width="0.0649%" height="15" fill="rgb(205,202,1)" fg:x="28735" fg:w="50"/><text x="37.5624%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.06%)</title><rect x="37.3124%" y="1589" width="0.0649%" height="15" fill="rgb(232,195,26)" fg:x="28735" fg:w="50"/><text x="37.5624%" y="1599.50"></text></g><g><title>core::mem::drop (44 samples, 0.06%)</title><rect x="37.3202%" y="1573" width="0.0571%" height="15" fill="rgb(208,102,26)" fg:x="28741" fg:w="44"/><text x="37.5702%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="37.3202%" y="1557" width="0.0571%" height="15" fill="rgb(215,41,39)" fg:x="28741" fg:w="44"/><text x="37.5702%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.06%)</title><rect x="37.3202%" y="1541" width="0.0571%" height="15" fill="rgb(247,139,11)" fg:x="28741" fg:w="44"/><text x="37.5702%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (23 samples, 0.03%)</title><rect x="37.3474%" y="1525" width="0.0299%" height="15" fill="rgb(243,99,6)" fg:x="28762" fg:w="23"/><text x="37.5974%" y="1535.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (21 samples, 0.03%)</title><rect x="37.3500%" y="1509" width="0.0273%" height="15" fill="rgb(230,168,48)" fg:x="28764" fg:w="21"/><text x="37.6000%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt; (13 samples, 0.02%)</title><rect x="37.3604%" y="1493" width="0.0169%" height="15" fill="rgb(238,227,13)" fg:x="28772" fg:w="13"/><text x="37.6104%" y="1503.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (10 samples, 0.01%)</title><rect x="37.3916%" y="1493" width="0.0130%" height="15" fill="rgb(209,109,13)" fg:x="28796" fg:w="10"/><text x="37.6416%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (10 samples, 0.01%)</title><rect x="37.3916%" y="1477" width="0.0130%" height="15" fill="rgb(228,195,1)" fg:x="28796" fg:w="10"/><text x="37.6416%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="37.3929%" y="1461" width="0.0117%" height="15" fill="rgb(230,218,0)" fg:x="28797" fg:w="9"/><text x="37.6429%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="37.3929%" y="1445" width="0.0117%" height="15" fill="rgb(206,1,45)" fg:x="28797" fg:w="9"/><text x="37.6429%" y="1455.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="37.3929%" y="1429" width="0.0117%" height="15" fill="rgb(209,124,26)" fg:x="28797" fg:w="9"/><text x="37.6429%" y="1439.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (11 samples, 0.01%)</title><rect x="37.3916%" y="1509" width="0.0143%" height="15" fill="rgb(220,59,8)" fg:x="28796" fg:w="11"/><text x="37.6416%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (8 samples, 0.01%)</title><rect x="37.4214%" y="1429" width="0.0104%" height="15" fill="rgb(251,41,37)" fg:x="28819" fg:w="8"/><text x="37.6714%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="37.4318%" y="1413" width="0.0130%" height="15" fill="rgb(239,152,21)" fg:x="28827" fg:w="10"/><text x="37.6818%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="37.4318%" y="1397" width="0.0130%" height="15" fill="rgb(226,32,1)" fg:x="28827" fg:w="10"/><text x="37.6818%" y="1407.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="37.4331%" y="1381" width="0.0117%" height="15" fill="rgb(230,154,36)" fg:x="28828" fg:w="9"/><text x="37.6831%" y="1391.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (24 samples, 0.03%)</title><rect x="37.4175%" y="1461" width="0.0312%" height="15" fill="rgb(208,228,43)" fg:x="28816" fg:w="24"/><text x="37.6675%" y="1471.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (24 samples, 0.03%)</title><rect x="37.4175%" y="1445" width="0.0312%" height="15" fill="rgb(214,203,3)" fg:x="28816" fg:w="24"/><text x="37.6675%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (13 samples, 0.02%)</title><rect x="37.4318%" y="1429" width="0.0169%" height="15" fill="rgb(207,149,29)" fg:x="28827" fg:w="13"/><text x="37.6818%" y="1439.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (45 samples, 0.06%)</title><rect x="37.4059%" y="1493" width="0.0584%" height="15" fill="rgb(250,105,7)" fg:x="28807" fg:w="45"/><text x="37.6559%" y="1503.50"></text></g><g><title>alloc::collections::btree::mem::replace (40 samples, 0.05%)</title><rect x="37.4124%" y="1477" width="0.0519%" height="15" fill="rgb(232,222,16)" fg:x="28812" fg:w="40"/><text x="37.6624%" y="1487.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (71 samples, 0.09%)</title><rect x="37.3851%" y="1525" width="0.0922%" height="15" fill="rgb(209,32,24)" fg:x="28791" fg:w="71"/><text x="37.6351%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (55 samples, 0.07%)</title><rect x="37.4059%" y="1509" width="0.0714%" height="15" fill="rgb(225,13,6)" fg:x="28807" fg:w="55"/><text x="37.6559%" y="1519.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (10 samples, 0.01%)</title><rect x="37.4643%" y="1493" width="0.0130%" height="15" fill="rgb(245,226,26)" fg:x="28852" fg:w="10"/><text x="37.7143%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (168 samples, 0.22%)</title><rect x="37.4890%" y="1413" width="0.2181%" height="15" fill="rgb(229,178,27)" fg:x="28871" fg:w="168"/><text x="37.7390%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (168 samples, 0.22%)</title><rect x="37.4890%" y="1397" width="0.2181%" height="15" fill="rgb(205,227,28)" fg:x="28871" fg:w="168"/><text x="37.7390%" y="1407.50"></text></g><g><title>cfree (159 samples, 0.21%)</title><rect x="37.5006%" y="1381" width="0.2065%" height="15" fill="rgb(210,191,45)" fg:x="28880" fg:w="159"/><text x="37.7506%" y="1391.50"></text></g><g><title>[libc.so.6] (105 samples, 0.14%)</title><rect x="37.5708%" y="1365" width="0.1363%" height="15" fill="rgb(206,124,16)" fg:x="28934" fg:w="105"/><text x="37.8208%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (314 samples, 0.41%)</title><rect x="37.3111%" y="1621" width="0.4077%" height="15" fill="rgb(210,162,0)" fg:x="28734" fg:w="314"/><text x="37.5611%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (263 samples, 0.34%)</title><rect x="37.3773%" y="1605" width="0.3415%" height="15" fill="rgb(211,54,38)" fg:x="28785" fg:w="263"/><text x="37.6273%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (263 samples, 0.34%)</title><rect x="37.3773%" y="1589" width="0.3415%" height="15" fill="rgb(248,192,3)" fg:x="28785" fg:w="263"/><text x="37.6273%" y="1599.50"></text></g><g><title>core::mem::drop (260 samples, 0.34%)</title><rect x="37.3812%" y="1573" width="0.3376%" height="15" fill="rgb(233,187,18)" fg:x="28788" fg:w="260"/><text x="37.6312%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (260 samples, 0.34%)</title><rect x="37.3812%" y="1557" width="0.3376%" height="15" fill="rgb(237,208,14)" fg:x="28788" fg:w="260"/><text x="37.6312%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (260 samples, 0.34%)</title><rect x="37.3812%" y="1541" width="0.3376%" height="15" fill="rgb(212,77,1)" fg:x="28788" fg:w="260"/><text x="37.6312%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (186 samples, 0.24%)</title><rect x="37.4773%" y="1525" width="0.2415%" height="15" fill="rgb(210,163,22)" fg:x="28862" fg:w="186"/><text x="37.7273%" y="1535.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (186 samples, 0.24%)</title><rect x="37.4773%" y="1509" width="0.2415%" height="15" fill="rgb(250,58,28)" fg:x="28862" fg:w="186"/><text x="37.7273%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (186 samples, 0.24%)</title><rect x="37.4773%" y="1493" width="0.2415%" height="15" fill="rgb(254,28,41)" fg:x="28862" fg:w="186"/><text x="37.7273%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (186 samples, 0.24%)</title><rect x="37.4773%" y="1477" width="0.2415%" height="15" fill="rgb(237,162,36)" fg:x="28862" fg:w="186"/><text x="37.7273%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (186 samples, 0.24%)</title><rect x="37.4773%" y="1461" width="0.2415%" height="15" fill="rgb(232,56,6)" fg:x="28862" fg:w="186"/><text x="37.7273%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (186 samples, 0.24%)</title><rect x="37.4773%" y="1445" width="0.2415%" height="15" fill="rgb(216,127,42)" fg:x="28862" fg:w="186"/><text x="37.7273%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (186 samples, 0.24%)</title><rect x="37.4773%" y="1429" width="0.2415%" height="15" fill="rgb(241,69,15)" fg:x="28862" fg:w="186"/><text x="37.7273%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.01%)</title><rect x="37.7071%" y="1413" width="0.0117%" height="15" fill="rgb(227,180,19)" fg:x="29039" fg:w="9"/><text x="37.9571%" y="1423.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (322 samples, 0.42%)</title><rect x="37.3033%" y="1669" width="0.4181%" height="15" fill="rgb(231,188,29)" fg:x="28728" fg:w="322"/><text x="37.5533%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (322 samples, 0.42%)</title><rect x="37.3033%" y="1653" width="0.4181%" height="15" fill="rgb(224,176,27)" fg:x="28728" fg:w="322"/><text x="37.5533%" y="1663.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (321 samples, 0.42%)</title><rect x="37.3046%" y="1637" width="0.4168%" height="15" fill="rgb(249,214,19)" fg:x="28729" fg:w="321"/><text x="37.5546%" y="1647.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (909 samples, 1.18%)</title><rect x="36.5476%" y="1701" width="1.1803%" height="15" fill="rgb(240,0,4)" fg:x="28146" fg:w="909"/><text x="36.7976%" y="1711.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (908 samples, 1.18%)</title><rect x="36.5488%" y="1685" width="1.1790%" height="15" fill="rgb(233,28,41)" fg:x="28147" fg:w="908"/><text x="36.7988%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="37.7526%" y="1621" width="0.0104%" height="15" fill="rgb(220,90,51)" fg:x="29074" fg:w="8"/><text x="38.0026%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="37.7526%" y="1605" width="0.0104%" height="15" fill="rgb(250,52,22)" fg:x="29074" fg:w="8"/><text x="38.0026%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="37.7526%" y="1589" width="0.0104%" height="15" fill="rgb(231,152,36)" fg:x="29074" fg:w="8"/><text x="38.0026%" y="1599.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="37.7305%" y="1701" width="0.0338%" height="15" fill="rgb(250,218,4)" fg:x="29057" fg:w="26"/><text x="37.9805%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="37.7396%" y="1685" width="0.0247%" height="15" fill="rgb(210,38,21)" fg:x="29064" fg:w="19"/><text x="37.9896%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.02%)</title><rect x="37.7435%" y="1669" width="0.0208%" height="15" fill="rgb(230,75,13)" fg:x="29067" fg:w="16"/><text x="37.9935%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.02%)</title><rect x="37.7435%" y="1653" width="0.0208%" height="15" fill="rgb(250,68,53)" fg:x="29067" fg:w="16"/><text x="37.9935%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.02%)</title><rect x="37.7435%" y="1637" width="0.0208%" height="15" fill="rgb(250,210,16)" fg:x="29067" fg:w="16"/><text x="37.9935%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (11 samples, 0.01%)</title><rect x="37.7694%" y="1701" width="0.0143%" height="15" fill="rgb(240,132,5)" fg:x="29087" fg:w="11"/><text x="38.0194%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (11 samples, 0.01%)</title><rect x="37.7694%" y="1685" width="0.0143%" height="15" fill="rgb(222,148,48)" fg:x="29087" fg:w="11"/><text x="38.0194%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="37.7720%" y="1669" width="0.0117%" height="15" fill="rgb(247,181,24)" fg:x="29089" fg:w="9"/><text x="38.0220%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (11 samples, 0.01%)</title><rect x="37.7967%" y="1621" width="0.0143%" height="15" fill="rgb(239,5,31)" fg:x="29108" fg:w="11"/><text x="38.0467%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (11 samples, 0.01%)</title><rect x="37.7967%" y="1605" width="0.0143%" height="15" fill="rgb(241,152,38)" fg:x="29108" fg:w="11"/><text x="38.0467%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (23 samples, 0.03%)</title><rect x="37.7837%" y="1701" width="0.0299%" height="15" fill="rgb(246,200,37)" fg:x="29098" fg:w="23"/><text x="38.0337%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22 samples, 0.03%)</title><rect x="37.7850%" y="1685" width="0.0286%" height="15" fill="rgb(243,210,26)" fg:x="29099" fg:w="22"/><text x="38.0350%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.02%)</title><rect x="37.7889%" y="1669" width="0.0247%" height="15" fill="rgb(222,22,22)" fg:x="29102" fg:w="19"/><text x="38.0389%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19 samples, 0.02%)</title><rect x="37.7889%" y="1653" width="0.0247%" height="15" fill="rgb(208,129,28)" fg:x="29102" fg:w="19"/><text x="38.0389%" y="1663.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (19 samples, 0.02%)</title><rect x="37.7889%" y="1637" width="0.0247%" height="15" fill="rgb(254,169,28)" fg:x="29102" fg:w="19"/><text x="38.0389%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (109 samples, 0.14%)</title><rect x="37.8136%" y="1701" width="0.1415%" height="15" fill="rgb(225,45,17)" fg:x="29121" fg:w="109"/><text x="38.0636%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (96 samples, 0.12%)</title><rect x="37.8305%" y="1685" width="0.1247%" height="15" fill="rgb(232,199,2)" fg:x="29134" fg:w="96"/><text x="38.0805%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (75 samples, 0.10%)</title><rect x="37.8577%" y="1669" width="0.0974%" height="15" fill="rgb(235,33,40)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (75 samples, 0.10%)</title><rect x="37.8577%" y="1653" width="0.0974%" height="15" fill="rgb(237,89,50)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (75 samples, 0.10%)</title><rect x="37.8577%" y="1637" width="0.0974%" height="15" fill="rgb(238,126,5)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (75 samples, 0.10%)</title><rect x="37.8577%" y="1621" width="0.0974%" height="15" fill="rgb(247,214,42)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.10%)</title><rect x="37.8577%" y="1605" width="0.0974%" height="15" fill="rgb(238,60,45)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.10%)</title><rect x="37.8577%" y="1589" width="0.0974%" height="15" fill="rgb(225,69,44)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (75 samples, 0.10%)</title><rect x="37.8577%" y="1573" width="0.0974%" height="15" fill="rgb(241,13,44)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1583.50"></text></g><g><title>malloc (75 samples, 0.10%)</title><rect x="37.8577%" y="1557" width="0.0974%" height="15" fill="rgb(227,121,22)" fg:x="29155" fg:w="75"/><text x="38.1077%" y="1567.50"></text></g><g><title>[libc.so.6] (67 samples, 0.09%)</title><rect x="37.8681%" y="1541" width="0.0870%" height="15" fill="rgb(231,160,23)" fg:x="29163" fg:w="67"/><text x="38.1181%" y="1551.50"></text></g><g><title>[libc.so.6] (41 samples, 0.05%)</title><rect x="37.9019%" y="1525" width="0.0532%" height="15" fill="rgb(250,179,43)" fg:x="29189" fg:w="41"/><text x="38.1519%" y="1535.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="37.9551%" y="1701" width="0.0117%" height="15" fill="rgb(233,54,46)" fg:x="29230" fg:w="9"/><text x="38.2051%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="37.9707%" y="1653" width="0.0429%" height="15" fill="rgb(247,120,42)" fg:x="29242" fg:w="33"/><text x="38.2207%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (33 samples, 0.04%)</title><rect x="37.9707%" y="1637" width="0.0429%" height="15" fill="rgb(221,219,12)" fg:x="29242" fg:w="33"/><text x="38.2207%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (33 samples, 0.04%)</title><rect x="37.9707%" y="1621" width="0.0429%" height="15" fill="rgb(211,126,8)" fg:x="29242" fg:w="33"/><text x="38.2207%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (21 samples, 0.03%)</title><rect x="37.9863%" y="1605" width="0.0273%" height="15" fill="rgb(218,154,33)" fg:x="29254" fg:w="21"/><text x="38.2363%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (18 samples, 0.02%)</title><rect x="37.9902%" y="1589" width="0.0234%" height="15" fill="rgb(212,199,16)" fg:x="29257" fg:w="18"/><text x="38.2402%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (14 samples, 0.02%)</title><rect x="37.9954%" y="1573" width="0.0182%" height="15" fill="rgb(236,215,46)" fg:x="29261" fg:w="14"/><text x="38.2454%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.02%)</title><rect x="37.9954%" y="1557" width="0.0182%" height="15" fill="rgb(232,32,22)" fg:x="29261" fg:w="14"/><text x="38.2454%" y="1567.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.02%)</title><rect x="37.9954%" y="1541" width="0.0182%" height="15" fill="rgb(234,79,15)" fg:x="29261" fg:w="14"/><text x="38.2454%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="37.9954%" y="1525" width="0.0182%" height="15" fill="rgb(235,187,47)" fg:x="29261" fg:w="14"/><text x="38.2454%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="37.9967%" y="1509" width="0.0169%" height="15" fill="rgb(244,69,37)" fg:x="29262" fg:w="13"/><text x="38.2467%" y="1519.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="38.0006%" y="1493" width="0.0130%" height="15" fill="rgb(249,140,25)" fg:x="29265" fg:w="10"/><text x="38.2506%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (38 samples, 0.05%)</title><rect x="37.9707%" y="1669" width="0.0493%" height="15" fill="rgb(213,69,8)" fg:x="29242" fg:w="38"/><text x="38.2207%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (67 samples, 0.09%)</title><rect x="37.9668%" y="1701" width="0.0870%" height="15" fill="rgb(220,136,2)" fg:x="29239" fg:w="67"/><text x="38.2168%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (64 samples, 0.08%)</title><rect x="37.9707%" y="1685" width="0.0831%" height="15" fill="rgb(237,50,36)" fg:x="29242" fg:w="64"/><text x="38.2207%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (26 samples, 0.03%)</title><rect x="38.0200%" y="1669" width="0.0338%" height="15" fill="rgb(226,18,11)" fg:x="29280" fg:w="26"/><text x="38.2700%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (26 samples, 0.03%)</title><rect x="38.0200%" y="1653" width="0.0338%" height="15" fill="rgb(243,156,2)" fg:x="29280" fg:w="26"/><text x="38.2700%" y="1663.50"></text></g><g><title>alloc::alloc::box_free (26 samples, 0.03%)</title><rect x="38.0200%" y="1637" width="0.0338%" height="15" fill="rgb(218,8,34)" fg:x="29280" fg:w="26"/><text x="38.2700%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.03%)</title><rect x="38.0200%" y="1621" width="0.0338%" height="15" fill="rgb(250,94,35)" fg:x="29280" fg:w="26"/><text x="38.2700%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.03%)</title><rect x="38.0226%" y="1605" width="0.0312%" height="15" fill="rgb(229,127,21)" fg:x="29282" fg:w="24"/><text x="38.2726%" y="1615.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="38.0252%" y="1589" width="0.0286%" height="15" fill="rgb(234,49,5)" fg:x="29284" fg:w="22"/><text x="38.2752%" y="1599.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="38.0304%" y="1573" width="0.0234%" height="15" fill="rgb(248,12,16)" fg:x="29288" fg:w="18"/><text x="38.2804%" y="1583.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource::{{closure}} (10 samples, 0.01%)</title><rect x="38.0629%" y="1685" width="0.0130%" height="15" fill="rgb(208,220,31)" fg:x="29313" fg:w="10"/><text x="38.3129%" y="1695.50"></text></g><g><title>move_vm_runtime::data_cache::AccountDataCache::new (8 samples, 0.01%)</title><rect x="38.0655%" y="1669" width="0.0104%" height="15" fill="rgb(243,184,0)" fg:x="29315" fg:w="8"/><text x="38.3155%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="38.0772%" y="1653" width="0.0104%" height="15" fill="rgb(217,38,21)" fg:x="29324" fg:w="8"/><text x="38.3272%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (10 samples, 0.01%)</title><rect x="38.0759%" y="1685" width="0.0130%" height="15" fill="rgb(239,120,45)" fg:x="29323" fg:w="10"/><text x="38.3259%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (10 samples, 0.01%)</title><rect x="38.0759%" y="1669" width="0.0130%" height="15" fill="rgb(235,33,2)" fg:x="29323" fg:w="10"/><text x="38.3259%" y="1679.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="38.0993%" y="1541" width="0.0156%" height="15" fill="rgb(249,161,5)" fg:x="29341" fg:w="12"/><text x="38.3493%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (25 samples, 0.03%)</title><rect x="38.0889%" y="1685" width="0.0325%" height="15" fill="rgb(250,165,48)" fg:x="29333" fg:w="25"/><text x="38.3389%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (25 samples, 0.03%)</title><rect x="38.0889%" y="1669" width="0.0325%" height="15" fill="rgb(221,23,45)" fg:x="29333" fg:w="25"/><text x="38.3389%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.03%)</title><rect x="38.0889%" y="1653" width="0.0325%" height="15" fill="rgb(217,108,46)" fg:x="29333" fg:w="25"/><text x="38.3389%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.03%)</title><rect x="38.0889%" y="1637" width="0.0325%" height="15" fill="rgb(254,26,35)" fg:x="29333" fg:w="25"/><text x="38.3389%" y="1647.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (19 samples, 0.02%)</title><rect x="38.0967%" y="1621" width="0.0247%" height="15" fill="rgb(218,223,28)" fg:x="29339" fg:w="19"/><text x="38.3467%" y="1631.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (19 samples, 0.02%)</title><rect x="38.0967%" y="1605" width="0.0247%" height="15" fill="rgb(242,27,47)" fg:x="29339" fg:w="19"/><text x="38.3467%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (19 samples, 0.02%)</title><rect x="38.0967%" y="1589" width="0.0247%" height="15" fill="rgb(218,39,35)" fg:x="29339" fg:w="19"/><text x="38.3467%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (19 samples, 0.02%)</title><rect x="38.0967%" y="1573" width="0.0247%" height="15" fill="rgb(232,127,16)" fg:x="29339" fg:w="19"/><text x="38.3467%" y="1583.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (19 samples, 0.02%)</title><rect x="38.0967%" y="1557" width="0.0247%" height="15" fill="rgb(231,219,51)" fg:x="29339" fg:w="19"/><text x="38.3467%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (23 samples, 0.03%)</title><rect x="38.1213%" y="1685" width="0.0299%" height="15" fill="rgb(217,220,46)" fg:x="29358" fg:w="23"/><text x="38.3713%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (15 samples, 0.02%)</title><rect x="38.1317%" y="1669" width="0.0195%" height="15" fill="rgb(230,75,1)" fg:x="29366" fg:w="15"/><text x="38.3817%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (15 samples, 0.02%)</title><rect x="38.1317%" y="1653" width="0.0195%" height="15" fill="rgb(218,2,8)" fg:x="29366" fg:w="15"/><text x="38.3817%" y="1663.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (70 samples, 0.09%)</title><rect x="38.0616%" y="1701" width="0.0909%" height="15" fill="rgb(206,111,30)" fg:x="29312" fg:w="70"/><text x="38.3116%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="38.1811%" y="1525" width="0.0169%" height="15" fill="rgb(209,135,6)" fg:x="29404" fg:w="13"/><text x="38.4311%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="38.1811%" y="1509" width="0.0169%" height="15" fill="rgb(205,169,10)" fg:x="29404" fg:w="13"/><text x="38.4311%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="38.1811%" y="1493" width="0.0169%" height="15" fill="rgb(212,204,38)" fg:x="29404" fg:w="13"/><text x="38.4311%" y="1503.50"></text></g><g><title>malloc (13 samples, 0.02%)</title><rect x="38.1811%" y="1477" width="0.0169%" height="15" fill="rgb(205,199,14)" fg:x="29404" fg:w="13"/><text x="38.4311%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="38.1811%" y="1573" width="0.0182%" height="15" fill="rgb(212,4,6)" fg:x="29404" fg:w="14"/><text x="38.4311%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="38.1811%" y="1557" width="0.0182%" height="15" fill="rgb(250,15,10)" fg:x="29404" fg:w="14"/><text x="38.4311%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="38.1811%" y="1541" width="0.0182%" height="15" fill="rgb(212,49,51)" fg:x="29404" fg:w="14"/><text x="38.4311%" y="1551.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (38 samples, 0.05%)</title><rect x="38.1707%" y="1653" width="0.0493%" height="15" fill="rgb(235,21,9)" fg:x="29396" fg:w="38"/><text x="38.4207%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.05%)</title><rect x="38.1720%" y="1637" width="0.0480%" height="15" fill="rgb(251,31,32)" fg:x="29397" fg:w="37"/><text x="38.4220%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.04%)</title><rect x="38.1759%" y="1621" width="0.0441%" height="15" fill="rgb(246,23,9)" fg:x="29400" fg:w="34"/><text x="38.4259%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.04%)</title><rect x="38.1759%" y="1605" width="0.0441%" height="15" fill="rgb(225,216,14)" fg:x="29400" fg:w="34"/><text x="38.4259%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.04%)</title><rect x="38.1759%" y="1589" width="0.0441%" height="15" fill="rgb(215,200,26)" fg:x="29400" fg:w="34"/><text x="38.4259%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.02%)</title><rect x="38.1992%" y="1573" width="0.0208%" height="15" fill="rgb(237,130,47)" fg:x="29418" fg:w="16"/><text x="38.4492%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="38.2291%" y="1573" width="0.0156%" height="15" fill="rgb(247,74,14)" fg:x="29441" fg:w="12"/><text x="38.4791%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="38.2291%" y="1557" width="0.0156%" height="15" fill="rgb(254,97,46)" fg:x="29441" fg:w="12"/><text x="38.4791%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="38.2291%" y="1541" width="0.0156%" height="15" fill="rgb(234,191,1)" fg:x="29441" fg:w="12"/><text x="38.4791%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.03%)</title><rect x="38.2252%" y="1605" width="0.0338%" height="15" fill="rgb(215,165,14)" fg:x="29438" fg:w="26"/><text x="38.4752%" y="1615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.03%)</title><rect x="38.2265%" y="1589" width="0.0325%" height="15" fill="rgb(230,182,6)" fg:x="29439" fg:w="25"/><text x="38.4765%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (91 samples, 0.12%)</title><rect x="38.1525%" y="1701" width="0.1182%" height="15" fill="rgb(210,127,39)" fg:x="29382" fg:w="91"/><text x="38.4025%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (89 samples, 0.12%)</title><rect x="38.1551%" y="1685" width="0.1156%" height="15" fill="rgb(223,212,51)" fg:x="29384" fg:w="89"/><text x="38.4051%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (86 samples, 0.11%)</title><rect x="38.1590%" y="1669" width="0.1117%" height="15" fill="rgb(226,176,43)" fg:x="29387" fg:w="86"/><text x="38.4090%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (39 samples, 0.05%)</title><rect x="38.2200%" y="1653" width="0.0506%" height="15" fill="rgb(222,155,4)" fg:x="29434" fg:w="39"/><text x="38.4700%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (39 samples, 0.05%)</title><rect x="38.2200%" y="1637" width="0.0506%" height="15" fill="rgb(215,149,7)" fg:x="29434" fg:w="39"/><text x="38.4700%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (38 samples, 0.05%)</title><rect x="38.2213%" y="1621" width="0.0493%" height="15" fill="rgb(252,199,23)" fg:x="29435" fg:w="38"/><text x="38.4713%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.01%)</title><rect x="38.2590%" y="1605" width="0.0117%" height="15" fill="rgb(245,52,29)" fg:x="29464" fg:w="9"/><text x="38.5090%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.01%)</title><rect x="38.2590%" y="1589" width="0.0117%" height="15" fill="rgb(221,228,19)" fg:x="29464" fg:w="9"/><text x="38.5090%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.01%)</title><rect x="38.2590%" y="1573" width="0.0117%" height="15" fill="rgb(253,101,6)" fg:x="29464" fg:w="9"/><text x="38.5090%" y="1583.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (14 samples, 0.02%)</title><rect x="38.3044%" y="1541" width="0.0182%" height="15" fill="rgb(211,130,8)" fg:x="29499" fg:w="14"/><text x="38.5544%" y="1551.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="38.3044%" y="1525" width="0.0182%" height="15" fill="rgb(238,37,53)" fg:x="29499" fg:w="14"/><text x="38.5544%" y="1535.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="38.2992%" y="1573" width="0.0273%" height="15" fill="rgb(235,145,5)" fg:x="29495" fg:w="21"/><text x="38.5492%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="38.3044%" y="1557" width="0.0221%" height="15" fill="rgb(244,12,43)" fg:x="29499" fg:w="17"/><text x="38.5544%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="38.2979%" y="1637" width="0.0351%" height="15" fill="rgb(246,195,24)" fg:x="29494" fg:w="27"/><text x="38.5479%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.04%)</title><rect x="38.2979%" y="1621" width="0.0351%" height="15" fill="rgb(235,163,6)" fg:x="29494" fg:w="27"/><text x="38.5479%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.04%)</title><rect x="38.2979%" y="1605" width="0.0351%" height="15" fill="rgb(236,218,17)" fg:x="29494" fg:w="27"/><text x="38.5479%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.04%)</title><rect x="38.2979%" y="1589" width="0.0351%" height="15" fill="rgb(235,12,38)" fg:x="29494" fg:w="27"/><text x="38.5479%" y="1599.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (47 samples, 0.06%)</title><rect x="38.2966%" y="1653" width="0.0610%" height="15" fill="rgb(225,195,33)" fg:x="29493" fg:w="47"/><text x="38.5466%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="38.3343%" y="1637" width="0.0234%" height="15" fill="rgb(238,54,35)" fg:x="29522" fg:w="18"/><text x="38.5843%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="38.3343%" y="1621" width="0.0234%" height="15" fill="rgb(238,33,7)" fg:x="29522" fg:w="18"/><text x="38.5843%" y="1631.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.02%)</title><rect x="38.3369%" y="1605" width="0.0208%" height="15" fill="rgb(245,5,14)" fg:x="29524" fg:w="16"/><text x="38.5869%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (16 samples, 0.02%)</title><rect x="38.3369%" y="1589" width="0.0208%" height="15" fill="rgb(251,95,31)" fg:x="29524" fg:w="16"/><text x="38.5869%" y="1599.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="38.3460%" y="1573" width="0.0117%" height="15" fill="rgb(222,15,46)" fg:x="29531" fg:w="9"/><text x="38.5960%" y="1583.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="38.3460%" y="1557" width="0.0117%" height="15" fill="rgb(226,182,24)" fg:x="29531" fg:w="9"/><text x="38.5960%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="38.3680%" y="1573" width="0.0143%" height="15" fill="rgb(229,105,41)" fg:x="29548" fg:w="11"/><text x="38.6180%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="38.3680%" y="1557" width="0.0143%" height="15" fill="rgb(216,99,53)" fg:x="29548" fg:w="11"/><text x="38.6180%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="38.3680%" y="1541" width="0.0143%" height="15" fill="rgb(253,26,20)" fg:x="29548" fg:w="11"/><text x="38.6180%" y="1551.50"></text></g><g><title>core::hash::Hash::hash_slice (10 samples, 0.01%)</title><rect x="38.3875%" y="1541" width="0.0130%" height="15" fill="rgb(249,155,28)" fg:x="29563" fg:w="10"/><text x="38.6375%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.04%)</title><rect x="38.3667%" y="1605" width="0.0351%" height="15" fill="rgb(241,221,2)" fg:x="29547" fg:w="27"/><text x="38.6167%" y="1615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.03%)</title><rect x="38.3680%" y="1589" width="0.0338%" height="15" fill="rgb(219,124,6)" fg:x="29548" fg:w="26"/><text x="38.6180%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.02%)</title><rect x="38.3823%" y="1573" width="0.0195%" height="15" fill="rgb(233,37,6)" fg:x="29559" fg:w="15"/><text x="38.6323%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.01%)</title><rect x="38.3875%" y="1557" width="0.0143%" height="15" fill="rgb(238,20,14)" fg:x="29563" fg:w="11"/><text x="38.6375%" y="1567.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (19 samples, 0.02%)</title><rect x="38.4122%" y="1541" width="0.0247%" height="15" fill="rgb(232,106,27)" fg:x="29582" fg:w="19"/><text x="38.6622%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.02%)</title><rect x="38.4122%" y="1525" width="0.0247%" height="15" fill="rgb(246,157,24)" fg:x="29582" fg:w="19"/><text x="38.6622%" y="1535.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.02%)</title><rect x="38.4122%" y="1509" width="0.0247%" height="15" fill="rgb(214,153,10)" fg:x="29582" fg:w="19"/><text x="38.6622%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 0.01%)</title><rect x="38.4265%" y="1493" width="0.0104%" height="15" fill="rgb(212,94,6)" fg:x="29593" fg:w="8"/><text x="38.6765%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="38.4265%" y="1477" width="0.0104%" height="15" fill="rgb(254,25,27)" fg:x="29593" fg:w="8"/><text x="38.6765%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (20 samples, 0.03%)</title><rect x="38.4122%" y="1557" width="0.0260%" height="15" fill="rgb(250,43,52)" fg:x="29582" fg:w="20"/><text x="38.6622%" y="1567.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.01%)</title><rect x="38.4408%" y="1557" width="0.0117%" height="15" fill="rgb(221,226,40)" fg:x="29604" fg:w="9"/><text x="38.6908%" y="1567.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.01%)</title><rect x="38.4408%" y="1541" width="0.0117%" height="15" fill="rgb(235,162,34)" fg:x="29604" fg:w="9"/><text x="38.6908%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="38.4408%" y="1525" width="0.0117%" height="15" fill="rgb(239,24,26)" fg:x="29604" fg:w="9"/><text x="38.6908%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (143 samples, 0.19%)</title><rect x="38.2707%" y="1701" width="0.1857%" height="15" fill="rgb(244,226,11)" fg:x="29473" fg:w="143"/><text x="38.5207%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (141 samples, 0.18%)</title><rect x="38.2733%" y="1685" width="0.1831%" height="15" fill="rgb(225,23,10)" fg:x="29475" fg:w="141"/><text x="38.5233%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (129 samples, 0.17%)</title><rect x="38.2888%" y="1669" width="0.1675%" height="15" fill="rgb(249,125,6)" fg:x="29487" fg:w="129"/><text x="38.5388%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (70 samples, 0.09%)</title><rect x="38.3654%" y="1653" width="0.0909%" height="15" fill="rgb(246,212,12)" fg:x="29546" fg:w="70"/><text x="38.6154%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (70 samples, 0.09%)</title><rect x="38.3654%" y="1637" width="0.0909%" height="15" fill="rgb(230,43,32)" fg:x="29546" fg:w="70"/><text x="38.6154%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (70 samples, 0.09%)</title><rect x="38.3654%" y="1621" width="0.0909%" height="15" fill="rgb(210,95,23)" fg:x="29546" fg:w="70"/><text x="38.6154%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (42 samples, 0.05%)</title><rect x="38.4018%" y="1605" width="0.0545%" height="15" fill="rgb(229,103,33)" fg:x="29574" fg:w="42"/><text x="38.6518%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (42 samples, 0.05%)</title><rect x="38.4018%" y="1589" width="0.0545%" height="15" fill="rgb(222,104,27)" fg:x="29574" fg:w="42"/><text x="38.6518%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (42 samples, 0.05%)</title><rect x="38.4018%" y="1573" width="0.0545%" height="15" fill="rgb(239,221,23)" fg:x="29574" fg:w="42"/><text x="38.6518%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="38.6329%" y="1397" width="0.0182%" height="15" fill="rgb(222,98,21)" fg:x="29752" fg:w="14"/><text x="38.8829%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.02%)</title><rect x="38.6329%" y="1381" width="0.0182%" height="15" fill="rgb(231,101,20)" fg:x="29752" fg:w="14"/><text x="38.8829%" y="1391.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="38.6407%" y="1365" width="0.0104%" height="15" fill="rgb(215,150,22)" fg:x="29758" fg:w="8"/><text x="38.8907%" y="1375.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (8 samples, 0.01%)</title><rect x="38.6407%" y="1349" width="0.0104%" height="15" fill="rgb(248,3,34)" fg:x="29758" fg:w="8"/><text x="38.8907%" y="1359.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="38.6407%" y="1333" width="0.0104%" height="15" fill="rgb(220,141,21)" fg:x="29758" fg:w="8"/><text x="38.8907%" y="1343.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (15 samples, 0.02%)</title><rect x="38.6329%" y="1413" width="0.0195%" height="15" fill="rgb(223,41,48)" fg:x="29752" fg:w="15"/><text x="38.8829%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (30 samples, 0.04%)</title><rect x="38.6148%" y="1493" width="0.0390%" height="15" fill="rgb(247,12,5)" fg:x="29738" fg:w="30"/><text x="38.8648%" y="1503.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (22 samples, 0.03%)</title><rect x="38.6251%" y="1477" width="0.0286%" height="15" fill="rgb(206,173,10)" fg:x="29746" fg:w="22"/><text x="38.8751%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.03%)</title><rect x="38.6264%" y="1461" width="0.0273%" height="15" fill="rgb(233,214,37)" fg:x="29747" fg:w="21"/><text x="38.8764%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.03%)</title><rect x="38.6264%" y="1445" width="0.0273%" height="15" fill="rgb(238,86,43)" fg:x="29747" fg:w="21"/><text x="38.8764%" y="1455.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="38.6277%" y="1429" width="0.0260%" height="15" fill="rgb(212,182,8)" fg:x="29748" fg:w="20"/><text x="38.8777%" y="1439.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (38 samples, 0.05%)</title><rect x="38.6628%" y="1493" width="0.0493%" height="15" fill="rgb(240,91,47)" fg:x="29775" fg:w="38"/><text x="38.9128%" y="1503.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (38 samples, 0.05%)</title><rect x="38.6628%" y="1477" width="0.0493%" height="15" fill="rgb(209,138,26)" fg:x="29775" fg:w="38"/><text x="38.9128%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (34 samples, 0.04%)</title><rect x="38.6680%" y="1461" width="0.0441%" height="15" fill="rgb(231,163,20)" fg:x="29779" fg:w="34"/><text x="38.9180%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.04%)</title><rect x="38.6680%" y="1445" width="0.0441%" height="15" fill="rgb(214,91,54)" fg:x="29779" fg:w="34"/><text x="38.9180%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.04%)</title><rect x="38.6680%" y="1429" width="0.0441%" height="15" fill="rgb(230,32,17)" fg:x="29779" fg:w="34"/><text x="38.9180%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.04%)</title><rect x="38.6680%" y="1413" width="0.0441%" height="15" fill="rgb(231,34,34)" fg:x="29779" fg:w="34"/><text x="38.9180%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.04%)</title><rect x="38.6680%" y="1397" width="0.0441%" height="15" fill="rgb(224,228,27)" fg:x="29779" fg:w="34"/><text x="38.9180%" y="1407.50"></text></g><g><title>malloc (32 samples, 0.04%)</title><rect x="38.6706%" y="1381" width="0.0416%" height="15" fill="rgb(219,35,40)" fg:x="29781" fg:w="32"/><text x="38.9206%" y="1391.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="38.6862%" y="1365" width="0.0260%" height="15" fill="rgb(234,42,8)" fg:x="29793" fg:w="20"/><text x="38.9362%" y="1375.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (104 samples, 0.14%)</title><rect x="38.5914%" y="1509" width="0.1350%" height="15" fill="rgb(226,75,22)" fg:x="29720" fg:w="104"/><text x="38.8414%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (11 samples, 0.01%)</title><rect x="38.7121%" y="1493" width="0.0143%" height="15" fill="rgb(242,203,28)" fg:x="29813" fg:w="11"/><text x="38.9621%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (11 samples, 0.01%)</title><rect x="38.7121%" y="1477" width="0.0143%" height="15" fill="rgb(221,3,9)" fg:x="29813" fg:w="11"/><text x="38.9621%" y="1487.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (9 samples, 0.01%)</title><rect x="38.7147%" y="1461" width="0.0117%" height="15" fill="rgb(214,34,31)" fg:x="29815" fg:w="9"/><text x="38.9647%" y="1471.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (132 samples, 0.17%)</title><rect x="38.5901%" y="1525" width="0.1714%" height="15" fill="rgb(252,119,15)" fg:x="29719" fg:w="132"/><text x="38.8401%" y="1535.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (27 samples, 0.04%)</title><rect x="38.7264%" y="1509" width="0.0351%" height="15" fill="rgb(244,224,31)" fg:x="29824" fg:w="27"/><text x="38.9764%" y="1519.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="38.7641%" y="1525" width="0.0195%" height="15" fill="rgb(215,8,51)" fg:x="29853" fg:w="15"/><text x="39.0141%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (103 samples, 0.13%)</title><rect x="38.7875%" y="1509" width="0.1337%" height="15" fill="rgb(207,24,1)" fg:x="29871" fg:w="103"/><text x="39.0375%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (98 samples, 0.13%)</title><rect x="38.7940%" y="1493" width="0.1273%" height="15" fill="rgb(245,90,0)" fg:x="29876" fg:w="98"/><text x="39.0440%" y="1503.50"></text></g><g><title>alloc::raw_vec::finish_grow (94 samples, 0.12%)</title><rect x="38.7991%" y="1477" width="0.1221%" height="15" fill="rgb(246,43,48)" fg:x="29880" fg:w="94"/><text x="39.0491%" y="1487.50"></text></g><g><title>malloc (86 samples, 0.11%)</title><rect x="38.8095%" y="1461" width="0.1117%" height="15" fill="rgb(252,218,10)" fg:x="29888" fg:w="86"/><text x="39.0595%" y="1471.50"></text></g><g><title>[libc.so.6] (75 samples, 0.10%)</title><rect x="38.8238%" y="1445" width="0.0974%" height="15" fill="rgb(231,24,35)" fg:x="29899" fg:w="75"/><text x="39.0738%" y="1455.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="38.9095%" y="1429" width="0.0117%" height="15" fill="rgb(225,66,19)" fg:x="29965" fg:w="9"/><text x="39.1595%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (124 samples, 0.16%)</title><rect x="38.7836%" y="1525" width="0.1610%" height="15" fill="rgb(214,96,51)" fg:x="29868" fg:w="124"/><text x="39.0336%" y="1535.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="38.9238%" y="1509" width="0.0208%" height="15" fill="rgb(251,151,47)" fg:x="29976" fg:w="16"/><text x="39.1738%" y="1519.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (294 samples, 0.38%)</title><rect x="38.5641%" y="1557" width="0.3818%" height="15" fill="rgb(236,79,14)" fg:x="29699" fg:w="294"/><text x="38.8141%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (293 samples, 0.38%)</title><rect x="38.5654%" y="1541" width="0.3805%" height="15" fill="rgb(210,205,11)" fg:x="29700" fg:w="293"/><text x="38.8154%" y="1551.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (26 samples, 0.03%)</title><rect x="38.9628%" y="1493" width="0.0338%" height="15" fill="rgb(233,142,53)" fg:x="30006" fg:w="26"/><text x="39.2128%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="38.9628%" y="1477" width="0.0338%" height="15" fill="rgb(212,116,48)" fg:x="30006" fg:w="26"/><text x="39.2128%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.03%)</title><rect x="38.9628%" y="1461" width="0.0338%" height="15" fill="rgb(234,55,33)" fg:x="30006" fg:w="26"/><text x="39.2128%" y="1471.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (21 samples, 0.03%)</title><rect x="38.9693%" y="1445" width="0.0273%" height="15" fill="rgb(253,92,27)" fg:x="30011" fg:w="21"/><text x="39.2193%" y="1455.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (21 samples, 0.03%)</title><rect x="38.9693%" y="1429" width="0.0273%" height="15" fill="rgb(220,7,35)" fg:x="30011" fg:w="21"/><text x="39.2193%" y="1439.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="38.9757%" y="1413" width="0.0208%" height="15" fill="rgb(246,124,6)" fg:x="30016" fg:w="16"/><text x="39.2257%" y="1423.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (340 samples, 0.44%)</title><rect x="38.5641%" y="1573" width="0.4415%" height="15" fill="rgb(212,111,51)" fg:x="29699" fg:w="340"/><text x="38.8141%" y="1583.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (41 samples, 0.05%)</title><rect x="38.9524%" y="1557" width="0.0532%" height="15" fill="rgb(253,116,7)" fg:x="29998" fg:w="41"/><text x="39.2024%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41 samples, 0.05%)</title><rect x="38.9524%" y="1541" width="0.0532%" height="15" fill="rgb(213,145,18)" fg:x="29998" fg:w="41"/><text x="39.2024%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (41 samples, 0.05%)</title><rect x="38.9524%" y="1525" width="0.0532%" height="15" fill="rgb(219,149,7)" fg:x="29998" fg:w="41"/><text x="39.2024%" y="1535.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (41 samples, 0.05%)</title><rect x="38.9524%" y="1509" width="0.0532%" height="15" fill="rgb(225,156,20)" fg:x="29998" fg:w="41"/><text x="39.2024%" y="1519.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (58 samples, 0.08%)</title><rect x="39.0069%" y="1573" width="0.0753%" height="15" fill="rgb(211,98,19)" fg:x="30040" fg:w="58"/><text x="39.2569%" y="1583.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (58 samples, 0.08%)</title><rect x="39.0069%" y="1557" width="0.0753%" height="15" fill="rgb(231,192,31)" fg:x="30040" fg:w="58"/><text x="39.2569%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (47 samples, 0.06%)</title><rect x="39.0212%" y="1541" width="0.0610%" height="15" fill="rgb(249,95,19)" fg:x="30051" fg:w="47"/><text x="39.2712%" y="1551.50"></text></g><g><title>alloc::alloc::exchange_malloc (47 samples, 0.06%)</title><rect x="39.0212%" y="1525" width="0.0610%" height="15" fill="rgb(247,101,36)" fg:x="30051" fg:w="47"/><text x="39.2712%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.06%)</title><rect x="39.0212%" y="1509" width="0.0610%" height="15" fill="rgb(221,45,43)" fg:x="30051" fg:w="47"/><text x="39.2712%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.06%)</title><rect x="39.0212%" y="1493" width="0.0610%" height="15" fill="rgb(220,42,1)" fg:x="30051" fg:w="47"/><text x="39.2712%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.06%)</title><rect x="39.0212%" y="1477" width="0.0610%" height="15" fill="rgb(236,19,24)" fg:x="30051" fg:w="47"/><text x="39.2712%" y="1487.50"></text></g><g><title>malloc (43 samples, 0.06%)</title><rect x="39.0264%" y="1461" width="0.0558%" height="15" fill="rgb(225,192,6)" fg:x="30055" fg:w="43"/><text x="39.2764%" y="1471.50"></text></g><g><title>[libc.so.6] (30 samples, 0.04%)</title><rect x="39.0433%" y="1445" width="0.0390%" height="15" fill="rgb(242,30,19)" fg:x="30068" fg:w="30"/><text x="39.2933%" y="1455.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="39.1056%" y="1445" width="0.0169%" height="15" fill="rgb(240,36,6)" fg:x="30116" fg:w="13"/><text x="39.3556%" y="1455.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="39.0835%" y="1541" width="0.0480%" height="15" fill="rgb(246,40,28)" fg:x="30099" fg:w="37"/><text x="39.3335%" y="1551.50"></text></g><g><title>serde::de::SeqAccess::next_element (25 samples, 0.03%)</title><rect x="39.0991%" y="1525" width="0.0325%" height="15" fill="rgb(225,155,33)" fg:x="30111" fg:w="25"/><text x="39.3491%" y="1535.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (25 samples, 0.03%)</title><rect x="39.0991%" y="1509" width="0.0325%" height="15" fill="rgb(240,65,18)" fg:x="30111" fg:w="25"/><text x="39.3491%" y="1519.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.03%)</title><rect x="39.1056%" y="1493" width="0.0260%" height="15" fill="rgb(217,0,48)" fg:x="30116" fg:w="20"/><text x="39.3556%" y="1503.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (20 samples, 0.03%)</title><rect x="39.1056%" y="1477" width="0.0260%" height="15" fill="rgb(217,80,15)" fg:x="30116" fg:w="20"/><text x="39.3556%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (20 samples, 0.03%)</title><rect x="39.1056%" y="1461" width="0.0260%" height="15" fill="rgb(253,43,51)" fg:x="30116" fg:w="20"/><text x="39.3556%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (40 samples, 0.05%)</title><rect x="39.0822%" y="1573" width="0.0519%" height="15" fill="rgb(246,60,4)" fg:x="30098" fg:w="40"/><text x="39.3322%" y="1583.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (39 samples, 0.05%)</title><rect x="39.0835%" y="1557" width="0.0506%" height="15" fill="rgb(230,40,54)" fg:x="30099" fg:w="39"/><text x="39.3335%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (465 samples, 0.60%)</title><rect x="38.5356%" y="1589" width="0.6038%" height="15" fill="rgb(208,20,44)" fg:x="29677" fg:w="465"/><text x="38.7856%" y="1599.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (496 samples, 0.64%)</title><rect x="38.5343%" y="1605" width="0.6441%" height="15" fill="rgb(230,22,22)" fg:x="29676" fg:w="496"/><text x="38.7843%" y="1615.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (30 samples, 0.04%)</title><rect x="39.1394%" y="1589" width="0.0390%" height="15" fill="rgb(207,57,4)" fg:x="30142" fg:w="30"/><text x="39.3894%" y="1599.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.03%)</title><rect x="39.1783%" y="1605" width="0.0260%" height="15" fill="rgb(242,130,33)" fg:x="30172" fg:w="20"/><text x="39.4283%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.05%)</title><rect x="39.2095%" y="1541" width="0.0467%" height="15" fill="rgb(218,66,43)" fg:x="30196" fg:w="36"/><text x="39.4595%" y="1551.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.05%)</title><rect x="39.2095%" y="1525" width="0.0467%" height="15" fill="rgb(236,105,16)" fg:x="30196" fg:w="36"/><text x="39.4595%" y="1535.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 0.05%)</title><rect x="39.2095%" y="1509" width="0.0467%" height="15" fill="rgb(230,46,15)" fg:x="30196" fg:w="36"/><text x="39.4595%" y="1519.50"></text></g><g><title>realloc (35 samples, 0.05%)</title><rect x="39.2108%" y="1493" width="0.0454%" height="15" fill="rgb(251,172,40)" fg:x="30197" fg:w="35"/><text x="39.4608%" y="1503.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="39.2147%" y="1477" width="0.0416%" height="15" fill="rgb(225,217,32)" fg:x="30200" fg:w="32"/><text x="39.4647%" y="1487.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="39.2225%" y="1461" width="0.0338%" height="15" fill="rgb(243,10,29)" fg:x="30206" fg:w="26"/><text x="39.4725%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (71 samples, 0.09%)</title><rect x="39.2043%" y="1589" width="0.0922%" height="15" fill="rgb(207,102,10)" fg:x="30192" fg:w="71"/><text x="39.4543%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (69 samples, 0.09%)</title><rect x="39.2069%" y="1573" width="0.0896%" height="15" fill="rgb(241,125,5)" fg:x="30194" fg:w="69"/><text x="39.4569%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.09%)</title><rect x="39.2095%" y="1557" width="0.0870%" height="15" fill="rgb(230,125,29)" fg:x="30196" fg:w="67"/><text x="39.4595%" y="1567.50"></text></g><g><title>malloc (28 samples, 0.04%)</title><rect x="39.2601%" y="1541" width="0.0364%" height="15" fill="rgb(223,65,44)" fg:x="30235" fg:w="28"/><text x="39.5101%" y="1551.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="39.2744%" y="1525" width="0.0221%" height="15" fill="rgb(224,188,28)" fg:x="30246" fg:w="17"/><text x="39.5244%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (627 samples, 0.81%)</title><rect x="38.5109%" y="1637" width="0.8142%" height="15" fill="rgb(254,197,27)" fg:x="29658" fg:w="627"/><text x="38.7609%" y="1647.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (626 samples, 0.81%)</title><rect x="38.5122%" y="1621" width="0.8129%" height="15" fill="rgb(220,200,25)" fg:x="29659" fg:w="626"/><text x="38.7622%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (93 samples, 0.12%)</title><rect x="39.2043%" y="1605" width="0.1208%" height="15" fill="rgb(239,225,54)" fg:x="30192" fg:w="93"/><text x="39.4543%" y="1615.50"></text></g><g><title>core::ptr::write (21 samples, 0.03%)</title><rect x="39.2978%" y="1589" width="0.0273%" height="15" fill="rgb(211,59,40)" fg:x="30264" fg:w="21"/><text x="39.5478%" y="1599.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (21 samples, 0.03%)</title><rect x="39.3289%" y="1573" width="0.0273%" height="15" fill="rgb(213,176,46)" fg:x="30288" fg:w="21"/><text x="39.5789%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.03%)</title><rect x="39.3289%" y="1557" width="0.0273%" height="15" fill="rgb(226,99,4)" fg:x="30288" fg:w="21"/><text x="39.5789%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.03%)</title><rect x="39.3289%" y="1541" width="0.0273%" height="15" fill="rgb(239,203,43)" fg:x="30288" fg:w="21"/><text x="39.5789%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.02%)</title><rect x="39.3315%" y="1525" width="0.0247%" height="15" fill="rgb(246,1,45)" fg:x="30290" fg:w="19"/><text x="39.5815%" y="1535.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (19 samples, 0.02%)</title><rect x="39.3315%" y="1509" width="0.0247%" height="15" fill="rgb(231,42,52)" fg:x="30290" fg:w="19"/><text x="39.5815%" y="1519.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="39.3341%" y="1493" width="0.0221%" height="15" fill="rgb(240,13,50)" fg:x="30292" fg:w="17"/><text x="39.5841%" y="1503.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (653 samples, 0.85%)</title><rect x="38.5109%" y="1653" width="0.8479%" height="15" fill="rgb(225,81,14)" fg:x="29658" fg:w="653"/><text x="38.7609%" y="1663.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (25 samples, 0.03%)</title><rect x="39.3263%" y="1637" width="0.0325%" height="15" fill="rgb(216,182,23)" fg:x="30286" fg:w="25"/><text x="39.5763%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.03%)</title><rect x="39.3263%" y="1621" width="0.0325%" height="15" fill="rgb(233,137,19)" fg:x="30286" fg:w="25"/><text x="39.5763%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="39.3263%" y="1605" width="0.0325%" height="15" fill="rgb(242,61,46)" fg:x="30286" fg:w="25"/><text x="39.5763%" y="1615.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="39.3263%" y="1589" width="0.0325%" height="15" fill="rgb(221,168,51)" fg:x="30286" fg:w="25"/><text x="39.5763%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (671 samples, 0.87%)</title><rect x="38.4992%" y="1669" width="0.8713%" height="15" fill="rgb(238,48,15)" fg:x="29649" fg:w="671"/><text x="38.7492%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (9 samples, 0.01%)</title><rect x="39.3588%" y="1653" width="0.0117%" height="15" fill="rgb(216,13,16)" fg:x="30311" fg:w="9"/><text x="39.6088%" y="1663.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="39.3588%" y="1637" width="0.0117%" height="15" fill="rgb(223,185,34)" fg:x="30311" fg:w="9"/><text x="39.6088%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="39.3601%" y="1621" width="0.0104%" height="15" fill="rgb(228,94,42)" fg:x="30312" fg:w="8"/><text x="39.6101%" y="1631.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.01%)</title><rect x="39.3601%" y="1605" width="0.0104%" height="15" fill="rgb(218,166,43)" fg:x="30312" fg:w="8"/><text x="39.6101%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="39.3601%" y="1589" width="0.0104%" height="15" fill="rgb(232,30,50)" fg:x="30312" fg:w="8"/><text x="39.6101%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="39.3601%" y="1573" width="0.0104%" height="15" fill="rgb(245,206,45)" fg:x="30312" fg:w="8"/><text x="39.6101%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="39.3601%" y="1557" width="0.0104%" height="15" fill="rgb(220,56,22)" fg:x="30312" fg:w="8"/><text x="39.6101%" y="1567.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="39.3601%" y="1541" width="0.0104%" height="15" fill="rgb(239,129,38)" fg:x="30312" fg:w="8"/><text x="39.6101%" y="1551.50"></text></g><g><title>bcs::de::from_bytes_seed (698 samples, 0.91%)</title><rect x="38.4654%" y="1685" width="0.9064%" height="15" fill="rgb(207,68,41)" fg:x="29623" fg:w="698"/><text x="38.7154%" y="1695.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (2,183 samples, 2.83%)</title><rect x="36.5398%" y="1717" width="2.8346%" height="15" fill="rgb(221,21,7)" fg:x="28140" fg:w="2183"/><text x="36.7898%" y="1727.50">&lt;m..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (701 samples, 0.91%)</title><rect x="38.4641%" y="1701" width="0.9102%" height="15" fill="rgb(240,33,25)" fg:x="29622" fg:w="701"/><text x="38.7141%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (2,202 samples, 2.86%)</title><rect x="36.5307%" y="1733" width="2.8593%" height="15" fill="rgb(242,119,10)" fg:x="28133" fg:w="2202"/><text x="36.7807%" y="1743.50">mo..</text></g><g><title>move_vm_types::values::values_impl::GlobalValue::view (11 samples, 0.01%)</title><rect x="39.3757%" y="1717" width="0.0143%" height="15" fill="rgb(214,149,40)" fg:x="30324" fg:w="11"/><text x="39.6257%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (18 samples, 0.02%)</title><rect x="39.3900%" y="1733" width="0.0234%" height="15" fill="rgb(228,25,36)" fg:x="30335" fg:w="18"/><text x="39.6400%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::exists (12 samples, 0.02%)</title><rect x="39.4133%" y="1733" width="0.0156%" height="15" fill="rgb(222,59,15)" fg:x="30353" fg:w="12"/><text x="39.6633%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (2,240 samples, 2.91%)</title><rect x="36.5255%" y="1749" width="2.9086%" height="15" fill="rgb(218,170,0)" fg:x="28129" fg:w="2240"/><text x="36.7755%" y="1759.50">mo..</text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (88 samples, 0.11%)</title><rect x="39.4341%" y="1749" width="0.1143%" height="15" fill="rgb(232,173,23)" fg:x="30369" fg:w="88"/><text x="39.6841%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (17 samples, 0.02%)</title><rect x="39.5484%" y="1749" width="0.0221%" height="15" fill="rgb(218,116,1)" fg:x="30457" fg:w="17"/><text x="39.7984%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (54 samples, 0.07%)</title><rect x="39.5899%" y="1733" width="0.0701%" height="15" fill="rgb(207,34,4)" fg:x="30489" fg:w="54"/><text x="39.8399%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (54 samples, 0.07%)</title><rect x="39.6601%" y="1733" width="0.0701%" height="15" fill="rgb(229,54,52)" fg:x="30543" fg:w="54"/><text x="39.9101%" y="1743.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (20 samples, 0.03%)</title><rect x="39.7042%" y="1717" width="0.0260%" height="15" fill="rgb(211,86,23)" fg:x="30577" fg:w="20"/><text x="39.9542%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (8 samples, 0.01%)</title><rect x="39.7626%" y="1717" width="0.0104%" height="15" fill="rgb(254,153,34)" fg:x="30622" fg:w="8"/><text x="40.0126%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (28 samples, 0.04%)</title><rect x="39.7730%" y="1717" width="0.0364%" height="15" fill="rgb(219,220,14)" fg:x="30630" fg:w="28"/><text x="40.0230%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (21 samples, 0.03%)</title><rect x="39.8172%" y="1717" width="0.0273%" height="15" fill="rgb(247,8,26)" fg:x="30664" fg:w="21"/><text x="40.0672%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (244 samples, 0.32%)</title><rect x="39.5705%" y="1749" width="0.3168%" height="15" fill="rgb(213,129,42)" fg:x="30474" fg:w="244"/><text x="39.8205%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (121 samples, 0.16%)</title><rect x="39.7302%" y="1733" width="0.1571%" height="15" fill="rgb(225,95,41)" fg:x="30597" fg:w="121"/><text x="39.9802%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (33 samples, 0.04%)</title><rect x="39.8444%" y="1717" width="0.0429%" height="15" fill="rgb(215,134,24)" fg:x="30685" fg:w="33"/><text x="40.0944%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (21 samples, 0.03%)</title><rect x="39.8600%" y="1701" width="0.0273%" height="15" fill="rgb(235,23,54)" fg:x="30697" fg:w="21"/><text x="40.1100%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (32 samples, 0.04%)</title><rect x="40.0509%" y="1669" width="0.0416%" height="15" fill="rgb(229,96,31)" fg:x="30844" fg:w="32"/><text x="40.3009%" y="1679.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.04%)</title><rect x="40.0509%" y="1653" width="0.0416%" height="15" fill="rgb(206,111,12)" fg:x="30844" fg:w="32"/><text x="40.3009%" y="1663.50"></text></g><g><title>alloc::alloc::realloc (31 samples, 0.04%)</title><rect x="40.0522%" y="1637" width="0.0403%" height="15" fill="rgb(222,177,8)" fg:x="30845" fg:w="31"/><text x="40.3022%" y="1647.50"></text></g><g><title>realloc (31 samples, 0.04%)</title><rect x="40.0522%" y="1621" width="0.0403%" height="15" fill="rgb(251,36,52)" fg:x="30845" fg:w="31"/><text x="40.3022%" y="1631.50"></text></g><g><title>[libc.so.6] (27 samples, 0.04%)</title><rect x="40.0574%" y="1605" width="0.0351%" height="15" fill="rgb(216,182,29)" fg:x="30849" fg:w="27"/><text x="40.3074%" y="1615.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="40.0652%" y="1589" width="0.0273%" height="15" fill="rgb(241,145,50)" fg:x="30855" fg:w="21"/><text x="40.3152%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 0.07%)</title><rect x="40.0288%" y="1717" width="0.0688%" height="15" fill="rgb(231,71,35)" fg:x="30827" fg:w="53"/><text x="40.2788%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.07%)</title><rect x="40.0314%" y="1701" width="0.0662%" height="15" fill="rgb(218,22,17)" fg:x="30829" fg:w="51"/><text x="40.2814%" y="1711.50"></text></g><g><title>alloc::raw_vec::finish_grow (45 samples, 0.06%)</title><rect x="40.0392%" y="1685" width="0.0584%" height="15" fill="rgb(225,227,6)" fg:x="30835" fg:w="45"/><text x="40.2892%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (167 samples, 0.22%)</title><rect x="39.8873%" y="1749" width="0.2168%" height="15" fill="rgb(224,204,17)" fg:x="30718" fg:w="167"/><text x="40.1373%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (69 samples, 0.09%)</title><rect x="40.0145%" y="1733" width="0.0896%" height="15" fill="rgb(227,61,28)" fg:x="30816" fg:w="69"/><text x="40.2645%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Function::code (8 samples, 0.01%)</title><rect x="40.1041%" y="1749" width="0.0104%" height="15" fill="rgb(242,148,23)" fg:x="30885" fg:w="8"/><text x="40.3541%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (14 samples, 0.02%)</title><rect x="40.1340%" y="1717" width="0.0182%" height="15" fill="rgb(237,105,33)" fg:x="30908" fg:w="14"/><text x="40.3840%" y="1727.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (14 samples, 0.02%)</title><rect x="40.1340%" y="1701" width="0.0182%" height="15" fill="rgb(238,218,40)" fg:x="30908" fg:w="14"/><text x="40.3840%" y="1711.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (14 samples, 0.02%)</title><rect x="40.1340%" y="1685" width="0.0182%" height="15" fill="rgb(209,126,11)" fg:x="30908" fg:w="14"/><text x="40.3840%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (36 samples, 0.05%)</title><rect x="40.1145%" y="1749" width="0.0467%" height="15" fill="rgb(245,90,11)" fg:x="30893" fg:w="36"/><text x="40.3645%" y="1759.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (21 samples, 0.03%)</title><rect x="40.1340%" y="1733" width="0.0273%" height="15" fill="rgb(211,195,10)" fg:x="30908" fg:w="21"/><text x="40.3840%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_offset (13 samples, 0.02%)</title><rect x="40.1613%" y="1749" width="0.0169%" height="15" fill="rgb(231,45,45)" fg:x="30929" fg:w="13"/><text x="40.4113%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (11 samples, 0.01%)</title><rect x="40.1782%" y="1749" width="0.0143%" height="15" fill="rgb(246,100,43)" fg:x="30942" fg:w="11"/><text x="40.4282%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_type (19 samples, 0.02%)</title><rect x="40.1924%" y="1749" width="0.0247%" height="15" fill="rgb(241,193,8)" fg:x="30953" fg:w="19"/><text x="40.4424%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (16 samples, 0.02%)</title><rect x="40.2742%" y="1589" width="0.0208%" height="15" fill="rgb(208,76,19)" fg:x="31016" fg:w="16"/><text x="40.5242%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.02%)</title><rect x="40.2742%" y="1573" width="0.0208%" height="15" fill="rgb(223,69,40)" fg:x="31016" fg:w="16"/><text x="40.5242%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.02%)</title><rect x="40.2742%" y="1557" width="0.0208%" height="15" fill="rgb(207,120,39)" fg:x="31016" fg:w="16"/><text x="40.5242%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.02%)</title><rect x="40.2742%" y="1541" width="0.0208%" height="15" fill="rgb(212,209,28)" fg:x="31016" fg:w="16"/><text x="40.5242%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (12 samples, 0.02%)</title><rect x="40.2794%" y="1525" width="0.0156%" height="15" fill="rgb(246,82,29)" fg:x="31020" fg:w="12"/><text x="40.5294%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type::{{closure}} (10 samples, 0.01%)</title><rect x="40.2820%" y="1509" width="0.0130%" height="15" fill="rgb(239,6,40)" fg:x="31022" fg:w="10"/><text x="40.5320%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (10 samples, 0.01%)</title><rect x="40.2820%" y="1493" width="0.0130%" height="15" fill="rgb(228,181,35)" fg:x="31022" fg:w="10"/><text x="40.5320%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (10 samples, 0.01%)</title><rect x="40.2820%" y="1477" width="0.0130%" height="15" fill="rgb(238,151,2)" fg:x="31022" fg:w="10"/><text x="40.5320%" y="1487.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (10 samples, 0.01%)</title><rect x="40.2820%" y="1461" width="0.0130%" height="15" fill="rgb(236,94,18)" fg:x="31022" fg:w="10"/><text x="40.5320%" y="1471.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.01%)</title><rect x="40.2846%" y="1445" width="0.0104%" height="15" fill="rgb(208,38,14)" fg:x="31024" fg:w="8"/><text x="40.5346%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="40.2729%" y="1605" width="0.0247%" height="15" fill="rgb(234,215,27)" fg:x="31015" fg:w="19"/><text x="40.5229%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (61 samples, 0.08%)</title><rect x="40.2366%" y="1733" width="0.0792%" height="15" fill="rgb(254,211,53)" fg:x="30987" fg:w="61"/><text x="40.4866%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (61 samples, 0.08%)</title><rect x="40.2366%" y="1717" width="0.0792%" height="15" fill="rgb(216,175,11)" fg:x="30987" fg:w="61"/><text x="40.4866%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (60 samples, 0.08%)</title><rect x="40.2379%" y="1701" width="0.0779%" height="15" fill="rgb(246,179,26)" fg:x="30988" fg:w="60"/><text x="40.4879%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (53 samples, 0.07%)</title><rect x="40.2470%" y="1685" width="0.0688%" height="15" fill="rgb(249,19,52)" fg:x="30995" fg:w="53"/><text x="40.4970%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 0.07%)</title><rect x="40.2470%" y="1669" width="0.0688%" height="15" fill="rgb(230,42,52)" fg:x="30995" fg:w="53"/><text x="40.4970%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (53 samples, 0.07%)</title><rect x="40.2470%" y="1653" width="0.0688%" height="15" fill="rgb(221,171,0)" fg:x="30995" fg:w="53"/><text x="40.4970%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="40.2483%" y="1637" width="0.0675%" height="15" fill="rgb(222,177,40)" fg:x="30996" fg:w="52"/><text x="40.4983%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (46 samples, 0.06%)</title><rect x="40.2561%" y="1621" width="0.0597%" height="15" fill="rgb(247,34,16)" fg:x="31002" fg:w="46"/><text x="40.5061%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.02%)</title><rect x="40.2976%" y="1605" width="0.0182%" height="15" fill="rgb(213,217,37)" fg:x="31034" fg:w="14"/><text x="40.5476%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="40.2976%" y="1589" width="0.0182%" height="15" fill="rgb(231,189,24)" fg:x="31034" fg:w="14"/><text x="40.5476%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="40.2976%" y="1573" width="0.0182%" height="15" fill="rgb(214,22,9)" fg:x="31034" fg:w="14"/><text x="40.5476%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="40.2976%" y="1557" width="0.0182%" height="15" fill="rgb(212,70,22)" fg:x="31034" fg:w="14"/><text x="40.5476%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="40.2976%" y="1541" width="0.0182%" height="15" fill="rgb(249,64,51)" fg:x="31034" fg:w="14"/><text x="40.5476%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="40.2976%" y="1525" width="0.0182%" height="15" fill="rgb(249,148,20)" fg:x="31034" fg:w="14"/><text x="40.5476%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="40.2976%" y="1509" width="0.0182%" height="15" fill="rgb(246,46,48)" fg:x="31034" fg:w="14"/><text x="40.5476%" y="1519.50"></text></g><g><title>malloc (13 samples, 0.02%)</title><rect x="40.2989%" y="1493" width="0.0169%" height="15" fill="rgb(217,34,48)" fg:x="31035" fg:w="13"/><text x="40.5489%" y="1503.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="40.3340%" y="1717" width="0.0117%" height="15" fill="rgb(222,45,26)" fg:x="31062" fg:w="9"/><text x="40.5840%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (28 samples, 0.04%)</title><rect x="40.3184%" y="1733" width="0.0364%" height="15" fill="rgb(230,201,36)" fg:x="31050" fg:w="28"/><text x="40.5684%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (111 samples, 0.14%)</title><rect x="40.2171%" y="1749" width="0.1441%" height="15" fill="rgb(217,30,43)" fg:x="30972" fg:w="111"/><text x="40.4671%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (36 samples, 0.05%)</title><rect x="40.3612%" y="1749" width="0.0467%" height="15" fill="rgb(230,197,40)" fg:x="31083" fg:w="36"/><text x="40.6112%" y="1759.50"></text></g><g><title>move_vm_runtime::tracing::trace (75 samples, 0.10%)</title><rect x="40.4080%" y="1749" width="0.0974%" height="15" fill="rgb(239,181,18)" fg:x="31119" fg:w="75"/><text x="40.6580%" y="1759.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.03%)</title><rect x="40.4794%" y="1733" width="0.0260%" height="15" fill="rgb(222,60,39)" fg:x="31174" fg:w="20"/><text x="40.7294%" y="1743.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (20 samples, 0.03%)</title><rect x="40.4794%" y="1717" width="0.0260%" height="15" fill="rgb(210,60,22)" fg:x="31174" fg:w="20"/><text x="40.7294%" y="1727.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (20 samples, 0.03%)</title><rect x="40.4794%" y="1701" width="0.0260%" height="15" fill="rgb(239,213,48)" fg:x="31174" fg:w="20"/><text x="40.7294%" y="1711.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (20 samples, 0.03%)</title><rect x="40.4794%" y="1685" width="0.0260%" height="15" fill="rgb(253,214,23)" fg:x="31174" fg:w="20"/><text x="40.7294%" y="1695.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (20 samples, 0.03%)</title><rect x="40.4794%" y="1669" width="0.0260%" height="15" fill="rgb(211,98,45)" fg:x="31174" fg:w="20"/><text x="40.7294%" y="1679.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (8 samples, 0.01%)</title><rect x="40.4950%" y="1653" width="0.0104%" height="15" fill="rgb(239,130,44)" fg:x="31186" fg:w="8"/><text x="40.7450%" y="1663.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::cast_u128 (8 samples, 0.01%)</title><rect x="40.5054%" y="1749" width="0.0104%" height="15" fill="rgb(222,181,35)" fg:x="31194" fg:w="8"/><text x="40.7554%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (8 samples, 0.01%)</title><rect x="40.5158%" y="1749" width="0.0104%" height="15" fill="rgb(219,219,49)" fg:x="31202" fg:w="8"/><text x="40.7658%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="40.5495%" y="1733" width="0.0130%" height="15" fill="rgb(227,161,51)" fg:x="31228" fg:w="10"/><text x="40.7995%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (57 samples, 0.07%)</title><rect x="40.5262%" y="1749" width="0.0740%" height="15" fill="rgb(239,112,27)" fg:x="31210" fg:w="57"/><text x="40.7762%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (24 samples, 0.03%)</title><rect x="40.5690%" y="1733" width="0.0312%" height="15" fill="rgb(248,122,18)" fg:x="31243" fg:w="24"/><text x="40.8190%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="40.6833%" y="1733" width="0.0104%" height="15" fill="rgb(245,130,23)" fg:x="31331" fg:w="8"/><text x="40.9333%" y="1743.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (12 samples, 0.02%)</title><rect x="40.7196%" y="1717" width="0.0156%" height="15" fill="rgb(211,225,28)" fg:x="31359" fg:w="12"/><text x="40.9696%" y="1727.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.02%)</title><rect x="40.7196%" y="1701" width="0.0156%" height="15" fill="rgb(242,105,44)" fg:x="31359" fg:w="12"/><text x="40.9696%" y="1711.50"></text></g><g><title>core::cell::BorrowRefMut::new (12 samples, 0.02%)</title><rect x="40.7196%" y="1685" width="0.0156%" height="15" fill="rgb(216,183,46)" fg:x="31359" fg:w="12"/><text x="40.9696%" y="1695.50"></text></g><g><title>core::mem::replace (27 samples, 0.04%)</title><rect x="40.7352%" y="1717" width="0.0351%" height="15" fill="rgb(227,112,9)" fg:x="31371" fg:w="27"/><text x="40.9852%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (134 samples, 0.17%)</title><rect x="40.6002%" y="1749" width="0.1740%" height="15" fill="rgb(244,21,0)" fg:x="31267" fg:w="134"/><text x="40.8502%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (62 samples, 0.08%)</title><rect x="40.6937%" y="1733" width="0.0805%" height="15" fill="rgb(236,185,14)" fg:x="31339" fg:w="62"/><text x="40.9437%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (13 samples, 0.02%)</title><rect x="40.7742%" y="1749" width="0.0169%" height="15" fill="rgb(236,170,30)" fg:x="31401" fg:w="13"/><text x="41.0242%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (8 samples, 0.01%)</title><rect x="40.8118%" y="1717" width="0.0104%" height="15" fill="rgb(209,198,51)" fg:x="31430" fg:w="8"/><text x="41.0618%" y="1727.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="40.8378%" y="1685" width="0.0221%" height="15" fill="rgb(205,171,26)" fg:x="31450" fg:w="17"/><text x="41.0878%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="40.8378%" y="1669" width="0.0221%" height="15" fill="rgb(246,41,49)" fg:x="31450" fg:w="17"/><text x="41.0878%" y="1679.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="40.8378%" y="1653" width="0.0221%" height="15" fill="rgb(240,229,12)" fg:x="31450" fg:w="17"/><text x="41.0878%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="40.8378%" y="1637" width="0.0221%" height="15" fill="rgb(212,8,54)" fg:x="31450" fg:w="17"/><text x="41.0878%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="40.8378%" y="1621" width="0.0221%" height="15" fill="rgb(230,114,13)" fg:x="31450" fg:w="17"/><text x="41.0878%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="40.8378%" y="1605" width="0.0221%" height="15" fill="rgb(229,130,28)" fg:x="31450" fg:w="17"/><text x="41.0878%" y="1615.50"></text></g><g><title>malloc (16 samples, 0.02%)</title><rect x="40.8391%" y="1589" width="0.0208%" height="15" fill="rgb(206,139,15)" fg:x="31451" fg:w="16"/><text x="41.0891%" y="1599.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="40.8417%" y="1573" width="0.0182%" height="15" fill="rgb(241,188,35)" fg:x="31453" fg:w="14"/><text x="41.0917%" y="1583.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::read_ref (30 samples, 0.04%)</title><rect x="40.8222%" y="1717" width="0.0390%" height="15" fill="rgb(208,224,26)" fg:x="31438" fg:w="30"/><text x="41.0722%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (28 samples, 0.04%)</title><rect x="40.8248%" y="1701" width="0.0364%" height="15" fill="rgb(251,131,28)" fg:x="31440" fg:w="28"/><text x="41.0748%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::container (10 samples, 0.01%)</title><rect x="40.8949%" y="1701" width="0.0130%" height="15" fill="rgb(208,153,1)" fg:x="31494" fg:w="10"/><text x="41.1449%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (109 samples, 0.14%)</title><rect x="40.7910%" y="1749" width="0.1415%" height="15" fill="rgb(234,33,36)" fg:x="31414" fg:w="109"/><text x="41.0410%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (100 samples, 0.13%)</title><rect x="40.8027%" y="1733" width="0.1298%" height="15" fill="rgb(246,42,29)" fg:x="31423" fg:w="100"/><text x="41.0527%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (55 samples, 0.07%)</title><rect x="40.8612%" y="1717" width="0.0714%" height="15" fill="rgb(251,114,16)" fg:x="31468" fg:w="55"/><text x="41.1112%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (19 samples, 0.02%)</title><rect x="40.9079%" y="1701" width="0.0247%" height="15" fill="rgb(233,13,38)" fg:x="31504" fg:w="19"/><text x="41.1579%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="40.9417%" y="1733" width="0.0117%" height="15" fill="rgb(247,120,19)" fg:x="31530" fg:w="9"/><text x="41.1917%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (48 samples, 0.06%)</title><rect x="40.9391%" y="1749" width="0.0623%" height="15" fill="rgb(205,11,16)" fg:x="31528" fg:w="48"/><text x="41.1891%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (37 samples, 0.05%)</title><rect x="40.9534%" y="1733" width="0.0480%" height="15" fill="rgb(228,185,19)" fg:x="31539" fg:w="37"/><text x="41.2034%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (9 samples, 0.01%)</title><rect x="40.9897%" y="1717" width="0.0117%" height="15" fill="rgb(239,88,52)" fg:x="31567" fg:w="9"/><text x="41.2397%" y="1727.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="41.0053%" y="1733" width="0.0117%" height="15" fill="rgb(219,23,1)" fg:x="31579" fg:w="9"/><text x="41.2553%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (25 samples, 0.03%)</title><rect x="41.0183%" y="1733" width="0.0325%" height="15" fill="rgb(253,177,16)" fg:x="31589" fg:w="25"/><text x="41.2683%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="41.0715%" y="1701" width="0.0156%" height="15" fill="rgb(225,150,40)" fg:x="31630" fg:w="12"/><text x="41.3215%" y="1711.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (51 samples, 0.07%)</title><rect x="41.1079%" y="1637" width="0.0662%" height="15" fill="rgb(208,108,30)" fg:x="31658" fg:w="51"/><text x="41.3579%" y="1647.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (48 samples, 0.06%)</title><rect x="41.1118%" y="1621" width="0.0623%" height="15" fill="rgb(214,122,4)" fg:x="31661" fg:w="48"/><text x="41.3618%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (48 samples, 0.06%)</title><rect x="41.1118%" y="1605" width="0.0623%" height="15" fill="rgb(229,74,37)" fg:x="31661" fg:w="48"/><text x="41.3618%" y="1615.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (48 samples, 0.06%)</title><rect x="41.1118%" y="1589" width="0.0623%" height="15" fill="rgb(233,61,41)" fg:x="31661" fg:w="48"/><text x="41.3618%" y="1599.50"></text></g><g><title>serde::de::SeqAccess::next_element (41 samples, 0.05%)</title><rect x="41.1209%" y="1573" width="0.0532%" height="15" fill="rgb(238,191,5)" fg:x="31668" fg:w="41"/><text x="41.3709%" y="1583.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (41 samples, 0.05%)</title><rect x="41.1209%" y="1557" width="0.0532%" height="15" fill="rgb(233,78,24)" fg:x="31668" fg:w="41"/><text x="41.3709%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (40 samples, 0.05%)</title><rect x="41.1222%" y="1541" width="0.0519%" height="15" fill="rgb(211,142,8)" fg:x="31669" fg:w="40"/><text x="41.3722%" y="1551.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (40 samples, 0.05%)</title><rect x="41.1222%" y="1525" width="0.0519%" height="15" fill="rgb(253,38,53)" fg:x="31669" fg:w="40"/><text x="41.3722%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (40 samples, 0.05%)</title><rect x="41.1222%" y="1509" width="0.0519%" height="15" fill="rgb(234,63,51)" fg:x="31669" fg:w="40"/><text x="41.3722%" y="1519.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (32 samples, 0.04%)</title><rect x="41.1326%" y="1493" width="0.0416%" height="15" fill="rgb(205,23,31)" fg:x="31677" fg:w="32"/><text x="41.3826%" y="1503.50"></text></g><g><title>bcs::de::Deserializer::next (18 samples, 0.02%)</title><rect x="41.1507%" y="1477" width="0.0234%" height="15" fill="rgb(210,184,50)" fg:x="31691" fg:w="18"/><text x="41.4007%" y="1487.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.02%)</title><rect x="41.1520%" y="1461" width="0.0221%" height="15" fill="rgb(222,112,26)" fg:x="31692" fg:w="17"/><text x="41.4020%" y="1471.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.02%)</title><rect x="41.1520%" y="1445" width="0.0221%" height="15" fill="rgb(250,98,18)" fg:x="31692" fg:w="17"/><text x="41.4020%" y="1455.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="41.1520%" y="1429" width="0.0221%" height="15" fill="rgb(250,34,12)" fg:x="31692" fg:w="17"/><text x="41.4020%" y="1439.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="41.1520%" y="1413" width="0.0221%" height="15" fill="rgb(236,141,30)" fg:x="31692" fg:w="17"/><text x="41.4020%" y="1423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (17 samples, 0.02%)</title><rect x="41.1520%" y="1397" width="0.0221%" height="15" fill="rgb(246,134,38)" fg:x="31692" fg:w="17"/><text x="41.4020%" y="1407.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (17 samples, 0.02%)</title><rect x="41.1520%" y="1381" width="0.0221%" height="15" fill="rgb(240,114,4)" fg:x="31692" fg:w="17"/><text x="41.4020%" y="1391.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (62 samples, 0.08%)</title><rect x="41.0949%" y="1685" width="0.0805%" height="15" fill="rgb(243,113,39)" fg:x="31648" fg:w="62"/><text x="41.3449%" y="1695.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (54 samples, 0.07%)</title><rect x="41.1053%" y="1669" width="0.0701%" height="15" fill="rgb(239,215,4)" fg:x="31656" fg:w="54"/><text x="41.3553%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (54 samples, 0.07%)</title><rect x="41.1053%" y="1653" width="0.0701%" height="15" fill="rgb(236,229,45)" fg:x="31656" fg:w="54"/><text x="41.3553%" y="1663.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u128&gt;::deserialize (9 samples, 0.01%)</title><rect x="41.1767%" y="1685" width="0.0117%" height="15" fill="rgb(242,2,6)" fg:x="31711" fg:w="9"/><text x="41.4267%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u128 (9 samples, 0.01%)</title><rect x="41.1767%" y="1669" width="0.0117%" height="15" fill="rgb(239,108,21)" fg:x="31711" fg:w="9"/><text x="41.4267%" y="1679.50"></text></g><g><title>bcs::de::Deserializer::parse_u128 (8 samples, 0.01%)</title><rect x="41.1780%" y="1653" width="0.0104%" height="15" fill="rgb(215,168,34)" fg:x="31712" fg:w="8"/><text x="41.4280%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (85 samples, 0.11%)</title><rect x="41.0871%" y="1701" width="0.1104%" height="15" fill="rgb(238,31,17)" fg:x="31642" fg:w="85"/><text x="41.3371%" y="1711.50"></text></g><g><title>bcs::de::from_bytes_seed (120 samples, 0.16%)</title><rect x="41.0507%" y="1717" width="0.1558%" height="15" fill="rgb(220,133,11)" fg:x="31614" fg:w="120"/><text x="41.3007%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (160 samples, 0.21%)</title><rect x="41.0027%" y="1749" width="0.2078%" height="15" fill="rgb(212,158,23)" fg:x="31577" fg:w="160"/><text x="41.2527%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (123 samples, 0.16%)</title><rect x="41.0507%" y="1733" width="0.1597%" height="15" fill="rgb(223,172,7)" fg:x="31614" fg:w="123"/><text x="41.3007%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::equals (26 samples, 0.03%)</title><rect x="41.2105%" y="1749" width="0.0338%" height="15" fill="rgb(244,3,52)" fg:x="31737" fg:w="26"/><text x="41.4605%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::equals (22 samples, 0.03%)</title><rect x="41.2157%" y="1733" width="0.0286%" height="15" fill="rgb(207,69,27)" fg:x="31741" fg:w="22"/><text x="41.4657%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (7,314 samples, 9.50%)</title><rect x="31.7548%" y="1781" width="9.4972%" height="15" fill="rgb(213,136,45)" fg:x="24455" fg:w="7314"/><text x="32.0048%" y="1791.50">move_vm_runtim..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (7,288 samples, 9.46%)</title><rect x="31.7886%" y="1765" width="9.4635%" height="15" fill="rgb(218,79,17)" fg:x="24481" fg:w="7288"/><text x="32.0386%" y="1775.50">move_vm_runtim..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="41.3065%" y="1733" width="0.0195%" height="15" fill="rgb(216,106,36)" fg:x="31811" fg:w="15"/><text x="41.5565%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (10 samples, 0.01%)</title><rect x="41.3260%" y="1733" width="0.0130%" height="15" fill="rgb(251,27,45)" fg:x="31826" fg:w="10"/><text x="41.5760%" y="1743.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="41.3260%" y="1717" width="0.0130%" height="15" fill="rgb(232,21,34)" fg:x="31826" fg:w="10"/><text x="41.5760%" y="1727.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (10 samples, 0.01%)</title><rect x="41.3260%" y="1701" width="0.0130%" height="15" fill="rgb(249,191,16)" fg:x="31826" fg:w="10"/><text x="41.5760%" y="1711.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (19 samples, 0.02%)</title><rect x="41.3390%" y="1733" width="0.0247%" height="15" fill="rgb(224,88,20)" fg:x="31836" fg:w="19"/><text x="41.5890%" y="1743.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (19 samples, 0.02%)</title><rect x="41.3390%" y="1717" width="0.0247%" height="15" fill="rgb(237,93,27)" fg:x="31836" fg:w="19"/><text x="41.5890%" y="1727.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (54 samples, 0.07%)</title><rect x="41.3819%" y="1637" width="0.0701%" height="15" fill="rgb(226,198,48)" fg:x="31869" fg:w="54"/><text x="41.6319%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (54 samples, 0.07%)</title><rect x="41.3819%" y="1621" width="0.0701%" height="15" fill="rgb(207,162,53)" fg:x="31869" fg:w="54"/><text x="41.6319%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (54 samples, 0.07%)</title><rect x="41.3819%" y="1605" width="0.0701%" height="15" fill="rgb(207,169,9)" fg:x="31869" fg:w="54"/><text x="41.6319%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.04%)</title><rect x="41.4143%" y="1589" width="0.0377%" height="15" fill="rgb(224,166,46)" fg:x="31894" fg:w="29"/><text x="41.6643%" y="1599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.03%)</title><rect x="41.4208%" y="1573" width="0.0312%" height="15" fill="rgb(233,26,6)" fg:x="31899" fg:w="24"/><text x="41.6708%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (13 samples, 0.02%)</title><rect x="41.4520%" y="1637" width="0.0169%" height="15" fill="rgb(218,106,45)" fg:x="31923" fg:w="13"/><text x="41.7020%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="41.5000%" y="1477" width="0.0104%" height="15" fill="rgb(240,217,4)" fg:x="31960" fg:w="8"/><text x="41.7500%" y="1487.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (38 samples, 0.05%)</title><rect x="41.4702%" y="1557" width="0.0493%" height="15" fill="rgb(246,171,10)" fg:x="31937" fg:w="38"/><text x="41.7202%" y="1567.50"></text></g><g><title>core::hash::Hasher::write_usize (38 samples, 0.05%)</title><rect x="41.4702%" y="1541" width="0.0493%" height="15" fill="rgb(223,197,30)" fg:x="31937" fg:w="38"/><text x="41.7202%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.05%)</title><rect x="41.4702%" y="1525" width="0.0493%" height="15" fill="rgb(207,92,16)" fg:x="31937" fg:w="38"/><text x="41.7202%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (38 samples, 0.05%)</title><rect x="41.4702%" y="1509" width="0.0493%" height="15" fill="rgb(211,6,44)" fg:x="31937" fg:w="38"/><text x="41.7202%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (35 samples, 0.05%)</title><rect x="41.4741%" y="1493" width="0.0454%" height="15" fill="rgb(219,139,2)" fg:x="31940" fg:w="35"/><text x="41.7241%" y="1503.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.03%)</title><rect x="41.5481%" y="1477" width="0.0299%" height="15" fill="rgb(224,103,21)" fg:x="31997" fg:w="23"/><text x="41.7981%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (35 samples, 0.05%)</title><rect x="41.5429%" y="1493" width="0.0454%" height="15" fill="rgb(254,110,48)" fg:x="31993" fg:w="35"/><text x="41.7929%" y="1503.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.01%)</title><rect x="41.5779%" y="1477" width="0.0104%" height="15" fill="rgb(212,88,19)" fg:x="32020" fg:w="8"/><text x="41.8279%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (96 samples, 0.12%)</title><rect x="41.4702%" y="1605" width="0.1247%" height="15" fill="rgb(248,103,6)" fg:x="31937" fg:w="96"/><text x="41.7202%" y="1615.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (96 samples, 0.12%)</title><rect x="41.4702%" y="1589" width="0.1247%" height="15" fill="rgb(214,53,46)" fg:x="31937" fg:w="96"/><text x="41.7202%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (96 samples, 0.12%)</title><rect x="41.4702%" y="1573" width="0.1247%" height="15" fill="rgb(236,190,24)" fg:x="31937" fg:w="96"/><text x="41.7202%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (58 samples, 0.08%)</title><rect x="41.5195%" y="1557" width="0.0753%" height="15" fill="rgb(254,58,28)" fg:x="31975" fg:w="58"/><text x="41.7695%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (58 samples, 0.08%)</title><rect x="41.5195%" y="1541" width="0.0753%" height="15" fill="rgb(243,63,27)" fg:x="31975" fg:w="58"/><text x="41.7695%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (58 samples, 0.08%)</title><rect x="41.5195%" y="1525" width="0.0753%" height="15" fill="rgb(206,81,20)" fg:x="31975" fg:w="58"/><text x="41.7695%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 0.07%)</title><rect x="41.5234%" y="1509" width="0.0714%" height="15" fill="rgb(252,69,51)" fg:x="31978" fg:w="55"/><text x="41.7734%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="41.6532%" y="1477" width="0.0130%" height="15" fill="rgb(222,213,4)" fg:x="32078" fg:w="10"/><text x="41.9032%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (42 samples, 0.05%)</title><rect x="41.6195%" y="1493" width="0.0545%" height="15" fill="rgb(226,198,12)" fg:x="32052" fg:w="42"/><text x="41.8695%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 samples, 0.09%)</title><rect x="41.5974%" y="1509" width="0.0935%" height="15" fill="rgb(248,115,11)" fg:x="32035" fg:w="72"/><text x="41.8474%" y="1519.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.02%)</title><rect x="41.6740%" y="1493" width="0.0169%" height="15" fill="rgb(221,148,54)" fg:x="32094" fg:w="13"/><text x="41.9240%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (259 samples, 0.34%)</title><rect x="41.3728%" y="1669" width="0.3363%" height="15" fill="rgb(214,209,51)" fg:x="31862" fg:w="259"/><text x="41.6228%" y="1679.50"></text></g><g><title>core::hash::BuildHasher::hash_one (258 samples, 0.34%)</title><rect x="41.3741%" y="1653" width="0.3350%" height="15" fill="rgb(249,116,53)" fg:x="31863" fg:w="258"/><text x="41.6241%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (185 samples, 0.24%)</title><rect x="41.4689%" y="1637" width="0.2402%" height="15" fill="rgb(248,170,1)" fg:x="31936" fg:w="185"/><text x="41.7189%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (185 samples, 0.24%)</title><rect x="41.4689%" y="1621" width="0.2402%" height="15" fill="rgb(244,105,10)" fg:x="31936" fg:w="185"/><text x="41.7189%" y="1631.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (88 samples, 0.11%)</title><rect x="41.5948%" y="1605" width="0.1143%" height="15" fill="rgb(229,100,5)" fg:x="32033" fg:w="88"/><text x="41.8448%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (88 samples, 0.11%)</title><rect x="41.5948%" y="1589" width="0.1143%" height="15" fill="rgb(233,221,39)" fg:x="32033" fg:w="88"/><text x="41.8448%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (88 samples, 0.11%)</title><rect x="41.5948%" y="1573" width="0.1143%" height="15" fill="rgb(233,88,21)" fg:x="32033" fg:w="88"/><text x="41.8448%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (88 samples, 0.11%)</title><rect x="41.5948%" y="1557" width="0.1143%" height="15" fill="rgb(206,13,0)" fg:x="32033" fg:w="88"/><text x="41.8448%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (88 samples, 0.11%)</title><rect x="41.5948%" y="1541" width="0.1143%" height="15" fill="rgb(242,15,35)" fg:x="32033" fg:w="88"/><text x="41.8448%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (88 samples, 0.11%)</title><rect x="41.5948%" y="1525" width="0.1143%" height="15" fill="rgb(247,142,41)" fg:x="32033" fg:w="88"/><text x="41.8448%" y="1535.50"></text></g><g><title>core::hash::Hasher::write_u8 (14 samples, 0.02%)</title><rect x="41.6909%" y="1509" width="0.0182%" height="15" fill="rgb(245,51,29)" fg:x="32107" fg:w="14"/><text x="41.9409%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="41.6922%" y="1493" width="0.0169%" height="15" fill="rgb(228,209,43)" fg:x="32108" fg:w="13"/><text x="41.9422%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="41.7156%" y="1621" width="0.0169%" height="15" fill="rgb(233,185,9)" fg:x="32126" fg:w="13"/><text x="41.9656%" y="1631.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.02%)</title><rect x="41.7156%" y="1605" width="0.0169%" height="15" fill="rgb(226,93,0)" fg:x="32126" fg:w="13"/><text x="41.9656%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (50 samples, 0.06%)</title><rect x="41.7428%" y="1573" width="0.0649%" height="15" fill="rgb(245,194,43)" fg:x="32147" fg:w="50"/><text x="41.9928%" y="1583.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (50 samples, 0.06%)</title><rect x="41.7428%" y="1557" width="0.0649%" height="15" fill="rgb(211,145,34)" fg:x="32147" fg:w="50"/><text x="41.9928%" y="1567.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (50 samples, 0.06%)</title><rect x="41.7428%" y="1541" width="0.0649%" height="15" fill="rgb(231,228,28)" fg:x="32147" fg:w="50"/><text x="41.9928%" y="1551.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (97 samples, 0.13%)</title><rect x="41.7415%" y="1605" width="0.1260%" height="15" fill="rgb(236,149,4)" fg:x="32146" fg:w="97"/><text x="41.9915%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (97 samples, 0.13%)</title><rect x="41.7415%" y="1589" width="0.1260%" height="15" fill="rgb(234,114,38)" fg:x="32146" fg:w="97"/><text x="41.9915%" y="1599.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (46 samples, 0.06%)</title><rect x="41.8078%" y="1573" width="0.0597%" height="15" fill="rgb(246,132,51)" fg:x="32197" fg:w="46"/><text x="42.0578%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (46 samples, 0.06%)</title><rect x="41.8078%" y="1557" width="0.0597%" height="15" fill="rgb(251,137,22)" fg:x="32197" fg:w="46"/><text x="42.0578%" y="1567.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (46 samples, 0.06%)</title><rect x="41.8078%" y="1541" width="0.0597%" height="15" fill="rgb(243,59,52)" fg:x="32197" fg:w="46"/><text x="42.0578%" y="1551.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (46 samples, 0.06%)</title><rect x="41.8078%" y="1525" width="0.0597%" height="15" fill="rgb(239,56,28)" fg:x="32197" fg:w="46"/><text x="42.0578%" y="1535.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (46 samples, 0.06%)</title><rect x="41.8078%" y="1509" width="0.0597%" height="15" fill="rgb(218,168,27)" fg:x="32197" fg:w="46"/><text x="42.0578%" y="1519.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (46 samples, 0.06%)</title><rect x="41.8078%" y="1493" width="0.0597%" height="15" fill="rgb(232,165,11)" fg:x="32197" fg:w="46"/><text x="42.0578%" y="1503.50"></text></g><g><title>[libc.so.6] (45 samples, 0.06%)</title><rect x="41.8091%" y="1477" width="0.0584%" height="15" fill="rgb(253,55,41)" fg:x="32198" fg:w="45"/><text x="42.0591%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (105 samples, 0.14%)</title><rect x="41.7325%" y="1621" width="0.1363%" height="15" fill="rgb(233,206,24)" fg:x="32139" fg:w="105"/><text x="41.9825%" y="1631.50"></text></g><g><title>hashbrown::raw::h2 (11 samples, 0.01%)</title><rect x="41.8688%" y="1621" width="0.0143%" height="15" fill="rgb(220,199,8)" fg:x="32244" fg:w="11"/><text x="42.1188%" y="1631.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (23 samples, 0.03%)</title><rect x="41.8831%" y="1621" width="0.0299%" height="15" fill="rgb(254,65,26)" fg:x="32255" fg:w="23"/><text x="42.1331%" y="1631.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (23 samples, 0.03%)</title><rect x="41.8831%" y="1605" width="0.0299%" height="15" fill="rgb(253,102,23)" fg:x="32255" fg:w="23"/><text x="42.1331%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.03%)</title><rect x="41.8831%" y="1589" width="0.0299%" height="15" fill="rgb(231,103,35)" fg:x="32255" fg:w="23"/><text x="42.1331%" y="1599.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (513 samples, 0.67%)</title><rect x="41.2520%" y="1781" width="0.6661%" height="15" fill="rgb(238,26,10)" fg:x="31769" fg:w="513"/><text x="41.5020%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (497 samples, 0.65%)</title><rect x="41.2728%" y="1765" width="0.6454%" height="15" fill="rgb(234,191,34)" fg:x="31785" fg:w="497"/><text x="41.5228%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (472 samples, 0.61%)</title><rect x="41.3053%" y="1749" width="0.6129%" height="15" fill="rgb(206,210,9)" fg:x="31810" fg:w="472"/><text x="41.5553%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (427 samples, 0.55%)</title><rect x="41.3637%" y="1733" width="0.5545%" height="15" fill="rgb(219,155,3)" fg:x="31855" fg:w="427"/><text x="41.6137%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (425 samples, 0.55%)</title><rect x="41.3663%" y="1717" width="0.5519%" height="15" fill="rgb(221,62,52)" fg:x="31857" fg:w="425"/><text x="41.6163%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (425 samples, 0.55%)</title><rect x="41.3663%" y="1701" width="0.5519%" height="15" fill="rgb(215,197,36)" fg:x="31857" fg:w="425"/><text x="41.6163%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (425 samples, 0.55%)</title><rect x="41.3663%" y="1685" width="0.5519%" height="15" fill="rgb(226,222,6)" fg:x="31857" fg:w="425"/><text x="41.6163%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (161 samples, 0.21%)</title><rect x="41.7091%" y="1669" width="0.2091%" height="15" fill="rgb(215,58,28)" fg:x="32121" fg:w="161"/><text x="41.9591%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (161 samples, 0.21%)</title><rect x="41.7091%" y="1653" width="0.2091%" height="15" fill="rgb(212,148,2)" fg:x="32121" fg:w="161"/><text x="41.9591%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (161 samples, 0.21%)</title><rect x="41.7091%" y="1637" width="0.2091%" height="15" fill="rgb(208,21,42)" fg:x="32121" fg:w="161"/><text x="41.9591%" y="1647.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="41.9779%" y="1749" width="0.0117%" height="15" fill="rgb(209,107,26)" fg:x="32328" fg:w="9"/><text x="42.2279%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[move_vm_types::values::values_impl::Value: 1]&gt;&gt; (8 samples, 0.01%)</title><rect x="41.9999%" y="1749" width="0.0104%" height="15" fill="rgb(254,60,47)" fg:x="32345" fg:w="8"/><text x="42.2499%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;move_vm_types::values::values_impl::Value&gt;&gt; (14 samples, 0.02%)</title><rect x="42.0441%" y="1717" width="0.0182%" height="15" fill="rgb(207,226,45)" fg:x="32379" fg:w="14"/><text x="42.2941%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::Value&gt;&gt; (8 samples, 0.01%)</title><rect x="42.0519%" y="1701" width="0.0104%" height="15" fill="rgb(223,124,22)" fg:x="32385" fg:w="8"/><text x="42.3019%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="42.0519%" y="1685" width="0.0104%" height="15" fill="rgb(240,162,13)" fg:x="32385" fg:w="8"/><text x="42.3019%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::SignerRef&gt; (20 samples, 0.03%)</title><rect x="42.0675%" y="1717" width="0.0260%" height="15" fill="rgb(244,199,31)" fg:x="32397" fg:w="20"/><text x="42.3175%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (20 samples, 0.03%)</title><rect x="42.0675%" y="1701" width="0.0260%" height="15" fill="rgb(207,92,16)" fg:x="32397" fg:w="20"/><text x="42.3175%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (16 samples, 0.02%)</title><rect x="42.0727%" y="1685" width="0.0208%" height="15" fill="rgb(215,31,19)" fg:x="32401" fg:w="16"/><text x="42.3227%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::SignerRef::borrow_signer (18 samples, 0.02%)</title><rect x="42.0973%" y="1717" width="0.0234%" height="15" fill="rgb(245,118,14)" fg:x="32420" fg:w="18"/><text x="42.3473%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (13 samples, 0.02%)</title><rect x="42.1038%" y="1701" width="0.0169%" height="15" fill="rgb(248,12,46)" fg:x="32425" fg:w="13"/><text x="42.3538%" y="1711.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (91 samples, 0.12%)</title><rect x="42.0103%" y="1749" width="0.1182%" height="15" fill="rgb(209,119,0)" fg:x="32353" fg:w="91"/><text x="42.2603%" y="1759.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (84 samples, 0.11%)</title><rect x="42.0194%" y="1733" width="0.1091%" height="15" fill="rgb(254,51,44)" fg:x="32360" fg:w="84"/><text x="42.2694%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (31 samples, 0.04%)</title><rect x="42.1480%" y="1749" width="0.0403%" height="15" fill="rgb(253,182,35)" fg:x="32459" fg:w="31"/><text x="42.3980%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (27 samples, 0.04%)</title><rect x="42.1532%" y="1733" width="0.0351%" height="15" fill="rgb(205,198,39)" fg:x="32463" fg:w="27"/><text x="42.4032%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (23 samples, 0.03%)</title><rect x="42.1584%" y="1717" width="0.0299%" height="15" fill="rgb(251,175,48)" fg:x="32467" fg:w="23"/><text x="42.4084%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (22 samples, 0.03%)</title><rect x="42.1597%" y="1701" width="0.0286%" height="15" fill="rgb(239,38,17)" fg:x="32468" fg:w="22"/><text x="42.4097%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (9 samples, 0.01%)</title><rect x="42.1765%" y="1685" width="0.0117%" height="15" fill="rgb(212,101,8)" fg:x="32481" fg:w="9"/><text x="42.4265%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (210 samples, 0.27%)</title><rect x="41.9233%" y="1781" width="0.2727%" height="15" fill="rgb(228,35,17)" fg:x="32286" fg:w="210"/><text x="42.1733%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (206 samples, 0.27%)</title><rect x="41.9285%" y="1765" width="0.2675%" height="15" fill="rgb(214,95,8)" fg:x="32290" fg:w="206"/><text x="42.1785%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (16 samples, 0.02%)</title><rect x="42.1960%" y="1781" width="0.0208%" height="15" fill="rgb(210,176,35)" fg:x="32496" fg:w="16"/><text x="42.4460%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (13 samples, 0.02%)</title><rect x="42.2674%" y="1765" width="0.0169%" height="15" fill="rgb(226,4,3)" fg:x="32551" fg:w="13"/><text x="42.5174%" y="1775.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.01%)</title><rect x="42.3181%" y="1653" width="0.0104%" height="15" fill="rgb(232,133,14)" fg:x="32590" fg:w="8"/><text x="42.5681%" y="1663.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="42.3051%" y="1685" width="0.0286%" height="15" fill="rgb(250,191,8)" fg:x="32580" fg:w="22"/><text x="42.5551%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="42.3181%" y="1669" width="0.0156%" height="15" fill="rgb(213,12,45)" fg:x="32590" fg:w="12"/><text x="42.5681%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="42.3350%" y="1685" width="0.0234%" height="15" fill="rgb(233,78,26)" fg:x="32603" fg:w="18"/><text x="42.5850%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="42.3350%" y="1669" width="0.0234%" height="15" fill="rgb(245,222,11)" fg:x="32603" fg:w="18"/><text x="42.5850%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="42.3350%" y="1653" width="0.0234%" height="15" fill="rgb(216,174,12)" fg:x="32603" fg:w="18"/><text x="42.5850%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.02%)</title><rect x="42.3389%" y="1637" width="0.0195%" height="15" fill="rgb(213,15,9)" fg:x="32606" fg:w="15"/><text x="42.5889%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.02%)</title><rect x="42.3389%" y="1621" width="0.0195%" height="15" fill="rgb(238,103,32)" fg:x="32606" fg:w="15"/><text x="42.5889%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="42.3389%" y="1605" width="0.0195%" height="15" fill="rgb(245,85,15)" fg:x="32606" fg:w="15"/><text x="42.5889%" y="1615.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="42.3441%" y="1589" width="0.0143%" height="15" fill="rgb(254,204,5)" fg:x="32610" fg:w="11"/><text x="42.5941%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (63 samples, 0.08%)</title><rect x="42.3025%" y="1749" width="0.0818%" height="15" fill="rgb(231,178,15)" fg:x="32578" fg:w="63"/><text x="42.5525%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.08%)</title><rect x="42.3025%" y="1733" width="0.0818%" height="15" fill="rgb(248,151,3)" fg:x="32578" fg:w="63"/><text x="42.5525%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.08%)</title><rect x="42.3025%" y="1717" width="0.0818%" height="15" fill="rgb(250,139,13)" fg:x="32578" fg:w="63"/><text x="42.5525%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.08%)</title><rect x="42.3025%" y="1701" width="0.0818%" height="15" fill="rgb(243,107,53)" fg:x="32578" fg:w="63"/><text x="42.5525%" y="1711.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (20 samples, 0.03%)</title><rect x="42.3583%" y="1685" width="0.0260%" height="15" fill="rgb(232,81,15)" fg:x="32621" fg:w="20"/><text x="42.6083%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="42.4142%" y="1621" width="0.0247%" height="15" fill="rgb(225,187,48)" fg:x="32664" fg:w="19"/><text x="42.6642%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (17 samples, 0.02%)</title><rect x="42.4168%" y="1605" width="0.0221%" height="15" fill="rgb(205,116,12)" fg:x="32666" fg:w="17"/><text x="42.6668%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="42.4168%" y="1589" width="0.0221%" height="15" fill="rgb(220,222,31)" fg:x="32666" fg:w="17"/><text x="42.6668%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="42.4168%" y="1573" width="0.0221%" height="15" fill="rgb(233,187,49)" fg:x="32666" fg:w="17"/><text x="42.6668%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="42.4168%" y="1557" width="0.0221%" height="15" fill="rgb(211,168,53)" fg:x="32666" fg:w="17"/><text x="42.6668%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.02%)</title><rect x="42.4220%" y="1541" width="0.0169%" height="15" fill="rgb(206,160,16)" fg:x="32670" fg:w="13"/><text x="42.6720%" y="1551.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (10 samples, 0.01%)</title><rect x="42.4259%" y="1525" width="0.0130%" height="15" fill="rgb(254,164,13)" fg:x="32673" fg:w="10"/><text x="42.6759%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (10 samples, 0.01%)</title><rect x="42.4259%" y="1509" width="0.0130%" height="15" fill="rgb(229,45,30)" fg:x="32673" fg:w="10"/><text x="42.6759%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (10 samples, 0.01%)</title><rect x="42.4259%" y="1493" width="0.0130%" height="15" fill="rgb(237,32,10)" fg:x="32673" fg:w="10"/><text x="42.6759%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (8 samples, 0.01%)</title><rect x="42.4285%" y="1477" width="0.0104%" height="15" fill="rgb(251,20,47)" fg:x="32675" fg:w="8"/><text x="42.6785%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (50 samples, 0.06%)</title><rect x="42.3843%" y="1749" width="0.0649%" height="15" fill="rgb(251,116,12)" fg:x="32641" fg:w="50"/><text x="42.6343%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (50 samples, 0.06%)</title><rect x="42.3843%" y="1733" width="0.0649%" height="15" fill="rgb(214,227,27)" fg:x="32641" fg:w="50"/><text x="42.6343%" y="1743.50"></text></g><g><title>core::iter::adapters::try_process (50 samples, 0.06%)</title><rect x="42.3843%" y="1717" width="0.0649%" height="15" fill="rgb(248,10,53)" fg:x="32641" fg:w="50"/><text x="42.6343%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (43 samples, 0.06%)</title><rect x="42.3934%" y="1701" width="0.0558%" height="15" fill="rgb(221,176,25)" fg:x="32648" fg:w="43"/><text x="42.6434%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.06%)</title><rect x="42.3934%" y="1685" width="0.0558%" height="15" fill="rgb(205,70,46)" fg:x="32648" fg:w="43"/><text x="42.6434%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.06%)</title><rect x="42.3934%" y="1669" width="0.0558%" height="15" fill="rgb(217,45,38)" fg:x="32648" fg:w="43"/><text x="42.6434%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 0.05%)</title><rect x="42.3973%" y="1653" width="0.0519%" height="15" fill="rgb(243,6,54)" fg:x="32651" fg:w="40"/><text x="42.6473%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38 samples, 0.05%)</title><rect x="42.3999%" y="1637" width="0.0493%" height="15" fill="rgb(242,76,23)" fg:x="32653" fg:w="38"/><text x="42.6499%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="42.4388%" y="1621" width="0.0104%" height="15" fill="rgb(239,166,0)" fg:x="32683" fg:w="8"/><text x="42.6888%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="42.4388%" y="1605" width="0.0104%" height="15" fill="rgb(238,174,32)" fg:x="32683" fg:w="8"/><text x="42.6888%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="42.4388%" y="1589" width="0.0104%" height="15" fill="rgb(238,124,44)" fg:x="32683" fg:w="8"/><text x="42.6888%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="42.4388%" y="1573" width="0.0104%" height="15" fill="rgb(206,185,9)" fg:x="32683" fg:w="8"/><text x="42.6888%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="42.4388%" y="1557" width="0.0104%" height="15" fill="rgb(215,157,17)" fg:x="32683" fg:w="8"/><text x="42.6888%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="42.4388%" y="1541" width="0.0104%" height="15" fill="rgb(251,17,29)" fg:x="32683" fg:w="8"/><text x="42.6888%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="42.4388%" y="1525" width="0.0104%" height="15" fill="rgb(227,113,27)" fg:x="32683" fg:w="8"/><text x="42.6888%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="42.4635%" y="1621" width="0.0104%" height="15" fill="rgb(217,226,24)" fg:x="32702" fg:w="8"/><text x="42.7135%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="42.4635%" y="1605" width="0.0104%" height="15" fill="rgb(251,99,38)" fg:x="32702" fg:w="8"/><text x="42.7135%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="42.4635%" y="1589" width="0.0104%" height="15" fill="rgb(231,147,19)" fg:x="32702" fg:w="8"/><text x="42.7135%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="42.4804%" y="1589" width="0.0130%" height="15" fill="rgb(230,86,8)" fg:x="32715" fg:w="10"/><text x="42.7304%" y="1599.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (10 samples, 0.01%)</title><rect x="42.4804%" y="1573" width="0.0130%" height="15" fill="rgb(237,159,39)" fg:x="32715" fg:w="10"/><text x="42.7304%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.01%)</title><rect x="42.4804%" y="1557" width="0.0130%" height="15" fill="rgb(247,179,47)" fg:x="32715" fg:w="10"/><text x="42.7304%" y="1567.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.04%)</title><rect x="42.4622%" y="1653" width="0.0390%" height="15" fill="rgb(253,152,26)" fg:x="32701" fg:w="30"/><text x="42.7122%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.04%)</title><rect x="42.4635%" y="1637" width="0.0377%" height="15" fill="rgb(222,211,15)" fg:x="32702" fg:w="29"/><text x="42.7135%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="42.4791%" y="1621" width="0.0221%" height="15" fill="rgb(236,193,6)" fg:x="32714" fg:w="17"/><text x="42.7291%" y="1631.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="42.4791%" y="1605" width="0.0221%" height="15" fill="rgb(226,206,10)" fg:x="32714" fg:w="17"/><text x="42.7291%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (49 samples, 0.06%)</title><rect x="42.4531%" y="1749" width="0.0636%" height="15" fill="rgb(213,125,22)" fg:x="32694" fg:w="49"/><text x="42.7031%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (48 samples, 0.06%)</title><rect x="42.4544%" y="1733" width="0.0623%" height="15" fill="rgb(221,66,28)" fg:x="32695" fg:w="48"/><text x="42.7044%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (42 samples, 0.05%)</title><rect x="42.4622%" y="1717" width="0.0545%" height="15" fill="rgb(222,84,53)" fg:x="32701" fg:w="42"/><text x="42.7122%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (42 samples, 0.05%)</title><rect x="42.4622%" y="1701" width="0.0545%" height="15" fill="rgb(243,50,15)" fg:x="32701" fg:w="42"/><text x="42.7122%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (42 samples, 0.05%)</title><rect x="42.4622%" y="1685" width="0.0545%" height="15" fill="rgb(208,184,23)" fg:x="32701" fg:w="42"/><text x="42.7122%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.05%)</title><rect x="42.4622%" y="1669" width="0.0545%" height="15" fill="rgb(221,83,2)" fg:x="32701" fg:w="42"/><text x="42.7122%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="42.5012%" y="1653" width="0.0156%" height="15" fill="rgb(236,53,24)" fg:x="32731" fg:w="12"/><text x="42.7512%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="42.5012%" y="1637" width="0.0156%" height="15" fill="rgb(244,171,29)" fg:x="32731" fg:w="12"/><text x="42.7512%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="42.5012%" y="1621" width="0.0156%" height="15" fill="rgb(205,19,11)" fg:x="32731" fg:w="12"/><text x="42.7512%" y="1631.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (182 samples, 0.24%)</title><rect x="42.2843%" y="1765" width="0.2363%" height="15" fill="rgb(207,108,29)" fg:x="32564" fg:w="182"/><text x="42.5343%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="42.5427%" y="1733" width="0.0143%" height="15" fill="rgb(236,215,43)" fg:x="32763" fg:w="11"/><text x="42.7927%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (8 samples, 0.01%)</title><rect x="42.5570%" y="1733" width="0.0104%" height="15" fill="rgb(213,58,35)" fg:x="32774" fg:w="8"/><text x="42.8070%" y="1743.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="42.5570%" y="1717" width="0.0104%" height="15" fill="rgb(220,211,46)" fg:x="32774" fg:w="8"/><text x="42.8070%" y="1727.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (8 samples, 0.01%)</title><rect x="42.5570%" y="1701" width="0.0104%" height="15" fill="rgb(212,134,16)" fg:x="32774" fg:w="8"/><text x="42.8070%" y="1711.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (9 samples, 0.01%)</title><rect x="42.5674%" y="1733" width="0.0117%" height="15" fill="rgb(232,90,44)" fg:x="32782" fg:w="9"/><text x="42.8174%" y="1743.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (9 samples, 0.01%)</title><rect x="42.5674%" y="1717" width="0.0117%" height="15" fill="rgb(212,18,36)" fg:x="32782" fg:w="9"/><text x="42.8174%" y="1727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.01%)</title><rect x="42.6232%" y="1573" width="0.0143%" height="15" fill="rgb(206,112,24)" fg:x="32825" fg:w="11"/><text x="42.8732%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.04%)</title><rect x="42.5960%" y="1637" width="0.0429%" height="15" fill="rgb(238,223,40)" fg:x="32804" fg:w="33"/><text x="42.8460%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.04%)</title><rect x="42.5960%" y="1621" width="0.0429%" height="15" fill="rgb(226,169,20)" fg:x="32804" fg:w="33"/><text x="42.8460%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.04%)</title><rect x="42.5960%" y="1605" width="0.0429%" height="15" fill="rgb(241,64,52)" fg:x="32804" fg:w="33"/><text x="42.8460%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="42.6141%" y="1589" width="0.0247%" height="15" fill="rgb(228,120,25)" fg:x="32818" fg:w="19"/><text x="42.8641%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (21 samples, 0.03%)</title><rect x="42.6388%" y="1637" width="0.0273%" height="15" fill="rgb(234,108,19)" fg:x="32837" fg:w="21"/><text x="42.8888%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="42.6661%" y="1525" width="0.0143%" height="15" fill="rgb(236,133,29)" fg:x="32858" fg:w="11"/><text x="42.9161%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="42.6661%" y="1509" width="0.0143%" height="15" fill="rgb(246,174,53)" fg:x="32858" fg:w="11"/><text x="42.9161%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="42.6674%" y="1493" width="0.0130%" height="15" fill="rgb(210,105,35)" fg:x="32859" fg:w="10"/><text x="42.9174%" y="1503.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (13 samples, 0.02%)</title><rect x="42.6661%" y="1557" width="0.0169%" height="15" fill="rgb(225,27,26)" fg:x="32858" fg:w="13"/><text x="42.9161%" y="1567.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.02%)</title><rect x="42.6661%" y="1541" width="0.0169%" height="15" fill="rgb(233,2,39)" fg:x="32858" fg:w="13"/><text x="42.9161%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.02%)</title><rect x="42.7011%" y="1477" width="0.0169%" height="15" fill="rgb(219,164,26)" fg:x="32885" fg:w="13"/><text x="42.9511%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.02%)</title><rect x="42.6959%" y="1493" width="0.0234%" height="15" fill="rgb(236,211,5)" fg:x="32881" fg:w="18"/><text x="42.9459%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (44 samples, 0.06%)</title><rect x="42.6661%" y="1605" width="0.0571%" height="15" fill="rgb(244,227,23)" fg:x="32858" fg:w="44"/><text x="42.9161%" y="1615.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (44 samples, 0.06%)</title><rect x="42.6661%" y="1589" width="0.0571%" height="15" fill="rgb(230,184,8)" fg:x="32858" fg:w="44"/><text x="42.9161%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (44 samples, 0.06%)</title><rect x="42.6661%" y="1573" width="0.0571%" height="15" fill="rgb(217,125,48)" fg:x="32858" fg:w="44"/><text x="42.9161%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (31 samples, 0.04%)</title><rect x="42.6830%" y="1557" width="0.0403%" height="15" fill="rgb(223,192,47)" fg:x="32871" fg:w="31"/><text x="42.9330%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.04%)</title><rect x="42.6830%" y="1541" width="0.0403%" height="15" fill="rgb(226,119,10)" fg:x="32871" fg:w="31"/><text x="42.9330%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.04%)</title><rect x="42.6830%" y="1525" width="0.0403%" height="15" fill="rgb(221,49,29)" fg:x="32871" fg:w="31"/><text x="42.9330%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.04%)</title><rect x="42.6869%" y="1509" width="0.0364%" height="15" fill="rgb(217,205,19)" fg:x="32874" fg:w="28"/><text x="42.9369%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="42.7375%" y="1493" width="0.0117%" height="15" fill="rgb(242,104,7)" fg:x="32913" fg:w="9"/><text x="42.9875%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.05%)</title><rect x="42.7271%" y="1509" width="0.0532%" height="15" fill="rgb(209,154,48)" fg:x="32905" fg:w="41"/><text x="42.9771%" y="1519.50"></text></g><g><title>core::hash::sip::u8to64_le (24 samples, 0.03%)</title><rect x="42.7492%" y="1493" width="0.0312%" height="15" fill="rgb(219,213,46)" fg:x="32922" fg:w="24"/><text x="42.9992%" y="1503.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.03%)</title><rect x="42.7518%" y="1477" width="0.0286%" height="15" fill="rgb(229,105,38)" fg:x="32924" fg:w="22"/><text x="43.0018%" y="1487.50"></text></g><g><title>hashbrown::map::make_hash (165 samples, 0.21%)</title><rect x="42.5843%" y="1669" width="0.2143%" height="15" fill="rgb(205,151,5)" fg:x="32795" fg:w="165"/><text x="42.8343%" y="1679.50"></text></g><g><title>core::hash::BuildHasher::hash_one (161 samples, 0.21%)</title><rect x="42.5895%" y="1653" width="0.2091%" height="15" fill="rgb(248,115,40)" fg:x="32799" fg:w="161"/><text x="42.8395%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (102 samples, 0.13%)</title><rect x="42.6661%" y="1637" width="0.1324%" height="15" fill="rgb(206,179,2)" fg:x="32858" fg:w="102"/><text x="42.9161%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (102 samples, 0.13%)</title><rect x="42.6661%" y="1621" width="0.1324%" height="15" fill="rgb(230,103,24)" fg:x="32858" fg:w="102"/><text x="42.9161%" y="1631.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (58 samples, 0.08%)</title><rect x="42.7232%" y="1605" width="0.0753%" height="15" fill="rgb(218,152,4)" fg:x="32902" fg:w="58"/><text x="42.9732%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (58 samples, 0.08%)</title><rect x="42.7232%" y="1589" width="0.0753%" height="15" fill="rgb(236,161,54)" fg:x="32902" fg:w="58"/><text x="42.9732%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (58 samples, 0.08%)</title><rect x="42.7232%" y="1573" width="0.0753%" height="15" fill="rgb(226,65,17)" fg:x="32902" fg:w="58"/><text x="42.9732%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (58 samples, 0.08%)</title><rect x="42.7232%" y="1557" width="0.0753%" height="15" fill="rgb(221,134,44)" fg:x="32902" fg:w="58"/><text x="42.9732%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (58 samples, 0.08%)</title><rect x="42.7232%" y="1541" width="0.0753%" height="15" fill="rgb(251,129,4)" fg:x="32902" fg:w="58"/><text x="42.9732%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (58 samples, 0.08%)</title><rect x="42.7232%" y="1525" width="0.0753%" height="15" fill="rgb(244,32,34)" fg:x="32902" fg:w="58"/><text x="42.9732%" y="1535.50"></text></g><g><title>core::hash::Hasher::write_u8 (14 samples, 0.02%)</title><rect x="42.7803%" y="1509" width="0.0182%" height="15" fill="rgb(251,224,37)" fg:x="32946" fg:w="14"/><text x="43.0303%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="42.7803%" y="1493" width="0.0182%" height="15" fill="rgb(248,117,31)" fg:x="32946" fg:w="14"/><text x="43.0303%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="42.8050%" y="1621" width="0.0104%" height="15" fill="rgb(222,208,37)" fg:x="32965" fg:w="8"/><text x="43.0550%" y="1631.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.01%)</title><rect x="42.8050%" y="1605" width="0.0104%" height="15" fill="rgb(234,211,25)" fg:x="32965" fg:w="8"/><text x="43.0550%" y="1615.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (31 samples, 0.04%)</title><rect x="42.8258%" y="1573" width="0.0403%" height="15" fill="rgb(211,72,6)" fg:x="32981" fg:w="31"/><text x="43.0758%" y="1583.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (31 samples, 0.04%)</title><rect x="42.8258%" y="1557" width="0.0403%" height="15" fill="rgb(249,198,38)" fg:x="32981" fg:w="31"/><text x="43.0758%" y="1567.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (31 samples, 0.04%)</title><rect x="42.8258%" y="1541" width="0.0403%" height="15" fill="rgb(221,86,51)" fg:x="32981" fg:w="31"/><text x="43.0758%" y="1551.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (66 samples, 0.09%)</title><rect x="42.8232%" y="1605" width="0.0857%" height="15" fill="rgb(226,178,43)" fg:x="32979" fg:w="66"/><text x="43.0732%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (66 samples, 0.09%)</title><rect x="42.8232%" y="1589" width="0.0857%" height="15" fill="rgb(215,145,7)" fg:x="32979" fg:w="66"/><text x="43.0732%" y="1599.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (33 samples, 0.04%)</title><rect x="42.8660%" y="1573" width="0.0429%" height="15" fill="rgb(250,202,36)" fg:x="33012" fg:w="33"/><text x="43.1160%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (33 samples, 0.04%)</title><rect x="42.8660%" y="1557" width="0.0429%" height="15" fill="rgb(215,86,13)" fg:x="33012" fg:w="33"/><text x="43.1160%" y="1567.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (33 samples, 0.04%)</title><rect x="42.8660%" y="1541" width="0.0429%" height="15" fill="rgb(221,134,12)" fg:x="33012" fg:w="33"/><text x="43.1160%" y="1551.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (33 samples, 0.04%)</title><rect x="42.8660%" y="1525" width="0.0429%" height="15" fill="rgb(213,82,10)" fg:x="33012" fg:w="33"/><text x="43.1160%" y="1535.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (33 samples, 0.04%)</title><rect x="42.8660%" y="1509" width="0.0429%" height="15" fill="rgb(214,142,0)" fg:x="33012" fg:w="33"/><text x="43.1160%" y="1519.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (33 samples, 0.04%)</title><rect x="42.8660%" y="1493" width="0.0429%" height="15" fill="rgb(205,145,9)" fg:x="33012" fg:w="33"/><text x="43.1160%" y="1503.50"></text></g><g><title>[libc.so.6] (33 samples, 0.04%)</title><rect x="42.8660%" y="1477" width="0.0429%" height="15" fill="rgb(244,214,8)" fg:x="33012" fg:w="33"/><text x="43.1160%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (73 samples, 0.09%)</title><rect x="42.8154%" y="1621" width="0.0948%" height="15" fill="rgb(224,72,51)" fg:x="32973" fg:w="73"/><text x="43.0654%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (302 samples, 0.39%)</title><rect x="42.5310%" y="1765" width="0.3921%" height="15" fill="rgb(233,137,37)" fg:x="32754" fg:w="302"/><text x="42.7810%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (294 samples, 0.38%)</title><rect x="42.5414%" y="1749" width="0.3818%" height="15" fill="rgb(208,71,28)" fg:x="32762" fg:w="294"/><text x="42.7914%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (265 samples, 0.34%)</title><rect x="42.5791%" y="1733" width="0.3441%" height="15" fill="rgb(226,31,7)" fg:x="32791" fg:w="265"/><text x="42.8291%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (263 samples, 0.34%)</title><rect x="42.5817%" y="1717" width="0.3415%" height="15" fill="rgb(229,62,18)" fg:x="32793" fg:w="263"/><text x="42.8317%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (263 samples, 0.34%)</title><rect x="42.5817%" y="1701" width="0.3415%" height="15" fill="rgb(226,74,28)" fg:x="32793" fg:w="263"/><text x="42.8317%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (263 samples, 0.34%)</title><rect x="42.5817%" y="1685" width="0.3415%" height="15" fill="rgb(214,170,18)" fg:x="32793" fg:w="263"/><text x="42.8317%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (96 samples, 0.12%)</title><rect x="42.7985%" y="1669" width="0.1247%" height="15" fill="rgb(227,229,35)" fg:x="32960" fg:w="96"/><text x="43.0485%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (96 samples, 0.12%)</title><rect x="42.7985%" y="1653" width="0.1247%" height="15" fill="rgb(225,181,39)" fg:x="32960" fg:w="96"/><text x="43.0485%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (96 samples, 0.12%)</title><rect x="42.7985%" y="1637" width="0.1247%" height="15" fill="rgb(253,124,44)" fg:x="32960" fg:w="96"/><text x="43.0485%" y="1647.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (21 samples, 0.03%)</title><rect x="42.9271%" y="1765" width="0.0273%" height="15" fill="rgb(220,75,18)" fg:x="33059" fg:w="21"/><text x="43.1771%" y="1775.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (17 samples, 0.02%)</title><rect x="42.9323%" y="1749" width="0.0221%" height="15" fill="rgb(239,175,43)" fg:x="33063" fg:w="17"/><text x="43.1823%" y="1759.50"></text></g><g><title>core::cmp::PartialEq::ne (17 samples, 0.02%)</title><rect x="42.9323%" y="1733" width="0.0221%" height="15" fill="rgb(228,112,50)" fg:x="33063" fg:w="17"/><text x="43.1823%" y="1743.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="42.9323%" y="1717" width="0.0221%" height="15" fill="rgb(232,105,36)" fg:x="33063" fg:w="17"/><text x="43.1823%" y="1727.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (69 samples, 0.09%)</title><rect x="42.9673%" y="1749" width="0.0896%" height="15" fill="rgb(227,137,47)" fg:x="33090" fg:w="69"/><text x="43.2173%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (67 samples, 0.09%)</title><rect x="42.9699%" y="1733" width="0.0870%" height="15" fill="rgb(217,51,9)" fg:x="33092" fg:w="67"/><text x="43.2199%" y="1743.50"></text></g><g><title>alloc::alloc::exchange_malloc (52 samples, 0.07%)</title><rect x="42.9894%" y="1717" width="0.0675%" height="15" fill="rgb(245,117,0)" fg:x="33107" fg:w="52"/><text x="43.2394%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.07%)</title><rect x="42.9907%" y="1701" width="0.0662%" height="15" fill="rgb(252,52,30)" fg:x="33108" fg:w="51"/><text x="43.2407%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.07%)</title><rect x="42.9907%" y="1685" width="0.0662%" height="15" fill="rgb(227,85,33)" fg:x="33108" fg:w="51"/><text x="43.2407%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.07%)</title><rect x="42.9907%" y="1669" width="0.0662%" height="15" fill="rgb(220,157,20)" fg:x="33108" fg:w="51"/><text x="43.2407%" y="1679.50"></text></g><g><title>malloc (46 samples, 0.06%)</title><rect x="42.9972%" y="1653" width="0.0597%" height="15" fill="rgb(254,14,34)" fg:x="33113" fg:w="46"/><text x="43.2472%" y="1663.50"></text></g><g><title>[libc.so.6] (30 samples, 0.04%)</title><rect x="43.0180%" y="1637" width="0.0390%" height="15" fill="rgb(216,103,41)" fg:x="33129" fg:w="30"/><text x="43.2680%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="43.0634%" y="1621" width="0.0338%" height="15" fill="rgb(245,221,9)" fg:x="33164" fg:w="26"/><text x="43.3134%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="43.0634%" y="1605" width="0.0338%" height="15" fill="rgb(254,136,47)" fg:x="33164" fg:w="26"/><text x="43.3134%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="43.0634%" y="1589" width="0.0338%" height="15" fill="rgb(235,71,46)" fg:x="33164" fg:w="26"/><text x="43.3134%" y="1599.50"></text></g><g><title>malloc (20 samples, 0.03%)</title><rect x="43.0712%" y="1573" width="0.0260%" height="15" fill="rgb(242,154,29)" fg:x="33170" fg:w="20"/><text x="43.3212%" y="1583.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (111 samples, 0.14%)</title><rect x="42.9543%" y="1765" width="0.1441%" height="15" fill="rgb(210,65,31)" fg:x="33080" fg:w="111"/><text x="43.2043%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 0.04%)</title><rect x="43.0569%" y="1749" width="0.0416%" height="15" fill="rgb(244,9,50)" fg:x="33159" fg:w="32"/><text x="43.3069%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (32 samples, 0.04%)</title><rect x="43.0569%" y="1733" width="0.0416%" height="15" fill="rgb(215,141,38)" fg:x="33159" fg:w="32"/><text x="43.3069%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.04%)</title><rect x="43.0569%" y="1717" width="0.0416%" height="15" fill="rgb(241,129,6)" fg:x="33159" fg:w="32"/><text x="43.3069%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (32 samples, 0.04%)</title><rect x="43.0569%" y="1701" width="0.0416%" height="15" fill="rgb(253,169,4)" fg:x="33159" fg:w="32"/><text x="43.3069%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (28 samples, 0.04%)</title><rect x="43.0621%" y="1685" width="0.0364%" height="15" fill="rgb(237,82,36)" fg:x="33163" fg:w="28"/><text x="43.3121%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.04%)</title><rect x="43.0621%" y="1669" width="0.0364%" height="15" fill="rgb(209,171,11)" fg:x="33163" fg:w="28"/><text x="43.3121%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.04%)</title><rect x="43.0621%" y="1653" width="0.0364%" height="15" fill="rgb(242,19,22)" fg:x="33163" fg:w="28"/><text x="43.3121%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.04%)</title><rect x="43.0621%" y="1637" width="0.0364%" height="15" fill="rgb(251,122,24)" fg:x="33163" fg:w="28"/><text x="43.3121%" y="1647.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="43.1582%" y="1733" width="0.0143%" height="15" fill="rgb(226,166,42)" fg:x="33237" fg:w="11"/><text x="43.4082%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (737 samples, 0.96%)</title><rect x="42.2168%" y="1781" width="0.9570%" height="15" fill="rgb(244,101,48)" fg:x="32512" fg:w="737"/><text x="42.4668%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (58 samples, 0.08%)</title><rect x="43.0985%" y="1765" width="0.0753%" height="15" fill="rgb(227,125,1)" fg:x="33191" fg:w="58"/><text x="43.3485%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (16 samples, 0.02%)</title><rect x="43.1530%" y="1749" width="0.0208%" height="15" fill="rgb(206,79,43)" fg:x="33233" fg:w="16"/><text x="43.4030%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="43.1803%" y="1701" width="0.0325%" height="15" fill="rgb(241,109,41)" fg:x="33254" fg:w="25"/><text x="43.4303%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="43.2011%" y="1685" width="0.0117%" height="15" fill="rgb(219,73,4)" fg:x="33270" fg:w="9"/><text x="43.4511%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (50 samples, 0.06%)</title><rect x="43.1738%" y="1781" width="0.0649%" height="15" fill="rgb(239,25,41)" fg:x="33249" fg:w="50"/><text x="43.4238%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (48 samples, 0.06%)</title><rect x="43.1764%" y="1765" width="0.0623%" height="15" fill="rgb(208,88,46)" fg:x="33251" fg:w="48"/><text x="43.4264%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (48 samples, 0.06%)</title><rect x="43.1764%" y="1749" width="0.0623%" height="15" fill="rgb(239,184,9)" fg:x="33251" fg:w="48"/><text x="43.4264%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (48 samples, 0.06%)</title><rect x="43.1764%" y="1733" width="0.0623%" height="15" fill="rgb(223,114,13)" fg:x="33251" fg:w="48"/><text x="43.4264%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (48 samples, 0.06%)</title><rect x="43.1764%" y="1717" width="0.0623%" height="15" fill="rgb(214,28,42)" fg:x="33251" fg:w="48"/><text x="43.4264%" y="1727.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.02%)</title><rect x="43.2218%" y="1701" width="0.0169%" height="15" fill="rgb(252,32,44)" fg:x="33286" fg:w="13"/><text x="43.4718%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (11 samples, 0.01%)</title><rect x="43.2387%" y="1781" width="0.0143%" height="15" fill="rgb(231,159,4)" fg:x="33299" fg:w="11"/><text x="43.4887%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Function::local_count (10 samples, 0.01%)</title><rect x="43.2673%" y="1781" width="0.0130%" height="15" fill="rgb(210,35,26)" fg:x="33321" fg:w="10"/><text x="43.5173%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Function::module_id (9 samples, 0.01%)</title><rect x="43.2803%" y="1781" width="0.0117%" height="15" fill="rgb(208,190,37)" fg:x="33331" fg:w="9"/><text x="43.5303%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Function::name (19 samples, 0.02%)</title><rect x="43.2920%" y="1781" width="0.0247%" height="15" fill="rgb(226,148,22)" fg:x="33340" fg:w="19"/><text x="43.5420%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (10 samples, 0.01%)</title><rect x="43.3205%" y="1765" width="0.0130%" height="15" fill="rgb(242,153,24)" fg:x="33362" fg:w="10"/><text x="43.5705%" y="1775.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="43.3205%" y="1749" width="0.0130%" height="15" fill="rgb(213,133,7)" fg:x="33362" fg:w="10"/><text x="43.5705%" y="1759.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (10 samples, 0.01%)</title><rect x="43.3205%" y="1733" width="0.0130%" height="15" fill="rgb(248,206,18)" fg:x="33362" fg:w="10"/><text x="43.5705%" y="1743.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (12 samples, 0.02%)</title><rect x="43.3335%" y="1765" width="0.0156%" height="15" fill="rgb(233,157,4)" fg:x="33372" fg:w="12"/><text x="43.5835%" y="1775.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (12 samples, 0.02%)</title><rect x="43.3335%" y="1749" width="0.0156%" height="15" fill="rgb(249,179,32)" fg:x="33372" fg:w="12"/><text x="43.5835%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (112 samples, 0.15%)</title><rect x="43.3166%" y="1781" width="0.1454%" height="15" fill="rgb(248,69,35)" fg:x="33359" fg:w="112"/><text x="43.5666%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (87 samples, 0.11%)</title><rect x="43.3491%" y="1765" width="0.1130%" height="15" fill="rgb(249,158,38)" fg:x="33384" fg:w="87"/><text x="43.5991%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (86 samples, 0.11%)</title><rect x="43.3504%" y="1749" width="0.1117%" height="15" fill="rgb(223,18,43)" fg:x="33385" fg:w="86"/><text x="43.6004%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.03%)</title><rect x="43.4283%" y="1733" width="0.0338%" height="15" fill="rgb(238,42,45)" fg:x="33445" fg:w="26"/><text x="43.6783%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.03%)</title><rect x="43.4283%" y="1717" width="0.0338%" height="15" fill="rgb(219,65,47)" fg:x="33445" fg:w="26"/><text x="43.6783%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (38 samples, 0.05%)</title><rect x="43.4621%" y="1781" width="0.0493%" height="15" fill="rgb(248,153,12)" fg:x="33471" fg:w="38"/><text x="43.7121%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="43.5348%" y="1765" width="0.0130%" height="15" fill="rgb(240,118,4)" fg:x="33527" fg:w="10"/><text x="43.7848%" y="1775.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="43.5504%" y="1717" width="0.0195%" height="15" fill="rgb(250,96,34)" fg:x="33539" fg:w="15"/><text x="43.8004%" y="1727.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="43.5594%" y="1701" width="0.0104%" height="15" fill="rgb(221,15,4)" fg:x="33546" fg:w="8"/><text x="43.8094%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="43.5491%" y="1749" width="0.0221%" height="15" fill="rgb(217,149,33)" fg:x="33538" fg:w="17"/><text x="43.7991%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="43.5491%" y="1733" width="0.0221%" height="15" fill="rgb(213,58,29)" fg:x="33538" fg:w="17"/><text x="43.7991%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.03%)</title><rect x="43.5478%" y="1765" width="0.0260%" height="15" fill="rgb(236,218,9)" fg:x="33537" fg:w="20"/><text x="43.7978%" y="1775.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="43.5958%" y="1749" width="0.0156%" height="15" fill="rgb(248,40,19)" fg:x="33574" fg:w="12"/><text x="43.8458%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="43.5958%" y="1733" width="0.0156%" height="15" fill="rgb(212,17,6)" fg:x="33574" fg:w="12"/><text x="43.8458%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="43.5958%" y="1717" width="0.0156%" height="15" fill="rgb(206,212,20)" fg:x="33574" fg:w="12"/><text x="43.8458%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="43.5958%" y="1701" width="0.0156%" height="15" fill="rgb(229,80,37)" fg:x="33574" fg:w="12"/><text x="43.8458%" y="1711.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="43.6010%" y="1685" width="0.0104%" height="15" fill="rgb(253,8,37)" fg:x="33578" fg:w="8"/><text x="43.8510%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="43.6140%" y="1701" width="0.0182%" height="15" fill="rgb(215,16,43)" fg:x="33588" fg:w="14"/><text x="43.8640%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="43.6140%" y="1685" width="0.0182%" height="15" fill="rgb(236,219,16)" fg:x="33588" fg:w="14"/><text x="43.8640%" y="1695.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="43.6166%" y="1669" width="0.0156%" height="15" fill="rgb(251,0,3)" fg:x="33590" fg:w="12"/><text x="43.8666%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (43 samples, 0.06%)</title><rect x="43.5776%" y="1765" width="0.0558%" height="15" fill="rgb(207,133,37)" fg:x="33560" fg:w="43"/><text x="43.8276%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.02%)</title><rect x="43.6140%" y="1749" width="0.0195%" height="15" fill="rgb(250,143,20)" fg:x="33588" fg:w="15"/><text x="43.8640%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.02%)</title><rect x="43.6140%" y="1733" width="0.0195%" height="15" fill="rgb(242,19,50)" fg:x="33588" fg:w="15"/><text x="43.8640%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="43.6140%" y="1717" width="0.0195%" height="15" fill="rgb(206,124,43)" fg:x="33588" fg:w="15"/><text x="43.8640%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (125 samples, 0.16%)</title><rect x="43.5192%" y="1781" width="0.1623%" height="15" fill="rgb(229,4,38)" fg:x="33515" fg:w="125"/><text x="43.7692%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (34 samples, 0.04%)</title><rect x="43.6374%" y="1765" width="0.0441%" height="15" fill="rgb(247,220,45)" fg:x="33606" fg:w="34"/><text x="43.8874%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (34 samples, 0.04%)</title><rect x="43.6374%" y="1749" width="0.0441%" height="15" fill="rgb(247,195,0)" fg:x="33606" fg:w="34"/><text x="43.8874%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (16 samples, 0.02%)</title><rect x="43.6607%" y="1733" width="0.0208%" height="15" fill="rgb(252,12,19)" fg:x="33624" fg:w="16"/><text x="43.9107%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (15 samples, 0.02%)</title><rect x="43.6620%" y="1717" width="0.0195%" height="15" fill="rgb(222,49,50)" fg:x="33625" fg:w="15"/><text x="43.9120%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="43.7231%" y="1717" width="0.0143%" height="15" fill="rgb(209,157,28)" fg:x="33672" fg:w="11"/><text x="43.9731%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="43.7192%" y="1749" width="0.0221%" height="15" fill="rgb(238,174,24)" fg:x="33669" fg:w="17"/><text x="43.9692%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="43.7205%" y="1733" width="0.0208%" height="15" fill="rgb(224,17,28)" fg:x="33670" fg:w="16"/><text x="43.9705%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.03%)</title><rect x="43.7166%" y="1765" width="0.0260%" height="15" fill="rgb(249,7,29)" fg:x="33667" fg:w="20"/><text x="43.9666%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (56 samples, 0.07%)</title><rect x="43.6815%" y="1781" width="0.0727%" height="15" fill="rgb(243,178,4)" fg:x="33640" fg:w="56"/><text x="43.9315%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (15 samples, 0.02%)</title><rect x="43.7542%" y="1781" width="0.0195%" height="15" fill="rgb(246,138,35)" fg:x="33696" fg:w="15"/><text x="44.0042%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (9,785 samples, 12.71%)</title><rect x="31.1120%" y="1797" width="12.7058%" height="15" fill="rgb(251,85,18)" fg:x="23960" fg:w="9785"/><text x="31.3620%" y="1807.50">move_vm_runtime::in..</text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (34 samples, 0.04%)</title><rect x="43.7737%" y="1781" width="0.0441%" height="15" fill="rgb(254,55,9)" fg:x="33711" fg:w="34"/><text x="44.0237%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (8 samples, 0.01%)</title><rect x="43.8075%" y="1765" width="0.0104%" height="15" fill="rgb(248,4,50)" fg:x="33737" fg:w="8"/><text x="44.0575%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::new (9 samples, 0.01%)</title><rect x="43.8178%" y="1797" width="0.0117%" height="15" fill="rgb(215,208,14)" fg:x="33745" fg:w="9"/><text x="44.0678%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (9,809 samples, 12.74%)</title><rect x="31.0939%" y="1813" width="12.7370%" height="15" fill="rgb(218,37,18)" fg:x="23946" fg:w="9809"/><text x="31.3439%" y="1823.50">move_vm_runtime::in..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="43.9074%" y="1477" width="0.0299%" height="15" fill="rgb(206,104,13)" fg:x="33814" fg:w="23"/><text x="44.1574%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.03%)</title><rect x="43.9087%" y="1461" width="0.0286%" height="15" fill="rgb(248,94,22)" fg:x="33815" fg:w="22"/><text x="44.1587%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.03%)</title><rect x="43.9087%" y="1445" width="0.0286%" height="15" fill="rgb(235,42,46)" fg:x="33815" fg:w="22"/><text x="44.1587%" y="1455.50"></text></g><g><title>cfree (19 samples, 0.02%)</title><rect x="43.9126%" y="1429" width="0.0247%" height="15" fill="rgb(220,228,48)" fg:x="33818" fg:w="19"/><text x="44.1626%" y="1439.50"></text></g><g><title>[libc.so.6] (15 samples, 0.02%)</title><rect x="43.9178%" y="1413" width="0.0195%" height="15" fill="rgb(216,58,12)" fg:x="33822" fg:w="15"/><text x="44.1678%" y="1423.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="43.9698%" y="1445" width="0.0195%" height="15" fill="rgb(223,97,52)" fg:x="33862" fg:w="15"/><text x="44.2198%" y="1455.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.02%)</title><rect x="43.9724%" y="1429" width="0.0169%" height="15" fill="rgb(208,159,17)" fg:x="33864" fg:w="13"/><text x="44.2224%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="43.9776%" y="1413" width="0.0117%" height="15" fill="rgb(215,172,9)" fg:x="33868" fg:w="9"/><text x="44.2276%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="43.9776%" y="1397" width="0.0117%" height="15" fill="rgb(252,175,30)" fg:x="33868" fg:w="9"/><text x="44.2276%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="43.9776%" y="1381" width="0.0117%" height="15" fill="rgb(209,159,10)" fg:x="33868" fg:w="9"/><text x="44.2276%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (35 samples, 0.05%)</title><rect x="43.9477%" y="1477" width="0.0454%" height="15" fill="rgb(229,73,51)" fg:x="33845" fg:w="35"/><text x="44.1977%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (31 samples, 0.04%)</title><rect x="43.9529%" y="1461" width="0.0403%" height="15" fill="rgb(208,212,43)" fg:x="33849" fg:w="31"/><text x="44.2029%" y="1471.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="44.0360%" y="1445" width="0.0195%" height="15" fill="rgb(254,123,53)" fg:x="33913" fg:w="15"/><text x="44.2860%" y="1455.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (14 samples, 0.02%)</title><rect x="44.0724%" y="1429" width="0.0182%" height="15" fill="rgb(254,128,49)" fg:x="33941" fg:w="14"/><text x="44.3224%" y="1439.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="44.0749%" y="1413" width="0.0156%" height="15" fill="rgb(246,16,16)" fg:x="33943" fg:w="12"/><text x="44.3249%" y="1423.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="44.0749%" y="1397" width="0.0156%" height="15" fill="rgb(209,200,1)" fg:x="33943" fg:w="12"/><text x="44.3249%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="44.0749%" y="1381" width="0.0156%" height="15" fill="rgb(235,9,3)" fg:x="33943" fg:w="12"/><text x="44.3249%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="44.0749%" y="1365" width="0.0156%" height="15" fill="rgb(233,121,54)" fg:x="33943" fg:w="12"/><text x="44.3249%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="44.0749%" y="1349" width="0.0156%" height="15" fill="rgb(236,80,25)" fg:x="33943" fg:w="12"/><text x="44.3249%" y="1359.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="44.0749%" y="1333" width="0.0156%" height="15" fill="rgb(220,44,24)" fg:x="33943" fg:w="12"/><text x="44.3249%" y="1343.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="44.0801%" y="1317" width="0.0104%" height="15" fill="rgb(236,225,16)" fg:x="33947" fg:w="8"/><text x="44.3301%" y="1327.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (37 samples, 0.05%)</title><rect x="44.1009%" y="1397" width="0.0480%" height="15" fill="rgb(237,140,0)" fg:x="33963" fg:w="37"/><text x="44.3509%" y="1407.50"></text></g><g><title>serde::de::SeqAccess::next_element (24 samples, 0.03%)</title><rect x="44.1178%" y="1381" width="0.0312%" height="15" fill="rgb(243,225,53)" fg:x="33976" fg:w="24"/><text x="44.3678%" y="1391.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (24 samples, 0.03%)</title><rect x="44.1178%" y="1365" width="0.0312%" height="15" fill="rgb(240,140,30)" fg:x="33976" fg:w="24"/><text x="44.3678%" y="1375.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21 samples, 0.03%)</title><rect x="44.1217%" y="1349" width="0.0273%" height="15" fill="rgb(217,51,16)" fg:x="33979" fg:w="21"/><text x="44.3717%" y="1359.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (21 samples, 0.03%)</title><rect x="44.1217%" y="1333" width="0.0273%" height="15" fill="rgb(245,75,50)" fg:x="33979" fg:w="21"/><text x="44.3717%" y="1343.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (21 samples, 0.03%)</title><rect x="44.1217%" y="1317" width="0.0273%" height="15" fill="rgb(208,174,22)" fg:x="33979" fg:w="21"/><text x="44.3717%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (16 samples, 0.02%)</title><rect x="44.1282%" y="1301" width="0.0208%" height="15" fill="rgb(219,98,50)" fg:x="33984" fg:w="16"/><text x="44.3782%" y="1311.50"></text></g><g><title>bcs::de::Deserializer::next (14 samples, 0.02%)</title><rect x="44.1308%" y="1285" width="0.0182%" height="15" fill="rgb(243,138,3)" fg:x="33986" fg:w="14"/><text x="44.3808%" y="1295.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="44.1360%" y="1269" width="0.0130%" height="15" fill="rgb(243,132,26)" fg:x="33990" fg:w="10"/><text x="44.3860%" y="1279.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.01%)</title><rect x="44.1360%" y="1253" width="0.0130%" height="15" fill="rgb(250,201,8)" fg:x="33990" fg:w="10"/><text x="44.3860%" y="1263.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="44.1360%" y="1237" width="0.0130%" height="15" fill="rgb(213,91,26)" fg:x="33990" fg:w="10"/><text x="44.3860%" y="1247.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="44.1360%" y="1221" width="0.0130%" height="15" fill="rgb(229,117,1)" fg:x="33990" fg:w="10"/><text x="44.3860%" y="1231.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.01%)</title><rect x="44.1373%" y="1205" width="0.0117%" height="15" fill="rgb(229,24,6)" fg:x="33991" fg:w="9"/><text x="44.3873%" y="1215.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.01%)</title><rect x="44.1373%" y="1189" width="0.0117%" height="15" fill="rgb(206,69,11)" fg:x="33991" fg:w="9"/><text x="44.3873%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (52 samples, 0.07%)</title><rect x="44.0918%" y="1429" width="0.0675%" height="15" fill="rgb(234,111,34)" fg:x="33956" fg:w="52"/><text x="44.3418%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (50 samples, 0.06%)</title><rect x="44.0944%" y="1413" width="0.0649%" height="15" fill="rgb(213,187,51)" fg:x="33958" fg:w="50"/><text x="44.3444%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::parse_length (8 samples, 0.01%)</title><rect x="44.1490%" y="1397" width="0.0104%" height="15" fill="rgb(207,45,11)" fg:x="34000" fg:w="8"/><text x="44.3990%" y="1407.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (10 samples, 0.01%)</title><rect x="44.1594%" y="1429" width="0.0130%" height="15" fill="rgb(225,151,47)" fg:x="34008" fg:w="10"/><text x="44.4094%" y="1439.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (10 samples, 0.01%)</title><rect x="44.1594%" y="1413" width="0.0130%" height="15" fill="rgb(211,226,5)" fg:x="34008" fg:w="10"/><text x="44.4094%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (9 samples, 0.01%)</title><rect x="44.1607%" y="1397" width="0.0117%" height="15" fill="rgb(214,83,52)" fg:x="34009" fg:w="9"/><text x="44.4107%" y="1407.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (93 samples, 0.12%)</title><rect x="44.0555%" y="1445" width="0.1208%" height="15" fill="rgb(229,49,53)" fg:x="33928" fg:w="93"/><text x="44.3055%" y="1455.50"></text></g><g><title>bcs::de::from_bytes_seed (143 samples, 0.19%)</title><rect x="43.9996%" y="1461" width="0.1857%" height="15" fill="rgb(246,8,28)" fg:x="33885" fg:w="143"/><text x="44.2496%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (245 samples, 0.32%)</title><rect x="43.8737%" y="1541" width="0.3181%" height="15" fill="rgb(207,28,41)" fg:x="33788" fg:w="245"/><text x="44.1237%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (245 samples, 0.32%)</title><rect x="43.8737%" y="1525" width="0.3181%" height="15" fill="rgb(254,22,25)" fg:x="33788" fg:w="245"/><text x="44.1237%" y="1535.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (241 samples, 0.31%)</title><rect x="43.8789%" y="1509" width="0.3129%" height="15" fill="rgb(209,120,42)" fg:x="33792" fg:w="241"/><text x="44.1289%" y="1519.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (229 samples, 0.30%)</title><rect x="43.8945%" y="1493" width="0.2974%" height="15" fill="rgb(216,194,18)" fg:x="33804" fg:w="229"/><text x="44.1445%" y="1503.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (153 samples, 0.20%)</title><rect x="43.9931%" y="1477" width="0.1987%" height="15" fill="rgb(213,70,17)" fg:x="33880" fg:w="153"/><text x="44.2431%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (267 samples, 0.35%)</title><rect x="43.8724%" y="1589" width="0.3467%" height="15" fill="rgb(228,66,19)" fg:x="33787" fg:w="267"/><text x="44.1224%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (266 samples, 0.35%)</title><rect x="43.8737%" y="1573" width="0.3454%" height="15" fill="rgb(236,221,54)" fg:x="33788" fg:w="266"/><text x="44.1237%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (266 samples, 0.35%)</title><rect x="43.8737%" y="1557" width="0.3454%" height="15" fill="rgb(207,175,15)" fg:x="33788" fg:w="266"/><text x="44.1237%" y="1567.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.03%)</title><rect x="44.1931%" y="1541" width="0.0260%" height="15" fill="rgb(234,76,8)" fg:x="34034" fg:w="20"/><text x="44.4431%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (282 samples, 0.37%)</title><rect x="43.8724%" y="1621" width="0.3662%" height="15" fill="rgb(243,106,0)" fg:x="33787" fg:w="282"/><text x="44.1224%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (282 samples, 0.37%)</title><rect x="43.8724%" y="1605" width="0.3662%" height="15" fill="rgb(208,48,19)" fg:x="33787" fg:w="282"/><text x="44.1224%" y="1615.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (15 samples, 0.02%)</title><rect x="44.2191%" y="1589" width="0.0195%" height="15" fill="rgb(251,50,29)" fg:x="34054" fg:w="15"/><text x="44.4691%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (292 samples, 0.38%)</title><rect x="43.8724%" y="1637" width="0.3792%" height="15" fill="rgb(222,31,49)" fg:x="33787" fg:w="292"/><text x="44.1224%" y="1647.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (10 samples, 0.01%)</title><rect x="44.2386%" y="1621" width="0.0130%" height="15" fill="rgb(232,33,18)" fg:x="34069" fg:w="10"/><text x="44.4886%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.04%)</title><rect x="44.2515%" y="1637" width="0.0351%" height="15" fill="rgb(209,1,44)" fg:x="34079" fg:w="27"/><text x="44.5015%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.04%)</title><rect x="44.2515%" y="1621" width="0.0351%" height="15" fill="rgb(211,7,1)" fg:x="34079" fg:w="27"/><text x="44.5015%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.04%)</title><rect x="44.2515%" y="1605" width="0.0351%" height="15" fill="rgb(224,111,27)" fg:x="34079" fg:w="27"/><text x="44.5015%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.04%)</title><rect x="44.2515%" y="1589" width="0.0351%" height="15" fill="rgb(252,195,39)" fg:x="34079" fg:w="27"/><text x="44.5015%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.03%)</title><rect x="44.2528%" y="1573" width="0.0338%" height="15" fill="rgb(237,198,5)" fg:x="34080" fg:w="26"/><text x="44.5028%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.03%)</title><rect x="44.2541%" y="1557" width="0.0325%" height="15" fill="rgb(232,148,1)" fg:x="34081" fg:w="25"/><text x="44.5041%" y="1567.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.03%)</title><rect x="44.2541%" y="1541" width="0.0325%" height="15" fill="rgb(249,41,3)" fg:x="34081" fg:w="25"/><text x="44.5041%" y="1551.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.03%)</title><rect x="44.2541%" y="1525" width="0.0325%" height="15" fill="rgb(215,14,33)" fg:x="34081" fg:w="25"/><text x="44.5041%" y="1535.50"></text></g><g><title>realloc (25 samples, 0.03%)</title><rect x="44.2541%" y="1509" width="0.0325%" height="15" fill="rgb(209,146,24)" fg:x="34081" fg:w="25"/><text x="44.5041%" y="1519.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="44.2593%" y="1493" width="0.0273%" height="15" fill="rgb(219,51,47)" fg:x="34085" fg:w="21"/><text x="44.5093%" y="1503.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="44.2658%" y="1477" width="0.0208%" height="15" fill="rgb(234,217,40)" fg:x="34090" fg:w="16"/><text x="44.5158%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="44.2866%" y="1637" width="0.0156%" height="15" fill="rgb(228,34,26)" fg:x="34106" fg:w="12"/><text x="44.5366%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;&gt; (12 samples, 0.02%)</title><rect x="44.2866%" y="1621" width="0.0156%" height="15" fill="rgb(224,50,29)" fg:x="34106" fg:w="12"/><text x="44.5366%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="44.2866%" y="1605" width="0.0156%" height="15" fill="rgb(205,79,51)" fg:x="34106" fg:w="12"/><text x="44.5366%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="44.2866%" y="1589" width="0.0156%" height="15" fill="rgb(218,136,28)" fg:x="34106" fg:w="12"/><text x="44.5366%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (10 samples, 0.01%)</title><rect x="44.2892%" y="1573" width="0.0130%" height="15" fill="rgb(220,150,10)" fg:x="34108" fg:w="10"/><text x="44.5392%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (360 samples, 0.47%)</title><rect x="43.8620%" y="1669" width="0.4675%" height="15" fill="rgb(242,158,47)" fg:x="33779" fg:w="360"/><text x="44.1120%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (360 samples, 0.47%)</title><rect x="43.8620%" y="1653" width="0.4675%" height="15" fill="rgb(209,68,0)" fg:x="33779" fg:w="360"/><text x="44.1120%" y="1663.50"></text></g><g><title>core::ptr::write (21 samples, 0.03%)</title><rect x="44.3022%" y="1637" width="0.0273%" height="15" fill="rgb(208,13,41)" fg:x="34118" fg:w="21"/><text x="44.5522%" y="1647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="44.3450%" y="1509" width="0.0130%" height="15" fill="rgb(226,201,7)" fg:x="34151" fg:w="10"/><text x="44.5950%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="44.3450%" y="1493" width="0.0130%" height="15" fill="rgb(236,103,26)" fg:x="34151" fg:w="10"/><text x="44.5950%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="44.3450%" y="1477" width="0.0130%" height="15" fill="rgb(243,162,8)" fg:x="34151" fg:w="10"/><text x="44.5950%" y="1487.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="44.3476%" y="1461" width="0.0104%" height="15" fill="rgb(237,225,11)" fg:x="34153" fg:w="8"/><text x="44.5976%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (17 samples, 0.02%)</title><rect x="44.3632%" y="1509" width="0.0221%" height="15" fill="rgb(247,186,32)" fg:x="34165" fg:w="17"/><text x="44.6132%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (10 samples, 0.01%)</title><rect x="44.3723%" y="1493" width="0.0130%" height="15" fill="rgb(215,26,28)" fg:x="34172" fg:w="10"/><text x="44.6223%" y="1503.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (55 samples, 0.07%)</title><rect x="44.4281%" y="1413" width="0.0714%" height="15" fill="rgb(208,121,6)" fg:x="34215" fg:w="55"/><text x="44.6781%" y="1423.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (50 samples, 0.06%)</title><rect x="44.4346%" y="1397" width="0.0649%" height="15" fill="rgb(225,91,3)" fg:x="34220" fg:w="50"/><text x="44.6846%" y="1407.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (50 samples, 0.06%)</title><rect x="44.4346%" y="1381" width="0.0649%" height="15" fill="rgb(246,119,36)" fg:x="34220" fg:w="50"/><text x="44.6846%" y="1391.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (49 samples, 0.06%)</title><rect x="44.4359%" y="1365" width="0.0636%" height="15" fill="rgb(254,173,2)" fg:x="34221" fg:w="49"/><text x="44.6859%" y="1375.50"></text></g><g><title>serde::de::SeqAccess::next_element (41 samples, 0.05%)</title><rect x="44.4463%" y="1349" width="0.0532%" height="15" fill="rgb(209,87,54)" fg:x="34229" fg:w="41"/><text x="44.6963%" y="1359.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (41 samples, 0.05%)</title><rect x="44.4463%" y="1333" width="0.0532%" height="15" fill="rgb(223,216,20)" fg:x="34229" fg:w="41"/><text x="44.6963%" y="1343.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (41 samples, 0.05%)</title><rect x="44.4463%" y="1317" width="0.0532%" height="15" fill="rgb(220,31,8)" fg:x="34229" fg:w="41"/><text x="44.6963%" y="1327.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (41 samples, 0.05%)</title><rect x="44.4463%" y="1301" width="0.0532%" height="15" fill="rgb(220,185,15)" fg:x="34229" fg:w="41"/><text x="44.6963%" y="1311.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (41 samples, 0.05%)</title><rect x="44.4463%" y="1285" width="0.0532%" height="15" fill="rgb(247,190,50)" fg:x="34229" fg:w="41"/><text x="44.6963%" y="1295.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (35 samples, 0.05%)</title><rect x="44.4541%" y="1269" width="0.0454%" height="15" fill="rgb(239,173,47)" fg:x="34235" fg:w="35"/><text x="44.7041%" y="1279.50"></text></g><g><title>bcs::de::Deserializer::next (8 samples, 0.01%)</title><rect x="44.4892%" y="1253" width="0.0104%" height="15" fill="rgb(218,190,42)" fg:x="34262" fg:w="8"/><text x="44.7392%" y="1263.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (71 samples, 0.09%)</title><rect x="44.4126%" y="1461" width="0.0922%" height="15" fill="rgb(251,207,16)" fg:x="34203" fg:w="71"/><text x="44.6626%" y="1471.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (61 samples, 0.08%)</title><rect x="44.4255%" y="1445" width="0.0792%" height="15" fill="rgb(222,199,47)" fg:x="34213" fg:w="61"/><text x="44.6755%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (61 samples, 0.08%)</title><rect x="44.4255%" y="1429" width="0.0792%" height="15" fill="rgb(245,190,7)" fg:x="34213" fg:w="61"/><text x="44.6755%" y="1439.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (86 samples, 0.11%)</title><rect x="44.4009%" y="1477" width="0.1117%" height="15" fill="rgb(239,85,38)" fg:x="34194" fg:w="86"/><text x="44.6509%" y="1487.50"></text></g><g><title>bcs::de::from_bytes_seed (97 samples, 0.13%)</title><rect x="44.3879%" y="1493" width="0.1260%" height="15" fill="rgb(229,69,51)" fg:x="34184" fg:w="97"/><text x="44.6379%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (143 samples, 0.19%)</title><rect x="44.3308%" y="1573" width="0.1857%" height="15" fill="rgb(231,104,51)" fg:x="34140" fg:w="143"/><text x="44.5808%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (143 samples, 0.19%)</title><rect x="44.3308%" y="1557" width="0.1857%" height="15" fill="rgb(235,49,4)" fg:x="34140" fg:w="143"/><text x="44.5808%" y="1567.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (142 samples, 0.18%)</title><rect x="44.3321%" y="1541" width="0.1844%" height="15" fill="rgb(246,166,20)" fg:x="34141" fg:w="142"/><text x="44.5821%" y="1551.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (140 samples, 0.18%)</title><rect x="44.3346%" y="1525" width="0.1818%" height="15" fill="rgb(230,119,37)" fg:x="34143" fg:w="140"/><text x="44.5846%" y="1535.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (101 samples, 0.13%)</title><rect x="44.3853%" y="1509" width="0.1311%" height="15" fill="rgb(234,77,34)" fg:x="34182" fg:w="101"/><text x="44.6353%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (147 samples, 0.19%)</title><rect x="44.3295%" y="1621" width="0.1909%" height="15" fill="rgb(211,222,33)" fg:x="34139" fg:w="147"/><text x="44.5795%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (146 samples, 0.19%)</title><rect x="44.3308%" y="1605" width="0.1896%" height="15" fill="rgb(226,45,42)" fg:x="34140" fg:w="146"/><text x="44.5808%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (146 samples, 0.19%)</title><rect x="44.3308%" y="1589" width="0.1896%" height="15" fill="rgb(215,174,28)" fg:x="34140" fg:w="146"/><text x="44.5808%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (151 samples, 0.20%)</title><rect x="44.3295%" y="1653" width="0.1961%" height="15" fill="rgb(254,173,49)" fg:x="34139" fg:w="151"/><text x="44.5795%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (151 samples, 0.20%)</title><rect x="44.3295%" y="1637" width="0.1961%" height="15" fill="rgb(229,191,6)" fg:x="34139" fg:w="151"/><text x="44.5795%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.20%)</title><rect x="44.3295%" y="1669" width="0.2000%" height="15" fill="rgb(212,145,22)" fg:x="34139" fg:w="154"/><text x="44.5795%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (532 samples, 0.69%)</title><rect x="43.8425%" y="1797" width="0.6908%" height="15" fill="rgb(226,6,51)" fg:x="33764" fg:w="532"/><text x="44.0925%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (532 samples, 0.69%)</title><rect x="43.8425%" y="1781" width="0.6908%" height="15" fill="rgb(227,128,8)" fg:x="33764" fg:w="532"/><text x="44.0925%" y="1791.50"></text></g><g><title>core::iter::adapters::try_process (532 samples, 0.69%)</title><rect x="43.8425%" y="1765" width="0.6908%" height="15" fill="rgb(205,24,10)" fg:x="33764" fg:w="532"/><text x="44.0925%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (529 samples, 0.69%)</title><rect x="43.8464%" y="1749" width="0.6869%" height="15" fill="rgb(217,147,27)" fg:x="33767" fg:w="529"/><text x="44.0964%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (529 samples, 0.69%)</title><rect x="43.8464%" y="1733" width="0.6869%" height="15" fill="rgb(250,82,42)" fg:x="33767" fg:w="529"/><text x="44.0964%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (529 samples, 0.69%)</title><rect x="43.8464%" y="1717" width="0.6869%" height="15" fill="rgb(248,93,17)" fg:x="33767" fg:w="529"/><text x="44.0964%" y="1727.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (526 samples, 0.68%)</title><rect x="43.8503%" y="1701" width="0.6830%" height="15" fill="rgb(254,212,40)" fg:x="33770" fg:w="526"/><text x="44.1003%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (522 samples, 0.68%)</title><rect x="43.8555%" y="1685" width="0.6778%" height="15" fill="rgb(229,209,2)" fg:x="33774" fg:w="522"/><text x="44.1055%" y="1695.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (554 samples, 0.72%)</title><rect x="43.8308%" y="1813" width="0.7194%" height="15" fill="rgb(211,50,43)" fg:x="33755" fg:w="554"/><text x="44.0808%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (13 samples, 0.02%)</title><rect x="44.5333%" y="1797" width="0.0169%" height="15" fill="rgb(245,196,29)" fg:x="34296" fg:w="13"/><text x="44.7833%" y="1807.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (11,743 samples, 15.25%)</title><rect x="29.3474%" y="1893" width="15.2483%" height="15" fill="rgb(216,132,13)" fg:x="22601" fg:w="11743"/><text x="29.5974%" y="1903.50">aptos_vm::aptos_vm::Apt..</text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue (11,743 samples, 15.25%)</title><rect x="29.3474%" y="1877" width="15.2483%" height="15" fill="rgb(251,108,21)" fg:x="22601" fg:w="11743"/><text x="29.5974%" y="1887.50">aptos_vm::aptos_vm_impl..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (11,093 samples, 14.40%)</title><rect x="30.1914%" y="1861" width="14.4042%" height="15" fill="rgb(229,174,54)" fg:x="23251" fg:w="11093"/><text x="30.4414%" y="1871.50">move_vm_runtime::sessi..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (11,092 samples, 14.40%)</title><rect x="30.1927%" y="1845" width="14.4030%" height="15" fill="rgb(211,175,47)" fg:x="23252" fg:w="11092"/><text x="30.4427%" y="1855.50">move_vm_runtime::runti..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (10,603 samples, 13.77%)</title><rect x="30.8277%" y="1829" width="13.7680%" height="15" fill="rgb(234,5,37)" fg:x="23741" fg:w="10603"/><text x="31.0777%" y="1839.50">move_vm_runtime::runt..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (35 samples, 0.05%)</title><rect x="44.5502%" y="1813" width="0.0454%" height="15" fill="rgb(244,150,43)" fg:x="34309" fg:w="35"/><text x="44.8002%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.03%)</title><rect x="44.5619%" y="1797" width="0.0338%" height="15" fill="rgb(242,172,38)" fg:x="34318" fg:w="26"/><text x="44.8119%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="44.5619%" y="1781" width="0.0338%" height="15" fill="rgb(205,27,8)" fg:x="34318" fg:w="26"/><text x="44.8119%" y="1791.50"></text></g><g><title>core::iter::adapters::try_process (26 samples, 0.03%)</title><rect x="44.5619%" y="1765" width="0.0338%" height="15" fill="rgb(217,57,3)" fg:x="34318" fg:w="26"/><text x="44.8119%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (18 samples, 0.02%)</title><rect x="44.5723%" y="1749" width="0.0234%" height="15" fill="rgb(242,21,38)" fg:x="34326" fg:w="18"/><text x="44.8223%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.02%)</title><rect x="44.5723%" y="1733" width="0.0234%" height="15" fill="rgb(209,64,43)" fg:x="34326" fg:w="18"/><text x="44.8223%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="44.5723%" y="1717" width="0.0234%" height="15" fill="rgb(222,2,46)" fg:x="34326" fg:w="18"/><text x="44.8223%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="44.5749%" y="1701" width="0.0208%" height="15" fill="rgb(218,19,44)" fg:x="34328" fg:w="16"/><text x="44.8249%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="44.5788%" y="1685" width="0.0169%" height="15" fill="rgb(240,203,42)" fg:x="34331" fg:w="13"/><text x="44.8288%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="44.5788%" y="1669" width="0.0169%" height="15" fill="rgb(229,23,45)" fg:x="34331" fg:w="13"/><text x="44.8288%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;&gt; (13 samples, 0.02%)</title><rect x="44.5788%" y="1653" width="0.0169%" height="15" fill="rgb(205,228,51)" fg:x="34331" fg:w="13"/><text x="44.8288%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="44.5788%" y="1637" width="0.0169%" height="15" fill="rgb(239,36,20)" fg:x="34331" fg:w="13"/><text x="44.8288%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt; (13 samples, 0.02%)</title><rect x="44.5788%" y="1621" width="0.0169%" height="15" fill="rgb(248,172,27)" fg:x="34331" fg:w="13"/><text x="44.8288%" y="1631.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="44.5853%" y="1605" width="0.0104%" height="15" fill="rgb(244,55,32)" fg:x="34336" fg:w="8"/><text x="44.8353%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="44.6281%" y="1429" width="0.0104%" height="15" fill="rgb(215,97,16)" fg:x="34369" fg:w="8"/><text x="44.8781%" y="1439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="44.6281%" y="1413" width="0.0104%" height="15" fill="rgb(224,80,29)" fg:x="34369" fg:w="8"/><text x="44.8781%" y="1423.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="44.6281%" y="1397" width="0.0104%" height="15" fill="rgb(216,93,47)" fg:x="34369" fg:w="8"/><text x="44.8781%" y="1407.50"></text></g><g><title>realloc (8 samples, 0.01%)</title><rect x="44.6281%" y="1381" width="0.0104%" height="15" fill="rgb(238,159,10)" fg:x="34369" fg:w="8"/><text x="44.8781%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="44.6216%" y="1509" width="0.0182%" height="15" fill="rgb(223,98,29)" fg:x="34364" fg:w="14"/><text x="44.8716%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="44.6216%" y="1493" width="0.0182%" height="15" fill="rgb(210,176,23)" fg:x="34364" fg:w="14"/><text x="44.8716%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="44.6242%" y="1477" width="0.0156%" height="15" fill="rgb(242,162,27)" fg:x="34366" fg:w="12"/><text x="44.8742%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="44.6268%" y="1461" width="0.0130%" height="15" fill="rgb(245,109,32)" fg:x="34368" fg:w="10"/><text x="44.8768%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="44.6281%" y="1445" width="0.0117%" height="15" fill="rgb(248,87,8)" fg:x="34369" fg:w="9"/><text x="44.8781%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (19 samples, 0.02%)</title><rect x="44.6164%" y="1669" width="0.0247%" height="15" fill="rgb(250,160,50)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 0.02%)</title><rect x="44.6164%" y="1653" width="0.0247%" height="15" fill="rgb(246,165,25)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (19 samples, 0.02%)</title><rect x="44.6164%" y="1637" width="0.0247%" height="15" fill="rgb(249,219,3)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (19 samples, 0.02%)</title><rect x="44.6164%" y="1621" width="0.0247%" height="15" fill="rgb(226,66,5)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (19 samples, 0.02%)</title><rect x="44.6164%" y="1605" width="0.0247%" height="15" fill="rgb(250,220,43)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (19 samples, 0.02%)</title><rect x="44.6164%" y="1589" width="0.0247%" height="15" fill="rgb(225,111,31)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1599.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.02%)</title><rect x="44.6164%" y="1573" width="0.0247%" height="15" fill="rgb(248,106,18)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.02%)</title><rect x="44.6164%" y="1557" width="0.0247%" height="15" fill="rgb(220,226,45)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.02%)</title><rect x="44.6164%" y="1541" width="0.0247%" height="15" fill="rgb(208,58,53)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.02%)</title><rect x="44.6164%" y="1525" width="0.0247%" height="15" fill="rgb(209,133,1)" fg:x="34360" fg:w="19"/><text x="44.8664%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.03%)</title><rect x="44.6515%" y="1461" width="0.0312%" height="15" fill="rgb(228,216,27)" fg:x="34387" fg:w="24"/><text x="44.9015%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.03%)</title><rect x="44.6515%" y="1445" width="0.0312%" height="15" fill="rgb(238,155,2)" fg:x="34387" fg:w="24"/><text x="44.9015%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.03%)</title><rect x="44.6515%" y="1429" width="0.0312%" height="15" fill="rgb(244,99,37)" fg:x="34387" fg:w="24"/><text x="44.9015%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.03%)</title><rect x="44.6515%" y="1413" width="0.0312%" height="15" fill="rgb(254,32,3)" fg:x="34387" fg:w="24"/><text x="44.9015%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.03%)</title><rect x="44.6515%" y="1397" width="0.0312%" height="15" fill="rgb(234,46,50)" fg:x="34387" fg:w="24"/><text x="44.9015%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (23 samples, 0.03%)</title><rect x="44.6528%" y="1381" width="0.0299%" height="15" fill="rgb(232,118,51)" fg:x="34388" fg:w="23"/><text x="44.9028%" y="1391.50"></text></g><g><title>alloc::alloc::Global::grow_impl (23 samples, 0.03%)</title><rect x="44.6528%" y="1365" width="0.0299%" height="15" fill="rgb(207,24,32)" fg:x="34388" fg:w="23"/><text x="44.9028%" y="1375.50"></text></g><g><title>alloc::alloc::realloc (23 samples, 0.03%)</title><rect x="44.6528%" y="1349" width="0.0299%" height="15" fill="rgb(208,107,43)" fg:x="34388" fg:w="23"/><text x="44.9028%" y="1359.50"></text></g><g><title>realloc (21 samples, 0.03%)</title><rect x="44.6554%" y="1333" width="0.0273%" height="15" fill="rgb(231,28,9)" fg:x="34390" fg:w="21"/><text x="44.9054%" y="1343.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="44.6606%" y="1317" width="0.0221%" height="15" fill="rgb(241,204,15)" fg:x="34394" fg:w="17"/><text x="44.9106%" y="1327.50"></text></g><g><title>[libc.so.6] (15 samples, 0.02%)</title><rect x="44.6632%" y="1301" width="0.0195%" height="15" fill="rgb(214,54,15)" fg:x="34396" fg:w="15"/><text x="44.9132%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (27 samples, 0.04%)</title><rect x="44.6502%" y="1573" width="0.0351%" height="15" fill="rgb(230,12,28)" fg:x="34386" fg:w="27"/><text x="44.9002%" y="1583.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (27 samples, 0.04%)</title><rect x="44.6502%" y="1557" width="0.0351%" height="15" fill="rgb(221,171,5)" fg:x="34386" fg:w="27"/><text x="44.9002%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (27 samples, 0.04%)</title><rect x="44.6502%" y="1541" width="0.0351%" height="15" fill="rgb(207,72,25)" fg:x="34386" fg:w="27"/><text x="44.9002%" y="1551.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (26 samples, 0.03%)</title><rect x="44.6515%" y="1525" width="0.0338%" height="15" fill="rgb(249,79,37)" fg:x="34387" fg:w="26"/><text x="44.9015%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.03%)</title><rect x="44.6515%" y="1509" width="0.0338%" height="15" fill="rgb(209,98,49)" fg:x="34387" fg:w="26"/><text x="44.9015%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.03%)</title><rect x="44.6515%" y="1493" width="0.0338%" height="15" fill="rgb(221,62,13)" fg:x="34387" fg:w="26"/><text x="44.9015%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.03%)</title><rect x="44.6515%" y="1477" width="0.0338%" height="15" fill="rgb(223,39,6)" fg:x="34387" fg:w="26"/><text x="44.9015%" y="1487.50"></text></g><g><title>&lt;aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (29 samples, 0.04%)</title><rect x="44.6502%" y="1605" width="0.0377%" height="15" fill="rgb(246,163,20)" fg:x="34386" fg:w="29"/><text x="44.9002%" y="1615.50"></text></g><g><title>aptos_types::serde_helper::vec_bytes::serialize (29 samples, 0.04%)</title><rect x="44.6502%" y="1589" width="0.0377%" height="15" fill="rgb(211,111,29)" fg:x="34386" fg:w="29"/><text x="44.9002%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="44.6956%" y="1349" width="0.0104%" height="15" fill="rgb(243,118,5)" fg:x="34421" fg:w="8"/><text x="44.9456%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="44.6904%" y="1413" width="0.0169%" height="15" fill="rgb(240,144,52)" fg:x="34417" fg:w="13"/><text x="44.9404%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="44.6904%" y="1397" width="0.0169%" height="15" fill="rgb(244,158,36)" fg:x="34417" fg:w="13"/><text x="44.9404%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="44.6930%" y="1381" width="0.0143%" height="15" fill="rgb(241,109,37)" fg:x="34419" fg:w="11"/><text x="44.9430%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="44.6943%" y="1365" width="0.0130%" height="15" fill="rgb(213,95,32)" fg:x="34420" fg:w="10"/><text x="44.9443%" y="1375.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (16 samples, 0.02%)</title><rect x="44.6878%" y="1573" width="0.0208%" height="15" fill="rgb(252,193,9)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 0.02%)</title><rect x="44.6878%" y="1557" width="0.0208%" height="15" fill="rgb(225,213,21)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (16 samples, 0.02%)</title><rect x="44.6878%" y="1541" width="0.0208%" height="15" fill="rgb(220,172,46)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (16 samples, 0.02%)</title><rect x="44.6878%" y="1525" width="0.0208%" height="15" fill="rgb(235,75,41)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (16 samples, 0.02%)</title><rect x="44.6878%" y="1509" width="0.0208%" height="15" fill="rgb(213,86,9)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (16 samples, 0.02%)</title><rect x="44.6878%" y="1493" width="0.0208%" height="15" fill="rgb(238,127,51)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1503.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.02%)</title><rect x="44.6878%" y="1477" width="0.0208%" height="15" fill="rgb(215,2,54)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.02%)</title><rect x="44.6878%" y="1461" width="0.0208%" height="15" fill="rgb(245,80,6)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="44.6878%" y="1445" width="0.0208%" height="15" fill="rgb(233,106,42)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.02%)</title><rect x="44.6878%" y="1429" width="0.0208%" height="15" fill="rgb(244,86,38)" fg:x="34415" fg:w="16"/><text x="44.9378%" y="1439.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (60 samples, 0.08%)</title><rect x="44.6411%" y="1669" width="0.0779%" height="15" fill="rgb(242,167,7)" fg:x="34379" fg:w="60"/><text x="44.8911%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (60 samples, 0.08%)</title><rect x="44.6411%" y="1653" width="0.0779%" height="15" fill="rgb(218,216,3)" fg:x="34379" fg:w="60"/><text x="44.8911%" y="1663.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (60 samples, 0.08%)</title><rect x="44.6411%" y="1637" width="0.0779%" height="15" fill="rgb(206,136,36)" fg:x="34379" fg:w="60"/><text x="44.8911%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (55 samples, 0.07%)</title><rect x="44.6476%" y="1621" width="0.0714%" height="15" fill="rgb(206,206,15)" fg:x="34384" fg:w="55"/><text x="44.8976%" y="1631.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::ModuleId&gt;::serialize (24 samples, 0.03%)</title><rect x="44.6878%" y="1605" width="0.0312%" height="15" fill="rgb(207,163,34)" fg:x="34415" fg:w="24"/><text x="44.9378%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 0.03%)</title><rect x="44.6878%" y="1589" width="0.0312%" height="15" fill="rgb(240,127,22)" fg:x="34415" fg:w="24"/><text x="44.9378%" y="1599.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (8 samples, 0.01%)</title><rect x="44.7086%" y="1573" width="0.0104%" height="15" fill="rgb(227,49,5)" fg:x="34431" fg:w="8"/><text x="44.9586%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.01%)</title><rect x="44.7086%" y="1557" width="0.0104%" height="15" fill="rgb(231,8,6)" fg:x="34431" fg:w="8"/><text x="44.9586%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="44.7203%" y="1509" width="0.0104%" height="15" fill="rgb(223,21,24)" fg:x="34440" fg:w="8"/><text x="44.9703%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="44.7203%" y="1493" width="0.0104%" height="15" fill="rgb(244,44,52)" fg:x="34440" fg:w="8"/><text x="44.9703%" y="1503.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="44.7203%" y="1477" width="0.0104%" height="15" fill="rgb(207,73,28)" fg:x="34440" fg:w="8"/><text x="44.9703%" y="1487.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="44.7203%" y="1461" width="0.0104%" height="15" fill="rgb(234,215,10)" fg:x="34440" fg:w="8"/><text x="44.9703%" y="1471.50"></text></g><g><title>realloc (8 samples, 0.01%)</title><rect x="44.7203%" y="1445" width="0.0104%" height="15" fill="rgb(236,85,3)" fg:x="34440" fg:w="8"/><text x="44.9703%" y="1455.50"></text></g><g><title>bcs::ser::to_bytes (92 samples, 0.12%)</title><rect x="44.6138%" y="1733" width="0.1195%" height="15" fill="rgb(236,102,39)" fg:x="34358" fg:w="92"/><text x="44.8638%" y="1743.50"></text></g><g><title>bcs::ser::serialize_into (92 samples, 0.12%)</title><rect x="44.6138%" y="1717" width="0.1195%" height="15" fill="rgb(243,50,8)" fg:x="34358" fg:w="92"/><text x="44.8638%" y="1727.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (92 samples, 0.12%)</title><rect x="44.6138%" y="1701" width="0.1195%" height="15" fill="rgb(207,111,4)" fg:x="34358" fg:w="92"/><text x="44.8638%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (92 samples, 0.12%)</title><rect x="44.6138%" y="1685" width="0.1195%" height="15" fill="rgb(230,52,42)" fg:x="34358" fg:w="92"/><text x="44.8638%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (11 samples, 0.01%)</title><rect x="44.7190%" y="1669" width="0.0143%" height="15" fill="rgb(252,178,50)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (11 samples, 0.01%)</title><rect x="44.7190%" y="1653" width="0.0143%" height="15" fill="rgb(234,46,35)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1663.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="44.7190%" y="1637" width="0.0143%" height="15" fill="rgb(228,69,37)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="44.7190%" y="1621" width="0.0143%" height="15" fill="rgb(221,21,11)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="44.7190%" y="1605" width="0.0143%" height="15" fill="rgb(223,56,9)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="44.7190%" y="1589" width="0.0143%" height="15" fill="rgb(234,30,19)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="44.7190%" y="1573" width="0.0143%" height="15" fill="rgb(211,64,54)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="44.7190%" y="1557" width="0.0143%" height="15" fill="rgb(250,189,5)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="44.7190%" y="1541" width="0.0143%" height="15" fill="rgb(214,180,13)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="44.7190%" y="1525" width="0.0143%" height="15" fill="rgb(238,40,40)" fg:x="34439" fg:w="11"/><text x="44.9690%" y="1535.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (96 samples, 0.12%)</title><rect x="44.6138%" y="1797" width="0.1247%" height="15" fill="rgb(214,101,38)" fg:x="34358" fg:w="96"/><text x="44.8638%" y="1807.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (96 samples, 0.12%)</title><rect x="44.6138%" y="1781" width="0.1247%" height="15" fill="rgb(242,65,53)" fg:x="34358" fg:w="96"/><text x="44.8638%" y="1791.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (96 samples, 0.12%)</title><rect x="44.6138%" y="1765" width="0.1247%" height="15" fill="rgb(230,22,45)" fg:x="34358" fg:w="96"/><text x="44.8638%" y="1775.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len::{{closure}} (96 samples, 0.12%)</title><rect x="44.6138%" y="1749" width="0.1247%" height="15" fill="rgb(223,77,1)" fg:x="34358" fg:w="96"/><text x="44.8638%" y="1759.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len (102 samples, 0.13%)</title><rect x="44.6086%" y="1877" width="0.1324%" height="15" fill="rgb(227,33,37)" fg:x="34354" fg:w="102"/><text x="44.8586%" y="1887.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (101 samples, 0.13%)</title><rect x="44.6099%" y="1861" width="0.1311%" height="15" fill="rgb(224,148,39)" fg:x="34355" fg:w="101"/><text x="44.8599%" y="1871.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (101 samples, 0.13%)</title><rect x="44.6099%" y="1845" width="0.1311%" height="15" fill="rgb(232,212,39)" fg:x="34355" fg:w="101"/><text x="44.8599%" y="1855.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (101 samples, 0.13%)</title><rect x="44.6099%" y="1829" width="0.1311%" height="15" fill="rgb(251,172,7)" fg:x="34355" fg:w="101"/><text x="44.8599%" y="1839.50"></text></g><g><title>once_cell::imp::initialize_or_wait (99 samples, 0.13%)</title><rect x="44.6125%" y="1813" width="0.1286%" height="15" fill="rgb(219,39,9)" fg:x="34357" fg:w="99"/><text x="44.8625%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.02%)</title><rect x="44.7528%" y="1813" width="0.0208%" height="15" fill="rgb(228,118,14)" fg:x="34465" fg:w="16"/><text x="45.0028%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.02%)</title><rect x="44.7554%" y="1797" width="0.0182%" height="15" fill="rgb(207,140,10)" fg:x="34467" fg:w="14"/><text x="45.0054%" y="1807.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="44.7580%" y="1781" width="0.0156%" height="15" fill="rgb(227,111,53)" fg:x="34469" fg:w="12"/><text x="45.0080%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.01%)</title><rect x="44.7606%" y="1765" width="0.0130%" height="15" fill="rgb(216,165,16)" fg:x="34471" fg:w="10"/><text x="45.0106%" y="1775.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.01%)</title><rect x="44.7606%" y="1749" width="0.0130%" height="15" fill="rgb(226,111,18)" fg:x="34471" fg:w="10"/><text x="45.0106%" y="1759.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.01%)</title><rect x="44.7606%" y="1733" width="0.0130%" height="15" fill="rgb(251,27,17)" fg:x="34471" fg:w="10"/><text x="45.0106%" y="1743.50"></text></g><g><title>realloc (10 samples, 0.01%)</title><rect x="44.7606%" y="1717" width="0.0130%" height="15" fill="rgb(254,69,9)" fg:x="34471" fg:w="10"/><text x="45.0106%" y="1727.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key_preimage (25 samples, 0.03%)</title><rect x="44.7437%" y="1861" width="0.0325%" height="15" fill="rgb(234,140,37)" fg:x="34458" fg:w="25"/><text x="44.9937%" y="1871.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (19 samples, 0.02%)</title><rect x="44.7515%" y="1845" width="0.0247%" height="15" fill="rgb(220,93,8)" fg:x="34464" fg:w="19"/><text x="45.0015%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="44.7515%" y="1829" width="0.0247%" height="15" fill="rgb(236,113,3)" fg:x="34464" fg:w="19"/><text x="45.0015%" y="1839.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (132 samples, 0.17%)</title><rect x="44.7774%" y="1813" width="0.1714%" height="15" fill="rgb(234,108,23)" fg:x="34484" fg:w="132"/><text x="45.0274%" y="1823.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (132 samples, 0.17%)</title><rect x="44.7774%" y="1797" width="0.1714%" height="15" fill="rgb(205,114,34)" fg:x="34484" fg:w="132"/><text x="45.0274%" y="1807.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (132 samples, 0.17%)</title><rect x="44.7774%" y="1781" width="0.1714%" height="15" fill="rgb(236,200,45)" fg:x="34484" fg:w="132"/><text x="45.0274%" y="1791.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (127 samples, 0.16%)</title><rect x="44.7839%" y="1765" width="0.1649%" height="15" fill="rgb(227,194,29)" fg:x="34489" fg:w="127"/><text x="45.0339%" y="1775.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (127 samples, 0.16%)</title><rect x="44.7839%" y="1749" width="0.1649%" height="15" fill="rgb(250,76,42)" fg:x="34489" fg:w="127"/><text x="45.0339%" y="1759.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (127 samples, 0.16%)</title><rect x="44.7839%" y="1733" width="0.1649%" height="15" fill="rgb(208,128,8)" fg:x="34489" fg:w="127"/><text x="45.0339%" y="1743.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (125 samples, 0.16%)</title><rect x="44.7865%" y="1717" width="0.1623%" height="15" fill="rgb(229,209,35)" fg:x="34491" fg:w="125"/><text x="45.0365%" y="1727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.03%)</title><rect x="44.9229%" y="1701" width="0.0260%" height="15" fill="rgb(215,39,53)" fg:x="34596" fg:w="20"/><text x="45.1729%" y="1711.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (133 samples, 0.17%)</title><rect x="44.7774%" y="1829" width="0.1727%" height="15" fill="rgb(219,123,41)" fg:x="34484" fg:w="133"/><text x="45.0274%" y="1839.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (140 samples, 0.18%)</title><rect x="44.7761%" y="1861" width="0.1818%" height="15" fill="rgb(212,158,18)" fg:x="34483" fg:w="140"/><text x="45.0261%" y="1871.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (139 samples, 0.18%)</title><rect x="44.7774%" y="1845" width="0.1805%" height="15" fill="rgb(234,196,53)" fg:x="34484" fg:w="139"/><text x="45.0274%" y="1855.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (167 samples, 0.22%)</title><rect x="44.7437%" y="1877" width="0.2168%" height="15" fill="rgb(210,139,12)" fg:x="34458" fg:w="167"/><text x="44.9937%" y="1887.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (12,032 samples, 15.62%)</title><rect x="29.3474%" y="1925" width="15.6235%" height="15" fill="rgb(220,116,54)" fg:x="22601" fg:w="12032"/><text x="29.5974%" y="1935.50">aptos_vm::adapter_common..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (12,032 samples, 15.62%)</title><rect x="29.3474%" y="1909" width="15.6235%" height="15" fill="rgb(247,103,28)" fg:x="22601" fg:w="12032"/><text x="29.5974%" y="1919.50">&lt;aptos_vm::aptos_vm::Apt..</text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (289 samples, 0.38%)</title><rect x="44.5956%" y="1893" width="0.3753%" height="15" fill="rgb(253,156,45)" fg:x="34344" fg:w="289"/><text x="44.8456%" y="1903.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="44.9917%" y="1893" width="0.0182%" height="15" fill="rgb(237,157,52)" fg:x="34649" fg:w="14"/><text x="45.2417%" y="1903.50"></text></g><g><title>__udivti3 (36 samples, 0.05%)</title><rect x="45.0099%" y="1893" width="0.0467%" height="15" fill="rgb(253,112,16)" fg:x="34663" fg:w="36"/><text x="45.2599%" y="1903.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (28 samples, 0.04%)</title><rect x="45.0203%" y="1877" width="0.0364%" height="15" fill="rgb(234,70,18)" fg:x="34671" fg:w="28"/><text x="45.2703%" y="1887.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (28 samples, 0.04%)</title><rect x="45.0203%" y="1861" width="0.0364%" height="15" fill="rgb(247,138,19)" fg:x="34671" fg:w="28"/><text x="45.2703%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="45.0631%" y="1877" width="0.0169%" height="15" fill="rgb(207,171,1)" fg:x="34704" fg:w="13"/><text x="45.3131%" y="1887.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaChangeSet::try_into_write_set_mut (33 samples, 0.04%)</title><rect x="45.0566%" y="1893" width="0.0429%" height="15" fill="rgb(239,213,3)" fg:x="34699" fg:w="33"/><text x="45.3066%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_aggregator::delta_change_set::DeltaOp&gt;&gt; (11 samples, 0.01%)</title><rect x="45.0852%" y="1877" width="0.0143%" height="15" fill="rgb(226,112,4)" fg:x="34721" fg:w="11"/><text x="45.3352%" y="1887.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::into_inner (10 samples, 0.01%)</title><rect x="45.1008%" y="1893" width="0.0130%" height="15" fill="rgb(252,170,12)" fg:x="34733" fg:w="10"/><text x="45.3508%" y="1903.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.01%)</title><rect x="45.1254%" y="1829" width="0.0130%" height="15" fill="rgb(241,106,13)" fg:x="34752" fg:w="10"/><text x="45.3754%" y="1839.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::into_inner (15 samples, 0.02%)</title><rect x="45.1254%" y="1877" width="0.0195%" height="15" fill="rgb(225,73,23)" fg:x="34752" fg:w="15"/><text x="45.3754%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn aptos_types::transaction::change_set::CheckChangeSet&gt;&gt; (15 samples, 0.02%)</title><rect x="45.1254%" y="1861" width="0.0195%" height="15" fill="rgb(251,227,29)" fg:x="34752" fg:w="15"/><text x="45.3754%" y="1871.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="45.1254%" y="1845" width="0.0195%" height="15" fill="rgb(237,144,13)" fg:x="34752" fg:w="15"/><text x="45.3754%" y="1855.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (8 samples, 0.01%)</title><rect x="45.1891%" y="1813" width="0.0104%" height="15" fill="rgb(232,106,46)" fg:x="34801" fg:w="8"/><text x="45.4391%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (8 samples, 0.01%)</title><rect x="45.1891%" y="1797" width="0.0104%" height="15" fill="rgb(245,154,53)" fg:x="34801" fg:w="8"/><text x="45.4391%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="45.1891%" y="1781" width="0.0104%" height="15" fill="rgb(212,119,47)" fg:x="34801" fg:w="8"/><text x="45.4391%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="45.1891%" y="1765" width="0.0104%" height="15" fill="rgb(253,135,25)" fg:x="34801" fg:w="8"/><text x="45.4391%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (15 samples, 0.02%)</title><rect x="45.1826%" y="1829" width="0.0195%" height="15" fill="rgb(253,208,39)" fg:x="34796" fg:w="15"/><text x="45.4326%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (25 samples, 0.03%)</title><rect x="45.1826%" y="1845" width="0.0325%" height="15" fill="rgb(226,64,12)" fg:x="34796" fg:w="25"/><text x="45.4326%" y="1855.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (10 samples, 0.01%)</title><rect x="45.2020%" y="1829" width="0.0130%" height="15" fill="rgb(214,162,37)" fg:x="34811" fg:w="10"/><text x="45.4520%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.05%)</title><rect x="45.1722%" y="1861" width="0.0519%" height="15" fill="rgb(250,104,5)" fg:x="34788" fg:w="40"/><text x="45.4222%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="45.2306%" y="1829" width="0.0104%" height="15" fill="rgb(220,202,50)" fg:x="34833" fg:w="8"/><text x="45.4806%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13 samples, 0.02%)</title><rect x="45.2306%" y="1861" width="0.0169%" height="15" fill="rgb(248,67,38)" fg:x="34833" fg:w="13"/><text x="45.4806%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.02%)</title><rect x="45.2306%" y="1845" width="0.0169%" height="15" fill="rgb(242,94,35)" fg:x="34833" fg:w="13"/><text x="45.4806%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (10 samples, 0.01%)</title><rect x="45.2631%" y="1861" width="0.0130%" height="15" fill="rgb(209,78,37)" fg:x="34858" fg:w="10"/><text x="45.5131%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (33 samples, 0.04%)</title><rect x="45.2761%" y="1861" width="0.0429%" height="15" fill="rgb(230,126,47)" fg:x="34868" fg:w="33"/><text x="45.5261%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (24 samples, 0.03%)</title><rect x="45.2877%" y="1845" width="0.0312%" height="15" fill="rgb(222,110,35)" fg:x="34877" fg:w="24"/><text x="45.5377%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (9 samples, 0.01%)</title><rect x="45.3072%" y="1829" width="0.0117%" height="15" fill="rgb(233,154,20)" fg:x="34892" fg:w="9"/><text x="45.5572%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (9 samples, 0.01%)</title><rect x="45.3072%" y="1813" width="0.0117%" height="15" fill="rgb(223,53,50)" fg:x="34892" fg:w="9"/><text x="45.5572%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (9 samples, 0.01%)</title><rect x="45.3072%" y="1797" width="0.0117%" height="15" fill="rgb(251,27,26)" fg:x="34892" fg:w="9"/><text x="45.5572%" y="1807.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::new (15 samples, 0.02%)</title><rect x="45.3397%" y="1861" width="0.0195%" height="15" fill="rgb(223,189,16)" fg:x="34917" fg:w="15"/><text x="45.5897%" y="1871.50"></text></g><g><title>&lt;aptos_gas::transaction::storage::ChangeSetConfigs as aptos_types::transaction::change_set::CheckChangeSet&gt;::check_change_set (11 samples, 0.01%)</title><rect x="45.3449%" y="1845" width="0.0143%" height="15" fill="rgb(207,5,54)" fg:x="34921" fg:w="11"/><text x="45.5949%" y="1855.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash_change_set (181 samples, 0.24%)</title><rect x="45.1449%" y="1877" width="0.2350%" height="15" fill="rgb(254,124,50)" fg:x="34767" fg:w="181"/><text x="45.3949%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (10 samples, 0.01%)</title><rect x="45.3670%" y="1861" width="0.0130%" height="15" fill="rgb(253,193,24)" fg:x="34938" fg:w="10"/><text x="45.6170%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="45.3670%" y="1845" width="0.0130%" height="15" fill="rgb(235,170,24)" fg:x="34938" fg:w="10"/><text x="45.6170%" y="1855.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash (257 samples, 0.33%)</title><rect x="45.1137%" y="1893" width="0.3337%" height="15" fill="rgb(222,212,52)" fg:x="34743" fg:w="257"/><text x="45.3637%" y="1903.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash_delta_change_set (52 samples, 0.07%)</title><rect x="45.3799%" y="1877" width="0.0675%" height="15" fill="rgb(223,17,45)" fg:x="34948" fg:w="52"/><text x="45.6299%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_aggregator::delta_change_set::DeltaOp&gt;&gt; (12 samples, 0.02%)</title><rect x="45.4319%" y="1861" width="0.0156%" height="15" fill="rgb(227,103,26)" fg:x="34988" fg:w="12"/><text x="45.6819%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="45.4319%" y="1845" width="0.0156%" height="15" fill="rgb(251,151,25)" fg:x="34988" fg:w="12"/><text x="45.6819%" y="1855.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::balance (9 samples, 0.01%)</title><rect x="45.4540%" y="1893" width="0.0117%" height="15" fill="rgb(248,144,29)" fg:x="35005" fg:w="9"/><text x="45.7040%" y="1903.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::change_set_configs (15 samples, 0.02%)</title><rect x="45.4656%" y="1893" width="0.0195%" height="15" fill="rgb(245,97,16)" fg:x="35014" fg:w="15"/><text x="45.7156%" y="1903.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge_write_set_gas (16 samples, 0.02%)</title><rect x="45.4851%" y="1893" width="0.0208%" height="15" fill="rgb(220,200,29)" fg:x="35029" fg:w="16"/><text x="45.7351%" y="1903.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricing::calculate_write_set_gas (16 samples, 0.02%)</title><rect x="45.4851%" y="1877" width="0.0208%" height="15" fill="rgb(206,38,29)" fg:x="35029" fg:w="16"/><text x="45.7351%" y="1887.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricingV2::calculate_write_set_gas (14 samples, 0.02%)</title><rect x="45.4877%" y="1861" width="0.0182%" height="15" fill="rgb(245,19,52)" fg:x="35031" fg:w="14"/><text x="45.7377%" y="1871.50"></text></g><g><title>aptos_crypto::hash::HashValue::to_vec (15 samples, 0.02%)</title><rect x="45.5526%" y="1861" width="0.0195%" height="15" fill="rgb(205,67,43)" fg:x="35081" fg:w="15"/><text x="45.8026%" y="1871.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (131 samples, 0.17%)</title><rect x="45.6150%" y="1749" width="0.1701%" height="15" fill="rgb(217,128,23)" fg:x="35129" fg:w="131"/><text x="45.8650%" y="1759.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (131 samples, 0.17%)</title><rect x="45.6150%" y="1733" width="0.1701%" height="15" fill="rgb(210,109,28)" fg:x="35129" fg:w="131"/><text x="45.8650%" y="1743.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (131 samples, 0.17%)</title><rect x="45.6150%" y="1717" width="0.1701%" height="15" fill="rgb(233,181,7)" fg:x="35129" fg:w="131"/><text x="45.8650%" y="1727.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (131 samples, 0.17%)</title><rect x="45.6150%" y="1701" width="0.1701%" height="15" fill="rgb(244,11,22)" fg:x="35129" fg:w="131"/><text x="45.8650%" y="1711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.03%)</title><rect x="45.7526%" y="1685" width="0.0325%" height="15" fill="rgb(205,124,54)" fg:x="35235" fg:w="25"/><text x="46.0026%" y="1695.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (137 samples, 0.18%)</title><rect x="45.6085%" y="1797" width="0.1779%" height="15" fill="rgb(218,21,27)" fg:x="35124" fg:w="137"/><text x="45.8585%" y="1807.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (135 samples, 0.18%)</title><rect x="45.6111%" y="1781" width="0.1753%" height="15" fill="rgb(224,153,33)" fg:x="35126" fg:w="135"/><text x="45.8611%" y="1791.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (135 samples, 0.18%)</title><rect x="45.6111%" y="1765" width="0.1753%" height="15" fill="rgb(240,219,28)" fg:x="35126" fg:w="135"/><text x="45.8611%" y="1775.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (139 samples, 0.18%)</title><rect x="45.6072%" y="1829" width="0.1805%" height="15" fill="rgb(214,80,29)" fg:x="35123" fg:w="139"/><text x="45.8572%" y="1839.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (139 samples, 0.18%)</title><rect x="45.6072%" y="1813" width="0.1805%" height="15" fill="rgb(247,148,44)" fg:x="35123" fg:w="139"/><text x="45.8572%" y="1823.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as core::default::Default&gt;::default (10 samples, 0.01%)</title><rect x="45.7877%" y="1829" width="0.0130%" height="15" fill="rgb(243,110,30)" fg:x="35262" fg:w="10"/><text x="46.0377%" y="1839.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (28 samples, 0.04%)</title><rect x="45.8188%" y="1637" width="0.0364%" height="15" fill="rgb(243,173,41)" fg:x="35286" fg:w="28"/><text x="46.0688%" y="1647.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (74 samples, 0.10%)</title><rect x="45.8058%" y="1765" width="0.0961%" height="15" fill="rgb(225,160,47)" fg:x="35276" fg:w="74"/><text x="46.0558%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (74 samples, 0.10%)</title><rect x="45.8058%" y="1749" width="0.0961%" height="15" fill="rgb(215,44,21)" fg:x="35276" fg:w="74"/><text x="46.0558%" y="1759.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (71 samples, 0.09%)</title><rect x="45.8097%" y="1733" width="0.0922%" height="15" fill="rgb(248,90,3)" fg:x="35279" fg:w="71"/><text x="46.0597%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (68 samples, 0.09%)</title><rect x="45.8136%" y="1717" width="0.0883%" height="15" fill="rgb(220,196,49)" fg:x="35282" fg:w="68"/><text x="46.0636%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (68 samples, 0.09%)</title><rect x="45.8136%" y="1701" width="0.0883%" height="15" fill="rgb(217,138,14)" fg:x="35282" fg:w="68"/><text x="46.0636%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (68 samples, 0.09%)</title><rect x="45.8136%" y="1685" width="0.0883%" height="15" fill="rgb(219,111,20)" fg:x="35282" fg:w="68"/><text x="46.0636%" y="1695.50"></text></g><g><title>std::io::Write::write_all (67 samples, 0.09%)</title><rect x="45.8149%" y="1669" width="0.0870%" height="15" fill="rgb(218,114,4)" fg:x="35283" fg:w="67"/><text x="46.0649%" y="1679.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (67 samples, 0.09%)</title><rect x="45.8149%" y="1653" width="0.0870%" height="15" fill="rgb(238,133,3)" fg:x="35283" fg:w="67"/><text x="46.0649%" y="1663.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (36 samples, 0.05%)</title><rect x="45.8552%" y="1637" width="0.0467%" height="15" fill="rgb(224,95,0)" fg:x="35314" fg:w="36"/><text x="46.1052%" y="1647.50"></text></g><g><title>tiny_keccak::Buffer::xorin (25 samples, 0.03%)</title><rect x="45.8695%" y="1621" width="0.0325%" height="15" fill="rgb(220,169,35)" fg:x="35325" fg:w="25"/><text x="46.1195%" y="1631.50"></text></g><g><title>tiny_keccak::Buffer::execute (25 samples, 0.03%)</title><rect x="45.8695%" y="1605" width="0.0325%" height="15" fill="rgb(242,116,47)" fg:x="35325" fg:w="25"/><text x="46.1195%" y="1615.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (14 samples, 0.02%)</title><rect x="45.8838%" y="1589" width="0.0182%" height="15" fill="rgb(251,42,20)" fg:x="35336" fg:w="14"/><text x="46.1338%" y="1599.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.01%)</title><rect x="45.8877%" y="1573" width="0.0143%" height="15" fill="rgb(234,7,34)" fg:x="35339" fg:w="11"/><text x="46.1377%" y="1583.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.01%)</title><rect x="45.8877%" y="1557" width="0.0143%" height="15" fill="rgb(243,208,13)" fg:x="35339" fg:w="11"/><text x="46.1377%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (84 samples, 0.11%)</title><rect x="45.8058%" y="1781" width="0.1091%" height="15" fill="rgb(227,33,28)" fg:x="35276" fg:w="84"/><text x="46.0558%" y="1791.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (248 samples, 0.32%)</title><rect x="45.6007%" y="1861" width="0.3220%" height="15" fill="rgb(250,47,37)" fg:x="35118" fg:w="248"/><text x="45.8507%" y="1871.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (247 samples, 0.32%)</title><rect x="45.6020%" y="1845" width="0.3207%" height="15" fill="rgb(235,111,52)" fg:x="35119" fg:w="247"/><text x="45.8520%" y="1855.50"></text></g><g><title>bcs::ser::serialize_into (94 samples, 0.12%)</title><rect x="45.8007%" y="1829" width="0.1221%" height="15" fill="rgb(223,64,28)" fg:x="35272" fg:w="94"/><text x="46.0507%" y="1839.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (94 samples, 0.12%)</title><rect x="45.8007%" y="1813" width="0.1221%" height="15" fill="rgb(236,67,22)" fg:x="35272" fg:w="94"/><text x="46.0507%" y="1823.50"></text></g><g><title>aptos_vm::move_vm_ext::session::_::&lt;impl serde::ser::Serialize for aptos_vm::move_vm_ext::session::SessionId&gt;::serialize (94 samples, 0.12%)</title><rect x="45.8007%" y="1797" width="0.1221%" height="15" fill="rgb(243,79,24)" fg:x="35272" fg:w="94"/><text x="46.0507%" y="1807.50"></text></g><g><title>move_table_extension::NativeTableContext::new (8 samples, 0.01%)</title><rect x="45.9227%" y="1861" width="0.0104%" height="15" fill="rgb(241,225,22)" fg:x="35366" fg:w="8"/><text x="46.1727%" y="1871.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.03%)</title><rect x="45.9721%" y="1845" width="0.0286%" height="15" fill="rgb(228,214,26)" fg:x="35404" fg:w="22"/><text x="46.2221%" y="1855.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.03%)</title><rect x="45.9721%" y="1829" width="0.0286%" height="15" fill="rgb(219,84,52)" fg:x="35404" fg:w="22"/><text x="46.2221%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.03%)</title><rect x="45.9734%" y="1813" width="0.0273%" height="15" fill="rgb(220,12,22)" fg:x="35405" fg:w="21"/><text x="46.2234%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.03%)</title><rect x="45.9734%" y="1797" width="0.0273%" height="15" fill="rgb(219,9,49)" fg:x="35405" fg:w="21"/><text x="46.2234%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.03%)</title><rect x="45.9734%" y="1781" width="0.0273%" height="15" fill="rgb(237,40,43)" fg:x="35405" fg:w="21"/><text x="46.2234%" y="1791.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="45.9902%" y="1765" width="0.0104%" height="15" fill="rgb(212,189,32)" fg:x="35418" fg:w="8"/><text x="46.2402%" y="1775.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="46.0071%" y="1781" width="0.0156%" height="15" fill="rgb(247,48,9)" fg:x="35431" fg:w="12"/><text x="46.2571%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="46.0071%" y="1765" width="0.0156%" height="15" fill="rgb(247,112,3)" fg:x="35431" fg:w="12"/><text x="46.2571%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="46.0071%" y="1749" width="0.0156%" height="15" fill="rgb(243,110,18)" fg:x="35431" fg:w="12"/><text x="46.2571%" y="1759.50"></text></g><g><title>hashbrown::map::make_insert_hash (23 samples, 0.03%)</title><rect x="46.0045%" y="1813" width="0.0299%" height="15" fill="rgb(233,223,44)" fg:x="35429" fg:w="23"/><text x="46.2545%" y="1823.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.03%)</title><rect x="46.0045%" y="1797" width="0.0299%" height="15" fill="rgb(245,160,20)" fg:x="35429" fg:w="23"/><text x="46.2545%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.01%)</title><rect x="46.0344%" y="1813" width="0.0143%" height="15" fill="rgb(225,37,1)" fg:x="35452" fg:w="11"/><text x="46.2844%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.01%)</title><rect x="46.0344%" y="1797" width="0.0143%" height="15" fill="rgb(253,227,39)" fg:x="35452" fg:w="11"/><text x="46.2844%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.01%)</title><rect x="46.0344%" y="1781" width="0.0143%" height="15" fill="rgb(240,179,26)" fg:x="35452" fg:w="11"/><text x="46.2844%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (16 samples, 0.02%)</title><rect x="46.0798%" y="1733" width="0.0208%" height="15" fill="rgb(237,212,23)" fg:x="35487" fg:w="16"/><text x="46.3298%" y="1743.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (16 samples, 0.02%)</title><rect x="46.0798%" y="1717" width="0.0208%" height="15" fill="rgb(221,38,11)" fg:x="35487" fg:w="16"/><text x="46.3298%" y="1727.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.02%)</title><rect x="46.0798%" y="1701" width="0.0208%" height="15" fill="rgb(215,85,6)" fg:x="35487" fg:w="16"/><text x="46.3298%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="46.0798%" y="1685" width="0.0208%" height="15" fill="rgb(239,64,14)" fg:x="35487" fg:w="16"/><text x="46.3298%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (8 samples, 0.01%)</title><rect x="46.1149%" y="1701" width="0.0104%" height="15" fill="rgb(215,150,32)" fg:x="35514" fg:w="8"/><text x="46.3649%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (50 samples, 0.06%)</title><rect x="46.0617%" y="1749" width="0.0649%" height="15" fill="rgb(238,15,13)" fg:x="35473" fg:w="50"/><text x="46.3117%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (16 samples, 0.02%)</title><rect x="46.1058%" y="1733" width="0.0208%" height="15" fill="rgb(251,87,8)" fg:x="35507" fg:w="16"/><text x="46.3558%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (16 samples, 0.02%)</title><rect x="46.1058%" y="1717" width="0.0208%" height="15" fill="rgb(206,86,1)" fg:x="35507" fg:w="16"/><text x="46.3558%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (53 samples, 0.07%)</title><rect x="46.0591%" y="1797" width="0.0688%" height="15" fill="rgb(208,151,45)" fg:x="35471" fg:w="53"/><text x="46.3091%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (53 samples, 0.07%)</title><rect x="46.0591%" y="1781" width="0.0688%" height="15" fill="rgb(231,181,24)" fg:x="35471" fg:w="53"/><text x="46.3091%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (52 samples, 0.07%)</title><rect x="46.0604%" y="1765" width="0.0675%" height="15" fill="rgb(240,106,29)" fg:x="35472" fg:w="52"/><text x="46.3104%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (9 samples, 0.01%)</title><rect x="46.1279%" y="1797" width="0.0117%" height="15" fill="rgb(227,166,11)" fg:x="35524" fg:w="9"/><text x="46.3779%" y="1807.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (472 samples, 0.61%)</title><rect x="45.5306%" y="1893" width="0.6129%" height="15" fill="rgb(254,14,34)" fg:x="35064" fg:w="472"/><text x="45.7806%" y="1903.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (470 samples, 0.61%)</title><rect x="45.5332%" y="1877" width="0.6103%" height="15" fill="rgb(223,222,6)" fg:x="35066" fg:w="470"/><text x="45.7832%" y="1887.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (147 samples, 0.19%)</title><rect x="45.9526%" y="1861" width="0.1909%" height="15" fill="rgb(245,69,24)" fg:x="35389" fg:w="147"/><text x="46.2026%" y="1871.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (110 samples, 0.14%)</title><rect x="46.0006%" y="1845" width="0.1428%" height="15" fill="rgb(213,193,7)" fg:x="35426" fg:w="110"/><text x="46.2506%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (110 samples, 0.14%)</title><rect x="46.0006%" y="1829" width="0.1428%" height="15" fill="rgb(237,92,51)" fg:x="35426" fg:w="110"/><text x="46.2506%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (73 samples, 0.09%)</title><rect x="46.0487%" y="1813" width="0.0948%" height="15" fill="rgb(225,194,6)" fg:x="35463" fg:w="73"/><text x="46.2987%" y="1823.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="46.1655%" y="1861" width="0.0247%" height="15" fill="rgb(205,159,49)" fg:x="35553" fg:w="19"/><text x="46.4155%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="46.1655%" y="1845" width="0.0247%" height="15" fill="rgb(219,69,2)" fg:x="35553" fg:w="19"/><text x="46.4155%" y="1855.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.02%)</title><rect x="46.1746%" y="1829" width="0.0156%" height="15" fill="rgb(215,107,24)" fg:x="35560" fg:w="12"/><text x="46.4246%" y="1839.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (12 samples, 0.02%)</title><rect x="46.1746%" y="1813" width="0.0156%" height="15" fill="rgb(249,208,29)" fg:x="35560" fg:w="12"/><text x="46.4246%" y="1823.50"></text></g><g><title>aptos_types::account_config::resources::transaction_validation::TransactionValidation::module_id (25 samples, 0.03%)</title><rect x="46.1590%" y="1877" width="0.0325%" height="15" fill="rgb(213,147,10)" fg:x="35548" fg:w="25"/><text x="46.4090%" y="1887.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::transaction_validation (20 samples, 0.03%)</title><rect x="46.1915%" y="1877" width="0.0260%" height="15" fill="rgb(254,140,42)" fg:x="35573" fg:w="20"/><text x="46.4415%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="46.2292%" y="1861" width="0.0221%" height="15" fill="rgb(249,9,15)" fg:x="35602" fg:w="17"/><text x="46.4792%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveValue]&gt; (17 samples, 0.02%)</title><rect x="46.2292%" y="1845" width="0.0221%" height="15" fill="rgb(210,19,33)" fg:x="35602" fg:w="17"/><text x="46.4792%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (17 samples, 0.02%)</title><rect x="46.2292%" y="1829" width="0.0221%" height="15" fill="rgb(241,121,22)" fg:x="35602" fg:w="17"/><text x="46.4792%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveValue&gt;&gt; (23 samples, 0.03%)</title><rect x="46.2292%" y="1877" width="0.0299%" height="15" fill="rgb(244,69,52)" fg:x="35602" fg:w="23"/><text x="46.4792%" y="1887.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (20 samples, 0.03%)</title><rect x="46.2642%" y="1877" width="0.0260%" height="15" fill="rgb(244,191,54)" fg:x="35629" fg:w="20"/><text x="46.5142%" y="1887.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue::{{closure}} (12 samples, 0.02%)</title><rect x="46.2746%" y="1861" width="0.0156%" height="15" fill="rgb(250,3,53)" fg:x="35637" fg:w="12"/><text x="46.5246%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::SerializedReturnValues&gt; (12 samples, 0.02%)</title><rect x="46.2746%" y="1845" width="0.0156%" height="15" fill="rgb(205,77,3)" fg:x="35637" fg:w="12"/><text x="46.5246%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.04%)</title><rect x="46.3421%" y="1557" width="0.0403%" height="15" fill="rgb(207,155,3)" fg:x="35689" fg:w="31"/><text x="46.5921%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.04%)</title><rect x="46.3421%" y="1541" width="0.0403%" height="15" fill="rgb(224,79,2)" fg:x="35689" fg:w="31"/><text x="46.5921%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.03%)</title><rect x="46.3512%" y="1525" width="0.0312%" height="15" fill="rgb(243,172,5)" fg:x="35696" fg:w="24"/><text x="46.6012%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.03%)</title><rect x="46.3551%" y="1509" width="0.0273%" height="15" fill="rgb(217,23,43)" fg:x="35699" fg:w="21"/><text x="46.6051%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.03%)</title><rect x="46.3551%" y="1493" width="0.0273%" height="15" fill="rgb(223,109,20)" fg:x="35699" fg:w="21"/><text x="46.6051%" y="1503.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="46.3603%" y="1477" width="0.0221%" height="15" fill="rgb(232,159,21)" fg:x="35703" fg:w="17"/><text x="46.6103%" y="1487.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="46.3668%" y="1461" width="0.0156%" height="15" fill="rgb(219,58,2)" fg:x="35708" fg:w="12"/><text x="46.6168%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (34 samples, 0.04%)</title><rect x="46.3395%" y="1637" width="0.0441%" height="15" fill="rgb(241,56,8)" fg:x="35687" fg:w="34"/><text x="46.5895%" y="1647.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.04%)</title><rect x="46.3395%" y="1621" width="0.0441%" height="15" fill="rgb(249,10,27)" fg:x="35687" fg:w="34"/><text x="46.5895%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.04%)</title><rect x="46.3395%" y="1605" width="0.0441%" height="15" fill="rgb(248,177,5)" fg:x="35687" fg:w="34"/><text x="46.5895%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.04%)</title><rect x="46.3395%" y="1589" width="0.0441%" height="15" fill="rgb(239,12,30)" fg:x="35687" fg:w="34"/><text x="46.5895%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.04%)</title><rect x="46.3395%" y="1573" width="0.0441%" height="15" fill="rgb(229,164,25)" fg:x="35687" fg:w="34"/><text x="46.5895%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.04%)</title><rect x="46.4032%" y="1397" width="0.0441%" height="15" fill="rgb(231,217,50)" fg:x="35736" fg:w="34"/><text x="46.6532%" y="1407.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.04%)</title><rect x="46.4032%" y="1381" width="0.0441%" height="15" fill="rgb(247,99,32)" fg:x="35736" fg:w="34"/><text x="46.6532%" y="1391.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.04%)</title><rect x="46.4032%" y="1365" width="0.0441%" height="15" fill="rgb(240,74,50)" fg:x="35736" fg:w="34"/><text x="46.6532%" y="1375.50"></text></g><g><title>realloc (31 samples, 0.04%)</title><rect x="46.4071%" y="1349" width="0.0403%" height="15" fill="rgb(218,54,8)" fg:x="35739" fg:w="31"/><text x="46.6571%" y="1359.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="46.4239%" y="1333" width="0.0234%" height="15" fill="rgb(227,132,20)" fg:x="35752" fg:w="18"/><text x="46.6739%" y="1343.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="46.4291%" y="1317" width="0.0182%" height="15" fill="rgb(232,134,12)" fg:x="35756" fg:w="14"/><text x="46.6791%" y="1327.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.06%)</title><rect x="46.3980%" y="1413" width="0.0597%" height="15" fill="rgb(250,129,18)" fg:x="35732" fg:w="46"/><text x="46.6480%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (52 samples, 0.07%)</title><rect x="46.3928%" y="1477" width="0.0675%" height="15" fill="rgb(232,129,47)" fg:x="35728" fg:w="52"/><text x="46.6428%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.07%)</title><rect x="46.3941%" y="1461" width="0.0662%" height="15" fill="rgb(230,31,40)" fg:x="35729" fg:w="51"/><text x="46.6441%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.06%)</title><rect x="46.3954%" y="1445" width="0.0649%" height="15" fill="rgb(232,126,10)" fg:x="35730" fg:w="50"/><text x="46.6454%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.06%)</title><rect x="46.3980%" y="1429" width="0.0623%" height="15" fill="rgb(205,46,31)" fg:x="35732" fg:w="48"/><text x="46.6480%" y="1439.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (57 samples, 0.07%)</title><rect x="46.3876%" y="1589" width="0.0740%" height="15" fill="rgb(232,37,37)" fg:x="35724" fg:w="57"/><text x="46.6376%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (57 samples, 0.07%)</title><rect x="46.3876%" y="1573" width="0.0740%" height="15" fill="rgb(240,91,16)" fg:x="35724" fg:w="57"/><text x="46.6376%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (57 samples, 0.07%)</title><rect x="46.3876%" y="1557" width="0.0740%" height="15" fill="rgb(224,160,9)" fg:x="35724" fg:w="57"/><text x="46.6376%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (57 samples, 0.07%)</title><rect x="46.3876%" y="1541" width="0.0740%" height="15" fill="rgb(215,116,14)" fg:x="35724" fg:w="57"/><text x="46.6376%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (57 samples, 0.07%)</title><rect x="46.3876%" y="1525" width="0.0740%" height="15" fill="rgb(235,46,36)" fg:x="35724" fg:w="57"/><text x="46.6376%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (57 samples, 0.07%)</title><rect x="46.3876%" y="1509" width="0.0740%" height="15" fill="rgb(238,39,28)" fg:x="35724" fg:w="57"/><text x="46.6376%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (57 samples, 0.07%)</title><rect x="46.3876%" y="1493" width="0.0740%" height="15" fill="rgb(242,125,29)" fg:x="35724" fg:w="57"/><text x="46.6376%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (128 samples, 0.17%)</title><rect x="46.2993%" y="1797" width="0.1662%" height="15" fill="rgb(238,211,30)" fg:x="35656" fg:w="128"/><text x="46.5493%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (128 samples, 0.17%)</title><rect x="46.2993%" y="1781" width="0.1662%" height="15" fill="rgb(227,201,28)" fg:x="35656" fg:w="128"/><text x="46.5493%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.17%)</title><rect x="46.2993%" y="1765" width="0.1662%" height="15" fill="rgb(238,77,29)" fg:x="35656" fg:w="128"/><text x="46.5493%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (128 samples, 0.17%)</title><rect x="46.2993%" y="1749" width="0.1662%" height="15" fill="rgb(213,221,40)" fg:x="35656" fg:w="128"/><text x="46.5493%" y="1759.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (128 samples, 0.17%)</title><rect x="46.2993%" y="1733" width="0.1662%" height="15" fill="rgb(226,220,44)" fg:x="35656" fg:w="128"/><text x="46.5493%" y="1743.50"></text></g><g><title>move_core_types::value::serialize_values::{{closure}} (127 samples, 0.16%)</title><rect x="46.3006%" y="1717" width="0.1649%" height="15" fill="rgb(228,90,23)" fg:x="35657" fg:w="127"/><text x="46.5506%" y="1727.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (121 samples, 0.16%)</title><rect x="46.3084%" y="1701" width="0.1571%" height="15" fill="rgb(235,72,29)" fg:x="35663" fg:w="121"/><text x="46.5584%" y="1711.50"></text></g><g><title>bcs::ser::to_bytes (116 samples, 0.15%)</title><rect x="46.3149%" y="1685" width="0.1506%" height="15" fill="rgb(248,117,39)" fg:x="35668" fg:w="116"/><text x="46.5649%" y="1695.50"></text></g><g><title>bcs::ser::serialize_into (111 samples, 0.14%)</title><rect x="46.3214%" y="1669" width="0.1441%" height="15" fill="rgb(225,43,28)" fg:x="35673" fg:w="111"/><text x="46.5714%" y="1679.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (111 samples, 0.14%)</title><rect x="46.3214%" y="1653" width="0.1441%" height="15" fill="rgb(240,93,4)" fg:x="35673" fg:w="111"/><text x="46.5714%" y="1663.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (63 samples, 0.08%)</title><rect x="46.3837%" y="1637" width="0.0818%" height="15" fill="rgb(234,178,27)" fg:x="35721" fg:w="63"/><text x="46.6337%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (63 samples, 0.08%)</title><rect x="46.3837%" y="1621" width="0.0818%" height="15" fill="rgb(254,88,22)" fg:x="35721" fg:w="63"/><text x="46.6337%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (60 samples, 0.08%)</title><rect x="46.3876%" y="1605" width="0.0779%" height="15" fill="rgb(240,206,50)" fg:x="35724" fg:w="60"/><text x="46.6376%" y="1615.50"></text></g><g><title>move_core_types::value::serialize_values (134 samples, 0.17%)</title><rect x="46.2928%" y="1877" width="0.1740%" height="15" fill="rgb(249,103,8)" fg:x="35651" fg:w="134"/><text x="46.5428%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (130 samples, 0.17%)</title><rect x="46.2980%" y="1861" width="0.1688%" height="15" fill="rgb(241,178,36)" fg:x="35655" fg:w="130"/><text x="46.5480%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (130 samples, 0.17%)</title><rect x="46.2980%" y="1845" width="0.1688%" height="15" fill="rgb(246,110,15)" fg:x="35655" fg:w="130"/><text x="46.5480%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (130 samples, 0.17%)</title><rect x="46.2980%" y="1829" width="0.1688%" height="15" fill="rgb(207,14,43)" fg:x="35655" fg:w="130"/><text x="46.5480%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (129 samples, 0.17%)</title><rect x="46.2993%" y="1813" width="0.1675%" height="15" fill="rgb(253,219,19)" fg:x="35656" fg:w="129"/><text x="46.5493%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.03%)</title><rect x="46.4954%" y="1829" width="0.0312%" height="15" fill="rgb(216,126,5)" fg:x="35807" fg:w="24"/><text x="46.7454%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.03%)</title><rect x="46.4954%" y="1813" width="0.0312%" height="15" fill="rgb(218,78,42)" fg:x="35807" fg:w="24"/><text x="46.7454%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.03%)</title><rect x="46.4954%" y="1797" width="0.0312%" height="15" fill="rgb(215,154,40)" fg:x="35807" fg:w="24"/><text x="46.7454%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (24 samples, 0.03%)</title><rect x="46.4954%" y="1781" width="0.0312%" height="15" fill="rgb(235,129,32)" fg:x="35807" fg:w="24"/><text x="46.7454%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (24 samples, 0.03%)</title><rect x="46.4954%" y="1765" width="0.0312%" height="15" fill="rgb(218,51,8)" fg:x="35807" fg:w="24"/><text x="46.7454%" y="1775.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (24 samples, 0.03%)</title><rect x="46.4954%" y="1749" width="0.0312%" height="15" fill="rgb(245,48,4)" fg:x="35807" fg:w="24"/><text x="46.7454%" y="1759.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (40 samples, 0.05%)</title><rect x="46.4889%" y="1845" width="0.0519%" height="15" fill="rgb(250,175,12)" fg:x="35802" fg:w="40"/><text x="46.7389%" y="1855.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_defs (11 samples, 0.01%)</title><rect x="46.5265%" y="1829" width="0.0143%" height="15" fill="rgb(237,95,40)" fg:x="35831" fg:w="11"/><text x="46.7765%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.02%)</title><rect x="46.6083%" y="1621" width="0.0156%" height="15" fill="rgb(244,120,0)" fg:x="35894" fg:w="12"/><text x="46.8583%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="46.6096%" y="1605" width="0.0143%" height="15" fill="rgb(241,19,42)" fg:x="35895" fg:w="11"/><text x="46.8596%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="46.6122%" y="1589" width="0.0117%" height="15" fill="rgb(217,174,48)" fg:x="35897" fg:w="9"/><text x="46.8622%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (8 samples, 0.01%)</title><rect x="46.6135%" y="1573" width="0.0104%" height="15" fill="rgb(239,36,38)" fg:x="35898" fg:w="8"/><text x="46.8635%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (23 samples, 0.03%)</title><rect x="46.6083%" y="1653" width="0.0299%" height="15" fill="rgb(220,63,49)" fg:x="35894" fg:w="23"/><text x="46.8583%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="46.6083%" y="1637" width="0.0299%" height="15" fill="rgb(240,101,13)" fg:x="35894" fg:w="23"/><text x="46.8583%" y="1647.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (11 samples, 0.01%)</title><rect x="46.6239%" y="1621" width="0.0143%" height="15" fill="rgb(209,184,51)" fg:x="35906" fg:w="11"/><text x="46.8739%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="46.6083%" y="1669" width="0.0325%" height="15" fill="rgb(206,136,39)" fg:x="35894" fg:w="25"/><text x="46.8583%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (29 samples, 0.04%)</title><rect x="46.6408%" y="1589" width="0.0377%" height="15" fill="rgb(254,47,45)" fg:x="35919" fg:w="29"/><text x="46.8908%" y="1599.50"></text></g><g><title>alloc::alloc::Global::grow_impl (29 samples, 0.04%)</title><rect x="46.6408%" y="1573" width="0.0377%" height="15" fill="rgb(252,103,20)" fg:x="35919" fg:w="29"/><text x="46.8908%" y="1583.50"></text></g><g><title>alloc::alloc::realloc (29 samples, 0.04%)</title><rect x="46.6408%" y="1557" width="0.0377%" height="15" fill="rgb(230,69,12)" fg:x="35919" fg:w="29"/><text x="46.8908%" y="1567.50"></text></g><g><title>realloc (27 samples, 0.04%)</title><rect x="46.6434%" y="1541" width="0.0351%" height="15" fill="rgb(219,2,28)" fg:x="35921" fg:w="27"/><text x="46.8934%" y="1551.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="46.6499%" y="1525" width="0.0286%" height="15" fill="rgb(210,9,12)" fg:x="35926" fg:w="22"/><text x="46.8999%" y="1535.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="46.6512%" y="1509" width="0.0273%" height="15" fill="rgb(235,99,33)" fg:x="35927" fg:w="21"/><text x="46.9012%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.04%)</title><rect x="46.6408%" y="1669" width="0.0390%" height="15" fill="rgb(230,11,38)" fg:x="35919" fg:w="30"/><text x="46.8908%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.04%)</title><rect x="46.6408%" y="1653" width="0.0390%" height="15" fill="rgb(217,129,0)" fg:x="35919" fg:w="30"/><text x="46.8908%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.04%)</title><rect x="46.6408%" y="1637" width="0.0390%" height="15" fill="rgb(222,198,4)" fg:x="35919" fg:w="30"/><text x="46.8908%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.04%)</title><rect x="46.6408%" y="1621" width="0.0390%" height="15" fill="rgb(246,170,27)" fg:x="35919" fg:w="30"/><text x="46.8908%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.04%)</title><rect x="46.6408%" y="1605" width="0.0390%" height="15" fill="rgb(229,17,28)" fg:x="35919" fg:w="30"/><text x="46.8908%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 0.08%)</title><rect x="46.6057%" y="1701" width="0.0753%" height="15" fill="rgb(233,198,48)" fg:x="35892" fg:w="58"/><text x="46.8557%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (57 samples, 0.07%)</title><rect x="46.6070%" y="1685" width="0.0740%" height="15" fill="rgb(238,103,23)" fg:x="35893" fg:w="57"/><text x="46.8570%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (26 samples, 0.03%)</title><rect x="46.6823%" y="1685" width="0.0338%" height="15" fill="rgb(206,91,41)" fg:x="35951" fg:w="26"/><text x="46.9323%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="46.6823%" y="1669" width="0.0338%" height="15" fill="rgb(227,34,25)" fg:x="35951" fg:w="26"/><text x="46.9323%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="46.6823%" y="1653" width="0.0338%" height="15" fill="rgb(210,110,44)" fg:x="35951" fg:w="26"/><text x="46.9323%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.03%)</title><rect x="46.6836%" y="1637" width="0.0325%" height="15" fill="rgb(216,189,8)" fg:x="35952" fg:w="25"/><text x="46.9336%" y="1647.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (24 samples, 0.03%)</title><rect x="46.6849%" y="1621" width="0.0312%" height="15" fill="rgb(234,9,46)" fg:x="35953" fg:w="24"/><text x="46.9349%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (24 samples, 0.03%)</title><rect x="46.6849%" y="1605" width="0.0312%" height="15" fill="rgb(251,200,5)" fg:x="35953" fg:w="24"/><text x="46.9349%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (15 samples, 0.02%)</title><rect x="46.6966%" y="1589" width="0.0195%" height="15" fill="rgb(238,165,37)" fg:x="35962" fg:w="15"/><text x="46.9466%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (12 samples, 0.02%)</title><rect x="46.7005%" y="1573" width="0.0156%" height="15" fill="rgb(232,77,38)" fg:x="35965" fg:w="12"/><text x="46.9505%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.04%)</title><rect x="46.6810%" y="1701" width="0.0416%" height="15" fill="rgb(253,179,33)" fg:x="35950" fg:w="32"/><text x="46.9310%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (129 samples, 0.17%)</title><rect x="46.5603%" y="1829" width="0.1675%" height="15" fill="rgb(240,13,35)" fg:x="35857" fg:w="129"/><text x="46.8103%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (129 samples, 0.17%)</title><rect x="46.5603%" y="1813" width="0.1675%" height="15" fill="rgb(242,150,49)" fg:x="35857" fg:w="129"/><text x="46.8103%" y="1823.50"></text></g><g><title>core::iter::adapters::try_process (128 samples, 0.17%)</title><rect x="46.5616%" y="1797" width="0.1662%" height="15" fill="rgb(237,176,28)" fg:x="35858" fg:w="128"/><text x="46.8116%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (118 samples, 0.15%)</title><rect x="46.5746%" y="1781" width="0.1532%" height="15" fill="rgb(214,176,33)" fg:x="35868" fg:w="118"/><text x="46.8246%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (118 samples, 0.15%)</title><rect x="46.5746%" y="1765" width="0.1532%" height="15" fill="rgb(214,25,12)" fg:x="35868" fg:w="118"/><text x="46.8246%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (118 samples, 0.15%)</title><rect x="46.5746%" y="1749" width="0.1532%" height="15" fill="rgb(238,190,20)" fg:x="35868" fg:w="118"/><text x="46.8246%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (112 samples, 0.15%)</title><rect x="46.5824%" y="1733" width="0.1454%" height="15" fill="rgb(208,11,19)" fg:x="35874" fg:w="112"/><text x="46.8324%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (95 samples, 0.12%)</title><rect x="46.6044%" y="1717" width="0.1234%" height="15" fill="rgb(239,90,4)" fg:x="35891" fg:w="95"/><text x="46.8544%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_core_types::language_storage::ModuleId&gt;&gt; (8 samples, 0.01%)</title><rect x="46.7563%" y="1813" width="0.0104%" height="15" fill="rgb(248,110,3)" fg:x="36008" fg:w="8"/><text x="47.0063%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,alloc::collections::btree::set_val::SetValZST&gt;&gt; (8 samples, 0.01%)</title><rect x="46.7563%" y="1797" width="0.0104%" height="15" fill="rgb(210,41,30)" fg:x="36008" fg:w="8"/><text x="47.0063%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="46.7563%" y="1781" width="0.0104%" height="15" fill="rgb(239,36,8)" fg:x="36008" fg:w="8"/><text x="47.0063%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="46.7797%" y="1749" width="0.0117%" height="15" fill="rgb(237,201,47)" fg:x="36026" fg:w="9"/><text x="47.0297%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.01%)</title><rect x="46.7797%" y="1733" width="0.0117%" height="15" fill="rgb(224,140,29)" fg:x="36026" fg:w="9"/><text x="47.0297%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.01%)</title><rect x="46.7797%" y="1717" width="0.0117%" height="15" fill="rgb(231,209,17)" fg:x="36026" fg:w="9"/><text x="47.0297%" y="1727.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (13 samples, 0.02%)</title><rect x="46.7758%" y="1797" width="0.0169%" height="15" fill="rgb(249,196,1)" fg:x="36023" fg:w="13"/><text x="47.0258%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.02%)</title><rect x="46.7758%" y="1781" width="0.0169%" height="15" fill="rgb(223,207,51)" fg:x="36023" fg:w="13"/><text x="47.0258%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (12 samples, 0.02%)</title><rect x="46.7771%" y="1765" width="0.0156%" height="15" fill="rgb(210,14,40)" fg:x="36024" fg:w="12"/><text x="47.0271%" y="1775.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.01%)</title><rect x="46.8096%" y="1717" width="0.0143%" height="15" fill="rgb(250,20,52)" fg:x="36049" fg:w="11"/><text x="47.0596%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="46.8096%" y="1701" width="0.0143%" height="15" fill="rgb(241,46,11)" fg:x="36049" fg:w="11"/><text x="47.0596%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.01%)</title><rect x="46.8122%" y="1685" width="0.0117%" height="15" fill="rgb(219,105,5)" fg:x="36051" fg:w="9"/><text x="47.0622%" y="1695.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="46.8122%" y="1669" width="0.0117%" height="15" fill="rgb(252,77,35)" fg:x="36051" fg:w="9"/><text x="47.0622%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="46.8252%" y="1669" width="0.0156%" height="15" fill="rgb(243,119,2)" fg:x="36061" fg:w="12"/><text x="47.0752%" y="1679.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="46.8252%" y="1653" width="0.0156%" height="15" fill="rgb(206,82,28)" fg:x="36061" fg:w="12"/><text x="47.0752%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (12 samples, 0.02%)</title><rect x="46.8252%" y="1637" width="0.0156%" height="15" fill="rgb(227,120,12)" fg:x="36061" fg:w="12"/><text x="47.0752%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (80 samples, 0.10%)</title><rect x="46.7421%" y="1829" width="0.1039%" height="15" fill="rgb(229,134,41)" fg:x="35997" fg:w="80"/><text x="46.9921%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (61 samples, 0.08%)</title><rect x="46.7667%" y="1813" width="0.0792%" height="15" fill="rgb(239,96,32)" fg:x="36016" fg:w="61"/><text x="47.0167%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (36 samples, 0.05%)</title><rect x="46.7992%" y="1797" width="0.0467%" height="15" fill="rgb(225,46,27)" fg:x="36041" fg:w="36"/><text x="47.0492%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (29 samples, 0.04%)</title><rect x="46.8083%" y="1781" width="0.0377%" height="15" fill="rgb(215,168,2)" fg:x="36048" fg:w="29"/><text x="47.0583%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (29 samples, 0.04%)</title><rect x="46.8083%" y="1765" width="0.0377%" height="15" fill="rgb(207,170,52)" fg:x="36048" fg:w="29"/><text x="47.0583%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (29 samples, 0.04%)</title><rect x="46.8083%" y="1749" width="0.0377%" height="15" fill="rgb(237,198,36)" fg:x="36048" fg:w="29"/><text x="47.0583%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.04%)</title><rect x="46.8083%" y="1733" width="0.0377%" height="15" fill="rgb(213,27,14)" fg:x="36048" fg:w="29"/><text x="47.0583%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.02%)</title><rect x="46.8239%" y="1717" width="0.0221%" height="15" fill="rgb(218,77,5)" fg:x="36060" fg:w="17"/><text x="47.0739%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="46.8239%" y="1701" width="0.0221%" height="15" fill="rgb(230,219,39)" fg:x="36060" fg:w="17"/><text x="47.0739%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.02%)</title><rect x="46.8239%" y="1685" width="0.0221%" height="15" fill="rgb(245,177,7)" fg:x="36060" fg:w="17"/><text x="47.0739%" y="1695.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.01%)</title><rect x="46.8615%" y="1733" width="0.0143%" height="15" fill="rgb(246,44,46)" fg:x="36089" fg:w="11"/><text x="47.1115%" y="1743.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="46.8615%" y="1717" width="0.0143%" height="15" fill="rgb(207,173,15)" fg:x="36089" fg:w="11"/><text x="47.1115%" y="1727.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="46.8654%" y="1701" width="0.0104%" height="15" fill="rgb(245,170,50)" fg:x="36092" fg:w="8"/><text x="47.1154%" y="1711.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="46.8654%" y="1685" width="0.0104%" height="15" fill="rgb(233,156,21)" fg:x="36092" fg:w="8"/><text x="47.1154%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.01%)</title><rect x="46.8654%" y="1669" width="0.0104%" height="15" fill="rgb(253,146,27)" fg:x="36092" fg:w="8"/><text x="47.1154%" y="1679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="46.8654%" y="1653" width="0.0104%" height="15" fill="rgb(247,66,29)" fg:x="36092" fg:w="8"/><text x="47.1154%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="46.8654%" y="1637" width="0.0104%" height="15" fill="rgb(218,207,26)" fg:x="36092" fg:w="8"/><text x="47.1154%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="46.8654%" y="1621" width="0.0104%" height="15" fill="rgb(234,93,26)" fg:x="36092" fg:w="8"/><text x="47.1154%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.01%)</title><rect x="46.8784%" y="1685" width="0.0130%" height="15" fill="rgb(214,75,48)" fg:x="36102" fg:w="10"/><text x="47.1284%" y="1695.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.01%)</title><rect x="46.8784%" y="1669" width="0.0130%" height="15" fill="rgb(229,119,22)" fg:x="36102" fg:w="10"/><text x="47.1284%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (33 samples, 0.04%)</title><rect x="46.8563%" y="1813" width="0.0429%" height="15" fill="rgb(226,153,19)" fg:x="36085" fg:w="33"/><text x="47.1063%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (33 samples, 0.04%)</title><rect x="46.8563%" y="1797" width="0.0429%" height="15" fill="rgb(220,204,36)" fg:x="36085" fg:w="33"/><text x="47.1063%" y="1807.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 0.04%)</title><rect x="46.8563%" y="1781" width="0.0429%" height="15" fill="rgb(253,181,43)" fg:x="36085" fg:w="33"/><text x="47.1063%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 0.04%)</title><rect x="46.8563%" y="1765" width="0.0429%" height="15" fill="rgb(211,41,51)" fg:x="36085" fg:w="33"/><text x="47.1063%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.04%)</title><rect x="46.8563%" y="1749" width="0.0429%" height="15" fill="rgb(207,215,0)" fg:x="36085" fg:w="33"/><text x="47.1063%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.02%)</title><rect x="46.8758%" y="1733" width="0.0234%" height="15" fill="rgb(212,153,10)" fg:x="36100" fg:w="18"/><text x="47.1258%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.02%)</title><rect x="46.8758%" y="1717" width="0.0234%" height="15" fill="rgb(251,171,36)" fg:x="36100" fg:w="18"/><text x="47.1258%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.02%)</title><rect x="46.8758%" y="1701" width="0.0234%" height="15" fill="rgb(225,219,41)" fg:x="36100" fg:w="18"/><text x="47.1258%" y="1711.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="46.8992%" y="1749" width="0.0169%" height="15" fill="rgb(208,200,1)" fg:x="36118" fg:w="13"/><text x="47.1492%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="46.8992%" y="1733" width="0.0169%" height="15" fill="rgb(206,75,47)" fg:x="36118" fg:w="13"/><text x="47.1492%" y="1743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.01%)</title><rect x="46.9018%" y="1717" width="0.0143%" height="15" fill="rgb(248,3,16)" fg:x="36120" fg:w="11"/><text x="47.1518%" y="1727.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="46.9018%" y="1701" width="0.0143%" height="15" fill="rgb(242,157,36)" fg:x="36120" fg:w="11"/><text x="47.1518%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (293 samples, 0.38%)</title><rect x="46.5408%" y="1845" width="0.3805%" height="15" fill="rgb(215,175,11)" fg:x="35842" fg:w="293"/><text x="46.7908%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (55 samples, 0.07%)</title><rect x="46.8498%" y="1829" width="0.0714%" height="15" fill="rgb(252,222,22)" fg:x="36080" fg:w="55"/><text x="47.0998%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (17 samples, 0.02%)</title><rect x="46.8992%" y="1813" width="0.0221%" height="15" fill="rgb(250,121,35)" fg:x="36118" fg:w="17"/><text x="47.1492%" y="1823.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.02%)</title><rect x="46.8992%" y="1797" width="0.0221%" height="15" fill="rgb(233,120,49)" fg:x="36118" fg:w="17"/><text x="47.1492%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.02%)</title><rect x="46.8992%" y="1781" width="0.0221%" height="15" fill="rgb(205,201,14)" fg:x="36118" fg:w="17"/><text x="47.1492%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.02%)</title><rect x="46.8992%" y="1765" width="0.0221%" height="15" fill="rgb(219,58,45)" fg:x="36118" fg:w="17"/><text x="47.1492%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="46.9303%" y="1813" width="0.0130%" height="15" fill="rgb(251,65,12)" fg:x="36142" fg:w="10"/><text x="47.1803%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="46.9303%" y="1797" width="0.0130%" height="15" fill="rgb(224,47,31)" fg:x="36142" fg:w="10"/><text x="47.1803%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="46.9329%" y="1781" width="0.0104%" height="15" fill="rgb(233,74,26)" fg:x="36144" fg:w="8"/><text x="47.1829%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.03%)</title><rect x="46.9940%" y="1701" width="0.0312%" height="15" fill="rgb(231,211,31)" fg:x="36191" fg:w="24"/><text x="47.2440%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.03%)</title><rect x="46.9940%" y="1685" width="0.0312%" height="15" fill="rgb(239,167,5)" fg:x="36191" fg:w="24"/><text x="47.2440%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.03%)</title><rect x="46.9953%" y="1669" width="0.0299%" height="15" fill="rgb(241,85,0)" fg:x="36192" fg:w="23"/><text x="47.2453%" y="1679.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.03%)</title><rect x="46.9992%" y="1653" width="0.0260%" height="15" fill="rgb(229,130,21)" fg:x="36195" fg:w="20"/><text x="47.2492%" y="1663.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (19 samples, 0.02%)</title><rect x="47.0005%" y="1637" width="0.0247%" height="15" fill="rgb(254,84,49)" fg:x="36196" fg:w="19"/><text x="47.2505%" y="1647.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (13 samples, 0.02%)</title><rect x="47.0083%" y="1621" width="0.0169%" height="15" fill="rgb(235,85,21)" fg:x="36202" fg:w="13"/><text x="47.2583%" y="1631.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (10 samples, 0.01%)</title><rect x="47.0122%" y="1605" width="0.0130%" height="15" fill="rgb(246,128,52)" fg:x="36205" fg:w="10"/><text x="47.2622%" y="1615.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (26 samples, 0.03%)</title><rect x="46.9940%" y="1717" width="0.0338%" height="15" fill="rgb(243,114,49)" fg:x="36191" fg:w="26"/><text x="47.2440%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="47.0277%" y="1717" width="0.0117%" height="15" fill="rgb(240,224,22)" fg:x="36217" fg:w="9"/><text x="47.2777%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (95 samples, 0.12%)</title><rect x="46.9303%" y="1829" width="0.1234%" height="15" fill="rgb(247,201,52)" fg:x="36142" fg:w="95"/><text x="47.1803%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (85 samples, 0.11%)</title><rect x="46.9433%" y="1813" width="0.1104%" height="15" fill="rgb(231,70,45)" fg:x="36152" fg:w="85"/><text x="47.1933%" y="1823.50"></text></g><g><title>core::iter::adapters::try_process (84 samples, 0.11%)</title><rect x="46.9446%" y="1797" width="0.1091%" height="15" fill="rgb(217,215,20)" fg:x="36153" fg:w="84"/><text x="47.1946%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (70 samples, 0.09%)</title><rect x="46.9628%" y="1781" width="0.0909%" height="15" fill="rgb(226,170,30)" fg:x="36167" fg:w="70"/><text x="47.2128%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (70 samples, 0.09%)</title><rect x="46.9628%" y="1765" width="0.0909%" height="15" fill="rgb(220,190,43)" fg:x="36167" fg:w="70"/><text x="47.2128%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (70 samples, 0.09%)</title><rect x="46.9628%" y="1749" width="0.0909%" height="15" fill="rgb(218,20,18)" fg:x="36167" fg:w="70"/><text x="47.2128%" y="1759.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (65 samples, 0.08%)</title><rect x="46.9693%" y="1733" width="0.0844%" height="15" fill="rgb(245,37,26)" fg:x="36172" fg:w="65"/><text x="47.2193%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="47.0394%" y="1717" width="0.0143%" height="15" fill="rgb(241,127,29)" fg:x="36226" fg:w="11"/><text x="47.2894%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="47.0394%" y="1701" width="0.0143%" height="15" fill="rgb(241,33,26)" fg:x="36226" fg:w="11"/><text x="47.2894%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (11 samples, 0.01%)</title><rect x="47.0394%" y="1685" width="0.0143%" height="15" fill="rgb(220,106,21)" fg:x="36226" fg:w="11"/><text x="47.2894%" y="1695.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="47.0394%" y="1669" width="0.0143%" height="15" fill="rgb(225,125,35)" fg:x="36226" fg:w="11"/><text x="47.2894%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="47.0537%" y="1797" width="0.0130%" height="15" fill="rgb(248,80,22)" fg:x="36237" fg:w="10"/><text x="47.3037%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (10 samples, 0.01%)</title><rect x="47.0537%" y="1781" width="0.0130%" height="15" fill="rgb(231,117,39)" fg:x="36237" fg:w="10"/><text x="47.3037%" y="1791.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="47.0537%" y="1829" width="0.0234%" height="15" fill="rgb(239,183,16)" fg:x="36237" fg:w="18"/><text x="47.3037%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (18 samples, 0.02%)</title><rect x="47.0537%" y="1813" width="0.0234%" height="15" fill="rgb(221,61,19)" fg:x="36237" fg:w="18"/><text x="47.3037%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="47.0667%" y="1797" width="0.0104%" height="15" fill="rgb(239,196,44)" fg:x="36247" fg:w="8"/><text x="47.3167%" y="1807.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.05%)</title><rect x="47.1498%" y="1749" width="0.0545%" height="15" fill="rgb(206,113,19)" fg:x="36311" fg:w="42"/><text x="47.3998%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (27 samples, 0.04%)</title><rect x="47.1693%" y="1733" width="0.0351%" height="15" fill="rgb(245,114,12)" fg:x="36326" fg:w="27"/><text x="47.4193%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (21 samples, 0.03%)</title><rect x="47.1771%" y="1717" width="0.0273%" height="15" fill="rgb(247,89,39)" fg:x="36332" fg:w="21"/><text x="47.4271%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (21 samples, 0.03%)</title><rect x="47.1771%" y="1701" width="0.0273%" height="15" fill="rgb(213,85,14)" fg:x="36332" fg:w="21"/><text x="47.4271%" y="1711.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (44 samples, 0.06%)</title><rect x="47.1498%" y="1797" width="0.0571%" height="15" fill="rgb(249,206,33)" fg:x="36311" fg:w="44"/><text x="47.3998%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;,move_vm_runtime::interpreter::Interpreter::execute_main&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (44 samples, 0.06%)</title><rect x="47.1498%" y="1781" width="0.0571%" height="15" fill="rgb(235,167,47)" fg:x="36311" fg:w="44"/><text x="47.3998%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (44 samples, 0.06%)</title><rect x="47.1498%" y="1765" width="0.0571%" height="15" fill="rgb(217,177,16)" fg:x="36311" fg:w="44"/><text x="47.3998%" y="1775.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="47.2147%" y="1797" width="0.0234%" height="15" fill="rgb(250,228,29)" fg:x="36361" fg:w="18"/><text x="47.4647%" y="1807.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="47.2251%" y="1781" width="0.0130%" height="15" fill="rgb(216,195,42)" fg:x="36369" fg:w="10"/><text x="47.4751%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (19 samples, 0.02%)</title><rect x="47.2381%" y="1797" width="0.0247%" height="15" fill="rgb(232,192,32)" fg:x="36379" fg:w="19"/><text x="47.4881%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="47.2654%" y="1781" width="0.0117%" height="15" fill="rgb(211,8,47)" fg:x="36400" fg:w="9"/><text x="47.5154%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (17 samples, 0.02%)</title><rect x="47.2654%" y="1797" width="0.0221%" height="15" fill="rgb(251,201,9)" fg:x="36400" fg:w="17"/><text x="47.5154%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.01%)</title><rect x="47.2770%" y="1781" width="0.0104%" height="15" fill="rgb(206,185,47)" fg:x="36409" fg:w="8"/><text x="47.5270%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="47.2770%" y="1765" width="0.0104%" height="15" fill="rgb(245,54,32)" fg:x="36409" fg:w="8"/><text x="47.5270%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (8 samples, 0.01%)</title><rect x="47.3030%" y="1781" width="0.0104%" height="15" fill="rgb(208,1,8)" fg:x="36429" fg:w="8"/><text x="47.5530%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="47.3030%" y="1765" width="0.0104%" height="15" fill="rgb(228,57,24)" fg:x="36429" fg:w="8"/><text x="47.5530%" y="1775.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="47.3602%" y="1701" width="0.0104%" height="15" fill="rgb(251,24,8)" fg:x="36473" fg:w="8"/><text x="47.6102%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.08%)</title><rect x="47.3134%" y="1765" width="0.0779%" height="15" fill="rgb(236,196,50)" fg:x="36437" fg:w="60"/><text x="47.5634%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (60 samples, 0.08%)</title><rect x="47.3134%" y="1749" width="0.0779%" height="15" fill="rgb(246,222,29)" fg:x="36437" fg:w="60"/><text x="47.5634%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (53 samples, 0.07%)</title><rect x="47.3225%" y="1733" width="0.0688%" height="15" fill="rgb(211,34,40)" fg:x="36444" fg:w="53"/><text x="47.5725%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (25 samples, 0.03%)</title><rect x="47.3589%" y="1717" width="0.0325%" height="15" fill="rgb(210,66,51)" fg:x="36472" fg:w="25"/><text x="47.6089%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (16 samples, 0.02%)</title><rect x="47.3705%" y="1701" width="0.0208%" height="15" fill="rgb(250,56,43)" fg:x="36481" fg:w="16"/><text x="47.6205%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (67 samples, 0.09%)</title><rect x="47.3134%" y="1781" width="0.0870%" height="15" fill="rgb(240,111,50)" fg:x="36437" fg:w="67"/><text x="47.5634%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (17 samples, 0.02%)</title><rect x="47.4043%" y="1749" width="0.0221%" height="15" fill="rgb(209,117,13)" fg:x="36507" fg:w="17"/><text x="47.6543%" y="1759.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="47.4056%" y="1733" width="0.0208%" height="15" fill="rgb(232,164,45)" fg:x="36508" fg:w="16"/><text x="47.6556%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (8 samples, 0.01%)</title><rect x="47.4160%" y="1717" width="0.0104%" height="15" fill="rgb(205,69,32)" fg:x="36516" fg:w="8"/><text x="47.6660%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="47.4004%" y="1765" width="0.0429%" height="15" fill="rgb(240,147,45)" fg:x="36504" fg:w="33"/><text x="47.6504%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (13 samples, 0.02%)</title><rect x="47.4264%" y="1749" width="0.0169%" height="15" fill="rgb(221,94,48)" fg:x="36524" fg:w="13"/><text x="47.6764%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="47.4601%" y="1685" width="0.0182%" height="15" fill="rgb(249,209,17)" fg:x="36550" fg:w="14"/><text x="47.7101%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (14 samples, 0.02%)</title><rect x="47.4601%" y="1669" width="0.0182%" height="15" fill="rgb(228,57,28)" fg:x="36550" fg:w="14"/><text x="47.7101%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (11 samples, 0.01%)</title><rect x="47.4640%" y="1653" width="0.0143%" height="15" fill="rgb(250,133,26)" fg:x="36553" fg:w="11"/><text x="47.7140%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.04%)</title><rect x="47.4783%" y="1653" width="0.0377%" height="15" fill="rgb(254,15,16)" fg:x="36564" fg:w="29"/><text x="47.7283%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.04%)</title><rect x="47.4783%" y="1637" width="0.0377%" height="15" fill="rgb(209,147,42)" fg:x="36564" fg:w="29"/><text x="47.7283%" y="1647.50"></text></g><g><title>cfree (26 samples, 0.03%)</title><rect x="47.4822%" y="1621" width="0.0338%" height="15" fill="rgb(208,5,29)" fg:x="36567" fg:w="26"/><text x="47.7322%" y="1631.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="47.4978%" y="1605" width="0.0182%" height="15" fill="rgb(250,73,31)" fg:x="36579" fg:w="14"/><text x="47.7478%" y="1615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.08%)</title><rect x="47.4433%" y="1749" width="0.0792%" height="15" fill="rgb(238,45,10)" fg:x="36537" fg:w="61"/><text x="47.6933%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (49 samples, 0.06%)</title><rect x="47.4588%" y="1733" width="0.0636%" height="15" fill="rgb(214,104,5)" fg:x="36549" fg:w="49"/><text x="47.7088%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (48 samples, 0.06%)</title><rect x="47.4601%" y="1717" width="0.0623%" height="15" fill="rgb(242,217,19)" fg:x="36550" fg:w="48"/><text x="47.7101%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (48 samples, 0.06%)</title><rect x="47.4601%" y="1701" width="0.0623%" height="15" fill="rgb(246,113,27)" fg:x="36550" fg:w="48"/><text x="47.7101%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (34 samples, 0.04%)</title><rect x="47.4783%" y="1685" width="0.0441%" height="15" fill="rgb(221,34,27)" fg:x="36564" fg:w="34"/><text x="47.7283%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.04%)</title><rect x="47.4783%" y="1669" width="0.0441%" height="15" fill="rgb(246,109,6)" fg:x="36564" fg:w="34"/><text x="47.7283%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (193 samples, 0.25%)</title><rect x="47.3004%" y="1797" width="0.2506%" height="15" fill="rgb(217,12,25)" fg:x="36427" fg:w="193"/><text x="47.5504%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (116 samples, 0.15%)</title><rect x="47.4004%" y="1781" width="0.1506%" height="15" fill="rgb(250,195,5)" fg:x="36504" fg:w="116"/><text x="47.6504%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (83 samples, 0.11%)</title><rect x="47.4433%" y="1765" width="0.1078%" height="15" fill="rgb(244,140,45)" fg:x="36537" fg:w="83"/><text x="47.6933%" y="1775.50"></text></g><g><title>cfree (21 samples, 0.03%)</title><rect x="47.5238%" y="1749" width="0.0273%" height="15" fill="rgb(230,64,14)" fg:x="36599" fg:w="21"/><text x="47.7738%" y="1759.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="47.5342%" y="1733" width="0.0169%" height="15" fill="rgb(206,27,27)" fg:x="36607" fg:w="13"/><text x="47.7842%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (30 samples, 0.04%)</title><rect x="47.5510%" y="1797" width="0.0390%" height="15" fill="rgb(230,14,50)" fg:x="36620" fg:w="30"/><text x="47.8010%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (30 samples, 0.04%)</title><rect x="47.5510%" y="1781" width="0.0390%" height="15" fill="rgb(237,172,14)" fg:x="36620" fg:w="30"/><text x="47.8010%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (20 samples, 0.03%)</title><rect x="47.5640%" y="1765" width="0.0260%" height="15" fill="rgb(209,25,21)" fg:x="36630" fg:w="20"/><text x="47.8140%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="47.5640%" y="1749" width="0.0260%" height="15" fill="rgb(248,148,22)" fg:x="36630" fg:w="20"/><text x="47.8140%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.01%)</title><rect x="47.5796%" y="1733" width="0.0104%" height="15" fill="rgb(234,100,22)" fg:x="36642" fg:w="8"/><text x="47.8296%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.01%)</title><rect x="47.5796%" y="1717" width="0.0104%" height="15" fill="rgb(210,20,30)" fg:x="36642" fg:w="8"/><text x="47.8296%" y="1727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="47.5939%" y="1765" width="0.0169%" height="15" fill="rgb(232,58,0)" fg:x="36653" fg:w="13"/><text x="47.8439%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="47.5965%" y="1749" width="0.0143%" height="15" fill="rgb(221,68,13)" fg:x="36655" fg:w="11"/><text x="47.8465%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="47.5965%" y="1733" width="0.0143%" height="15" fill="rgb(231,194,11)" fg:x="36655" fg:w="11"/><text x="47.8465%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (11 samples, 0.01%)</title><rect x="47.5965%" y="1717" width="0.0143%" height="15" fill="rgb(235,51,41)" fg:x="36655" fg:w="11"/><text x="47.8465%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (8 samples, 0.01%)</title><rect x="47.6004%" y="1701" width="0.0104%" height="15" fill="rgb(240,50,32)" fg:x="36658" fg:w="8"/><text x="47.8504%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="47.6004%" y="1685" width="0.0104%" height="15" fill="rgb(240,185,36)" fg:x="36658" fg:w="8"/><text x="47.8504%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="47.6004%" y="1669" width="0.0104%" height="15" fill="rgb(211,168,15)" fg:x="36658" fg:w="8"/><text x="47.8504%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="47.6004%" y="1653" width="0.0104%" height="15" fill="rgb(221,70,0)" fg:x="36658" fg:w="8"/><text x="47.8504%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (18 samples, 0.02%)</title><rect x="47.5900%" y="1797" width="0.0234%" height="15" fill="rgb(205,21,33)" fg:x="36650" fg:w="18"/><text x="47.8400%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="47.5939%" y="1781" width="0.0195%" height="15" fill="rgb(225,106,10)" fg:x="36653" fg:w="15"/><text x="47.8439%" y="1791.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (21 samples, 0.03%)</title><rect x="47.6134%" y="1797" width="0.0273%" height="15" fill="rgb(236,200,50)" fg:x="36668" fg:w="21"/><text x="47.8634%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (15 samples, 0.02%)</title><rect x="47.6406%" y="1797" width="0.0195%" height="15" fill="rgb(249,93,23)" fg:x="36689" fg:w="15"/><text x="47.8906%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.01%)</title><rect x="47.6718%" y="1765" width="0.0104%" height="15" fill="rgb(244,115,35)" fg:x="36713" fg:w="8"/><text x="47.9218%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (22 samples, 0.03%)</title><rect x="47.6601%" y="1797" width="0.0286%" height="15" fill="rgb(231,129,47)" fg:x="36704" fg:w="22"/><text x="47.9101%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.02%)</title><rect x="47.6692%" y="1781" width="0.0195%" height="15" fill="rgb(225,160,50)" fg:x="36711" fg:w="15"/><text x="47.9192%" y="1791.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (30 samples, 0.04%)</title><rect x="47.6913%" y="1781" width="0.0390%" height="15" fill="rgb(218,135,23)" fg:x="36728" fg:w="30"/><text x="47.9413%" y="1791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="48.4431%" y="1765" width="0.0130%" height="15" fill="rgb(227,119,14)" fg:x="37307" fg:w="10"/><text x="48.6931%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (63 samples, 0.08%)</title><rect x="48.4587%" y="1765" width="0.0818%" height="15" fill="rgb(242,138,13)" fg:x="37319" fg:w="63"/><text x="48.7087%" y="1775.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="48.5405%" y="1765" width="0.0117%" height="15" fill="rgb(215,11,16)" fg:x="37382" fg:w="9"/><text x="48.7905%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (14 samples, 0.02%)</title><rect x="48.5600%" y="1717" width="0.0182%" height="15" fill="rgb(234,170,50)" fg:x="37397" fg:w="14"/><text x="48.8100%" y="1727.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_pop (20 samples, 0.03%)</title><rect x="48.5535%" y="1765" width="0.0260%" height="15" fill="rgb(233,34,20)" fg:x="37392" fg:w="20"/><text x="48.8035%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (20 samples, 0.03%)</title><rect x="48.5535%" y="1749" width="0.0260%" height="15" fill="rgb(237,100,45)" fg:x="37392" fg:w="20"/><text x="48.8035%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (20 samples, 0.03%)</title><rect x="48.5535%" y="1733" width="0.0260%" height="15" fill="rgb(231,184,36)" fg:x="37392" fg:w="20"/><text x="48.8035%" y="1743.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (50 samples, 0.06%)</title><rect x="48.5794%" y="1765" width="0.0649%" height="15" fill="rgb(252,93,2)" fg:x="37412" fg:w="50"/><text x="48.8294%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (23 samples, 0.03%)</title><rect x="48.6444%" y="1765" width="0.0299%" height="15" fill="rgb(248,176,47)" fg:x="37462" fg:w="23"/><text x="48.8944%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (19 samples, 0.02%)</title><rect x="48.6820%" y="1765" width="0.0247%" height="15" fill="rgb(249,125,23)" fg:x="37491" fg:w="19"/><text x="48.9320%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (15 samples, 0.02%)</title><rect x="48.7067%" y="1765" width="0.0195%" height="15" fill="rgb(239,67,42)" fg:x="37510" fg:w="15"/><text x="48.9567%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (64 samples, 0.08%)</title><rect x="49.1131%" y="1749" width="0.0831%" height="15" fill="rgb(244,162,4)" fg:x="37823" fg:w="64"/><text x="49.3631%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="49.2612%" y="1685" width="0.0130%" height="15" fill="rgb(214,150,38)" fg:x="37937" fg:w="10"/><text x="49.5112%" y="1695.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="49.2560%" y="1701" width="0.0260%" height="15" fill="rgb(228,211,28)" fg:x="37933" fg:w="20"/><text x="49.5060%" y="1711.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (31 samples, 0.04%)</title><rect x="49.2560%" y="1717" width="0.0403%" height="15" fill="rgb(212,98,48)" fg:x="37933" fg:w="31"/><text x="49.5060%" y="1727.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (11 samples, 0.01%)</title><rect x="49.2819%" y="1701" width="0.0143%" height="15" fill="rgb(213,45,13)" fg:x="37953" fg:w="11"/><text x="49.5319%" y="1711.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="49.2819%" y="1685" width="0.0143%" height="15" fill="rgb(218,35,29)" fg:x="37953" fg:w="11"/><text x="49.5319%" y="1695.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (100 samples, 0.13%)</title><rect x="49.1962%" y="1749" width="0.1298%" height="15" fill="rgb(244,13,3)" fg:x="37887" fg:w="100"/><text x="49.4462%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="49.2560%" y="1733" width="0.0701%" height="15" fill="rgb(235,170,19)" fg:x="37933" fg:w="54"/><text x="49.5060%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (23 samples, 0.03%)</title><rect x="49.2962%" y="1717" width="0.0299%" height="15" fill="rgb(233,193,43)" fg:x="37964" fg:w="23"/><text x="49.5462%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (22 samples, 0.03%)</title><rect x="49.2975%" y="1701" width="0.0286%" height="15" fill="rgb(228,223,20)" fg:x="37965" fg:w="22"/><text x="49.5475%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.03%)</title><rect x="49.2975%" y="1685" width="0.0286%" height="15" fill="rgb(208,85,54)" fg:x="37965" fg:w="22"/><text x="49.5475%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.03%)</title><rect x="49.2975%" y="1669" width="0.0286%" height="15" fill="rgb(254,14,45)" fg:x="37965" fg:w="22"/><text x="49.5475%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.03%)</title><rect x="49.2975%" y="1653" width="0.0286%" height="15" fill="rgb(247,99,29)" fg:x="37965" fg:w="22"/><text x="49.5475%" y="1663.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="49.3105%" y="1637" width="0.0156%" height="15" fill="rgb(225,180,54)" fg:x="37975" fg:w="12"/><text x="49.5605%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (28 samples, 0.04%)</title><rect x="49.3261%" y="1749" width="0.0364%" height="15" fill="rgb(239,88,43)" fg:x="37987" fg:w="28"/><text x="49.5761%" y="1759.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.04%)</title><rect x="49.3274%" y="1733" width="0.0351%" height="15" fill="rgb(209,47,11)" fg:x="37988" fg:w="27"/><text x="49.5774%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.03%)</title><rect x="49.3352%" y="1717" width="0.0273%" height="15" fill="rgb(219,179,23)" fg:x="37994" fg:w="21"/><text x="49.5852%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.03%)</title><rect x="49.3352%" y="1701" width="0.0273%" height="15" fill="rgb(213,183,19)" fg:x="37994" fg:w="21"/><text x="49.5852%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.03%)</title><rect x="49.3352%" y="1685" width="0.0273%" height="15" fill="rgb(210,11,9)" fg:x="37994" fg:w="21"/><text x="49.5852%" y="1695.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="49.3469%" y="1669" width="0.0156%" height="15" fill="rgb(239,194,16)" fg:x="38003" fg:w="12"/><text x="49.5969%" y="1679.50"></text></g><g><title>cfree (48 samples, 0.06%)</title><rect x="49.3624%" y="1749" width="0.0623%" height="15" fill="rgb(246,23,50)" fg:x="38015" fg:w="48"/><text x="49.6124%" y="1759.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="49.3949%" y="1733" width="0.0299%" height="15" fill="rgb(245,10,41)" fg:x="38040" fg:w="23"/><text x="49.6449%" y="1743.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="49.4832%" y="1717" width="0.0169%" height="15" fill="rgb(228,43,24)" fg:x="38108" fg:w="13"/><text x="49.7332%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (73 samples, 0.09%)</title><rect x="49.4300%" y="1749" width="0.0948%" height="15" fill="rgb(220,151,0)" fg:x="38067" fg:w="73"/><text x="49.6800%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (32 samples, 0.04%)</title><rect x="49.4832%" y="1733" width="0.0416%" height="15" fill="rgb(232,219,10)" fg:x="38108" fg:w="32"/><text x="49.7332%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (19 samples, 0.02%)</title><rect x="49.5001%" y="1717" width="0.0247%" height="15" fill="rgb(227,217,48)" fg:x="38121" fg:w="19"/><text x="49.7501%" y="1727.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::has_copy (8 samples, 0.01%)</title><rect x="49.5247%" y="1749" width="0.0104%" height="15" fill="rgb(210,66,35)" fg:x="38140" fg:w="8"/><text x="49.7747%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (34 samples, 0.04%)</title><rect x="49.5715%" y="1733" width="0.0441%" height="15" fill="rgb(254,6,7)" fg:x="38176" fg:w="34"/><text x="49.8215%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (82 samples, 0.11%)</title><rect x="49.5442%" y="1749" width="0.1065%" height="15" fill="rgb(235,222,42)" fg:x="38155" fg:w="82"/><text x="49.7942%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (27 samples, 0.04%)</title><rect x="49.6156%" y="1733" width="0.0351%" height="15" fill="rgb(245,126,5)" fg:x="38210" fg:w="27"/><text x="49.8656%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (133 samples, 0.17%)</title><rect x="49.6507%" y="1749" width="0.1727%" height="15" fill="rgb(215,73,17)" fg:x="38237" fg:w="133"/><text x="49.9007%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.04%)</title><rect x="49.7870%" y="1733" width="0.0364%" height="15" fill="rgb(219,198,52)" fg:x="38342" fg:w="28"/><text x="50.0370%" y="1743.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="49.8091%" y="1717" width="0.0143%" height="15" fill="rgb(217,159,18)" fg:x="38359" fg:w="11"/><text x="50.0591%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::check_ability (10 samples, 0.01%)</title><rect x="49.8234%" y="1749" width="0.0130%" height="15" fill="rgb(212,177,18)" fg:x="38370" fg:w="10"/><text x="50.0734%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="49.8883%" y="1605" width="0.0143%" height="15" fill="rgb(241,10,11)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.01%)</title><rect x="49.8883%" y="1589" width="0.0143%" height="15" fill="rgb(232,114,35)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="49.8883%" y="1573" width="0.0143%" height="15" fill="rgb(238,222,8)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="49.8883%" y="1557" width="0.0143%" height="15" fill="rgb(251,153,44)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="49.8883%" y="1541" width="0.0143%" height="15" fill="rgb(210,140,51)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.01%)</title><rect x="49.8883%" y="1525" width="0.0143%" height="15" fill="rgb(222,63,0)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (11 samples, 0.01%)</title><rect x="49.8883%" y="1509" width="0.0143%" height="15" fill="rgb(240,18,40)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (11 samples, 0.01%)</title><rect x="49.8883%" y="1493" width="0.0143%" height="15" fill="rgb(237,88,16)" fg:x="38420" fg:w="11"/><text x="50.1383%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.03%)</title><rect x="49.8792%" y="1733" width="0.0299%" height="15" fill="rgb(251,117,13)" fg:x="38413" fg:w="23"/><text x="50.1292%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="49.8792%" y="1717" width="0.0299%" height="15" fill="rgb(251,228,8)" fg:x="38413" fg:w="23"/><text x="50.1292%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 0.03%)</title><rect x="49.8792%" y="1701" width="0.0299%" height="15" fill="rgb(205,107,49)" fg:x="38413" fg:w="23"/><text x="50.1292%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (21 samples, 0.03%)</title><rect x="49.8818%" y="1685" width="0.0273%" height="15" fill="rgb(238,72,41)" fg:x="38415" fg:w="21"/><text x="50.1318%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.03%)</title><rect x="49.8818%" y="1669" width="0.0273%" height="15" fill="rgb(248,183,52)" fg:x="38415" fg:w="21"/><text x="50.1318%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.03%)</title><rect x="49.8818%" y="1653" width="0.0273%" height="15" fill="rgb(215,58,20)" fg:x="38415" fg:w="21"/><text x="50.1318%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.03%)</title><rect x="49.8818%" y="1637" width="0.0273%" height="15" fill="rgb(209,49,13)" fg:x="38415" fg:w="21"/><text x="50.1318%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21 samples, 0.03%)</title><rect x="49.8818%" y="1621" width="0.0273%" height="15" fill="rgb(208,113,17)" fg:x="38415" fg:w="21"/><text x="50.1318%" y="1631.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (8 samples, 0.01%)</title><rect x="49.9130%" y="1733" width="0.0104%" height="15" fill="rgb(208,14,22)" fg:x="38439" fg:w="8"/><text x="50.1630%" y="1743.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (8 samples, 0.01%)</title><rect x="49.9130%" y="1717" width="0.0104%" height="15" fill="rgb(222,95,2)" fg:x="38439" fg:w="8"/><text x="50.1630%" y="1727.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (16 samples, 0.02%)</title><rect x="49.9234%" y="1733" width="0.0208%" height="15" fill="rgb(253,180,37)" fg:x="38447" fg:w="16"/><text x="50.1734%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="49.9325%" y="1717" width="0.0117%" height="15" fill="rgb(250,81,33)" fg:x="38454" fg:w="9"/><text x="50.1825%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.01%)</title><rect x="49.9338%" y="1701" width="0.0104%" height="15" fill="rgb(251,151,41)" fg:x="38455" fg:w="8"/><text x="50.1838%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (124 samples, 0.16%)</title><rect x="49.8364%" y="1749" width="0.1610%" height="15" fill="rgb(210,135,17)" fg:x="38380" fg:w="124"/><text x="50.0864%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (41 samples, 0.05%)</title><rect x="49.9442%" y="1733" width="0.0532%" height="15" fill="rgb(239,21,29)" fg:x="38463" fg:w="41"/><text x="50.1942%" y="1743.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 0.05%)</title><rect x="49.9442%" y="1717" width="0.0532%" height="15" fill="rgb(231,215,16)" fg:x="38463" fg:w="41"/><text x="50.1942%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="49.9831%" y="1701" width="0.0143%" height="15" fill="rgb(239,151,54)" fg:x="38493" fg:w="11"/><text x="50.2331%" y="1711.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="49.9831%" y="1685" width="0.0143%" height="15" fill="rgb(222,122,38)" fg:x="38493" fg:w="11"/><text x="50.2331%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_handle_to_struct (10 samples, 0.01%)</title><rect x="50.0013%" y="1749" width="0.0130%" height="15" fill="rgb(243,128,1)" fg:x="38507" fg:w="10"/><text x="50.2513%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="50.0467%" y="1605" width="0.0156%" height="15" fill="rgb(225,74,21)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (12 samples, 0.02%)</title><rect x="50.0467%" y="1589" width="0.0156%" height="15" fill="rgb(216,210,10)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.02%)</title><rect x="50.0467%" y="1573" width="0.0156%" height="15" fill="rgb(228,76,19)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.02%)</title><rect x="50.0467%" y="1557" width="0.0156%" height="15" fill="rgb(236,80,34)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.02%)</title><rect x="50.0467%" y="1541" width="0.0156%" height="15" fill="rgb(225,173,23)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (12 samples, 0.02%)</title><rect x="50.0467%" y="1525" width="0.0156%" height="15" fill="rgb(253,38,1)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (12 samples, 0.02%)</title><rect x="50.0467%" y="1509" width="0.0156%" height="15" fill="rgb(206,155,35)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (12 samples, 0.02%)</title><rect x="50.0467%" y="1493" width="0.0156%" height="15" fill="rgb(254,27,53)" fg:x="38542" fg:w="12"/><text x="50.2967%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="50.0480%" y="1477" width="0.0143%" height="15" fill="rgb(225,52,41)" fg:x="38543" fg:w="11"/><text x="50.2980%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (42 samples, 0.05%)</title><rect x="50.0143%" y="1749" width="0.0545%" height="15" fill="rgb(244,53,18)" fg:x="38517" fg:w="42"/><text x="50.2643%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.04%)</title><rect x="50.0338%" y="1733" width="0.0351%" height="15" fill="rgb(254,206,48)" fg:x="38532" fg:w="27"/><text x="50.2838%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (27 samples, 0.04%)</title><rect x="50.0338%" y="1717" width="0.0351%" height="15" fill="rgb(236,182,23)" fg:x="38532" fg:w="27"/><text x="50.2838%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (27 samples, 0.04%)</title><rect x="50.0338%" y="1701" width="0.0351%" height="15" fill="rgb(236,191,37)" fg:x="38532" fg:w="27"/><text x="50.2838%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (26 samples, 0.03%)</title><rect x="50.0351%" y="1685" width="0.0338%" height="15" fill="rgb(245,53,8)" fg:x="38533" fg:w="26"/><text x="50.2851%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.03%)</title><rect x="50.0351%" y="1669" width="0.0338%" height="15" fill="rgb(245,147,9)" fg:x="38533" fg:w="26"/><text x="50.2851%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="50.0351%" y="1653" width="0.0338%" height="15" fill="rgb(218,24,48)" fg:x="38533" fg:w="26"/><text x="50.2851%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="50.0429%" y="1637" width="0.0260%" height="15" fill="rgb(254,23,9)" fg:x="38539" fg:w="20"/><text x="50.2929%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="50.0454%" y="1621" width="0.0234%" height="15" fill="rgb(244,105,9)" fg:x="38541" fg:w="18"/><text x="50.2954%" y="1631.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.01%)</title><rect x="50.1247%" y="1701" width="0.0104%" height="15" fill="rgb(212,142,22)" fg:x="38602" fg:w="8"/><text x="50.3747%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="50.1247%" y="1717" width="0.0208%" height="15" fill="rgb(221,114,49)" fg:x="38602" fg:w="16"/><text x="50.3747%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.01%)</title><rect x="50.1350%" y="1701" width="0.0104%" height="15" fill="rgb(223,210,25)" fg:x="38610" fg:w="8"/><text x="50.3850%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.01%)</title><rect x="50.1350%" y="1685" width="0.0104%" height="15" fill="rgb(235,162,44)" fg:x="38610" fg:w="8"/><text x="50.3850%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="50.1350%" y="1669" width="0.0104%" height="15" fill="rgb(237,65,45)" fg:x="38610" fg:w="8"/><text x="50.3850%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="50.1350%" y="1653" width="0.0104%" height="15" fill="rgb(208,79,9)" fg:x="38610" fg:w="8"/><text x="50.3850%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="50.1350%" y="1637" width="0.0104%" height="15" fill="rgb(215,228,8)" fg:x="38610" fg:w="8"/><text x="50.3850%" y="1647.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="50.1558%" y="1653" width="0.0130%" height="15" fill="rgb(205,185,17)" fg:x="38626" fg:w="10"/><text x="50.4058%" y="1663.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (62 samples, 0.08%)</title><rect x="50.0909%" y="1733" width="0.0805%" height="15" fill="rgb(213,62,36)" fg:x="38576" fg:w="62"/><text x="50.3409%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="50.1454%" y="1717" width="0.0260%" height="15" fill="rgb(209,34,9)" fg:x="38618" fg:w="20"/><text x="50.3954%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.02%)</title><rect x="50.1519%" y="1701" width="0.0195%" height="15" fill="rgb(246,151,27)" fg:x="38623" fg:w="15"/><text x="50.4019%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.02%)</title><rect x="50.1519%" y="1685" width="0.0195%" height="15" fill="rgb(218,206,3)" fg:x="38623" fg:w="15"/><text x="50.4019%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.02%)</title><rect x="50.1519%" y="1669" width="0.0195%" height="15" fill="rgb(242,202,1)" fg:x="38623" fg:w="15"/><text x="50.4019%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (89 samples, 0.12%)</title><rect x="50.0688%" y="1749" width="0.1156%" height="15" fill="rgb(227,185,16)" fg:x="38559" fg:w="89"/><text x="50.3188%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (9 samples, 0.01%)</title><rect x="50.1727%" y="1733" width="0.0117%" height="15" fill="rgb(241,1,14)" fg:x="38639" fg:w="9"/><text x="50.4227%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="50.1987%" y="1605" width="0.0143%" height="15" fill="rgb(212,113,25)" fg:x="38659" fg:w="11"/><text x="50.4487%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.01%)</title><rect x="50.1987%" y="1589" width="0.0143%" height="15" fill="rgb(247,37,43)" fg:x="38659" fg:w="11"/><text x="50.4487%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="50.1987%" y="1573" width="0.0143%" height="15" fill="rgb(226,54,8)" fg:x="38659" fg:w="11"/><text x="50.4487%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="50.1987%" y="1557" width="0.0143%" height="15" fill="rgb(251,205,25)" fg:x="38659" fg:w="11"/><text x="50.4487%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="50.1987%" y="1541" width="0.0143%" height="15" fill="rgb(246,87,35)" fg:x="38659" fg:w="11"/><text x="50.4487%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10 samples, 0.01%)</title><rect x="50.2000%" y="1525" width="0.0130%" height="15" fill="rgb(251,145,46)" fg:x="38660" fg:w="10"/><text x="50.4500%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (10 samples, 0.01%)</title><rect x="50.2000%" y="1509" width="0.0130%" height="15" fill="rgb(210,210,33)" fg:x="38660" fg:w="10"/><text x="50.4500%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (10 samples, 0.01%)</title><rect x="50.2000%" y="1493" width="0.0130%" height="15" fill="rgb(221,151,11)" fg:x="38660" fg:w="10"/><text x="50.4500%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (10 samples, 0.01%)</title><rect x="50.2000%" y="1477" width="0.0130%" height="15" fill="rgb(208,160,28)" fg:x="38660" fg:w="10"/><text x="50.4500%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="50.1935%" y="1733" width="0.0260%" height="15" fill="rgb(243,69,29)" fg:x="38655" fg:w="20"/><text x="50.4435%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="50.1935%" y="1717" width="0.0260%" height="15" fill="rgb(224,144,4)" fg:x="38655" fg:w="20"/><text x="50.4435%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 0.03%)</title><rect x="50.1935%" y="1701" width="0.0260%" height="15" fill="rgb(211,140,38)" fg:x="38655" fg:w="20"/><text x="50.4435%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (19 samples, 0.02%)</title><rect x="50.1948%" y="1685" width="0.0247%" height="15" fill="rgb(252,189,15)" fg:x="38656" fg:w="19"/><text x="50.4448%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="50.1948%" y="1669" width="0.0247%" height="15" fill="rgb(251,175,23)" fg:x="38656" fg:w="19"/><text x="50.4448%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="50.1948%" y="1653" width="0.0247%" height="15" fill="rgb(212,184,11)" fg:x="38656" fg:w="19"/><text x="50.4448%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="50.1948%" y="1637" width="0.0247%" height="15" fill="rgb(217,205,6)" fg:x="38656" fg:w="19"/><text x="50.4448%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="50.1974%" y="1621" width="0.0221%" height="15" fill="rgb(235,45,45)" fg:x="38658" fg:w="17"/><text x="50.4474%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (60 samples, 0.08%)</title><rect x="50.1909%" y="1749" width="0.0779%" height="15" fill="rgb(211,157,53)" fg:x="38653" fg:w="60"/><text x="50.4409%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (32 samples, 0.04%)</title><rect x="50.2272%" y="1733" width="0.0416%" height="15" fill="rgb(212,13,8)" fg:x="38681" fg:w="32"/><text x="50.4772%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (32 samples, 0.04%)</title><rect x="50.2272%" y="1717" width="0.0416%" height="15" fill="rgb(218,80,36)" fg:x="38681" fg:w="32"/><text x="50.4772%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="50.2831%" y="1605" width="0.0143%" height="15" fill="rgb(211,123,43)" fg:x="38724" fg:w="11"/><text x="50.5331%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.01%)</title><rect x="50.2831%" y="1589" width="0.0143%" height="15" fill="rgb(206,165,2)" fg:x="38724" fg:w="11"/><text x="50.5331%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="50.2831%" y="1573" width="0.0143%" height="15" fill="rgb(248,63,35)" fg:x="38724" fg:w="11"/><text x="50.5331%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="50.2831%" y="1557" width="0.0143%" height="15" fill="rgb(219,133,41)" fg:x="38724" fg:w="11"/><text x="50.5331%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="50.2831%" y="1541" width="0.0143%" height="15" fill="rgb(206,175,46)" fg:x="38724" fg:w="11"/><text x="50.5331%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="50.2870%" y="1525" width="0.0104%" height="15" fill="rgb(224,41,35)" fg:x="38727" fg:w="8"/><text x="50.5370%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="50.2727%" y="1733" width="0.0260%" height="15" fill="rgb(226,113,24)" fg:x="38716" fg:w="20"/><text x="50.5227%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="50.2727%" y="1717" width="0.0260%" height="15" fill="rgb(219,51,41)" fg:x="38716" fg:w="20"/><text x="50.5227%" y="1727.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 0.03%)</title><rect x="50.2727%" y="1701" width="0.0260%" height="15" fill="rgb(220,145,47)" fg:x="38716" fg:w="20"/><text x="50.5227%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (19 samples, 0.02%)</title><rect x="50.2740%" y="1685" width="0.0247%" height="15" fill="rgb(239,121,47)" fg:x="38717" fg:w="19"/><text x="50.5240%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="50.2740%" y="1669" width="0.0247%" height="15" fill="rgb(207,60,40)" fg:x="38717" fg:w="19"/><text x="50.5240%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="50.2740%" y="1653" width="0.0247%" height="15" fill="rgb(224,229,11)" fg:x="38717" fg:w="19"/><text x="50.5240%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="50.2766%" y="1637" width="0.0221%" height="15" fill="rgb(252,28,32)" fg:x="38719" fg:w="17"/><text x="50.5266%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="50.2779%" y="1621" width="0.0208%" height="15" fill="rgb(207,52,49)" fg:x="38720" fg:w="16"/><text x="50.5279%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (39 samples, 0.05%)</title><rect x="50.2688%" y="1749" width="0.0506%" height="15" fill="rgb(243,51,50)" fg:x="38713" fg:w="39"/><text x="50.5188%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (16 samples, 0.02%)</title><rect x="50.2987%" y="1733" width="0.0208%" height="15" fill="rgb(212,92,21)" fg:x="38736" fg:w="16"/><text x="50.5487%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (19 samples, 0.02%)</title><rect x="50.3194%" y="1749" width="0.0247%" height="15" fill="rgb(230,183,50)" fg:x="38752" fg:w="19"/><text x="50.5694%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (59 samples, 0.08%)</title><rect x="50.3493%" y="1749" width="0.0766%" height="15" fill="rgb(225,48,9)" fg:x="38775" fg:w="59"/><text x="50.5993%" y="1759.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (40 samples, 0.05%)</title><rect x="50.3740%" y="1733" width="0.0519%" height="15" fill="rgb(254,44,4)" fg:x="38794" fg:w="40"/><text x="50.6240%" y="1743.50"></text></g><g><title>core::cmp::PartialEq::ne (40 samples, 0.05%)</title><rect x="50.3740%" y="1717" width="0.0519%" height="15" fill="rgb(252,128,37)" fg:x="38794" fg:w="40"/><text x="50.6240%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (39 samples, 0.05%)</title><rect x="50.3753%" y="1701" width="0.0506%" height="15" fill="rgb(227,178,8)" fg:x="38795" fg:w="39"/><text x="50.6253%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_vec_ref (12 samples, 0.02%)</title><rect x="50.4311%" y="1749" width="0.0156%" height="15" fill="rgb(205,206,32)" fg:x="38838" fg:w="12"/><text x="50.6811%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (1,332 samples, 1.73%)</title><rect x="48.7379%" y="1765" width="1.7296%" height="15" fill="rgb(220,218,22)" fg:x="37534" fg:w="1332"/><text x="48.9879%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::from_const_signature (16 samples, 0.02%)</title><rect x="50.4467%" y="1749" width="0.0208%" height="15" fill="rgb(236,41,28)" fg:x="38850" fg:w="16"/><text x="50.6967%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="50.8557%" y="1749" width="0.0195%" height="15" fill="rgb(219,37,7)" fg:x="39165" fg:w="15"/><text x="51.1057%" y="1759.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="50.8557%" y="1733" width="0.0195%" height="15" fill="rgb(206,160,15)" fg:x="39165" fg:w="15"/><text x="51.1057%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="50.8752%" y="1749" width="0.0195%" height="15" fill="rgb(208,82,21)" fg:x="39180" fg:w="15"/><text x="51.1252%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="50.8947%" y="1749" width="0.0312%" height="15" fill="rgb(226,130,25)" fg:x="39195" fg:w="24"/><text x="51.1447%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="50.9102%" y="1733" width="0.0156%" height="15" fill="rgb(212,72,24)" fg:x="39207" fg:w="12"/><text x="51.1602%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.01%)</title><rect x="50.9154%" y="1717" width="0.0104%" height="15" fill="rgb(206,28,16)" fg:x="39211" fg:w="8"/><text x="51.1654%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.01%)</title><rect x="50.9154%" y="1701" width="0.0104%" height="15" fill="rgb(249,41,5)" fg:x="39211" fg:w="8"/><text x="51.1654%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="50.9154%" y="1685" width="0.0104%" height="15" fill="rgb(233,96,48)" fg:x="39211" fg:w="8"/><text x="51.1654%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="50.9154%" y="1669" width="0.0104%" height="15" fill="rgb(240,198,11)" fg:x="39211" fg:w="8"/><text x="51.1654%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="50.9154%" y="1653" width="0.0104%" height="15" fill="rgb(209,175,35)" fg:x="39211" fg:w="8"/><text x="51.1654%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (24 samples, 0.03%)</title><rect x="50.9323%" y="1749" width="0.0312%" height="15" fill="rgb(214,40,51)" fg:x="39224" fg:w="24"/><text x="51.1823%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (21 samples, 0.03%)</title><rect x="50.9648%" y="1733" width="0.0273%" height="15" fill="rgb(252,56,4)" fg:x="39249" fg:w="21"/><text x="51.2148%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (30 samples, 0.04%)</title><rect x="50.9635%" y="1749" width="0.0390%" height="15" fill="rgb(219,131,5)" fg:x="39248" fg:w="30"/><text x="51.2135%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (8 samples, 0.01%)</title><rect x="50.9921%" y="1733" width="0.0104%" height="15" fill="rgb(223,67,53)" fg:x="39270" fg:w="8"/><text x="51.2421%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (10 samples, 0.01%)</title><rect x="51.0102%" y="1749" width="0.0130%" height="15" fill="rgb(227,154,8)" fg:x="39284" fg:w="10"/><text x="51.2602%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (485 samples, 0.63%)</title><rect x="50.4675%" y="1765" width="0.6298%" height="15" fill="rgb(216,174,51)" fg:x="38866" fg:w="485"/><text x="50.7175%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (57 samples, 0.07%)</title><rect x="51.0232%" y="1749" width="0.0740%" height="15" fill="rgb(239,60,34)" fg:x="39294" fg:w="57"/><text x="51.2732%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (39 samples, 0.05%)</title><rect x="51.0972%" y="1765" width="0.0506%" height="15" fill="rgb(236,165,48)" fg:x="39351" fg:w="39"/><text x="51.3472%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="51.1674%" y="1733" width="0.0169%" height="15" fill="rgb(210,37,26)" fg:x="39405" fg:w="13"/><text x="51.4174%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::ge (15 samples, 0.02%)</title><rect x="51.1972%" y="1701" width="0.0195%" height="15" fill="rgb(211,3,17)" fg:x="39428" fg:w="15"/><text x="51.4472%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::le (8 samples, 0.01%)</title><rect x="51.2167%" y="1701" width="0.0104%" height="15" fill="rgb(234,88,49)" fg:x="39443" fg:w="8"/><text x="51.4667%" y="1711.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 0.04%)</title><rect x="51.1972%" y="1717" width="0.0364%" height="15" fill="rgb(233,40,17)" fg:x="39428" fg:w="28"/><text x="51.4472%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (45 samples, 0.06%)</title><rect x="51.1842%" y="1733" width="0.0584%" height="15" fill="rgb(235,127,31)" fg:x="39418" fg:w="45"/><text x="51.4342%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="51.2427%" y="1717" width="0.0195%" height="15" fill="rgb(248,167,17)" fg:x="39463" fg:w="15"/><text x="51.4927%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (17 samples, 0.02%)</title><rect x="51.2621%" y="1717" width="0.0221%" height="15" fill="rgb(218,179,8)" fg:x="39478" fg:w="17"/><text x="51.5121%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (61 samples, 0.08%)</title><rect x="51.2427%" y="1733" width="0.0792%" height="15" fill="rgb(216,92,14)" fg:x="39463" fg:w="61"/><text x="51.4927%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (29 samples, 0.04%)</title><rect x="51.2842%" y="1717" width="0.0377%" height="15" fill="rgb(221,198,46)" fg:x="39495" fg:w="29"/><text x="51.5342%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (21 samples, 0.03%)</title><rect x="51.2946%" y="1701" width="0.0273%" height="15" fill="rgb(244,7,25)" fg:x="39503" fg:w="21"/><text x="51.5446%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (146 samples, 0.19%)</title><rect x="51.1479%" y="1765" width="0.1896%" height="15" fill="rgb(233,75,6)" fg:x="39390" fg:w="146"/><text x="51.3979%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (137 samples, 0.18%)</title><rect x="51.1596%" y="1749" width="0.1779%" height="15" fill="rgb(240,189,41)" fg:x="39399" fg:w="137"/><text x="51.4096%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (12 samples, 0.02%)</title><rect x="51.3219%" y="1733" width="0.0156%" height="15" fill="rgb(237,157,21)" fg:x="39524" fg:w="12"/><text x="51.5719%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (32 samples, 0.04%)</title><rect x="51.3569%" y="1733" width="0.0416%" height="15" fill="rgb(210,136,49)" fg:x="39551" fg:w="32"/><text x="51.6069%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="51.4439%" y="1717" width="0.0104%" height="15" fill="rgb(210,68,29)" fg:x="39618" fg:w="8"/><text x="51.6939%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::add_checked (9 samples, 0.01%)</title><rect x="51.4543%" y="1701" width="0.0117%" height="15" fill="rgb(247,207,20)" fg:x="39626" fg:w="9"/><text x="51.7043%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::div_checked (10 samples, 0.01%)</title><rect x="51.4738%" y="1701" width="0.0130%" height="15" fill="rgb(224,73,48)" fg:x="39641" fg:w="10"/><text x="51.7238%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::mul_checked (12 samples, 0.02%)</title><rect x="51.4868%" y="1701" width="0.0156%" height="15" fill="rgb(215,136,47)" fg:x="39651" fg:w="12"/><text x="51.7368%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::rem_checked (25 samples, 0.03%)</title><rect x="51.5024%" y="1701" width="0.0325%" height="15" fill="rgb(232,222,16)" fg:x="39663" fg:w="25"/><text x="51.7524%" y="1711.50"></text></g><g><title>core::ops::function::FnOnce::call_once (80 samples, 0.10%)</title><rect x="51.4543%" y="1717" width="0.1039%" height="15" fill="rgb(249,202,47)" fg:x="39626" fg:w="80"/><text x="51.7043%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::sub_checked (18 samples, 0.02%)</title><rect x="51.5348%" y="1701" width="0.0234%" height="15" fill="rgb(236,56,8)" fg:x="39688" fg:w="18"/><text x="51.7848%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::Value::u64 (10 samples, 0.01%)</title><rect x="51.5595%" y="1717" width="0.0130%" height="15" fill="rgb(222,6,3)" fg:x="39707" fg:w="10"/><text x="51.8095%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (138 samples, 0.18%)</title><rect x="51.3985%" y="1733" width="0.1792%" height="15" fill="rgb(254,222,28)" fg:x="39583" fg:w="138"/><text x="51.6485%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (27 samples, 0.04%)</title><rect x="51.5777%" y="1717" width="0.0351%" height="15" fill="rgb(219,57,23)" fg:x="39721" fg:w="27"/><text x="51.8277%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (32 samples, 0.04%)</title><rect x="51.6127%" y="1717" width="0.0416%" height="15" fill="rgb(251,106,48)" fg:x="39748" fg:w="32"/><text x="51.8627%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (8 samples, 0.01%)</title><rect x="51.6439%" y="1701" width="0.0104%" height="15" fill="rgb(242,2,23)" fg:x="39772" fg:w="8"/><text x="51.8939%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (116 samples, 0.15%)</title><rect x="51.5777%" y="1733" width="0.1506%" height="15" fill="rgb(212,109,31)" fg:x="39721" fg:w="116"/><text x="51.8277%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (57 samples, 0.07%)</title><rect x="51.6543%" y="1717" width="0.0740%" height="15" fill="rgb(241,9,22)" fg:x="39780" fg:w="57"/><text x="51.9043%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (46 samples, 0.06%)</title><rect x="51.6686%" y="1701" width="0.0597%" height="15" fill="rgb(209,64,27)" fg:x="39791" fg:w="46"/><text x="51.9186%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (9 samples, 0.01%)</title><rect x="51.7166%" y="1685" width="0.0117%" height="15" fill="rgb(248,13,44)" fg:x="39828" fg:w="9"/><text x="51.9666%" y="1695.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (317 samples, 0.41%)</title><rect x="51.3375%" y="1765" width="0.4116%" height="15" fill="rgb(213,86,6)" fg:x="39536" fg:w="317"/><text x="51.5875%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (307 samples, 0.40%)</title><rect x="51.3504%" y="1749" width="0.3986%" height="15" fill="rgb(247,11,18)" fg:x="39546" fg:w="307"/><text x="51.6004%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (16 samples, 0.02%)</title><rect x="51.7283%" y="1733" width="0.0208%" height="15" fill="rgb(252,31,11)" fg:x="39837" fg:w="16"/><text x="51.9783%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="51.8374%" y="1557" width="0.0104%" height="15" fill="rgb(215,63,51)" fg:x="39921" fg:w="8"/><text x="52.0874%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="51.8374%" y="1541" width="0.0104%" height="15" fill="rgb(222,180,4)" fg:x="39921" fg:w="8"/><text x="52.0874%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="51.8374%" y="1525" width="0.0104%" height="15" fill="rgb(233,4,23)" fg:x="39921" fg:w="8"/><text x="52.0874%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="51.8374%" y="1509" width="0.0104%" height="15" fill="rgb(230,116,22)" fg:x="39921" fg:w="8"/><text x="52.0874%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="51.8374%" y="1493" width="0.0104%" height="15" fill="rgb(222,20,14)" fg:x="39921" fg:w="8"/><text x="52.0874%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="51.8374%" y="1477" width="0.0104%" height="15" fill="rgb(210,176,43)" fg:x="39921" fg:w="8"/><text x="52.0874%" y="1487.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="51.8205%" y="1637" width="0.0325%" height="15" fill="rgb(219,67,32)" fg:x="39908" fg:w="25"/><text x="52.0705%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="51.8335%" y="1621" width="0.0195%" height="15" fill="rgb(228,91,39)" fg:x="39918" fg:w="15"/><text x="52.0835%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="51.8335%" y="1605" width="0.0195%" height="15" fill="rgb(254,63,14)" fg:x="39918" fg:w="15"/><text x="52.0835%" y="1615.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.02%)</title><rect x="51.8374%" y="1589" width="0.0156%" height="15" fill="rgb(216,171,39)" fg:x="39921" fg:w="12"/><text x="52.0874%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (12 samples, 0.02%)</title><rect x="51.8374%" y="1573" width="0.0156%" height="15" fill="rgb(248,68,25)" fg:x="39921" fg:w="12"/><text x="52.0874%" y="1583.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (19 samples, 0.02%)</title><rect x="51.8530%" y="1637" width="0.0247%" height="15" fill="rgb(239,63,16)" fg:x="39933" fg:w="19"/><text x="52.1030%" y="1647.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (14 samples, 0.02%)</title><rect x="51.8595%" y="1621" width="0.0182%" height="15" fill="rgb(225,111,43)" fg:x="39938" fg:w="14"/><text x="52.1095%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (9 samples, 0.01%)</title><rect x="51.8659%" y="1605" width="0.0117%" height="15" fill="rgb(246,165,17)" fg:x="39943" fg:w="9"/><text x="52.1159%" y="1615.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (11 samples, 0.01%)</title><rect x="51.8815%" y="1621" width="0.0143%" height="15" fill="rgb(208,124,1)" fg:x="39955" fg:w="11"/><text x="52.1315%" y="1631.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::access_path (8 samples, 0.01%)</title><rect x="51.8958%" y="1621" width="0.0104%" height="15" fill="rgb(234,147,33)" fg:x="39966" fg:w="8"/><text x="52.1458%" y="1631.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (28 samples, 0.04%)</title><rect x="51.8776%" y="1637" width="0.0364%" height="15" fill="rgb(240,86,30)" fg:x="39952" fg:w="28"/><text x="52.1276%" y="1647.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (80 samples, 0.10%)</title><rect x="51.8140%" y="1685" width="0.1039%" height="15" fill="rgb(237,34,51)" fg:x="39903" fg:w="80"/><text x="52.0640%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (80 samples, 0.10%)</title><rect x="51.8140%" y="1669" width="0.1039%" height="15" fill="rgb(232,131,41)" fg:x="39903" fg:w="80"/><text x="52.0640%" y="1679.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (80 samples, 0.10%)</title><rect x="51.8140%" y="1653" width="0.1039%" height="15" fill="rgb(227,129,53)" fg:x="39903" fg:w="80"/><text x="52.0640%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="51.9270%" y="1621" width="0.0117%" height="15" fill="rgb(230,90,35)" fg:x="39990" fg:w="9"/><text x="52.1770%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="51.9270%" y="1605" width="0.0117%" height="15" fill="rgb(248,88,27)" fg:x="39990" fg:w="9"/><text x="52.1770%" y="1615.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (8 samples, 0.01%)</title><rect x="51.9516%" y="1525" width="0.0104%" height="15" fill="rgb(223,18,17)" fg:x="40009" fg:w="8"/><text x="52.2016%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (18 samples, 0.02%)</title><rect x="51.9620%" y="1509" width="0.0234%" height="15" fill="rgb(241,11,10)" fg:x="40017" fg:w="18"/><text x="52.2120%" y="1519.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.02%)</title><rect x="51.9672%" y="1493" width="0.0182%" height="15" fill="rgb(232,111,52)" fg:x="40021" fg:w="14"/><text x="52.2172%" y="1503.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (37 samples, 0.05%)</title><rect x="51.9452%" y="1541" width="0.0480%" height="15" fill="rgb(228,67,8)" fg:x="40004" fg:w="37"/><text x="52.1952%" y="1551.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (24 samples, 0.03%)</title><rect x="51.9620%" y="1525" width="0.0312%" height="15" fill="rgb(251,168,31)" fg:x="40017" fg:w="24"/><text x="52.2120%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (106 samples, 0.14%)</title><rect x="51.9971%" y="1429" width="0.1376%" height="15" fill="rgb(249,164,11)" fg:x="40044" fg:w="106"/><text x="52.2471%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (106 samples, 0.14%)</title><rect x="51.9971%" y="1413" width="0.1376%" height="15" fill="rgb(239,81,9)" fg:x="40044" fg:w="106"/><text x="52.2471%" y="1423.50"></text></g><g><title>cfree (103 samples, 0.13%)</title><rect x="52.0010%" y="1397" width="0.1337%" height="15" fill="rgb(222,145,38)" fg:x="40047" fg:w="103"/><text x="52.2510%" y="1407.50"></text></g><g><title>[libc.so.6] (55 samples, 0.07%)</title><rect x="52.0633%" y="1381" width="0.0714%" height="15" fill="rgb(238,80,54)" fg:x="40095" fg:w="55"/><text x="52.3133%" y="1391.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (118 samples, 0.15%)</title><rect x="51.9932%" y="1525" width="0.1532%" height="15" fill="rgb(237,116,16)" fg:x="40041" fg:w="118"/><text x="52.2432%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (118 samples, 0.15%)</title><rect x="51.9932%" y="1509" width="0.1532%" height="15" fill="rgb(218,135,19)" fg:x="40041" fg:w="118"/><text x="52.2432%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (118 samples, 0.15%)</title><rect x="51.9932%" y="1493" width="0.1532%" height="15" fill="rgb(216,207,44)" fg:x="40041" fg:w="118"/><text x="52.2432%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (118 samples, 0.15%)</title><rect x="51.9932%" y="1477" width="0.1532%" height="15" fill="rgb(226,152,40)" fg:x="40041" fg:w="118"/><text x="52.2432%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (118 samples, 0.15%)</title><rect x="51.9932%" y="1461" width="0.1532%" height="15" fill="rgb(219,98,35)" fg:x="40041" fg:w="118"/><text x="52.2432%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (118 samples, 0.15%)</title><rect x="51.9932%" y="1445" width="0.1532%" height="15" fill="rgb(222,136,46)" fg:x="40041" fg:w="118"/><text x="52.2432%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.01%)</title><rect x="52.1347%" y="1429" width="0.0117%" height="15" fill="rgb(222,71,8)" fg:x="40150" fg:w="9"/><text x="52.3847%" y="1439.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (179 samples, 0.23%)</title><rect x="51.9179%" y="1685" width="0.2324%" height="15" fill="rgb(209,89,53)" fg:x="39983" fg:w="179"/><text x="52.1679%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (179 samples, 0.23%)</title><rect x="51.9179%" y="1669" width="0.2324%" height="15" fill="rgb(210,97,51)" fg:x="39983" fg:w="179"/><text x="52.1679%" y="1679.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (179 samples, 0.23%)</title><rect x="51.9179%" y="1653" width="0.2324%" height="15" fill="rgb(248,65,21)" fg:x="39983" fg:w="179"/><text x="52.1679%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (173 samples, 0.22%)</title><rect x="51.9257%" y="1637" width="0.2246%" height="15" fill="rgb(222,5,31)" fg:x="39989" fg:w="173"/><text x="52.1757%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (163 samples, 0.21%)</title><rect x="51.9387%" y="1621" width="0.2117%" height="15" fill="rgb(241,16,30)" fg:x="39999" fg:w="163"/><text x="52.1887%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.21%)</title><rect x="51.9400%" y="1605" width="0.2104%" height="15" fill="rgb(215,86,30)" fg:x="40000" fg:w="162"/><text x="52.1900%" y="1615.50"></text></g><g><title>core::mem::drop (159 samples, 0.21%)</title><rect x="51.9439%" y="1589" width="0.2065%" height="15" fill="rgb(235,26,44)" fg:x="40003" fg:w="159"/><text x="52.1939%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (159 samples, 0.21%)</title><rect x="51.9439%" y="1573" width="0.2065%" height="15" fill="rgb(228,147,14)" fg:x="40003" fg:w="159"/><text x="52.1939%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (159 samples, 0.21%)</title><rect x="51.9439%" y="1557" width="0.2065%" height="15" fill="rgb(253,38,50)" fg:x="40003" fg:w="159"/><text x="52.1939%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (121 samples, 0.16%)</title><rect x="51.9932%" y="1541" width="0.1571%" height="15" fill="rgb(251,151,16)" fg:x="40041" fg:w="121"/><text x="52.2432%" y="1551.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (275 samples, 0.36%)</title><rect x="51.8023%" y="1717" width="0.3571%" height="15" fill="rgb(224,64,19)" fg:x="39894" fg:w="275"/><text x="52.0523%" y="1727.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (271 samples, 0.35%)</title><rect x="51.8075%" y="1701" width="0.3519%" height="15" fill="rgb(235,214,47)" fg:x="39898" fg:w="271"/><text x="52.0575%" y="1711.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="52.1802%" y="1637" width="0.0104%" height="15" fill="rgb(218,15,19)" fg:x="40185" fg:w="8"/><text x="52.4302%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.02%)</title><rect x="52.1711%" y="1685" width="0.0208%" height="15" fill="rgb(247,209,3)" fg:x="40178" fg:w="16"/><text x="52.4211%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="52.1776%" y="1669" width="0.0143%" height="15" fill="rgb(217,29,2)" fg:x="40183" fg:w="11"/><text x="52.4276%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="52.1776%" y="1653" width="0.0143%" height="15" fill="rgb(234,9,9)" fg:x="40183" fg:w="11"/><text x="52.4276%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (19 samples, 0.02%)</title><rect x="52.1685%" y="1717" width="0.0247%" height="15" fill="rgb(207,43,14)" fg:x="40176" fg:w="19"/><text x="52.4185%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (19 samples, 0.02%)</title><rect x="52.1685%" y="1701" width="0.0247%" height="15" fill="rgb(216,219,36)" fg:x="40176" fg:w="19"/><text x="52.4185%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (18 samples, 0.02%)</title><rect x="52.1932%" y="1717" width="0.0234%" height="15" fill="rgb(238,12,26)" fg:x="40195" fg:w="18"/><text x="52.4432%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.02%)</title><rect x="52.1958%" y="1701" width="0.0208%" height="15" fill="rgb(226,67,30)" fg:x="40197" fg:w="16"/><text x="52.4458%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.02%)</title><rect x="52.1958%" y="1685" width="0.0208%" height="15" fill="rgb(229,154,7)" fg:x="40197" fg:w="16"/><text x="52.4458%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.02%)</title><rect x="52.1958%" y="1669" width="0.0208%" height="15" fill="rgb(249,90,18)" fg:x="40197" fg:w="16"/><text x="52.4458%" y="1679.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (12 samples, 0.02%)</title><rect x="52.2010%" y="1653" width="0.0156%" height="15" fill="rgb(223,53,15)" fg:x="40201" fg:w="12"/><text x="52.4510%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (15 samples, 0.02%)</title><rect x="52.2321%" y="1701" width="0.0195%" height="15" fill="rgb(253,86,38)" fg:x="40225" fg:w="15"/><text x="52.4821%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="52.2399%" y="1685" width="0.0117%" height="15" fill="rgb(222,198,9)" fg:x="40231" fg:w="9"/><text x="52.4899%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (43 samples, 0.06%)</title><rect x="52.2165%" y="1717" width="0.0558%" height="15" fill="rgb(240,146,25)" fg:x="40213" fg:w="43"/><text x="52.4665%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (16 samples, 0.02%)</title><rect x="52.2516%" y="1701" width="0.0208%" height="15" fill="rgb(225,38,10)" fg:x="40240" fg:w="16"/><text x="52.5016%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (22 samples, 0.03%)</title><rect x="52.2789%" y="1717" width="0.0286%" height="15" fill="rgb(246,93,4)" fg:x="40261" fg:w="22"/><text x="52.5289%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (20 samples, 0.03%)</title><rect x="52.2815%" y="1701" width="0.0260%" height="15" fill="rgb(222,55,18)" fg:x="40263" fg:w="20"/><text x="52.5315%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (17 samples, 0.02%)</title><rect x="52.2854%" y="1685" width="0.0221%" height="15" fill="rgb(233,137,48)" fg:x="40266" fg:w="17"/><text x="52.5354%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (17 samples, 0.02%)</title><rect x="52.2854%" y="1669" width="0.0221%" height="15" fill="rgb(214,8,54)" fg:x="40266" fg:w="17"/><text x="52.5354%" y="1679.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="52.2854%" y="1653" width="0.0221%" height="15" fill="rgb(206,75,4)" fg:x="40266" fg:w="17"/><text x="52.5354%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="52.2854%" y="1637" width="0.0221%" height="15" fill="rgb(238,171,14)" fg:x="40266" fg:w="17"/><text x="52.5354%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="52.2867%" y="1621" width="0.0208%" height="15" fill="rgb(233,70,41)" fg:x="40267" fg:w="16"/><text x="52.5367%" y="1631.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="52.2893%" y="1605" width="0.0182%" height="15" fill="rgb(214,68,36)" fg:x="40269" fg:w="14"/><text x="52.5393%" y="1615.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="52.2957%" y="1589" width="0.0117%" height="15" fill="rgb(223,29,5)" fg:x="40274" fg:w="9"/><text x="52.5457%" y="1599.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="52.3217%" y="1541" width="0.0156%" height="15" fill="rgb(251,22,40)" fg:x="40294" fg:w="12"/><text x="52.5717%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3204%" y="1621" width="0.0182%" height="15" fill="rgb(210,67,41)" fg:x="40293" fg:w="14"/><text x="52.5704%" y="1631.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3204%" y="1605" width="0.0182%" height="15" fill="rgb(225,177,31)" fg:x="40293" fg:w="14"/><text x="52.5704%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3204%" y="1589" width="0.0182%" height="15" fill="rgb(221,229,11)" fg:x="40293" fg:w="14"/><text x="52.5704%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3204%" y="1573" width="0.0182%" height="15" fill="rgb(247,172,52)" fg:x="40293" fg:w="14"/><text x="52.5704%" y="1583.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (14 samples, 0.02%)</title><rect x="52.3204%" y="1557" width="0.0182%" height="15" fill="rgb(212,73,19)" fg:x="40293" fg:w="14"/><text x="52.5704%" y="1567.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.02%)</title><rect x="52.3204%" y="1669" width="0.0221%" height="15" fill="rgb(244,7,46)" fg:x="40293" fg:w="17"/><text x="52.5704%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="52.3204%" y="1653" width="0.0221%" height="15" fill="rgb(230,113,20)" fg:x="40293" fg:w="17"/><text x="52.5704%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="52.3204%" y="1637" width="0.0221%" height="15" fill="rgb(209,97,30)" fg:x="40293" fg:w="17"/><text x="52.5704%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (24 samples, 0.03%)</title><rect x="52.3139%" y="1701" width="0.0312%" height="15" fill="rgb(243,89,12)" fg:x="40288" fg:w="24"/><text x="52.5639%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (24 samples, 0.03%)</title><rect x="52.3139%" y="1685" width="0.0312%" height="15" fill="rgb(228,32,19)" fg:x="40288" fg:w="24"/><text x="52.5639%" y="1695.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="52.3503%" y="1557" width="0.0104%" height="15" fill="rgb(248,25,17)" fg:x="40316" fg:w="8"/><text x="52.6003%" y="1567.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (41 samples, 0.05%)</title><rect x="52.3139%" y="1717" width="0.0532%" height="15" fill="rgb(232,161,29)" fg:x="40288" fg:w="41"/><text x="52.5639%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (17 samples, 0.02%)</title><rect x="52.3451%" y="1701" width="0.0221%" height="15" fill="rgb(251,192,11)" fg:x="40312" fg:w="17"/><text x="52.5951%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.02%)</title><rect x="52.3451%" y="1685" width="0.0221%" height="15" fill="rgb(240,47,32)" fg:x="40312" fg:w="17"/><text x="52.5951%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="52.3451%" y="1669" width="0.0221%" height="15" fill="rgb(250,16,45)" fg:x="40312" fg:w="17"/><text x="52.5951%" y="1679.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="52.3451%" y="1653" width="0.0221%" height="15" fill="rgb(227,217,42)" fg:x="40312" fg:w="17"/><text x="52.5951%" y="1663.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3490%" y="1637" width="0.0182%" height="15" fill="rgb(206,82,54)" fg:x="40315" fg:w="14"/><text x="52.5990%" y="1647.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3490%" y="1621" width="0.0182%" height="15" fill="rgb(243,145,25)" fg:x="40315" fg:w="14"/><text x="52.5990%" y="1631.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3490%" y="1605" width="0.0182%" height="15" fill="rgb(207,166,24)" fg:x="40315" fg:w="14"/><text x="52.5990%" y="1615.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (14 samples, 0.02%)</title><rect x="52.3490%" y="1589" width="0.0182%" height="15" fill="rgb(215,191,44)" fg:x="40315" fg:w="14"/><text x="52.5990%" y="1599.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (14 samples, 0.02%)</title><rect x="52.3490%" y="1573" width="0.0182%" height="15" fill="rgb(234,218,51)" fg:x="40315" fg:w="14"/><text x="52.5990%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (8 samples, 0.01%)</title><rect x="52.3672%" y="1717" width="0.0104%" height="15" fill="rgb(245,133,21)" fg:x="40329" fg:w="8"/><text x="52.6172%" y="1727.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="52.4035%" y="1669" width="0.0338%" height="15" fill="rgb(230,136,45)" fg:x="40357" fg:w="26"/><text x="52.6535%" y="1679.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="52.4113%" y="1653" width="0.0260%" height="15" fill="rgb(247,63,43)" fg:x="40363" fg:w="20"/><text x="52.6613%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="52.4113%" y="1637" width="0.0260%" height="15" fill="rgb(254,223,31)" fg:x="40363" fg:w="20"/><text x="52.6613%" y="1647.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.03%)</title><rect x="52.4113%" y="1621" width="0.0260%" height="15" fill="rgb(236,185,0)" fg:x="40363" fg:w="20"/><text x="52.6613%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (20 samples, 0.03%)</title><rect x="52.4113%" y="1605" width="0.0260%" height="15" fill="rgb(231,139,46)" fg:x="40363" fg:w="20"/><text x="52.6613%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%)</title><rect x="52.4191%" y="1589" width="0.0182%" height="15" fill="rgb(236,147,31)" fg:x="40369" fg:w="14"/><text x="52.6691%" y="1599.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="52.4191%" y="1573" width="0.0182%" height="15" fill="rgb(225,222,22)" fg:x="40369" fg:w="14"/><text x="52.6691%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="52.4464%" y="1589" width="0.0130%" height="15" fill="rgb(225,193,14)" fg:x="40390" fg:w="10"/><text x="52.6964%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="52.4464%" y="1573" width="0.0130%" height="15" fill="rgb(253,193,46)" fg:x="40390" fg:w="10"/><text x="52.6964%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="52.4464%" y="1557" width="0.0130%" height="15" fill="rgb(218,187,39)" fg:x="40390" fg:w="10"/><text x="52.6964%" y="1567.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.02%)</title><rect x="52.4451%" y="1621" width="0.0234%" height="15" fill="rgb(227,162,48)" fg:x="40389" fg:w="18"/><text x="52.6951%" y="1631.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.02%)</title><rect x="52.4451%" y="1605" width="0.0234%" height="15" fill="rgb(222,25,5)" fg:x="40389" fg:w="18"/><text x="52.6951%" y="1615.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="52.4827%" y="1557" width="0.0117%" height="15" fill="rgb(211,205,16)" fg:x="40418" fg:w="9"/><text x="52.7327%" y="1567.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.01%)</title><rect x="52.4827%" y="1541" width="0.0117%" height="15" fill="rgb(244,191,2)" fg:x="40418" fg:w="9"/><text x="52.7327%" y="1551.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.01%)</title><rect x="52.4827%" y="1525" width="0.0117%" height="15" fill="rgb(248,159,12)" fg:x="40418" fg:w="9"/><text x="52.7327%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.01%)</title><rect x="52.4827%" y="1573" width="0.0143%" height="15" fill="rgb(235,204,17)" fg:x="40418" fg:w="11"/><text x="52.7327%" y="1583.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (11 samples, 0.01%)</title><rect x="52.5022%" y="1573" width="0.0143%" height="15" fill="rgb(240,21,27)" fg:x="40433" fg:w="11"/><text x="52.7522%" y="1583.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (11 samples, 0.01%)</title><rect x="52.5022%" y="1557" width="0.0143%" height="15" fill="rgb(224,170,31)" fg:x="40433" fg:w="11"/><text x="52.7522%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="52.5022%" y="1541" width="0.0143%" height="15" fill="rgb(223,145,32)" fg:x="40433" fg:w="11"/><text x="52.7522%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (110 samples, 0.14%)</title><rect x="52.3776%" y="1717" width="0.1428%" height="15" fill="rgb(243,100,5)" fg:x="40337" fg:w="110"/><text x="52.6276%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (106 samples, 0.14%)</title><rect x="52.3827%" y="1701" width="0.1376%" height="15" fill="rgb(242,131,51)" fg:x="40341" fg:w="106"/><text x="52.6327%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (94 samples, 0.12%)</title><rect x="52.3983%" y="1685" width="0.1221%" height="15" fill="rgb(223,156,46)" fg:x="40353" fg:w="94"/><text x="52.6483%" y="1695.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (60 samples, 0.08%)</title><rect x="52.4425%" y="1669" width="0.0779%" height="15" fill="rgb(215,10,40)" fg:x="40387" fg:w="60"/><text x="52.6925%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (60 samples, 0.08%)</title><rect x="52.4425%" y="1653" width="0.0779%" height="15" fill="rgb(233,155,0)" fg:x="40387" fg:w="60"/><text x="52.6925%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (60 samples, 0.08%)</title><rect x="52.4425%" y="1637" width="0.0779%" height="15" fill="rgb(247,78,6)" fg:x="40387" fg:w="60"/><text x="52.6925%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.05%)</title><rect x="52.4684%" y="1621" width="0.0519%" height="15" fill="rgb(237,217,21)" fg:x="40407" fg:w="40"/><text x="52.7184%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.05%)</title><rect x="52.4684%" y="1605" width="0.0519%" height="15" fill="rgb(212,1,21)" fg:x="40407" fg:w="40"/><text x="52.7184%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (40 samples, 0.05%)</title><rect x="52.4684%" y="1589" width="0.0519%" height="15" fill="rgb(213,7,14)" fg:x="40407" fg:w="40"/><text x="52.7184%" y="1599.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="52.5399%" y="1685" width="0.0104%" height="15" fill="rgb(225,84,14)" fg:x="40462" fg:w="8"/><text x="52.7899%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (12 samples, 0.02%)</title><rect x="52.6074%" y="1589" width="0.0156%" height="15" fill="rgb(239,216,39)" fg:x="40514" fg:w="12"/><text x="52.8574%" y="1599.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="52.6074%" y="1573" width="0.0156%" height="15" fill="rgb(253,29,23)" fg:x="40514" fg:w="12"/><text x="52.8574%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="52.6113%" y="1557" width="0.0117%" height="15" fill="rgb(220,167,50)" fg:x="40517" fg:w="9"/><text x="52.8613%" y="1567.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="52.6113%" y="1541" width="0.0117%" height="15" fill="rgb(232,141,1)" fg:x="40517" fg:w="9"/><text x="52.8613%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="52.6113%" y="1525" width="0.0117%" height="15" fill="rgb(222,210,1)" fg:x="40517" fg:w="9"/><text x="52.8613%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="52.6113%" y="1509" width="0.0117%" height="15" fill="rgb(219,84,10)" fg:x="40517" fg:w="9"/><text x="52.8613%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="52.6113%" y="1493" width="0.0117%" height="15" fill="rgb(245,188,6)" fg:x="40517" fg:w="9"/><text x="52.8613%" y="1503.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="52.6126%" y="1477" width="0.0104%" height="15" fill="rgb(252,139,39)" fg:x="40518" fg:w="8"/><text x="52.8626%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (43 samples, 0.06%)</title><rect x="52.5762%" y="1605" width="0.0558%" height="15" fill="rgb(218,42,26)" fg:x="40490" fg:w="43"/><text x="52.8262%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (58 samples, 0.08%)</title><rect x="52.5762%" y="1621" width="0.0753%" height="15" fill="rgb(237,226,51)" fg:x="40490" fg:w="58"/><text x="52.8262%" y="1631.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (15 samples, 0.02%)</title><rect x="52.6321%" y="1605" width="0.0195%" height="15" fill="rgb(246,15,17)" fg:x="40533" fg:w="15"/><text x="52.8821%" y="1615.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.03%)</title><rect x="52.6515%" y="1621" width="0.0325%" height="15" fill="rgb(228,170,42)" fg:x="40548" fg:w="25"/><text x="52.9015%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.04%)</title><rect x="52.6879%" y="1573" width="0.0390%" height="15" fill="rgb(248,118,53)" fg:x="40576" fg:w="30"/><text x="52.9379%" y="1583.50"></text></g><g><title>malloc (25 samples, 0.03%)</title><rect x="52.6944%" y="1557" width="0.0325%" height="15" fill="rgb(207,30,10)" fg:x="40581" fg:w="25"/><text x="52.9444%" y="1567.50"></text></g><g><title>[libc.so.6] (24 samples, 0.03%)</title><rect x="52.6957%" y="1541" width="0.0312%" height="15" fill="rgb(217,104,38)" fg:x="40582" fg:w="24"/><text x="52.9457%" y="1551.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="52.7165%" y="1525" width="0.0104%" height="15" fill="rgb(211,165,26)" fg:x="40598" fg:w="8"/><text x="52.9665%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (33 samples, 0.04%)</title><rect x="52.6853%" y="1605" width="0.0429%" height="15" fill="rgb(247,38,9)" fg:x="40574" fg:w="33"/><text x="52.9353%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.04%)</title><rect x="52.6853%" y="1589" width="0.0429%" height="15" fill="rgb(218,187,8)" fg:x="40574" fg:w="33"/><text x="52.9353%" y="1599.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (153 samples, 0.20%)</title><rect x="52.5554%" y="1637" width="0.1987%" height="15" fill="rgb(247,94,28)" fg:x="40474" fg:w="153"/><text x="52.8054%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (54 samples, 0.07%)</title><rect x="52.6840%" y="1621" width="0.0701%" height="15" fill="rgb(218,173,30)" fg:x="40573" fg:w="54"/><text x="52.9340%" y="1631.50"></text></g><g><title>core::ptr::write (20 samples, 0.03%)</title><rect x="52.7281%" y="1605" width="0.0260%" height="15" fill="rgb(245,45,36)" fg:x="40607" fg:w="20"/><text x="52.9781%" y="1615.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (154 samples, 0.20%)</title><rect x="52.5554%" y="1653" width="0.2000%" height="15" fill="rgb(221,172,44)" fg:x="40474" fg:w="154"/><text x="52.8054%" y="1663.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (13 samples, 0.02%)</title><rect x="52.7580%" y="1589" width="0.0169%" height="15" fill="rgb(222,45,12)" fg:x="40630" fg:w="13"/><text x="53.0080%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.02%)</title><rect x="52.7580%" y="1573" width="0.0169%" height="15" fill="rgb(250,10,22)" fg:x="40630" fg:w="13"/><text x="53.0080%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="52.7580%" y="1557" width="0.0169%" height="15" fill="rgb(239,27,0)" fg:x="40630" fg:w="13"/><text x="53.0080%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.02%)</title><rect x="52.7580%" y="1541" width="0.0169%" height="15" fill="rgb(223,118,22)" fg:x="40630" fg:w="13"/><text x="53.0080%" y="1551.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (13 samples, 0.02%)</title><rect x="52.7580%" y="1525" width="0.0169%" height="15" fill="rgb(251,81,25)" fg:x="40630" fg:w="13"/><text x="53.0080%" y="1535.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="52.7606%" y="1509" width="0.0143%" height="15" fill="rgb(237,225,53)" fg:x="40632" fg:w="11"/><text x="53.0106%" y="1519.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (170 samples, 0.22%)</title><rect x="52.5554%" y="1669" width="0.2207%" height="15" fill="rgb(237,186,51)" fg:x="40474" fg:w="170"/><text x="52.8054%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (15 samples, 0.02%)</title><rect x="52.7567%" y="1653" width="0.0195%" height="15" fill="rgb(247,209,11)" fg:x="40629" fg:w="15"/><text x="53.0067%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.02%)</title><rect x="52.7567%" y="1637" width="0.0195%" height="15" fill="rgb(223,109,27)" fg:x="40629" fg:w="15"/><text x="53.0067%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="52.7567%" y="1621" width="0.0195%" height="15" fill="rgb(246,181,13)" fg:x="40629" fg:w="15"/><text x="53.0067%" y="1631.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="52.7567%" y="1605" width="0.0195%" height="15" fill="rgb(234,57,44)" fg:x="40629" fg:w="15"/><text x="53.0067%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (183 samples, 0.24%)</title><rect x="52.5503%" y="1685" width="0.2376%" height="15" fill="rgb(211,227,50)" fg:x="40470" fg:w="183"/><text x="52.8003%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (9 samples, 0.01%)</title><rect x="52.7762%" y="1669" width="0.0117%" height="15" fill="rgb(254,57,34)" fg:x="40644" fg:w="9"/><text x="53.0262%" y="1679.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="52.7762%" y="1653" width="0.0117%" height="15" fill="rgb(227,212,26)" fg:x="40644" fg:w="9"/><text x="53.0262%" y="1663.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (780 samples, 1.01%)</title><rect x="51.7763%" y="1733" width="1.0128%" height="15" fill="rgb(244,169,44)" fg:x="39874" fg:w="780"/><text x="52.0263%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (201 samples, 0.26%)</title><rect x="52.5282%" y="1717" width="0.2610%" height="15" fill="rgb(236,135,50)" fg:x="40453" fg:w="201"/><text x="52.7782%" y="1727.50"></text></g><g><title>bcs::de::from_bytes_seed (198 samples, 0.26%)</title><rect x="52.5321%" y="1701" width="0.2571%" height="15" fill="rgb(241,89,30)" fg:x="40456" fg:w="198"/><text x="52.7821%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (799 samples, 1.04%)</title><rect x="51.7595%" y="1749" width="1.0375%" height="15" fill="rgb(206,113,34)" fg:x="39861" fg:w="799"/><text x="52.0095%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (827 samples, 1.07%)</title><rect x="51.7491%" y="1765" width="1.0739%" height="15" fill="rgb(218,104,52)" fg:x="39853" fg:w="827"/><text x="51.9991%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (15 samples, 0.02%)</title><rect x="52.8035%" y="1749" width="0.0195%" height="15" fill="rgb(223,82,32)" fg:x="40665" fg:w="15"/><text x="53.0535%" y="1759.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (26 samples, 0.03%)</title><rect x="52.9008%" y="1525" width="0.0338%" height="15" fill="rgb(249,219,30)" fg:x="40740" fg:w="26"/><text x="53.1508%" y="1535.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="52.9008%" y="1509" width="0.0338%" height="15" fill="rgb(233,141,21)" fg:x="40740" fg:w="26"/><text x="53.1508%" y="1519.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="52.9047%" y="1493" width="0.0299%" height="15" fill="rgb(252,87,44)" fg:x="40743" fg:w="23"/><text x="53.1547%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="52.9047%" y="1477" width="0.0299%" height="15" fill="rgb(229,48,33)" fg:x="40743" fg:w="23"/><text x="53.1547%" y="1487.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.03%)</title><rect x="52.9073%" y="1461" width="0.0273%" height="15" fill="rgb(229,23,22)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1471.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (21 samples, 0.03%)</title><rect x="52.9073%" y="1445" width="0.0273%" height="15" fill="rgb(244,116,16)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (21 samples, 0.03%)</title><rect x="52.9073%" y="1429" width="0.0273%" height="15" fill="rgb(247,45,10)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.03%)</title><rect x="52.9073%" y="1413" width="0.0273%" height="15" fill="rgb(228,60,29)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.03%)</title><rect x="52.9073%" y="1397" width="0.0273%" height="15" fill="rgb(205,129,15)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.03%)</title><rect x="52.9073%" y="1381" width="0.0273%" height="15" fill="rgb(206,229,4)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.03%)</title><rect x="52.9073%" y="1365" width="0.0273%" height="15" fill="rgb(249,191,30)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.03%)</title><rect x="52.9073%" y="1349" width="0.0273%" height="15" fill="rgb(250,84,54)" fg:x="40745" fg:w="21"/><text x="53.1573%" y="1359.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="52.9099%" y="1333" width="0.0247%" height="15" fill="rgb(207,25,53)" fg:x="40747" fg:w="19"/><text x="53.1599%" y="1343.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="52.9190%" y="1317" width="0.0156%" height="15" fill="rgb(235,40,8)" fg:x="40754" fg:w="12"/><text x="53.1690%" y="1327.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (39 samples, 0.05%)</title><rect x="52.8982%" y="1557" width="0.0506%" height="15" fill="rgb(226,169,33)" fg:x="40738" fg:w="39"/><text x="53.1482%" y="1567.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.05%)</title><rect x="52.9008%" y="1541" width="0.0480%" height="15" fill="rgb(238,110,8)" fg:x="40740" fg:w="37"/><text x="53.1508%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="52.9346%" y="1525" width="0.0143%" height="15" fill="rgb(251,206,12)" fg:x="40766" fg:w="11"/><text x="53.1846%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.01%)</title><rect x="52.9346%" y="1509" width="0.0143%" height="15" fill="rgb(248,171,18)" fg:x="40766" fg:w="11"/><text x="53.1846%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="52.9346%" y="1493" width="0.0143%" height="15" fill="rgb(213,65,46)" fg:x="40766" fg:w="11"/><text x="53.1846%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="52.9346%" y="1477" width="0.0143%" height="15" fill="rgb(211,154,15)" fg:x="40766" fg:w="11"/><text x="53.1846%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="52.9346%" y="1461" width="0.0143%" height="15" fill="rgb(217,75,43)" fg:x="40766" fg:w="11"/><text x="53.1846%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="52.9515%" y="1509" width="0.0143%" height="15" fill="rgb(230,32,33)" fg:x="40779" fg:w="11"/><text x="53.2015%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="52.9515%" y="1493" width="0.0143%" height="15" fill="rgb(221,100,16)" fg:x="40779" fg:w="11"/><text x="53.2015%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="52.9515%" y="1477" width="0.0143%" height="15" fill="rgb(212,129,47)" fg:x="40779" fg:w="11"/><text x="53.2015%" y="1487.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="52.9554%" y="1461" width="0.0104%" height="15" fill="rgb(239,217,47)" fg:x="40782" fg:w="8"/><text x="53.2054%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58 samples, 0.08%)</title><rect x="52.8944%" y="1621" width="0.0753%" height="15" fill="rgb(230,84,24)" fg:x="40735" fg:w="58"/><text x="53.1444%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56 samples, 0.07%)</title><rect x="52.8970%" y="1605" width="0.0727%" height="15" fill="rgb(214,153,51)" fg:x="40737" fg:w="56"/><text x="53.1470%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (56 samples, 0.07%)</title><rect x="52.8970%" y="1589" width="0.0727%" height="15" fill="rgb(231,6,35)" fg:x="40737" fg:w="56"/><text x="53.1470%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56 samples, 0.07%)</title><rect x="52.8970%" y="1573" width="0.0727%" height="15" fill="rgb(229,122,30)" fg:x="40737" fg:w="56"/><text x="53.1470%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="52.9489%" y="1557" width="0.0208%" height="15" fill="rgb(234,71,10)" fg:x="40777" fg:w="16"/><text x="53.1989%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="52.9502%" y="1541" width="0.0195%" height="15" fill="rgb(215,173,26)" fg:x="40778" fg:w="15"/><text x="53.2002%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.02%)</title><rect x="52.9502%" y="1525" width="0.0195%" height="15" fill="rgb(248,118,52)" fg:x="40778" fg:w="15"/><text x="53.2002%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (22 samples, 0.03%)</title><rect x="52.9710%" y="1557" width="0.0286%" height="15" fill="rgb(237,55,46)" fg:x="40794" fg:w="22"/><text x="53.2210%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="52.9710%" y="1541" width="0.0286%" height="15" fill="rgb(243,214,43)" fg:x="40794" fg:w="22"/><text x="53.2210%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.03%)</title><rect x="52.9710%" y="1525" width="0.0286%" height="15" fill="rgb(252,123,30)" fg:x="40794" fg:w="22"/><text x="53.2210%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.03%)</title><rect x="52.9723%" y="1509" width="0.0273%" height="15" fill="rgb(215,73,39)" fg:x="40795" fg:w="21"/><text x="53.2223%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.03%)</title><rect x="52.9723%" y="1493" width="0.0273%" height="15" fill="rgb(251,194,29)" fg:x="40795" fg:w="21"/><text x="53.2223%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.03%)</title><rect x="52.9723%" y="1477" width="0.0273%" height="15" fill="rgb(224,58,52)" fg:x="40795" fg:w="21"/><text x="53.2223%" y="1487.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="52.9775%" y="1461" width="0.0221%" height="15" fill="rgb(248,106,46)" fg:x="40799" fg:w="17"/><text x="53.2275%" y="1471.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="52.9891%" y="1445" width="0.0104%" height="15" fill="rgb(223,80,29)" fg:x="40808" fg:w="8"/><text x="53.2391%" y="1455.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (85 samples, 0.11%)</title><rect x="52.8905%" y="1637" width="0.1104%" height="15" fill="rgb(243,137,9)" fg:x="40732" fg:w="85"/><text x="53.1405%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="52.9697%" y="1621" width="0.0312%" height="15" fill="rgb(235,121,28)" fg:x="40793" fg:w="24"/><text x="53.2197%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="52.9697%" y="1605" width="0.0312%" height="15" fill="rgb(219,121,41)" fg:x="40793" fg:w="24"/><text x="53.2197%" y="1615.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 0.03%)</title><rect x="52.9710%" y="1589" width="0.0299%" height="15" fill="rgb(251,60,6)" fg:x="40794" fg:w="23"/><text x="53.2210%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (23 samples, 0.03%)</title><rect x="52.9710%" y="1573" width="0.0299%" height="15" fill="rgb(208,12,30)" fg:x="40794" fg:w="23"/><text x="53.2210%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.01%)</title><rect x="53.0320%" y="1557" width="0.0104%" height="15" fill="rgb(207,176,36)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1567.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (8 samples, 0.01%)</title><rect x="53.0320%" y="1541" width="0.0104%" height="15" fill="rgb(211,188,29)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1551.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (8 samples, 0.01%)</title><rect x="53.0320%" y="1525" width="0.0104%" height="15" fill="rgb(220,184,37)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.01%)</title><rect x="53.0320%" y="1509" width="0.0104%" height="15" fill="rgb(239,87,37)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="53.0320%" y="1493" width="0.0104%" height="15" fill="rgb(232,113,44)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="53.0320%" y="1477" width="0.0104%" height="15" fill="rgb(246,25,39)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="53.0320%" y="1461" width="0.0104%" height="15" fill="rgb(247,30,13)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="53.0320%" y="1445" width="0.0104%" height="15" fill="rgb(230,176,35)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="53.0320%" y="1429" width="0.0104%" height="15" fill="rgb(222,23,18)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="53.0320%" y="1413" width="0.0104%" height="15" fill="rgb(234,86,8)" fg:x="40841" fg:w="8"/><text x="53.2820%" y="1423.50"></text></g><g><title>bcs::ser::to_bytes (16 samples, 0.02%)</title><rect x="53.0242%" y="1605" width="0.0208%" height="15" fill="rgb(206,218,47)" fg:x="40835" fg:w="16"/><text x="53.2742%" y="1615.50"></text></g><g><title>bcs::ser::serialize_into (16 samples, 0.02%)</title><rect x="53.0242%" y="1589" width="0.0208%" height="15" fill="rgb(229,35,31)" fg:x="40835" fg:w="16"/><text x="53.2742%" y="1599.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (16 samples, 0.02%)</title><rect x="53.0242%" y="1573" width="0.0208%" height="15" fill="rgb(242,81,7)" fg:x="40835" fg:w="16"/><text x="53.2742%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (20 samples, 0.03%)</title><rect x="53.0502%" y="1573" width="0.0260%" height="15" fill="rgb(231,11,35)" fg:x="40855" fg:w="20"/><text x="53.3002%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="53.0502%" y="1557" width="0.0260%" height="15" fill="rgb(219,218,17)" fg:x="40855" fg:w="20"/><text x="53.3002%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (16 samples, 0.02%)</title><rect x="53.0554%" y="1541" width="0.0208%" height="15" fill="rgb(221,83,32)" fg:x="40859" fg:w="16"/><text x="53.3054%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (15 samples, 0.02%)</title><rect x="53.0567%" y="1525" width="0.0195%" height="15" fill="rgb(233,49,54)" fg:x="40860" fg:w="15"/><text x="53.3067%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (10 samples, 0.01%)</title><rect x="53.0632%" y="1509" width="0.0130%" height="15" fill="rgb(206,18,51)" fg:x="40865" fg:w="10"/><text x="53.3132%" y="1519.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (65 samples, 0.08%)</title><rect x="53.0008%" y="1637" width="0.0844%" height="15" fill="rgb(249,193,15)" fg:x="40817" fg:w="65"/><text x="53.2508%" y="1647.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (51 samples, 0.07%)</title><rect x="53.0190%" y="1621" width="0.0662%" height="15" fill="rgb(245,186,19)" fg:x="40831" fg:w="51"/><text x="53.2690%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (30 samples, 0.04%)</title><rect x="53.0463%" y="1605" width="0.0390%" height="15" fill="rgb(230,4,24)" fg:x="40852" fg:w="30"/><text x="53.2963%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (27 samples, 0.04%)</title><rect x="53.0502%" y="1589" width="0.0351%" height="15" fill="rgb(234,75,27)" fg:x="40855" fg:w="27"/><text x="53.3002%" y="1599.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (12 samples, 0.02%)</title><rect x="53.0995%" y="1573" width="0.0156%" height="15" fill="rgb(244,187,35)" fg:x="40893" fg:w="12"/><text x="53.3495%" y="1583.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (22 samples, 0.03%)</title><rect x="53.0904%" y="1605" width="0.0286%" height="15" fill="rgb(241,97,43)" fg:x="40886" fg:w="22"/><text x="53.3404%" y="1615.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (22 samples, 0.03%)</title><rect x="53.0904%" y="1589" width="0.0286%" height="15" fill="rgb(236,94,2)" fg:x="40886" fg:w="22"/><text x="53.3404%" y="1599.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (34 samples, 0.04%)</title><rect x="53.0891%" y="1621" width="0.0441%" height="15" fill="rgb(231,175,7)" fg:x="40885" fg:w="34"/><text x="53.3391%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="53.1190%" y="1605" width="0.0143%" height="15" fill="rgb(236,89,47)" fg:x="40908" fg:w="11"/><text x="53.3690%" y="1615.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes::{{closure}} (10 samples, 0.01%)</title><rect x="53.1203%" y="1589" width="0.0130%" height="15" fill="rgb(213,191,37)" fg:x="40909" fg:w="10"/><text x="53.3703%" y="1599.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::into_bytes (10 samples, 0.01%)</title><rect x="53.1203%" y="1573" width="0.0130%" height="15" fill="rgb(252,0,34)" fg:x="40909" fg:w="10"/><text x="53.3703%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (16 samples, 0.02%)</title><rect x="53.1411%" y="1621" width="0.0208%" height="15" fill="rgb(208,145,44)" fg:x="40925" fg:w="16"/><text x="53.3911%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (16 samples, 0.02%)</title><rect x="53.1411%" y="1605" width="0.0208%" height="15" fill="rgb(227,95,50)" fg:x="40925" fg:w="16"/><text x="53.3911%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="53.1411%" y="1589" width="0.0208%" height="15" fill="rgb(222,136,24)" fg:x="40925" fg:w="16"/><text x="53.3911%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="53.1424%" y="1573" width="0.0195%" height="15" fill="rgb(218,105,10)" fg:x="40926" fg:w="15"/><text x="53.3924%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.02%)</title><rect x="53.1424%" y="1557" width="0.0195%" height="15" fill="rgb(216,65,28)" fg:x="40926" fg:w="15"/><text x="53.3924%" y="1567.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="53.1476%" y="1541" width="0.0143%" height="15" fill="rgb(229,6,28)" fg:x="40930" fg:w="11"/><text x="53.3976%" y="1551.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="53.1515%" y="1525" width="0.0104%" height="15" fill="rgb(222,160,42)" fg:x="40933" fg:w="8"/><text x="53.4015%" y="1535.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (62 samples, 0.08%)</title><rect x="53.0852%" y="1637" width="0.0805%" height="15" fill="rgb(235,83,49)" fg:x="40882" fg:w="62"/><text x="53.3352%" y="1647.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (221 samples, 0.29%)</title><rect x="52.8827%" y="1685" width="0.2870%" height="15" fill="rgb(236,86,36)" fg:x="40726" fg:w="221"/><text x="53.1327%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (221 samples, 0.29%)</title><rect x="52.8827%" y="1669" width="0.2870%" height="15" fill="rgb(236,19,41)" fg:x="40726" fg:w="221"/><text x="53.1327%" y="1679.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (221 samples, 0.29%)</title><rect x="52.8827%" y="1653" width="0.2870%" height="15" fill="rgb(217,71,31)" fg:x="40726" fg:w="221"/><text x="53.1327%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::borrow::Borrow&lt;move_core_types::identifier::IdentStr&gt;&gt;::borrow (8 samples, 0.01%)</title><rect x="53.1800%" y="1637" width="0.0104%" height="15" fill="rgb(236,209,25)" fg:x="40955" fg:w="8"/><text x="53.4300%" y="1647.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (9 samples, 0.01%)</title><rect x="53.2125%" y="1525" width="0.0117%" height="15" fill="rgb(247,104,21)" fg:x="40980" fg:w="9"/><text x="53.4625%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (13 samples, 0.02%)</title><rect x="53.2242%" y="1509" width="0.0169%" height="15" fill="rgb(243,80,38)" fg:x="40989" fg:w="13"/><text x="53.4742%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (27 samples, 0.04%)</title><rect x="53.2099%" y="1541" width="0.0351%" height="15" fill="rgb(232,109,38)" fg:x="40978" fg:w="27"/><text x="53.4599%" y="1551.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (16 samples, 0.02%)</title><rect x="53.2242%" y="1525" width="0.0208%" height="15" fill="rgb(212,177,53)" fg:x="40989" fg:w="16"/><text x="53.4742%" y="1535.50"></text></g><g><title>core::mem::drop (37 samples, 0.05%)</title><rect x="53.2099%" y="1589" width="0.0480%" height="15" fill="rgb(227,30,34)" fg:x="40978" fg:w="37"/><text x="53.4599%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (37 samples, 0.05%)</title><rect x="53.2099%" y="1573" width="0.0480%" height="15" fill="rgb(205,175,25)" fg:x="40978" fg:w="37"/><text x="53.4599%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.05%)</title><rect x="53.2099%" y="1557" width="0.0480%" height="15" fill="rgb(249,39,54)" fg:x="40978" fg:w="37"/><text x="53.4599%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (10 samples, 0.01%)</title><rect x="53.2449%" y="1541" width="0.0130%" height="15" fill="rgb(215,54,37)" fg:x="41005" fg:w="10"/><text x="53.4949%" y="1551.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (10 samples, 0.01%)</title><rect x="53.2449%" y="1525" width="0.0130%" height="15" fill="rgb(205,60,46)" fg:x="41005" fg:w="10"/><text x="53.4949%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (53 samples, 0.07%)</title><rect x="53.1904%" y="1621" width="0.0688%" height="15" fill="rgb(238,89,29)" fg:x="40963" fg:w="53"/><text x="53.4404%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.07%)</title><rect x="53.1904%" y="1605" width="0.0688%" height="15" fill="rgb(212,48,10)" fg:x="40963" fg:w="53"/><text x="53.4404%" y="1615.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (15 samples, 0.02%)</title><rect x="53.2657%" y="1509" width="0.0195%" height="15" fill="rgb(237,186,28)" fg:x="41021" fg:w="15"/><text x="53.5157%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (15 samples, 0.02%)</title><rect x="53.2657%" y="1493" width="0.0195%" height="15" fill="rgb(237,204,4)" fg:x="41021" fg:w="15"/><text x="53.5157%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="53.2670%" y="1477" width="0.0182%" height="15" fill="rgb(237,15,47)" fg:x="41022" fg:w="14"/><text x="53.5170%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="53.2670%" y="1461" width="0.0182%" height="15" fill="rgb(244,110,25)" fg:x="41022" fg:w="14"/><text x="53.5170%" y="1471.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="53.2709%" y="1445" width="0.0143%" height="15" fill="rgb(241,12,16)" fg:x="41025" fg:w="11"/><text x="53.5209%" y="1455.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (16 samples, 0.02%)</title><rect x="53.2657%" y="1525" width="0.0208%" height="15" fill="rgb(235,25,9)" fg:x="41021" fg:w="16"/><text x="53.5157%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (25 samples, 0.03%)</title><rect x="53.2891%" y="1509" width="0.0325%" height="15" fill="rgb(245,159,19)" fg:x="41039" fg:w="25"/><text x="53.5391%" y="1519.50"></text></g><g><title>alloc::collections::btree::mem::replace (20 samples, 0.03%)</title><rect x="53.2956%" y="1493" width="0.0260%" height="15" fill="rgb(236,63,32)" fg:x="41044" fg:w="20"/><text x="53.5456%" y="1503.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (52 samples, 0.07%)</title><rect x="53.2631%" y="1541" width="0.0675%" height="15" fill="rgb(235,32,52)" fg:x="41019" fg:w="52"/><text x="53.5131%" y="1551.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (34 samples, 0.04%)</title><rect x="53.2865%" y="1525" width="0.0441%" height="15" fill="rgb(209,176,21)" fg:x="41037" fg:w="34"/><text x="53.5365%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (85 samples, 0.11%)</title><rect x="53.3319%" y="1429" width="0.1104%" height="15" fill="rgb(205,90,42)" fg:x="41072" fg:w="85"/><text x="53.5819%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (85 samples, 0.11%)</title><rect x="53.3319%" y="1413" width="0.1104%" height="15" fill="rgb(213,132,16)" fg:x="41072" fg:w="85"/><text x="53.5819%" y="1423.50"></text></g><g><title>cfree (83 samples, 0.11%)</title><rect x="53.3345%" y="1397" width="0.1078%" height="15" fill="rgb(232,11,22)" fg:x="41074" fg:w="83"/><text x="53.5845%" y="1407.50"></text></g><g><title>[libc.so.6] (49 samples, 0.06%)</title><rect x="53.3787%" y="1381" width="0.0636%" height="15" fill="rgb(248,167,41)" fg:x="41108" fg:w="49"/><text x="53.6287%" y="1391.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (91 samples, 0.12%)</title><rect x="53.3306%" y="1525" width="0.1182%" height="15" fill="rgb(209,127,6)" fg:x="41071" fg:w="91"/><text x="53.5806%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (91 samples, 0.12%)</title><rect x="53.3306%" y="1509" width="0.1182%" height="15" fill="rgb(246,210,34)" fg:x="41071" fg:w="91"/><text x="53.5806%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (91 samples, 0.12%)</title><rect x="53.3306%" y="1493" width="0.1182%" height="15" fill="rgb(238,165,13)" fg:x="41071" fg:w="91"/><text x="53.5806%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (91 samples, 0.12%)</title><rect x="53.3306%" y="1477" width="0.1182%" height="15" fill="rgb(233,98,15)" fg:x="41071" fg:w="91"/><text x="53.5806%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (91 samples, 0.12%)</title><rect x="53.3306%" y="1461" width="0.1182%" height="15" fill="rgb(215,215,51)" fg:x="41071" fg:w="91"/><text x="53.5806%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.12%)</title><rect x="53.3306%" y="1445" width="0.1182%" height="15" fill="rgb(217,161,25)" fg:x="41071" fg:w="91"/><text x="53.5806%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (200 samples, 0.26%)</title><rect x="53.1904%" y="1637" width="0.2597%" height="15" fill="rgb(217,167,48)" fg:x="40963" fg:w="200"/><text x="53.4404%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (147 samples, 0.19%)</title><rect x="53.2592%" y="1621" width="0.1909%" height="15" fill="rgb(205,163,34)" fg:x="41016" fg:w="147"/><text x="53.5092%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.19%)</title><rect x="53.2592%" y="1605" width="0.1909%" height="15" fill="rgb(241,197,31)" fg:x="41016" fg:w="147"/><text x="53.5092%" y="1615.50"></text></g><g><title>core::mem::drop (144 samples, 0.19%)</title><rect x="53.2631%" y="1589" width="0.1870%" height="15" fill="rgb(225,123,11)" fg:x="41019" fg:w="144"/><text x="53.5131%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (144 samples, 0.19%)</title><rect x="53.2631%" y="1573" width="0.1870%" height="15" fill="rgb(217,4,20)" fg:x="41019" fg:w="144"/><text x="53.5131%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.19%)</title><rect x="53.2631%" y="1557" width="0.1870%" height="15" fill="rgb(215,55,9)" fg:x="41019" fg:w="144"/><text x="53.5131%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (92 samples, 0.12%)</title><rect x="53.3306%" y="1541" width="0.1195%" height="15" fill="rgb(218,165,5)" fg:x="41071" fg:w="92"/><text x="53.5806%" y="1551.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (221 samples, 0.29%)</title><rect x="53.1696%" y="1685" width="0.2870%" height="15" fill="rgb(222,175,15)" fg:x="40947" fg:w="221"/><text x="53.4196%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (221 samples, 0.29%)</title><rect x="53.1696%" y="1669" width="0.2870%" height="15" fill="rgb(223,85,34)" fg:x="40947" fg:w="221"/><text x="53.4196%" y="1679.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (214 samples, 0.28%)</title><rect x="53.1787%" y="1653" width="0.2779%" height="15" fill="rgb(234,228,29)" fg:x="40954" fg:w="214"/><text x="53.4287%" y="1663.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (468 samples, 0.61%)</title><rect x="52.8684%" y="1717" width="0.6077%" height="15" fill="rgb(239,7,28)" fg:x="40715" fg:w="468"/><text x="53.1184%" y="1727.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (462 samples, 0.60%)</title><rect x="52.8762%" y="1701" width="0.5999%" height="15" fill="rgb(252,222,53)" fg:x="40721" fg:w="462"/><text x="53.1262%" y="1711.50"></text></g><g><title>move_core_types::language_storage::StructTag::module_id (15 samples, 0.02%)</title><rect x="53.4566%" y="1685" width="0.0195%" height="15" fill="rgb(232,146,44)" fg:x="41168" fg:w="15"/><text x="53.7066%" y="1695.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (9 samples, 0.01%)</title><rect x="53.4644%" y="1669" width="0.0117%" height="15" fill="rgb(243,223,53)" fg:x="41174" fg:w="9"/><text x="53.7144%" y="1679.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="53.4644%" y="1653" width="0.0117%" height="15" fill="rgb(219,128,25)" fg:x="41174" fg:w="9"/><text x="53.7144%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="53.4644%" y="1637" width="0.0117%" height="15" fill="rgb(223,56,32)" fg:x="41174" fg:w="9"/><text x="53.7144%" y="1647.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="53.4657%" y="1621" width="0.0104%" height="15" fill="rgb(237,41,3)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (8 samples, 0.01%)</title><rect x="53.4657%" y="1605" width="0.0104%" height="15" fill="rgb(235,138,9)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="53.4657%" y="1589" width="0.0104%" height="15" fill="rgb(214,131,10)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="53.4657%" y="1573" width="0.0104%" height="15" fill="rgb(229,89,7)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="53.4657%" y="1557" width="0.0104%" height="15" fill="rgb(240,24,42)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="53.4657%" y="1541" width="0.0104%" height="15" fill="rgb(243,188,54)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="53.4657%" y="1525" width="0.0104%" height="15" fill="rgb(246,92,22)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="53.4657%" y="1509" width="0.0104%" height="15" fill="rgb(211,176,51)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1519.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="53.4657%" y="1493" width="0.0104%" height="15" fill="rgb(246,207,34)" fg:x="41175" fg:w="8"/><text x="53.7157%" y="1503.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (36 samples, 0.05%)</title><rect x="53.4813%" y="1717" width="0.0467%" height="15" fill="rgb(239,95,2)" fg:x="41187" fg:w="36"/><text x="53.7313%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="53.5124%" y="1701" width="0.0156%" height="15" fill="rgb(211,124,25)" fg:x="41211" fg:w="12"/><text x="53.7624%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="53.5137%" y="1685" width="0.0143%" height="15" fill="rgb(231,221,19)" fg:x="41212" fg:w="11"/><text x="53.7637%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="53.5137%" y="1669" width="0.0143%" height="15" fill="rgb(239,183,19)" fg:x="41212" fg:w="11"/><text x="53.7637%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="53.5137%" y="1653" width="0.0143%" height="15" fill="rgb(221,130,29)" fg:x="41212" fg:w="11"/><text x="53.7637%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="53.5449%" y="1637" width="0.0104%" height="15" fill="rgb(206,130,36)" fg:x="41236" fg:w="8"/><text x="53.7949%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (24 samples, 0.03%)</title><rect x="53.5293%" y="1717" width="0.0312%" height="15" fill="rgb(215,70,19)" fg:x="41224" fg:w="24"/><text x="53.7793%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22 samples, 0.03%)</title><rect x="53.5319%" y="1701" width="0.0286%" height="15" fill="rgb(244,16,43)" fg:x="41226" fg:w="22"/><text x="53.7819%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (18 samples, 0.02%)</title><rect x="53.5371%" y="1685" width="0.0234%" height="15" fill="rgb(222,115,32)" fg:x="41230" fg:w="18"/><text x="53.7871%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (18 samples, 0.02%)</title><rect x="53.5371%" y="1669" width="0.0234%" height="15" fill="rgb(247,48,25)" fg:x="41230" fg:w="18"/><text x="53.7871%" y="1679.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (17 samples, 0.02%)</title><rect x="53.5384%" y="1653" width="0.0221%" height="15" fill="rgb(226,180,51)" fg:x="41231" fg:w="17"/><text x="53.7884%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (27 samples, 0.04%)</title><rect x="53.5605%" y="1717" width="0.0351%" height="15" fill="rgb(217,142,42)" fg:x="41248" fg:w="27"/><text x="53.8105%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (20 samples, 0.03%)</title><rect x="53.5696%" y="1701" width="0.0260%" height="15" fill="rgb(220,178,3)" fg:x="41255" fg:w="20"/><text x="53.8196%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (9 samples, 0.01%)</title><rect x="53.5839%" y="1685" width="0.0117%" height="15" fill="rgb(217,221,4)" fg:x="41266" fg:w="9"/><text x="53.8339%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (9 samples, 0.01%)</title><rect x="53.5839%" y="1669" width="0.0117%" height="15" fill="rgb(237,63,43)" fg:x="41266" fg:w="9"/><text x="53.8339%" y="1679.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.01%)</title><rect x="53.5839%" y="1653" width="0.0117%" height="15" fill="rgb(220,57,8)" fg:x="41266" fg:w="9"/><text x="53.8339%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.01%)</title><rect x="53.5852%" y="1637" width="0.0104%" height="15" fill="rgb(254,186,27)" fg:x="41267" fg:w="8"/><text x="53.8352%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="53.5852%" y="1621" width="0.0104%" height="15" fill="rgb(251,57,28)" fg:x="41267" fg:w="8"/><text x="53.8352%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="53.5852%" y="1605" width="0.0104%" height="15" fill="rgb(215,228,0)" fg:x="41267" fg:w="8"/><text x="53.8352%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="53.5852%" y="1589" width="0.0104%" height="15" fill="rgb(237,218,39)" fg:x="41267" fg:w="8"/><text x="53.8352%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.04%)</title><rect x="53.6124%" y="1669" width="0.0441%" height="15" fill="rgb(207,2,54)" fg:x="41288" fg:w="34"/><text x="53.8624%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (31 samples, 0.04%)</title><rect x="53.6163%" y="1653" width="0.0403%" height="15" fill="rgb(232,76,50)" fg:x="41291" fg:w="31"/><text x="53.8663%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (31 samples, 0.04%)</title><rect x="53.6163%" y="1637" width="0.0403%" height="15" fill="rgb(211,85,31)" fg:x="41291" fg:w="31"/><text x="53.8663%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (23 samples, 0.03%)</title><rect x="53.6267%" y="1621" width="0.0299%" height="15" fill="rgb(223,210,27)" fg:x="41299" fg:w="23"/><text x="53.8767%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (16 samples, 0.02%)</title><rect x="53.6358%" y="1605" width="0.0208%" height="15" fill="rgb(254,36,8)" fg:x="41306" fg:w="16"/><text x="53.8858%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (10 samples, 0.01%)</title><rect x="53.6436%" y="1589" width="0.0130%" height="15" fill="rgb(213,4,25)" fg:x="41312" fg:w="10"/><text x="53.8936%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (10 samples, 0.01%)</title><rect x="53.6436%" y="1573" width="0.0130%" height="15" fill="rgb(224,2,39)" fg:x="41312" fg:w="10"/><text x="53.8936%" y="1583.50"></text></g><g><title>alloc::alloc::box_free (10 samples, 0.01%)</title><rect x="53.6436%" y="1557" width="0.0130%" height="15" fill="rgb(208,8,39)" fg:x="41312" fg:w="10"/><text x="53.8936%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="53.6436%" y="1541" width="0.0130%" height="15" fill="rgb(216,226,3)" fg:x="41312" fg:w="10"/><text x="53.8936%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="53.6462%" y="1525" width="0.0104%" height="15" fill="rgb(249,139,31)" fg:x="41314" fg:w="8"/><text x="53.8962%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (44 samples, 0.06%)</title><rect x="53.6124%" y="1685" width="0.0571%" height="15" fill="rgb(242,170,35)" fg:x="41288" fg:w="44"/><text x="53.8624%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (10 samples, 0.01%)</title><rect x="53.6566%" y="1669" width="0.0130%" height="15" fill="rgb(238,14,9)" fg:x="41322" fg:w="10"/><text x="53.9066%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="53.6566%" y="1653" width="0.0130%" height="15" fill="rgb(251,81,46)" fg:x="41322" fg:w="10"/><text x="53.9066%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="53.6566%" y="1637" width="0.0130%" height="15" fill="rgb(230,23,4)" fg:x="41322" fg:w="10"/><text x="53.9066%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="53.6566%" y="1621" width="0.0130%" height="15" fill="rgb(211,85,25)" fg:x="41322" fg:w="10"/><text x="53.9066%" y="1631.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="53.6592%" y="1605" width="0.0104%" height="15" fill="rgb(252,23,31)" fg:x="41324" fg:w="8"/><text x="53.9092%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (68 samples, 0.09%)</title><rect x="53.6046%" y="1717" width="0.0883%" height="15" fill="rgb(234,163,38)" fg:x="41282" fg:w="68"/><text x="53.8546%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (63 samples, 0.08%)</title><rect x="53.6111%" y="1701" width="0.0818%" height="15" fill="rgb(210,190,50)" fg:x="41287" fg:w="63"/><text x="53.8611%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (18 samples, 0.02%)</title><rect x="53.6696%" y="1685" width="0.0234%" height="15" fill="rgb(228,158,3)" fg:x="41332" fg:w="18"/><text x="53.9196%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (18 samples, 0.02%)</title><rect x="53.6696%" y="1669" width="0.0234%" height="15" fill="rgb(216,130,0)" fg:x="41332" fg:w="18"/><text x="53.9196%" y="1679.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="53.6696%" y="1653" width="0.0234%" height="15" fill="rgb(224,184,10)" fg:x="41332" fg:w="18"/><text x="53.9196%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="53.6696%" y="1637" width="0.0234%" height="15" fill="rgb(214,202,18)" fg:x="41332" fg:w="18"/><text x="53.9196%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="53.6696%" y="1621" width="0.0234%" height="15" fill="rgb(213,229,54)" fg:x="41332" fg:w="18"/><text x="53.9196%" y="1631.50"></text></g><g><title>cfree (16 samples, 0.02%)</title><rect x="53.6722%" y="1605" width="0.0208%" height="15" fill="rgb(246,120,0)" fg:x="41334" fg:w="16"/><text x="53.9222%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="53.6929%" y="1717" width="0.0169%" height="15" fill="rgb(237,6,15)" fg:x="41350" fg:w="13"/><text x="53.9429%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="53.6929%" y="1701" width="0.0169%" height="15" fill="rgb(252,156,15)" fg:x="41350" fg:w="13"/><text x="53.9429%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="53.6929%" y="1685" width="0.0169%" height="15" fill="rgb(249,78,18)" fg:x="41350" fg:w="13"/><text x="53.9429%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="53.6929%" y="1669" width="0.0169%" height="15" fill="rgb(230,223,44)" fg:x="41350" fg:w="13"/><text x="53.9429%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="53.6929%" y="1653" width="0.0169%" height="15" fill="rgb(230,222,32)" fg:x="41350" fg:w="13"/><text x="53.9429%" y="1663.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="53.6942%" y="1637" width="0.0156%" height="15" fill="rgb(247,54,6)" fg:x="41351" fg:w="12"/><text x="53.9442%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (8 samples, 0.01%)</title><rect x="53.7098%" y="1717" width="0.0104%" height="15" fill="rgb(247,115,45)" fg:x="41363" fg:w="8"/><text x="53.9598%" y="1727.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource::{{closure}} (13 samples, 0.02%)</title><rect x="53.7241%" y="1701" width="0.0169%" height="15" fill="rgb(213,203,37)" fg:x="41374" fg:w="13"/><text x="53.9741%" y="1711.50"></text></g><g><title>move_vm_runtime::data_cache::AccountDataCache::new (13 samples, 0.02%)</title><rect x="53.7241%" y="1685" width="0.0169%" height="15" fill="rgb(248,188,18)" fg:x="41374" fg:w="13"/><text x="53.9741%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="53.7410%" y="1669" width="0.0117%" height="15" fill="rgb(206,80,8)" fg:x="41387" fg:w="9"/><text x="53.9910%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (11 samples, 0.01%)</title><rect x="53.7410%" y="1701" width="0.0143%" height="15" fill="rgb(245,217,31)" fg:x="41387" fg:w="11"/><text x="53.9910%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (11 samples, 0.01%)</title><rect x="53.7410%" y="1685" width="0.0143%" height="15" fill="rgb(220,193,15)" fg:x="41387" fg:w="11"/><text x="53.9910%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (8 samples, 0.01%)</title><rect x="53.7708%" y="1685" width="0.0104%" height="15" fill="rgb(226,7,19)" fg:x="41410" fg:w="8"/><text x="54.0208%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (38 samples, 0.05%)</title><rect x="53.7618%" y="1701" width="0.0493%" height="15" fill="rgb(222,145,31)" fg:x="41403" fg:w="38"/><text x="54.0118%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (23 samples, 0.03%)</title><rect x="53.7812%" y="1685" width="0.0299%" height="15" fill="rgb(241,193,36)" fg:x="41418" fg:w="23"/><text x="54.0312%" y="1695.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (71 samples, 0.09%)</title><rect x="53.7202%" y="1717" width="0.0922%" height="15" fill="rgb(225,123,33)" fg:x="41371" fg:w="71"/><text x="53.9702%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (19 samples, 0.02%)</title><rect x="53.8124%" y="1717" width="0.0247%" height="15" fill="rgb(246,136,38)" fg:x="41442" fg:w="19"/><text x="54.0624%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (11 samples, 0.01%)</title><rect x="53.8228%" y="1701" width="0.0143%" height="15" fill="rgb(243,56,24)" fg:x="41450" fg:w="11"/><text x="54.0728%" y="1711.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (9 samples, 0.01%)</title><rect x="53.8760%" y="1557" width="0.0117%" height="15" fill="rgb(215,147,2)" fg:x="41491" fg:w="9"/><text x="54.1260%" y="1567.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="53.8760%" y="1541" width="0.0117%" height="15" fill="rgb(209,155,27)" fg:x="41491" fg:w="9"/><text x="54.1260%" y="1551.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="53.8708%" y="1589" width="0.0195%" height="15" fill="rgb(222,177,11)" fg:x="41487" fg:w="15"/><text x="54.1208%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="53.8760%" y="1573" width="0.0143%" height="15" fill="rgb(212,227,15)" fg:x="41491" fg:w="11"/><text x="54.1260%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="53.8695%" y="1653" width="0.0260%" height="15" fill="rgb(214,138,20)" fg:x="41486" fg:w="20"/><text x="54.1195%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.03%)</title><rect x="53.8695%" y="1637" width="0.0260%" height="15" fill="rgb(221,170,31)" fg:x="41486" fg:w="20"/><text x="54.1195%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.03%)</title><rect x="53.8695%" y="1621" width="0.0260%" height="15" fill="rgb(253,207,5)" fg:x="41486" fg:w="20"/><text x="54.1195%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.03%)</title><rect x="53.8695%" y="1605" width="0.0260%" height="15" fill="rgb(212,64,37)" fg:x="41486" fg:w="20"/><text x="54.1195%" y="1615.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (55 samples, 0.07%)</title><rect x="53.8669%" y="1669" width="0.0714%" height="15" fill="rgb(208,113,51)" fg:x="41484" fg:w="55"/><text x="54.1169%" y="1679.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="53.8968%" y="1653" width="0.0416%" height="15" fill="rgb(237,15,5)" fg:x="41507" fg:w="32"/><text x="54.1468%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="53.8968%" y="1637" width="0.0416%" height="15" fill="rgb(238,33,18)" fg:x="41507" fg:w="32"/><text x="54.1468%" y="1647.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (30 samples, 0.04%)</title><rect x="53.8994%" y="1621" width="0.0390%" height="15" fill="rgb(253,206,50)" fg:x="41509" fg:w="30"/><text x="54.1494%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (30 samples, 0.04%)</title><rect x="53.8994%" y="1605" width="0.0390%" height="15" fill="rgb(242,158,43)" fg:x="41509" fg:w="30"/><text x="54.1494%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.03%)</title><rect x="53.9085%" y="1589" width="0.0299%" height="15" fill="rgb(213,125,27)" fg:x="41516" fg:w="23"/><text x="54.1585%" y="1599.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="53.9085%" y="1573" width="0.0299%" height="15" fill="rgb(233,161,31)" fg:x="41516" fg:w="23"/><text x="54.1585%" y="1583.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="53.9578%" y="1573" width="0.0169%" height="15" fill="rgb(218,135,6)" fg:x="41554" fg:w="13"/><text x="54.2078%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (13 samples, 0.02%)</title><rect x="53.9578%" y="1557" width="0.0169%" height="15" fill="rgb(222,73,53)" fg:x="41554" fg:w="13"/><text x="54.2078%" y="1567.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.02%)</title><rect x="53.9578%" y="1541" width="0.0169%" height="15" fill="rgb(229,66,53)" fg:x="41554" fg:w="13"/><text x="54.2078%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.04%)</title><rect x="53.9461%" y="1621" width="0.0364%" height="15" fill="rgb(208,128,19)" fg:x="41545" fg:w="28"/><text x="54.1961%" y="1631.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.04%)</title><rect x="53.9461%" y="1605" width="0.0364%" height="15" fill="rgb(235,70,27)" fg:x="41545" fg:w="28"/><text x="54.1961%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.02%)</title><rect x="53.9578%" y="1589" width="0.0247%" height="15" fill="rgb(241,130,30)" fg:x="41554" fg:w="19"/><text x="54.2078%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.02%)</title><rect x="53.9994%" y="1573" width="0.0169%" height="15" fill="rgb(222,57,48)" fg:x="41586" fg:w="13"/><text x="54.2494%" y="1583.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.02%)</title><rect x="53.9994%" y="1557" width="0.0169%" height="15" fill="rgb(225,204,29)" fg:x="41586" fg:w="13"/><text x="54.2494%" y="1567.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.02%)</title><rect x="53.9994%" y="1541" width="0.0169%" height="15" fill="rgb(240,196,35)" fg:x="41586" fg:w="13"/><text x="54.2494%" y="1551.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.02%)</title><rect x="53.9994%" y="1525" width="0.0169%" height="15" fill="rgb(215,150,16)" fg:x="41586" fg:w="13"/><text x="54.2494%" y="1535.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.02%)</title><rect x="54.0215%" y="1573" width="0.0169%" height="15" fill="rgb(209,170,13)" fg:x="41603" fg:w="13"/><text x="54.2715%" y="1583.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.02%)</title><rect x="54.0215%" y="1557" width="0.0169%" height="15" fill="rgb(235,75,31)" fg:x="41603" fg:w="13"/><text x="54.2715%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="54.0215%" y="1541" width="0.0169%" height="15" fill="rgb(252,1,47)" fg:x="41603" fg:w="13"/><text x="54.2715%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (165 samples, 0.21%)</title><rect x="53.8371%" y="1717" width="0.2143%" height="15" fill="rgb(241,2,36)" fg:x="41461" fg:w="165"/><text x="54.0871%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (157 samples, 0.20%)</title><rect x="53.8475%" y="1701" width="0.2039%" height="15" fill="rgb(236,191,4)" fg:x="41469" fg:w="157"/><text x="54.0975%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (145 samples, 0.19%)</title><rect x="53.8630%" y="1685" width="0.1883%" height="15" fill="rgb(212,65,35)" fg:x="41481" fg:w="145"/><text x="54.1130%" y="1695.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (84 samples, 0.11%)</title><rect x="53.9422%" y="1669" width="0.1091%" height="15" fill="rgb(209,49,33)" fg:x="41542" fg:w="84"/><text x="54.1922%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (84 samples, 0.11%)</title><rect x="53.9422%" y="1653" width="0.1091%" height="15" fill="rgb(208,36,46)" fg:x="41542" fg:w="84"/><text x="54.1922%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (84 samples, 0.11%)</title><rect x="53.9422%" y="1637" width="0.1091%" height="15" fill="rgb(210,125,2)" fg:x="41542" fg:w="84"/><text x="54.1922%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 0.07%)</title><rect x="53.9825%" y="1621" width="0.0688%" height="15" fill="rgb(225,62,6)" fg:x="41573" fg:w="53"/><text x="54.2325%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.07%)</title><rect x="53.9825%" y="1605" width="0.0688%" height="15" fill="rgb(210,54,27)" fg:x="41573" fg:w="53"/><text x="54.2325%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (53 samples, 0.07%)</title><rect x="53.9825%" y="1589" width="0.0688%" height="15" fill="rgb(249,189,52)" fg:x="41573" fg:w="53"/><text x="54.2325%" y="1599.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.01%)</title><rect x="54.0383%" y="1573" width="0.0130%" height="15" fill="rgb(225,134,40)" fg:x="41616" fg:w="10"/><text x="54.2883%" y="1583.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.01%)</title><rect x="54.0383%" y="1557" width="0.0130%" height="15" fill="rgb(206,13,37)" fg:x="41616" fg:w="10"/><text x="54.2883%" y="1567.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (11 samples, 0.01%)</title><rect x="54.0513%" y="1717" width="0.0143%" height="15" fill="rgb(232,114,28)" fg:x="41626" fg:w="11"/><text x="54.3013%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (8 samples, 0.01%)</title><rect x="54.1461%" y="1589" width="0.0104%" height="15" fill="rgb(253,215,8)" fg:x="41699" fg:w="8"/><text x="54.3961%" y="1599.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="54.1461%" y="1573" width="0.0104%" height="15" fill="rgb(254,64,19)" fg:x="41699" fg:w="8"/><text x="54.3961%" y="1583.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 0.05%)</title><rect x="54.1149%" y="1605" width="0.0545%" height="15" fill="rgb(242,18,46)" fg:x="41675" fg:w="42"/><text x="54.3649%" y="1615.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (55 samples, 0.07%)</title><rect x="54.1136%" y="1621" width="0.0714%" height="15" fill="rgb(239,192,30)" fg:x="41674" fg:w="55"/><text x="54.3636%" y="1631.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (12 samples, 0.02%)</title><rect x="54.1695%" y="1605" width="0.0156%" height="15" fill="rgb(232,73,14)" fg:x="41717" fg:w="12"/><text x="54.4195%" y="1615.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="54.1851%" y="1621" width="0.0130%" height="15" fill="rgb(225,51,9)" fg:x="41729" fg:w="10"/><text x="54.4351%" y="1631.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (92 samples, 0.12%)</title><rect x="54.0942%" y="1653" width="0.1195%" height="15" fill="rgb(242,217,54)" fg:x="41659" fg:w="92"/><text x="54.3442%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (92 samples, 0.12%)</title><rect x="54.0942%" y="1637" width="0.1195%" height="15" fill="rgb(216,93,3)" fg:x="41659" fg:w="92"/><text x="54.3442%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.02%)</title><rect x="54.1980%" y="1621" width="0.0156%" height="15" fill="rgb(230,119,33)" fg:x="41739" fg:w="12"/><text x="54.4480%" y="1631.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (9 samples, 0.01%)</title><rect x="54.2240%" y="1589" width="0.0117%" height="15" fill="rgb(238,170,27)" fg:x="41759" fg:w="9"/><text x="54.4740%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="54.2240%" y="1573" width="0.0117%" height="15" fill="rgb(229,8,2)" fg:x="41759" fg:w="9"/><text x="54.4740%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="54.2240%" y="1557" width="0.0117%" height="15" fill="rgb(205,214,42)" fg:x="41759" fg:w="9"/><text x="54.4740%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="54.2253%" y="1541" width="0.0104%" height="15" fill="rgb(245,113,1)" fg:x="41760" fg:w="8"/><text x="54.4753%" y="1551.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (8 samples, 0.01%)</title><rect x="54.2253%" y="1525" width="0.0104%" height="15" fill="rgb(252,50,2)" fg:x="41760" fg:w="8"/><text x="54.4753%" y="1535.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (114 samples, 0.15%)</title><rect x="54.0903%" y="1669" width="0.1480%" height="15" fill="rgb(225,122,24)" fg:x="41656" fg:w="114"/><text x="54.3403%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (14 samples, 0.02%)</title><rect x="54.2201%" y="1653" width="0.0182%" height="15" fill="rgb(234,129,31)" fg:x="41756" fg:w="14"/><text x="54.4701%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="54.2214%" y="1637" width="0.0169%" height="15" fill="rgb(219,177,4)" fg:x="41757" fg:w="13"/><text x="54.4714%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="54.2214%" y="1621" width="0.0169%" height="15" fill="rgb(225,142,27)" fg:x="41757" fg:w="13"/><text x="54.4714%" y="1631.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="54.2214%" y="1605" width="0.0169%" height="15" fill="rgb(205,107,51)" fg:x="41757" fg:w="13"/><text x="54.4714%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (146 samples, 0.19%)</title><rect x="54.0838%" y="1685" width="0.1896%" height="15" fill="rgb(236,223,15)" fg:x="41651" fg:w="146"/><text x="54.3338%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (27 samples, 0.04%)</title><rect x="54.2383%" y="1669" width="0.0351%" height="15" fill="rgb(235,133,11)" fg:x="41770" fg:w="27"/><text x="54.4883%" y="1679.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (27 samples, 0.04%)</title><rect x="54.2383%" y="1653" width="0.0351%" height="15" fill="rgb(247,172,13)" fg:x="41770" fg:w="27"/><text x="54.4883%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.04%)</title><rect x="54.2383%" y="1637" width="0.0351%" height="15" fill="rgb(233,191,41)" fg:x="41770" fg:w="27"/><text x="54.4883%" y="1647.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.04%)</title><rect x="54.2383%" y="1621" width="0.0351%" height="15" fill="rgb(250,65,16)" fg:x="41770" fg:w="27"/><text x="54.4883%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.04%)</title><rect x="54.2383%" y="1605" width="0.0351%" height="15" fill="rgb(206,10,27)" fg:x="41770" fg:w="27"/><text x="54.4883%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.04%)</title><rect x="54.2383%" y="1589" width="0.0351%" height="15" fill="rgb(212,96,22)" fg:x="41770" fg:w="27"/><text x="54.4883%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.04%)</title><rect x="54.2383%" y="1573" width="0.0351%" height="15" fill="rgb(206,50,0)" fg:x="41770" fg:w="27"/><text x="54.4883%" y="1583.50"></text></g><g><title>malloc (25 samples, 0.03%)</title><rect x="54.2409%" y="1557" width="0.0325%" height="15" fill="rgb(249,105,52)" fg:x="41772" fg:w="25"/><text x="54.4909%" y="1567.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="54.2500%" y="1541" width="0.0234%" height="15" fill="rgb(216,93,51)" fg:x="41779" fg:w="18"/><text x="54.5000%" y="1551.50"></text></g><g><title>bcs::de::from_bytes_seed (157 samples, 0.20%)</title><rect x="54.0708%" y="1701" width="0.2039%" height="15" fill="rgb(217,172,13)" fg:x="41641" fg:w="157"/><text x="54.3208%" y="1711.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,105 samples, 1.43%)</title><rect x="52.8411%" y="1733" width="1.4348%" height="15" fill="rgb(235,199,38)" fg:x="40694" fg:w="1105"/><text x="53.0911%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (162 samples, 0.21%)</title><rect x="54.0656%" y="1717" width="0.2104%" height="15" fill="rgb(221,97,33)" fg:x="41637" fg:w="162"/><text x="54.3156%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,127 samples, 1.46%)</title><rect x="52.8294%" y="1749" width="1.4634%" height="15" fill="rgb(205,156,50)" fg:x="40685" fg:w="1127"/><text x="53.0794%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::view (13 samples, 0.02%)</title><rect x="54.2760%" y="1733" width="0.0169%" height="15" fill="rgb(215,142,19)" fg:x="41799" fg:w="13"/><text x="54.5260%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (10 samples, 0.01%)</title><rect x="54.2928%" y="1749" width="0.0130%" height="15" fill="rgb(232,170,7)" fg:x="41812" fg:w="10"/><text x="54.5428%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::exists (8 samples, 0.01%)</title><rect x="54.3058%" y="1749" width="0.0104%" height="15" fill="rgb(223,50,17)" fg:x="41822" fg:w="8"/><text x="54.5558%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (1,160 samples, 1.51%)</title><rect x="52.8229%" y="1765" width="1.5063%" height="15" fill="rgb(230,103,46)" fg:x="40680" fg:w="1160"/><text x="53.0729%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::bool (10 samples, 0.01%)</title><rect x="54.3162%" y="1749" width="0.0130%" height="15" fill="rgb(254,30,34)" fg:x="41830" fg:w="10"/><text x="54.5662%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (93 samples, 0.12%)</title><rect x="54.3292%" y="1765" width="0.1208%" height="15" fill="rgb(235,198,1)" fg:x="41840" fg:w="93"/><text x="54.5792%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (23 samples, 0.03%)</title><rect x="54.4500%" y="1765" width="0.0299%" height="15" fill="rgb(217,105,47)" fg:x="41933" fg:w="23"/><text x="54.7000%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (10 samples, 0.01%)</title><rect x="54.4668%" y="1749" width="0.0130%" height="15" fill="rgb(231,18,12)" fg:x="41946" fg:w="10"/><text x="54.7168%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (55 samples, 0.07%)</title><rect x="54.5136%" y="1749" width="0.0714%" height="15" fill="rgb(218,196,1)" fg:x="41982" fg:w="55"/><text x="54.7636%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (64 samples, 0.08%)</title><rect x="54.5850%" y="1749" width="0.0831%" height="15" fill="rgb(210,32,3)" fg:x="42037" fg:w="64"/><text x="54.8350%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (21 samples, 0.03%)</title><rect x="54.6408%" y="1733" width="0.0273%" height="15" fill="rgb(227,178,30)" fg:x="42080" fg:w="21"/><text x="54.8908%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (8 samples, 0.01%)</title><rect x="54.7045%" y="1733" width="0.0104%" height="15" fill="rgb(231,140,27)" fg:x="42129" fg:w="8"/><text x="54.9545%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (16 samples, 0.02%)</title><rect x="54.7148%" y="1733" width="0.0208%" height="15" fill="rgb(206,66,35)" fg:x="42137" fg:w="16"/><text x="54.9648%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (20 samples, 0.03%)</title><rect x="54.7356%" y="1733" width="0.0260%" height="15" fill="rgb(212,34,2)" fg:x="42153" fg:w="20"/><text x="54.9856%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (8 samples, 0.01%)</title><rect x="54.7512%" y="1717" width="0.0104%" height="15" fill="rgb(207,201,33)" fg:x="42165" fg:w="8"/><text x="55.0012%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (24 samples, 0.03%)</title><rect x="54.7707%" y="1733" width="0.0312%" height="15" fill="rgb(221,135,32)" fg:x="42180" fg:w="24"/><text x="55.0207%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (11 samples, 0.01%)</title><rect x="54.7876%" y="1717" width="0.0143%" height="15" fill="rgb(206,77,31)" fg:x="42193" fg:w="11"/><text x="55.0376%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::VectorRef&gt;&gt;::cast (12 samples, 0.02%)</title><rect x="54.8018%" y="1733" width="0.0156%" height="15" fill="rgb(252,198,50)" fg:x="42204" fg:w="12"/><text x="55.0518%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (268 samples, 0.35%)</title><rect x="54.4798%" y="1765" width="0.3480%" height="15" fill="rgb(206,79,27)" fg:x="41956" fg:w="268"/><text x="54.7298%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (123 samples, 0.16%)</title><rect x="54.6681%" y="1749" width="0.1597%" height="15" fill="rgb(228,108,9)" fg:x="42101" fg:w="123"/><text x="54.9181%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;u64&gt;&gt;::cast (8 samples, 0.01%)</title><rect x="54.8174%" y="1733" width="0.0104%" height="15" fill="rgb(213,9,39)" fg:x="42216" fg:w="8"/><text x="55.0674%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (109 samples, 0.14%)</title><rect x="54.8278%" y="1765" width="0.1415%" height="15" fill="rgb(252,51,13)" fg:x="42224" fg:w="109"/><text x="55.0778%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.03%)</title><rect x="54.9434%" y="1749" width="0.0260%" height="15" fill="rgb(218,202,39)" fg:x="42313" fg:w="20"/><text x="55.1934%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.02%)</title><rect x="54.9914%" y="1733" width="0.0156%" height="15" fill="rgb(214,122,21)" fg:x="42350" fg:w="12"/><text x="55.2414%" y="1743.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.02%)</title><rect x="54.9914%" y="1717" width="0.0156%" height="15" fill="rgb(217,205,48)" fg:x="42350" fg:w="12"/><text x="55.2414%" y="1727.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.02%)</title><rect x="54.9914%" y="1701" width="0.0156%" height="15" fill="rgb(230,216,13)" fg:x="42350" fg:w="12"/><text x="55.2414%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (32 samples, 0.04%)</title><rect x="54.9720%" y="1765" width="0.0416%" height="15" fill="rgb(249,118,4)" fg:x="42335" fg:w="32"/><text x="55.2220%" y="1775.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (18 samples, 0.02%)</title><rect x="54.9901%" y="1749" width="0.0234%" height="15" fill="rgb(212,207,40)" fg:x="42349" fg:w="18"/><text x="55.2401%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_offset (8 samples, 0.01%)</title><rect x="55.0135%" y="1765" width="0.0104%" height="15" fill="rgb(217,156,26)" fg:x="42367" fg:w="8"/><text x="55.2635%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (14 samples, 0.02%)</title><rect x="55.0239%" y="1765" width="0.0182%" height="15" fill="rgb(226,86,34)" fg:x="42375" fg:w="14"/><text x="55.2739%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_type (25 samples, 0.03%)</title><rect x="55.0421%" y="1765" width="0.0325%" height="15" fill="rgb(217,111,30)" fg:x="42389" fg:w="25"/><text x="55.2921%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="55.1330%" y="1621" width="0.0273%" height="15" fill="rgb(228,64,18)" fg:x="42459" fg:w="21"/><text x="55.3830%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (20 samples, 0.03%)</title><rect x="55.1343%" y="1605" width="0.0260%" height="15" fill="rgb(254,217,48)" fg:x="42460" fg:w="20"/><text x="55.3843%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.03%)</title><rect x="55.1343%" y="1589" width="0.0260%" height="15" fill="rgb(226,156,48)" fg:x="42460" fg:w="20"/><text x="55.3843%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.03%)</title><rect x="55.1343%" y="1573" width="0.0260%" height="15" fill="rgb(236,168,20)" fg:x="42460" fg:w="20"/><text x="55.3843%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.03%)</title><rect x="55.1343%" y="1557" width="0.0260%" height="15" fill="rgb(239,210,33)" fg:x="42460" fg:w="20"/><text x="55.3843%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 0.02%)</title><rect x="55.1421%" y="1541" width="0.0182%" height="15" fill="rgb(242,85,17)" fg:x="42466" fg:w="14"/><text x="55.3921%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type::{{closure}} (12 samples, 0.02%)</title><rect x="55.1447%" y="1525" width="0.0156%" height="15" fill="rgb(221,196,15)" fg:x="42468" fg:w="12"/><text x="55.3947%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (12 samples, 0.02%)</title><rect x="55.1447%" y="1509" width="0.0156%" height="15" fill="rgb(249,76,21)" fg:x="42468" fg:w="12"/><text x="55.3947%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (12 samples, 0.02%)</title><rect x="55.1447%" y="1493" width="0.0156%" height="15" fill="rgb(243,67,29)" fg:x="42468" fg:w="12"/><text x="55.3947%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (10 samples, 0.01%)</title><rect x="55.1472%" y="1477" width="0.0130%" height="15" fill="rgb(240,159,2)" fg:x="42470" fg:w="10"/><text x="55.3972%" y="1487.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (10 samples, 0.01%)</title><rect x="55.1472%" y="1461" width="0.0130%" height="15" fill="rgb(244,64,3)" fg:x="42470" fg:w="10"/><text x="55.3972%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.06%)</title><rect x="55.1044%" y="1749" width="0.0623%" height="15" fill="rgb(220,86,40)" fg:x="42437" fg:w="48"/><text x="55.3544%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (48 samples, 0.06%)</title><rect x="55.1044%" y="1733" width="0.0623%" height="15" fill="rgb(222,194,51)" fg:x="42437" fg:w="48"/><text x="55.3544%" y="1743.50"></text></g><g><title>core::iter::adapters::try_process (48 samples, 0.06%)</title><rect x="55.1044%" y="1717" width="0.0623%" height="15" fill="rgb(207,154,19)" fg:x="42437" fg:w="48"/><text x="55.3544%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (45 samples, 0.06%)</title><rect x="55.1083%" y="1701" width="0.0584%" height="15" fill="rgb(206,178,36)" fg:x="42440" fg:w="45"/><text x="55.3583%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.06%)</title><rect x="55.1083%" y="1685" width="0.0584%" height="15" fill="rgb(218,8,24)" fg:x="42440" fg:w="45"/><text x="55.3583%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 0.06%)</title><rect x="55.1083%" y="1669" width="0.0584%" height="15" fill="rgb(226,83,41)" fg:x="42440" fg:w="45"/><text x="55.3583%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 0.05%)</title><rect x="55.1148%" y="1653" width="0.0519%" height="15" fill="rgb(224,23,22)" fg:x="42445" fg:w="40"/><text x="55.3648%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="55.1278%" y="1637" width="0.0390%" height="15" fill="rgb(218,198,45)" fg:x="42455" fg:w="30"/><text x="55.3778%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (24 samples, 0.03%)</title><rect x="55.1680%" y="1749" width="0.0312%" height="15" fill="rgb(249,147,41)" fg:x="42486" fg:w="24"/><text x="55.4180%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (98 samples, 0.13%)</title><rect x="55.0745%" y="1765" width="0.1273%" height="15" fill="rgb(244,224,13)" fg:x="42414" fg:w="98"/><text x="55.3245%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="55.2226%" y="1701" width="0.0117%" height="15" fill="rgb(225,97,27)" fg:x="42528" fg:w="9"/><text x="55.4726%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.01%)</title><rect x="55.2226%" y="1685" width="0.0117%" height="15" fill="rgb(254,64,0)" fg:x="42528" fg:w="9"/><text x="55.4726%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.01%)</title><rect x="55.2226%" y="1669" width="0.0117%" height="15" fill="rgb(208,130,43)" fg:x="42528" fg:w="9"/><text x="55.4726%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (30 samples, 0.04%)</title><rect x="55.2018%" y="1765" width="0.0390%" height="15" fill="rgb(247,91,25)" fg:x="42512" fg:w="30"/><text x="55.4518%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Resolver::single_type_at (18 samples, 0.02%)</title><rect x="55.2174%" y="1749" width="0.0234%" height="15" fill="rgb(215,218,42)" fg:x="42524" fg:w="18"/><text x="55.4674%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Module::single_type_at (14 samples, 0.02%)</title><rect x="55.2226%" y="1733" width="0.0182%" height="15" fill="rgb(233,9,24)" fg:x="42528" fg:w="14"/><text x="55.4726%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (14 samples, 0.02%)</title><rect x="55.2226%" y="1717" width="0.0182%" height="15" fill="rgb(252,105,38)" fg:x="42528" fg:w="14"/><text x="55.4726%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (24 samples, 0.03%)</title><rect x="55.2407%" y="1765" width="0.0312%" height="15" fill="rgb(225,40,49)" fg:x="42542" fg:w="24"/><text x="55.4907%" y="1775.50"></text></g><g><title>move_vm_runtime::tracing::trace (75 samples, 0.10%)</title><rect x="55.2719%" y="1765" width="0.0974%" height="15" fill="rgb(232,196,19)" fg:x="42566" fg:w="75"/><text x="55.5219%" y="1775.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.02%)</title><rect x="55.3511%" y="1749" width="0.0182%" height="15" fill="rgb(207,35,15)" fg:x="42627" fg:w="14"/><text x="55.6011%" y="1759.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (14 samples, 0.02%)</title><rect x="55.3511%" y="1733" width="0.0182%" height="15" fill="rgb(238,68,36)" fg:x="42627" fg:w="14"/><text x="55.6011%" y="1743.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (14 samples, 0.02%)</title><rect x="55.3511%" y="1717" width="0.0182%" height="15" fill="rgb(205,158,20)" fg:x="42627" fg:w="14"/><text x="55.6011%" y="1727.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (14 samples, 0.02%)</title><rect x="55.3511%" y="1701" width="0.0182%" height="15" fill="rgb(232,32,22)" fg:x="42627" fg:w="14"/><text x="55.6011%" y="1711.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="55.3511%" y="1685" width="0.0182%" height="15" fill="rgb(210,169,6)" fg:x="42627" fg:w="14"/><text x="55.6011%" y="1695.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (8 samples, 0.01%)</title><rect x="55.3589%" y="1669" width="0.0104%" height="15" fill="rgb(229,28,12)" fg:x="42633" fg:w="8"/><text x="55.6089%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::cast_u128 (15 samples, 0.02%)</title><rect x="55.3693%" y="1765" width="0.0195%" height="15" fill="rgb(229,78,10)" fg:x="42641" fg:w="15"/><text x="55.6193%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::cast_u8 (11 samples, 0.01%)</title><rect x="55.3888%" y="1765" width="0.0143%" height="15" fill="rgb(223,139,54)" fg:x="42656" fg:w="11"/><text x="55.6388%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::into_value (9 samples, 0.01%)</title><rect x="55.4031%" y="1765" width="0.0117%" height="15" fill="rgb(207,110,4)" fg:x="42667" fg:w="9"/><text x="55.6531%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.02%)</title><rect x="55.4667%" y="1749" width="0.0221%" height="15" fill="rgb(248,30,41)" fg:x="42716" fg:w="17"/><text x="55.7167%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (82 samples, 0.11%)</title><rect x="55.4277%" y="1765" width="0.1065%" height="15" fill="rgb(235,54,25)" fg:x="42686" fg:w="82"/><text x="55.6777%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (28 samples, 0.04%)</title><rect x="55.4978%" y="1749" width="0.0364%" height="15" fill="rgb(213,107,41)" fg:x="42740" fg:w="28"/><text x="55.7478%" y="1759.50"></text></g><g><title>core::mem::replace (30 samples, 0.04%)</title><rect x="55.6446%" y="1733" width="0.0390%" height="15" fill="rgb(237,102,9)" fg:x="42853" fg:w="30"/><text x="55.8946%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (117 samples, 0.15%)</title><rect x="55.5342%" y="1765" width="0.1519%" height="15" fill="rgb(252,137,49)" fg:x="42768" fg:w="117"/><text x="55.7842%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (60 samples, 0.08%)</title><rect x="55.6082%" y="1749" width="0.0779%" height="15" fill="rgb(233,202,33)" fg:x="42825" fg:w="60"/><text x="55.8582%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (17 samples, 0.02%)</title><rect x="55.6861%" y="1765" width="0.0221%" height="15" fill="rgb(223,14,51)" fg:x="42885" fg:w="17"/><text x="55.9361%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (8 samples, 0.01%)</title><rect x="55.6978%" y="1749" width="0.0104%" height="15" fill="rgb(248,70,23)" fg:x="42894" fg:w="8"/><text x="55.9478%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (9 samples, 0.01%)</title><rect x="55.7588%" y="1717" width="0.0117%" height="15" fill="rgb(209,207,47)" fg:x="42941" fg:w="9"/><text x="56.0088%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::container (9 samples, 0.01%)</title><rect x="55.7705%" y="1717" width="0.0117%" height="15" fill="rgb(245,124,2)" fg:x="42950" fg:w="9"/><text x="56.0205%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (61 samples, 0.08%)</title><rect x="55.7082%" y="1765" width="0.0792%" height="15" fill="rgb(249,208,11)" fg:x="42902" fg:w="61"/><text x="55.9582%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (50 samples, 0.06%)</title><rect x="55.7225%" y="1749" width="0.0649%" height="15" fill="rgb(247,112,7)" fg:x="42913" fg:w="50"/><text x="55.9725%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (40 samples, 0.05%)</title><rect x="55.7355%" y="1733" width="0.0519%" height="15" fill="rgb(209,192,31)" fg:x="42923" fg:w="40"/><text x="55.9855%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::write_ref (16 samples, 0.02%)</title><rect x="55.7913%" y="1765" width="0.0208%" height="15" fill="rgb(236,55,19)" fg:x="42966" fg:w="16"/><text x="56.0413%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::write_ref (12 samples, 0.02%)</title><rect x="55.7965%" y="1749" width="0.0156%" height="15" fill="rgb(252,89,41)" fg:x="42970" fg:w="12"/><text x="56.0465%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="55.8121%" y="1749" width="0.0104%" height="15" fill="rgb(220,172,14)" fg:x="42982" fg:w="8"/><text x="56.0621%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (29 samples, 0.04%)</title><rect x="55.8121%" y="1765" width="0.0377%" height="15" fill="rgb(252,65,2)" fg:x="42982" fg:w="29"/><text x="56.0621%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (21 samples, 0.03%)</title><rect x="55.8225%" y="1749" width="0.0273%" height="15" fill="rgb(250,20,8)" fg:x="42990" fg:w="21"/><text x="56.0725%" y="1759.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="55.8640%" y="1749" width="0.0117%" height="15" fill="rgb(234,149,13)" fg:x="43022" fg:w="9"/><text x="56.1140%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (22 samples, 0.03%)</title><rect x="55.8796%" y="1749" width="0.0286%" height="15" fill="rgb(223,219,12)" fg:x="43034" fg:w="22"/><text x="56.1296%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="55.9367%" y="1717" width="0.0130%" height="15" fill="rgb(234,13,49)" fg:x="43078" fg:w="10"/><text x="56.1867%" y="1727.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (87 samples, 0.11%)</title><rect x="55.9939%" y="1653" width="0.1130%" height="15" fill="rgb(214,41,25)" fg:x="43122" fg:w="87"/><text x="56.2439%" y="1663.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (81 samples, 0.11%)</title><rect x="56.0017%" y="1637" width="0.1052%" height="15" fill="rgb(232,198,52)" fg:x="43128" fg:w="81"/><text x="56.2517%" y="1647.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (81 samples, 0.11%)</title><rect x="56.0017%" y="1621" width="0.1052%" height="15" fill="rgb(236,111,46)" fg:x="43128" fg:w="81"/><text x="56.2517%" y="1631.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (80 samples, 0.10%)</title><rect x="56.0030%" y="1605" width="0.1039%" height="15" fill="rgb(253,30,20)" fg:x="43129" fg:w="80"/><text x="56.2530%" y="1615.50"></text></g><g><title>serde::de::SeqAccess::next_element (52 samples, 0.07%)</title><rect x="56.0393%" y="1589" width="0.0675%" height="15" fill="rgb(247,141,17)" fg:x="43157" fg:w="52"/><text x="56.2893%" y="1599.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (52 samples, 0.07%)</title><rect x="56.0393%" y="1573" width="0.0675%" height="15" fill="rgb(214,195,21)" fg:x="43157" fg:w="52"/><text x="56.2893%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (50 samples, 0.06%)</title><rect x="56.0419%" y="1557" width="0.0649%" height="15" fill="rgb(214,98,12)" fg:x="43159" fg:w="50"/><text x="56.2919%" y="1567.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (50 samples, 0.06%)</title><rect x="56.0419%" y="1541" width="0.0649%" height="15" fill="rgb(239,4,26)" fg:x="43159" fg:w="50"/><text x="56.2919%" y="1551.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (50 samples, 0.06%)</title><rect x="56.0419%" y="1525" width="0.0649%" height="15" fill="rgb(234,210,35)" fg:x="43159" fg:w="50"/><text x="56.2919%" y="1535.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (41 samples, 0.05%)</title><rect x="56.0536%" y="1509" width="0.0532%" height="15" fill="rgb(252,178,27)" fg:x="43168" fg:w="41"/><text x="56.3036%" y="1519.50"></text></g><g><title>bcs::de::Deserializer::next (23 samples, 0.03%)</title><rect x="56.0770%" y="1493" width="0.0299%" height="15" fill="rgb(217,50,1)" fg:x="43186" fg:w="23"/><text x="56.3270%" y="1503.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (22 samples, 0.03%)</title><rect x="56.0783%" y="1477" width="0.0286%" height="15" fill="rgb(233,137,5)" fg:x="43187" fg:w="22"/><text x="56.3283%" y="1487.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (22 samples, 0.03%)</title><rect x="56.0783%" y="1461" width="0.0286%" height="15" fill="rgb(217,227,25)" fg:x="43187" fg:w="22"/><text x="56.3283%" y="1471.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (22 samples, 0.03%)</title><rect x="56.0783%" y="1445" width="0.0286%" height="15" fill="rgb(242,89,38)" fg:x="43187" fg:w="22"/><text x="56.3283%" y="1455.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (22 samples, 0.03%)</title><rect x="56.0783%" y="1429" width="0.0286%" height="15" fill="rgb(212,190,30)" fg:x="43187" fg:w="22"/><text x="56.3283%" y="1439.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (22 samples, 0.03%)</title><rect x="56.0783%" y="1413" width="0.0286%" height="15" fill="rgb(222,120,8)" fg:x="43187" fg:w="22"/><text x="56.3283%" y="1423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (22 samples, 0.03%)</title><rect x="56.0783%" y="1397" width="0.0286%" height="15" fill="rgb(227,181,9)" fg:x="43187" fg:w="22"/><text x="56.3283%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (112 samples, 0.15%)</title><rect x="55.9640%" y="1701" width="0.1454%" height="15" fill="rgb(222,125,29)" fg:x="43099" fg:w="112"/><text x="56.2140%" y="1711.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (96 samples, 0.12%)</title><rect x="55.9848%" y="1685" width="0.1247%" height="15" fill="rgb(215,153,31)" fg:x="43115" fg:w="96"/><text x="56.2348%" y="1695.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (96 samples, 0.12%)</title><rect x="55.9848%" y="1669" width="0.1247%" height="15" fill="rgb(228,77,30)" fg:x="43115" fg:w="96"/><text x="56.2348%" y="1679.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u128&gt;::deserialize (28 samples, 0.04%)</title><rect x="56.1172%" y="1701" width="0.0364%" height="15" fill="rgb(226,110,9)" fg:x="43217" fg:w="28"/><text x="56.3672%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u128 (28 samples, 0.04%)</title><rect x="56.1172%" y="1685" width="0.0364%" height="15" fill="rgb(219,111,7)" fg:x="43217" fg:w="28"/><text x="56.3672%" y="1695.50"></text></g><g><title>bcs::de::Deserializer::parse_u128 (26 samples, 0.03%)</title><rect x="56.1198%" y="1669" width="0.0338%" height="15" fill="rgb(229,167,25)" fg:x="43219" fg:w="26"/><text x="56.3698%" y="1679.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (19 samples, 0.02%)</title><rect x="56.1289%" y="1653" width="0.0247%" height="15" fill="rgb(209,77,43)" fg:x="43226" fg:w="19"/><text x="56.3789%" y="1663.50"></text></g><g><title>bcs::de::Deserializer::next (19 samples, 0.02%)</title><rect x="56.1289%" y="1637" width="0.0247%" height="15" fill="rgb(233,70,39)" fg:x="43226" fg:w="19"/><text x="56.3789%" y="1647.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="56.1406%" y="1621" width="0.0130%" height="15" fill="rgb(207,171,44)" fg:x="43235" fg:w="10"/><text x="56.3906%" y="1631.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.01%)</title><rect x="56.1406%" y="1605" width="0.0130%" height="15" fill="rgb(244,91,6)" fg:x="43235" fg:w="10"/><text x="56.3906%" y="1615.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="56.1406%" y="1589" width="0.0130%" height="15" fill="rgb(234,136,12)" fg:x="43235" fg:w="10"/><text x="56.3906%" y="1599.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="56.1406%" y="1573" width="0.0130%" height="15" fill="rgb(216,210,38)" fg:x="43235" fg:w="10"/><text x="56.3906%" y="1583.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.01%)</title><rect x="56.1406%" y="1557" width="0.0130%" height="15" fill="rgb(241,227,7)" fg:x="43235" fg:w="10"/><text x="56.3906%" y="1567.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (10 samples, 0.01%)</title><rect x="56.1406%" y="1541" width="0.0130%" height="15" fill="rgb(241,222,11)" fg:x="43235" fg:w="10"/><text x="56.3906%" y="1551.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (168 samples, 0.22%)</title><rect x="55.9497%" y="1717" width="0.2181%" height="15" fill="rgb(246,86,18)" fg:x="43088" fg:w="168"/><text x="56.1997%" y="1727.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (11 samples, 0.01%)</title><rect x="56.1536%" y="1701" width="0.0143%" height="15" fill="rgb(224,151,49)" fg:x="43245" fg:w="11"/><text x="56.4036%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (11 samples, 0.01%)</title><rect x="56.1536%" y="1685" width="0.0143%" height="15" fill="rgb(235,4,41)" fg:x="43245" fg:w="11"/><text x="56.4036%" y="1695.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (9 samples, 0.01%)</title><rect x="56.1562%" y="1669" width="0.0117%" height="15" fill="rgb(218,30,52)" fg:x="43247" fg:w="9"/><text x="56.4062%" y="1679.50"></text></g><g><title>bcs::de::from_bytes_seed (209 samples, 0.27%)</title><rect x="55.9082%" y="1733" width="0.2714%" height="15" fill="rgb(205,124,51)" fg:x="43056" fg:w="209"/><text x="56.1582%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (254 samples, 0.33%)</title><rect x="55.8536%" y="1765" width="0.3298%" height="15" fill="rgb(237,126,51)" fg:x="43014" fg:w="254"/><text x="56.1036%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (212 samples, 0.28%)</title><rect x="55.9082%" y="1749" width="0.2753%" height="15" fill="rgb(225,32,46)" fg:x="43056" fg:w="212"/><text x="56.1582%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::equals (24 samples, 0.03%)</title><rect x="56.1835%" y="1765" width="0.0312%" height="15" fill="rgb(251,60,49)" fg:x="43268" fg:w="24"/><text x="56.4335%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::equals (18 samples, 0.02%)</title><rect x="56.1912%" y="1749" width="0.0234%" height="15" fill="rgb(234,18,23)" fg:x="43274" fg:w="18"/><text x="56.4412%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (10 samples, 0.01%)</title><rect x="56.2471%" y="1749" width="0.0130%" height="15" fill="rgb(234,25,23)" fg:x="43317" fg:w="10"/><text x="56.4971%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::borrow_elem (26 samples, 0.03%)</title><rect x="56.2302%" y="1765" width="0.0338%" height="15" fill="rgb(210,43,52)" fg:x="43304" fg:w="26"/><text x="56.4802%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (6,622 samples, 8.60%)</title><rect x="47.6887%" y="1797" width="8.5987%" height="15" fill="rgb(237,198,21)" fg:x="36726" fg:w="6622"/><text x="47.9387%" y="1807.50">move_vm_runt..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (6,590 samples, 8.56%)</title><rect x="47.7302%" y="1781" width="8.5571%" height="15" fill="rgb(211,20,34)" fg:x="36758" fg:w="6590"/><text x="47.9802%" y="1791.50">move_vm_runt..</text></g><g><title>move_vm_types::values::values_impl::VectorRef::len (18 samples, 0.02%)</title><rect x="56.2640%" y="1765" width="0.0234%" height="15" fill="rgb(221,155,50)" fg:x="43330" fg:w="18"/><text x="56.5140%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::check_elem_layout (9 samples, 0.01%)</title><rect x="56.2756%" y="1749" width="0.0117%" height="15" fill="rgb(213,214,53)" fg:x="43339" fg:w="9"/><text x="56.5256%" y="1759.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (16 samples, 0.02%)</title><rect x="56.3549%" y="1749" width="0.0208%" height="15" fill="rgb(215,229,48)" fg:x="43400" fg:w="16"/><text x="56.6049%" y="1759.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (16 samples, 0.02%)</title><rect x="56.3549%" y="1733" width="0.0208%" height="15" fill="rgb(243,88,5)" fg:x="43400" fg:w="16"/><text x="56.6049%" y="1743.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="56.4029%" y="1605" width="0.0156%" height="15" fill="rgb(216,199,8)" fg:x="43437" fg:w="12"/><text x="56.6529%" y="1615.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.02%)</title><rect x="56.4237%" y="1589" width="0.0195%" height="15" fill="rgb(241,22,4)" fg:x="43453" fg:w="15"/><text x="56.6737%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (46 samples, 0.06%)</title><rect x="56.3860%" y="1653" width="0.0597%" height="15" fill="rgb(209,190,22)" fg:x="43424" fg:w="46"/><text x="56.6360%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (46 samples, 0.06%)</title><rect x="56.3860%" y="1637" width="0.0597%" height="15" fill="rgb(251,138,45)" fg:x="43424" fg:w="46"/><text x="56.6360%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (46 samples, 0.06%)</title><rect x="56.3860%" y="1621" width="0.0597%" height="15" fill="rgb(219,111,22)" fg:x="43424" fg:w="46"/><text x="56.6360%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.03%)</title><rect x="56.4185%" y="1605" width="0.0273%" height="15" fill="rgb(253,29,49)" fg:x="43449" fg:w="21"/><text x="56.6685%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.03%)</title><rect x="56.4548%" y="1541" width="0.0273%" height="15" fill="rgb(238,129,49)" fg:x="43477" fg:w="21"/><text x="56.7048%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.03%)</title><rect x="56.4548%" y="1525" width="0.0273%" height="15" fill="rgb(240,26,41)" fg:x="43477" fg:w="21"/><text x="56.7048%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="56.4574%" y="1509" width="0.0247%" height="15" fill="rgb(221,47,33)" fg:x="43479" fg:w="19"/><text x="56.7074%" y="1519.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (22 samples, 0.03%)</title><rect x="56.4548%" y="1573" width="0.0286%" height="15" fill="rgb(216,200,17)" fg:x="43477" fg:w="22"/><text x="56.7048%" y="1583.50"></text></g><g><title>core::hash::Hasher::write_usize (22 samples, 0.03%)</title><rect x="56.4548%" y="1557" width="0.0286%" height="15" fill="rgb(230,151,26)" fg:x="43477" fg:w="22"/><text x="56.7048%" y="1567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.04%)</title><rect x="56.5055%" y="1493" width="0.0351%" height="15" fill="rgb(242,182,16)" fg:x="43516" fg:w="27"/><text x="56.7555%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (43 samples, 0.06%)</title><rect x="56.4938%" y="1509" width="0.0558%" height="15" fill="rgb(236,35,53)" fg:x="43507" fg:w="43"/><text x="56.7438%" y="1519.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (77 samples, 0.10%)</title><rect x="56.4548%" y="1621" width="0.1000%" height="15" fill="rgb(214,180,28)" fg:x="43477" fg:w="77"/><text x="56.7048%" y="1631.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (77 samples, 0.10%)</title><rect x="56.4548%" y="1605" width="0.1000%" height="15" fill="rgb(208,173,36)" fg:x="43477" fg:w="77"/><text x="56.7048%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (77 samples, 0.10%)</title><rect x="56.4548%" y="1589" width="0.1000%" height="15" fill="rgb(218,39,15)" fg:x="43477" fg:w="77"/><text x="56.7048%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (55 samples, 0.07%)</title><rect x="56.4834%" y="1573" width="0.0714%" height="15" fill="rgb(213,145,15)" fg:x="43499" fg:w="55"/><text x="56.7334%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (55 samples, 0.07%)</title><rect x="56.4834%" y="1557" width="0.0714%" height="15" fill="rgb(242,110,37)" fg:x="43499" fg:w="55"/><text x="56.7334%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55 samples, 0.07%)</title><rect x="56.4834%" y="1541" width="0.0714%" height="15" fill="rgb(247,146,22)" fg:x="43499" fg:w="55"/><text x="56.7334%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 0.07%)</title><rect x="56.4834%" y="1525" width="0.0714%" height="15" fill="rgb(215,191,7)" fg:x="43499" fg:w="55"/><text x="56.7334%" y="1535.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="56.5951%" y="1493" width="0.0104%" height="15" fill="rgb(240,158,1)" fg:x="43585" fg:w="8"/><text x="56.8451%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.03%)</title><rect x="56.5769%" y="1509" width="0.0299%" height="15" fill="rgb(241,78,32)" fg:x="43571" fg:w="23"/><text x="56.8269%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.06%)</title><rect x="56.5587%" y="1525" width="0.0610%" height="15" fill="rgb(248,83,10)" fg:x="43557" fg:w="47"/><text x="56.8087%" y="1535.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.01%)</title><rect x="56.6068%" y="1509" width="0.0130%" height="15" fill="rgb(241,52,0)" fg:x="43594" fg:w="10"/><text x="56.8568%" y="1519.50"></text></g><g><title>hashbrown::map::make_hash (197 samples, 0.26%)</title><rect x="56.3834%" y="1685" width="0.2558%" height="15" fill="rgb(238,37,13)" fg:x="43422" fg:w="197"/><text x="56.6334%" y="1695.50"></text></g><g><title>core::hash::BuildHasher::hash_one (197 samples, 0.26%)</title><rect x="56.3834%" y="1669" width="0.2558%" height="15" fill="rgb(242,194,17)" fg:x="43422" fg:w="197"/><text x="56.6334%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (143 samples, 0.19%)</title><rect x="56.4535%" y="1653" width="0.1857%" height="15" fill="rgb(236,96,3)" fg:x="43476" fg:w="143"/><text x="56.7035%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (143 samples, 0.19%)</title><rect x="56.4535%" y="1637" width="0.1857%" height="15" fill="rgb(235,148,34)" fg:x="43476" fg:w="143"/><text x="56.7035%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (65 samples, 0.08%)</title><rect x="56.5548%" y="1621" width="0.0844%" height="15" fill="rgb(254,12,11)" fg:x="43554" fg:w="65"/><text x="56.8048%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (65 samples, 0.08%)</title><rect x="56.5548%" y="1605" width="0.0844%" height="15" fill="rgb(207,31,54)" fg:x="43554" fg:w="65"/><text x="56.8048%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (65 samples, 0.08%)</title><rect x="56.5548%" y="1589" width="0.0844%" height="15" fill="rgb(252,14,28)" fg:x="43554" fg:w="65"/><text x="56.8048%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (65 samples, 0.08%)</title><rect x="56.5548%" y="1573" width="0.0844%" height="15" fill="rgb(252,108,36)" fg:x="43554" fg:w="65"/><text x="56.8048%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (65 samples, 0.08%)</title><rect x="56.5548%" y="1557" width="0.0844%" height="15" fill="rgb(214,149,7)" fg:x="43554" fg:w="65"/><text x="56.8048%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (65 samples, 0.08%)</title><rect x="56.5548%" y="1541" width="0.0844%" height="15" fill="rgb(243,94,12)" fg:x="43554" fg:w="65"/><text x="56.8048%" y="1551.50"></text></g><g><title>core::hash::Hasher::write_u8 (15 samples, 0.02%)</title><rect x="56.6197%" y="1525" width="0.0195%" height="15" fill="rgb(208,36,10)" fg:x="43604" fg:w="15"/><text x="56.8697%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="56.6197%" y="1509" width="0.0195%" height="15" fill="rgb(233,185,52)" fg:x="43604" fg:w="15"/><text x="56.8697%" y="1519.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="56.6470%" y="1637" width="0.0117%" height="15" fill="rgb(234,50,45)" fg:x="43625" fg:w="9"/><text x="56.8970%" y="1647.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.01%)</title><rect x="56.6470%" y="1621" width="0.0117%" height="15" fill="rgb(228,92,54)" fg:x="43625" fg:w="9"/><text x="56.8970%" y="1631.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (30 samples, 0.04%)</title><rect x="56.6652%" y="1589" width="0.0390%" height="15" fill="rgb(224,85,25)" fg:x="43639" fg:w="30"/><text x="56.9152%" y="1599.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (30 samples, 0.04%)</title><rect x="56.6652%" y="1573" width="0.0390%" height="15" fill="rgb(246,1,45)" fg:x="43639" fg:w="30"/><text x="56.9152%" y="1583.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (30 samples, 0.04%)</title><rect x="56.6652%" y="1557" width="0.0390%" height="15" fill="rgb(240,66,23)" fg:x="43639" fg:w="30"/><text x="56.9152%" y="1567.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (61 samples, 0.08%)</title><rect x="56.6652%" y="1621" width="0.0792%" height="15" fill="rgb(222,96,27)" fg:x="43639" fg:w="61"/><text x="56.9152%" y="1631.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (61 samples, 0.08%)</title><rect x="56.6652%" y="1605" width="0.0792%" height="15" fill="rgb(212,136,10)" fg:x="43639" fg:w="61"/><text x="56.9152%" y="1615.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (31 samples, 0.04%)</title><rect x="56.7042%" y="1589" width="0.0403%" height="15" fill="rgb(226,192,50)" fg:x="43669" fg:w="31"/><text x="56.9542%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (31 samples, 0.04%)</title><rect x="56.7042%" y="1573" width="0.0403%" height="15" fill="rgb(241,182,31)" fg:x="43669" fg:w="31"/><text x="56.9542%" y="1583.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (31 samples, 0.04%)</title><rect x="56.7042%" y="1557" width="0.0403%" height="15" fill="rgb(219,205,47)" fg:x="43669" fg:w="31"/><text x="56.9542%" y="1567.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (31 samples, 0.04%)</title><rect x="56.7042%" y="1541" width="0.0403%" height="15" fill="rgb(207,96,14)" fg:x="43669" fg:w="31"/><text x="56.9542%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (31 samples, 0.04%)</title><rect x="56.7042%" y="1525" width="0.0403%" height="15" fill="rgb(216,119,9)" fg:x="43669" fg:w="31"/><text x="56.9542%" y="1535.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (31 samples, 0.04%)</title><rect x="56.7042%" y="1509" width="0.0403%" height="15" fill="rgb(235,62,36)" fg:x="43669" fg:w="31"/><text x="56.9542%" y="1519.50"></text></g><g><title>[libc.so.6] (31 samples, 0.04%)</title><rect x="56.7042%" y="1493" width="0.0403%" height="15" fill="rgb(214,41,27)" fg:x="43669" fg:w="31"/><text x="56.9542%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (68 samples, 0.09%)</title><rect x="56.6587%" y="1637" width="0.0883%" height="15" fill="rgb(214,174,37)" fg:x="43634" fg:w="68"/><text x="56.9087%" y="1647.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (11 samples, 0.01%)</title><rect x="56.7561%" y="1637" width="0.0143%" height="15" fill="rgb(212,11,25)" fg:x="43709" fg:w="11"/><text x="57.0061%" y="1647.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (11 samples, 0.01%)</title><rect x="56.7561%" y="1621" width="0.0143%" height="15" fill="rgb(217,71,35)" fg:x="43709" fg:w="11"/><text x="57.0061%" y="1631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="56.7561%" y="1605" width="0.0143%" height="15" fill="rgb(234,152,9)" fg:x="43709" fg:w="11"/><text x="57.0061%" y="1615.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (380 samples, 0.49%)</title><rect x="56.2873%" y="1797" width="0.4934%" height="15" fill="rgb(228,32,51)" fg:x="43348" fg:w="380"/><text x="56.5373%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (374 samples, 0.49%)</title><rect x="56.2951%" y="1781" width="0.4856%" height="15" fill="rgb(209,14,47)" fg:x="43354" fg:w="374"/><text x="56.5451%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (340 samples, 0.44%)</title><rect x="56.3393%" y="1765" width="0.4415%" height="15" fill="rgb(218,201,17)" fg:x="43388" fg:w="340"/><text x="56.5893%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (312 samples, 0.41%)</title><rect x="56.3756%" y="1749" width="0.4051%" height="15" fill="rgb(218,98,15)" fg:x="43416" fg:w="312"/><text x="56.6256%" y="1759.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (310 samples, 0.40%)</title><rect x="56.3782%" y="1733" width="0.4025%" height="15" fill="rgb(233,202,29)" fg:x="43418" fg:w="310"/><text x="56.6282%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (310 samples, 0.40%)</title><rect x="56.3782%" y="1717" width="0.4025%" height="15" fill="rgb(207,196,44)" fg:x="43418" fg:w="310"/><text x="56.6282%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (310 samples, 0.40%)</title><rect x="56.3782%" y="1701" width="0.4025%" height="15" fill="rgb(218,63,34)" fg:x="43418" fg:w="310"/><text x="56.6282%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (109 samples, 0.14%)</title><rect x="56.6392%" y="1685" width="0.1415%" height="15" fill="rgb(209,10,5)" fg:x="43619" fg:w="109"/><text x="56.8892%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (109 samples, 0.14%)</title><rect x="56.6392%" y="1669" width="0.1415%" height="15" fill="rgb(224,36,28)" fg:x="43619" fg:w="109"/><text x="56.8892%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (109 samples, 0.14%)</title><rect x="56.6392%" y="1653" width="0.1415%" height="15" fill="rgb(249,178,7)" fg:x="43619" fg:w="109"/><text x="56.8892%" y="1663.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.01%)</title><rect x="56.7704%" y="1637" width="0.0104%" height="15" fill="rgb(253,163,10)" fg:x="43720" fg:w="8"/><text x="57.0204%" y="1647.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.01%)</title><rect x="56.7704%" y="1621" width="0.0104%" height="15" fill="rgb(245,67,46)" fg:x="43720" fg:w="8"/><text x="57.0204%" y="1631.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="56.8145%" y="1765" width="0.0117%" height="15" fill="rgb(225,14,18)" fg:x="43754" fg:w="9"/><text x="57.0645%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;move_vm_types::values::values_impl::Value&gt;&gt; (13 samples, 0.02%)</title><rect x="56.8600%" y="1733" width="0.0169%" height="15" fill="rgb(217,41,54)" fg:x="43789" fg:w="13"/><text x="57.1100%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::Value&gt;&gt; (8 samples, 0.01%)</title><rect x="56.8665%" y="1717" width="0.0104%" height="15" fill="rgb(222,111,11)" fg:x="43794" fg:w="8"/><text x="57.1165%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="56.8665%" y="1701" width="0.0104%" height="15" fill="rgb(211,85,31)" fg:x="43794" fg:w="8"/><text x="57.1165%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::SignerRef&gt; (16 samples, 0.02%)</title><rect x="56.8820%" y="1733" width="0.0208%" height="15" fill="rgb(223,29,26)" fg:x="43806" fg:w="16"/><text x="57.1320%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (16 samples, 0.02%)</title><rect x="56.8820%" y="1717" width="0.0208%" height="15" fill="rgb(236,124,50)" fg:x="43806" fg:w="16"/><text x="57.1320%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (13 samples, 0.02%)</title><rect x="56.8859%" y="1701" width="0.0169%" height="15" fill="rgb(219,148,15)" fg:x="43809" fg:w="13"/><text x="57.1359%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::SignerRef::borrow_signer (9 samples, 0.01%)</title><rect x="56.9067%" y="1733" width="0.0117%" height="15" fill="rgb(248,159,33)" fg:x="43825" fg:w="9"/><text x="57.1567%" y="1743.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (67 samples, 0.09%)</title><rect x="56.8366%" y="1765" width="0.0870%" height="15" fill="rgb(252,65,8)" fg:x="43771" fg:w="67"/><text x="57.0866%" y="1775.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (62 samples, 0.08%)</title><rect x="56.8431%" y="1749" width="0.0805%" height="15" fill="rgb(236,45,7)" fg:x="43776" fg:w="62"/><text x="57.0931%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Function::get_native (10 samples, 0.01%)</title><rect x="56.9444%" y="1765" width="0.0130%" height="15" fill="rgb(244,3,48)" fg:x="43854" fg:w="10"/><text x="57.1944%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (8 samples, 0.01%)</title><rect x="56.9470%" y="1749" width="0.0104%" height="15" fill="rgb(224,123,53)" fg:x="43856" fg:w="8"/><text x="57.1970%" y="1759.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="56.9470%" y="1733" width="0.0104%" height="15" fill="rgb(223,173,15)" fg:x="43856" fg:w="8"/><text x="57.1970%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (29 samples, 0.04%)</title><rect x="56.9626%" y="1765" width="0.0377%" height="15" fill="rgb(254,181,5)" fg:x="43868" fg:w="29"/><text x="57.2126%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (25 samples, 0.03%)</title><rect x="56.9677%" y="1749" width="0.0325%" height="15" fill="rgb(243,124,33)" fg:x="43872" fg:w="25"/><text x="57.2177%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (18 samples, 0.02%)</title><rect x="56.9768%" y="1733" width="0.0234%" height="15" fill="rgb(253,220,11)" fg:x="43879" fg:w="18"/><text x="57.2268%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (18 samples, 0.02%)</title><rect x="56.9768%" y="1717" width="0.0234%" height="15" fill="rgb(217,14,4)" fg:x="43879" fg:w="18"/><text x="57.2268%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.01%)</title><rect x="56.9898%" y="1701" width="0.0104%" height="15" fill="rgb(209,196,12)" fg:x="43889" fg:w="8"/><text x="57.2398%" y="1711.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (171 samples, 0.22%)</title><rect x="56.7821%" y="1797" width="0.2220%" height="15" fill="rgb(237,108,29)" fg:x="43729" fg:w="171"/><text x="57.0321%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (170 samples, 0.22%)</title><rect x="56.7834%" y="1781" width="0.2207%" height="15" fill="rgb(216,173,20)" fg:x="43730" fg:w="170"/><text x="57.0334%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (13 samples, 0.02%)</title><rect x="57.0041%" y="1797" width="0.0169%" height="15" fill="rgb(245,27,6)" fg:x="43900" fg:w="13"/><text x="57.2541%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (21 samples, 0.03%)</title><rect x="57.0690%" y="1781" width="0.0273%" height="15" fill="rgb(210,181,20)" fg:x="43950" fg:w="21"/><text x="57.3190%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (17 samples, 0.02%)</title><rect x="57.0742%" y="1765" width="0.0221%" height="15" fill="rgb(235,213,1)" fg:x="43954" fg:w="17"/><text x="57.3242%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (10 samples, 0.01%)</title><rect x="57.0833%" y="1749" width="0.0130%" height="15" fill="rgb(239,68,43)" fg:x="43961" fg:w="10"/><text x="57.3333%" y="1759.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (10 samples, 0.01%)</title><rect x="57.1327%" y="1669" width="0.0130%" height="15" fill="rgb(254,137,43)" fg:x="43999" fg:w="10"/><text x="57.3827%" y="1679.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (38 samples, 0.05%)</title><rect x="57.1119%" y="1701" width="0.0493%" height="15" fill="rgb(252,170,38)" fg:x="43983" fg:w="38"/><text x="57.3619%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="57.1327%" y="1685" width="0.0286%" height="15" fill="rgb(234,21,42)" fg:x="43999" fg:w="22"/><text x="57.3827%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.02%)</title><rect x="57.1456%" y="1669" width="0.0156%" height="15" fill="rgb(216,145,40)" fg:x="44009" fg:w="12"/><text x="57.3956%" y="1679.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.02%)</title><rect x="57.1456%" y="1653" width="0.0156%" height="15" fill="rgb(251,73,9)" fg:x="44009" fg:w="12"/><text x="57.3956%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="57.1456%" y="1637" width="0.0156%" height="15" fill="rgb(242,54,6)" fg:x="44009" fg:w="12"/><text x="57.3956%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="57.1456%" y="1621" width="0.0156%" height="15" fill="rgb(239,70,7)" fg:x="44009" fg:w="12"/><text x="57.3956%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="57.1456%" y="1605" width="0.0156%" height="15" fill="rgb(216,159,35)" fg:x="44009" fg:w="12"/><text x="57.3956%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.02%)</title><rect x="57.1612%" y="1701" width="0.0169%" height="15" fill="rgb(224,50,39)" fg:x="44021" fg:w="13"/><text x="57.4112%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="57.1638%" y="1685" width="0.0143%" height="15" fill="rgb(235,9,35)" fg:x="44023" fg:w="11"/><text x="57.4138%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="57.1638%" y="1669" width="0.0143%" height="15" fill="rgb(239,34,21)" fg:x="44023" fg:w="11"/><text x="57.4138%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="57.1664%" y="1653" width="0.0117%" height="15" fill="rgb(218,162,43)" fg:x="44025" fg:w="9"/><text x="57.4164%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="57.1664%" y="1637" width="0.0117%" height="15" fill="rgb(219,89,33)" fg:x="44025" fg:w="9"/><text x="57.4164%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="57.1664%" y="1621" width="0.0117%" height="15" fill="rgb(226,125,37)" fg:x="44025" fg:w="9"/><text x="57.4164%" y="1631.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="57.1677%" y="1605" width="0.0104%" height="15" fill="rgb(233,149,30)" fg:x="44026" fg:w="8"/><text x="57.4177%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (66 samples, 0.09%)</title><rect x="57.1106%" y="1765" width="0.0857%" height="15" fill="rgb(236,8,18)" fg:x="43982" fg:w="66"/><text x="57.3606%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.09%)</title><rect x="57.1106%" y="1749" width="0.0857%" height="15" fill="rgb(205,176,9)" fg:x="43982" fg:w="66"/><text x="57.3606%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.09%)</title><rect x="57.1106%" y="1733" width="0.0857%" height="15" fill="rgb(252,103,44)" fg:x="43982" fg:w="66"/><text x="57.3606%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.09%)</title><rect x="57.1106%" y="1717" width="0.0857%" height="15" fill="rgb(207,68,53)" fg:x="43982" fg:w="66"/><text x="57.3606%" y="1727.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.02%)</title><rect x="57.1781%" y="1701" width="0.0182%" height="15" fill="rgb(218,193,48)" fg:x="44034" fg:w="14"/><text x="57.4281%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="57.2274%" y="1605" width="0.0286%" height="15" fill="rgb(234,121,52)" fg:x="44072" fg:w="22"/><text x="57.4774%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (22 samples, 0.03%)</title><rect x="57.2274%" y="1589" width="0.0286%" height="15" fill="rgb(227,218,49)" fg:x="44072" fg:w="22"/><text x="57.4774%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.03%)</title><rect x="57.2274%" y="1573" width="0.0286%" height="15" fill="rgb(221,8,7)" fg:x="44072" fg:w="22"/><text x="57.4774%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.03%)</title><rect x="57.2274%" y="1557" width="0.0286%" height="15" fill="rgb(217,151,36)" fg:x="44072" fg:w="22"/><text x="57.4774%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.03%)</title><rect x="57.2274%" y="1541" width="0.0286%" height="15" fill="rgb(213,71,5)" fg:x="44072" fg:w="22"/><text x="57.4774%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.02%)</title><rect x="57.2313%" y="1525" width="0.0247%" height="15" fill="rgb(225,145,43)" fg:x="44075" fg:w="19"/><text x="57.4813%" y="1535.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (19 samples, 0.02%)</title><rect x="57.2313%" y="1509" width="0.0247%" height="15" fill="rgb(235,118,19)" fg:x="44075" fg:w="19"/><text x="57.4813%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (17 samples, 0.02%)</title><rect x="57.2339%" y="1493" width="0.0221%" height="15" fill="rgb(214,102,36)" fg:x="44077" fg:w="17"/><text x="57.4839%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (17 samples, 0.02%)</title><rect x="57.2339%" y="1477" width="0.0221%" height="15" fill="rgb(220,56,43)" fg:x="44077" fg:w="17"/><text x="57.4839%" y="1487.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (17 samples, 0.02%)</title><rect x="57.2339%" y="1461" width="0.0221%" height="15" fill="rgb(246,136,46)" fg:x="44077" fg:w="17"/><text x="57.4839%" y="1471.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (15 samples, 0.02%)</title><rect x="57.2365%" y="1445" width="0.0195%" height="15" fill="rgb(249,99,12)" fg:x="44079" fg:w="15"/><text x="57.4865%" y="1455.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="57.2417%" y="1429" width="0.0143%" height="15" fill="rgb(224,31,42)" fg:x="44083" fg:w="11"/><text x="57.4917%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.03%)</title><rect x="57.2248%" y="1637" width="0.0325%" height="15" fill="rgb(208,96,21)" fg:x="44070" fg:w="25"/><text x="57.4748%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.03%)</title><rect x="57.2248%" y="1621" width="0.0325%" height="15" fill="rgb(237,229,7)" fg:x="44070" fg:w="25"/><text x="57.4748%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="57.2573%" y="1637" width="0.0221%" height="15" fill="rgb(210,12,6)" fg:x="44095" fg:w="17"/><text x="57.5073%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (15 samples, 0.02%)</title><rect x="57.2599%" y="1621" width="0.0195%" height="15" fill="rgb(240,9,34)" fg:x="44097" fg:w="15"/><text x="57.5099%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.02%)</title><rect x="57.2599%" y="1605" width="0.0195%" height="15" fill="rgb(211,68,37)" fg:x="44097" fg:w="15"/><text x="57.5099%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.02%)</title><rect x="57.2599%" y="1589" width="0.0195%" height="15" fill="rgb(249,138,50)" fg:x="44097" fg:w="15"/><text x="57.5099%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.02%)</title><rect x="57.2599%" y="1573" width="0.0195%" height="15" fill="rgb(243,185,40)" fg:x="44097" fg:w="15"/><text x="57.5099%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 0.02%)</title><rect x="57.2612%" y="1557" width="0.0182%" height="15" fill="rgb(242,92,35)" fg:x="44098" fg:w="14"/><text x="57.5112%" y="1567.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (13 samples, 0.02%)</title><rect x="57.2625%" y="1541" width="0.0169%" height="15" fill="rgb(244,98,5)" fg:x="44099" fg:w="13"/><text x="57.5125%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (11 samples, 0.01%)</title><rect x="57.2651%" y="1525" width="0.0143%" height="15" fill="rgb(228,186,29)" fg:x="44101" fg:w="11"/><text x="57.5151%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (11 samples, 0.01%)</title><rect x="57.2651%" y="1509" width="0.0143%" height="15" fill="rgb(253,7,44)" fg:x="44101" fg:w="11"/><text x="57.5151%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (8 samples, 0.01%)</title><rect x="57.2690%" y="1493" width="0.0104%" height="15" fill="rgb(216,11,45)" fg:x="44104" fg:w="8"/><text x="57.5190%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (67 samples, 0.09%)</title><rect x="57.1963%" y="1765" width="0.0870%" height="15" fill="rgb(205,67,3)" fg:x="44048" fg:w="67"/><text x="57.4463%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (67 samples, 0.09%)</title><rect x="57.1963%" y="1749" width="0.0870%" height="15" fill="rgb(250,18,3)" fg:x="44048" fg:w="67"/><text x="57.4463%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (67 samples, 0.09%)</title><rect x="57.1963%" y="1733" width="0.0870%" height="15" fill="rgb(241,222,43)" fg:x="44048" fg:w="67"/><text x="57.4463%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (65 samples, 0.08%)</title><rect x="57.1989%" y="1717" width="0.0844%" height="15" fill="rgb(233,115,3)" fg:x="44050" fg:w="65"/><text x="57.4489%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.08%)</title><rect x="57.1989%" y="1701" width="0.0844%" height="15" fill="rgb(215,165,25)" fg:x="44050" fg:w="65"/><text x="57.4489%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.08%)</title><rect x="57.1989%" y="1685" width="0.0844%" height="15" fill="rgb(234,179,6)" fg:x="44050" fg:w="65"/><text x="57.4489%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 0.08%)</title><rect x="57.2028%" y="1669" width="0.0805%" height="15" fill="rgb(215,82,23)" fg:x="44053" fg:w="62"/><text x="57.4528%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (59 samples, 0.08%)</title><rect x="57.2067%" y="1653" width="0.0766%" height="15" fill="rgb(211,47,18)" fg:x="44056" fg:w="59"/><text x="57.4567%" y="1663.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="57.2937%" y="1605" width="0.0156%" height="15" fill="rgb(248,17,9)" fg:x="44123" fg:w="12"/><text x="57.5437%" y="1615.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.02%)</title><rect x="57.2937%" y="1589" width="0.0156%" height="15" fill="rgb(210,212,12)" fg:x="44123" fg:w="12"/><text x="57.5437%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.02%)</title><rect x="57.2937%" y="1573" width="0.0156%" height="15" fill="rgb(230,135,45)" fg:x="44123" fg:w="12"/><text x="57.5437%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (8 samples, 0.01%)</title><rect x="57.2989%" y="1557" width="0.0104%" height="15" fill="rgb(214,121,41)" fg:x="44127" fg:w="8"/><text x="57.5489%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="57.2989%" y="1541" width="0.0104%" height="15" fill="rgb(239,165,45)" fg:x="44127" fg:w="8"/><text x="57.5489%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="57.2989%" y="1525" width="0.0104%" height="15" fill="rgb(214,85,51)" fg:x="44127" fg:w="8"/><text x="57.5489%" y="1535.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.03%)</title><rect x="57.2885%" y="1669" width="0.0260%" height="15" fill="rgb(223,90,27)" fg:x="44119" fg:w="20"/><text x="57.5385%" y="1679.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.03%)</title><rect x="57.2885%" y="1653" width="0.0260%" height="15" fill="rgb(244,84,11)" fg:x="44119" fg:w="20"/><text x="57.5385%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.02%)</title><rect x="57.2937%" y="1637" width="0.0208%" height="15" fill="rgb(253,41,47)" fg:x="44123" fg:w="16"/><text x="57.5437%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (16 samples, 0.02%)</title><rect x="57.2937%" y="1621" width="0.0208%" height="15" fill="rgb(232,39,5)" fg:x="44123" fg:w="16"/><text x="57.5437%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="57.3157%" y="1621" width="0.0104%" height="15" fill="rgb(211,93,4)" fg:x="44140" fg:w="8"/><text x="57.5657%" y="1631.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (185 samples, 0.24%)</title><rect x="57.0963%" y="1781" width="0.2402%" height="15" fill="rgb(219,50,49)" fg:x="43971" fg:w="185"/><text x="57.3463%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (39 samples, 0.05%)</title><rect x="57.2859%" y="1765" width="0.0506%" height="15" fill="rgb(232,80,19)" fg:x="44117" fg:w="39"/><text x="57.5359%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (39 samples, 0.05%)</title><rect x="57.2859%" y="1749" width="0.0506%" height="15" fill="rgb(215,227,39)" fg:x="44117" fg:w="39"/><text x="57.5359%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (37 samples, 0.05%)</title><rect x="57.2885%" y="1733" width="0.0480%" height="15" fill="rgb(211,99,12)" fg:x="44119" fg:w="37"/><text x="57.5385%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (37 samples, 0.05%)</title><rect x="57.2885%" y="1717" width="0.0480%" height="15" fill="rgb(214,158,5)" fg:x="44119" fg:w="37"/><text x="57.5385%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (37 samples, 0.05%)</title><rect x="57.2885%" y="1701" width="0.0480%" height="15" fill="rgb(242,19,53)" fg:x="44119" fg:w="37"/><text x="57.5385%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.05%)</title><rect x="57.2885%" y="1685" width="0.0480%" height="15" fill="rgb(208,18,20)" fg:x="44119" fg:w="37"/><text x="57.5385%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.02%)</title><rect x="57.3144%" y="1669" width="0.0221%" height="15" fill="rgb(250,44,11)" fg:x="44139" fg:w="17"/><text x="57.5644%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="57.3144%" y="1653" width="0.0221%" height="15" fill="rgb(238,159,13)" fg:x="44139" fg:w="17"/><text x="57.5644%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.02%)</title><rect x="57.3144%" y="1637" width="0.0221%" height="15" fill="rgb(231,74,18)" fg:x="44139" fg:w="17"/><text x="57.5644%" y="1647.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="57.3599%" y="1749" width="0.0286%" height="15" fill="rgb(229,219,45)" fg:x="44174" fg:w="22"/><text x="57.6099%" y="1759.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="57.4261%" y="1605" width="0.0143%" height="15" fill="rgb(210,221,1)" fg:x="44225" fg:w="11"/><text x="57.6761%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.04%)</title><rect x="57.4183%" y="1653" width="0.0351%" height="15" fill="rgb(209,60,51)" fg:x="44219" fg:w="27"/><text x="57.6683%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (27 samples, 0.04%)</title><rect x="57.4183%" y="1637" width="0.0351%" height="15" fill="rgb(252,97,34)" fg:x="44219" fg:w="27"/><text x="57.6683%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (27 samples, 0.04%)</title><rect x="57.4183%" y="1621" width="0.0351%" height="15" fill="rgb(243,211,37)" fg:x="44219" fg:w="27"/><text x="57.6683%" y="1631.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.01%)</title><rect x="57.4404%" y="1605" width="0.0130%" height="15" fill="rgb(210,229,37)" fg:x="44236" fg:w="10"/><text x="57.6904%" y="1615.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="57.4430%" y="1589" width="0.0104%" height="15" fill="rgb(220,208,43)" fg:x="44238" fg:w="8"/><text x="57.6930%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (13 samples, 0.02%)</title><rect x="57.4534%" y="1653" width="0.0169%" height="15" fill="rgb(218,118,50)" fg:x="44246" fg:w="13"/><text x="57.7034%" y="1663.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (13 samples, 0.02%)</title><rect x="57.4703%" y="1573" width="0.0169%" height="15" fill="rgb(254,169,52)" fg:x="44259" fg:w="13"/><text x="57.7203%" y="1583.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.02%)</title><rect x="57.4703%" y="1557" width="0.0169%" height="15" fill="rgb(221,214,37)" fg:x="44259" fg:w="13"/><text x="57.7203%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="57.4703%" y="1541" width="0.0169%" height="15" fill="rgb(254,186,32)" fg:x="44259" fg:w="13"/><text x="57.7203%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="57.4703%" y="1525" width="0.0169%" height="15" fill="rgb(215,144,43)" fg:x="44259" fg:w="13"/><text x="57.7203%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="57.4716%" y="1509" width="0.0156%" height="15" fill="rgb(252,21,46)" fg:x="44260" fg:w="12"/><text x="57.7216%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="57.5066%" y="1493" width="0.0130%" height="15" fill="rgb(207,166,46)" fg:x="44287" fg:w="10"/><text x="57.7566%" y="1503.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (43 samples, 0.06%)</title><rect x="57.4703%" y="1621" width="0.0558%" height="15" fill="rgb(253,37,49)" fg:x="44259" fg:w="43"/><text x="57.7203%" y="1631.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (43 samples, 0.06%)</title><rect x="57.4703%" y="1605" width="0.0558%" height="15" fill="rgb(222,97,20)" fg:x="44259" fg:w="43"/><text x="57.7203%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (43 samples, 0.06%)</title><rect x="57.4703%" y="1589" width="0.0558%" height="15" fill="rgb(244,181,26)" fg:x="44259" fg:w="43"/><text x="57.7203%" y="1599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (30 samples, 0.04%)</title><rect x="57.4871%" y="1573" width="0.0390%" height="15" fill="rgb(241,22,29)" fg:x="44272" fg:w="30"/><text x="57.7371%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="57.4871%" y="1557" width="0.0390%" height="15" fill="rgb(206,200,43)" fg:x="44272" fg:w="30"/><text x="57.7371%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="57.4871%" y="1541" width="0.0390%" height="15" fill="rgb(226,224,43)" fg:x="44272" fg:w="30"/><text x="57.7371%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="57.4871%" y="1525" width="0.0390%" height="15" fill="rgb(253,129,28)" fg:x="44272" fg:w="30"/><text x="57.7371%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.03%)</title><rect x="57.5001%" y="1509" width="0.0260%" height="15" fill="rgb(252,99,33)" fg:x="44282" fg:w="20"/><text x="57.7501%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="57.5378%" y="1509" width="0.0143%" height="15" fill="rgb(208,123,45)" fg:x="44311" fg:w="11"/><text x="57.7878%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (45 samples, 0.06%)</title><rect x="57.5261%" y="1525" width="0.0584%" height="15" fill="rgb(251,106,12)" fg:x="44302" fg:w="45"/><text x="57.7761%" y="1535.50"></text></g><g><title>core::hash::sip::u8to64_le (25 samples, 0.03%)</title><rect x="57.5521%" y="1509" width="0.0325%" height="15" fill="rgb(240,209,35)" fg:x="44322" fg:w="25"/><text x="57.8021%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.03%)</title><rect x="57.5573%" y="1493" width="0.0273%" height="15" fill="rgb(214,52,50)" fg:x="44326" fg:w="21"/><text x="57.8073%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (145 samples, 0.19%)</title><rect x="57.4066%" y="1685" width="0.1883%" height="15" fill="rgb(234,119,4)" fg:x="44210" fg:w="145"/><text x="57.6566%" y="1695.50"></text></g><g><title>core::hash::BuildHasher::hash_one (143 samples, 0.19%)</title><rect x="57.4092%" y="1669" width="0.1857%" height="15" fill="rgb(228,181,36)" fg:x="44212" fg:w="143"/><text x="57.6592%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (96 samples, 0.12%)</title><rect x="57.4703%" y="1653" width="0.1247%" height="15" fill="rgb(213,171,42)" fg:x="44259" fg:w="96"/><text x="57.7203%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (96 samples, 0.12%)</title><rect x="57.4703%" y="1637" width="0.1247%" height="15" fill="rgb(239,14,41)" fg:x="44259" fg:w="96"/><text x="57.7203%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (53 samples, 0.07%)</title><rect x="57.5261%" y="1621" width="0.0688%" height="15" fill="rgb(239,111,46)" fg:x="44302" fg:w="53"/><text x="57.7761%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (53 samples, 0.07%)</title><rect x="57.5261%" y="1605" width="0.0688%" height="15" fill="rgb(214,72,7)" fg:x="44302" fg:w="53"/><text x="57.7761%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (53 samples, 0.07%)</title><rect x="57.5261%" y="1589" width="0.0688%" height="15" fill="rgb(221,114,1)" fg:x="44302" fg:w="53"/><text x="57.7761%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (53 samples, 0.07%)</title><rect x="57.5261%" y="1573" width="0.0688%" height="15" fill="rgb(213,143,14)" fg:x="44302" fg:w="53"/><text x="57.7761%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (53 samples, 0.07%)</title><rect x="57.5261%" y="1557" width="0.0688%" height="15" fill="rgb(220,221,53)" fg:x="44302" fg:w="53"/><text x="57.7761%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (53 samples, 0.07%)</title><rect x="57.5261%" y="1541" width="0.0688%" height="15" fill="rgb(236,189,27)" fg:x="44302" fg:w="53"/><text x="57.7761%" y="1551.50"></text></g><g><title>core::hash::Hasher::write_u8 (8 samples, 0.01%)</title><rect x="57.5845%" y="1525" width="0.0104%" height="15" fill="rgb(252,139,49)" fg:x="44347" fg:w="8"/><text x="57.8345%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (32 samples, 0.04%)</title><rect x="57.6118%" y="1589" width="0.0416%" height="15" fill="rgb(231,158,33)" fg:x="44368" fg:w="32"/><text x="57.8618%" y="1599.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (32 samples, 0.04%)</title><rect x="57.6118%" y="1573" width="0.0416%" height="15" fill="rgb(207,201,15)" fg:x="44368" fg:w="32"/><text x="57.8618%" y="1583.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (32 samples, 0.04%)</title><rect x="57.6118%" y="1557" width="0.0416%" height="15" fill="rgb(218,43,48)" fg:x="44368" fg:w="32"/><text x="57.8618%" y="1567.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (62 samples, 0.08%)</title><rect x="57.6105%" y="1621" width="0.0805%" height="15" fill="rgb(244,63,52)" fg:x="44367" fg:w="62"/><text x="57.8605%" y="1631.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (62 samples, 0.08%)</title><rect x="57.6105%" y="1605" width="0.0805%" height="15" fill="rgb(236,60,17)" fg:x="44367" fg:w="62"/><text x="57.8605%" y="1615.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (29 samples, 0.04%)</title><rect x="57.6534%" y="1589" width="0.0377%" height="15" fill="rgb(205,206,29)" fg:x="44400" fg:w="29"/><text x="57.9034%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (29 samples, 0.04%)</title><rect x="57.6534%" y="1573" width="0.0377%" height="15" fill="rgb(205,209,35)" fg:x="44400" fg:w="29"/><text x="57.9034%" y="1583.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (29 samples, 0.04%)</title><rect x="57.6534%" y="1557" width="0.0377%" height="15" fill="rgb(227,112,14)" fg:x="44400" fg:w="29"/><text x="57.9034%" y="1567.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.04%)</title><rect x="57.6534%" y="1541" width="0.0377%" height="15" fill="rgb(248,151,9)" fg:x="44400" fg:w="29"/><text x="57.9034%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (29 samples, 0.04%)</title><rect x="57.6534%" y="1525" width="0.0377%" height="15" fill="rgb(247,45,40)" fg:x="44400" fg:w="29"/><text x="57.9034%" y="1535.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (29 samples, 0.04%)</title><rect x="57.6534%" y="1509" width="0.0377%" height="15" fill="rgb(232,185,16)" fg:x="44400" fg:w="29"/><text x="57.9034%" y="1519.50"></text></g><g><title>[libc.so.6] (29 samples, 0.04%)</title><rect x="57.6534%" y="1493" width="0.0377%" height="15" fill="rgb(215,45,44)" fg:x="44400" fg:w="29"/><text x="57.9034%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (66 samples, 0.09%)</title><rect x="57.6066%" y="1637" width="0.0857%" height="15" fill="rgb(206,69,32)" fg:x="44364" fg:w="66"/><text x="57.8566%" y="1647.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.01%)</title><rect x="57.6962%" y="1637" width="0.0130%" height="15" fill="rgb(233,98,50)" fg:x="44433" fg:w="10"/><text x="57.9462%" y="1647.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.01%)</title><rect x="57.6962%" y="1621" width="0.0130%" height="15" fill="rgb(232,217,52)" fg:x="44433" fg:w="10"/><text x="57.9462%" y="1631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="57.6962%" y="1605" width="0.0130%" height="15" fill="rgb(250,42,51)" fg:x="44433" fg:w="10"/><text x="57.9462%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (281 samples, 0.36%)</title><rect x="57.3482%" y="1781" width="0.3649%" height="15" fill="rgb(241,200,26)" fg:x="44165" fg:w="281"/><text x="57.5982%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (274 samples, 0.36%)</title><rect x="57.3573%" y="1765" width="0.3558%" height="15" fill="rgb(207,10,32)" fg:x="44172" fg:w="274"/><text x="57.6073%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (239 samples, 0.31%)</title><rect x="57.4027%" y="1749" width="0.3103%" height="15" fill="rgb(214,63,15)" fg:x="44207" fg:w="239"/><text x="57.6527%" y="1759.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (236 samples, 0.31%)</title><rect x="57.4066%" y="1733" width="0.3064%" height="15" fill="rgb(234,176,14)" fg:x="44210" fg:w="236"/><text x="57.6566%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (236 samples, 0.31%)</title><rect x="57.4066%" y="1717" width="0.3064%" height="15" fill="rgb(226,104,52)" fg:x="44210" fg:w="236"/><text x="57.6566%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (236 samples, 0.31%)</title><rect x="57.4066%" y="1701" width="0.3064%" height="15" fill="rgb(211,222,1)" fg:x="44210" fg:w="236"/><text x="57.6566%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (91 samples, 0.12%)</title><rect x="57.5949%" y="1685" width="0.1182%" height="15" fill="rgb(237,7,3)" fg:x="44355" fg:w="91"/><text x="57.8449%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (91 samples, 0.12%)</title><rect x="57.5949%" y="1669" width="0.1182%" height="15" fill="rgb(218,143,7)" fg:x="44355" fg:w="91"/><text x="57.8449%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (91 samples, 0.12%)</title><rect x="57.5949%" y="1653" width="0.1182%" height="15" fill="rgb(208,25,22)" fg:x="44355" fg:w="91"/><text x="57.8449%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (30 samples, 0.04%)</title><rect x="57.7131%" y="1781" width="0.0390%" height="15" fill="rgb(228,127,16)" fg:x="44446" fg:w="30"/><text x="57.9631%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (30 samples, 0.04%)</title><rect x="57.7131%" y="1765" width="0.0390%" height="15" fill="rgb(237,86,27)" fg:x="44446" fg:w="30"/><text x="57.9631%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (29 samples, 0.04%)</title><rect x="57.7144%" y="1749" width="0.0377%" height="15" fill="rgb(207,125,19)" fg:x="44447" fg:w="29"/><text x="57.9644%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (28 samples, 0.04%)</title><rect x="57.7157%" y="1733" width="0.0364%" height="15" fill="rgb(243,195,0)" fg:x="44448" fg:w="28"/><text x="57.9657%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (19 samples, 0.02%)</title><rect x="57.7274%" y="1717" width="0.0247%" height="15" fill="rgb(230,95,18)" fg:x="44457" fg:w="19"/><text x="57.9774%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (12 samples, 0.02%)</title><rect x="57.7365%" y="1701" width="0.0156%" height="15" fill="rgb(232,157,21)" fg:x="44464" fg:w="12"/><text x="57.9865%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (21 samples, 0.03%)</title><rect x="57.7520%" y="1781" width="0.0273%" height="15" fill="rgb(212,120,50)" fg:x="44476" fg:w="21"/><text x="58.0020%" y="1791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (17 samples, 0.02%)</title><rect x="57.7572%" y="1765" width="0.0221%" height="15" fill="rgb(222,204,44)" fg:x="44480" fg:w="17"/><text x="58.0072%" y="1775.50"></text></g><g><title>core::cmp::PartialEq::ne (17 samples, 0.02%)</title><rect x="57.7572%" y="1749" width="0.0221%" height="15" fill="rgb(236,6,33)" fg:x="44480" fg:w="17"/><text x="58.0072%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="57.7572%" y="1733" width="0.0221%" height="15" fill="rgb(247,11,38)" fg:x="44480" fg:w="17"/><text x="58.0072%" y="1743.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (42 samples, 0.05%)</title><rect x="57.7871%" y="1765" width="0.0545%" height="15" fill="rgb(215,111,0)" fg:x="44503" fg:w="42"/><text x="58.0371%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (38 samples, 0.05%)</title><rect x="57.7923%" y="1749" width="0.0493%" height="15" fill="rgb(211,65,46)" fg:x="44507" fg:w="38"/><text x="58.0423%" y="1759.50"></text></g><g><title>alloc::alloc::exchange_malloc (36 samples, 0.05%)</title><rect x="57.7949%" y="1733" width="0.0467%" height="15" fill="rgb(216,5,12)" fg:x="44509" fg:w="36"/><text x="58.0449%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.05%)</title><rect x="57.7949%" y="1717" width="0.0467%" height="15" fill="rgb(226,7,2)" fg:x="44509" fg:w="36"/><text x="58.0449%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.05%)</title><rect x="57.7949%" y="1701" width="0.0467%" height="15" fill="rgb(242,116,12)" fg:x="44509" fg:w="36"/><text x="58.0449%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.05%)</title><rect x="57.7949%" y="1685" width="0.0467%" height="15" fill="rgb(249,209,7)" fg:x="44509" fg:w="36"/><text x="58.0449%" y="1695.50"></text></g><g><title>malloc (32 samples, 0.04%)</title><rect x="57.8001%" y="1669" width="0.0416%" height="15" fill="rgb(232,73,17)" fg:x="44513" fg:w="32"/><text x="58.0501%" y="1679.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="57.8183%" y="1653" width="0.0234%" height="15" fill="rgb(214,13,32)" fg:x="44527" fg:w="18"/><text x="58.0683%" y="1663.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (106 samples, 0.14%)</title><rect x="57.7793%" y="1781" width="0.1376%" height="15" fill="rgb(221,125,10)" fg:x="44497" fg:w="106"/><text x="58.0293%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (58 samples, 0.08%)</title><rect x="57.8416%" y="1765" width="0.0753%" height="15" fill="rgb(246,7,44)" fg:x="44545" fg:w="58"/><text x="58.0916%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (58 samples, 0.08%)</title><rect x="57.8416%" y="1749" width="0.0753%" height="15" fill="rgb(239,18,35)" fg:x="44545" fg:w="58"/><text x="58.0916%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (58 samples, 0.08%)</title><rect x="57.8416%" y="1733" width="0.0753%" height="15" fill="rgb(250,222,16)" fg:x="44545" fg:w="58"/><text x="58.0916%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (58 samples, 0.08%)</title><rect x="57.8416%" y="1717" width="0.0753%" height="15" fill="rgb(219,100,8)" fg:x="44545" fg:w="58"/><text x="58.0916%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (56 samples, 0.07%)</title><rect x="57.8442%" y="1701" width="0.0727%" height="15" fill="rgb(240,62,13)" fg:x="44547" fg:w="56"/><text x="58.0942%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (56 samples, 0.07%)</title><rect x="57.8442%" y="1685" width="0.0727%" height="15" fill="rgb(253,194,2)" fg:x="44547" fg:w="56"/><text x="58.0942%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (56 samples, 0.07%)</title><rect x="57.8442%" y="1669" width="0.0727%" height="15" fill="rgb(235,58,31)" fg:x="44547" fg:w="56"/><text x="58.0942%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.07%)</title><rect x="57.8442%" y="1653" width="0.0727%" height="15" fill="rgb(231,37,11)" fg:x="44547" fg:w="56"/><text x="58.0942%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.07%)</title><rect x="57.8481%" y="1637" width="0.0688%" height="15" fill="rgb(235,133,0)" fg:x="44550" fg:w="53"/><text x="58.0981%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.07%)</title><rect x="57.8481%" y="1621" width="0.0688%" height="15" fill="rgb(212,185,40)" fg:x="44550" fg:w="53"/><text x="58.0981%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.07%)</title><rect x="57.8481%" y="1605" width="0.0688%" height="15" fill="rgb(216,68,42)" fg:x="44550" fg:w="53"/><text x="58.0981%" y="1615.50"></text></g><g><title>malloc (51 samples, 0.07%)</title><rect x="57.8507%" y="1589" width="0.0662%" height="15" fill="rgb(239,81,4)" fg:x="44552" fg:w="51"/><text x="58.1007%" y="1599.50"></text></g><g><title>[libc.so.6] (29 samples, 0.04%)</title><rect x="57.8793%" y="1573" width="0.0377%" height="15" fill="rgb(206,86,6)" fg:x="44574" fg:w="29"/><text x="58.1293%" y="1583.50"></text></g><g><title>core::mem::replace (8 samples, 0.01%)</title><rect x="57.9702%" y="1749" width="0.0104%" height="15" fill="rgb(249,95,27)" fg:x="44644" fg:w="8"/><text x="58.2202%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (742 samples, 0.96%)</title><rect x="57.0210%" y="1797" width="0.9635%" height="15" fill="rgb(205,155,45)" fg:x="43913" fg:w="742"/><text x="57.2710%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (52 samples, 0.07%)</title><rect x="57.9169%" y="1781" width="0.0675%" height="15" fill="rgb(213,55,42)" fg:x="44603" fg:w="52"/><text x="58.1669%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (15 samples, 0.02%)</title><rect x="57.9650%" y="1765" width="0.0195%" height="15" fill="rgb(249,197,4)" fg:x="44640" fg:w="15"/><text x="58.2150%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="57.9923%" y="1717" width="0.0130%" height="15" fill="rgb(212,128,32)" fg:x="44661" fg:w="10"/><text x="58.2423%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="58.0052%" y="1717" width="0.0117%" height="15" fill="rgb(252,47,30)" fg:x="44671" fg:w="9"/><text x="58.2552%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="58.0052%" y="1701" width="0.0117%" height="15" fill="rgb(209,79,18)" fg:x="44671" fg:w="9"/><text x="58.2552%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="58.0052%" y="1685" width="0.0117%" height="15" fill="rgb(225,81,38)" fg:x="44671" fg:w="9"/><text x="58.2552%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (32 samples, 0.04%)</title><rect x="57.9910%" y="1781" width="0.0416%" height="15" fill="rgb(205,95,16)" fg:x="44660" fg:w="32"/><text x="58.2410%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.04%)</title><rect x="57.9910%" y="1765" width="0.0416%" height="15" fill="rgb(214,30,4)" fg:x="44660" fg:w="32"/><text x="58.2410%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.04%)</title><rect x="57.9910%" y="1749" width="0.0416%" height="15" fill="rgb(232,137,22)" fg:x="44660" fg:w="32"/><text x="58.2410%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.04%)</title><rect x="57.9910%" y="1733" width="0.0416%" height="15" fill="rgb(232,156,19)" fg:x="44660" fg:w="32"/><text x="58.2410%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.02%)</title><rect x="58.0169%" y="1717" width="0.0156%" height="15" fill="rgb(248,157,26)" fg:x="44680" fg:w="12"/><text x="58.2669%" y="1727.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (38 samples, 0.05%)</title><rect x="57.9845%" y="1797" width="0.0493%" height="15" fill="rgb(242,24,3)" fg:x="44655" fg:w="38"/><text x="58.2345%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (8 samples, 0.01%)</title><rect x="58.0338%" y="1797" width="0.0104%" height="15" fill="rgb(218,195,48)" fg:x="44693" fg:w="8"/><text x="58.2838%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Function::is_native (8 samples, 0.01%)</title><rect x="58.0520%" y="1797" width="0.0104%" height="15" fill="rgb(214,193,36)" fg:x="44707" fg:w="8"/><text x="58.3020%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Function::name (13 samples, 0.02%)</title><rect x="58.0728%" y="1797" width="0.0169%" height="15" fill="rgb(242,110,40)" fg:x="44723" fg:w="13"/><text x="58.3228%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (9 samples, 0.01%)</title><rect x="58.0922%" y="1781" width="0.0117%" height="15" fill="rgb(233,150,26)" fg:x="44738" fg:w="9"/><text x="58.3422%" y="1791.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="58.0922%" y="1765" width="0.0117%" height="15" fill="rgb(239,200,30)" fg:x="44738" fg:w="9"/><text x="58.3422%" y="1775.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (9 samples, 0.01%)</title><rect x="58.0922%" y="1749" width="0.0117%" height="15" fill="rgb(226,28,11)" fg:x="44738" fg:w="9"/><text x="58.3422%" y="1759.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (85 samples, 0.11%)</title><rect x="58.1130%" y="1765" width="0.1104%" height="15" fill="rgb(220,26,48)" fg:x="44754" fg:w="85"/><text x="58.3630%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.03%)</title><rect x="58.1909%" y="1749" width="0.0325%" height="15" fill="rgb(232,10,11)" fg:x="44814" fg:w="25"/><text x="58.4409%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.03%)</title><rect x="58.1909%" y="1733" width="0.0325%" height="15" fill="rgb(252,143,50)" fg:x="44814" fg:w="25"/><text x="58.4409%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (104 samples, 0.14%)</title><rect x="58.0896%" y="1797" width="0.1350%" height="15" fill="rgb(206,58,22)" fg:x="44736" fg:w="104"/><text x="58.3396%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (86 samples, 0.11%)</title><rect x="58.1130%" y="1781" width="0.1117%" height="15" fill="rgb(250,9,45)" fg:x="44754" fg:w="86"/><text x="58.3630%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (30 samples, 0.04%)</title><rect x="58.2247%" y="1797" width="0.0390%" height="15" fill="rgb(225,148,14)" fg:x="44840" fg:w="30"/><text x="58.4747%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Module::function_at (9 samples, 0.01%)</title><rect x="58.2520%" y="1781" width="0.0117%" height="15" fill="rgb(205,178,40)" fg:x="44861" fg:w="9"/><text x="58.5020%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="58.2948%" y="1781" width="0.0195%" height="15" fill="rgb(215,201,4)" fg:x="44894" fg:w="15"/><text x="58.5448%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="58.3169%" y="1733" width="0.0104%" height="15" fill="rgb(219,223,24)" fg:x="44911" fg:w="8"/><text x="58.5669%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.01%)</title><rect x="58.3156%" y="1765" width="0.0130%" height="15" fill="rgb(217,19,31)" fg:x="44910" fg:w="10"/><text x="58.5656%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="58.3156%" y="1749" width="0.0130%" height="15" fill="rgb(235,33,3)" fg:x="44910" fg:w="10"/><text x="58.5656%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.02%)</title><rect x="58.3143%" y="1781" width="0.0182%" height="15" fill="rgb(221,39,18)" fg:x="44909" fg:w="14"/><text x="58.5643%" y="1791.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.02%)</title><rect x="58.3455%" y="1765" width="0.0182%" height="15" fill="rgb(242,162,33)" fg:x="44933" fg:w="14"/><text x="58.5955%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="58.3468%" y="1749" width="0.0169%" height="15" fill="rgb(233,215,28)" fg:x="44934" fg:w="13"/><text x="58.5968%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="58.3468%" y="1733" width="0.0169%" height="15" fill="rgb(212,117,9)" fg:x="44934" fg:w="13"/><text x="58.5968%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="58.3468%" y="1717" width="0.0169%" height="15" fill="rgb(237,70,47)" fg:x="44934" fg:w="13"/><text x="58.5968%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (31 samples, 0.04%)</title><rect x="58.3338%" y="1781" width="0.0403%" height="15" fill="rgb(206,177,13)" fg:x="44924" fg:w="31"/><text x="58.5838%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.01%)</title><rect x="58.3636%" y="1765" width="0.0104%" height="15" fill="rgb(209,174,33)" fg:x="44947" fg:w="8"/><text x="58.6136%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.01%)</title><rect x="58.3636%" y="1749" width="0.0104%" height="15" fill="rgb(226,6,11)" fg:x="44947" fg:w="8"/><text x="58.6136%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="58.3636%" y="1733" width="0.0104%" height="15" fill="rgb(240,214,6)" fg:x="44947" fg:w="8"/><text x="58.6136%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="58.3636%" y="1717" width="0.0104%" height="15" fill="rgb(254,214,40)" fg:x="44947" fg:w="8"/><text x="58.6136%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="58.3636%" y="1701" width="0.0104%" height="15" fill="rgb(230,187,15)" fg:x="44947" fg:w="8"/><text x="58.6136%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (125 samples, 0.16%)</title><rect x="58.2675%" y="1797" width="0.1623%" height="15" fill="rgb(250,11,27)" fg:x="44873" fg:w="125"/><text x="58.5175%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (38 samples, 0.05%)</title><rect x="58.3805%" y="1781" width="0.0493%" height="15" fill="rgb(243,107,19)" fg:x="44960" fg:w="38"/><text x="58.6305%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (38 samples, 0.05%)</title><rect x="58.3805%" y="1765" width="0.0493%" height="15" fill="rgb(253,66,26)" fg:x="44960" fg:w="38"/><text x="58.6305%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (12 samples, 0.02%)</title><rect x="58.4143%" y="1749" width="0.0156%" height="15" fill="rgb(228,43,8)" fg:x="44986" fg:w="12"/><text x="58.6643%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="58.4156%" y="1733" width="0.0143%" height="15" fill="rgb(232,197,36)" fg:x="44987" fg:w="11"/><text x="58.6656%" y="1743.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="58.4779%" y="1733" width="0.0169%" height="15" fill="rgb(221,182,31)" fg:x="45035" fg:w="13"/><text x="58.7279%" y="1743.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="58.4818%" y="1717" width="0.0130%" height="15" fill="rgb(244,25,36)" fg:x="45038" fg:w="10"/><text x="58.7318%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="58.4740%" y="1765" width="0.0221%" height="15" fill="rgb(247,101,19)" fg:x="45032" fg:w="17"/><text x="58.7240%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.02%)</title><rect x="58.4779%" y="1749" width="0.0182%" height="15" fill="rgb(223,117,19)" fg:x="45035" fg:w="14"/><text x="58.7279%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.03%)</title><rect x="58.4688%" y="1781" width="0.0286%" height="15" fill="rgb(249,63,38)" fg:x="45028" fg:w="22"/><text x="58.7188%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (59 samples, 0.08%)</title><rect x="58.4299%" y="1797" width="0.0766%" height="15" fill="rgb(220,143,23)" fg:x="44998" fg:w="59"/><text x="58.6799%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (10 samples, 0.01%)</title><rect x="58.5065%" y="1797" width="0.0130%" height="15" fill="rgb(252,183,22)" fg:x="45057" fg:w="10"/><text x="58.7565%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (8,822 samples, 11.46%)</title><rect x="47.0927%" y="1813" width="11.4554%" height="15" fill="rgb(243,176,15)" fg:x="36267" fg:w="8822"/><text x="47.3427%" y="1823.50">move_vm_runtime::..</text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (22 samples, 0.03%)</title><rect x="58.5195%" y="1797" width="0.0286%" height="15" fill="rgb(244,204,46)" fg:x="45067" fg:w="22"/><text x="58.7695%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::new (8 samples, 0.01%)</title><rect x="58.5480%" y="1813" width="0.0104%" height="15" fill="rgb(227,28,54)" fg:x="45089" fg:w="8"/><text x="58.7980%" y="1823.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (8,841 samples, 11.48%)</title><rect x="47.0823%" y="1829" width="11.4800%" height="15" fill="rgb(231,10,15)" fg:x="36259" fg:w="8841"/><text x="47.3323%" y="1839.50">move_vm_runtime::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="58.6233%" y="1493" width="0.0156%" height="15" fill="rgb(210,200,17)" fg:x="45147" fg:w="12"/><text x="58.8733%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="58.6233%" y="1477" width="0.0156%" height="15" fill="rgb(251,106,46)" fg:x="45147" fg:w="12"/><text x="58.8733%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="58.6233%" y="1461" width="0.0156%" height="15" fill="rgb(218,211,15)" fg:x="45147" fg:w="12"/><text x="58.8733%" y="1471.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="58.6272%" y="1445" width="0.0117%" height="15" fill="rgb(239,62,10)" fg:x="45150" fg:w="9"/><text x="58.8772%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (8 samples, 0.01%)</title><rect x="58.6402%" y="1493" width="0.0104%" height="15" fill="rgb(225,53,53)" fg:x="45160" fg:w="8"/><text x="58.8902%" y="1503.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="58.6753%" y="1461" width="0.0104%" height="15" fill="rgb(207,16,24)" fg:x="45187" fg:w="8"/><text x="58.9253%" y="1471.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.02%)</title><rect x="58.6857%" y="1461" width="0.0169%" height="15" fill="rgb(217,52,28)" fg:x="45195" fg:w="13"/><text x="58.9357%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (9 samples, 0.01%)</title><rect x="58.6909%" y="1445" width="0.0117%" height="15" fill="rgb(246,1,5)" fg:x="45199" fg:w="9"/><text x="58.9409%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (9 samples, 0.01%)</title><rect x="58.6909%" y="1429" width="0.0117%" height="15" fill="rgb(221,29,26)" fg:x="45199" fg:w="9"/><text x="58.9409%" y="1439.50"></text></g><g><title>bcs::de::from_bytes_seed (43 samples, 0.06%)</title><rect x="58.6519%" y="1477" width="0.0558%" height="15" fill="rgb(250,133,32)" fg:x="45169" fg:w="43"/><text x="58.9019%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (89 samples, 0.12%)</title><rect x="58.5948%" y="1557" width="0.1156%" height="15" fill="rgb(236,63,16)" fg:x="45125" fg:w="89"/><text x="58.8448%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (89 samples, 0.12%)</title><rect x="58.5948%" y="1541" width="0.1156%" height="15" fill="rgb(231,159,14)" fg:x="45125" fg:w="89"/><text x="58.8448%" y="1551.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (88 samples, 0.11%)</title><rect x="58.5961%" y="1525" width="0.1143%" height="15" fill="rgb(207,102,36)" fg:x="45126" fg:w="88"/><text x="58.8461%" y="1535.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (86 samples, 0.11%)</title><rect x="58.5987%" y="1509" width="0.1117%" height="15" fill="rgb(230,224,31)" fg:x="45128" fg:w="86"/><text x="58.8487%" y="1519.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (46 samples, 0.06%)</title><rect x="58.6506%" y="1493" width="0.0597%" height="15" fill="rgb(215,182,16)" fg:x="45168" fg:w="46"/><text x="58.9006%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (104 samples, 0.14%)</title><rect x="58.5870%" y="1605" width="0.1350%" height="15" fill="rgb(226,113,2)" fg:x="45119" fg:w="104"/><text x="58.8370%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (99 samples, 0.13%)</title><rect x="58.5935%" y="1589" width="0.1286%" height="15" fill="rgb(241,18,35)" fg:x="45124" fg:w="99"/><text x="58.8435%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (99 samples, 0.13%)</title><rect x="58.5935%" y="1573" width="0.1286%" height="15" fill="rgb(240,165,44)" fg:x="45124" fg:w="99"/><text x="58.8435%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (113 samples, 0.15%)</title><rect x="58.5844%" y="1637" width="0.1467%" height="15" fill="rgb(229,130,47)" fg:x="45117" fg:w="113"/><text x="58.8344%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113 samples, 0.15%)</title><rect x="58.5844%" y="1621" width="0.1467%" height="15" fill="rgb(223,93,7)" fg:x="45117" fg:w="113"/><text x="58.8344%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.15%)</title><rect x="58.5844%" y="1653" width="0.1519%" height="15" fill="rgb(205,180,36)" fg:x="45117" fg:w="117"/><text x="58.8344%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.04%)</title><rect x="58.7402%" y="1573" width="0.0390%" height="15" fill="rgb(221,103,28)" fg:x="45237" fg:w="30"/><text x="58.9902%" y="1583.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.04%)</title><rect x="58.7402%" y="1557" width="0.0390%" height="15" fill="rgb(212,4,3)" fg:x="45237" fg:w="30"/><text x="58.9902%" y="1567.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.04%)</title><rect x="58.7402%" y="1541" width="0.0390%" height="15" fill="rgb(209,221,53)" fg:x="45237" fg:w="30"/><text x="58.9902%" y="1551.50"></text></g><g><title>realloc (30 samples, 0.04%)</title><rect x="58.7402%" y="1525" width="0.0390%" height="15" fill="rgb(233,229,52)" fg:x="45237" fg:w="30"/><text x="58.9902%" y="1535.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="58.7454%" y="1509" width="0.0338%" height="15" fill="rgb(254,127,37)" fg:x="45241" fg:w="26"/><text x="58.9954%" y="1519.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="58.7493%" y="1493" width="0.0299%" height="15" fill="rgb(207,161,26)" fg:x="45244" fg:w="23"/><text x="58.9993%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.04%)</title><rect x="58.7363%" y="1653" width="0.0441%" height="15" fill="rgb(223,75,5)" fg:x="45234" fg:w="34"/><text x="58.9863%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.04%)</title><rect x="58.7363%" y="1637" width="0.0441%" height="15" fill="rgb(235,115,52)" fg:x="45234" fg:w="34"/><text x="58.9863%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.04%)</title><rect x="58.7363%" y="1621" width="0.0441%" height="15" fill="rgb(240,91,46)" fg:x="45234" fg:w="34"/><text x="58.9863%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.04%)</title><rect x="58.7376%" y="1605" width="0.0429%" height="15" fill="rgb(251,144,21)" fg:x="45235" fg:w="33"/><text x="58.9876%" y="1615.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.04%)</title><rect x="58.7389%" y="1589" width="0.0416%" height="15" fill="rgb(247,220,47)" fg:x="45236" fg:w="32"/><text x="58.9889%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="58.7804%" y="1653" width="0.0169%" height="15" fill="rgb(253,122,1)" fg:x="45268" fg:w="13"/><text x="59.0304%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;&gt; (13 samples, 0.02%)</title><rect x="58.7804%" y="1637" width="0.0169%" height="15" fill="rgb(221,0,24)" fg:x="45268" fg:w="13"/><text x="59.0304%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="58.7804%" y="1621" width="0.0169%" height="15" fill="rgb(220,204,54)" fg:x="45268" fg:w="13"/><text x="59.0304%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="58.7804%" y="1605" width="0.0169%" height="15" fill="rgb(205,96,25)" fg:x="45268" fg:w="13"/><text x="59.0304%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (185 samples, 0.24%)</title><rect x="58.5727%" y="1685" width="0.2402%" height="15" fill="rgb(247,77,20)" fg:x="45108" fg:w="185"/><text x="58.8227%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (185 samples, 0.24%)</title><rect x="58.5727%" y="1669" width="0.2402%" height="15" fill="rgb(245,151,8)" fg:x="45108" fg:w="185"/><text x="58.8227%" y="1679.50"></text></g><g><title>core::ptr::write (12 samples, 0.02%)</title><rect x="58.7973%" y="1653" width="0.0156%" height="15" fill="rgb(242,158,39)" fg:x="45281" fg:w="12"/><text x="59.0473%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (14 samples, 0.02%)</title><rect x="58.8311%" y="1525" width="0.0182%" height="15" fill="rgb(222,214,50)" fg:x="45307" fg:w="14"/><text x="59.0811%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (13 samples, 0.02%)</title><rect x="58.8324%" y="1509" width="0.0169%" height="15" fill="rgb(229,60,39)" fg:x="45308" fg:w="13"/><text x="59.0824%" y="1519.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (34 samples, 0.04%)</title><rect x="58.8908%" y="1381" width="0.0441%" height="15" fill="rgb(240,148,18)" fg:x="45353" fg:w="34"/><text x="59.1408%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (25 samples, 0.03%)</title><rect x="58.9025%" y="1365" width="0.0325%" height="15" fill="rgb(215,96,11)" fg:x="45362" fg:w="25"/><text x="59.1525%" y="1375.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (25 samples, 0.03%)</title><rect x="58.9025%" y="1349" width="0.0325%" height="15" fill="rgb(238,162,53)" fg:x="45362" fg:w="25"/><text x="59.1525%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (25 samples, 0.03%)</title><rect x="58.9025%" y="1333" width="0.0325%" height="15" fill="rgb(214,83,18)" fg:x="45362" fg:w="25"/><text x="59.1525%" y="1343.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (25 samples, 0.03%)</title><rect x="58.9025%" y="1317" width="0.0325%" height="15" fill="rgb(248,117,24)" fg:x="45362" fg:w="25"/><text x="59.1525%" y="1327.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (25 samples, 0.03%)</title><rect x="58.9025%" y="1301" width="0.0325%" height="15" fill="rgb(238,190,6)" fg:x="45362" fg:w="25"/><text x="59.1525%" y="1311.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (21 samples, 0.03%)</title><rect x="58.9077%" y="1285" width="0.0273%" height="15" fill="rgb(213,51,6)" fg:x="45366" fg:w="21"/><text x="59.1577%" y="1295.50"></text></g><g><title>bcs::de::Deserializer::next (8 samples, 0.01%)</title><rect x="58.9246%" y="1269" width="0.0104%" height="15" fill="rgb(212,136,1)" fg:x="45379" fg:w="8"/><text x="59.1746%" y="1279.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (41 samples, 0.05%)</title><rect x="58.8830%" y="1429" width="0.0532%" height="15" fill="rgb(221,192,14)" fg:x="45347" fg:w="41"/><text x="59.1330%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (39 samples, 0.05%)</title><rect x="58.8856%" y="1413" width="0.0506%" height="15" fill="rgb(244,38,54)" fg:x="45349" fg:w="39"/><text x="59.1356%" y="1423.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (39 samples, 0.05%)</title><rect x="58.8856%" y="1397" width="0.0506%" height="15" fill="rgb(240,45,28)" fg:x="45349" fg:w="39"/><text x="59.1356%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (56 samples, 0.07%)</title><rect x="58.8674%" y="1477" width="0.0727%" height="15" fill="rgb(240,123,12)" fg:x="45335" fg:w="56"/><text x="59.1174%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (44 samples, 0.06%)</title><rect x="58.8830%" y="1461" width="0.0571%" height="15" fill="rgb(216,14,30)" fg:x="45347" fg:w="44"/><text x="59.1330%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (44 samples, 0.06%)</title><rect x="58.8830%" y="1445" width="0.0571%" height="15" fill="rgb(212,50,24)" fg:x="45347" fg:w="44"/><text x="59.1330%" y="1455.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (61 samples, 0.08%)</title><rect x="58.8636%" y="1493" width="0.0792%" height="15" fill="rgb(253,229,47)" fg:x="45332" fg:w="61"/><text x="59.1136%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (102 samples, 0.13%)</title><rect x="58.8142%" y="1589" width="0.1324%" height="15" fill="rgb(214,26,17)" fg:x="45294" fg:w="102"/><text x="59.0642%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (102 samples, 0.13%)</title><rect x="58.8142%" y="1573" width="0.1324%" height="15" fill="rgb(252,60,11)" fg:x="45294" fg:w="102"/><text x="59.0642%" y="1583.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (100 samples, 0.13%)</title><rect x="58.8168%" y="1557" width="0.1298%" height="15" fill="rgb(209,59,37)" fg:x="45296" fg:w="100"/><text x="59.0668%" y="1567.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (98 samples, 0.13%)</title><rect x="58.8194%" y="1541" width="0.1273%" height="15" fill="rgb(228,126,53)" fg:x="45298" fg:w="98"/><text x="59.0694%" y="1551.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (75 samples, 0.10%)</title><rect x="58.8493%" y="1525" width="0.0974%" height="15" fill="rgb(233,99,2)" fg:x="45321" fg:w="75"/><text x="59.0993%" y="1535.50"></text></g><g><title>bcs::de::from_bytes_seed (75 samples, 0.10%)</title><rect x="58.8493%" y="1509" width="0.0974%" height="15" fill="rgb(217,106,34)" fg:x="45321" fg:w="75"/><text x="59.0993%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105 samples, 0.14%)</title><rect x="58.8129%" y="1637" width="0.1363%" height="15" fill="rgb(222,46,19)" fg:x="45293" fg:w="105"/><text x="59.0629%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (104 samples, 0.14%)</title><rect x="58.8142%" y="1621" width="0.1350%" height="15" fill="rgb(251,87,31)" fg:x="45294" fg:w="104"/><text x="59.0642%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (104 samples, 0.14%)</title><rect x="58.8142%" y="1605" width="0.1350%" height="15" fill="rgb(213,70,51)" fg:x="45294" fg:w="104"/><text x="59.0642%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (107 samples, 0.14%)</title><rect x="58.8129%" y="1669" width="0.1389%" height="15" fill="rgb(229,144,18)" fg:x="45293" fg:w="107"/><text x="59.0629%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (107 samples, 0.14%)</title><rect x="58.8129%" y="1653" width="0.1389%" height="15" fill="rgb(254,60,26)" fg:x="45293" fg:w="107"/><text x="59.0629%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.14%)</title><rect x="58.8129%" y="1685" width="0.1415%" height="15" fill="rgb(243,127,51)" fg:x="45293" fg:w="109"/><text x="59.0629%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (300 samples, 0.39%)</title><rect x="58.5688%" y="1813" width="0.3895%" height="15" fill="rgb(221,51,25)" fg:x="45105" fg:w="300"/><text x="58.8188%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (300 samples, 0.39%)</title><rect x="58.5688%" y="1797" width="0.3895%" height="15" fill="rgb(205,42,7)" fg:x="45105" fg:w="300"/><text x="58.8188%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (300 samples, 0.39%)</title><rect x="58.5688%" y="1781" width="0.3895%" height="15" fill="rgb(236,177,48)" fg:x="45105" fg:w="300"/><text x="58.8188%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (299 samples, 0.39%)</title><rect x="58.5701%" y="1765" width="0.3883%" height="15" fill="rgb(226,79,31)" fg:x="45106" fg:w="299"/><text x="58.8201%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (299 samples, 0.39%)</title><rect x="58.5701%" y="1749" width="0.3883%" height="15" fill="rgb(216,170,12)" fg:x="45106" fg:w="299"/><text x="58.8201%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (299 samples, 0.39%)</title><rect x="58.5701%" y="1733" width="0.3883%" height="15" fill="rgb(208,62,51)" fg:x="45106" fg:w="299"/><text x="58.8201%" y="1743.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (298 samples, 0.39%)</title><rect x="58.5714%" y="1717" width="0.3870%" height="15" fill="rgb(254,129,9)" fg:x="45107" fg:w="298"/><text x="58.8214%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (298 samples, 0.39%)</title><rect x="58.5714%" y="1701" width="0.3870%" height="15" fill="rgb(243,209,31)" fg:x="45107" fg:w="298"/><text x="58.8214%" y="1711.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="58.9596%" y="1797" width="0.0104%" height="15" fill="rgb(213,159,23)" fg:x="45406" fg:w="8"/><text x="59.2096%" y="1807.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (327 samples, 0.42%)</title><rect x="58.5623%" y="1829" width="0.4246%" height="15" fill="rgb(249,77,39)" fg:x="45100" fg:w="327"/><text x="58.8123%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (22 samples, 0.03%)</title><rect x="58.9583%" y="1813" width="0.0286%" height="15" fill="rgb(230,13,33)" fg:x="45405" fg:w="22"/><text x="59.2083%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="58.9700%" y="1797" width="0.0169%" height="15" fill="rgb(215,215,7)" fg:x="45414" fg:w="13"/><text x="59.2200%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="58.9700%" y="1781" width="0.0169%" height="15" fill="rgb(222,92,25)" fg:x="45414" fg:w="13"/><text x="59.2200%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="58.9700%" y="1765" width="0.0169%" height="15" fill="rgb(215,173,22)" fg:x="45414" fg:w="13"/><text x="59.2200%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="58.9700%" y="1749" width="0.0169%" height="15" fill="rgb(247,205,52)" fg:x="45414" fg:w="13"/><text x="59.2200%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="58.9726%" y="1733" width="0.0143%" height="15" fill="rgb(240,210,37)" fg:x="45416" fg:w="11"/><text x="59.2226%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="58.9726%" y="1717" width="0.0143%" height="15" fill="rgb(224,13,10)" fg:x="45416" fg:w="11"/><text x="59.2226%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="58.9726%" y="1701" width="0.0143%" height="15" fill="rgb(209,48,33)" fg:x="45416" fg:w="11"/><text x="59.2226%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="58.9726%" y="1685" width="0.0143%" height="15" fill="rgb(228,219,23)" fg:x="45416" fg:w="11"/><text x="59.2226%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="58.9726%" y="1669" width="0.0143%" height="15" fill="rgb(239,46,49)" fg:x="45416" fg:w="11"/><text x="59.2226%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="58.9726%" y="1653" width="0.0143%" height="15" fill="rgb(206,172,51)" fg:x="45416" fg:w="11"/><text x="59.2226%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="58.9726%" y="1637" width="0.0143%" height="15" fill="rgb(213,212,35)" fg:x="45416" fg:w="11"/><text x="59.2226%" y="1647.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue (9,920 samples, 12.88%)</title><rect x="46.1435%" y="1893" width="12.8811%" height="15" fill="rgb(252,40,27)" fg:x="35536" fg:w="9920"/><text x="46.3935%" y="1903.50">aptos_vm::aptos_vm_..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (9,671 samples, 12.56%)</title><rect x="46.4668%" y="1877" width="12.5578%" height="15" fill="rgb(212,33,41)" fg:x="35785" fg:w="9671"/><text x="46.7168%" y="1887.50">move_vm_runtime::se..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (9,670 samples, 12.56%)</title><rect x="46.4681%" y="1861" width="12.5565%" height="15" fill="rgb(232,160,27)" fg:x="35786" fg:w="9670"/><text x="46.7181%" y="1871.50">move_vm_runtime::ru..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (9,321 samples, 12.10%)</title><rect x="46.9213%" y="1845" width="12.1033%" height="15" fill="rgb(244,160,20)" fg:x="36135" fg:w="9321"/><text x="47.1713%" y="1855.50">move_vm_runtime::r..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (29 samples, 0.04%)</title><rect x="58.9869%" y="1829" width="0.0377%" height="15" fill="rgb(205,66,20)" fg:x="45427" fg:w="29"/><text x="59.2369%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="58.9999%" y="1813" width="0.0247%" height="15" fill="rgb(236,158,6)" fg:x="45437" fg:w="19"/><text x="59.2499%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="58.9999%" y="1797" width="0.0247%" height="15" fill="rgb(232,25,36)" fg:x="45437" fg:w="19"/><text x="59.2499%" y="1807.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 0.02%)</title><rect x="58.9999%" y="1781" width="0.0247%" height="15" fill="rgb(220,153,35)" fg:x="45437" fg:w="19"/><text x="59.2499%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (17 samples, 0.02%)</title><rect x="59.0025%" y="1765" width="0.0221%" height="15" fill="rgb(216,5,8)" fg:x="45439" fg:w="17"/><text x="59.2525%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="59.0025%" y="1749" width="0.0221%" height="15" fill="rgb(240,97,3)" fg:x="45439" fg:w="17"/><text x="59.2525%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="59.0025%" y="1733" width="0.0221%" height="15" fill="rgb(220,99,26)" fg:x="45439" fg:w="17"/><text x="59.2525%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="59.0038%" y="1717" width="0.0208%" height="15" fill="rgb(237,96,2)" fg:x="45440" fg:w="16"/><text x="59.2538%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="59.0116%" y="1701" width="0.0130%" height="15" fill="rgb(217,197,47)" fg:x="45446" fg:w="10"/><text x="59.2616%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="59.0142%" y="1685" width="0.0104%" height="15" fill="rgb(252,133,54)" fg:x="45448" fg:w="8"/><text x="59.2642%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;&gt; (8 samples, 0.01%)</title><rect x="59.0142%" y="1669" width="0.0104%" height="15" fill="rgb(233,37,30)" fg:x="45448" fg:w="8"/><text x="59.2642%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="59.0142%" y="1653" width="0.0104%" height="15" fill="rgb(239,182,12)" fg:x="45448" fg:w="8"/><text x="59.2642%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt; (8 samples, 0.01%)</title><rect x="59.0142%" y="1637" width="0.0104%" height="15" fill="rgb(245,83,39)" fg:x="45448" fg:w="8"/><text x="59.2642%" y="1647.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::into_change_set (60 samples, 0.08%)</title><rect x="59.0492%" y="1877" width="0.0779%" height="15" fill="rgb(222,109,36)" fg:x="45475" fg:w="60"/><text x="59.2992%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.04%)</title><rect x="59.2583%" y="1493" width="0.0441%" height="15" fill="rgb(237,95,44)" fg:x="45636" fg:w="34"/><text x="59.5083%" y="1503.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.04%)</title><rect x="59.2583%" y="1477" width="0.0441%" height="15" fill="rgb(216,36,54)" fg:x="45636" fg:w="34"/><text x="59.5083%" y="1487.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.04%)</title><rect x="59.2583%" y="1461" width="0.0441%" height="15" fill="rgb(236,164,3)" fg:x="45636" fg:w="34"/><text x="59.5083%" y="1471.50"></text></g><g><title>realloc (32 samples, 0.04%)</title><rect x="59.2609%" y="1445" width="0.0416%" height="15" fill="rgb(223,15,21)" fg:x="45638" fg:w="32"/><text x="59.5109%" y="1455.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="59.2687%" y="1429" width="0.0338%" height="15" fill="rgb(239,191,12)" fg:x="45644" fg:w="26"/><text x="59.5187%" y="1439.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="59.2726%" y="1413" width="0.0299%" height="15" fill="rgb(231,191,37)" fg:x="45647" fg:w="23"/><text x="59.5226%" y="1423.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (50 samples, 0.06%)</title><rect x="59.2388%" y="1733" width="0.0649%" height="15" fill="rgb(209,155,36)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (50 samples, 0.06%)</title><rect x="59.2388%" y="1717" width="0.0649%" height="15" fill="rgb(216,222,49)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (50 samples, 0.06%)</title><rect x="59.2388%" y="1701" width="0.0649%" height="15" fill="rgb(218,181,2)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (50 samples, 0.06%)</title><rect x="59.2388%" y="1685" width="0.0649%" height="15" fill="rgb(239,125,9)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (50 samples, 0.06%)</title><rect x="59.2388%" y="1669" width="0.0649%" height="15" fill="rgb(233,103,7)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (50 samples, 0.06%)</title><rect x="59.2388%" y="1653" width="0.0649%" height="15" fill="rgb(209,223,5)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1663.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (50 samples, 0.06%)</title><rect x="59.2388%" y="1637" width="0.0649%" height="15" fill="rgb(234,71,27)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.06%)</title><rect x="59.2388%" y="1621" width="0.0649%" height="15" fill="rgb(251,202,16)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.06%)</title><rect x="59.2388%" y="1605" width="0.0649%" height="15" fill="rgb(231,180,0)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.06%)</title><rect x="59.2388%" y="1589" width="0.0649%" height="15" fill="rgb(223,58,28)" fg:x="45621" fg:w="50"/><text x="59.4888%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (44 samples, 0.06%)</title><rect x="59.2466%" y="1573" width="0.0571%" height="15" fill="rgb(250,34,24)" fg:x="45627" fg:w="44"/><text x="59.4966%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (43 samples, 0.06%)</title><rect x="59.2479%" y="1557" width="0.0558%" height="15" fill="rgb(235,24,16)" fg:x="45628" fg:w="43"/><text x="59.4979%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.05%)</title><rect x="59.2518%" y="1541" width="0.0519%" height="15" fill="rgb(219,28,33)" fg:x="45631" fg:w="40"/><text x="59.5018%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.05%)</title><rect x="59.2544%" y="1525" width="0.0493%" height="15" fill="rgb(228,150,43)" fg:x="45633" fg:w="38"/><text x="59.5044%" y="1535.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.05%)</title><rect x="59.2544%" y="1509" width="0.0493%" height="15" fill="rgb(221,228,36)" fg:x="45633" fg:w="38"/><text x="59.5044%" y="1519.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (10 samples, 0.01%)</title><rect x="59.3037%" y="1733" width="0.0130%" height="15" fill="rgb(232,116,17)" fg:x="45671" fg:w="10"/><text x="59.5537%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.01%)</title><rect x="59.3037%" y="1717" width="0.0130%" height="15" fill="rgb(220,110,51)" fg:x="45671" fg:w="10"/><text x="59.5537%" y="1727.50"></text></g><g><title>bcs::ser::to_bytes (70 samples, 0.09%)</title><rect x="59.2271%" y="1813" width="0.0909%" height="15" fill="rgb(207,26,25)" fg:x="45612" fg:w="70"/><text x="59.4771%" y="1823.50"></text></g><g><title>bcs::ser::serialize_into (69 samples, 0.09%)</title><rect x="59.2284%" y="1797" width="0.0896%" height="15" fill="rgb(223,58,19)" fg:x="45613" fg:w="69"/><text x="59.4784%" y="1807.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (69 samples, 0.09%)</title><rect x="59.2284%" y="1781" width="0.0896%" height="15" fill="rgb(234,125,39)" fg:x="45613" fg:w="69"/><text x="59.4784%" y="1791.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (65 samples, 0.08%)</title><rect x="59.2336%" y="1765" width="0.0844%" height="15" fill="rgb(241,48,36)" fg:x="45617" fg:w="65"/><text x="59.4836%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (63 samples, 0.08%)</title><rect x="59.2362%" y="1749" width="0.0818%" height="15" fill="rgb(217,148,51)" fg:x="45619" fg:w="63"/><text x="59.4862%" y="1759.50"></text></g><g><title>&lt;() as aptos_vm::access_path_cache::AccessPathCache&gt;::get_resource_path (98 samples, 0.13%)</title><rect x="59.2128%" y="1861" width="0.1273%" height="15" fill="rgb(247,17,25)" fg:x="45601" fg:w="98"/><text x="59.4628%" y="1871.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (94 samples, 0.12%)</title><rect x="59.2180%" y="1845" width="0.1221%" height="15" fill="rgb(219,89,38)" fg:x="45605" fg:w="94"/><text x="59.4680%" y="1855.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (88 samples, 0.11%)</title><rect x="59.2258%" y="1829" width="0.1143%" height="15" fill="rgb(220,145,2)" fg:x="45611" fg:w="88"/><text x="59.4758%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (17 samples, 0.02%)</title><rect x="59.3180%" y="1813" width="0.0221%" height="15" fill="rgb(244,66,47)" fg:x="45682" fg:w="17"/><text x="59.5680%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (14 samples, 0.02%)</title><rect x="59.3219%" y="1797" width="0.0182%" height="15" fill="rgb(226,182,5)" fg:x="45685" fg:w="14"/><text x="59.5719%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (10 samples, 0.01%)</title><rect x="59.3271%" y="1781" width="0.0130%" height="15" fill="rgb(211,98,20)" fg:x="45689" fg:w="10"/><text x="59.5771%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (10 samples, 0.01%)</title><rect x="59.3271%" y="1765" width="0.0130%" height="15" fill="rgb(217,103,52)" fg:x="45689" fg:w="10"/><text x="59.5771%" y="1775.50"></text></g><g><title>alloc::alloc::box_free (10 samples, 0.01%)</title><rect x="59.3271%" y="1749" width="0.0130%" height="15" fill="rgb(208,125,52)" fg:x="45689" fg:w="10"/><text x="59.5771%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="59.3271%" y="1733" width="0.0130%" height="15" fill="rgb(244,70,13)" fg:x="45689" fg:w="10"/><text x="59.5771%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="59.3271%" y="1717" width="0.0130%" height="15" fill="rgb(253,124,3)" fg:x="45689" fg:w="10"/><text x="59.5771%" y="1727.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="59.3284%" y="1701" width="0.0117%" height="15" fill="rgb(222,145,32)" fg:x="45690" fg:w="9"/><text x="59.5784%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (32 samples, 0.04%)</title><rect x="59.4102%" y="1813" width="0.0416%" height="15" fill="rgb(232,183,47)" fg:x="45753" fg:w="32"/><text x="59.6602%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (32 samples, 0.04%)</title><rect x="59.4102%" y="1797" width="0.0416%" height="15" fill="rgb(246,226,4)" fg:x="45753" fg:w="32"/><text x="59.6602%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.04%)</title><rect x="59.4141%" y="1781" width="0.0377%" height="15" fill="rgb(228,185,46)" fg:x="45756" fg:w="29"/><text x="59.6641%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.04%)</title><rect x="59.4141%" y="1765" width="0.0377%" height="15" fill="rgb(213,196,4)" fg:x="45756" fg:w="29"/><text x="59.6641%" y="1775.50"></text></g><g><title>cfree (20 samples, 0.03%)</title><rect x="59.4258%" y="1749" width="0.0260%" height="15" fill="rgb(212,2,45)" fg:x="45765" fg:w="20"/><text x="59.6758%" y="1759.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="59.4362%" y="1733" width="0.0156%" height="15" fill="rgb(217,145,50)" fg:x="45773" fg:w="12"/><text x="59.6862%" y="1743.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (42 samples, 0.05%)</title><rect x="59.4037%" y="1829" width="0.0545%" height="15" fill="rgb(242,10,46)" fg:x="45748" fg:w="42"/><text x="59.6537%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (28 samples, 0.04%)</title><rect x="59.4583%" y="1813" width="0.0364%" height="15" fill="rgb(252,91,48)" fg:x="45790" fg:w="28"/><text x="59.7083%" y="1823.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.01%)</title><rect x="59.4829%" y="1797" width="0.0117%" height="15" fill="rgb(216,72,13)" fg:x="45809" fg:w="9"/><text x="59.7329%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (85 samples, 0.11%)</title><rect x="59.3959%" y="1845" width="0.1104%" height="15" fill="rgb(219,6,37)" fg:x="45742" fg:w="85"/><text x="59.6459%" y="1855.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (37 samples, 0.05%)</title><rect x="59.4583%" y="1829" width="0.0480%" height="15" fill="rgb(236,185,40)" fg:x="45790" fg:w="37"/><text x="59.7083%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (9 samples, 0.01%)</title><rect x="59.4946%" y="1813" width="0.0117%" height="15" fill="rgb(208,81,48)" fg:x="45818" fg:w="9"/><text x="59.7446%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 0.16%)</title><rect x="59.3518%" y="1861" width="0.1571%" height="15" fill="rgb(211,42,33)" fg:x="45708" fg:w="121"/><text x="59.6018%" y="1871.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaChangeSet::empty (18 samples, 0.02%)</title><rect x="59.5219%" y="1861" width="0.0234%" height="15" fill="rgb(211,90,39)" fg:x="45839" fg:w="18"/><text x="59.7719%" y="1871.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::new (13 samples, 0.02%)</title><rect x="59.5453%" y="1861" width="0.0169%" height="15" fill="rgb(218,136,12)" fg:x="45857" fg:w="13"/><text x="59.7953%" y="1871.50"></text></g><g><title>aptos_gas::transaction::storage::ChangeSetConfigs::legacy_resource_creation_as_modification (10 samples, 0.01%)</title><rect x="59.5621%" y="1861" width="0.0130%" height="15" fill="rgb(234,12,32)" fg:x="45870" fg:w="10"/><text x="59.8121%" y="1871.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::access_path (8 samples, 0.01%)</title><rect x="59.5751%" y="1861" width="0.0104%" height="15" fill="rgb(221,164,18)" fg:x="45880" fg:w="8"/><text x="59.8251%" y="1871.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::table_item (9 samples, 0.01%)</title><rect x="59.5855%" y="1861" width="0.0117%" height="15" fill="rgb(239,135,14)" fg:x="45888" fg:w="9"/><text x="59.8355%" y="1871.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::size (42 samples, 0.05%)</title><rect x="59.6453%" y="1829" width="0.0545%" height="15" fill="rgb(226,198,47)" fg:x="45934" fg:w="42"/><text x="59.8953%" y="1839.50"></text></g><g><title>aptos_types::access_path::AccessPath::size (13 samples, 0.02%)</title><rect x="59.6829%" y="1813" width="0.0169%" height="15" fill="rgb(244,121,47)" fg:x="45963" fg:w="13"/><text x="59.9329%" y="1823.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (12 samples, 0.02%)</title><rect x="59.6842%" y="1797" width="0.0156%" height="15" fill="rgb(226,21,48)" fg:x="45964" fg:w="12"/><text x="59.9342%" y="1807.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::events (11 samples, 0.01%)</title><rect x="59.6998%" y="1829" width="0.0143%" height="15" fill="rgb(215,178,47)" fg:x="45976" fg:w="11"/><text x="59.9498%" y="1839.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::new (93 samples, 0.12%)</title><rect x="59.5972%" y="1861" width="0.1208%" height="15" fill="rgb(206,212,19)" fg:x="45897" fg:w="93"/><text x="59.8472%" y="1871.50"></text></g><g><title>&lt;aptos_gas::transaction::storage::ChangeSetConfigs as aptos_types::transaction::change_set::CheckChangeSet&gt;::check_change_set (76 samples, 0.10%)</title><rect x="59.6193%" y="1845" width="0.0987%" height="15" fill="rgb(230,104,34)" fg:x="45914" fg:w="76"/><text x="59.8693%" y="1855.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::freeze (13 samples, 0.02%)</title><rect x="59.7180%" y="1861" width="0.0169%" height="15" fill="rgb(210,96,51)" fg:x="45990" fg:w="13"/><text x="59.9680%" y="1871.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="59.7452%" y="1829" width="0.0130%" height="15" fill="rgb(229,111,47)" fg:x="46011" fg:w="10"/><text x="59.9952%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (15 samples, 0.02%)</title><rect x="59.7582%" y="1829" width="0.0195%" height="15" fill="rgb(218,174,45)" fg:x="46021" fg:w="15"/><text x="60.0082%" y="1839.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (204 samples, 0.26%)</title><rect x="59.7348%" y="1861" width="0.2649%" height="15" fill="rgb(215,21,32)" fg:x="46003" fg:w="204"/><text x="59.9848%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (199 samples, 0.26%)</title><rect x="59.7413%" y="1845" width="0.2584%" height="15" fill="rgb(235,72,21)" fg:x="46008" fg:w="199"/><text x="59.9913%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (171 samples, 0.22%)</title><rect x="59.7777%" y="1829" width="0.2220%" height="15" fill="rgb(250,113,30)" fg:x="46036" fg:w="171"/><text x="60.0277%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (160 samples, 0.21%)</title><rect x="59.7920%" y="1813" width="0.2078%" height="15" fill="rgb(244,136,34)" fg:x="46047" fg:w="160"/><text x="60.0420%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (160 samples, 0.21%)</title><rect x="59.7920%" y="1797" width="0.2078%" height="15" fill="rgb(213,226,47)" fg:x="46047" fg:w="160"/><text x="60.0420%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (160 samples, 0.21%)</title><rect x="59.7920%" y="1781" width="0.2078%" height="15" fill="rgb(224,136,40)" fg:x="46047" fg:w="160"/><text x="60.0420%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (160 samples, 0.21%)</title><rect x="59.7920%" y="1765" width="0.2078%" height="15" fill="rgb(253,124,12)" fg:x="46047" fg:w="160"/><text x="60.0420%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (160 samples, 0.21%)</title><rect x="59.7920%" y="1749" width="0.2078%" height="15" fill="rgb(210,67,8)" fg:x="46047" fg:w="160"/><text x="60.0420%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (160 samples, 0.21%)</title><rect x="59.7920%" y="1733" width="0.2078%" height="15" fill="rgb(210,204,0)" fg:x="46047" fg:w="160"/><text x="60.0420%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (160 samples, 0.21%)</title><rect x="59.7920%" y="1717" width="0.2078%" height="15" fill="rgb(217,179,22)" fg:x="46047" fg:w="160"/><text x="60.0420%" y="1727.50"></text></g><g><title>malloc (156 samples, 0.20%)</title><rect x="59.7972%" y="1701" width="0.2026%" height="15" fill="rgb(237,192,33)" fg:x="46051" fg:w="156"/><text x="60.0472%" y="1711.50"></text></g><g><title>[libc.so.6] (148 samples, 0.19%)</title><rect x="59.8076%" y="1685" width="0.1922%" height="15" fill="rgb(211,104,28)" fg:x="46059" fg:w="148"/><text x="60.0576%" y="1695.50"></text></g><g><title>[libc.so.6] (73 samples, 0.09%)</title><rect x="59.9049%" y="1669" width="0.0948%" height="15" fill="rgb(214,75,30)" fg:x="46134" fg:w="73"/><text x="60.1549%" y="1679.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (18 samples, 0.02%)</title><rect x="59.9997%" y="1861" width="0.0234%" height="15" fill="rgb(220,227,12)" fg:x="46207" fg:w="18"/><text x="60.2497%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.02%)</title><rect x="59.9997%" y="1845" width="0.0234%" height="15" fill="rgb(233,134,28)" fg:x="46207" fg:w="18"/><text x="60.2497%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="60.0010%" y="1829" width="0.0221%" height="15" fill="rgb(215,146,24)" fg:x="46208" fg:w="17"/><text x="60.2510%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.02%)</title><rect x="60.0075%" y="1813" width="0.0156%" height="15" fill="rgb(248,227,20)" fg:x="46213" fg:w="12"/><text x="60.2575%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="60.0075%" y="1797" width="0.0156%" height="15" fill="rgb(250,44,42)" fg:x="46213" fg:w="12"/><text x="60.2575%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="60.0088%" y="1781" width="0.0143%" height="15" fill="rgb(219,5,35)" fg:x="46214" fg:w="11"/><text x="60.2588%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="60.0582%" y="1733" width="0.0143%" height="15" fill="rgb(241,132,32)" fg:x="46252" fg:w="11"/><text x="60.3082%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.01%)</title><rect x="60.0582%" y="1717" width="0.0143%" height="15" fill="rgb(234,212,51)" fg:x="46252" fg:w="11"/><text x="60.3082%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="60.0582%" y="1701" width="0.0143%" height="15" fill="rgb(242,173,29)" fg:x="46252" fg:w="11"/><text x="60.3082%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="60.0582%" y="1685" width="0.0143%" height="15" fill="rgb(212,159,2)" fg:x="46252" fg:w="11"/><text x="60.3082%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (57 samples, 0.07%)</title><rect x="60.0231%" y="1861" width="0.0740%" height="15" fill="rgb(238,165,31)" fg:x="46225" fg:w="57"/><text x="60.2731%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (57 samples, 0.07%)</title><rect x="60.0231%" y="1845" width="0.0740%" height="15" fill="rgb(241,57,36)" fg:x="46225" fg:w="57"/><text x="60.2731%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (57 samples, 0.07%)</title><rect x="60.0231%" y="1829" width="0.0740%" height="15" fill="rgb(249,7,4)" fg:x="46225" fg:w="57"/><text x="60.2731%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (45 samples, 0.06%)</title><rect x="60.0387%" y="1813" width="0.0584%" height="15" fill="rgb(250,137,44)" fg:x="46237" fg:w="45"/><text x="60.2887%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.06%)</title><rect x="60.0387%" y="1797" width="0.0584%" height="15" fill="rgb(244,185,1)" fg:x="46237" fg:w="45"/><text x="60.2887%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 0.06%)</title><rect x="60.0387%" y="1781" width="0.0584%" height="15" fill="rgb(216,5,53)" fg:x="46237" fg:w="45"/><text x="60.2887%" y="1791.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (45 samples, 0.06%)</title><rect x="60.0387%" y="1765" width="0.0584%" height="15" fill="rgb(234,89,21)" fg:x="46237" fg:w="45"/><text x="60.2887%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="60.0582%" y="1749" width="0.0390%" height="15" fill="rgb(250,81,43)" fg:x="46252" fg:w="30"/><text x="60.3082%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;u8&gt;,u64,move_core_types::language_storage::TypeTag,alloc::vec::Vec&lt;u8&gt;)&gt;,aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;&gt;&gt;&gt;::convert_change_set&lt;()&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_core_types::vm_status::VMStatus&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="60.0854%" y="1733" width="0.0117%" height="15" fill="rgb(243,132,11)" fg:x="46273" fg:w="9"/><text x="60.3354%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;u8&gt;,u64,move_core_types::language_storage::TypeTag,alloc::vec::Vec&lt;u8&gt;)&gt;,aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;&gt;&gt;&gt;::convert_change_set&lt;()&gt;::{{closure}}&gt;&gt; (9 samples, 0.01%)</title><rect x="60.0854%" y="1717" width="0.0117%" height="15" fill="rgb(253,159,28)" fg:x="46273" fg:w="9"/><text x="60.3354%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;u8&gt;,u64,move_core_types::language_storage::TypeTag,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (9 samples, 0.01%)</title><rect x="60.0854%" y="1701" width="0.0117%" height="15" fill="rgb(237,167,34)" fg:x="46273" fg:w="9"/><text x="60.3354%" y="1711.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="60.0867%" y="1685" width="0.0104%" height="15" fill="rgb(237,16,50)" fg:x="46274" fg:w="8"/><text x="60.3367%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_table_extension::TableHandle,move_table_extension::TableInfo&gt;&gt; (13 samples, 0.02%)</title><rect x="60.0971%" y="1861" width="0.0169%" height="15" fill="rgb(247,125,2)" fg:x="46282" fg:w="13"/><text x="60.3471%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="60.0971%" y="1845" width="0.0169%" height="15" fill="rgb(254,35,3)" fg:x="46282" fg:w="13"/><text x="60.3471%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_aggregator::aggregator_extension::AggregatorID,aptos_framework::natives::aggregator_natives::context::AggregatorChange&gt;&gt; (8 samples, 0.01%)</title><rect x="60.1218%" y="1861" width="0.0104%" height="15" fill="rgb(237,209,21)" fg:x="46301" fg:w="8"/><text x="60.3718%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="60.1218%" y="1845" width="0.0104%" height="15" fill="rgb(224,122,20)" fg:x="46301" fg:w="8"/><text x="60.3718%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_core_types::effects::AccountChangeSet&gt;&gt; (15 samples, 0.02%)</title><rect x="60.1322%" y="1861" width="0.0195%" height="15" fill="rgb(224,11,46)" fg:x="46309" fg:w="15"/><text x="60.3822%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="60.1322%" y="1845" width="0.0195%" height="15" fill="rgb(248,21,33)" fg:x="46309" fg:w="15"/><text x="60.3822%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_table_extension::TableHandle,move_table_extension::TableChange&gt;&gt; (10 samples, 0.01%)</title><rect x="60.1569%" y="1861" width="0.0130%" height="15" fill="rgb(222,144,7)" fg:x="46328" fg:w="10"/><text x="60.4069%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="60.1569%" y="1845" width="0.0130%" height="15" fill="rgb(205,141,37)" fg:x="46328" fg:w="10"/><text x="60.4069%" y="1855.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::convert_change_set (821 samples, 1.07%)</title><rect x="59.1271%" y="1877" width="1.0661%" height="15" fill="rgb(237,130,8)" fg:x="45535" fg:w="821"/><text x="59.3771%" y="1887.50"></text></g><g><title>move_core_types::effects::ChangeSet::into_inner (11 samples, 0.01%)</title><rect x="60.1789%" y="1861" width="0.0143%" height="15" fill="rgb(209,179,39)" fg:x="46345" fg:w="11"/><text x="60.4289%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="60.2750%" y="1781" width="0.0182%" height="15" fill="rgb(207,52,17)" fg:x="46419" fg:w="14"/><text x="60.5250%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="60.2750%" y="1765" width="0.0182%" height="15" fill="rgb(253,158,17)" fg:x="46419" fg:w="14"/><text x="60.5250%" y="1775.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="60.2750%" y="1749" width="0.0182%" height="15" fill="rgb(208,19,53)" fg:x="46419" fg:w="14"/><text x="60.5250%" y="1759.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="60.2828%" y="1733" width="0.0104%" height="15" fill="rgb(233,152,13)" fg:x="46425" fg:w="8"/><text x="60.5328%" y="1743.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="60.2698%" y="1813" width="0.0247%" height="15" fill="rgb(231,84,1)" fg:x="46415" fg:w="19"/><text x="60.5198%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (19 samples, 0.02%)</title><rect x="60.2698%" y="1797" width="0.0247%" height="15" fill="rgb(229,142,48)" fg:x="46415" fg:w="19"/><text x="60.5198%" y="1807.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (30 samples, 0.04%)</title><rect x="60.2646%" y="1829" width="0.0390%" height="15" fill="rgb(248,70,29)" fg:x="46411" fg:w="30"/><text x="60.5146%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (14 samples, 0.02%)</title><rect x="60.3036%" y="1813" width="0.0182%" height="15" fill="rgb(250,85,7)" fg:x="46441" fg:w="14"/><text x="60.5536%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (53 samples, 0.07%)</title><rect x="60.2594%" y="1845" width="0.0688%" height="15" fill="rgb(235,140,43)" fg:x="46407" fg:w="53"/><text x="60.5094%" y="1855.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (19 samples, 0.02%)</title><rect x="60.3036%" y="1829" width="0.0247%" height="15" fill="rgb(216,0,5)" fg:x="46441" fg:w="19"/><text x="60.5536%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.10%)</title><rect x="60.2309%" y="1861" width="0.0987%" height="15" fill="rgb(223,167,29)" fg:x="46385" fg:w="76"/><text x="60.4809%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (13 samples, 0.02%)</title><rect x="60.3906%" y="1637" width="0.0169%" height="15" fill="rgb(229,150,33)" fg:x="46508" fg:w="13"/><text x="60.6406%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.02%)</title><rect x="60.3906%" y="1621" width="0.0169%" height="15" fill="rgb(227,26,52)" fg:x="46508" fg:w="13"/><text x="60.6406%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="60.3932%" y="1605" width="0.0143%" height="15" fill="rgb(250,60,52)" fg:x="46510" fg:w="11"/><text x="60.6432%" y="1615.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="60.3932%" y="1589" width="0.0143%" height="15" fill="rgb(228,81,46)" fg:x="46510" fg:w="11"/><text x="60.6432%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (18 samples, 0.02%)</title><rect x="60.4958%" y="1589" width="0.0234%" height="15" fill="rgb(225,218,31)" fg:x="46589" fg:w="18"/><text x="60.7458%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (12 samples, 0.02%)</title><rect x="60.5036%" y="1573" width="0.0156%" height="15" fill="rgb(230,35,16)" fg:x="46595" fg:w="12"/><text x="60.7536%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="60.5049%" y="1557" width="0.0143%" height="15" fill="rgb(247,100,0)" fg:x="46596" fg:w="11"/><text x="60.7549%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (47 samples, 0.06%)</title><rect x="60.4659%" y="1621" width="0.0610%" height="15" fill="rgb(223,135,11)" fg:x="46566" fg:w="47"/><text x="60.7159%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (27 samples, 0.04%)</title><rect x="60.4919%" y="1605" width="0.0351%" height="15" fill="rgb(207,136,0)" fg:x="46586" fg:w="27"/><text x="60.7419%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (115 samples, 0.15%)</title><rect x="60.3828%" y="1653" width="0.1493%" height="15" fill="rgb(246,131,25)" fg:x="46502" fg:w="115"/><text x="60.6328%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (96 samples, 0.12%)</title><rect x="60.4075%" y="1637" width="0.1247%" height="15" fill="rgb(209,47,12)" fg:x="46521" fg:w="96"/><text x="60.6575%" y="1647.50"></text></g><g><title>bcs::de::Deserializer::peek (10 samples, 0.01%)</title><rect x="60.5970%" y="1509" width="0.0130%" height="15" fill="rgb(221,25,16)" fg:x="46667" fg:w="10"/><text x="60.8470%" y="1519.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (30 samples, 0.04%)</title><rect x="60.5802%" y="1605" width="0.0390%" height="15" fill="rgb(223,164,33)" fg:x="46654" fg:w="30"/><text x="60.8302%" y="1615.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (30 samples, 0.04%)</title><rect x="60.5802%" y="1589" width="0.0390%" height="15" fill="rgb(220,26,23)" fg:x="46654" fg:w="30"/><text x="60.8302%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (30 samples, 0.04%)</title><rect x="60.5802%" y="1573" width="0.0390%" height="15" fill="rgb(231,224,1)" fg:x="46654" fg:w="30"/><text x="60.8302%" y="1583.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (28 samples, 0.04%)</title><rect x="60.5828%" y="1557" width="0.0364%" height="15" fill="rgb(229,221,24)" fg:x="46656" fg:w="28"/><text x="60.8328%" y="1567.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (18 samples, 0.02%)</title><rect x="60.5958%" y="1541" width="0.0234%" height="15" fill="rgb(213,34,10)" fg:x="46666" fg:w="18"/><text x="60.8458%" y="1551.50"></text></g><g><title>bcs::de::Deserializer::next (18 samples, 0.02%)</title><rect x="60.5958%" y="1525" width="0.0234%" height="15" fill="rgb(215,33,11)" fg:x="46666" fg:w="18"/><text x="60.8458%" y="1535.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (22 samples, 0.03%)</title><rect x="60.6191%" y="1605" width="0.0286%" height="15" fill="rgb(216,20,41)" fg:x="46684" fg:w="22"/><text x="60.8691%" y="1615.50"></text></g><g><title>core::cmp::PartialOrd::ge (22 samples, 0.03%)</title><rect x="60.6191%" y="1589" width="0.0286%" height="15" fill="rgb(228,43,31)" fg:x="46684" fg:w="22"/><text x="60.8691%" y="1599.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (17 samples, 0.02%)</title><rect x="60.6256%" y="1573" width="0.0221%" height="15" fill="rgb(227,83,26)" fg:x="46689" fg:w="17"/><text x="60.8756%" y="1583.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (17 samples, 0.02%)</title><rect x="60.6256%" y="1557" width="0.0221%" height="15" fill="rgb(217,168,19)" fg:x="46689" fg:w="17"/><text x="60.8756%" y="1567.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (17 samples, 0.02%)</title><rect x="60.6256%" y="1541" width="0.0221%" height="15" fill="rgb(231,34,33)" fg:x="46689" fg:w="17"/><text x="60.8756%" y="1551.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="60.6269%" y="1525" width="0.0208%" height="15" fill="rgb(230,120,51)" fg:x="46690" fg:w="16"/><text x="60.8769%" y="1535.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (64 samples, 0.08%)</title><rect x="60.5685%" y="1621" width="0.0831%" height="15" fill="rgb(215,138,27)" fg:x="46645" fg:w="64"/><text x="60.8185%" y="1631.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="60.7139%" y="1445" width="0.0169%" height="15" fill="rgb(246,80,47)" fg:x="46757" fg:w="13"/><text x="60.9639%" y="1455.50"></text></g><g><title>bcs::de::Deserializer::parse_bytes (19 samples, 0.02%)</title><rect x="60.7620%" y="1429" width="0.0247%" height="15" fill="rgb(215,57,53)" fg:x="46794" fg:w="19"/><text x="61.0120%" y="1439.50"></text></g><g><title>bcs::de::Deserializer::parse_length (15 samples, 0.02%)</title><rect x="60.7672%" y="1413" width="0.0195%" height="15" fill="rgb(229,137,5)" fg:x="46798" fg:w="15"/><text x="61.0172%" y="1423.50"></text></g><g><title>bcs::de::Deserializer::parse_u32_from_uleb128 (14 samples, 0.02%)</title><rect x="60.7685%" y="1397" width="0.0182%" height="15" fill="rgb(210,86,2)" fg:x="46799" fg:w="14"/><text x="61.0185%" y="1407.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 samples, 0.07%)</title><rect x="60.7866%" y="1429" width="0.0688%" height="15" fill="rgb(231,226,51)" fg:x="46813" fg:w="53"/><text x="61.0366%" y="1439.50"></text></g><g><title>bcs::de::Deserializer::parse_string (216 samples, 0.28%)</title><rect x="60.7308%" y="1445" width="0.2805%" height="15" fill="rgb(216,62,29)" fg:x="46770" fg:w="216"/><text x="60.9808%" y="1455.50"></text></g><g><title>core::str::converts::from_utf8 (120 samples, 0.16%)</title><rect x="60.8555%" y="1429" width="0.1558%" height="15" fill="rgb(248,202,3)" fg:x="46866" fg:w="120"/><text x="61.1055%" y="1439.50"></text></g><g><title>core::str::validations::run_utf8_validation (95 samples, 0.12%)</title><rect x="60.8879%" y="1413" width="0.1234%" height="15" fill="rgb(225,181,7)" fg:x="46891" fg:w="95"/><text x="61.1379%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (164 samples, 0.21%)</title><rect x="61.0191%" y="1269" width="0.2130%" height="15" fill="rgb(247,170,54)" fg:x="46992" fg:w="164"/><text x="61.2691%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (164 samples, 0.21%)</title><rect x="61.0191%" y="1253" width="0.2130%" height="15" fill="rgb(236,204,33)" fg:x="46992" fg:w="164"/><text x="61.2691%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (164 samples, 0.21%)</title><rect x="61.0191%" y="1237" width="0.2130%" height="15" fill="rgb(216,45,30)" fg:x="46992" fg:w="164"/><text x="61.2691%" y="1247.50"></text></g><g><title>malloc (150 samples, 0.19%)</title><rect x="61.0372%" y="1221" width="0.1948%" height="15" fill="rgb(213,203,16)" fg:x="47006" fg:w="150"/><text x="61.2872%" y="1231.50"></text></g><g><title>[libc.so.6] (66 samples, 0.09%)</title><rect x="61.1463%" y="1205" width="0.0857%" height="15" fill="rgb(215,46,16)" fg:x="47090" fg:w="66"/><text x="61.3963%" y="1215.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="61.2112%" y="1189" width="0.0208%" height="15" fill="rgb(217,162,46)" fg:x="47140" fg:w="16"/><text x="61.4612%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (171 samples, 0.22%)</title><rect x="61.0113%" y="1317" width="0.2220%" height="15" fill="rgb(224,189,20)" fg:x="46986" fg:w="171"/><text x="61.2613%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (171 samples, 0.22%)</title><rect x="61.0113%" y="1301" width="0.2220%" height="15" fill="rgb(232,35,51)" fg:x="46986" fg:w="171"/><text x="61.2613%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (171 samples, 0.22%)</title><rect x="61.0113%" y="1285" width="0.2220%" height="15" fill="rgb(243,221,46)" fg:x="46986" fg:w="171"/><text x="61.2613%" y="1295.50"></text></g><g><title>&lt;move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (435 samples, 0.56%)</title><rect x="60.7048%" y="1557" width="0.5648%" height="15" fill="rgb(248,16,16)" fg:x="46750" fg:w="435"/><text x="60.9548%" y="1567.50"></text></g><g><title>serde::de::SeqAccess::next_element (429 samples, 0.56%)</title><rect x="60.7126%" y="1541" width="0.5571%" height="15" fill="rgb(220,168,13)" fg:x="46756" fg:w="429"/><text x="60.9626%" y="1551.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (429 samples, 0.56%)</title><rect x="60.7126%" y="1525" width="0.5571%" height="15" fill="rgb(243,102,39)" fg:x="46756" fg:w="429"/><text x="60.9626%" y="1535.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (428 samples, 0.56%)</title><rect x="60.7139%" y="1509" width="0.5558%" height="15" fill="rgb(245,82,32)" fg:x="46757" fg:w="428"/><text x="60.9639%" y="1519.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (428 samples, 0.56%)</title><rect x="60.7139%" y="1493" width="0.5558%" height="15" fill="rgb(230,164,19)" fg:x="46757" fg:w="428"/><text x="60.9639%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (428 samples, 0.56%)</title><rect x="60.7139%" y="1477" width="0.5558%" height="15" fill="rgb(221,9,41)" fg:x="46757" fg:w="428"/><text x="60.9639%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_str (428 samples, 0.56%)</title><rect x="60.7139%" y="1461" width="0.5558%" height="15" fill="rgb(216,93,0)" fg:x="46757" fg:w="428"/><text x="60.9639%" y="1471.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (199 samples, 0.26%)</title><rect x="61.0113%" y="1445" width="0.2584%" height="15" fill="rgb(235,113,9)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1455.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (199 samples, 0.26%)</title><rect x="61.0113%" y="1429" width="0.2584%" height="15" fill="rgb(209,224,10)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1439.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (199 samples, 0.26%)</title><rect x="61.0113%" y="1413" width="0.2584%" height="15" fill="rgb(226,54,34)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (199 samples, 0.26%)</title><rect x="61.0113%" y="1397" width="0.2584%" height="15" fill="rgb(222,60,8)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (199 samples, 0.26%)</title><rect x="61.0113%" y="1381" width="0.2584%" height="15" fill="rgb(248,228,41)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (199 samples, 0.26%)</title><rect x="61.0113%" y="1365" width="0.2584%" height="15" fill="rgb(226,31,32)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (199 samples, 0.26%)</title><rect x="61.0113%" y="1349" width="0.2584%" height="15" fill="rgb(242,132,49)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (199 samples, 0.26%)</title><rect x="61.0113%" y="1333" width="0.2584%" height="15" fill="rgb(224,194,19)" fg:x="46986" fg:w="199"/><text x="61.2613%" y="1343.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (28 samples, 0.04%)</title><rect x="61.2333%" y="1317" width="0.0364%" height="15" fill="rgb(232,200,51)" fg:x="47157" fg:w="28"/><text x="61.4833%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.04%)</title><rect x="61.2333%" y="1301" width="0.0364%" height="15" fill="rgb(235,60,46)" fg:x="47157" fg:w="28"/><text x="61.4833%" y="1311.50"></text></g><g><title>[libc.so.6] (28 samples, 0.04%)</title><rect x="61.2333%" y="1285" width="0.0364%" height="15" fill="rgb(240,109,52)" fg:x="47157" fg:w="28"/><text x="61.4833%" y="1295.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (712 samples, 0.92%)</title><rect x="60.3659%" y="1669" width="0.9245%" height="15" fill="rgb(215,78,37)" fg:x="46489" fg:w="712"/><text x="60.6159%" y="1679.50"></text></g><g><title>serde::de::MapAccess::next_entry (583 samples, 0.76%)</title><rect x="60.5334%" y="1653" width="0.7570%" height="15" fill="rgb(225,141,7)" fg:x="46618" fg:w="583"/><text x="60.7834%" y="1663.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (583 samples, 0.76%)</title><rect x="60.5334%" y="1637" width="0.7570%" height="15" fill="rgb(216,102,54)" fg:x="46618" fg:w="583"/><text x="60.7834%" y="1647.50"></text></g><g><title>&lt;bcs::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (492 samples, 0.64%)</title><rect x="60.6516%" y="1621" width="0.6389%" height="15" fill="rgb(238,143,13)" fg:x="46709" fg:w="492"/><text x="60.9016%" y="1631.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (492 samples, 0.64%)</title><rect x="60.6516%" y="1605" width="0.6389%" height="15" fill="rgb(219,45,51)" fg:x="46709" fg:w="492"/><text x="60.9016%" y="1615.50"></text></g><g><title>move_core_types::errmap::_::&lt;impl serde::de::Deserialize for move_core_types::errmap::ErrorDescription&gt;::deserialize (492 samples, 0.64%)</title><rect x="60.6516%" y="1589" width="0.6389%" height="15" fill="rgb(242,105,46)" fg:x="46709" fg:w="492"/><text x="60.9016%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (492 samples, 0.64%)</title><rect x="60.6516%" y="1573" width="0.6389%" height="15" fill="rgb(206,154,49)" fg:x="46709" fg:w="492"/><text x="60.9016%" y="1583.50"></text></g><g><title>&lt;aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (720 samples, 0.93%)</title><rect x="60.3581%" y="1765" width="0.9349%" height="15" fill="rgb(239,215,4)" fg:x="46483" fg:w="720"/><text x="60.6081%" y="1775.50"></text></g><g><title>serde::de::SeqAccess::next_element (716 samples, 0.93%)</title><rect x="60.3633%" y="1749" width="0.9297%" height="15" fill="rgb(238,82,17)" fg:x="46487" fg:w="716"/><text x="60.6133%" y="1759.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (716 samples, 0.93%)</title><rect x="60.3633%" y="1733" width="0.9297%" height="15" fill="rgb(242,49,30)" fg:x="46487" fg:w="716"/><text x="60.6133%" y="1743.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (715 samples, 0.93%)</title><rect x="60.3646%" y="1717" width="0.9284%" height="15" fill="rgb(248,5,16)" fg:x="46488" fg:w="715"/><text x="60.6146%" y="1727.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (715 samples, 0.93%)</title><rect x="60.3646%" y="1701" width="0.9284%" height="15" fill="rgb(237,138,32)" fg:x="46488" fg:w="715"/><text x="60.6146%" y="1711.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_map (715 samples, 0.93%)</title><rect x="60.3646%" y="1685" width="0.9284%" height="15" fill="rgb(235,79,45)" fg:x="46488" fg:w="715"/><text x="60.6146%" y="1695.50"></text></g><g><title>bcs::de::from_bytes (724 samples, 0.94%)</title><rect x="60.3542%" y="1813" width="0.9401%" height="15" fill="rgb(213,105,25)" fg:x="46480" fg:w="724"/><text x="60.6042%" y="1823.50"></text></g><g><title>aptos_framework::module_metadata::_::&lt;impl serde::de::Deserialize for aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt;::deserialize (722 samples, 0.94%)</title><rect x="60.3568%" y="1797" width="0.9375%" height="15" fill="rgb(251,131,7)" fg:x="46482" fg:w="722"/><text x="60.6068%" y="1807.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (722 samples, 0.94%)</title><rect x="60.3568%" y="1781" width="0.9375%" height="15" fill="rgb(211,155,7)" fg:x="46482" fg:w="722"/><text x="60.6068%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (181 samples, 0.24%)</title><rect x="61.3112%" y="1685" width="0.2350%" height="15" fill="rgb(243,70,15)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (181 samples, 0.24%)</title><rect x="61.3112%" y="1669" width="0.2350%" height="15" fill="rgb(215,171,2)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (181 samples, 0.24%)</title><rect x="61.3112%" y="1653" width="0.2350%" height="15" fill="rgb(244,121,35)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (181 samples, 0.24%)</title><rect x="61.3112%" y="1637" width="0.2350%" height="15" fill="rgb(249,147,17)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (181 samples, 0.24%)</title><rect x="61.3112%" y="1621" width="0.2350%" height="15" fill="rgb(241,193,52)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (181 samples, 0.24%)</title><rect x="61.3112%" y="1605" width="0.2350%" height="15" fill="rgb(217,159,39)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1615.50"></text></g><g><title>malloc (181 samples, 0.24%)</title><rect x="61.3112%" y="1589" width="0.2350%" height="15" fill="rgb(248,110,0)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1599.50"></text></g><g><title>[libc.so.6] (181 samples, 0.24%)</title><rect x="61.3112%" y="1573" width="0.2350%" height="15" fill="rgb(233,227,0)" fg:x="47217" fg:w="181"/><text x="61.5612%" y="1583.50"></text></g><g><title>[libc.so.6] (121 samples, 0.16%)</title><rect x="61.3891%" y="1557" width="0.1571%" height="15" fill="rgb(252,55,2)" fg:x="47277" fg:w="121"/><text x="61.6391%" y="1567.50"></text></g><g><title>[libc.so.6] (28 samples, 0.04%)</title><rect x="61.5099%" y="1541" width="0.0364%" height="15" fill="rgb(224,194,24)" fg:x="47370" fg:w="28"/><text x="61.7599%" y="1551.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (196 samples, 0.25%)</title><rect x="61.3086%" y="1781" width="0.2545%" height="15" fill="rgb(247,5,33)" fg:x="47215" fg:w="196"/><text x="61.5586%" y="1791.50"></text></g><g><title>&lt;move_core_types::metadata::Metadata as core::clone::Clone&gt;::clone (194 samples, 0.25%)</title><rect x="61.3112%" y="1765" width="0.2519%" height="15" fill="rgb(242,66,47)" fg:x="47217" fg:w="194"/><text x="61.5612%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (194 samples, 0.25%)</title><rect x="61.3112%" y="1749" width="0.2519%" height="15" fill="rgb(213,107,12)" fg:x="47217" fg:w="194"/><text x="61.5612%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (194 samples, 0.25%)</title><rect x="61.3112%" y="1733" width="0.2519%" height="15" fill="rgb(206,131,1)" fg:x="47217" fg:w="194"/><text x="61.5612%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (194 samples, 0.25%)</title><rect x="61.3112%" y="1717" width="0.2519%" height="15" fill="rgb(214,9,36)" fg:x="47217" fg:w="194"/><text x="61.5612%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (194 samples, 0.25%)</title><rect x="61.3112%" y="1701" width="0.2519%" height="15" fill="rgb(251,215,18)" fg:x="47217" fg:w="194"/><text x="61.5612%" y="1711.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.02%)</title><rect x="61.5463%" y="1685" width="0.0169%" height="15" fill="rgb(251,64,9)" fg:x="47398" fg:w="13"/><text x="61.7963%" y="1695.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="61.5463%" y="1669" width="0.0169%" height="15" fill="rgb(235,68,21)" fg:x="47398" fg:w="13"/><text x="61.7963%" y="1679.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="61.5463%" y="1653" width="0.0169%" height="15" fill="rgb(240,69,38)" fg:x="47398" fg:w="13"/><text x="61.7963%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (10 samples, 0.01%)</title><rect x="61.5631%" y="1781" width="0.0130%" height="15" fill="rgb(231,18,27)" fg:x="47411" fg:w="10"/><text x="61.8131%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata::{{closure}} (10 samples, 0.01%)</title><rect x="61.5631%" y="1765" width="0.0130%" height="15" fill="rgb(215,154,25)" fg:x="47411" fg:w="10"/><text x="61.8131%" y="1775.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (8 samples, 0.01%)</title><rect x="61.5657%" y="1749" width="0.0104%" height="15" fill="rgb(224,33,46)" fg:x="47413" fg:w="8"/><text x="61.8157%" y="1759.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.02%)</title><rect x="61.5865%" y="1717" width="0.0182%" height="15" fill="rgb(248,191,53)" fg:x="47429" fg:w="14"/><text x="61.8365%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.02%)</title><rect x="61.5865%" y="1701" width="0.0182%" height="15" fill="rgb(231,3,37)" fg:x="47429" fg:w="14"/><text x="61.8365%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (979 samples, 1.27%)</title><rect x="60.3412%" y="1845" width="1.2712%" height="15" fill="rgb(209,152,2)" fg:x="46470" fg:w="979"/><text x="60.5912%" y="1855.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (977 samples, 1.27%)</title><rect x="60.3438%" y="1829" width="1.2686%" height="15" fill="rgb(212,208,43)" fg:x="46472" fg:w="977"/><text x="60.5938%" y="1839.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (235 samples, 0.31%)</title><rect x="61.3073%" y="1813" width="0.3051%" height="15" fill="rgb(208,60,49)" fg:x="47214" fg:w="235"/><text x="61.5573%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (235 samples, 0.31%)</title><rect x="61.3073%" y="1797" width="0.3051%" height="15" fill="rgb(245,135,6)" fg:x="47214" fg:w="235"/><text x="61.5573%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (20 samples, 0.03%)</title><rect x="61.5865%" y="1781" width="0.0260%" height="15" fill="rgb(243,86,23)" fg:x="47429" fg:w="20"/><text x="61.8365%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.03%)</title><rect x="61.5865%" y="1765" width="0.0260%" height="15" fill="rgb(223,7,20)" fg:x="47429" fg:w="20"/><text x="61.8365%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.03%)</title><rect x="61.5865%" y="1749" width="0.0260%" height="15" fill="rgb(212,182,17)" fg:x="47429" fg:w="20"/><text x="61.8365%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.03%)</title><rect x="61.5865%" y="1733" width="0.0260%" height="15" fill="rgb(237,94,50)" fg:x="47429" fg:w="20"/><text x="61.8365%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::vec::Vec&lt;aptos_framework::module_metadata::KnownAttribute&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="61.6177%" y="1781" width="0.0104%" height="15" fill="rgb(232,185,44)" fg:x="47453" fg:w="8"/><text x="61.8677%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="61.6177%" y="1765" width="0.0104%" height="15" fill="rgb(205,50,36)" fg:x="47453" fg:w="8"/><text x="61.8677%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="61.6683%" y="1589" width="0.0104%" height="15" fill="rgb(252,32,32)" fg:x="47492" fg:w="8"/><text x="61.9183%" y="1599.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (14 samples, 0.02%)</title><rect x="61.6644%" y="1637" width="0.0182%" height="15" fill="rgb(241,123,33)" fg:x="47489" fg:w="14"/><text x="61.9144%" y="1647.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (14 samples, 0.02%)</title><rect x="61.6644%" y="1621" width="0.0182%" height="15" fill="rgb(212,140,16)" fg:x="47489" fg:w="14"/><text x="61.9144%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (11 samples, 0.01%)</title><rect x="61.6683%" y="1605" width="0.0143%" height="15" fill="rgb(247,132,5)" fg:x="47492" fg:w="11"/><text x="61.9183%" y="1615.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (29 samples, 0.04%)</title><rect x="61.6527%" y="1669" width="0.0377%" height="15" fill="rgb(209,137,38)" fg:x="47480" fg:w="29"/><text x="61.9027%" y="1679.50"></text></g><g><title>alloc::collections::btree::mem::replace (24 samples, 0.03%)</title><rect x="61.6592%" y="1653" width="0.0312%" height="15" fill="rgb(248,32,42)" fg:x="47485" fg:w="24"/><text x="61.9092%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (42 samples, 0.05%)</title><rect x="61.6410%" y="1701" width="0.0545%" height="15" fill="rgb(216,188,40)" fg:x="47471" fg:w="42"/><text x="61.8910%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (33 samples, 0.04%)</title><rect x="61.6527%" y="1685" width="0.0429%" height="15" fill="rgb(209,127,53)" fg:x="47480" fg:w="33"/><text x="61.9027%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (107 samples, 0.14%)</title><rect x="61.6969%" y="1589" width="0.1389%" height="15" fill="rgb(254,162,9)" fg:x="47514" fg:w="107"/><text x="61.9469%" y="1599.50"></text></g><g><title>alloc::alloc::dealloc (107 samples, 0.14%)</title><rect x="61.6969%" y="1573" width="0.1389%" height="15" fill="rgb(219,183,10)" fg:x="47514" fg:w="107"/><text x="61.9469%" y="1583.50"></text></g><g><title>cfree (102 samples, 0.13%)</title><rect x="61.7034%" y="1557" width="0.1324%" height="15" fill="rgb(217,192,21)" fg:x="47519" fg:w="102"/><text x="61.9534%" y="1567.50"></text></g><g><title>[libc.so.6] (58 samples, 0.08%)</title><rect x="61.7605%" y="1541" width="0.0753%" height="15" fill="rgb(251,89,27)" fg:x="47563" fg:w="58"/><text x="62.0105%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::module_metadata::RuntimeModuleMetadataV1&gt; (173 samples, 0.22%)</title><rect x="61.6177%" y="1797" width="0.2246%" height="15" fill="rgb(253,55,28)" fg:x="47453" fg:w="173"/><text x="61.8677%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (165 samples, 0.21%)</title><rect x="61.6281%" y="1781" width="0.2143%" height="15" fill="rgb(216,159,8)" fg:x="47461" fg:w="165"/><text x="61.8781%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.21%)</title><rect x="61.6281%" y="1765" width="0.2143%" height="15" fill="rgb(231,228,44)" fg:x="47461" fg:w="165"/><text x="61.8781%" y="1775.50"></text></g><g><title>core::mem::drop (157 samples, 0.20%)</title><rect x="61.6384%" y="1749" width="0.2039%" height="15" fill="rgb(247,34,48)" fg:x="47469" fg:w="157"/><text x="61.8884%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,move_core_types::errmap::ErrorDescription&gt;&gt; (157 samples, 0.20%)</title><rect x="61.6384%" y="1733" width="0.2039%" height="15" fill="rgb(247,222,18)" fg:x="47469" fg:w="157"/><text x="61.8884%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (157 samples, 0.20%)</title><rect x="61.6384%" y="1717" width="0.2039%" height="15" fill="rgb(227,49,4)" fg:x="47469" fg:w="157"/><text x="61.8884%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (113 samples, 0.15%)</title><rect x="61.6956%" y="1701" width="0.1467%" height="15" fill="rgb(219,189,53)" fg:x="47513" fg:w="113"/><text x="61.9456%" y="1711.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (113 samples, 0.15%)</title><rect x="61.6956%" y="1685" width="0.1467%" height="15" fill="rgb(241,160,53)" fg:x="47513" fg:w="113"/><text x="61.9456%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::errmap::ErrorDescription&gt; (113 samples, 0.15%)</title><rect x="61.6956%" y="1669" width="0.1467%" height="15" fill="rgb(227,115,4)" fg:x="47513" fg:w="113"/><text x="61.9456%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (113 samples, 0.15%)</title><rect x="61.6956%" y="1653" width="0.1467%" height="15" fill="rgb(215,28,28)" fg:x="47513" fg:w="113"/><text x="61.9456%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (113 samples, 0.15%)</title><rect x="61.6956%" y="1637" width="0.1467%" height="15" fill="rgb(237,143,40)" fg:x="47513" fg:w="113"/><text x="61.9456%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (113 samples, 0.15%)</title><rect x="61.6956%" y="1621" width="0.1467%" height="15" fill="rgb(205,107,24)" fg:x="47513" fg:w="113"/><text x="61.9456%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.15%)</title><rect x="61.6956%" y="1605" width="0.1467%" height="15" fill="rgb(209,112,35)" fg:x="47513" fg:w="113"/><text x="61.9456%" y="1615.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata (181 samples, 0.24%)</title><rect x="61.6125%" y="1845" width="0.2350%" height="15" fill="rgb(206,135,5)" fg:x="47449" fg:w="181"/><text x="61.8625%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (181 samples, 0.24%)</title><rect x="61.6125%" y="1829" width="0.2350%" height="15" fill="rgb(227,217,38)" fg:x="47449" fg:w="181"/><text x="61.8625%" y="1839.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group_from_metadata::{{closure}} (180 samples, 0.23%)</title><rect x="61.6138%" y="1813" width="0.2337%" height="15" fill="rgb(205,0,41)" fg:x="47450" fg:w="180"/><text x="61.8638%" y="1823.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_resource_group (1,186 samples, 1.54%)</title><rect x="60.3309%" y="1861" width="1.5400%" height="15" fill="rgb(220,20,40)" fg:x="46462" fg:w="1186"/><text x="60.5809%" y="1871.50"></text></g><g><title>move_core_types::language_storage::StructTag::module_id (18 samples, 0.02%)</title><rect x="61.8475%" y="1845" width="0.0234%" height="15" fill="rgb(216,145,3)" fg:x="47630" fg:w="18"/><text x="62.0975%" y="1855.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (8 samples, 0.01%)</title><rect x="61.8605%" y="1829" width="0.0104%" height="15" fill="rgb(207,130,51)" fg:x="47640" fg:w="8"/><text x="62.1105%" y="1839.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="61.8605%" y="1813" width="0.0104%" height="15" fill="rgb(252,93,13)" fg:x="47640" fg:w="8"/><text x="62.1105%" y="1823.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="61.8605%" y="1797" width="0.0104%" height="15" fill="rgb(210,105,15)" fg:x="47640" fg:w="8"/><text x="62.1105%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_core_types::effects::AccountChangeSet&gt;&gt; (23 samples, 0.03%)</title><rect x="61.8787%" y="1861" width="0.0299%" height="15" fill="rgb(212,126,31)" fg:x="47654" fg:w="23"/><text x="62.1287%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="61.8787%" y="1845" width="0.0299%" height="15" fill="rgb(241,167,46)" fg:x="47654" fg:w="23"/><text x="62.1287%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::language_storage::StructTag,move_core_types::effects::AccountChangeSet&gt;&gt; (10 samples, 0.01%)</title><rect x="61.9111%" y="1861" width="0.0130%" height="15" fill="rgb(217,143,19)" fg:x="47679" fg:w="10"/><text x="62.1611%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="61.9137%" y="1845" width="0.0104%" height="15" fill="rgb(235,117,33)" fg:x="47681" fg:w="8"/><text x="62.1637%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::errors::VMError&gt; (27 samples, 0.04%)</title><rect x="61.9332%" y="1861" width="0.0351%" height="15" fill="rgb(247,95,6)" fg:x="47696" fg:w="27"/><text x="62.1832%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::errors::VMError_&gt;&gt; (16 samples, 0.02%)</title><rect x="61.9475%" y="1845" width="0.0208%" height="15" fill="rgb(243,206,43)" fg:x="47707" fg:w="16"/><text x="62.1975%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::errors::VMError_&gt; (13 samples, 0.02%)</title><rect x="61.9514%" y="1829" width="0.0169%" height="15" fill="rgb(229,65,54)" fg:x="47710" fg:w="13"/><text x="62.2014%" y="1839.50"></text></g><g><title>move_binary_format::errors::PartialVMError::finish (29 samples, 0.04%)</title><rect x="61.9722%" y="1861" width="0.0377%" height="15" fill="rgb(247,137,34)" fg:x="47726" fg:w="29"/><text x="62.2222%" y="1871.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="61.9981%" y="1845" width="0.0117%" height="15" fill="rgb(245,174,44)" fg:x="47746" fg:w="9"/><text x="62.2481%" y="1855.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.01%)</title><rect x="61.9994%" y="1829" width="0.0104%" height="15" fill="rgb(223,64,15)" fg:x="47747" fg:w="8"/><text x="62.2494%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="61.9994%" y="1813" width="0.0104%" height="15" fill="rgb(243,153,36)" fg:x="47747" fg:w="8"/><text x="62.2494%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="61.9994%" y="1797" width="0.0104%" height="15" fill="rgb(252,23,4)" fg:x="47747" fg:w="8"/><text x="62.2494%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="61.9994%" y="1781" width="0.0104%" height="15" fill="rgb(209,132,13)" fg:x="47747" fg:w="8"/><text x="62.2494%" y="1791.50"></text></g><g><title>move_binary_format::errors::PartialVMError::new (13 samples, 0.02%)</title><rect x="62.0098%" y="1861" width="0.0169%" height="15" fill="rgb(209,196,21)" fg:x="47755" fg:w="13"/><text x="62.2598%" y="1871.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="62.0163%" y="1845" width="0.0104%" height="15" fill="rgb(252,197,1)" fg:x="47760" fg:w="8"/><text x="62.2663%" y="1855.50"></text></g><g><title>move_core_types::effects::AccountChangeSet::add_resource_op (80 samples, 0.10%)</title><rect x="62.0410%" y="1845" width="0.1039%" height="15" fill="rgb(229,42,46)" fg:x="47779" fg:w="80"/><text x="62.2910%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (66 samples, 0.09%)</title><rect x="62.0592%" y="1829" width="0.0857%" height="15" fill="rgb(219,85,8)" fg:x="47793" fg:w="66"/><text x="62.3092%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (61 samples, 0.08%)</title><rect x="62.0657%" y="1813" width="0.0792%" height="15" fill="rgb(223,185,14)" fg:x="47798" fg:w="61"/><text x="62.3157%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (61 samples, 0.08%)</title><rect x="62.0657%" y="1797" width="0.0792%" height="15" fill="rgb(217,196,18)" fg:x="47798" fg:w="61"/><text x="62.3157%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (61 samples, 0.08%)</title><rect x="62.0657%" y="1781" width="0.0792%" height="15" fill="rgb(220,122,37)" fg:x="47798" fg:w="61"/><text x="62.3157%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (61 samples, 0.08%)</title><rect x="62.0657%" y="1765" width="0.0792%" height="15" fill="rgb(236,135,33)" fg:x="47798" fg:w="61"/><text x="62.3157%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.08%)</title><rect x="62.0657%" y="1749" width="0.0792%" height="15" fill="rgb(222,86,54)" fg:x="47798" fg:w="61"/><text x="62.3157%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.08%)</title><rect x="62.0657%" y="1733" width="0.0792%" height="15" fill="rgb(227,42,22)" fg:x="47798" fg:w="61"/><text x="62.3157%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.08%)</title><rect x="62.0657%" y="1717" width="0.0792%" height="15" fill="rgb(243,101,27)" fg:x="47798" fg:w="61"/><text x="62.3157%" y="1727.50"></text></g><g><title>malloc (57 samples, 0.07%)</title><rect x="62.0708%" y="1701" width="0.0740%" height="15" fill="rgb(229,100,8)" fg:x="47802" fg:w="57"/><text x="62.3208%" y="1711.50"></text></g><g><title>[libc.so.6] (53 samples, 0.07%)</title><rect x="62.0760%" y="1685" width="0.0688%" height="15" fill="rgb(252,68,10)" fg:x="47806" fg:w="53"/><text x="62.3260%" y="1695.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="62.1150%" y="1669" width="0.0299%" height="15" fill="rgb(219,19,31)" fg:x="47836" fg:w="23"/><text x="62.3650%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (10 samples, 0.01%)</title><rect x="62.1475%" y="1829" width="0.0130%" height="15" fill="rgb(246,150,44)" fg:x="47861" fg:w="10"/><text x="62.3975%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (8 samples, 0.01%)</title><rect x="62.1501%" y="1813" width="0.0104%" height="15" fill="rgb(211,14,39)" fg:x="47863" fg:w="8"/><text x="62.4001%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.01%)</title><rect x="62.1501%" y="1797" width="0.0104%" height="15" fill="rgb(221,98,29)" fg:x="47863" fg:w="8"/><text x="62.4001%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.01%)</title><rect x="62.1501%" y="1781" width="0.0104%" height="15" fill="rgb(221,70,26)" fg:x="47863" fg:w="8"/><text x="62.4001%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.01%)</title><rect x="62.1501%" y="1765" width="0.0104%" height="15" fill="rgb(236,146,30)" fg:x="47863" fg:w="8"/><text x="62.4001%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="62.1501%" y="1749" width="0.0104%" height="15" fill="rgb(226,94,34)" fg:x="47863" fg:w="8"/><text x="62.4001%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="62.1501%" y="1733" width="0.0104%" height="15" fill="rgb(248,132,21)" fg:x="47863" fg:w="8"/><text x="62.4001%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="62.1501%" y="1717" width="0.0104%" height="15" fill="rgb(245,43,50)" fg:x="47863" fg:w="8"/><text x="62.4001%" y="1727.50"></text></g><g><title>move_core_types::effects::ChangeSet::add_resource_op (100 samples, 0.13%)</title><rect x="62.0358%" y="1861" width="0.1298%" height="15" fill="rgb(245,132,31)" fg:x="47775" fg:w="100"/><text x="62.2858%" y="1871.50"></text></g><g><title>move_core_types::effects::ChangeSet::get_or_insert_account_changeset (16 samples, 0.02%)</title><rect x="62.1449%" y="1845" width="0.0208%" height="15" fill="rgb(230,171,4)" fg:x="47859" fg:w="16"/><text x="62.3949%" y="1855.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::split_and_merge_resource_groups (1,538 samples, 2.00%)</title><rect x="60.1932%" y="1877" width="1.9971%" height="15" fill="rgb(235,6,45)" fg:x="46356" fg:w="1538"/><text x="60.4432%" y="1887.50">a..</text></g><g><title>move_core_types::effects::ChangeSet::new (14 samples, 0.02%)</title><rect x="62.1721%" y="1861" width="0.0182%" height="15" fill="rgb(220,80,28)" fg:x="47880" fg:w="14"/><text x="62.4221%" y="1871.50"></text></g><g><title>alloc::alloc::box_free (32 samples, 0.04%)</title><rect x="62.2202%" y="1717" width="0.0416%" height="15" fill="rgb(242,171,9)" fg:x="47917" fg:w="32"/><text x="62.4702%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.04%)</title><rect x="62.2202%" y="1701" width="0.0416%" height="15" fill="rgb(214,135,29)" fg:x="47917" fg:w="32"/><text x="62.4702%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.04%)</title><rect x="62.2228%" y="1685" width="0.0390%" height="15" fill="rgb(221,229,16)" fg:x="47919" fg:w="30"/><text x="62.4728%" y="1695.50"></text></g><g><title>cfree (27 samples, 0.04%)</title><rect x="62.2267%" y="1669" width="0.0351%" height="15" fill="rgb(253,59,46)" fg:x="47922" fg:w="27"/><text x="62.4767%" y="1679.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="62.2332%" y="1653" width="0.0286%" height="15" fill="rgb(250,147,20)" fg:x="47927" fg:w="22"/><text x="62.4832%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::code::NativeCodeContext&gt; (13 samples, 0.02%)</title><rect x="62.2617%" y="1717" width="0.0169%" height="15" fill="rgb(236,64,48)" fg:x="47949" fg:w="13"/><text x="62.5117%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::cryptography::ristretto255_point::NativeRistrettoPointContext&gt; (12 samples, 0.02%)</title><rect x="62.2786%" y="1717" width="0.0156%" height="15" fill="rgb(240,37,42)" fg:x="47962" fg:w="12"/><text x="62.5286%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::transaction_context::NativeTransactionContext&gt; (10 samples, 0.01%)</title><rect x="62.2942%" y="1717" width="0.0130%" height="15" fill="rgb(220,41,50)" fg:x="47974" fg:w="10"/><text x="62.5442%" y="1727.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (78 samples, 0.10%)</title><rect x="62.2098%" y="1781" width="0.1013%" height="15" fill="rgb(216,51,14)" fg:x="47909" fg:w="78"/><text x="62.4598%" y="1791.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (78 samples, 0.10%)</title><rect x="62.2098%" y="1765" width="0.1013%" height="15" fill="rgb(215,83,10)" fg:x="47909" fg:w="78"/><text x="62.4598%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (78 samples, 0.10%)</title><rect x="62.2098%" y="1749" width="0.1013%" height="15" fill="rgb(206,144,17)" fg:x="47909" fg:w="78"/><text x="62.4598%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (78 samples, 0.10%)</title><rect x="62.2098%" y="1733" width="0.1013%" height="15" fill="rgb(219,196,37)" fg:x="47909" fg:w="78"/><text x="62.4598%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (84 samples, 0.11%)</title><rect x="62.2072%" y="1797" width="0.1091%" height="15" fill="rgb(226,135,26)" fg:x="47907" fg:w="84"/><text x="62.4572%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.13%)</title><rect x="62.1916%" y="1813" width="0.1260%" height="15" fill="rgb(237,195,40)" fg:x="47895" fg:w="97"/><text x="62.4416%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (109 samples, 0.14%)</title><rect x="62.1903%" y="1877" width="0.1415%" height="15" fill="rgb(228,182,42)" fg:x="47894" fg:w="109"/><text x="62.4403%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (109 samples, 0.14%)</title><rect x="62.1903%" y="1861" width="0.1415%" height="15" fill="rgb(224,135,50)" fg:x="47894" fg:w="109"/><text x="62.4403%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::collections::hash::map::RandomState&gt;&gt; (109 samples, 0.14%)</title><rect x="62.1903%" y="1845" width="0.1415%" height="15" fill="rgb(236,215,34)" fg:x="47894" fg:w="109"/><text x="62.4403%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (109 samples, 0.14%)</title><rect x="62.1903%" y="1829" width="0.1415%" height="15" fill="rgb(244,213,27)" fg:x="47894" fg:w="109"/><text x="62.4403%" y="1839.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="62.3176%" y="1813" width="0.0143%" height="15" fill="rgb(233,37,53)" fg:x="47992" fg:w="11"/><text x="62.5676%" y="1823.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.01%)</title><rect x="62.3318%" y="1877" width="0.0104%" height="15" fill="rgb(222,132,14)" fg:x="48003" fg:w="8"/><text x="62.5818%" y="1887.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="62.4020%" y="1813" width="0.0247%" height="15" fill="rgb(219,202,29)" fg:x="48057" fg:w="19"/><text x="62.6520%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (19 samples, 0.02%)</title><rect x="62.4020%" y="1797" width="0.0247%" height="15" fill="rgb(226,157,39)" fg:x="48057" fg:w="19"/><text x="62.6520%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="62.4059%" y="1781" width="0.0208%" height="15" fill="rgb(235,213,2)" fg:x="48060" fg:w="16"/><text x="62.6559%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="62.4059%" y="1765" width="0.0208%" height="15" fill="rgb(250,121,2)" fg:x="48060" fg:w="16"/><text x="62.6559%" y="1775.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="62.4111%" y="1749" width="0.0156%" height="15" fill="rgb(206,192,33)" fg:x="48064" fg:w="12"/><text x="62.6611%" y="1759.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="62.4136%" y="1733" width="0.0130%" height="15" fill="rgb(240,161,6)" fg:x="48066" fg:w="10"/><text x="62.6636%" y="1743.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (25 samples, 0.03%)</title><rect x="62.3994%" y="1829" width="0.0325%" height="15" fill="rgb(246,53,30)" fg:x="48055" fg:w="25"/><text x="62.6494%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (10 samples, 0.01%)</title><rect x="62.4565%" y="1781" width="0.0130%" height="15" fill="rgb(219,123,43)" fg:x="48099" fg:w="10"/><text x="62.7065%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (10 samples, 0.01%)</title><rect x="62.4565%" y="1765" width="0.0130%" height="15" fill="rgb(236,53,49)" fg:x="48099" fg:w="10"/><text x="62.7065%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (30 samples, 0.04%)</title><rect x="62.4318%" y="1813" width="0.0390%" height="15" fill="rgb(241,156,1)" fg:x="48080" fg:w="30"/><text x="62.6818%" y="1823.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.02%)</title><rect x="62.4487%" y="1797" width="0.0221%" height="15" fill="rgb(209,73,26)" fg:x="48093" fg:w="17"/><text x="62.6987%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (61 samples, 0.08%)</title><rect x="62.3968%" y="1845" width="0.0792%" height="15" fill="rgb(206,114,3)" fg:x="48053" fg:w="61"/><text x="62.6468%" y="1855.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (34 samples, 0.04%)</title><rect x="62.4318%" y="1829" width="0.0441%" height="15" fill="rgb(230,214,9)" fg:x="48080" fg:w="34"/><text x="62.6818%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (12 samples, 0.02%)</title><rect x="62.4773%" y="1829" width="0.0156%" height="15" fill="rgb(240,184,46)" fg:x="48115" fg:w="12"/><text x="62.7273%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (12 samples, 0.02%)</title><rect x="62.4773%" y="1813" width="0.0156%" height="15" fill="rgb(242,169,54)" fg:x="48115" fg:w="12"/><text x="62.7273%" y="1823.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="62.4799%" y="1797" width="0.0130%" height="15" fill="rgb(207,168,50)" fg:x="48117" fg:w="10"/><text x="62.7299%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.12%)</title><rect x="62.3799%" y="1861" width="0.1156%" height="15" fill="rgb(240,114,2)" fg:x="48040" fg:w="89"/><text x="62.6299%" y="1871.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.02%)</title><rect x="62.4760%" y="1845" width="0.0195%" height="15" fill="rgb(211,17,40)" fg:x="48114" fg:w="15"/><text x="62.7260%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (58 samples, 0.08%)</title><rect x="62.5045%" y="1861" width="0.0753%" height="15" fill="rgb(235,97,36)" fg:x="48136" fg:w="58"/><text x="62.7545%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (40 samples, 0.05%)</title><rect x="62.5279%" y="1845" width="0.0519%" height="15" fill="rgb(208,164,11)" fg:x="48154" fg:w="40"/><text x="62.7779%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (25 samples, 0.03%)</title><rect x="62.5474%" y="1829" width="0.0325%" height="15" fill="rgb(242,11,17)" fg:x="48169" fg:w="25"/><text x="62.7974%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (25 samples, 0.03%)</title><rect x="62.5474%" y="1813" width="0.0325%" height="15" fill="rgb(215,86,33)" fg:x="48169" fg:w="25"/><text x="62.7974%" y="1823.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (25 samples, 0.03%)</title><rect x="62.5474%" y="1797" width="0.0325%" height="15" fill="rgb(245,185,28)" fg:x="48169" fg:w="25"/><text x="62.7974%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (25 samples, 0.03%)</title><rect x="62.5474%" y="1781" width="0.0325%" height="15" fill="rgb(231,89,42)" fg:x="48169" fg:w="25"/><text x="62.7974%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.03%)</title><rect x="62.5474%" y="1765" width="0.0325%" height="15" fill="rgb(210,18,47)" fg:x="48169" fg:w="25"/><text x="62.7974%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.03%)</title><rect x="62.5474%" y="1749" width="0.0325%" height="15" fill="rgb(214,84,8)" fg:x="48169" fg:w="25"/><text x="62.7974%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.03%)</title><rect x="62.5474%" y="1733" width="0.0325%" height="15" fill="rgb(214,222,23)" fg:x="48169" fg:w="25"/><text x="62.7974%" y="1743.50"></text></g><g><title>malloc (20 samples, 0.03%)</title><rect x="62.5539%" y="1717" width="0.0260%" height="15" fill="rgb(213,104,21)" fg:x="48174" fg:w="20"/><text x="62.8039%" y="1727.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="62.5838%" y="1861" width="0.0143%" height="15" fill="rgb(238,138,6)" fg:x="48197" fg:w="11"/><text x="62.8338%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_types::values::values_impl::GlobalValue&gt;&gt; (8 samples, 0.01%)</title><rect x="62.6006%" y="1861" width="0.0104%" height="15" fill="rgb(205,167,50)" fg:x="48210" fg:w="8"/><text x="62.8506%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="62.6006%" y="1845" width="0.0104%" height="15" fill="rgb(230,105,27)" fg:x="48210" fg:w="8"/><text x="62.8506%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_table_extension::TableHandle,move_table_extension::Table&gt;&gt; (20 samples, 0.03%)</title><rect x="62.6110%" y="1861" width="0.0260%" height="15" fill="rgb(222,97,48)" fg:x="48218" fg:w="20"/><text x="62.8610%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="62.6188%" y="1845" width="0.0182%" height="15" fill="rgb(222,197,14)" fg:x="48224" fg:w="14"/><text x="62.8688%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="62.6266%" y="1829" width="0.0104%" height="15" fill="rgb(210,105,47)" fg:x="48230" fg:w="8"/><text x="62.8766%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (8 samples, 0.01%)</title><rect x="62.6266%" y="1813" width="0.0104%" height="15" fill="rgb(238,158,19)" fg:x="48230" fg:w="8"/><text x="62.8766%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (8 samples, 0.01%)</title><rect x="62.6266%" y="1797" width="0.0104%" height="15" fill="rgb(226,176,23)" fg:x="48230" fg:w="8"/><text x="62.8766%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (8 samples, 0.01%)</title><rect x="62.6266%" y="1781" width="0.0104%" height="15" fill="rgb(208,79,31)" fg:x="48230" fg:w="8"/><text x="62.8766%" y="1791.50"></text></g><g><title>core::mem::replace (8 samples, 0.01%)</title><rect x="62.6266%" y="1765" width="0.0104%" height="15" fill="rgb(221,154,21)" fg:x="48230" fg:w="8"/><text x="62.8766%" y="1775.50"></text></g><g><title>core::ptr::read (8 samples, 0.01%)</title><rect x="62.6266%" y="1749" width="0.0104%" height="15" fill="rgb(213,61,41)" fg:x="48230" fg:w="8"/><text x="62.8766%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (8 samples, 0.01%)</title><rect x="62.6266%" y="1733" width="0.0104%" height="15" fill="rgb(215,28,33)" fg:x="48230" fg:w="8"/><text x="62.8766%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="62.6461%" y="1813" width="0.0156%" height="15" fill="rgb(231,139,26)" fg:x="48245" fg:w="12"/><text x="62.8961%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (10 samples, 0.01%)</title><rect x="62.6487%" y="1797" width="0.0130%" height="15" fill="rgb(232,159,16)" fg:x="48247" fg:w="10"/><text x="62.8987%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (22 samples, 0.03%)</title><rect x="62.6383%" y="1861" width="0.0286%" height="15" fill="rgb(233,80,10)" fg:x="48239" fg:w="22"/><text x="62.8883%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (18 samples, 0.02%)</title><rect x="62.6435%" y="1845" width="0.0234%" height="15" fill="rgb(208,147,29)" fg:x="48243" fg:w="18"/><text x="62.8935%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (16 samples, 0.02%)</title><rect x="62.6461%" y="1829" width="0.0208%" height="15" fill="rgb(213,10,12)" fg:x="48245" fg:w="16"/><text x="62.8961%" y="1839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="62.6695%" y="1829" width="0.0130%" height="15" fill="rgb(231,218,13)" fg:x="48263" fg:w="10"/><text x="62.9195%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="62.6708%" y="1813" width="0.0117%" height="15" fill="rgb(244,199,44)" fg:x="48264" fg:w="9"/><text x="62.9208%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="62.6708%" y="1797" width="0.0117%" height="15" fill="rgb(240,144,53)" fg:x="48264" fg:w="9"/><text x="62.9208%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (9 samples, 0.01%)</title><rect x="62.6708%" y="1781" width="0.0117%" height="15" fill="rgb(223,57,28)" fg:x="48264" fg:w="9"/><text x="62.9208%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (20 samples, 0.03%)</title><rect x="62.6669%" y="1861" width="0.0260%" height="15" fill="rgb(213,134,38)" fg:x="48261" fg:w="20"/><text x="62.9169%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (20 samples, 0.03%)</title><rect x="62.6669%" y="1845" width="0.0260%" height="15" fill="rgb(251,182,42)" fg:x="48261" fg:w="20"/><text x="62.9169%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="62.7383%" y="1653" width="0.0104%" height="15" fill="rgb(229,93,13)" fg:x="48316" fg:w="8"/><text x="62.9883%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="62.7383%" y="1637" width="0.0104%" height="15" fill="rgb(234,171,3)" fg:x="48316" fg:w="8"/><text x="62.9883%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (17 samples, 0.02%)</title><rect x="62.7279%" y="1765" width="0.0221%" height="15" fill="rgb(241,105,32)" fg:x="48308" fg:w="17"/><text x="62.9779%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (17 samples, 0.02%)</title><rect x="62.7279%" y="1749" width="0.0221%" height="15" fill="rgb(221,66,3)" fg:x="48308" fg:w="17"/><text x="62.9779%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (9 samples, 0.01%)</title><rect x="62.7383%" y="1733" width="0.0117%" height="15" fill="rgb(248,155,29)" fg:x="48316" fg:w="9"/><text x="62.9883%" y="1743.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.01%)</title><rect x="62.7383%" y="1717" width="0.0117%" height="15" fill="rgb(231,31,5)" fg:x="48316" fg:w="9"/><text x="62.9883%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.01%)</title><rect x="62.7383%" y="1701" width="0.0117%" height="15" fill="rgb(213,188,31)" fg:x="48316" fg:w="9"/><text x="62.9883%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="62.7383%" y="1685" width="0.0117%" height="15" fill="rgb(212,104,33)" fg:x="48316" fg:w="9"/><text x="62.9883%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="62.7383%" y="1669" width="0.0117%" height="15" fill="rgb(254,77,51)" fg:x="48316" fg:w="9"/><text x="62.9883%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (31 samples, 0.04%)</title><rect x="62.7162%" y="1781" width="0.0403%" height="15" fill="rgb(234,39,26)" fg:x="48299" fg:w="31"/><text x="62.9662%" y="1791.50"></text></g><g><title>move_table_extension::serialize (51 samples, 0.07%)</title><rect x="62.6928%" y="1861" width="0.0662%" height="15" fill="rgb(208,88,36)" fg:x="48281" fg:w="51"/><text x="62.9428%" y="1871.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (51 samples, 0.07%)</title><rect x="62.6928%" y="1845" width="0.0662%" height="15" fill="rgb(243,222,10)" fg:x="48281" fg:w="51"/><text x="62.9428%" y="1855.50"></text></g><g><title>bcs::ser::to_bytes (45 samples, 0.06%)</title><rect x="62.7006%" y="1829" width="0.0584%" height="15" fill="rgb(218,133,52)" fg:x="48287" fg:w="45"/><text x="62.9506%" y="1839.50"></text></g><g><title>bcs::ser::serialize_into (42 samples, 0.05%)</title><rect x="62.7045%" y="1813" width="0.0545%" height="15" fill="rgb(222,25,26)" fg:x="48290" fg:w="42"/><text x="62.9545%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (42 samples, 0.05%)</title><rect x="62.7045%" y="1797" width="0.0545%" height="15" fill="rgb(243,174,24)" fg:x="48290" fg:w="42"/><text x="62.9545%" y="1807.50"></text></g><g><title>move_table_extension::NativeTableContext::into_change_set (327 samples, 0.42%)</title><rect x="62.3422%" y="1877" width="0.4246%" height="15" fill="rgb(233,188,52)" fg:x="48011" fg:w="327"/><text x="62.5922%" y="1887.50"></text></g><g><title>&lt;X as better_any::TidExt&gt;::downcast_box (21 samples, 0.03%)</title><rect x="62.7915%" y="1861" width="0.0273%" height="15" fill="rgb(208,89,14)" fg:x="48357" fg:w="21"/><text x="63.0415%" y="1871.50"></text></g><g><title>&lt;T as better_any::Tid&gt;::self_id (21 samples, 0.03%)</title><rect x="62.7915%" y="1845" width="0.0273%" height="15" fill="rgb(205,204,21)" fg:x="48357" fg:w="21"/><text x="63.0415%" y="1855.50"></text></g><g><title>alloc::alloc::box_free (33 samples, 0.04%)</title><rect x="62.8188%" y="1861" width="0.0429%" height="15" fill="rgb(246,39,28)" fg:x="48378" fg:w="33"/><text x="63.0688%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.04%)</title><rect x="62.8188%" y="1845" width="0.0429%" height="15" fill="rgb(235,71,19)" fg:x="48378" fg:w="33"/><text x="63.0688%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.04%)</title><rect x="62.8188%" y="1829" width="0.0429%" height="15" fill="rgb(211,62,39)" fg:x="48378" fg:w="33"/><text x="63.0688%" y="1839.50"></text></g><g><title>cfree (33 samples, 0.04%)</title><rect x="62.8188%" y="1813" width="0.0429%" height="15" fill="rgb(246,118,20)" fg:x="48378" fg:w="33"/><text x="63.0688%" y="1823.50"></text></g><g><title>[libc.so.6] (29 samples, 0.04%)</title><rect x="62.8240%" y="1797" width="0.0377%" height="15" fill="rgb(230,82,12)" fg:x="48382" fg:w="29"/><text x="63.0740%" y="1807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="62.8642%" y="1781" width="0.0130%" height="15" fill="rgb(205,212,34)" fg:x="48413" fg:w="10"/><text x="63.1142%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="62.8642%" y="1765" width="0.0130%" height="15" fill="rgb(239,90,1)" fg:x="48413" fg:w="10"/><text x="63.1142%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="62.8642%" y="1749" width="0.0130%" height="15" fill="rgb(225,198,50)" fg:x="48413" fg:w="10"/><text x="63.1142%" y="1759.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.03%)</title><rect x="62.8616%" y="1813" width="0.0338%" height="15" fill="rgb(227,208,48)" fg:x="48411" fg:w="26"/><text x="63.1116%" y="1823.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.03%)</title><rect x="62.8616%" y="1797" width="0.0338%" height="15" fill="rgb(238,134,41)" fg:x="48411" fg:w="26"/><text x="63.1116%" y="1807.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.01%)</title><rect x="62.8811%" y="1781" width="0.0143%" height="15" fill="rgb(241,58,39)" fg:x="48426" fg:w="11"/><text x="63.1311%" y="1791.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="62.8811%" y="1765" width="0.0143%" height="15" fill="rgb(214,126,4)" fg:x="48426" fg:w="11"/><text x="63.1311%" y="1775.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (8 samples, 0.01%)</title><rect x="62.8850%" y="1749" width="0.0104%" height="15" fill="rgb(235,149,4)" fg:x="48429" fg:w="8"/><text x="63.1350%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="62.8954%" y="1797" width="0.0182%" height="15" fill="rgb(236,59,29)" fg:x="48437" fg:w="14"/><text x="63.1454%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.02%)</title><rect x="62.8954%" y="1781" width="0.0182%" height="15" fill="rgb(246,11,33)" fg:x="48437" fg:w="14"/><text x="63.1454%" y="1791.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::remove (116 samples, 0.15%)</title><rect x="62.7668%" y="1877" width="0.1506%" height="15" fill="rgb(232,180,35)" fg:x="48338" fg:w="116"/><text x="63.0168%" y="1887.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (43 samples, 0.06%)</title><rect x="62.8616%" y="1861" width="0.0558%" height="15" fill="rgb(220,35,37)" fg:x="48411" fg:w="43"/><text x="63.1116%" y="1871.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (43 samples, 0.06%)</title><rect x="62.8616%" y="1845" width="0.0558%" height="15" fill="rgb(238,107,48)" fg:x="48411" fg:w="43"/><text x="63.1116%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (43 samples, 0.06%)</title><rect x="62.8616%" y="1829" width="0.0558%" height="15" fill="rgb(205,65,21)" fg:x="48411" fg:w="43"/><text x="63.1116%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (17 samples, 0.02%)</title><rect x="62.8954%" y="1813" width="0.0221%" height="15" fill="rgb(246,138,48)" fg:x="48437" fg:w="17"/><text x="63.1454%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (35 samples, 0.05%)</title><rect x="63.0395%" y="1797" width="0.0454%" height="15" fill="rgb(209,220,47)" fg:x="48548" fg:w="35"/><text x="63.2895%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (35 samples, 0.05%)</title><rect x="63.0395%" y="1781" width="0.0454%" height="15" fill="rgb(222,162,49)" fg:x="48548" fg:w="35"/><text x="63.2895%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.04%)</title><rect x="63.0421%" y="1765" width="0.0429%" height="15" fill="rgb(243,123,11)" fg:x="48550" fg:w="33"/><text x="63.2921%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.04%)</title><rect x="63.0421%" y="1749" width="0.0429%" height="15" fill="rgb(221,229,41)" fg:x="48550" fg:w="33"/><text x="63.2921%" y="1759.50"></text></g><g><title>cfree (30 samples, 0.04%)</title><rect x="63.0460%" y="1733" width="0.0390%" height="15" fill="rgb(216,68,4)" fg:x="48553" fg:w="30"/><text x="63.2960%" y="1743.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="63.0512%" y="1717" width="0.0338%" height="15" fill="rgb(207,88,35)" fg:x="48557" fg:w="26"/><text x="63.3012%" y="1727.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (43 samples, 0.06%)</title><rect x="63.0369%" y="1813" width="0.0558%" height="15" fill="rgb(252,2,5)" fg:x="48546" fg:w="43"/><text x="63.2869%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (38 samples, 0.05%)</title><rect x="63.0928%" y="1797" width="0.0493%" height="15" fill="rgb(209,173,7)" fg:x="48589" fg:w="38"/><text x="63.3428%" y="1807.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.02%)</title><rect x="63.1239%" y="1781" width="0.0182%" height="15" fill="rgb(210,198,52)" fg:x="48613" fg:w="14"/><text x="63.3739%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (96 samples, 0.12%)</title><rect x="63.0304%" y="1829" width="0.1247%" height="15" fill="rgb(228,152,32)" fg:x="48541" fg:w="96"/><text x="63.2804%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (48 samples, 0.06%)</title><rect x="63.0928%" y="1813" width="0.0623%" height="15" fill="rgb(249,98,29)" fg:x="48589" fg:w="48"/><text x="63.3428%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (10 samples, 0.01%)</title><rect x="63.1421%" y="1797" width="0.0130%" height="15" fill="rgb(205,148,48)" fg:x="48627" fg:w="10"/><text x="63.3921%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (11 samples, 0.01%)</title><rect x="63.1616%" y="1813" width="0.0143%" height="15" fill="rgb(236,69,34)" fg:x="48642" fg:w="11"/><text x="63.4116%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (11 samples, 0.01%)</title><rect x="63.1616%" y="1797" width="0.0143%" height="15" fill="rgb(220,151,41)" fg:x="48642" fg:w="11"/><text x="63.4116%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (146 samples, 0.19%)</title><rect x="63.0097%" y="1845" width="0.1896%" height="15" fill="rgb(254,106,24)" fg:x="48525" fg:w="146"/><text x="63.2597%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.04%)</title><rect x="63.1551%" y="1829" width="0.0441%" height="15" fill="rgb(210,37,48)" fg:x="48637" fg:w="34"/><text x="63.4051%" y="1839.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="63.1759%" y="1813" width="0.0234%" height="15" fill="rgb(254,131,5)" fg:x="48653" fg:w="18"/><text x="63.4259%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (110 samples, 0.14%)</title><rect x="63.2057%" y="1845" width="0.1428%" height="15" fill="rgb(216,55,41)" fg:x="48676" fg:w="110"/><text x="63.4557%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (98 samples, 0.13%)</title><rect x="63.2213%" y="1829" width="0.1273%" height="15" fill="rgb(250,35,31)" fg:x="48688" fg:w="98"/><text x="63.4713%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (91 samples, 0.12%)</title><rect x="63.2304%" y="1813" width="0.1182%" height="15" fill="rgb(207,124,33)" fg:x="48695" fg:w="91"/><text x="63.4804%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (91 samples, 0.12%)</title><rect x="63.2304%" y="1797" width="0.1182%" height="15" fill="rgb(249,175,17)" fg:x="48695" fg:w="91"/><text x="63.4804%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (91 samples, 0.12%)</title><rect x="63.2304%" y="1781" width="0.1182%" height="15" fill="rgb(224,175,39)" fg:x="48695" fg:w="91"/><text x="63.4804%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (91 samples, 0.12%)</title><rect x="63.2304%" y="1765" width="0.1182%" height="15" fill="rgb(208,67,49)" fg:x="48695" fg:w="91"/><text x="63.4804%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (91 samples, 0.12%)</title><rect x="63.2304%" y="1749" width="0.1182%" height="15" fill="rgb(222,188,41)" fg:x="48695" fg:w="91"/><text x="63.4804%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (91 samples, 0.12%)</title><rect x="63.2304%" y="1733" width="0.1182%" height="15" fill="rgb(243,213,30)" fg:x="48695" fg:w="91"/><text x="63.4804%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (91 samples, 0.12%)</title><rect x="63.2304%" y="1717" width="0.1182%" height="15" fill="rgb(253,100,45)" fg:x="48695" fg:w="91"/><text x="63.4804%" y="1727.50"></text></g><g><title>malloc (89 samples, 0.12%)</title><rect x="63.2330%" y="1701" width="0.1156%" height="15" fill="rgb(226,24,44)" fg:x="48697" fg:w="89"/><text x="63.4830%" y="1711.50"></text></g><g><title>[libc.so.6] (88 samples, 0.11%)</title><rect x="63.2343%" y="1685" width="0.1143%" height="15" fill="rgb(215,41,24)" fg:x="48698" fg:w="88"/><text x="63.4843%" y="1695.50"></text></g><g><title>[libc.so.6] (59 samples, 0.08%)</title><rect x="63.2720%" y="1669" width="0.0766%" height="15" fill="rgb(254,53,33)" fg:x="48727" fg:w="59"/><text x="63.5220%" y="1679.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="63.3538%" y="1845" width="0.0182%" height="15" fill="rgb(242,103,10)" fg:x="48790" fg:w="14"/><text x="63.6038%" y="1855.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="63.3616%" y="1829" width="0.0104%" height="15" fill="rgb(246,29,21)" fg:x="48796" fg:w="8"/><text x="63.6116%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::identifier::Identifier,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="63.3732%" y="1845" width="0.0234%" height="15" fill="rgb(251,154,1)" fg:x="48805" fg:w="18"/><text x="63.6232%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="63.3732%" y="1829" width="0.0234%" height="15" fill="rgb(254,212,26)" fg:x="48805" fg:w="18"/><text x="63.6232%" y="1839.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="63.3745%" y="1813" width="0.0221%" height="15" fill="rgb(251,187,46)" fg:x="48806" fg:w="17"/><text x="63.6245%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::identifier::Identifier,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="63.3745%" y="1797" width="0.0221%" height="15" fill="rgb(224,208,14)" fg:x="48806" fg:w="17"/><text x="63.6245%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="63.3758%" y="1781" width="0.0208%" height="15" fill="rgb(222,176,26)" fg:x="48807" fg:w="16"/><text x="63.6258%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::StructTag,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="63.3966%" y="1845" width="0.0195%" height="15" fill="rgb(241,219,52)" fg:x="48823" fg:w="15"/><text x="63.6466%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="63.3966%" y="1829" width="0.0195%" height="15" fill="rgb(252,198,21)" fg:x="48823" fg:w="15"/><text x="63.6466%" y="1839.50"></text></g><g><title>core::mem::drop (15 samples, 0.02%)</title><rect x="63.3966%" y="1813" width="0.0195%" height="15" fill="rgb(244,196,23)" fg:x="48823" fg:w="15"/><text x="63.6466%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::language_storage::StructTag,move_core_types::effects::Op&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="63.3966%" y="1797" width="0.0195%" height="15" fill="rgb(239,121,44)" fg:x="48823" fg:w="15"/><text x="63.6466%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="63.3966%" y="1781" width="0.0195%" height="15" fill="rgb(249,203,23)" fg:x="48823" fg:w="15"/><text x="63.6466%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (15 samples, 0.02%)</title><rect x="63.4161%" y="1845" width="0.0195%" height="15" fill="rgb(238,219,10)" fg:x="48838" fg:w="15"/><text x="63.6661%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="63.4174%" y="1829" width="0.0182%" height="15" fill="rgb(241,35,46)" fg:x="48839" fg:w="14"/><text x="63.6674%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (12 samples, 0.02%)</title><rect x="63.4434%" y="1845" width="0.0156%" height="15" fill="rgb(218,28,6)" fg:x="48859" fg:w="12"/><text x="63.6934%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="63.4434%" y="1829" width="0.0156%" height="15" fill="rgb(233,151,50)" fg:x="48859" fg:w="12"/><text x="63.6934%" y="1839.50"></text></g><g><title>cfree (35 samples, 0.05%)</title><rect x="63.4927%" y="1765" width="0.0454%" height="15" fill="rgb(208,57,8)" fg:x="48897" fg:w="35"/><text x="63.7427%" y="1775.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="63.5096%" y="1749" width="0.0286%" height="15" fill="rgb(253,99,10)" fg:x="48910" fg:w="22"/><text x="63.7596%" y="1759.50"></text></g><g><title>cfree (23 samples, 0.03%)</title><rect x="63.5823%" y="1685" width="0.0299%" height="15" fill="rgb(237,196,49)" fg:x="48966" fg:w="23"/><text x="63.8323%" y="1695.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="63.5888%" y="1669" width="0.0234%" height="15" fill="rgb(209,51,3)" fg:x="48971" fg:w="18"/><text x="63.8388%" y="1679.50"></text></g><g><title>cfree (26 samples, 0.03%)</title><rect x="63.6472%" y="1605" width="0.0338%" height="15" fill="rgb(238,129,10)" fg:x="49016" fg:w="26"/><text x="63.8972%" y="1615.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="63.6537%" y="1589" width="0.0273%" height="15" fill="rgb(246,201,16)" fg:x="49021" fg:w="21"/><text x="63.9037%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.06%)</title><rect x="63.6420%" y="1637" width="0.0610%" height="15" fill="rgb(250,160,20)" fg:x="49012" fg:w="47"/><text x="63.8920%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (47 samples, 0.06%)</title><rect x="63.6420%" y="1621" width="0.0610%" height="15" fill="rgb(251,107,25)" fg:x="49012" fg:w="47"/><text x="63.8920%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (17 samples, 0.02%)</title><rect x="63.6810%" y="1605" width="0.0221%" height="15" fill="rgb(212,103,39)" fg:x="49042" fg:w="17"/><text x="63.9310%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (8 samples, 0.01%)</title><rect x="63.6927%" y="1589" width="0.0104%" height="15" fill="rgb(207,9,29)" fg:x="49051" fg:w="8"/><text x="63.9427%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (8 samples, 0.01%)</title><rect x="63.6927%" y="1573" width="0.0104%" height="15" fill="rgb(227,84,3)" fg:x="49051" fg:w="8"/><text x="63.9427%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="63.6927%" y="1557" width="0.0104%" height="15" fill="rgb(242,194,7)" fg:x="49051" fg:w="8"/><text x="63.9427%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (8 samples, 0.01%)</title><rect x="63.6927%" y="1541" width="0.0104%" height="15" fill="rgb(230,40,4)" fg:x="49051" fg:w="8"/><text x="63.9427%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.13%)</title><rect x="63.5745%" y="1717" width="0.1311%" height="15" fill="rgb(243,229,33)" fg:x="48960" fg:w="101"/><text x="63.8245%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (96 samples, 0.12%)</title><rect x="63.5810%" y="1701" width="0.1247%" height="15" fill="rgb(240,65,24)" fg:x="48965" fg:w="96"/><text x="63.8310%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (72 samples, 0.09%)</title><rect x="63.6122%" y="1685" width="0.0935%" height="15" fill="rgb(212,28,20)" fg:x="48989" fg:w="72"/><text x="63.8622%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (50 samples, 0.06%)</title><rect x="63.6407%" y="1669" width="0.0649%" height="15" fill="rgb(209,72,3)" fg:x="49011" fg:w="50"/><text x="63.8907%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (49 samples, 0.06%)</title><rect x="63.6420%" y="1653" width="0.0636%" height="15" fill="rgb(238,170,36)" fg:x="49012" fg:w="49"/><text x="63.8920%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (177 samples, 0.23%)</title><rect x="63.4810%" y="1797" width="0.2298%" height="15" fill="rgb(236,19,38)" fg:x="48888" fg:w="177"/><text x="63.7310%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (177 samples, 0.23%)</title><rect x="63.4810%" y="1781" width="0.2298%" height="15" fill="rgb(230,67,43)" fg:x="48888" fg:w="177"/><text x="63.7310%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (133 samples, 0.17%)</title><rect x="63.5381%" y="1765" width="0.1727%" height="15" fill="rgb(227,14,36)" fg:x="48932" fg:w="133"/><text x="63.7881%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (106 samples, 0.14%)</title><rect x="63.5732%" y="1749" width="0.1376%" height="15" fill="rgb(247,171,49)" fg:x="48959" fg:w="106"/><text x="63.8232%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (105 samples, 0.14%)</title><rect x="63.5745%" y="1733" width="0.1363%" height="15" fill="rgb(235,164,51)" fg:x="48960" fg:w="105"/><text x="63.8245%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (195 samples, 0.25%)</title><rect x="63.4641%" y="1845" width="0.2532%" height="15" fill="rgb(246,107,20)" fg:x="48875" fg:w="195"/><text x="63.7141%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (184 samples, 0.24%)</title><rect x="63.4784%" y="1829" width="0.2389%" height="15" fill="rgb(226,88,18)" fg:x="48886" fg:w="184"/><text x="63.7284%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (182 samples, 0.24%)</title><rect x="63.4810%" y="1813" width="0.2363%" height="15" fill="rgb(235,136,9)" fg:x="48888" fg:w="182"/><text x="63.7310%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (12 samples, 0.02%)</title><rect x="63.7173%" y="1845" width="0.0156%" height="15" fill="rgb(209,3,34)" fg:x="49070" fg:w="12"/><text x="63.9673%" y="1855.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="63.7472%" y="1717" width="0.0182%" height="15" fill="rgb(213,38,19)" fg:x="49093" fg:w="14"/><text x="63.9972%" y="1727.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="63.7524%" y="1701" width="0.0130%" height="15" fill="rgb(254,24,24)" fg:x="49097" fg:w="10"/><text x="64.0024%" y="1711.50"></text></g><g><title>cfree (24 samples, 0.03%)</title><rect x="63.7914%" y="1701" width="0.0312%" height="15" fill="rgb(219,122,42)" fg:x="49127" fg:w="24"/><text x="64.0414%" y="1711.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="63.7978%" y="1685" width="0.0247%" height="15" fill="rgb(205,128,31)" fg:x="49132" fg:w="19"/><text x="64.0478%" y="1695.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="63.8290%" y="1589" width="0.0117%" height="15" fill="rgb(212,142,0)" fg:x="49156" fg:w="9"/><text x="64.0790%" y="1599.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="63.8498%" y="1573" width="0.0221%" height="15" fill="rgb(211,25,35)" fg:x="49172" fg:w="17"/><text x="64.0998%" y="1583.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="63.8563%" y="1557" width="0.0156%" height="15" fill="rgb(220,150,53)" fg:x="49177" fg:w="12"/><text x="64.1063%" y="1567.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="63.8745%" y="1461" width="0.0169%" height="15" fill="rgb(220,30,24)" fg:x="49191" fg:w="13"/><text x="64.1245%" y="1471.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="63.8784%" y="1445" width="0.0130%" height="15" fill="rgb(218,86,23)" fg:x="49194" fg:w="10"/><text x="64.1284%" y="1455.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="63.9043%" y="1445" width="0.0169%" height="15" fill="rgb(206,62,27)" fg:x="49214" fg:w="13"/><text x="64.1543%" y="1455.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="63.9082%" y="1429" width="0.0130%" height="15" fill="rgb(249,174,0)" fg:x="49217" fg:w="10"/><text x="64.1582%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (27 samples, 0.04%)</title><rect x="63.8913%" y="1461" width="0.0351%" height="15" fill="rgb(246,67,27)" fg:x="49204" fg:w="27"/><text x="64.1413%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (68 samples, 0.09%)</title><rect x="63.8407%" y="1589" width="0.0883%" height="15" fill="rgb(250,195,30)" fg:x="49165" fg:w="68"/><text x="64.0907%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="63.8719%" y="1573" width="0.0571%" height="15" fill="rgb(251,171,50)" fg:x="49189" fg:w="44"/><text x="64.1219%" y="1583.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.06%)</title><rect x="63.8719%" y="1557" width="0.0571%" height="15" fill="rgb(236,196,10)" fg:x="49189" fg:w="44"/><text x="64.1219%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="63.8719%" y="1541" width="0.0571%" height="15" fill="rgb(249,228,52)" fg:x="49189" fg:w="44"/><text x="64.1219%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="63.8719%" y="1525" width="0.0571%" height="15" fill="rgb(219,60,51)" fg:x="49189" fg:w="44"/><text x="64.1219%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (44 samples, 0.06%)</title><rect x="63.8719%" y="1509" width="0.0571%" height="15" fill="rgb(240,198,24)" fg:x="49189" fg:w="44"/><text x="64.1219%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.06%)</title><rect x="63.8719%" y="1493" width="0.0571%" height="15" fill="rgb(240,192,40)" fg:x="49189" fg:w="44"/><text x="64.1219%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (44 samples, 0.06%)</title><rect x="63.8719%" y="1477" width="0.0571%" height="15" fill="rgb(219,118,5)" fg:x="49189" fg:w="44"/><text x="64.1219%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (130 samples, 0.17%)</title><rect x="63.7654%" y="1717" width="0.1688%" height="15" fill="rgb(205,202,34)" fg:x="49107" fg:w="130"/><text x="64.0154%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (86 samples, 0.11%)</title><rect x="63.8225%" y="1701" width="0.1117%" height="15" fill="rgb(234,153,26)" fg:x="49151" fg:w="86"/><text x="64.0725%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.11%)</title><rect x="63.8225%" y="1685" width="0.1117%" height="15" fill="rgb(229,26,29)" fg:x="49151" fg:w="86"/><text x="64.0725%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (83 samples, 0.11%)</title><rect x="63.8264%" y="1669" width="0.1078%" height="15" fill="rgb(237,115,21)" fg:x="49154" fg:w="83"/><text x="64.0764%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (83 samples, 0.11%)</title><rect x="63.8264%" y="1653" width="0.1078%" height="15" fill="rgb(252,144,15)" fg:x="49154" fg:w="83"/><text x="64.0764%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (83 samples, 0.11%)</title><rect x="63.8264%" y="1637" width="0.1078%" height="15" fill="rgb(232,26,13)" fg:x="49154" fg:w="83"/><text x="64.0764%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.11%)</title><rect x="63.8264%" y="1621" width="0.1078%" height="15" fill="rgb(206,44,19)" fg:x="49154" fg:w="83"/><text x="64.0764%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (83 samples, 0.11%)</title><rect x="63.8264%" y="1605" width="0.1078%" height="15" fill="rgb(249,159,2)" fg:x="49154" fg:w="83"/><text x="64.0764%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (157 samples, 0.20%)</title><rect x="63.7394%" y="1749" width="0.2039%" height="15" fill="rgb(231,5,32)" fg:x="49087" fg:w="157"/><text x="63.9894%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (156 samples, 0.20%)</title><rect x="63.7407%" y="1733" width="0.2026%" height="15" fill="rgb(249,210,18)" fg:x="49088" fg:w="156"/><text x="63.9907%" y="1743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (164 samples, 0.21%)</title><rect x="63.7381%" y="1813" width="0.2130%" height="15" fill="rgb(215,223,36)" fg:x="49086" fg:w="164"/><text x="63.9881%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (163 samples, 0.21%)</title><rect x="63.7394%" y="1797" width="0.2117%" height="15" fill="rgb(245,185,20)" fg:x="49087" fg:w="163"/><text x="63.9894%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (163 samples, 0.21%)</title><rect x="63.7394%" y="1781" width="0.2117%" height="15" fill="rgb(206,224,11)" fg:x="49087" fg:w="163"/><text x="63.9894%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (163 samples, 0.21%)</title><rect x="63.7394%" y="1765" width="0.2117%" height="15" fill="rgb(248,73,42)" fg:x="49087" fg:w="163"/><text x="63.9894%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (174 samples, 0.23%)</title><rect x="63.7329%" y="1845" width="0.2259%" height="15" fill="rgb(219,149,31)" fg:x="49082" fg:w="174"/><text x="63.9829%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (174 samples, 0.23%)</title><rect x="63.7329%" y="1829" width="0.2259%" height="15" fill="rgb(243,104,17)" fg:x="49082" fg:w="174"/><text x="63.9829%" y="1839.50"></text></g><g><title>move_core_types::effects::ChangeSet::add_account_changeset (25 samples, 0.03%)</title><rect x="63.9589%" y="1845" width="0.0325%" height="15" fill="rgb(244,117,33)" fg:x="49256" fg:w="25"/><text x="64.2089%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (18 samples, 0.02%)</title><rect x="63.9680%" y="1829" width="0.0234%" height="15" fill="rgb(251,25,47)" fg:x="49263" fg:w="18"/><text x="64.2180%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (8 samples, 0.01%)</title><rect x="63.9809%" y="1813" width="0.0104%" height="15" fill="rgb(249,70,13)" fg:x="49273" fg:w="8"/><text x="64.2309%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.01%)</title><rect x="63.9809%" y="1797" width="0.0104%" height="15" fill="rgb(217,133,18)" fg:x="49273" fg:w="8"/><text x="64.2309%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.01%)</title><rect x="63.9809%" y="1781" width="0.0104%" height="15" fill="rgb(248,97,28)" fg:x="49273" fg:w="8"/><text x="64.2309%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.01%)</title><rect x="63.9809%" y="1765" width="0.0104%" height="15" fill="rgb(237,193,4)" fg:x="49273" fg:w="8"/><text x="64.2309%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="63.9809%" y="1749" width="0.0104%" height="15" fill="rgb(247,198,45)" fg:x="49273" fg:w="8"/><text x="64.2309%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="63.9809%" y="1733" width="0.0104%" height="15" fill="rgb(245,2,20)" fg:x="49273" fg:w="8"/><text x="64.2309%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="63.9809%" y="1717" width="0.0104%" height="15" fill="rgb(210,71,36)" fg:x="49273" fg:w="8"/><text x="64.2309%" y="1727.50"></text></g><g><title>move_core_types::effects::ChangeSet::new (10 samples, 0.01%)</title><rect x="63.9913%" y="1845" width="0.0130%" height="15" fill="rgb(238,114,30)" fg:x="49281" fg:w="10"/><text x="64.2413%" y="1855.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="64.0199%" y="1797" width="0.0182%" height="15" fill="rgb(241,200,2)" fg:x="49303" fg:w="14"/><text x="64.2699%" y="1807.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="64.0264%" y="1781" width="0.0117%" height="15" fill="rgb(232,106,18)" fg:x="49308" fg:w="9"/><text x="64.2764%" y="1791.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="64.0264%" y="1765" width="0.0117%" height="15" fill="rgb(211,141,18)" fg:x="49308" fg:w="9"/><text x="64.2764%" y="1775.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="64.0277%" y="1749" width="0.0104%" height="15" fill="rgb(224,9,9)" fg:x="49309" fg:w="8"/><text x="64.2777%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (8 samples, 0.01%)</title><rect x="64.0277%" y="1733" width="0.0104%" height="15" fill="rgb(249,137,46)" fg:x="49309" fg:w="8"/><text x="64.2777%" y="1743.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="64.0433%" y="1749" width="0.0130%" height="15" fill="rgb(236,44,45)" fg:x="49321" fg:w="10"/><text x="64.2933%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="64.0433%" y="1733" width="0.0130%" height="15" fill="rgb(205,68,40)" fg:x="49321" fg:w="10"/><text x="64.2933%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (48 samples, 0.06%)</title><rect x="64.0043%" y="1845" width="0.0623%" height="15" fill="rgb(214,198,49)" fg:x="49291" fg:w="48"/><text x="64.2543%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (47 samples, 0.06%)</title><rect x="64.0056%" y="1829" width="0.0610%" height="15" fill="rgb(226,140,45)" fg:x="49292" fg:w="47"/><text x="64.2556%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (39 samples, 0.05%)</title><rect x="64.0160%" y="1813" width="0.0506%" height="15" fill="rgb(209,109,20)" fg:x="49300" fg:w="39"/><text x="64.2660%" y="1823.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (19 samples, 0.02%)</title><rect x="64.0420%" y="1797" width="0.0247%" height="15" fill="rgb(217,33,46)" fg:x="49320" fg:w="19"/><text x="64.2920%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (19 samples, 0.02%)</title><rect x="64.0420%" y="1781" width="0.0247%" height="15" fill="rgb(232,150,33)" fg:x="49320" fg:w="19"/><text x="64.2920%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19 samples, 0.02%)</title><rect x="64.0420%" y="1765" width="0.0247%" height="15" fill="rgb(233,76,25)" fg:x="49320" fg:w="19"/><text x="64.2920%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.01%)</title><rect x="64.0563%" y="1749" width="0.0104%" height="15" fill="rgb(254,219,23)" fg:x="49331" fg:w="8"/><text x="64.3063%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="64.0563%" y="1733" width="0.0104%" height="15" fill="rgb(233,108,4)" fg:x="49331" fg:w="8"/><text x="64.3063%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="64.0563%" y="1717" width="0.0104%" height="15" fill="rgb(229,98,6)" fg:x="49331" fg:w="8"/><text x="64.3063%" y="1727.50"></text></g><g><title>cfree (21 samples, 0.03%)</title><rect x="64.1160%" y="1701" width="0.0273%" height="15" fill="rgb(217,40,27)" fg:x="49377" fg:w="21"/><text x="64.3660%" y="1711.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="64.1290%" y="1685" width="0.0143%" height="15" fill="rgb(221,35,43)" fg:x="49387" fg:w="11"/><text x="64.3790%" y="1695.50"></text></g><g><title>cfree (27 samples, 0.04%)</title><rect x="64.1965%" y="1685" width="0.0351%" height="15" fill="rgb(212,107,11)" fg:x="49439" fg:w="27"/><text x="64.4465%" y="1695.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="64.1991%" y="1669" width="0.0325%" height="15" fill="rgb(245,42,44)" fg:x="49441" fg:w="25"/><text x="64.4491%" y="1679.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="64.2705%" y="1429" width="0.0117%" height="15" fill="rgb(209,31,12)" fg:x="49496" fg:w="9"/><text x="64.5205%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (23 samples, 0.03%)</title><rect x="64.2679%" y="1445" width="0.0299%" height="15" fill="rgb(210,228,54)" fg:x="49494" fg:w="23"/><text x="64.5179%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="64.2822%" y="1429" width="0.0156%" height="15" fill="rgb(241,19,33)" fg:x="49505" fg:w="12"/><text x="64.5322%" y="1439.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="64.2822%" y="1413" width="0.0156%" height="15" fill="rgb(229,51,27)" fg:x="49505" fg:w="12"/><text x="64.5322%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="64.2861%" y="1397" width="0.0117%" height="15" fill="rgb(214,167,49)" fg:x="49508" fg:w="9"/><text x="64.5361%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="64.2861%" y="1381" width="0.0117%" height="15" fill="rgb(248,140,47)" fg:x="49508" fg:w="9"/><text x="64.5361%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (9 samples, 0.01%)</title><rect x="64.2861%" y="1365" width="0.0117%" height="15" fill="rgb(228,6,51)" fg:x="49508" fg:w="9"/><text x="64.5361%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="64.2861%" y="1349" width="0.0117%" height="15" fill="rgb(242,44,53)" fg:x="49508" fg:w="9"/><text x="64.5361%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (9 samples, 0.01%)</title><rect x="64.2861%" y="1333" width="0.0117%" height="15" fill="rgb(249,90,50)" fg:x="49508" fg:w="9"/><text x="64.5361%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (8 samples, 0.01%)</title><rect x="64.2874%" y="1317" width="0.0104%" height="15" fill="rgb(222,84,19)" fg:x="49509" fg:w="8"/><text x="64.5374%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (44 samples, 0.06%)</title><rect x="64.2471%" y="1573" width="0.0571%" height="15" fill="rgb(214,140,12)" fg:x="49478" fg:w="44"/><text x="64.4971%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (36 samples, 0.05%)</title><rect x="64.2575%" y="1557" width="0.0467%" height="15" fill="rgb(210,20,43)" fg:x="49486" fg:w="36"/><text x="64.5075%" y="1567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.05%)</title><rect x="64.2575%" y="1541" width="0.0467%" height="15" fill="rgb(243,1,40)" fg:x="49486" fg:w="36"/><text x="64.5075%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (32 samples, 0.04%)</title><rect x="64.2627%" y="1525" width="0.0416%" height="15" fill="rgb(224,102,26)" fg:x="49490" fg:w="32"/><text x="64.5127%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (32 samples, 0.04%)</title><rect x="64.2627%" y="1509" width="0.0416%" height="15" fill="rgb(221,179,1)" fg:x="49490" fg:w="32"/><text x="64.5127%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (32 samples, 0.04%)</title><rect x="64.2627%" y="1493" width="0.0416%" height="15" fill="rgb(216,209,47)" fg:x="49490" fg:w="32"/><text x="64.5127%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.04%)</title><rect x="64.2627%" y="1477" width="0.0416%" height="15" fill="rgb(251,135,9)" fg:x="49490" fg:w="32"/><text x="64.5127%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (32 samples, 0.04%)</title><rect x="64.2627%" y="1461" width="0.0416%" height="15" fill="rgb(242,9,36)" fg:x="49490" fg:w="32"/><text x="64.5127%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (130 samples, 0.17%)</title><rect x="64.1433%" y="1701" width="0.1688%" height="15" fill="rgb(249,60,37)" fg:x="49398" fg:w="130"/><text x="64.3933%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (62 samples, 0.08%)</title><rect x="64.2315%" y="1685" width="0.0805%" height="15" fill="rgb(230,66,45)" fg:x="49466" fg:w="62"/><text x="64.4815%" y="1695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.08%)</title><rect x="64.2315%" y="1669" width="0.0805%" height="15" fill="rgb(216,1,47)" fg:x="49466" fg:w="62"/><text x="64.4815%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (54 samples, 0.07%)</title><rect x="64.2419%" y="1653" width="0.0701%" height="15" fill="rgb(235,8,23)" fg:x="49474" fg:w="54"/><text x="64.4919%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (53 samples, 0.07%)</title><rect x="64.2432%" y="1637" width="0.0688%" height="15" fill="rgb(225,136,11)" fg:x="49475" fg:w="53"/><text x="64.4932%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (53 samples, 0.07%)</title><rect x="64.2432%" y="1621" width="0.0688%" height="15" fill="rgb(228,63,44)" fg:x="49475" fg:w="53"/><text x="64.4932%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.07%)</title><rect x="64.2432%" y="1605" width="0.0688%" height="15" fill="rgb(240,43,52)" fg:x="49475" fg:w="53"/><text x="64.4932%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (53 samples, 0.07%)</title><rect x="64.2432%" y="1589" width="0.0688%" height="15" fill="rgb(217,167,36)" fg:x="49475" fg:w="53"/><text x="64.4932%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.22%)</title><rect x="64.1043%" y="1733" width="0.2246%" height="15" fill="rgb(250,19,6)" fg:x="49368" fg:w="173"/><text x="64.3543%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (169 samples, 0.22%)</title><rect x="64.1095%" y="1717" width="0.2194%" height="15" fill="rgb(236,60,51)" fg:x="49372" fg:w="169"/><text x="64.3595%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (13 samples, 0.02%)</title><rect x="64.3121%" y="1701" width="0.0169%" height="15" fill="rgb(222,217,20)" fg:x="49528" fg:w="13"/><text x="64.5621%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 0.25%)</title><rect x="64.0900%" y="1797" width="0.2506%" height="15" fill="rgb(242,65,52)" fg:x="49357" fg:w="193"/><text x="64.3400%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (183 samples, 0.24%)</title><rect x="64.1030%" y="1781" width="0.2376%" height="15" fill="rgb(217,5,41)" fg:x="49367" fg:w="183"/><text x="64.3530%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (182 samples, 0.24%)</title><rect x="64.1043%" y="1765" width="0.2363%" height="15" fill="rgb(223,208,53)" fg:x="49368" fg:w="182"/><text x="64.3543%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (182 samples, 0.24%)</title><rect x="64.1043%" y="1749" width="0.2363%" height="15" fill="rgb(221,104,30)" fg:x="49368" fg:w="182"/><text x="64.3543%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (9 samples, 0.01%)</title><rect x="64.3289%" y="1733" width="0.0117%" height="15" fill="rgb(230,210,42)" fg:x="49541" fg:w="9"/><text x="64.5789%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="64.3289%" y="1717" width="0.0117%" height="15" fill="rgb(206,205,27)" fg:x="49541" fg:w="9"/><text x="64.5789%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="64.3289%" y="1701" width="0.0117%" height="15" fill="rgb(233,114,38)" fg:x="49541" fg:w="9"/><text x="64.5789%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="64.3289%" y="1685" width="0.0117%" height="15" fill="rgb(216,174,36)" fg:x="49541" fg:w="9"/><text x="64.5789%" y="1695.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="64.3302%" y="1669" width="0.0104%" height="15" fill="rgb(211,30,9)" fg:x="49542" fg:w="8"/><text x="64.5802%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (211 samples, 0.27%)</title><rect x="64.0887%" y="1813" width="0.2740%" height="15" fill="rgb(216,8,21)" fg:x="49356" fg:w="211"/><text x="64.3387%" y="1823.50"></text></g><g><title>cfree (15 samples, 0.02%)</title><rect x="64.3432%" y="1797" width="0.0195%" height="15" fill="rgb(237,209,39)" fg:x="49552" fg:w="15"/><text x="64.5932%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="64.3627%" y="1781" width="0.0221%" height="15" fill="rgb(235,111,47)" fg:x="49567" fg:w="17"/><text x="64.6127%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="64.3627%" y="1765" width="0.0221%" height="15" fill="rgb(216,139,9)" fg:x="49567" fg:w="17"/><text x="64.6127%" y="1775.50"></text></g><g><title>cfree (16 samples, 0.02%)</title><rect x="64.3640%" y="1749" width="0.0208%" height="15" fill="rgb(248,185,4)" fg:x="49568" fg:w="16"/><text x="64.6140%" y="1759.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="64.3718%" y="1733" width="0.0130%" height="15" fill="rgb(239,185,25)" fg:x="49574" fg:w="10"/><text x="64.6218%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::into_effect (246 samples, 0.32%)</title><rect x="64.0666%" y="1845" width="0.3194%" height="15" fill="rgb(233,207,8)" fg:x="49339" fg:w="246"/><text x="64.3166%" y="1855.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::into_effect (235 samples, 0.31%)</title><rect x="64.0809%" y="1829" width="0.3051%" height="15" fill="rgb(249,220,24)" fg:x="49350" fg:w="235"/><text x="64.3309%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;move_vm_types::values::values_impl::GlobalDataStatus&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="64.3627%" y="1813" width="0.0234%" height="15" fill="rgb(221,50,14)" fg:x="49567" fg:w="18"/><text x="64.6127%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="64.3627%" y="1797" width="0.0234%" height="15" fill="rgb(227,79,42)" fg:x="49567" fg:w="18"/><text x="64.6127%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (17 samples, 0.02%)</title><rect x="64.4562%" y="1717" width="0.0221%" height="15" fill="rgb(228,218,49)" fg:x="49639" fg:w="17"/><text x="64.7062%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (17 samples, 0.02%)</title><rect x="64.4562%" y="1701" width="0.0221%" height="15" fill="rgb(249,18,15)" fg:x="49639" fg:w="17"/><text x="64.7062%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (21 samples, 0.03%)</title><rect x="64.4523%" y="1733" width="0.0273%" height="15" fill="rgb(212,84,27)" fg:x="49636" fg:w="21"/><text x="64.7023%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_seq (12 samples, 0.02%)</title><rect x="64.4887%" y="1701" width="0.0156%" height="15" fill="rgb(207,83,24)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1711.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (12 samples, 0.02%)</title><rect x="64.4887%" y="1685" width="0.0156%" height="15" fill="rgb(219,61,7)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1695.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (12 samples, 0.02%)</title><rect x="64.4887%" y="1669" width="0.0156%" height="15" fill="rgb(211,43,29)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1679.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="64.4887%" y="1653" width="0.0156%" height="15" fill="rgb(243,15,23)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="64.4887%" y="1637" width="0.0156%" height="15" fill="rgb(217,52,28)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="64.4887%" y="1621" width="0.0156%" height="15" fill="rgb(210,35,6)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="64.4887%" y="1605" width="0.0156%" height="15" fill="rgb(237,187,28)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="64.4887%" y="1589" width="0.0156%" height="15" fill="rgb(231,136,24)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="64.4887%" y="1573" width="0.0156%" height="15" fill="rgb(205,176,52)" fg:x="49664" fg:w="12"/><text x="64.7387%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="64.4899%" y="1557" width="0.0143%" height="15" fill="rgb(218,65,12)" fg:x="49665" fg:w="11"/><text x="64.7399%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (53 samples, 0.07%)</title><rect x="64.5094%" y="1509" width="0.0688%" height="15" fill="rgb(234,101,21)" fg:x="49680" fg:w="53"/><text x="64.7594%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (53 samples, 0.07%)</title><rect x="64.5094%" y="1493" width="0.0688%" height="15" fill="rgb(206,13,20)" fg:x="49680" fg:w="53"/><text x="64.7594%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (46 samples, 0.06%)</title><rect x="64.5185%" y="1477" width="0.0597%" height="15" fill="rgb(236,89,44)" fg:x="49687" fg:w="46"/><text x="64.7685%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (45 samples, 0.06%)</title><rect x="64.5198%" y="1461" width="0.0584%" height="15" fill="rgb(225,52,17)" fg:x="49688" fg:w="45"/><text x="64.7698%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.06%)</title><rect x="64.5224%" y="1445" width="0.0558%" height="15" fill="rgb(214,27,25)" fg:x="49690" fg:w="43"/><text x="64.7724%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (39 samples, 0.05%)</title><rect x="64.5276%" y="1429" width="0.0506%" height="15" fill="rgb(240,141,35)" fg:x="49694" fg:w="39"/><text x="64.7776%" y="1439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (39 samples, 0.05%)</title><rect x="64.5276%" y="1413" width="0.0506%" height="15" fill="rgb(216,126,3)" fg:x="49694" fg:w="39"/><text x="64.7776%" y="1423.50"></text></g><g><title>alloc::alloc::realloc (39 samples, 0.05%)</title><rect x="64.5276%" y="1397" width="0.0506%" height="15" fill="rgb(249,196,23)" fg:x="49694" fg:w="39"/><text x="64.7776%" y="1407.50"></text></g><g><title>realloc (37 samples, 0.05%)</title><rect x="64.5302%" y="1381" width="0.0480%" height="15" fill="rgb(215,185,43)" fg:x="49696" fg:w="37"/><text x="64.7802%" y="1391.50"></text></g><g><title>[libc.so.6] (28 samples, 0.04%)</title><rect x="64.5419%" y="1365" width="0.0364%" height="15" fill="rgb(208,194,36)" fg:x="49705" fg:w="28"/><text x="64.7919%" y="1375.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="64.5575%" y="1349" width="0.0208%" height="15" fill="rgb(245,182,12)" fg:x="49717" fg:w="16"/><text x="64.8075%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (136 samples, 0.18%)</title><rect x="64.4030%" y="1765" width="0.1766%" height="15" fill="rgb(244,222,52)" fg:x="49598" fg:w="136"/><text x="64.6530%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (136 samples, 0.18%)</title><rect x="64.4030%" y="1749" width="0.1766%" height="15" fill="rgb(236,222,51)" fg:x="49598" fg:w="136"/><text x="64.6530%" y="1759.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (75 samples, 0.10%)</title><rect x="64.4822%" y="1733" width="0.0974%" height="15" fill="rgb(254,71,22)" fg:x="49659" fg:w="75"/><text x="64.7322%" y="1743.50"></text></g><g><title>serde::ser::Serializer::collect_seq (75 samples, 0.10%)</title><rect x="64.4822%" y="1717" width="0.0974%" height="15" fill="rgb(250,104,15)" fg:x="49659" fg:w="75"/><text x="64.7322%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (58 samples, 0.08%)</title><rect x="64.5042%" y="1701" width="0.0753%" height="15" fill="rgb(229,223,46)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (58 samples, 0.08%)</title><rect x="64.5042%" y="1685" width="0.0753%" height="15" fill="rgb(209,129,18)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (58 samples, 0.08%)</title><rect x="64.5042%" y="1669" width="0.0753%" height="15" fill="rgb(224,160,1)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1679.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (58 samples, 0.08%)</title><rect x="64.5042%" y="1653" width="0.0753%" height="15" fill="rgb(237,112,21)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (58 samples, 0.08%)</title><rect x="64.5042%" y="1637" width="0.0753%" height="15" fill="rgb(215,198,53)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1647.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (58 samples, 0.08%)</title><rect x="64.5042%" y="1621" width="0.0753%" height="15" fill="rgb(218,227,35)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (58 samples, 0.08%)</title><rect x="64.5042%" y="1605" width="0.0753%" height="15" fill="rgb(232,121,22)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (58 samples, 0.08%)</title><rect x="64.5042%" y="1589" width="0.0753%" height="15" fill="rgb(235,52,54)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1599.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (58 samples, 0.08%)</title><rect x="64.5042%" y="1573" width="0.0753%" height="15" fill="rgb(219,21,44)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (58 samples, 0.08%)</title><rect x="64.5042%" y="1557" width="0.0753%" height="15" fill="rgb(221,51,43)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (58 samples, 0.08%)</title><rect x="64.5042%" y="1541" width="0.0753%" height="15" fill="rgb(225,77,42)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (58 samples, 0.08%)</title><rect x="64.5042%" y="1525" width="0.0753%" height="15" fill="rgb(214,117,53)" fg:x="49676" fg:w="58"/><text x="64.7542%" y="1535.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (140 samples, 0.18%)</title><rect x="64.4004%" y="1781" width="0.1818%" height="15" fill="rgb(218,227,27)" fg:x="49596" fg:w="140"/><text x="64.6504%" y="1791.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::finish (4,282 samples, 5.56%)</title><rect x="59.0246%" y="1893" width="5.5602%" height="15" fill="rgb(223,214,36)" fg:x="45456" fg:w="4282"/><text x="59.2746%" y="1903.50">aptos_v..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (1,284 samples, 1.67%)</title><rect x="62.9175%" y="1877" width="1.6673%" height="15" fill="rgb(235,21,7)" fg:x="48454" fg:w="1284"/><text x="63.1675%" y="1887.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (1,272 samples, 1.65%)</title><rect x="62.9330%" y="1861" width="1.6517%" height="15" fill="rgb(244,216,4)" fg:x="48466" fg:w="1272"/><text x="63.1830%" y="1871.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (153 samples, 0.20%)</title><rect x="64.3861%" y="1845" width="0.1987%" height="15" fill="rgb(249,197,24)" fg:x="49585" fg:w="153"/><text x="64.6361%" y="1855.50"></text></g><g><title>bcs::ser::to_bytes (146 samples, 0.19%)</title><rect x="64.3952%" y="1829" width="0.1896%" height="15" fill="rgb(222,169,49)" fg:x="49592" fg:w="146"/><text x="64.6452%" y="1839.50"></text></g><g><title>bcs::ser::serialize_into (145 samples, 0.19%)</title><rect x="64.3965%" y="1813" width="0.1883%" height="15" fill="rgb(207,137,33)" fg:x="49593" fg:w="145"/><text x="64.6465%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (145 samples, 0.19%)</title><rect x="64.3965%" y="1797" width="0.1883%" height="15" fill="rgb(219,180,40)" fg:x="49593" fg:w="145"/><text x="64.6465%" y="1807.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn_meta (25 samples, 0.03%)</title><rect x="64.5847%" y="1893" width="0.0325%" height="15" fill="rgb(250,163,42)" fg:x="49738" fg:w="25"/><text x="64.8347%" y="1903.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::max_gas_amount (10 samples, 0.01%)</title><rect x="64.6172%" y="1893" width="0.0130%" height="15" fill="rgb(239,163,0)" fg:x="49763" fg:w="10"/><text x="64.8672%" y="1903.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::success_transaction_cleanup (15,162 samples, 19.69%)</title><rect x="44.9709%" y="1909" width="19.6878%" height="15" fill="rgb(252,38,28)" fg:x="34633" fg:w="15162"/><text x="45.2209%" y="1919.50">aptos_vm::aptos_vm::AptosVM::su..</text></g><g><title>move_core_types::gas_algebra::apply_ratio_round_down (11 samples, 0.01%)</title><rect x="64.6445%" y="1893" width="0.0143%" height="15" fill="rgb(254,203,26)" fg:x="49784" fg:w="11"/><text x="64.8945%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (9 samples, 0.01%)</title><rect x="64.6601%" y="1717" width="0.0117%" height="15" fill="rgb(209,129,32)" fg:x="49796" fg:w="9"/><text x="64.9101%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.02%)</title><rect x="64.7107%" y="1413" width="0.0247%" height="15" fill="rgb(207,177,52)" fg:x="49835" fg:w="19"/><text x="64.9607%" y="1423.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.02%)</title><rect x="64.7107%" y="1397" width="0.0247%" height="15" fill="rgb(230,209,36)" fg:x="49835" fg:w="19"/><text x="64.9607%" y="1407.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.02%)</title><rect x="64.7107%" y="1381" width="0.0247%" height="15" fill="rgb(238,131,0)" fg:x="49835" fg:w="19"/><text x="64.9607%" y="1391.50"></text></g><g><title>realloc (17 samples, 0.02%)</title><rect x="64.7133%" y="1365" width="0.0221%" height="15" fill="rgb(218,61,31)" fg:x="49837" fg:w="17"/><text x="64.9633%" y="1375.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="64.7224%" y="1349" width="0.0130%" height="15" fill="rgb(232,6,53)" fg:x="49844" fg:w="10"/><text x="64.9724%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.03%)</title><rect x="64.7094%" y="1429" width="0.0338%" height="15" fill="rgb(254,100,32)" fg:x="49834" fg:w="26"/><text x="64.9594%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (36 samples, 0.05%)</title><rect x="64.6977%" y="1493" width="0.0467%" height="15" fill="rgb(229,194,49)" fg:x="49825" fg:w="36"/><text x="64.9477%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.05%)</title><rect x="64.6977%" y="1477" width="0.0467%" height="15" fill="rgb(206,208,39)" fg:x="49825" fg:w="36"/><text x="64.9477%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.04%)</title><rect x="64.7029%" y="1461" width="0.0416%" height="15" fill="rgb(246,226,14)" fg:x="49829" fg:w="32"/><text x="64.9529%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.04%)</title><rect x="64.7068%" y="1445" width="0.0377%" height="15" fill="rgb(226,48,32)" fg:x="49832" fg:w="29"/><text x="64.9568%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (42 samples, 0.05%)</title><rect x="64.6938%" y="1605" width="0.0545%" height="15" fill="rgb(252,43,54)" fg:x="49822" fg:w="42"/><text x="64.9438%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (42 samples, 0.05%)</title><rect x="64.6938%" y="1589" width="0.0545%" height="15" fill="rgb(207,124,0)" fg:x="49822" fg:w="42"/><text x="64.9438%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (42 samples, 0.05%)</title><rect x="64.6938%" y="1573" width="0.0545%" height="15" fill="rgb(248,188,30)" fg:x="49822" fg:w="42"/><text x="64.9438%" y="1583.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (42 samples, 0.05%)</title><rect x="64.6938%" y="1557" width="0.0545%" height="15" fill="rgb(232,14,43)" fg:x="49822" fg:w="42"/><text x="64.9438%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (42 samples, 0.05%)</title><rect x="64.6938%" y="1541" width="0.0545%" height="15" fill="rgb(218,52,29)" fg:x="49822" fg:w="42"/><text x="64.9438%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 0.05%)</title><rect x="64.6938%" y="1525" width="0.0545%" height="15" fill="rgb(218,176,50)" fg:x="49822" fg:w="42"/><text x="64.9438%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (42 samples, 0.05%)</title><rect x="64.6938%" y="1509" width="0.0545%" height="15" fill="rgb(213,112,0)" fg:x="49822" fg:w="42"/><text x="64.9438%" y="1519.50"></text></g><g><title>bcs::ser::to_bytes (52 samples, 0.07%)</title><rect x="64.6847%" y="1701" width="0.0675%" height="15" fill="rgb(244,216,8)" fg:x="49815" fg:w="52"/><text x="64.9347%" y="1711.50"></text></g><g><title>bcs::ser::serialize_into (51 samples, 0.07%)</title><rect x="64.6860%" y="1685" width="0.0662%" height="15" fill="rgb(224,148,53)" fg:x="49816" fg:w="51"/><text x="64.9360%" y="1695.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (51 samples, 0.07%)</title><rect x="64.6860%" y="1669" width="0.0662%" height="15" fill="rgb(241,133,40)" fg:x="49816" fg:w="51"/><text x="64.9360%" y="1679.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (46 samples, 0.06%)</title><rect x="64.6925%" y="1653" width="0.0597%" height="15" fill="rgb(232,17,44)" fg:x="49821" fg:w="46"/><text x="64.9425%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (46 samples, 0.06%)</title><rect x="64.6925%" y="1637" width="0.0597%" height="15" fill="rgb(213,32,25)" fg:x="49821" fg:w="46"/><text x="64.9425%" y="1647.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (45 samples, 0.06%)</title><rect x="64.6938%" y="1621" width="0.0584%" height="15" fill="rgb(249,115,27)" fg:x="49822" fg:w="45"/><text x="64.9438%" y="1631.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args::{{closure}} (73 samples, 0.09%)</title><rect x="64.6601%" y="1733" width="0.0948%" height="15" fill="rgb(241,50,1)" fg:x="49796" fg:w="73"/><text x="64.9101%" y="1743.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (64 samples, 0.08%)</title><rect x="64.6717%" y="1717" width="0.0831%" height="15" fill="rgb(244,175,40)" fg:x="49805" fg:w="64"/><text x="64.9217%" y="1727.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (74 samples, 0.10%)</title><rect x="64.6601%" y="1749" width="0.0961%" height="15" fill="rgb(230,94,34)" fg:x="49796" fg:w="74"/><text x="64.9101%" y="1759.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args (77 samples, 0.10%)</title><rect x="64.6588%" y="1909" width="0.1000%" height="15" fill="rgb(223,185,29)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (77 samples, 0.10%)</title><rect x="64.6588%" y="1893" width="0.1000%" height="15" fill="rgb(225,193,15)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (77 samples, 0.10%)</title><rect x="64.6588%" y="1877" width="0.1000%" height="15" fill="rgb(252,121,38)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (77 samples, 0.10%)</title><rect x="64.6588%" y="1861" width="0.1000%" height="15" fill="rgb(232,44,12)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (77 samples, 0.10%)</title><rect x="64.6588%" y="1845" width="0.1000%" height="15" fill="rgb(226,45,54)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (77 samples, 0.10%)</title><rect x="64.6588%" y="1829" width="0.1000%" height="15" fill="rgb(209,67,17)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (77 samples, 0.10%)</title><rect x="64.6588%" y="1813" width="0.1000%" height="15" fill="rgb(219,108,52)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 0.10%)</title><rect x="64.6588%" y="1797" width="0.1000%" height="15" fill="rgb(216,118,19)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 0.10%)</title><rect x="64.6588%" y="1781" width="0.1000%" height="15" fill="rgb(228,120,40)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (77 samples, 0.10%)</title><rect x="64.6588%" y="1765" width="0.1000%" height="15" fill="rgb(221,218,34)" fg:x="49795" fg:w="77"/><text x="64.9088%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="64.7626%" y="1653" width="0.0117%" height="15" fill="rgb(235,89,14)" fg:x="49875" fg:w="9"/><text x="65.0126%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="64.7626%" y="1637" width="0.0117%" height="15" fill="rgb(248,89,7)" fg:x="49875" fg:w="9"/><text x="65.0126%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (10 samples, 0.01%)</title><rect x="64.7626%" y="1685" width="0.0130%" height="15" fill="rgb(212,114,34)" fg:x="49875" fg:w="10"/><text x="65.0126%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.01%)</title><rect x="64.7626%" y="1669" width="0.0130%" height="15" fill="rgb(246,88,32)" fg:x="49875" fg:w="10"/><text x="65.0126%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="64.7626%" y="1701" width="0.0143%" height="15" fill="rgb(237,135,0)" fg:x="49875" fg:w="11"/><text x="65.0126%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="64.7626%" y="1733" width="0.0182%" height="15" fill="rgb(220,201,54)" fg:x="49875" fg:w="14"/><text x="65.0126%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14 samples, 0.02%)</title><rect x="64.7626%" y="1717" width="0.0182%" height="15" fill="rgb(210,142,36)" fg:x="49875" fg:w="14"/><text x="65.0126%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="64.7821%" y="1685" width="0.0143%" height="15" fill="rgb(247,189,26)" fg:x="49890" fg:w="11"/><text x="65.0321%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.01%)</title><rect x="64.7834%" y="1669" width="0.0130%" height="15" fill="rgb(223,89,24)" fg:x="49891" fg:w="10"/><text x="65.0334%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="64.7808%" y="1733" width="0.0195%" height="15" fill="rgb(205,90,19)" fg:x="49889" fg:w="15"/><text x="65.0308%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (14 samples, 0.02%)</title><rect x="64.7821%" y="1717" width="0.0182%" height="15" fill="rgb(234,57,40)" fg:x="49890" fg:w="14"/><text x="65.0321%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="64.7821%" y="1701" width="0.0182%" height="15" fill="rgb(213,109,10)" fg:x="49890" fg:w="14"/><text x="65.0321%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.05%)</title><rect x="64.7587%" y="1861" width="0.0467%" height="15" fill="rgb(214,189,23)" fg:x="49872" fg:w="36"/><text x="65.0087%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="64.7587%" y="1845" width="0.0467%" height="15" fill="rgb(234,200,10)" fg:x="49872" fg:w="36"/><text x="65.0087%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (36 samples, 0.05%)</title><rect x="64.7587%" y="1829" width="0.0467%" height="15" fill="rgb(221,148,16)" fg:x="49872" fg:w="36"/><text x="65.0087%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (36 samples, 0.05%)</title><rect x="64.7587%" y="1813" width="0.0467%" height="15" fill="rgb(230,115,10)" fg:x="49872" fg:w="36"/><text x="65.0087%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.05%)</title><rect x="64.7587%" y="1797" width="0.0467%" height="15" fill="rgb(220,106,42)" fg:x="49872" fg:w="36"/><text x="65.0087%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="64.7587%" y="1781" width="0.0467%" height="15" fill="rgb(225,105,39)" fg:x="49872" fg:w="36"/><text x="65.0087%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="64.7587%" y="1765" width="0.0467%" height="15" fill="rgb(211,161,38)" fg:x="49872" fg:w="36"/><text x="65.0087%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34 samples, 0.04%)</title><rect x="64.7613%" y="1749" width="0.0441%" height="15" fill="rgb(213,23,19)" fg:x="49874" fg:w="34"/><text x="65.0113%" y="1759.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (9 samples, 0.01%)</title><rect x="64.8133%" y="1829" width="0.0117%" height="15" fill="rgb(240,2,33)" fg:x="49914" fg:w="9"/><text x="65.0633%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.01%)</title><rect x="64.8133%" y="1813" width="0.0117%" height="15" fill="rgb(221,29,45)" fg:x="49914" fg:w="9"/><text x="65.0633%" y="1823.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.01%)</title><rect x="64.8276%" y="1749" width="0.0143%" height="15" fill="rgb(242,10,19)" fg:x="49925" fg:w="11"/><text x="65.0776%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="64.8276%" y="1733" width="0.0143%" height="15" fill="rgb(250,84,37)" fg:x="49925" fg:w="11"/><text x="65.0776%" y="1743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="64.8315%" y="1717" width="0.0104%" height="15" fill="rgb(214,136,7)" fg:x="49928" fg:w="8"/><text x="65.0815%" y="1727.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="64.8315%" y="1701" width="0.0104%" height="15" fill="rgb(231,189,12)" fg:x="49928" fg:w="8"/><text x="65.0815%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (32 samples, 0.04%)</title><rect x="64.8055%" y="1861" width="0.0416%" height="15" fill="rgb(244,40,16)" fg:x="49908" fg:w="32"/><text x="65.0555%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (29 samples, 0.04%)</title><rect x="64.8094%" y="1845" width="0.0377%" height="15" fill="rgb(217,29,15)" fg:x="49911" fg:w="29"/><text x="65.0594%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (15 samples, 0.02%)</title><rect x="64.8276%" y="1829" width="0.0195%" height="15" fill="rgb(235,172,33)" fg:x="49925" fg:w="15"/><text x="65.0776%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (15 samples, 0.02%)</title><rect x="64.8276%" y="1813" width="0.0195%" height="15" fill="rgb(206,148,28)" fg:x="49925" fg:w="15"/><text x="65.0776%" y="1823.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.02%)</title><rect x="64.8276%" y="1797" width="0.0195%" height="15" fill="rgb(251,167,37)" fg:x="49925" fg:w="15"/><text x="65.0776%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.02%)</title><rect x="64.8276%" y="1781" width="0.0195%" height="15" fill="rgb(229,94,52)" fg:x="49925" fg:w="15"/><text x="65.0776%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.02%)</title><rect x="64.8276%" y="1765" width="0.0195%" height="15" fill="rgb(216,132,9)" fg:x="49925" fg:w="15"/><text x="65.0776%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (10 samples, 0.01%)</title><rect x="64.8483%" y="1845" width="0.0130%" height="15" fill="rgb(208,110,29)" fg:x="49941" fg:w="10"/><text x="65.0983%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (10 samples, 0.01%)</title><rect x="64.8483%" y="1829" width="0.0130%" height="15" fill="rgb(241,23,8)" fg:x="49941" fg:w="10"/><text x="65.0983%" y="1839.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="64.8483%" y="1813" width="0.0130%" height="15" fill="rgb(208,26,35)" fg:x="49941" fg:w="10"/><text x="65.0983%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="64.8483%" y="1797" width="0.0130%" height="15" fill="rgb(242,165,34)" fg:x="49941" fg:w="10"/><text x="65.0983%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="64.8483%" y="1781" width="0.0130%" height="15" fill="rgb(222,222,33)" fg:x="49941" fg:w="10"/><text x="65.0983%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.01%)</title><rect x="64.8509%" y="1765" width="0.0104%" height="15" fill="rgb(227,16,52)" fg:x="49943" fg:w="8"/><text x="65.1009%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="64.8509%" y="1749" width="0.0104%" height="15" fill="rgb(213,93,12)" fg:x="49943" fg:w="8"/><text x="65.1009%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="64.8509%" y="1733" width="0.0104%" height="15" fill="rgb(238,41,5)" fg:x="49943" fg:w="8"/><text x="65.1009%" y="1743.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.01%)</title><rect x="64.8626%" y="1781" width="0.0117%" height="15" fill="rgb(211,60,15)" fg:x="49952" fg:w="9"/><text x="65.1126%" y="1791.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="64.8626%" y="1765" width="0.0117%" height="15" fill="rgb(209,11,34)" fg:x="49952" fg:w="9"/><text x="65.1126%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (91 samples, 0.12%)</title><rect x="64.7587%" y="1877" width="0.1182%" height="15" fill="rgb(254,155,53)" fg:x="49872" fg:w="91"/><text x="65.0087%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (23 samples, 0.03%)</title><rect x="64.8470%" y="1861" width="0.0299%" height="15" fill="rgb(236,174,8)" fg:x="49940" fg:w="23"/><text x="65.0970%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (12 samples, 0.02%)</title><rect x="64.8613%" y="1845" width="0.0156%" height="15" fill="rgb(229,31,27)" fg:x="49951" fg:w="12"/><text x="65.1113%" y="1855.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.01%)</title><rect x="64.8626%" y="1829" width="0.0143%" height="15" fill="rgb(242,226,26)" fg:x="49952" fg:w="11"/><text x="65.1126%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.01%)</title><rect x="64.8626%" y="1813" width="0.0143%" height="15" fill="rgb(234,32,40)" fg:x="49952" fg:w="11"/><text x="65.1126%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="64.8626%" y="1797" width="0.0143%" height="15" fill="rgb(249,226,47)" fg:x="49952" fg:w="11"/><text x="65.1126%" y="1807.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (26 samples, 0.03%)</title><rect x="64.8951%" y="1749" width="0.0338%" height="15" fill="rgb(212,6,26)" fg:x="49977" fg:w="26"/><text x="65.1451%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="64.8951%" y="1733" width="0.0338%" height="15" fill="rgb(249,202,29)" fg:x="49977" fg:w="26"/><text x="65.1451%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="64.8951%" y="1717" width="0.0338%" height="15" fill="rgb(226,106,4)" fg:x="49977" fg:w="26"/><text x="65.1451%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.03%)</title><rect x="64.9016%" y="1701" width="0.0273%" height="15" fill="rgb(251,2,27)" fg:x="49982" fg:w="21"/><text x="65.1516%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (18 samples, 0.02%)</title><rect x="64.9055%" y="1685" width="0.0234%" height="15" fill="rgb(236,208,0)" fg:x="49985" fg:w="18"/><text x="65.1555%" y="1695.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (18 samples, 0.02%)</title><rect x="64.9055%" y="1669" width="0.0234%" height="15" fill="rgb(211,66,17)" fg:x="49985" fg:w="18"/><text x="65.1555%" y="1679.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (11 samples, 0.01%)</title><rect x="64.9146%" y="1653" width="0.0143%" height="15" fill="rgb(216,129,9)" fg:x="49992" fg:w="11"/><text x="65.1646%" y="1663.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.01%)</title><rect x="64.9185%" y="1637" width="0.0104%" height="15" fill="rgb(215,130,23)" fg:x="49995" fg:w="8"/><text x="65.1685%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="64.9288%" y="1749" width="0.0130%" height="15" fill="rgb(253,157,11)" fg:x="50003" fg:w="10"/><text x="65.1788%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (59 samples, 0.08%)</title><rect x="64.8769%" y="1861" width="0.0766%" height="15" fill="rgb(224,25,14)" fg:x="49963" fg:w="59"/><text x="65.1269%" y="1871.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (55 samples, 0.07%)</title><rect x="64.8821%" y="1845" width="0.0714%" height="15" fill="rgb(238,16,7)" fg:x="49967" fg:w="55"/><text x="65.1321%" y="1855.50"></text></g><g><title>core::iter::adapters::try_process (55 samples, 0.07%)</title><rect x="64.8821%" y="1829" width="0.0714%" height="15" fill="rgb(228,74,11)" fg:x="49967" fg:w="55"/><text x="65.1321%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (55 samples, 0.07%)</title><rect x="64.8821%" y="1813" width="0.0714%" height="15" fill="rgb(239,221,27)" fg:x="49967" fg:w="55"/><text x="65.1321%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (55 samples, 0.07%)</title><rect x="64.8821%" y="1797" width="0.0714%" height="15" fill="rgb(229,166,18)" fg:x="49967" fg:w="55"/><text x="65.1321%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (55 samples, 0.07%)</title><rect x="64.8821%" y="1781" width="0.0714%" height="15" fill="rgb(254,94,46)" fg:x="49967" fg:w="55"/><text x="65.1321%" y="1791.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (55 samples, 0.07%)</title><rect x="64.8821%" y="1765" width="0.0714%" height="15" fill="rgb(241,79,19)" fg:x="49967" fg:w="55"/><text x="65.1321%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,aptos_gas::gas_meter::AptosGasMeter&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="64.9431%" y="1749" width="0.0104%" height="15" fill="rgb(228,99,51)" fg:x="50014" fg:w="8"/><text x="65.1931%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,move_vm_runtime::runtime::VMRuntime::execute_function_impl&lt;alloc::vec::Vec&lt;u8&gt;,move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt;,aptos_gas::gas_meter::AptosGasMeter&gt;::{{closure}}&gt;&gt; (8 samples, 0.01%)</title><rect x="64.9431%" y="1733" width="0.0104%" height="15" fill="rgb(211,15,6)" fg:x="50014" fg:w="8"/><text x="65.1931%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.01%)</title><rect x="64.9431%" y="1717" width="0.0104%" height="15" fill="rgb(245,107,54)" fg:x="50014" fg:w="8"/><text x="65.1931%" y="1727.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="64.9431%" y="1701" width="0.0104%" height="15" fill="rgb(243,3,2)" fg:x="50014" fg:w="8"/><text x="65.1931%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="64.9535%" y="1733" width="0.0182%" height="15" fill="rgb(206,122,10)" fg:x="50022" fg:w="14"/><text x="65.2035%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="64.9535%" y="1717" width="0.0182%" height="15" fill="rgb(224,88,4)" fg:x="50022" fg:w="14"/><text x="65.2035%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="64.9535%" y="1701" width="0.0182%" height="15" fill="rgb(230,1,41)" fg:x="50022" fg:w="14"/><text x="65.2035%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (14 samples, 0.02%)</title><rect x="64.9535%" y="1685" width="0.0182%" height="15" fill="rgb(230,1,31)" fg:x="50022" fg:w="14"/><text x="65.2035%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (8 samples, 0.01%)</title><rect x="64.9613%" y="1669" width="0.0104%" height="15" fill="rgb(232,67,19)" fg:x="50028" fg:w="8"/><text x="65.2113%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="64.9613%" y="1653" width="0.0104%" height="15" fill="rgb(222,206,20)" fg:x="50028" fg:w="8"/><text x="65.2113%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="64.9613%" y="1637" width="0.0104%" height="15" fill="rgb(217,225,19)" fg:x="50028" fg:w="8"/><text x="65.2113%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="64.9613%" y="1621" width="0.0104%" height="15" fill="rgb(234,13,33)" fg:x="50028" fg:w="8"/><text x="65.2113%" y="1631.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="64.9535%" y="1797" width="0.0286%" height="15" fill="rgb(254,5,1)" fg:x="50022" fg:w="22"/><text x="65.2035%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (22 samples, 0.03%)</title><rect x="64.9535%" y="1781" width="0.0286%" height="15" fill="rgb(211,121,41)" fg:x="50022" fg:w="22"/><text x="65.2035%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (22 samples, 0.03%)</title><rect x="64.9535%" y="1765" width="0.0286%" height="15" fill="rgb(213,199,35)" fg:x="50022" fg:w="22"/><text x="65.2035%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (22 samples, 0.03%)</title><rect x="64.9535%" y="1749" width="0.0286%" height="15" fill="rgb(240,118,22)" fg:x="50022" fg:w="22"/><text x="65.2035%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (23 samples, 0.03%)</title><rect x="64.9535%" y="1813" width="0.0299%" height="15" fill="rgb(238,184,25)" fg:x="50022" fg:w="23"/><text x="65.2035%" y="1823.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="64.9535%" y="1829" width="0.0429%" height="15" fill="rgb(210,165,6)" fg:x="50022" fg:w="33"/><text x="65.2035%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (10 samples, 0.01%)</title><rect x="64.9834%" y="1813" width="0.0130%" height="15" fill="rgb(235,149,5)" fg:x="50045" fg:w="10"/><text x="65.2334%" y="1823.50"></text></g><g><title>core::mem::drop (34 samples, 0.04%)</title><rect x="64.9535%" y="1861" width="0.0441%" height="15" fill="rgb(221,63,5)" fg:x="50022" fg:w="34"/><text x="65.2035%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (34 samples, 0.04%)</title><rect x="64.9535%" y="1845" width="0.0441%" height="15" fill="rgb(250,44,41)" fg:x="50022" fg:w="34"/><text x="65.2035%" y="1855.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="65.1171%" y="1813" width="0.0247%" height="15" fill="rgb(235,112,47)" fg:x="50148" fg:w="19"/><text x="65.3671%" y="1823.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (19 samples, 0.02%)</title><rect x="65.1171%" y="1797" width="0.0247%" height="15" fill="rgb(252,176,34)" fg:x="50148" fg:w="19"/><text x="65.3671%" y="1807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="65.1171%" y="1781" width="0.0247%" height="15" fill="rgb(234,50,19)" fg:x="50148" fg:w="19"/><text x="65.3671%" y="1791.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.02%)</title><rect x="65.1171%" y="1765" width="0.0247%" height="15" fill="rgb(241,195,31)" fg:x="50148" fg:w="19"/><text x="65.3671%" y="1775.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.02%)</title><rect x="65.1171%" y="1749" width="0.0247%" height="15" fill="rgb(212,93,11)" fg:x="50148" fg:w="19"/><text x="65.3671%" y="1759.50"></text></g><g><title>move_core_types::language_storage::ModuleId::address (15 samples, 0.02%)</title><rect x="65.1457%" y="1813" width="0.0195%" height="15" fill="rgb(254,98,51)" fg:x="50170" fg:w="15"/><text x="65.3957%" y="1823.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_call_generic (58 samples, 0.08%)</title><rect x="65.0963%" y="1829" width="0.0753%" height="15" fill="rgb(246,18,45)" fg:x="50132" fg:w="58"/><text x="65.3463%" y="1839.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="65.1756%" y="1781" width="0.0117%" height="15" fill="rgb(215,148,23)" fg:x="50193" fg:w="9"/><text x="65.4256%" y="1791.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (22 samples, 0.03%)</title><rect x="65.1872%" y="1781" width="0.0286%" height="15" fill="rgb(227,22,7)" fg:x="50202" fg:w="22"/><text x="65.4372%" y="1791.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame::{{closure}} (22 samples, 0.03%)</title><rect x="65.1872%" y="1765" width="0.0286%" height="15" fill="rgb(207,210,37)" fg:x="50202" fg:w="22"/><text x="65.4372%" y="1775.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (21 samples, 0.03%)</title><rect x="65.1885%" y="1749" width="0.0273%" height="15" fill="rgb(247,147,42)" fg:x="50203" fg:w="21"/><text x="65.4385%" y="1759.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.04%)</title><rect x="65.2158%" y="1765" width="0.0351%" height="15" fill="rgb(226,213,14)" fg:x="50224" fg:w="27"/><text x="65.4658%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.09%)</title><rect x="65.1730%" y="1813" width="0.0870%" height="15" fill="rgb(223,18,10)" fg:x="50191" fg:w="67"/><text x="65.4230%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (66 samples, 0.09%)</title><rect x="65.1743%" y="1797" width="0.0857%" height="15" fill="rgb(253,34,22)" fg:x="50192" fg:w="66"/><text x="65.4243%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (34 samples, 0.04%)</title><rect x="65.2158%" y="1781" width="0.0441%" height="15" fill="rgb(222,90,31)" fg:x="50224" fg:w="34"/><text x="65.4658%" y="1791.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (69 samples, 0.09%)</title><rect x="65.1717%" y="1829" width="0.0896%" height="15" fill="rgb(220,182,30)" fg:x="50190" fg:w="69"/><text x="65.4217%" y="1839.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="65.2639%" y="1829" width="0.0234%" height="15" fill="rgb(229,170,12)" fg:x="50261" fg:w="18"/><text x="65.5139%" y="1839.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="65.2768%" y="1813" width="0.0104%" height="15" fill="rgb(210,101,21)" fg:x="50271" fg:w="8"/><text x="65.5268%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (9 samples, 0.01%)</title><rect x="65.2872%" y="1829" width="0.0117%" height="15" fill="rgb(237,177,31)" fg:x="50279" fg:w="9"/><text x="65.5372%" y="1839.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="65.3132%" y="1765" width="0.0143%" height="15" fill="rgb(215,91,34)" fg:x="50299" fg:w="11"/><text x="65.5632%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.05%)</title><rect x="65.3015%" y="1813" width="0.0493%" height="15" fill="rgb(229,206,16)" fg:x="50290" fg:w="38"/><text x="65.5515%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (35 samples, 0.05%)</title><rect x="65.3054%" y="1797" width="0.0454%" height="15" fill="rgb(235,207,10)" fg:x="50293" fg:w="35"/><text x="65.5554%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (32 samples, 0.04%)</title><rect x="65.3093%" y="1781" width="0.0416%" height="15" fill="rgb(247,18,10)" fg:x="50296" fg:w="32"/><text x="65.5593%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (18 samples, 0.02%)</title><rect x="65.3275%" y="1765" width="0.0234%" height="15" fill="rgb(232,4,6)" fg:x="50310" fg:w="18"/><text x="65.5775%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (11 samples, 0.01%)</title><rect x="65.3366%" y="1749" width="0.0143%" height="15" fill="rgb(247,93,45)" fg:x="50317" fg:w="11"/><text x="65.5866%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (52 samples, 0.07%)</title><rect x="65.3015%" y="1829" width="0.0675%" height="15" fill="rgb(240,181,18)" fg:x="50290" fg:w="52"/><text x="65.5515%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (14 samples, 0.02%)</title><rect x="65.3509%" y="1813" width="0.0182%" height="15" fill="rgb(208,224,0)" fg:x="50328" fg:w="14"/><text x="65.6009%" y="1823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="65.3509%" y="1797" width="0.0182%" height="15" fill="rgb(224,207,54)" fg:x="50328" fg:w="14"/><text x="65.6009%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="65.3535%" y="1781" width="0.0156%" height="15" fill="rgb(217,152,29)" fg:x="50330" fg:w="12"/><text x="65.6035%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="65.3535%" y="1765" width="0.0156%" height="15" fill="rgb(243,78,27)" fg:x="50330" fg:w="12"/><text x="65.6035%" y="1775.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="65.3573%" y="1749" width="0.0117%" height="15" fill="rgb(228,111,9)" fg:x="50333" fg:w="9"/><text x="65.6073%" y="1759.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="65.4275%" y="1749" width="0.0169%" height="15" fill="rgb(230,213,21)" fg:x="50387" fg:w="13"/><text x="65.6775%" y="1759.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="65.4327%" y="1733" width="0.0117%" height="15" fill="rgb(248,50,36)" fg:x="50391" fg:w="9"/><text x="65.6827%" y="1743.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="65.4586%" y="1733" width="0.0156%" height="15" fill="rgb(226,19,31)" fg:x="50411" fg:w="12"/><text x="65.7086%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.11%)</title><rect x="65.3898%" y="1797" width="0.1078%" height="15" fill="rgb(205,132,21)" fg:x="50358" fg:w="83"/><text x="65.6398%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (82 samples, 0.11%)</title><rect x="65.3911%" y="1781" width="0.1065%" height="15" fill="rgb(207,42,19)" fg:x="50359" fg:w="82"/><text x="65.6411%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (78 samples, 0.10%)</title><rect x="65.3963%" y="1765" width="0.1013%" height="15" fill="rgb(229,69,35)" fg:x="50363" fg:w="78"/><text x="65.6463%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (41 samples, 0.05%)</title><rect x="65.4443%" y="1749" width="0.0532%" height="15" fill="rgb(226,96,11)" fg:x="50400" fg:w="41"/><text x="65.6943%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (18 samples, 0.02%)</title><rect x="65.4742%" y="1733" width="0.0234%" height="15" fill="rgb(236,133,54)" fg:x="50423" fg:w="18"/><text x="65.7242%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="65.4976%" y="1765" width="0.0143%" height="15" fill="rgb(247,166,21)" fg:x="50441" fg:w="11"/><text x="65.7476%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="65.4976%" y="1749" width="0.0143%" height="15" fill="rgb(220,132,12)" fg:x="50441" fg:w="11"/><text x="65.7476%" y="1759.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="65.4976%" y="1733" width="0.0143%" height="15" fill="rgb(233,27,30)" fg:x="50441" fg:w="11"/><text x="65.7476%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (96 samples, 0.12%)</title><rect x="65.3898%" y="1813" width="0.1247%" height="15" fill="rgb(246,161,27)" fg:x="50358" fg:w="96"/><text x="65.6398%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (13 samples, 0.02%)</title><rect x="65.4976%" y="1797" width="0.0169%" height="15" fill="rgb(240,56,3)" fg:x="50441" fg:w="13"/><text x="65.7476%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="65.4976%" y="1781" width="0.0169%" height="15" fill="rgb(242,190,9)" fg:x="50441" fg:w="13"/><text x="65.7476%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Locals as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="65.5145%" y="1797" width="0.0195%" height="15" fill="rgb(234,3,52)" fg:x="50454" fg:w="15"/><text x="65.7645%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="65.5482%" y="1717" width="0.0156%" height="15" fill="rgb(220,221,19)" fg:x="50480" fg:w="12"/><text x="65.7982%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (12 samples, 0.02%)</title><rect x="65.5482%" y="1701" width="0.0156%" height="15" fill="rgb(247,178,30)" fg:x="50480" fg:w="12"/><text x="65.7982%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (9 samples, 0.01%)</title><rect x="65.5521%" y="1685" width="0.0117%" height="15" fill="rgb(234,212,27)" fg:x="50483" fg:w="9"/><text x="65.8021%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.04%)</title><rect x="65.5638%" y="1685" width="0.0377%" height="15" fill="rgb(226,199,38)" fg:x="50492" fg:w="29"/><text x="65.8138%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.04%)</title><rect x="65.5638%" y="1669" width="0.0377%" height="15" fill="rgb(248,114,22)" fg:x="50492" fg:w="29"/><text x="65.8138%" y="1679.50"></text></g><g><title>cfree (26 samples, 0.03%)</title><rect x="65.5677%" y="1653" width="0.0338%" height="15" fill="rgb(221,180,4)" fg:x="50495" fg:w="26"/><text x="65.8177%" y="1663.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="65.5911%" y="1637" width="0.0104%" height="15" fill="rgb(220,229,24)" fg:x="50513" fg:w="8"/><text x="65.8411%" y="1647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.07%)</title><rect x="65.5352%" y="1781" width="0.0714%" height="15" fill="rgb(226,184,27)" fg:x="50470" fg:w="55"/><text x="65.7852%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (45 samples, 0.06%)</title><rect x="65.5482%" y="1765" width="0.0584%" height="15" fill="rgb(232,99,15)" fg:x="50480" fg:w="45"/><text x="65.7982%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (45 samples, 0.06%)</title><rect x="65.5482%" y="1749" width="0.0584%" height="15" fill="rgb(250,167,16)" fg:x="50480" fg:w="45"/><text x="65.7982%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (45 samples, 0.06%)</title><rect x="65.5482%" y="1733" width="0.0584%" height="15" fill="rgb(243,113,6)" fg:x="50480" fg:w="45"/><text x="65.7982%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (33 samples, 0.04%)</title><rect x="65.5638%" y="1717" width="0.0429%" height="15" fill="rgb(244,147,52)" fg:x="50492" fg:w="33"/><text x="65.8138%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="65.5638%" y="1701" width="0.0429%" height="15" fill="rgb(235,59,50)" fg:x="50492" fg:w="33"/><text x="65.8138%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (188 samples, 0.24%)</title><rect x="65.3794%" y="1829" width="0.2441%" height="15" fill="rgb(250,188,6)" fg:x="50350" fg:w="188"/><text x="65.6294%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (84 samples, 0.11%)</title><rect x="65.5145%" y="1813" width="0.1091%" height="15" fill="rgb(236,173,11)" fg:x="50454" fg:w="84"/><text x="65.7645%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (69 samples, 0.09%)</title><rect x="65.5339%" y="1797" width="0.0896%" height="15" fill="rgb(233,64,3)" fg:x="50469" fg:w="69"/><text x="65.7839%" y="1807.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="65.6067%" y="1781" width="0.0169%" height="15" fill="rgb(207,92,7)" fg:x="50525" fg:w="13"/><text x="65.8567%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (25 samples, 0.03%)</title><rect x="65.6235%" y="1829" width="0.0325%" height="15" fill="rgb(221,30,19)" fg:x="50538" fg:w="25"/><text x="65.8735%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (25 samples, 0.03%)</title><rect x="65.6235%" y="1813" width="0.0325%" height="15" fill="rgb(245,22,49)" fg:x="50538" fg:w="25"/><text x="65.8735%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (24 samples, 0.03%)</title><rect x="65.6248%" y="1797" width="0.0312%" height="15" fill="rgb(218,39,20)" fg:x="50539" fg:w="24"/><text x="65.8748%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.03%)</title><rect x="65.6248%" y="1781" width="0.0312%" height="15" fill="rgb(222,144,21)" fg:x="50539" fg:w="24"/><text x="65.8748%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.01%)</title><rect x="65.6456%" y="1765" width="0.0104%" height="15" fill="rgb(222,78,51)" fg:x="50555" fg:w="8"/><text x="65.8956%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.01%)</title><rect x="65.6456%" y="1749" width="0.0104%" height="15" fill="rgb(248,213,53)" fg:x="50555" fg:w="8"/><text x="65.8956%" y="1759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="65.6651%" y="1797" width="0.0130%" height="15" fill="rgb(245,28,34)" fg:x="50570" fg:w="10"/><text x="65.9151%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="65.6664%" y="1781" width="0.0117%" height="15" fill="rgb(229,186,26)" fg:x="50571" fg:w="9"/><text x="65.9164%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="65.6677%" y="1765" width="0.0104%" height="15" fill="rgb(224,0,41)" fg:x="50572" fg:w="8"/><text x="65.9177%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (8 samples, 0.01%)</title><rect x="65.6677%" y="1749" width="0.0104%" height="15" fill="rgb(223,136,51)" fg:x="50572" fg:w="8"/><text x="65.9177%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (22 samples, 0.03%)</title><rect x="65.6560%" y="1829" width="0.0286%" height="15" fill="rgb(234,50,9)" fg:x="50563" fg:w="22"/><text x="65.9060%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="65.6651%" y="1813" width="0.0195%" height="15" fill="rgb(242,164,20)" fg:x="50570" fg:w="15"/><text x="65.9151%" y="1823.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (29 samples, 0.04%)</title><rect x="65.6846%" y="1829" width="0.0377%" height="15" fill="rgb(230,169,22)" fg:x="50585" fg:w="29"/><text x="65.9346%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (11 samples, 0.01%)</title><rect x="65.7235%" y="1829" width="0.0143%" height="15" fill="rgb(228,82,26)" fg:x="50615" fg:w="11"/><text x="65.9735%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (9 samples, 0.01%)</title><rect x="65.7261%" y="1813" width="0.0117%" height="15" fill="rgb(244,220,31)" fg:x="50617" fg:w="9"/><text x="65.9761%" y="1823.50"></text></g><g><title>core::ptr::read (9 samples, 0.01%)</title><rect x="65.7261%" y="1797" width="0.0117%" height="15" fill="rgb(214,35,25)" fg:x="50617" fg:w="9"/><text x="65.9761%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (9 samples, 0.01%)</title><rect x="65.7261%" y="1781" width="0.0117%" height="15" fill="rgb(245,162,54)" fg:x="50617" fg:w="9"/><text x="65.9761%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (18 samples, 0.02%)</title><rect x="65.7378%" y="1829" width="0.0234%" height="15" fill="rgb(210,43,24)" fg:x="50626" fg:w="18"/><text x="65.9878%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="65.7469%" y="1813" width="0.0143%" height="15" fill="rgb(226,145,51)" fg:x="50633" fg:w="11"/><text x="65.9969%" y="1823.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (18 samples, 0.02%)</title><rect x="65.7651%" y="1813" width="0.0234%" height="15" fill="rgb(237,52,53)" fg:x="50647" fg:w="18"/><text x="66.0151%" y="1823.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.03%)</title><rect x="66.4351%" y="1749" width="0.0312%" height="15" fill="rgb(216,226,7)" fg:x="51163" fg:w="24"/><text x="66.6851%" y="1759.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.03%)</title><rect x="66.4351%" y="1733" width="0.0312%" height="15" fill="rgb(206,223,18)" fg:x="51163" fg:w="24"/><text x="66.6851%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.03%)</title><rect x="66.4351%" y="1717" width="0.0312%" height="15" fill="rgb(221,1,10)" fg:x="51163" fg:w="24"/><text x="66.6851%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.03%)</title><rect x="66.4351%" y="1701" width="0.0312%" height="15" fill="rgb(221,151,42)" fg:x="51163" fg:w="24"/><text x="66.6851%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (24 samples, 0.03%)</title><rect x="66.4351%" y="1685" width="0.0312%" height="15" fill="rgb(205,183,46)" fg:x="51163" fg:w="24"/><text x="66.6851%" y="1695.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (32 samples, 0.04%)</title><rect x="66.4312%" y="1765" width="0.0416%" height="15" fill="rgb(239,229,1)" fg:x="51160" fg:w="32"/><text x="66.6812%" y="1775.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="66.5182%" y="1749" width="0.0195%" height="15" fill="rgb(236,192,23)" fg:x="51227" fg:w="15"/><text x="66.7682%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="66.5182%" y="1733" width="0.0195%" height="15" fill="rgb(215,146,3)" fg:x="51227" fg:w="15"/><text x="66.7682%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="66.5182%" y="1717" width="0.0195%" height="15" fill="rgb(235,52,27)" fg:x="51227" fg:w="15"/><text x="66.7682%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (15 samples, 0.02%)</title><rect x="66.5182%" y="1701" width="0.0195%" height="15" fill="rgb(236,45,20)" fg:x="51227" fg:w="15"/><text x="66.7682%" y="1711.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (57 samples, 0.07%)</title><rect x="66.4728%" y="1765" width="0.0740%" height="15" fill="rgb(235,86,41)" fg:x="51192" fg:w="57"/><text x="66.7228%" y="1775.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_copy_loc (121 samples, 0.16%)</title><rect x="66.4013%" y="1797" width="0.1571%" height="15" fill="rgb(235,27,27)" fg:x="51137" fg:w="121"/><text x="66.6513%" y="1807.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (98 samples, 0.13%)</title><rect x="66.4312%" y="1781" width="0.1273%" height="15" fill="rgb(232,4,34)" fg:x="51160" fg:w="98"/><text x="66.6812%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (9 samples, 0.01%)</title><rect x="66.5468%" y="1765" width="0.0117%" height="15" fill="rgb(215,22,10)" fg:x="51249" fg:w="9"/><text x="66.7968%" y="1775.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (19 samples, 0.02%)</title><rect x="66.5611%" y="1749" width="0.0247%" height="15" fill="rgb(230,228,27)" fg:x="51260" fg:w="19"/><text x="66.8111%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (11 samples, 0.01%)</title><rect x="66.5714%" y="1733" width="0.0143%" height="15" fill="rgb(216,26,51)" fg:x="51268" fg:w="11"/><text x="66.8214%" y="1743.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (20 samples, 0.03%)</title><rect x="66.5611%" y="1765" width="0.0260%" height="15" fill="rgb(225,180,50)" fg:x="51260" fg:w="20"/><text x="66.8111%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (17 samples, 0.02%)</title><rect x="66.5896%" y="1749" width="0.0221%" height="15" fill="rgb(236,211,2)" fg:x="51282" fg:w="17"/><text x="66.8396%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (8 samples, 0.01%)</title><rect x="66.6013%" y="1733" width="0.0104%" height="15" fill="rgb(250,51,20)" fg:x="51291" fg:w="8"/><text x="66.8513%" y="1743.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_read_ref (46 samples, 0.06%)</title><rect x="66.5598%" y="1797" width="0.0597%" height="15" fill="rgb(232,70,37)" fg:x="51259" fg:w="46"/><text x="66.8098%" y="1807.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (45 samples, 0.06%)</title><rect x="66.5611%" y="1781" width="0.0584%" height="15" fill="rgb(226,183,39)" fg:x="51260" fg:w="45"/><text x="66.8111%" y="1791.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (25 samples, 0.03%)</title><rect x="66.5870%" y="1765" width="0.0325%" height="15" fill="rgb(232,228,21)" fg:x="51280" fg:w="25"/><text x="66.8370%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.02%)</title><rect x="66.6507%" y="1781" width="0.0182%" height="15" fill="rgb(251,118,32)" fg:x="51329" fg:w="14"/><text x="66.9007%" y="1791.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge (33 samples, 0.04%)</title><rect x="66.6688%" y="1781" width="0.0429%" height="15" fill="rgb(235,172,38)" fg:x="51343" fg:w="33"/><text x="66.9188%" y="1791.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (165 samples, 0.21%)</title><rect x="66.6195%" y="1797" width="0.2143%" height="15" fill="rgb(235,63,18)" fg:x="51305" fg:w="165"/><text x="66.8695%" y="1807.50"></text></g><g><title>aptos_gas::instr::InstructionGasParameters::simple_instr_cost (94 samples, 0.12%)</title><rect x="66.7117%" y="1781" width="0.1221%" height="15" fill="rgb(225,4,7)" fg:x="51376" fg:w="94"/><text x="66.9617%" y="1791.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (8 samples, 0.01%)</title><rect x="66.8428%" y="1765" width="0.0104%" height="15" fill="rgb(231,61,1)" fg:x="51477" fg:w="8"/><text x="67.0928%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (9 samples, 0.01%)</title><rect x="66.8571%" y="1749" width="0.0117%" height="15" fill="rgb(241,155,22)" fg:x="51488" fg:w="9"/><text x="67.1071%" y="1759.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_write_ref (34 samples, 0.04%)</title><rect x="66.8350%" y="1797" width="0.0441%" height="15" fill="rgb(209,100,26)" fg:x="51471" fg:w="34"/><text x="67.0850%" y="1807.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (28 samples, 0.04%)</title><rect x="66.8428%" y="1781" width="0.0364%" height="15" fill="rgb(248,181,15)" fg:x="51477" fg:w="28"/><text x="67.0928%" y="1791.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (20 samples, 0.03%)</title><rect x="66.8532%" y="1765" width="0.0260%" height="15" fill="rgb(214,94,31)" fg:x="51485" fg:w="20"/><text x="67.1032%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (111 samples, 0.14%)</title><rect x="66.8792%" y="1797" width="0.1441%" height="15" fill="rgb(207,16,42)" fg:x="51505" fg:w="111"/><text x="67.1292%" y="1807.50"></text></g><g><title>aptos_gas::instr::InstructionGasParameters::simple_instr_cost (25 samples, 0.03%)</title><rect x="67.0298%" y="1797" width="0.0325%" height="15" fill="rgb(208,127,13)" fg:x="51621" fg:w="25"/><text x="67.2798%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (9 samples, 0.01%)</title><rect x="67.0714%" y="1797" width="0.0117%" height="15" fill="rgb(220,211,18)" fg:x="51653" fg:w="9"/><text x="67.3214%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (65 samples, 0.08%)</title><rect x="67.3804%" y="1781" width="0.0844%" height="15" fill="rgb(221,55,38)" fg:x="51891" fg:w="65"/><text x="67.6304%" y="1791.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="67.5765%" y="1653" width="0.0169%" height="15" fill="rgb(252,219,45)" fg:x="52042" fg:w="13"/><text x="67.8265%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="67.6050%" y="1605" width="0.0338%" height="15" fill="rgb(248,53,35)" fg:x="52064" fg:w="26"/><text x="67.8550%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="67.6050%" y="1589" width="0.0338%" height="15" fill="rgb(210,87,2)" fg:x="52064" fg:w="26"/><text x="67.8550%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="67.6050%" y="1573" width="0.0338%" height="15" fill="rgb(239,133,9)" fg:x="52064" fg:w="26"/><text x="67.8550%" y="1583.50"></text></g><g><title>malloc (15 samples, 0.02%)</title><rect x="67.6193%" y="1557" width="0.0195%" height="15" fill="rgb(214,114,5)" fg:x="52075" fg:w="15"/><text x="67.8693%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.05%)</title><rect x="67.5934%" y="1653" width="0.0480%" height="15" fill="rgb(206,124,24)" fg:x="52055" fg:w="37"/><text x="67.8434%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36 samples, 0.05%)</title><rect x="67.5947%" y="1637" width="0.0467%" height="15" fill="rgb(212,57,33)" fg:x="52056" fg:w="36"/><text x="67.8447%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (36 samples, 0.05%)</title><rect x="67.5947%" y="1621" width="0.0467%" height="15" fill="rgb(246,21,20)" fg:x="52056" fg:w="36"/><text x="67.8447%" y="1631.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (128 samples, 0.17%)</title><rect x="67.5310%" y="1733" width="0.1662%" height="15" fill="rgb(253,210,39)" fg:x="52007" fg:w="128"/><text x="67.7810%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (110 samples, 0.14%)</title><rect x="67.5544%" y="1717" width="0.1428%" height="15" fill="rgb(209,187,24)" fg:x="52025" fg:w="110"/><text x="67.8044%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (104 samples, 0.14%)</title><rect x="67.5622%" y="1701" width="0.1350%" height="15" fill="rgb(246,136,17)" fg:x="52031" fg:w="104"/><text x="67.8122%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (104 samples, 0.14%)</title><rect x="67.5622%" y="1685" width="0.1350%" height="15" fill="rgb(211,0,30)" fg:x="52031" fg:w="104"/><text x="67.8122%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (104 samples, 0.14%)</title><rect x="67.5622%" y="1669" width="0.1350%" height="15" fill="rgb(216,199,7)" fg:x="52031" fg:w="104"/><text x="67.8122%" y="1679.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (43 samples, 0.06%)</title><rect x="67.6414%" y="1653" width="0.0558%" height="15" fill="rgb(207,210,19)" fg:x="52092" fg:w="43"/><text x="67.8914%" y="1663.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (166 samples, 0.22%)</title><rect x="67.5310%" y="1749" width="0.2156%" height="15" fill="rgb(237,187,39)" fg:x="52007" fg:w="166"/><text x="67.7810%" y="1759.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (38 samples, 0.05%)</title><rect x="67.6972%" y="1733" width="0.0493%" height="15" fill="rgb(243,194,42)" fg:x="52135" fg:w="38"/><text x="67.9472%" y="1743.50"></text></g><g><title>core::ptr::write (38 samples, 0.05%)</title><rect x="67.6972%" y="1717" width="0.0493%" height="15" fill="rgb(225,194,19)" fg:x="52135" fg:w="38"/><text x="67.9472%" y="1727.50"></text></g><g><title>__rdl_alloc (8 samples, 0.01%)</title><rect x="67.7570%" y="1669" width="0.0104%" height="15" fill="rgb(224,192,14)" fg:x="52181" fg:w="8"/><text x="68.0070%" y="1679.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (253 samples, 0.33%)</title><rect x="67.4648%" y="1781" width="0.3285%" height="15" fill="rgb(252,21,18)" fg:x="51956" fg:w="253"/><text x="67.7148%" y="1791.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (203 samples, 0.26%)</title><rect x="67.5297%" y="1765" width="0.2636%" height="15" fill="rgb(229,69,19)" fg:x="52006" fg:w="203"/><text x="67.7797%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (36 samples, 0.05%)</title><rect x="67.7466%" y="1749" width="0.0467%" height="15" fill="rgb(251,31,53)" fg:x="52173" fg:w="36"/><text x="67.9966%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (35 samples, 0.05%)</title><rect x="67.7479%" y="1733" width="0.0454%" height="15" fill="rgb(218,39,50)" fg:x="52174" fg:w="35"/><text x="67.9979%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.05%)</title><rect x="67.7479%" y="1717" width="0.0454%" height="15" fill="rgb(231,50,17)" fg:x="52174" fg:w="35"/><text x="67.9979%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.05%)</title><rect x="67.7479%" y="1701" width="0.0454%" height="15" fill="rgb(223,217,31)" fg:x="52174" fg:w="35"/><text x="67.9979%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.05%)</title><rect x="67.7479%" y="1685" width="0.0454%" height="15" fill="rgb(225,91,12)" fg:x="52174" fg:w="35"/><text x="67.9979%" y="1695.50"></text></g><g><title>malloc (15 samples, 0.02%)</title><rect x="67.7739%" y="1669" width="0.0195%" height="15" fill="rgb(242,58,43)" fg:x="52194" fg:w="15"/><text x="68.0239%" y="1679.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.04%)</title><rect x="67.8037%" y="1781" width="0.0351%" height="15" fill="rgb(242,32,21)" fg:x="52217" fg:w="27"/><text x="68.0537%" y="1791.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.03%)</title><rect x="67.8089%" y="1765" width="0.0299%" height="15" fill="rgb(211,127,1)" fg:x="52221" fg:w="23"/><text x="68.0589%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.02%)</title><rect x="67.8193%" y="1749" width="0.0195%" height="15" fill="rgb(231,93,13)" fg:x="52229" fg:w="15"/><text x="68.0693%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.02%)</title><rect x="67.8193%" y="1733" width="0.0195%" height="15" fill="rgb(218,83,4)" fg:x="52229" fg:w="15"/><text x="68.0693%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="67.8193%" y="1717" width="0.0195%" height="15" fill="rgb(230,218,10)" fg:x="52229" fg:w="15"/><text x="68.0693%" y="1727.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="67.8258%" y="1701" width="0.0130%" height="15" fill="rgb(235,127,18)" fg:x="52234" fg:w="10"/><text x="68.0758%" y="1711.50"></text></g><g><title>cfree (32 samples, 0.04%)</title><rect x="67.8388%" y="1781" width="0.0416%" height="15" fill="rgb(213,137,46)" fg:x="52244" fg:w="32"/><text x="68.0888%" y="1791.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="67.8622%" y="1765" width="0.0182%" height="15" fill="rgb(235,179,24)" fg:x="52262" fg:w="14"/><text x="68.1122%" y="1775.50"></text></g><g><title>cfree (15 samples, 0.02%)</title><rect x="67.9167%" y="1749" width="0.0195%" height="15" fill="rgb(247,58,49)" fg:x="52304" fg:w="15"/><text x="68.1667%" y="1759.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="67.9245%" y="1733" width="0.0117%" height="15" fill="rgb(242,222,5)" fg:x="52310" fg:w="9"/><text x="68.1745%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (51 samples, 0.07%)</title><rect x="67.8894%" y="1781" width="0.0662%" height="15" fill="rgb(230,16,48)" fg:x="52283" fg:w="51"/><text x="68.1394%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (31 samples, 0.04%)</title><rect x="67.9154%" y="1765" width="0.0403%" height="15" fill="rgb(241,192,16)" fg:x="52303" fg:w="31"/><text x="68.1654%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (15 samples, 0.02%)</title><rect x="67.9362%" y="1749" width="0.0195%" height="15" fill="rgb(209,25,37)" fg:x="52319" fg:w="15"/><text x="68.1862%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (10 samples, 0.01%)</title><rect x="68.0089%" y="1765" width="0.0130%" height="15" fill="rgb(229,215,13)" fg:x="52375" fg:w="10"/><text x="68.2589%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (50 samples, 0.06%)</title><rect x="67.9751%" y="1781" width="0.0649%" height="15" fill="rgb(213,199,8)" fg:x="52349" fg:w="50"/><text x="68.2251%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (14 samples, 0.02%)</title><rect x="68.0219%" y="1765" width="0.0182%" height="15" fill="rgb(226,151,19)" fg:x="52385" fg:w="14"/><text x="68.2719%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (136 samples, 0.18%)</title><rect x="68.0400%" y="1781" width="0.1766%" height="15" fill="rgb(254,183,12)" fg:x="52399" fg:w="136"/><text x="68.2900%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (40 samples, 0.05%)</title><rect x="68.1647%" y="1765" width="0.0519%" height="15" fill="rgb(245,8,3)" fg:x="52495" fg:w="40"/><text x="68.4147%" y="1775.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="68.1920%" y="1749" width="0.0247%" height="15" fill="rgb(229,159,35)" fg:x="52516" fg:w="19"/><text x="68.4420%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (49 samples, 0.06%)</title><rect x="68.2257%" y="1781" width="0.0636%" height="15" fill="rgb(209,145,1)" fg:x="52542" fg:w="49"/><text x="68.4757%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.03%)</title><rect x="68.3244%" y="1637" width="0.0299%" height="15" fill="rgb(228,183,16)" fg:x="52618" fg:w="23"/><text x="68.5744%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (23 samples, 0.03%)</title><rect x="68.3244%" y="1621" width="0.0299%" height="15" fill="rgb(222,68,0)" fg:x="52618" fg:w="23"/><text x="68.5744%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="68.3244%" y="1605" width="0.0299%" height="15" fill="rgb(209,130,50)" fg:x="52618" fg:w="23"/><text x="68.5744%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="68.3244%" y="1589" width="0.0299%" height="15" fill="rgb(228,176,44)" fg:x="52618" fg:w="23"/><text x="68.5744%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.03%)</title><rect x="68.3244%" y="1573" width="0.0299%" height="15" fill="rgb(221,164,2)" fg:x="52618" fg:w="23"/><text x="68.5744%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.03%)</title><rect x="68.3283%" y="1557" width="0.0260%" height="15" fill="rgb(249,199,49)" fg:x="52621" fg:w="20"/><text x="68.5783%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (17 samples, 0.02%)</title><rect x="68.3322%" y="1541" width="0.0221%" height="15" fill="rgb(228,205,53)" fg:x="52624" fg:w="17"/><text x="68.5822%" y="1551.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (16 samples, 0.02%)</title><rect x="68.3335%" y="1525" width="0.0208%" height="15" fill="rgb(235,77,20)" fg:x="52625" fg:w="16"/><text x="68.5835%" y="1535.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (13 samples, 0.02%)</title><rect x="68.3374%" y="1509" width="0.0169%" height="15" fill="rgb(227,147,34)" fg:x="52628" fg:w="13"/><text x="68.5874%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (46 samples, 0.06%)</title><rect x="68.2971%" y="1765" width="0.0597%" height="15" fill="rgb(226,203,52)" fg:x="52597" fg:w="46"/><text x="68.5471%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (46 samples, 0.06%)</title><rect x="68.2971%" y="1749" width="0.0597%" height="15" fill="rgb(226,186,23)" fg:x="52597" fg:w="46"/><text x="68.5471%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (46 samples, 0.06%)</title><rect x="68.2971%" y="1733" width="0.0597%" height="15" fill="rgb(236,13,30)" fg:x="52597" fg:w="46"/><text x="68.5471%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (38 samples, 0.05%)</title><rect x="68.3075%" y="1717" width="0.0493%" height="15" fill="rgb(228,121,22)" fg:x="52605" fg:w="38"/><text x="68.5575%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.05%)</title><rect x="68.3075%" y="1701" width="0.0493%" height="15" fill="rgb(248,222,26)" fg:x="52605" fg:w="38"/><text x="68.5575%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.05%)</title><rect x="68.3075%" y="1685" width="0.0493%" height="15" fill="rgb(251,72,25)" fg:x="52605" fg:w="38"/><text x="68.5575%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 0.04%)</title><rect x="68.3166%" y="1669" width="0.0403%" height="15" fill="rgb(223,114,24)" fg:x="52612" fg:w="31"/><text x="68.5666%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.04%)</title><rect x="68.3205%" y="1653" width="0.0364%" height="15" fill="rgb(232,190,43)" fg:x="52615" fg:w="28"/><text x="68.5705%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (51 samples, 0.07%)</title><rect x="68.2920%" y="1781" width="0.0662%" height="15" fill="rgb(208,90,0)" fg:x="52593" fg:w="51"/><text x="68.5420%" y="1791.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="68.3893%" y="1685" width="0.0130%" height="15" fill="rgb(234,149,31)" fg:x="52668" fg:w="10"/><text x="68.6393%" y="1695.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (42 samples, 0.05%)</title><rect x="68.3738%" y="1765" width="0.0545%" height="15" fill="rgb(235,188,36)" fg:x="52656" fg:w="42"/><text x="68.6238%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.04%)</title><rect x="68.3880%" y="1749" width="0.0403%" height="15" fill="rgb(219,59,51)" fg:x="52667" fg:w="31"/><text x="68.6380%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.04%)</title><rect x="68.3880%" y="1733" width="0.0403%" height="15" fill="rgb(236,101,40)" fg:x="52667" fg:w="31"/><text x="68.6380%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.04%)</title><rect x="68.3880%" y="1717" width="0.0403%" height="15" fill="rgb(235,33,7)" fg:x="52667" fg:w="31"/><text x="68.6380%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.04%)</title><rect x="68.3880%" y="1701" width="0.0403%" height="15" fill="rgb(213,169,26)" fg:x="52667" fg:w="31"/><text x="68.6380%" y="1711.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.02%)</title><rect x="68.4114%" y="1685" width="0.0169%" height="15" fill="rgb(218,99,34)" fg:x="52685" fg:w="13"/><text x="68.6614%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (66 samples, 0.09%)</title><rect x="68.3582%" y="1781" width="0.0857%" height="15" fill="rgb(210,57,24)" fg:x="52644" fg:w="66"/><text x="68.6082%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="68.4815%" y="1637" width="0.0104%" height="15" fill="rgb(231,181,54)" fg:x="52739" fg:w="8"/><text x="68.7315%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (8 samples, 0.01%)</title><rect x="68.4815%" y="1621" width="0.0104%" height="15" fill="rgb(251,188,48)" fg:x="52739" fg:w="8"/><text x="68.7315%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="68.4815%" y="1605" width="0.0104%" height="15" fill="rgb(243,12,45)" fg:x="52739" fg:w="8"/><text x="68.7315%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="68.4815%" y="1589" width="0.0104%" height="15" fill="rgb(250,197,9)" fg:x="52739" fg:w="8"/><text x="68.7315%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="68.4815%" y="1573" width="0.0104%" height="15" fill="rgb(235,149,35)" fg:x="52739" fg:w="8"/><text x="68.7315%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.03%)</title><rect x="68.4647%" y="1765" width="0.0286%" height="15" fill="rgb(219,27,19)" fg:x="52726" fg:w="22"/><text x="68.7147%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="68.4647%" y="1749" width="0.0286%" height="15" fill="rgb(244,78,31)" fg:x="52726" fg:w="22"/><text x="68.7147%" y="1759.50"></text></g><g><title>core::iter::adapters::try_process (22 samples, 0.03%)</title><rect x="68.4647%" y="1733" width="0.0286%" height="15" fill="rgb(241,13,4)" fg:x="52726" fg:w="22"/><text x="68.7147%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (18 samples, 0.02%)</title><rect x="68.4698%" y="1717" width="0.0234%" height="15" fill="rgb(212,194,26)" fg:x="52730" fg:w="18"/><text x="68.7198%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.02%)</title><rect x="68.4698%" y="1701" width="0.0234%" height="15" fill="rgb(236,80,11)" fg:x="52730" fg:w="18"/><text x="68.7198%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="68.4698%" y="1685" width="0.0234%" height="15" fill="rgb(206,1,24)" fg:x="52730" fg:w="18"/><text x="68.7198%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="68.4711%" y="1669" width="0.0221%" height="15" fill="rgb(238,215,50)" fg:x="52731" fg:w="17"/><text x="68.7211%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="68.4776%" y="1653" width="0.0156%" height="15" fill="rgb(254,126,32)" fg:x="52736" fg:w="12"/><text x="68.7276%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.02%)</title><rect x="68.4984%" y="1749" width="0.0169%" height="15" fill="rgb(206,111,53)" fg:x="52752" fg:w="13"/><text x="68.7484%" y="1759.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="68.4984%" y="1733" width="0.0169%" height="15" fill="rgb(218,72,44)" fg:x="52752" fg:w="13"/><text x="68.7484%" y="1743.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="68.4984%" y="1717" width="0.0169%" height="15" fill="rgb(238,25,3)" fg:x="52752" fg:w="13"/><text x="68.7484%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (15 samples, 0.02%)</title><rect x="68.4984%" y="1765" width="0.0195%" height="15" fill="rgb(250,191,7)" fg:x="52752" fg:w="15"/><text x="68.7484%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (57 samples, 0.07%)</title><rect x="68.4504%" y="1781" width="0.0740%" height="15" fill="rgb(238,56,30)" fg:x="52715" fg:w="57"/><text x="68.7004%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (10 samples, 0.01%)</title><rect x="68.5257%" y="1781" width="0.0130%" height="15" fill="rgb(210,27,45)" fg:x="52773" fg:w="10"/><text x="68.7757%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (1,168 samples, 1.52%)</title><rect x="67.0844%" y="1797" width="1.5166%" height="15" fill="rgb(207,10,50)" fg:x="51663" fg:w="1168"/><text x="67.3344%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (48 samples, 0.06%)</title><rect x="68.5387%" y="1781" width="0.0623%" height="15" fill="rgb(249,30,23)" fg:x="52783" fg:w="48"/><text x="68.7887%" y="1791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (28 samples, 0.04%)</title><rect x="68.5646%" y="1765" width="0.0364%" height="15" fill="rgb(250,80,12)" fg:x="52803" fg:w="28"/><text x="68.8146%" y="1775.50"></text></g><g><title>core::cmp::PartialEq::ne (28 samples, 0.04%)</title><rect x="68.5646%" y="1749" width="0.0364%" height="15" fill="rgb(210,221,37)" fg:x="52803" fg:w="28"/><text x="68.8146%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (27 samples, 0.04%)</title><rect x="68.5659%" y="1733" width="0.0351%" height="15" fill="rgb(205,96,24)" fg:x="52804" fg:w="27"/><text x="68.8159%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="68.9126%" y="1781" width="0.0130%" height="15" fill="rgb(247,104,22)" fg:x="53071" fg:w="10"/><text x="69.1626%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="68.9126%" y="1765" width="0.0130%" height="15" fill="rgb(222,61,53)" fg:x="53071" fg:w="10"/><text x="69.1626%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.03%)</title><rect x="68.9256%" y="1781" width="0.0260%" height="15" fill="rgb(241,11,53)" fg:x="53081" fg:w="20"/><text x="69.1756%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="69.0061%" y="1653" width="0.0221%" height="15" fill="rgb(230,111,47)" fg:x="53143" fg:w="17"/><text x="69.2561%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="69.0074%" y="1637" width="0.0208%" height="15" fill="rgb(218,187,29)" fg:x="53144" fg:w="16"/><text x="69.2574%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.02%)</title><rect x="69.0074%" y="1621" width="0.0208%" height="15" fill="rgb(210,121,46)" fg:x="53144" fg:w="16"/><text x="69.2574%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="69.0100%" y="1605" width="0.0182%" height="15" fill="rgb(250,43,19)" fg:x="53146" fg:w="14"/><text x="69.2600%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="69.0100%" y="1589" width="0.0182%" height="15" fill="rgb(238,61,12)" fg:x="53146" fg:w="14"/><text x="69.2600%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="69.0100%" y="1573" width="0.0182%" height="15" fill="rgb(251,198,9)" fg:x="53146" fg:w="14"/><text x="69.2600%" y="1583.50"></text></g><g><title>malloc (13 samples, 0.02%)</title><rect x="69.0113%" y="1557" width="0.0169%" height="15" fill="rgb(214,192,38)" fg:x="53147" fg:w="13"/><text x="69.2613%" y="1567.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (55 samples, 0.07%)</title><rect x="68.9750%" y="1733" width="0.0714%" height="15" fill="rgb(214,73,19)" fg:x="53119" fg:w="55"/><text x="69.2250%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.05%)</title><rect x="68.9970%" y="1717" width="0.0493%" height="15" fill="rgb(249,222,49)" fg:x="53136" fg:w="38"/><text x="69.2470%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.05%)</title><rect x="68.9983%" y="1701" width="0.0480%" height="15" fill="rgb(231,181,54)" fg:x="53137" fg:w="37"/><text x="69.2483%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.05%)</title><rect x="68.9983%" y="1685" width="0.0480%" height="15" fill="rgb(240,1,13)" fg:x="53137" fg:w="37"/><text x="69.2483%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.05%)</title><rect x="68.9983%" y="1669" width="0.0480%" height="15" fill="rgb(225,21,16)" fg:x="53137" fg:w="37"/><text x="69.2483%" y="1679.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.02%)</title><rect x="69.0282%" y="1653" width="0.0182%" height="15" fill="rgb(246,176,50)" fg:x="53160" fg:w="14"/><text x="69.2782%" y="1663.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (63 samples, 0.08%)</title><rect x="68.9750%" y="1749" width="0.0818%" height="15" fill="rgb(208,96,50)" fg:x="53119" fg:w="63"/><text x="69.2250%" y="1759.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.01%)</title><rect x="69.0464%" y="1733" width="0.0104%" height="15" fill="rgb(240,219,19)" fg:x="53174" fg:w="8"/><text x="69.2964%" y="1743.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="69.0464%" y="1717" width="0.0104%" height="15" fill="rgb(234,73,5)" fg:x="53174" fg:w="8"/><text x="69.2964%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (91 samples, 0.12%)</title><rect x="68.9516%" y="1781" width="0.1182%" height="15" fill="rgb(225,52,53)" fg:x="53101" fg:w="91"/><text x="69.2016%" y="1791.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.09%)</title><rect x="68.9750%" y="1765" width="0.0948%" height="15" fill="rgb(250,12,14)" fg:x="53119" fg:w="73"/><text x="69.2250%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.01%)</title><rect x="69.0568%" y="1749" width="0.0130%" height="15" fill="rgb(242,185,54)" fg:x="53182" fg:w="10"/><text x="69.3068%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="69.0568%" y="1733" width="0.0130%" height="15" fill="rgb(211,206,31)" fg:x="53182" fg:w="10"/><text x="69.3068%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="69.0568%" y="1717" width="0.0130%" height="15" fill="rgb(252,10,33)" fg:x="53182" fg:w="10"/><text x="69.3068%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="69.0568%" y="1701" width="0.0130%" height="15" fill="rgb(216,26,7)" fg:x="53182" fg:w="10"/><text x="69.3068%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="69.0568%" y="1685" width="0.0130%" height="15" fill="rgb(228,112,40)" fg:x="53182" fg:w="10"/><text x="69.3068%" y="1695.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="69.0698%" y="1781" width="0.0221%" height="15" fill="rgb(212,21,16)" fg:x="53192" fg:w="17"/><text x="69.3198%" y="1791.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="69.0762%" y="1765" width="0.0156%" height="15" fill="rgb(249,3,29)" fg:x="53197" fg:w="12"/><text x="69.3262%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="69.1464%" y="1717" width="0.0156%" height="15" fill="rgb(221,42,51)" fg:x="53251" fg:w="12"/><text x="69.3964%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (56 samples, 0.07%)</title><rect x="69.0918%" y="1781" width="0.0727%" height="15" fill="rgb(225,90,21)" fg:x="53209" fg:w="56"/><text x="69.3418%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (33 samples, 0.04%)</title><rect x="69.1217%" y="1765" width="0.0429%" height="15" fill="rgb(242,131,5)" fg:x="53232" fg:w="33"/><text x="69.3717%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (25 samples, 0.03%)</title><rect x="69.1321%" y="1749" width="0.0325%" height="15" fill="rgb(220,187,28)" fg:x="53240" fg:w="25"/><text x="69.3821%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.02%)</title><rect x="69.1451%" y="1733" width="0.0195%" height="15" fill="rgb(210,75,48)" fg:x="53250" fg:w="15"/><text x="69.3951%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (21 samples, 0.03%)</title><rect x="69.1658%" y="1781" width="0.0273%" height="15" fill="rgb(211,91,40)" fg:x="53266" fg:w="21"/><text x="69.4158%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (8 samples, 0.01%)</title><rect x="69.1827%" y="1765" width="0.0104%" height="15" fill="rgb(205,43,18)" fg:x="53279" fg:w="8"/><text x="69.4327%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (18 samples, 0.02%)</title><rect x="69.1983%" y="1781" width="0.0234%" height="15" fill="rgb(207,123,11)" fg:x="53291" fg:w="18"/><text x="69.4483%" y="1791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (13 samples, 0.02%)</title><rect x="69.2048%" y="1765" width="0.0169%" height="15" fill="rgb(235,89,39)" fg:x="53296" fg:w="13"/><text x="69.4548%" y="1775.50"></text></g><g><title>core::cmp::PartialEq::ne (13 samples, 0.02%)</title><rect x="69.2048%" y="1749" width="0.0169%" height="15" fill="rgb(245,217,27)" fg:x="53296" fg:w="13"/><text x="69.4548%" y="1759.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="69.2048%" y="1733" width="0.0169%" height="15" fill="rgb(216,55,17)" fg:x="53296" fg:w="13"/><text x="69.4548%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (524 samples, 0.68%)</title><rect x="68.6010%" y="1797" width="0.6804%" height="15" fill="rgb(252,116,44)" fg:x="52831" fg:w="524"/><text x="68.8510%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (46 samples, 0.06%)</title><rect x="69.2217%" y="1781" width="0.0597%" height="15" fill="rgb(229,153,4)" fg:x="53309" fg:w="46"/><text x="69.4717%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (23 samples, 0.03%)</title><rect x="69.2814%" y="1797" width="0.0299%" height="15" fill="rgb(222,24,35)" fg:x="53355" fg:w="23"/><text x="69.5314%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.02%)</title><rect x="69.3308%" y="1765" width="0.0182%" height="15" fill="rgb(214,26,20)" fg:x="53393" fg:w="14"/><text x="69.5808%" y="1775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="69.3632%" y="1749" width="0.0143%" height="15" fill="rgb(215,14,45)" fg:x="53418" fg:w="11"/><text x="69.6132%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::lt (11 samples, 0.01%)</title><rect x="69.3632%" y="1733" width="0.0143%" height="15" fill="rgb(217,212,50)" fg:x="53418" fg:w="11"/><text x="69.6132%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (26 samples, 0.03%)</title><rect x="69.3489%" y="1765" width="0.0338%" height="15" fill="rgb(230,172,52)" fg:x="53407" fg:w="26"/><text x="69.5989%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.02%)</title><rect x="69.3840%" y="1749" width="0.0208%" height="15" fill="rgb(210,48,36)" fg:x="53434" fg:w="16"/><text x="69.6340%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (8 samples, 0.01%)</title><rect x="69.4048%" y="1749" width="0.0104%" height="15" fill="rgb(216,213,32)" fg:x="53450" fg:w="8"/><text x="69.6548%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (37 samples, 0.05%)</title><rect x="69.3827%" y="1765" width="0.0480%" height="15" fill="rgb(237,202,41)" fg:x="53433" fg:w="37"/><text x="69.6327%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (12 samples, 0.02%)</title><rect x="69.4152%" y="1749" width="0.0156%" height="15" fill="rgb(209,14,29)" fg:x="53458" fg:w="12"/><text x="69.6652%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (99 samples, 0.13%)</title><rect x="69.3113%" y="1797" width="0.1286%" height="15" fill="rgb(219,29,3)" fg:x="53378" fg:w="99"/><text x="69.5613%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (88 samples, 0.11%)</title><rect x="69.3256%" y="1781" width="0.1143%" height="15" fill="rgb(229,13,49)" fg:x="53389" fg:w="88"/><text x="69.5756%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.02%)</title><rect x="69.4632%" y="1765" width="0.0247%" height="15" fill="rgb(210,206,2)" fg:x="53495" fg:w="19"/><text x="69.7132%" y="1775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="69.5035%" y="1749" width="0.0234%" height="15" fill="rgb(216,154,46)" fg:x="53526" fg:w="18"/><text x="69.7535%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::add_checked (18 samples, 0.02%)</title><rect x="69.5035%" y="1733" width="0.0234%" height="15" fill="rgb(211,170,52)" fg:x="53526" fg:w="18"/><text x="69.7535%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (33 samples, 0.04%)</title><rect x="69.4879%" y="1765" width="0.0429%" height="15" fill="rgb(233,109,47)" fg:x="53514" fg:w="33"/><text x="69.7379%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="69.5307%" y="1749" width="0.0195%" height="15" fill="rgb(208,212,30)" fg:x="53547" fg:w="15"/><text x="69.7807%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (12 samples, 0.02%)</title><rect x="69.5502%" y="1749" width="0.0156%" height="15" fill="rgb(215,190,19)" fg:x="53562" fg:w="12"/><text x="69.8002%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (64 samples, 0.08%)</title><rect x="69.5307%" y="1765" width="0.0831%" height="15" fill="rgb(207,164,53)" fg:x="53547" fg:w="64"/><text x="69.7807%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (37 samples, 0.05%)</title><rect x="69.5658%" y="1749" width="0.0480%" height="15" fill="rgb(213,87,49)" fg:x="53574" fg:w="37"/><text x="69.8158%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (23 samples, 0.03%)</title><rect x="69.5840%" y="1733" width="0.0299%" height="15" fill="rgb(241,216,24)" fg:x="53588" fg:w="23"/><text x="69.8340%" y="1743.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (143 samples, 0.19%)</title><rect x="69.4398%" y="1797" width="0.1857%" height="15" fill="rgb(241,123,45)" fg:x="53477" fg:w="143"/><text x="69.6898%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (135 samples, 0.18%)</title><rect x="69.4502%" y="1781" width="0.1753%" height="15" fill="rgb(220,36,15)" fg:x="53485" fg:w="135"/><text x="69.7002%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (9 samples, 0.01%)</title><rect x="69.6138%" y="1765" width="0.0117%" height="15" fill="rgb(215,202,9)" fg:x="53611" fg:w="9"/><text x="69.8638%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (20 samples, 0.03%)</title><rect x="69.6697%" y="1685" width="0.0260%" height="15" fill="rgb(252,71,26)" fg:x="53654" fg:w="20"/><text x="69.9197%" y="1695.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.03%)</title><rect x="69.6671%" y="1717" width="0.0312%" height="15" fill="rgb(243,195,19)" fg:x="53652" fg:w="24"/><text x="69.9171%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (24 samples, 0.03%)</title><rect x="69.6671%" y="1701" width="0.0312%" height="15" fill="rgb(207,167,27)" fg:x="53652" fg:w="24"/><text x="69.9171%" y="1711.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (34 samples, 0.04%)</title><rect x="69.6580%" y="1749" width="0.0441%" height="15" fill="rgb(250,146,54)" fg:x="53645" fg:w="34"/><text x="69.9080%" y="1759.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (30 samples, 0.04%)</title><rect x="69.6632%" y="1733" width="0.0390%" height="15" fill="rgb(245,79,9)" fg:x="53649" fg:w="30"/><text x="69.9132%" y="1743.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricing::calculate_read_gas (12 samples, 0.02%)</title><rect x="69.7021%" y="1749" width="0.0156%" height="15" fill="rgb(234,197,22)" fg:x="53679" fg:w="12"/><text x="69.9521%" y="1759.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (54 samples, 0.07%)</title><rect x="69.6489%" y="1765" width="0.0701%" height="15" fill="rgb(221,52,48)" fg:x="53638" fg:w="54"/><text x="69.8989%" y="1775.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="69.7372%" y="1685" width="0.0143%" height="15" fill="rgb(235,80,0)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="69.7372%" y="1669" width="0.0143%" height="15" fill="rgb(221,117,53)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="69.7372%" y="1653" width="0.0143%" height="15" fill="rgb(239,48,47)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="69.7372%" y="1637" width="0.0143%" height="15" fill="rgb(227,191,52)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (11 samples, 0.01%)</title><rect x="69.7372%" y="1621" width="0.0143%" height="15" fill="rgb(241,118,1)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="69.7372%" y="1605" width="0.0143%" height="15" fill="rgb(240,85,3)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="69.7372%" y="1589" width="0.0143%" height="15" fill="rgb(237,68,37)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="69.7372%" y="1573" width="0.0143%" height="15" fill="rgb(212,9,20)" fg:x="53706" fg:w="11"/><text x="69.9872%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="69.7385%" y="1557" width="0.0130%" height="15" fill="rgb(218,84,17)" fg:x="53707" fg:w="10"/><text x="69.9885%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="69.7385%" y="1541" width="0.0130%" height="15" fill="rgb(235,147,20)" fg:x="53707" fg:w="10"/><text x="69.9885%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="69.7385%" y="1525" width="0.0130%" height="15" fill="rgb(208,224,1)" fg:x="53707" fg:w="10"/><text x="69.9885%" y="1535.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="69.7398%" y="1509" width="0.0117%" height="15" fill="rgb(232,97,50)" fg:x="53708" fg:w="9"/><text x="69.9898%" y="1519.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.02%)</title><rect x="69.7748%" y="1589" width="0.0208%" height="15" fill="rgb(238,15,45)" fg:x="53735" fg:w="16"/><text x="70.0248%" y="1599.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="69.7748%" y="1573" width="0.0208%" height="15" fill="rgb(231,46,18)" fg:x="53735" fg:w="16"/><text x="70.0248%" y="1583.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_module_metadata (63 samples, 0.08%)</title><rect x="69.7268%" y="1717" width="0.0818%" height="15" fill="rgb(254,169,10)" fg:x="53698" fg:w="63"/><text x="69.9768%" y="1727.50"></text></g><g><title>aptos_framework::module_metadata::get_vm_metadata (62 samples, 0.08%)</title><rect x="69.7281%" y="1701" width="0.0805%" height="15" fill="rgb(243,169,30)" fg:x="53699" fg:w="62"/><text x="69.9781%" y="1711.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::get_module_metadata (43 samples, 0.06%)</title><rect x="69.7528%" y="1685" width="0.0558%" height="15" fill="rgb(236,90,49)" fg:x="53718" fg:w="43"/><text x="70.0028%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_metadata (40 samples, 0.05%)</title><rect x="69.7567%" y="1669" width="0.0519%" height="15" fill="rgb(218,80,15)" fg:x="53721" fg:w="40"/><text x="70.0067%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (27 samples, 0.04%)</title><rect x="69.7735%" y="1653" width="0.0351%" height="15" fill="rgb(222,115,37)" fg:x="53734" fg:w="27"/><text x="70.0235%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.03%)</title><rect x="69.7748%" y="1637" width="0.0338%" height="15" fill="rgb(227,0,6)" fg:x="53735" fg:w="26"/><text x="70.0248%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.03%)</title><rect x="69.7748%" y="1621" width="0.0338%" height="15" fill="rgb(217,189,13)" fg:x="53735" fg:w="26"/><text x="70.0248%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.03%)</title><rect x="69.7748%" y="1605" width="0.0338%" height="15" fill="rgb(220,74,19)" fg:x="53735" fg:w="26"/><text x="70.0248%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="69.7956%" y="1589" width="0.0130%" height="15" fill="rgb(224,81,18)" fg:x="53751" fg:w="10"/><text x="70.0456%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="69.7956%" y="1573" width="0.0130%" height="15" fill="rgb(245,178,48)" fg:x="53751" fg:w="10"/><text x="70.0456%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.01%)</title><rect x="69.7956%" y="1557" width="0.0130%" height="15" fill="rgb(207,78,24)" fg:x="53751" fg:w="10"/><text x="70.0456%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="69.8281%" y="1605" width="0.0104%" height="15" fill="rgb(223,222,30)" fg:x="53776" fg:w="8"/><text x="70.0781%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="69.8281%" y="1589" width="0.0104%" height="15" fill="rgb(234,101,12)" fg:x="53776" fg:w="8"/><text x="70.0781%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="69.8281%" y="1573" width="0.0104%" height="15" fill="rgb(209,80,46)" fg:x="53776" fg:w="8"/><text x="70.0781%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="69.8281%" y="1557" width="0.0104%" height="15" fill="rgb(228,79,14)" fg:x="53776" fg:w="8"/><text x="70.0781%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="69.8281%" y="1541" width="0.0104%" height="15" fill="rgb(220,219,34)" fg:x="53776" fg:w="8"/><text x="70.0781%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="69.8281%" y="1525" width="0.0104%" height="15" fill="rgb(207,80,21)" fg:x="53776" fg:w="8"/><text x="70.0781%" y="1535.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="69.8164%" y="1685" width="0.0234%" height="15" fill="rgb(210,154,44)" fg:x="53767" fg:w="18"/><text x="70.0664%" y="1695.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="69.8255%" y="1669" width="0.0143%" height="15" fill="rgb(246,44,39)" fg:x="53774" fg:w="11"/><text x="70.0755%" y="1679.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="69.8255%" y="1653" width="0.0143%" height="15" fill="rgb(252,175,13)" fg:x="53774" fg:w="11"/><text x="70.0755%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.01%)</title><rect x="69.8281%" y="1637" width="0.0117%" height="15" fill="rgb(211,50,39)" fg:x="53776" fg:w="9"/><text x="70.0781%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (9 samples, 0.01%)</title><rect x="69.8281%" y="1621" width="0.0117%" height="15" fill="rgb(231,204,27)" fg:x="53776" fg:w="9"/><text x="70.0781%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 0.06%)</title><rect x="69.8696%" y="1349" width="0.0571%" height="15" fill="rgb(253,26,34)" fg:x="53808" fg:w="44"/><text x="70.1196%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (41 samples, 0.05%)</title><rect x="69.8735%" y="1333" width="0.0532%" height="15" fill="rgb(207,139,38)" fg:x="53811" fg:w="41"/><text x="70.1235%" y="1343.50"></text></g><g><title>alloc::alloc::Global::grow_impl (41 samples, 0.05%)</title><rect x="69.8735%" y="1317" width="0.0532%" height="15" fill="rgb(248,54,27)" fg:x="53811" fg:w="41"/><text x="70.1235%" y="1327.50"></text></g><g><title>alloc::alloc::realloc (41 samples, 0.05%)</title><rect x="69.8735%" y="1301" width="0.0532%" height="15" fill="rgb(234,25,33)" fg:x="53811" fg:w="41"/><text x="70.1235%" y="1311.50"></text></g><g><title>realloc (36 samples, 0.05%)</title><rect x="69.8800%" y="1285" width="0.0467%" height="15" fill="rgb(249,107,47)" fg:x="53816" fg:w="36"/><text x="70.1300%" y="1295.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="69.8930%" y="1269" width="0.0338%" height="15" fill="rgb(230,190,31)" fg:x="53826" fg:w="26"/><text x="70.1430%" y="1279.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="69.8995%" y="1253" width="0.0273%" height="15" fill="rgb(238,173,45)" fg:x="53831" fg:w="21"/><text x="70.1495%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="69.8631%" y="1413" width="0.0649%" height="15" fill="rgb(222,16,50)" fg:x="53803" fg:w="50"/><text x="70.1131%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="69.8631%" y="1397" width="0.0649%" height="15" fill="rgb(251,204,47)" fg:x="53803" fg:w="50"/><text x="70.1131%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (47 samples, 0.06%)</title><rect x="69.8670%" y="1381" width="0.0610%" height="15" fill="rgb(225,12,3)" fg:x="53806" fg:w="47"/><text x="70.1170%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (47 samples, 0.06%)</title><rect x="69.8670%" y="1365" width="0.0610%" height="15" fill="rgb(214,208,22)" fg:x="53806" fg:w="47"/><text x="70.1170%" y="1375.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (57 samples, 0.07%)</title><rect x="69.8579%" y="1525" width="0.0740%" height="15" fill="rgb(240,57,32)" fg:x="53799" fg:w="57"/><text x="70.1079%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (57 samples, 0.07%)</title><rect x="69.8579%" y="1509" width="0.0740%" height="15" fill="rgb(243,113,48)" fg:x="53799" fg:w="57"/><text x="70.1079%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (57 samples, 0.07%)</title><rect x="69.8579%" y="1493" width="0.0740%" height="15" fill="rgb(225,135,30)" fg:x="53799" fg:w="57"/><text x="70.1079%" y="1503.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (57 samples, 0.07%)</title><rect x="69.8579%" y="1477" width="0.0740%" height="15" fill="rgb(222,3,53)" fg:x="53799" fg:w="57"/><text x="70.1079%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (57 samples, 0.07%)</title><rect x="69.8579%" y="1461" width="0.0740%" height="15" fill="rgb(243,142,2)" fg:x="53799" fg:w="57"/><text x="70.1079%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (57 samples, 0.07%)</title><rect x="69.8579%" y="1445" width="0.0740%" height="15" fill="rgb(233,67,14)" fg:x="53799" fg:w="57"/><text x="70.1079%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (57 samples, 0.07%)</title><rect x="69.8579%" y="1429" width="0.0740%" height="15" fill="rgb(245,125,36)" fg:x="53799" fg:w="57"/><text x="70.1079%" y="1439.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (59 samples, 0.08%)</title><rect x="69.8579%" y="1573" width="0.0766%" height="15" fill="rgb(225,199,6)" fg:x="53799" fg:w="59"/><text x="70.1079%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (59 samples, 0.08%)</title><rect x="69.8579%" y="1557" width="0.0766%" height="15" fill="rgb(244,71,6)" fg:x="53799" fg:w="59"/><text x="70.1079%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (59 samples, 0.08%)</title><rect x="69.8579%" y="1541" width="0.0766%" height="15" fill="rgb(225,62,9)" fg:x="53799" fg:w="59"/><text x="70.1079%" y="1551.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (8 samples, 0.01%)</title><rect x="69.9346%" y="1573" width="0.0104%" height="15" fill="rgb(246,139,53)" fg:x="53858" fg:w="8"/><text x="70.1846%" y="1583.50"></text></g><g><title>bcs::ser::to_bytes (77 samples, 0.10%)</title><rect x="69.8463%" y="1653" width="0.1000%" height="15" fill="rgb(243,161,46)" fg:x="53790" fg:w="77"/><text x="70.0963%" y="1663.50"></text></g><g><title>bcs::ser::serialize_into (76 samples, 0.10%)</title><rect x="69.8476%" y="1637" width="0.0987%" height="15" fill="rgb(236,153,7)" fg:x="53791" fg:w="76"/><text x="70.0976%" y="1647.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (76 samples, 0.10%)</title><rect x="69.8476%" y="1621" width="0.0987%" height="15" fill="rgb(248,42,35)" fg:x="53791" fg:w="76"/><text x="70.0976%" y="1631.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (72 samples, 0.09%)</title><rect x="69.8528%" y="1605" width="0.0935%" height="15" fill="rgb(250,17,31)" fg:x="53795" fg:w="72"/><text x="70.1028%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (70 samples, 0.09%)</title><rect x="69.8553%" y="1589" width="0.0909%" height="15" fill="rgb(248,138,14)" fg:x="53797" fg:w="70"/><text x="70.1053%" y="1599.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (91 samples, 0.12%)</title><rect x="69.8398%" y="1685" width="0.1182%" height="15" fill="rgb(228,161,3)" fg:x="53785" fg:w="91"/><text x="70.0898%" y="1695.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (89 samples, 0.12%)</title><rect x="69.8424%" y="1669" width="0.1156%" height="15" fill="rgb(248,116,17)" fg:x="53787" fg:w="89"/><text x="70.0924%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (9 samples, 0.01%)</title><rect x="69.9462%" y="1653" width="0.0117%" height="15" fill="rgb(207,78,24)" fg:x="53867" fg:w="9"/><text x="70.1962%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="69.9696%" y="1621" width="0.0143%" height="15" fill="rgb(234,99,48)" fg:x="53885" fg:w="11"/><text x="70.2196%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.01%)</title><rect x="69.9722%" y="1605" width="0.0117%" height="15" fill="rgb(242,22,26)" fg:x="53887" fg:w="9"/><text x="70.2222%" y="1615.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (9 samples, 0.01%)</title><rect x="69.9722%" y="1589" width="0.0117%" height="15" fill="rgb(227,78,32)" fg:x="53887" fg:w="9"/><text x="70.2222%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (9 samples, 0.01%)</title><rect x="69.9722%" y="1573" width="0.0117%" height="15" fill="rgb(226,189,43)" fg:x="53887" fg:w="9"/><text x="70.2222%" y="1583.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.01%)</title><rect x="69.9839%" y="1573" width="0.0117%" height="15" fill="rgb(227,218,35)" fg:x="53896" fg:w="9"/><text x="70.2339%" y="1583.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="69.9839%" y="1557" width="0.0117%" height="15" fill="rgb(206,111,40)" fg:x="53896" fg:w="9"/><text x="70.2339%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (26 samples, 0.03%)</title><rect x="69.9969%" y="1525" width="0.0338%" height="15" fill="rgb(208,217,22)" fg:x="53906" fg:w="26"/><text x="70.2469%" y="1535.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (26 samples, 0.03%)</title><rect x="69.9969%" y="1509" width="0.0338%" height="15" fill="rgb(248,20,20)" fg:x="53906" fg:w="26"/><text x="70.2469%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (26 samples, 0.03%)</title><rect x="69.9969%" y="1493" width="0.0338%" height="15" fill="rgb(239,155,16)" fg:x="53906" fg:w="26"/><text x="70.2469%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.03%)</title><rect x="69.9969%" y="1477" width="0.0338%" height="15" fill="rgb(238,171,46)" fg:x="53906" fg:w="26"/><text x="70.2469%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (26 samples, 0.03%)</title><rect x="69.9969%" y="1461" width="0.0338%" height="15" fill="rgb(248,11,36)" fg:x="53906" fg:w="26"/><text x="70.2469%" y="1471.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="70.0099%" y="1445" width="0.0208%" height="15" fill="rgb(220,148,37)" fg:x="53916" fg:w="16"/><text x="70.2599%" y="1455.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (58 samples, 0.08%)</title><rect x="69.9631%" y="1637" width="0.0753%" height="15" fill="rgb(218,144,42)" fg:x="53880" fg:w="58"/><text x="70.2131%" y="1647.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (42 samples, 0.05%)</title><rect x="69.9839%" y="1621" width="0.0545%" height="15" fill="rgb(245,20,20)" fg:x="53896" fg:w="42"/><text x="70.2339%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (42 samples, 0.05%)</title><rect x="69.9839%" y="1605" width="0.0545%" height="15" fill="rgb(240,111,48)" fg:x="53896" fg:w="42"/><text x="70.2339%" y="1615.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.05%)</title><rect x="69.9839%" y="1589" width="0.0545%" height="15" fill="rgb(237,225,32)" fg:x="53896" fg:w="42"/><text x="70.2339%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (33 samples, 0.04%)</title><rect x="69.9956%" y="1573" width="0.0429%" height="15" fill="rgb(228,161,46)" fg:x="53905" fg:w="33"/><text x="70.2456%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.04%)</title><rect x="69.9956%" y="1557" width="0.0429%" height="15" fill="rgb(235,196,21)" fg:x="53905" fg:w="33"/><text x="70.2456%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (33 samples, 0.04%)</title><rect x="69.9956%" y="1541" width="0.0429%" height="15" fill="rgb(250,133,21)" fg:x="53905" fg:w="33"/><text x="70.2456%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="70.0410%" y="1621" width="0.0104%" height="15" fill="rgb(236,94,32)" fg:x="53940" fg:w="8"/><text x="70.2910%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (394 samples, 0.51%)</title><rect x="70.0514%" y="1605" width="0.5116%" height="15" fill="rgb(219,176,25)" fg:x="53948" fg:w="394"/><text x="70.3014%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (393 samples, 0.51%)</title><rect x="70.0527%" y="1589" width="0.5103%" height="15" fill="rgb(211,17,43)" fg:x="53949" fg:w="393"/><text x="70.3027%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (391 samples, 0.51%)</title><rect x="70.0553%" y="1573" width="0.5077%" height="15" fill="rgb(220,75,23)" fg:x="53951" fg:w="391"/><text x="70.3053%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (388 samples, 0.50%)</title><rect x="70.0592%" y="1557" width="0.5038%" height="15" fill="rgb(215,122,32)" fg:x="53954" fg:w="388"/><text x="70.3092%" y="1567.50"></text></g><g><title>alloc::alloc::Global::grow_impl (388 samples, 0.50%)</title><rect x="70.0592%" y="1541" width="0.5038%" height="15" fill="rgb(218,57,38)" fg:x="53954" fg:w="388"/><text x="70.3092%" y="1551.50"></text></g><g><title>alloc::alloc::realloc (388 samples, 0.50%)</title><rect x="70.0592%" y="1525" width="0.5038%" height="15" fill="rgb(233,208,46)" fg:x="53954" fg:w="388"/><text x="70.3092%" y="1535.50"></text></g><g><title>realloc (384 samples, 0.50%)</title><rect x="70.0644%" y="1509" width="0.4986%" height="15" fill="rgb(221,35,50)" fg:x="53958" fg:w="384"/><text x="70.3144%" y="1519.50"></text></g><g><title>[libc.so.6] (377 samples, 0.49%)</title><rect x="70.0735%" y="1493" width="0.4895%" height="15" fill="rgb(229,213,29)" fg:x="53965" fg:w="377"/><text x="70.3235%" y="1503.50"></text></g><g><title>[libc.so.6] (374 samples, 0.49%)</title><rect x="70.0774%" y="1477" width="0.4856%" height="15" fill="rgb(229,110,40)" fg:x="53968" fg:w="374"/><text x="70.3274%" y="1487.50"></text></g><g><title>[libc.so.6] (218 samples, 0.28%)</title><rect x="70.2800%" y="1461" width="0.2831%" height="15" fill="rgb(247,206,19)" fg:x="54124" fg:w="218"/><text x="70.5300%" y="1471.50"></text></g><g><title>[libc.so.6] (30 samples, 0.04%)</title><rect x="70.5241%" y="1445" width="0.0390%" height="15" fill="rgb(216,229,45)" fg:x="54312" fg:w="30"/><text x="70.7741%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (399 samples, 0.52%)</title><rect x="70.0514%" y="1621" width="0.5181%" height="15" fill="rgb(205,184,31)" fg:x="53948" fg:w="399"/><text x="70.3014%" y="1631.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="70.5916%" y="1509" width="0.0104%" height="15" fill="rgb(213,91,10)" fg:x="54364" fg:w="8"/><text x="70.8416%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="70.5903%" y="1541" width="0.0182%" height="15" fill="rgb(250,49,8)" fg:x="54363" fg:w="14"/><text x="70.8403%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="70.5916%" y="1525" width="0.0169%" height="15" fill="rgb(207,26,8)" fg:x="54364" fg:w="13"/><text x="70.8416%" y="1535.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (20 samples, 0.03%)</title><rect x="70.5864%" y="1573" width="0.0260%" height="15" fill="rgb(224,2,13)" fg:x="54360" fg:w="20"/><text x="70.8364%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.02%)</title><rect x="70.5903%" y="1557" width="0.0221%" height="15" fill="rgb(219,108,27)" fg:x="54363" fg:w="17"/><text x="70.8403%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="70.6137%" y="1525" width="0.0104%" height="15" fill="rgb(240,89,32)" fg:x="54381" fg:w="8"/><text x="70.8637%" y="1535.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.02%)</title><rect x="70.6137%" y="1541" width="0.0247%" height="15" fill="rgb(248,205,3)" fg:x="54381" fg:w="19"/><text x="70.8637%" y="1551.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (54 samples, 0.07%)</title><rect x="70.5695%" y="1621" width="0.0701%" height="15" fill="rgb(236,197,47)" fg:x="54347" fg:w="54"/><text x="70.8195%" y="1631.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (53 samples, 0.07%)</title><rect x="70.5708%" y="1605" width="0.0688%" height="15" fill="rgb(244,185,52)" fg:x="54348" fg:w="53"/><text x="70.8208%" y="1615.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (52 samples, 0.07%)</title><rect x="70.5721%" y="1589" width="0.0675%" height="15" fill="rgb(210,206,23)" fg:x="54349" fg:w="52"/><text x="70.8221%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (21 samples, 0.03%)</title><rect x="70.6124%" y="1573" width="0.0273%" height="15" fill="rgb(251,177,30)" fg:x="54380" fg:w="21"/><text x="70.8624%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.03%)</title><rect x="70.6124%" y="1557" width="0.0273%" height="15" fill="rgb(243,27,45)" fg:x="54380" fg:w="21"/><text x="70.8624%" y="1567.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (524 samples, 0.68%)</title><rect x="69.9605%" y="1653" width="0.6804%" height="15" fill="rgb(248,141,51)" fg:x="53878" fg:w="524"/><text x="70.2105%" y="1663.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (464 samples, 0.60%)</title><rect x="70.0384%" y="1637" width="0.6025%" height="15" fill="rgb(235,102,15)" fg:x="53938" fg:w="464"/><text x="70.2884%" y="1647.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (531 samples, 0.69%)</title><rect x="69.9592%" y="1669" width="0.6895%" height="15" fill="rgb(214,164,53)" fg:x="53877" fg:w="531"/><text x="70.2092%" y="1679.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (538 samples, 0.70%)</title><rect x="69.9579%" y="1685" width="0.6986%" height="15" fill="rgb(228,18,51)" fg:x="53876" fg:w="538"/><text x="70.2079%" y="1695.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (654 samples, 0.85%)</title><rect x="69.8086%" y="1717" width="0.8492%" height="15" fill="rgb(205,211,11)" fg:x="53761" fg:w="654"/><text x="70.0586%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_vm::move_vm_ext::resolver::MoveResolverExt&gt;::get_standard_resource (652 samples, 0.85%)</title><rect x="69.8112%" y="1701" width="0.8466%" height="15" fill="rgb(208,63,6)" fg:x="53763" fg:w="652"/><text x="70.0612%" y="1711.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (728 samples, 0.95%)</title><rect x="69.7242%" y="1749" width="0.9453%" height="15" fill="rgb(245,76,14)" fg:x="53696" fg:w="728"/><text x="69.9742%" y="1759.50"></text></g><g><title>aptos_vm::move_vm_ext::resolver::MoveResolverExt::get_any_resource (726 samples, 0.94%)</title><rect x="69.7268%" y="1733" width="0.9427%" height="15" fill="rgb(234,176,34)" fg:x="53698" fg:w="726"/><text x="69.9768%" y="1743.50"></text></g><g><title>move_core_types::language_storage::StructTag::module_id (9 samples, 0.01%)</title><rect x="70.6578%" y="1717" width="0.0117%" height="15" fill="rgb(243,156,42)" fg:x="54415" fg:w="9"/><text x="70.9078%" y="1727.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (8 samples, 0.01%)</title><rect x="70.6591%" y="1701" width="0.0104%" height="15" fill="rgb(237,182,10)" fg:x="54416" fg:w="8"/><text x="70.9091%" y="1711.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="70.6591%" y="1685" width="0.0104%" height="15" fill="rgb(244,117,0)" fg:x="54416" fg:w="8"/><text x="70.9091%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="70.6591%" y="1669" width="0.0104%" height="15" fill="rgb(239,91,50)" fg:x="54416" fg:w="8"/><text x="70.9091%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (9 samples, 0.01%)</title><rect x="70.6786%" y="1749" width="0.0117%" height="15" fill="rgb(206,38,9)" fg:x="54431" fg:w="9"/><text x="70.9286%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (9 samples, 0.01%)</title><rect x="70.6786%" y="1733" width="0.0117%" height="15" fill="rgb(205,25,10)" fg:x="54431" fg:w="9"/><text x="70.9286%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="70.6799%" y="1717" width="0.0104%" height="15" fill="rgb(206,224,7)" fg:x="54432" fg:w="8"/><text x="70.9299%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (47 samples, 0.06%)</title><rect x="70.6994%" y="1749" width="0.0610%" height="15" fill="rgb(227,157,10)" fg:x="54447" fg:w="47"/><text x="70.9494%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (39 samples, 0.05%)</title><rect x="70.7098%" y="1733" width="0.0506%" height="15" fill="rgb(214,157,37)" fg:x="54455" fg:w="39"/><text x="70.9598%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (34 samples, 0.04%)</title><rect x="70.7163%" y="1717" width="0.0441%" height="15" fill="rgb(209,180,35)" fg:x="54460" fg:w="34"/><text x="70.9663%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (34 samples, 0.04%)</title><rect x="70.7163%" y="1701" width="0.0441%" height="15" fill="rgb(216,174,49)" fg:x="54460" fg:w="34"/><text x="70.9663%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (34 samples, 0.04%)</title><rect x="70.7163%" y="1685" width="0.0441%" height="15" fill="rgb(205,96,20)" fg:x="54460" fg:w="34"/><text x="70.9663%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (34 samples, 0.04%)</title><rect x="70.7163%" y="1669" width="0.0441%" height="15" fill="rgb(214,220,39)" fg:x="54460" fg:w="34"/><text x="70.9663%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.04%)</title><rect x="70.7163%" y="1653" width="0.0441%" height="15" fill="rgb(245,126,30)" fg:x="54460" fg:w="34"/><text x="70.9663%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.04%)</title><rect x="70.7163%" y="1637" width="0.0441%" height="15" fill="rgb(215,88,33)" fg:x="54460" fg:w="34"/><text x="70.9663%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.04%)</title><rect x="70.7163%" y="1621" width="0.0441%" height="15" fill="rgb(210,1,49)" fg:x="54460" fg:w="34"/><text x="70.9663%" y="1631.50"></text></g><g><title>malloc (32 samples, 0.04%)</title><rect x="70.7188%" y="1605" width="0.0416%" height="15" fill="rgb(207,133,3)" fg:x="54462" fg:w="32"/><text x="70.9688%" y="1615.50"></text></g><g><title>[libc.so.6] (30 samples, 0.04%)</title><rect x="70.7214%" y="1589" width="0.0390%" height="15" fill="rgb(231,47,43)" fg:x="54464" fg:w="30"/><text x="70.9714%" y="1599.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="70.7461%" y="1573" width="0.0143%" height="15" fill="rgb(245,64,1)" fg:x="54483" fg:w="11"/><text x="70.9961%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (8 samples, 0.01%)</title><rect x="70.7916%" y="1733" width="0.0104%" height="15" fill="rgb(253,145,20)" fg:x="54518" fg:w="8"/><text x="71.0416%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (8 samples, 0.01%)</title><rect x="70.7916%" y="1717" width="0.0104%" height="15" fill="rgb(211,39,18)" fg:x="54518" fg:w="8"/><text x="71.0416%" y="1727.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (25 samples, 0.03%)</title><rect x="70.7825%" y="1749" width="0.0325%" height="15" fill="rgb(223,225,18)" fg:x="54511" fg:w="25"/><text x="71.0325%" y="1759.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="70.8240%" y="1621" width="0.0286%" height="15" fill="rgb(210,202,44)" fg:x="54543" fg:w="22"/><text x="71.0740%" y="1631.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="70.8357%" y="1605" width="0.0169%" height="15" fill="rgb(231,138,36)" fg:x="54552" fg:w="13"/><text x="71.0857%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="70.8383%" y="1589" width="0.0143%" height="15" fill="rgb(237,115,25)" fg:x="54554" fg:w="11"/><text x="71.0883%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="70.8383%" y="1573" width="0.0143%" height="15" fill="rgb(215,53,48)" fg:x="54554" fg:w="11"/><text x="71.0883%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="70.8383%" y="1557" width="0.0143%" height="15" fill="rgb(243,193,24)" fg:x="54554" fg:w="11"/><text x="71.0883%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="70.8383%" y="1541" width="0.0143%" height="15" fill="rgb(210,106,28)" fg:x="54554" fg:w="11"/><text x="71.0883%" y="1551.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (28 samples, 0.04%)</title><rect x="70.8214%" y="1701" width="0.0364%" height="15" fill="rgb(249,192,0)" fg:x="54541" fg:w="28"/><text x="71.0714%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="70.8227%" y="1685" width="0.0351%" height="15" fill="rgb(224,96,21)" fg:x="54542" fg:w="27"/><text x="71.0727%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.04%)</title><rect x="70.8227%" y="1669" width="0.0351%" height="15" fill="rgb(243,160,19)" fg:x="54542" fg:w="27"/><text x="71.0727%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.04%)</title><rect x="70.8227%" y="1653" width="0.0351%" height="15" fill="rgb(219,205,50)" fg:x="54542" fg:w="27"/><text x="71.0727%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.04%)</title><rect x="70.8227%" y="1637" width="0.0351%" height="15" fill="rgb(218,175,44)" fg:x="54542" fg:w="27"/><text x="71.0727%" y="1647.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="70.8604%" y="1653" width="0.0104%" height="15" fill="rgb(251,84,47)" fg:x="54571" fg:w="8"/><text x="71.1104%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="70.8604%" y="1637" width="0.0104%" height="15" fill="rgb(241,14,16)" fg:x="54571" fg:w="8"/><text x="71.1104%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (46 samples, 0.06%)</title><rect x="70.8149%" y="1749" width="0.0597%" height="15" fill="rgb(207,142,28)" fg:x="54536" fg:w="46"/><text x="71.0649%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (46 samples, 0.06%)</title><rect x="70.8149%" y="1733" width="0.0597%" height="15" fill="rgb(208,116,22)" fg:x="54536" fg:w="46"/><text x="71.0649%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (45 samples, 0.06%)</title><rect x="70.8162%" y="1717" width="0.0584%" height="15" fill="rgb(210,0,43)" fg:x="54537" fg:w="45"/><text x="71.0662%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.02%)</title><rect x="70.8591%" y="1701" width="0.0156%" height="15" fill="rgb(246,33,21)" fg:x="54570" fg:w="12"/><text x="71.1091%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.02%)</title><rect x="70.8591%" y="1685" width="0.0156%" height="15" fill="rgb(208,158,54)" fg:x="54570" fg:w="12"/><text x="71.1091%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="70.8604%" y="1669" width="0.0143%" height="15" fill="rgb(218,99,29)" fg:x="54571" fg:w="11"/><text x="71.1104%" y="1679.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="70.8941%" y="1653" width="0.0195%" height="15" fill="rgb(226,29,7)" fg:x="54597" fg:w="15"/><text x="71.1441%" y="1663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.02%)</title><rect x="70.8941%" y="1637" width="0.0195%" height="15" fill="rgb(206,178,46)" fg:x="54597" fg:w="15"/><text x="71.1441%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="70.9032%" y="1621" width="0.0104%" height="15" fill="rgb(205,169,32)" fg:x="54604" fg:w="8"/><text x="71.1532%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (44 samples, 0.06%)</title><rect x="70.8747%" y="1749" width="0.0571%" height="15" fill="rgb(217,4,13)" fg:x="54582" fg:w="44"/><text x="71.1247%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (44 samples, 0.06%)</title><rect x="70.8747%" y="1733" width="0.0571%" height="15" fill="rgb(210,140,37)" fg:x="54582" fg:w="44"/><text x="71.1247%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (39 samples, 0.05%)</title><rect x="70.8812%" y="1717" width="0.0506%" height="15" fill="rgb(229,80,10)" fg:x="54587" fg:w="39"/><text x="71.1312%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31 samples, 0.04%)</title><rect x="70.8915%" y="1701" width="0.0403%" height="15" fill="rgb(212,175,34)" fg:x="54595" fg:w="31"/><text x="71.1415%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31 samples, 0.04%)</title><rect x="70.8915%" y="1685" width="0.0403%" height="15" fill="rgb(216,207,24)" fg:x="54595" fg:w="31"/><text x="71.1415%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.04%)</title><rect x="70.8915%" y="1669" width="0.0403%" height="15" fill="rgb(234,163,3)" fg:x="54595" fg:w="31"/><text x="71.1415%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.02%)</title><rect x="70.9136%" y="1653" width="0.0182%" height="15" fill="rgb(248,101,16)" fg:x="54612" fg:w="14"/><text x="71.1636%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="70.9136%" y="1637" width="0.0182%" height="15" fill="rgb(209,152,54)" fg:x="54612" fg:w="14"/><text x="71.1636%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.02%)</title><rect x="70.9136%" y="1621" width="0.0182%" height="15" fill="rgb(229,124,51)" fg:x="54612" fg:w="14"/><text x="71.1636%" y="1631.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (25 samples, 0.03%)</title><rect x="70.9824%" y="1445" width="0.0325%" height="15" fill="rgb(219,83,18)" fg:x="54665" fg:w="25"/><text x="71.2324%" y="1455.50"></text></g><g><title>serde::de::SeqAccess::next_element (15 samples, 0.02%)</title><rect x="70.9954%" y="1429" width="0.0195%" height="15" fill="rgb(206,29,38)" fg:x="54675" fg:w="15"/><text x="71.2454%" y="1439.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (15 samples, 0.02%)</title><rect x="70.9954%" y="1413" width="0.0195%" height="15" fill="rgb(245,123,23)" fg:x="54675" fg:w="15"/><text x="71.2454%" y="1423.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.02%)</title><rect x="70.9967%" y="1397" width="0.0182%" height="15" fill="rgb(238,50,33)" fg:x="54676" fg:w="14"/><text x="71.2467%" y="1407.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (14 samples, 0.02%)</title><rect x="70.9967%" y="1381" width="0.0182%" height="15" fill="rgb(234,165,23)" fg:x="54676" fg:w="14"/><text x="71.2467%" y="1391.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (14 samples, 0.02%)</title><rect x="70.9967%" y="1365" width="0.0182%" height="15" fill="rgb(211,82,31)" fg:x="54676" fg:w="14"/><text x="71.2467%" y="1375.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (11 samples, 0.01%)</title><rect x="71.0006%" y="1349" width="0.0143%" height="15" fill="rgb(224,166,46)" fg:x="54679" fg:w="11"/><text x="71.2506%" y="1359.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (42 samples, 0.05%)</title><rect x="70.9617%" y="1541" width="0.0545%" height="15" fill="rgb(211,13,8)" fg:x="54649" fg:w="42"/><text x="71.2117%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (32 samples, 0.04%)</title><rect x="70.9747%" y="1525" width="0.0416%" height="15" fill="rgb(212,7,42)" fg:x="54659" fg:w="32"/><text x="71.2247%" y="1535.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (32 samples, 0.04%)</title><rect x="70.9747%" y="1509" width="0.0416%" height="15" fill="rgb(249,102,19)" fg:x="54659" fg:w="32"/><text x="71.2247%" y="1519.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (27 samples, 0.04%)</title><rect x="70.9811%" y="1493" width="0.0351%" height="15" fill="rgb(225,41,13)" fg:x="54664" fg:w="27"/><text x="71.2311%" y="1503.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (26 samples, 0.03%)</title><rect x="70.9824%" y="1477" width="0.0338%" height="15" fill="rgb(220,65,27)" fg:x="54665" fg:w="26"/><text x="71.2324%" y="1487.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (26 samples, 0.03%)</title><rect x="70.9824%" y="1461" width="0.0338%" height="15" fill="rgb(206,4,41)" fg:x="54665" fg:w="26"/><text x="71.2324%" y="1471.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (46 samples, 0.06%)</title><rect x="70.9604%" y="1573" width="0.0597%" height="15" fill="rgb(219,60,39)" fg:x="54648" fg:w="46"/><text x="71.2104%" y="1583.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (46 samples, 0.06%)</title><rect x="70.9604%" y="1557" width="0.0597%" height="15" fill="rgb(226,4,38)" fg:x="54648" fg:w="46"/><text x="71.2104%" y="1567.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (56 samples, 0.07%)</title><rect x="70.9565%" y="1589" width="0.0727%" height="15" fill="rgb(250,52,3)" fg:x="54645" fg:w="56"/><text x="71.2065%" y="1599.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (57 samples, 0.07%)</title><rect x="70.9565%" y="1605" width="0.0740%" height="15" fill="rgb(234,93,0)" fg:x="54645" fg:w="57"/><text x="71.2065%" y="1615.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (64 samples, 0.08%)</title><rect x="70.9552%" y="1621" width="0.0831%" height="15" fill="rgb(251,47,47)" fg:x="54644" fg:w="64"/><text x="71.2052%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (69 samples, 0.09%)</title><rect x="70.9539%" y="1637" width="0.0896%" height="15" fill="rgb(205,166,47)" fg:x="54643" fg:w="69"/><text x="71.2039%" y="1647.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (72 samples, 0.09%)</title><rect x="70.9526%" y="1653" width="0.0935%" height="15" fill="rgb(231,148,8)" fg:x="54642" fg:w="72"/><text x="71.2026%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (76 samples, 0.10%)</title><rect x="70.9513%" y="1669" width="0.0987%" height="15" fill="rgb(244,185,19)" fg:x="54641" fg:w="76"/><text x="71.2013%" y="1679.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (77 samples, 0.10%)</title><rect x="70.9513%" y="1685" width="0.1000%" height="15" fill="rgb(224,201,45)" fg:x="54641" fg:w="77"/><text x="71.2013%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (79 samples, 0.10%)</title><rect x="70.9513%" y="1701" width="0.1026%" height="15" fill="rgb(240,77,39)" fg:x="54641" fg:w="79"/><text x="71.2013%" y="1711.50"></text></g><g><title>bcs::de::from_bytes_seed (90 samples, 0.12%)</title><rect x="70.9396%" y="1733" width="0.1169%" height="15" fill="rgb(248,211,29)" fg:x="54632" fg:w="90"/><text x="71.1896%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (84 samples, 0.11%)</title><rect x="70.9474%" y="1717" width="0.1091%" height="15" fill="rgb(232,214,46)" fg:x="54638" fg:w="84"/><text x="71.1974%" y="1727.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,031 samples, 1.34%)</title><rect x="69.7190%" y="1765" width="1.3388%" height="15" fill="rgb(213,99,54)" fg:x="53692" fg:w="1031"/><text x="69.9690%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (91 samples, 0.12%)</title><rect x="70.9396%" y="1749" width="0.1182%" height="15" fill="rgb(240,19,46)" fg:x="54632" fg:w="91"/><text x="71.1896%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,100 samples, 1.43%)</title><rect x="69.6346%" y="1781" width="1.4283%" height="15" fill="rgb(243,89,10)" fg:x="53627" fg:w="1100"/><text x="69.8846%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (11 samples, 0.01%)</title><rect x="71.0630%" y="1781" width="0.0143%" height="15" fill="rgb(249,28,32)" fg:x="54727" fg:w="11"/><text x="71.3130%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (1,130 samples, 1.47%)</title><rect x="69.6255%" y="1797" width="1.4673%" height="15" fill="rgb(253,30,9)" fg:x="53620" fg:w="1130"/><text x="69.8755%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (12 samples, 0.02%)</title><rect x="71.0772%" y="1781" width="0.0156%" height="15" fill="rgb(217,2,26)" fg:x="54738" fg:w="12"/><text x="71.3272%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::borrow_global (9 samples, 0.01%)</title><rect x="71.0811%" y="1765" width="0.0117%" height="15" fill="rgb(220,28,10)" fg:x="54741" fg:w="9"/><text x="71.3311%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (83 samples, 0.11%)</title><rect x="71.0928%" y="1797" width="0.1078%" height="15" fill="rgb(228,167,49)" fg:x="54750" fg:w="83"/><text x="71.3428%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (21 samples, 0.03%)</title><rect x="71.2006%" y="1797" width="0.0273%" height="15" fill="rgb(238,212,3)" fg:x="54833" fg:w="21"/><text x="71.4506%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (10 samples, 0.01%)</title><rect x="71.2149%" y="1781" width="0.0130%" height="15" fill="rgb(229,134,44)" fg:x="54844" fg:w="10"/><text x="71.4649%" y="1791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (39 samples, 0.05%)</title><rect x="71.2292%" y="1781" width="0.0506%" height="15" fill="rgb(208,71,4)" fg:x="54855" fg:w="39"/><text x="71.4792%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (26 samples, 0.03%)</title><rect x="71.2798%" y="1781" width="0.0338%" height="15" fill="rgb(221,205,45)" fg:x="54894" fg:w="26"/><text x="71.5298%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (16 samples, 0.02%)</title><rect x="71.3382%" y="1765" width="0.0208%" height="15" fill="rgb(215,132,38)" fg:x="54939" fg:w="16"/><text x="71.5882%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (8 samples, 0.01%)</title><rect x="71.3590%" y="1765" width="0.0104%" height="15" fill="rgb(227,158,6)" fg:x="54955" fg:w="8"/><text x="71.6090%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (14 samples, 0.02%)</title><rect x="71.3694%" y="1765" width="0.0182%" height="15" fill="rgb(250,10,38)" fg:x="54963" fg:w="14"/><text x="71.6194%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (149 samples, 0.19%)</title><rect x="71.2279%" y="1797" width="0.1935%" height="15" fill="rgb(225,171,40)" fg:x="54854" fg:w="149"/><text x="71.4779%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (83 samples, 0.11%)</title><rect x="71.3136%" y="1781" width="0.1078%" height="15" fill="rgb(238,17,43)" fg:x="54920" fg:w="83"/><text x="71.5636%" y="1791.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (26 samples, 0.03%)</title><rect x="71.3876%" y="1765" width="0.0338%" height="15" fill="rgb(208,145,4)" fg:x="54977" fg:w="26"/><text x="71.6376%" y="1775.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (11 samples, 0.01%)</title><rect x="71.4071%" y="1749" width="0.0143%" height="15" fill="rgb(232,82,7)" fg:x="54992" fg:w="11"/><text x="71.6571%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (133 samples, 0.17%)</title><rect x="71.4213%" y="1797" width="0.1727%" height="15" fill="rgb(205,166,38)" fg:x="55003" fg:w="133"/><text x="71.6713%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.03%)</title><rect x="71.5616%" y="1781" width="0.0325%" height="15" fill="rgb(240,228,4)" fg:x="55111" fg:w="25"/><text x="71.8116%" y="1791.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="71.5811%" y="1765" width="0.0130%" height="15" fill="rgb(233,121,40)" fg:x="55126" fg:w="10"/><text x="71.8311%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Function::code (8 samples, 0.01%)</title><rect x="71.5940%" y="1797" width="0.0104%" height="15" fill="rgb(243,84,30)" fg:x="55136" fg:w="8"/><text x="71.8440%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (15 samples, 0.02%)</title><rect x="71.6083%" y="1797" width="0.0195%" height="15" fill="rgb(235,81,48)" fg:x="55147" fg:w="15"/><text x="71.8583%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_type (20 samples, 0.03%)</title><rect x="71.6278%" y="1797" width="0.0260%" height="15" fill="rgb(218,137,0)" fg:x="55162" fg:w="20"/><text x="71.8778%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (33 samples, 0.04%)</title><rect x="71.6538%" y="1797" width="0.0429%" height="15" fill="rgb(223,151,48)" fg:x="55182" fg:w="33"/><text x="71.9038%" y="1807.50"></text></g><g><title>move_vm_runtime::tracing::trace (75 samples, 0.10%)</title><rect x="71.6966%" y="1797" width="0.0974%" height="15" fill="rgb(247,30,19)" fg:x="55215" fg:w="75"/><text x="71.9466%" y="1807.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.02%)</title><rect x="71.7745%" y="1781" width="0.0195%" height="15" fill="rgb(205,129,29)" fg:x="55275" fg:w="15"/><text x="72.0245%" y="1791.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (15 samples, 0.02%)</title><rect x="71.7745%" y="1765" width="0.0195%" height="15" fill="rgb(222,29,2)" fg:x="55275" fg:w="15"/><text x="72.0245%" y="1775.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (15 samples, 0.02%)</title><rect x="71.7745%" y="1749" width="0.0195%" height="15" fill="rgb(232,145,33)" fg:x="55275" fg:w="15"/><text x="72.0245%" y="1759.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (15 samples, 0.02%)</title><rect x="71.7745%" y="1733" width="0.0195%" height="15" fill="rgb(217,30,31)" fg:x="55275" fg:w="15"/><text x="72.0245%" y="1743.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (15 samples, 0.02%)</title><rect x="71.7745%" y="1717" width="0.0195%" height="15" fill="rgb(243,22,52)" fg:x="55275" fg:w="15"/><text x="72.0245%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (40 samples, 0.05%)</title><rect x="71.8356%" y="1781" width="0.0519%" height="15" fill="rgb(254,228,14)" fg:x="55322" fg:w="40"/><text x="72.0856%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (11 samples, 0.01%)</title><rect x="71.9433%" y="1765" width="0.0143%" height="15" fill="rgb(231,45,50)" fg:x="55405" fg:w="11"/><text x="72.1933%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (133 samples, 0.17%)</title><rect x="71.7940%" y="1797" width="0.1727%" height="15" fill="rgb(248,125,3)" fg:x="55290" fg:w="133"/><text x="72.0440%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (53 samples, 0.07%)</title><rect x="71.8979%" y="1781" width="0.0688%" height="15" fill="rgb(213,76,9)" fg:x="55370" fg:w="53"/><text x="72.1479%" y="1791.50"></text></g><g><title>core::mem::replace (37 samples, 0.05%)</title><rect x="72.1147%" y="1765" width="0.0480%" height="15" fill="rgb(238,108,21)" fg:x="55537" fg:w="37"/><text x="72.3647%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (155 samples, 0.20%)</title><rect x="71.9667%" y="1797" width="0.2013%" height="15" fill="rgb(229,214,19)" fg:x="55423" fg:w="155"/><text x="72.2167%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (76 samples, 0.10%)</title><rect x="72.0693%" y="1781" width="0.0987%" height="15" fill="rgb(252,201,5)" fg:x="55502" fg:w="76"/><text x="72.3193%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (31 samples, 0.04%)</title><rect x="72.1680%" y="1797" width="0.0403%" height="15" fill="rgb(233,165,49)" fg:x="55578" fg:w="31"/><text x="72.4180%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (11 samples, 0.01%)</title><rect x="72.1939%" y="1781" width="0.0143%" height="15" fill="rgb(208,165,19)" fg:x="55598" fg:w="11"/><text x="72.4439%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (28 samples, 0.04%)</title><rect x="72.2082%" y="1797" width="0.0364%" height="15" fill="rgb(216,220,31)" fg:x="55609" fg:w="28"/><text x="72.4582%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (26 samples, 0.03%)</title><rect x="72.2108%" y="1781" width="0.0338%" height="15" fill="rgb(214,8,31)" fg:x="55611" fg:w="26"/><text x="72.4608%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (24 samples, 0.03%)</title><rect x="72.2134%" y="1765" width="0.0312%" height="15" fill="rgb(220,32,32)" fg:x="55613" fg:w="24"/><text x="72.4634%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::write_ref (47 samples, 0.06%)</title><rect x="72.2485%" y="1797" width="0.0610%" height="15" fill="rgb(237,172,34)" fg:x="55640" fg:w="47"/><text x="72.4985%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::write_ref (41 samples, 0.05%)</title><rect x="72.2563%" y="1781" width="0.0532%" height="15" fill="rgb(240,209,5)" fg:x="55646" fg:w="41"/><text x="72.5063%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::write_ref (31 samples, 0.04%)</title><rect x="72.2693%" y="1765" width="0.0403%" height="15" fill="rgb(221,219,1)" fg:x="55656" fg:w="31"/><text x="72.5193%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::mark_dirty (8 samples, 0.01%)</title><rect x="72.2991%" y="1749" width="0.0104%" height="15" fill="rgb(237,90,36)" fg:x="55679" fg:w="8"/><text x="72.5491%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="72.3108%" y="1781" width="0.0104%" height="15" fill="rgb(245,14,51)" fg:x="55688" fg:w="8"/><text x="72.5608%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::Container::len (10 samples, 0.01%)</title><rect x="72.3524%" y="1765" width="0.0130%" height="15" fill="rgb(211,71,49)" fg:x="55720" fg:w="10"/><text x="72.6024%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (44 samples, 0.06%)</title><rect x="72.3095%" y="1797" width="0.0571%" height="15" fill="rgb(230,223,9)" fg:x="55687" fg:w="44"/><text x="72.5595%" y="1807.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (35 samples, 0.05%)</title><rect x="72.3212%" y="1781" width="0.0454%" height="15" fill="rgb(212,33,31)" fg:x="55696" fg:w="35"/><text x="72.5712%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (5,100 samples, 6.62%)</title><rect x="65.7612%" y="1829" width="6.6223%" height="15" fill="rgb(218,141,5)" fg:x="50644" fg:w="5100"/><text x="66.0112%" y="1839.50">move_vm_r..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (5,079 samples, 6.60%)</title><rect x="65.7884%" y="1813" width="6.5951%" height="15" fill="rgb(239,194,8)" fg:x="50665" fg:w="5079"/><text x="66.0384%" y="1823.50">move_vm_r..</text></g><g><title>move_vm_types::values::values_impl::Value::u64 (10 samples, 0.01%)</title><rect x="72.3705%" y="1797" width="0.0130%" height="15" fill="rgb(225,119,29)" fg:x="55734" fg:w="10"/><text x="72.6205%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="72.4407%" y="1781" width="0.0182%" height="15" fill="rgb(233,32,3)" fg:x="55788" fg:w="14"/><text x="72.6907%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (8 samples, 0.01%)</title><rect x="72.4588%" y="1781" width="0.0104%" height="15" fill="rgb(248,126,40)" fg:x="55802" fg:w="8"/><text x="72.7088%" y="1791.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="72.4588%" y="1765" width="0.0104%" height="15" fill="rgb(213,102,53)" fg:x="55802" fg:w="8"/><text x="72.7088%" y="1775.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (8 samples, 0.01%)</title><rect x="72.4588%" y="1749" width="0.0104%" height="15" fill="rgb(212,69,15)" fg:x="55802" fg:w="8"/><text x="72.7088%" y="1759.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (14 samples, 0.02%)</title><rect x="72.4692%" y="1781" width="0.0182%" height="15" fill="rgb(253,39,34)" fg:x="55810" fg:w="14"/><text x="72.7192%" y="1791.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (14 samples, 0.02%)</title><rect x="72.4692%" y="1765" width="0.0182%" height="15" fill="rgb(205,189,54)" fg:x="55810" fg:w="14"/><text x="72.7192%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="72.5342%" y="1637" width="0.0143%" height="15" fill="rgb(234,229,45)" fg:x="55860" fg:w="11"/><text x="72.7842%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (42 samples, 0.05%)</title><rect x="72.5186%" y="1685" width="0.0545%" height="15" fill="rgb(243,79,48)" fg:x="55848" fg:w="42"/><text x="72.7686%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (42 samples, 0.05%)</title><rect x="72.5186%" y="1669" width="0.0545%" height="15" fill="rgb(206,71,50)" fg:x="55848" fg:w="42"/><text x="72.7686%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (42 samples, 0.05%)</title><rect x="72.5186%" y="1653" width="0.0545%" height="15" fill="rgb(209,32,17)" fg:x="55848" fg:w="42"/><text x="72.7686%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="72.5484%" y="1637" width="0.0247%" height="15" fill="rgb(219,229,6)" fg:x="55871" fg:w="19"/><text x="72.7984%" y="1647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.02%)</title><rect x="72.5510%" y="1621" width="0.0221%" height="15" fill="rgb(226,25,27)" fg:x="55873" fg:w="17"/><text x="72.8010%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (13 samples, 0.02%)</title><rect x="72.5731%" y="1685" width="0.0169%" height="15" fill="rgb(218,185,23)" fg:x="55890" fg:w="13"/><text x="72.8231%" y="1695.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (26 samples, 0.03%)</title><rect x="72.5900%" y="1605" width="0.0338%" height="15" fill="rgb(242,123,5)" fg:x="55903" fg:w="26"/><text x="72.8400%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_usize (26 samples, 0.03%)</title><rect x="72.5900%" y="1589" width="0.0338%" height="15" fill="rgb(215,53,19)" fg:x="55903" fg:w="26"/><text x="72.8400%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.03%)</title><rect x="72.5900%" y="1573" width="0.0338%" height="15" fill="rgb(233,20,30)" fg:x="55903" fg:w="26"/><text x="72.8400%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (26 samples, 0.03%)</title><rect x="72.5900%" y="1557" width="0.0338%" height="15" fill="rgb(209,67,20)" fg:x="55903" fg:w="26"/><text x="72.8400%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.03%)</title><rect x="72.5913%" y="1541" width="0.0325%" height="15" fill="rgb(227,181,50)" fg:x="55904" fg:w="25"/><text x="72.8413%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (28 samples, 0.04%)</title><rect x="72.6640%" y="1525" width="0.0364%" height="15" fill="rgb(252,75,38)" fg:x="55960" fg:w="28"/><text x="72.9140%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48 samples, 0.06%)</title><rect x="72.6523%" y="1541" width="0.0623%" height="15" fill="rgb(235,9,33)" fg:x="55951" fg:w="48"/><text x="72.9023%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.01%)</title><rect x="72.7004%" y="1525" width="0.0143%" height="15" fill="rgb(208,87,30)" fg:x="55988" fg:w="11"/><text x="72.9504%" y="1535.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (97 samples, 0.13%)</title><rect x="72.5900%" y="1653" width="0.1260%" height="15" fill="rgb(215,199,39)" fg:x="55903" fg:w="97"/><text x="72.8400%" y="1663.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (97 samples, 0.13%)</title><rect x="72.5900%" y="1637" width="0.1260%" height="15" fill="rgb(246,208,12)" fg:x="55903" fg:w="97"/><text x="72.8400%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (97 samples, 0.13%)</title><rect x="72.5900%" y="1621" width="0.1260%" height="15" fill="rgb(206,195,10)" fg:x="55903" fg:w="97"/><text x="72.8400%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (71 samples, 0.09%)</title><rect x="72.6237%" y="1605" width="0.0922%" height="15" fill="rgb(244,1,30)" fg:x="55929" fg:w="71"/><text x="72.8737%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (71 samples, 0.09%)</title><rect x="72.6237%" y="1589" width="0.0922%" height="15" fill="rgb(230,83,5)" fg:x="55929" fg:w="71"/><text x="72.8737%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71 samples, 0.09%)</title><rect x="72.6237%" y="1573" width="0.0922%" height="15" fill="rgb(239,62,17)" fg:x="55929" fg:w="71"/><text x="72.8737%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (67 samples, 0.09%)</title><rect x="72.6289%" y="1557" width="0.0870%" height="15" fill="rgb(252,193,41)" fg:x="55933" fg:w="67"/><text x="72.8789%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="72.7354%" y="1541" width="0.0104%" height="15" fill="rgb(216,142,19)" fg:x="56015" fg:w="8"/><text x="72.9854%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (43 samples, 0.06%)</title><rect x="72.7198%" y="1557" width="0.0558%" height="15" fill="rgb(240,81,38)" fg:x="56003" fg:w="43"/><text x="72.9698%" y="1567.50"></text></g><g><title>core::hash::sip::u8to64_le (23 samples, 0.03%)</title><rect x="72.7458%" y="1541" width="0.0299%" height="15" fill="rgb(240,109,40)" fg:x="56023" fg:w="23"/><text x="72.9958%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="72.7614%" y="1525" width="0.0143%" height="15" fill="rgb(230,123,10)" fg:x="56035" fg:w="11"/><text x="73.0114%" y="1535.50"></text></g><g><title>hashbrown::map::make_hash (222 samples, 0.29%)</title><rect x="72.5030%" y="1717" width="0.2883%" height="15" fill="rgb(253,42,32)" fg:x="55836" fg:w="222"/><text x="72.7530%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (219 samples, 0.28%)</title><rect x="72.5069%" y="1701" width="0.2844%" height="15" fill="rgb(218,154,8)" fg:x="55839" fg:w="219"/><text x="72.7569%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (155 samples, 0.20%)</title><rect x="72.5900%" y="1685" width="0.2013%" height="15" fill="rgb(216,197,10)" fg:x="55903" fg:w="155"/><text x="72.8400%" y="1695.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (155 samples, 0.20%)</title><rect x="72.5900%" y="1669" width="0.2013%" height="15" fill="rgb(223,107,12)" fg:x="55903" fg:w="155"/><text x="72.8400%" y="1679.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (58 samples, 0.08%)</title><rect x="72.7159%" y="1653" width="0.0753%" height="15" fill="rgb(241,174,42)" fg:x="56000" fg:w="58"/><text x="72.9659%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (58 samples, 0.08%)</title><rect x="72.7159%" y="1637" width="0.0753%" height="15" fill="rgb(231,78,20)" fg:x="56000" fg:w="58"/><text x="72.9659%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (58 samples, 0.08%)</title><rect x="72.7159%" y="1621" width="0.0753%" height="15" fill="rgb(230,208,49)" fg:x="56000" fg:w="58"/><text x="72.9659%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (58 samples, 0.08%)</title><rect x="72.7159%" y="1605" width="0.0753%" height="15" fill="rgb(238,11,34)" fg:x="56000" fg:w="58"/><text x="72.9659%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (58 samples, 0.08%)</title><rect x="72.7159%" y="1589" width="0.0753%" height="15" fill="rgb(210,130,26)" fg:x="56000" fg:w="58"/><text x="72.9659%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (58 samples, 0.08%)</title><rect x="72.7159%" y="1573" width="0.0753%" height="15" fill="rgb(242,131,11)" fg:x="56000" fg:w="58"/><text x="72.9659%" y="1583.50"></text></g><g><title>core::hash::Hasher::write_u8 (12 samples, 0.02%)</title><rect x="72.7757%" y="1557" width="0.0156%" height="15" fill="rgb(237,38,28)" fg:x="56046" fg:w="12"/><text x="73.0257%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="72.7770%" y="1541" width="0.0143%" height="15" fill="rgb(244,180,43)" fg:x="56047" fg:w="11"/><text x="73.0270%" y="1551.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="72.8016%" y="1669" width="0.0156%" height="15" fill="rgb(214,171,19)" fg:x="56066" fg:w="12"/><text x="73.0516%" y="1679.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.02%)</title><rect x="72.8016%" y="1653" width="0.0156%" height="15" fill="rgb(252,101,45)" fg:x="56066" fg:w="12"/><text x="73.0516%" y="1663.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (27 samples, 0.04%)</title><rect x="72.8263%" y="1621" width="0.0351%" height="15" fill="rgb(211,96,33)" fg:x="56085" fg:w="27"/><text x="73.0763%" y="1631.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (27 samples, 0.04%)</title><rect x="72.8263%" y="1605" width="0.0351%" height="15" fill="rgb(207,80,25)" fg:x="56085" fg:w="27"/><text x="73.0763%" y="1615.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (27 samples, 0.04%)</title><rect x="72.8263%" y="1589" width="0.0351%" height="15" fill="rgb(225,15,35)" fg:x="56085" fg:w="27"/><text x="73.0763%" y="1599.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (63 samples, 0.08%)</title><rect x="72.8224%" y="1653" width="0.0818%" height="15" fill="rgb(214,93,43)" fg:x="56082" fg:w="63"/><text x="73.0724%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (63 samples, 0.08%)</title><rect x="72.8224%" y="1637" width="0.0818%" height="15" fill="rgb(248,42,37)" fg:x="56082" fg:w="63"/><text x="73.0724%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (33 samples, 0.04%)</title><rect x="72.8614%" y="1621" width="0.0429%" height="15" fill="rgb(217,135,32)" fg:x="56112" fg:w="33"/><text x="73.1114%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (33 samples, 0.04%)</title><rect x="72.8614%" y="1605" width="0.0429%" height="15" fill="rgb(216,74,28)" fg:x="56112" fg:w="33"/><text x="73.1114%" y="1615.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (33 samples, 0.04%)</title><rect x="72.8614%" y="1589" width="0.0429%" height="15" fill="rgb(247,108,16)" fg:x="56112" fg:w="33"/><text x="73.1114%" y="1599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (33 samples, 0.04%)</title><rect x="72.8614%" y="1573" width="0.0429%" height="15" fill="rgb(205,219,30)" fg:x="56112" fg:w="33"/><text x="73.1114%" y="1583.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (33 samples, 0.04%)</title><rect x="72.8614%" y="1557" width="0.0429%" height="15" fill="rgb(241,122,9)" fg:x="56112" fg:w="33"/><text x="73.1114%" y="1567.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (33 samples, 0.04%)</title><rect x="72.8614%" y="1541" width="0.0429%" height="15" fill="rgb(216,148,50)" fg:x="56112" fg:w="33"/><text x="73.1114%" y="1551.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="72.8627%" y="1525" width="0.0416%" height="15" fill="rgb(226,154,2)" fg:x="56113" fg:w="32"/><text x="73.1127%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (72 samples, 0.09%)</title><rect x="72.8172%" y="1669" width="0.0935%" height="15" fill="rgb(220,128,1)" fg:x="56078" fg:w="72"/><text x="73.0672%" y="1679.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (26 samples, 0.03%)</title><rect x="72.9185%" y="1669" width="0.0338%" height="15" fill="rgb(245,185,29)" fg:x="56156" fg:w="26"/><text x="73.1685%" y="1679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (26 samples, 0.03%)</title><rect x="72.9185%" y="1653" width="0.0338%" height="15" fill="rgb(243,161,2)" fg:x="56156" fg:w="26"/><text x="73.1685%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.03%)</title><rect x="72.9185%" y="1637" width="0.0338%" height="15" fill="rgb(249,215,17)" fg:x="56156" fg:w="26"/><text x="73.1685%" y="1647.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (441 samples, 0.57%)</title><rect x="72.3835%" y="1829" width="0.5726%" height="15" fill="rgb(237,67,11)" fg:x="55744" fg:w="441"/><text x="72.6335%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (423 samples, 0.55%)</title><rect x="72.4069%" y="1813" width="0.5493%" height="15" fill="rgb(239,17,24)" fg:x="55762" fg:w="423"/><text x="72.6569%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (398 samples, 0.52%)</title><rect x="72.4394%" y="1797" width="0.5168%" height="15" fill="rgb(215,97,29)" fg:x="55787" fg:w="398"/><text x="72.6894%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (361 samples, 0.47%)</title><rect x="72.4874%" y="1781" width="0.4688%" height="15" fill="rgb(253,228,42)" fg:x="55824" fg:w="361"/><text x="72.7374%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (357 samples, 0.46%)</title><rect x="72.4926%" y="1765" width="0.4636%" height="15" fill="rgb(240,85,2)" fg:x="55828" fg:w="357"/><text x="72.7426%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (357 samples, 0.46%)</title><rect x="72.4926%" y="1749" width="0.4636%" height="15" fill="rgb(214,155,4)" fg:x="55828" fg:w="357"/><text x="72.7426%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (357 samples, 0.46%)</title><rect x="72.4926%" y="1733" width="0.4636%" height="15" fill="rgb(247,120,22)" fg:x="55828" fg:w="357"/><text x="72.7426%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (127 samples, 0.16%)</title><rect x="72.7913%" y="1717" width="0.1649%" height="15" fill="rgb(211,208,6)" fg:x="56058" fg:w="127"/><text x="73.0413%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (127 samples, 0.16%)</title><rect x="72.7913%" y="1701" width="0.1649%" height="15" fill="rgb(235,99,41)" fg:x="56058" fg:w="127"/><text x="73.0413%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (127 samples, 0.16%)</title><rect x="72.7913%" y="1685" width="0.1649%" height="15" fill="rgb(223,28,8)" fg:x="56058" fg:w="127"/><text x="73.0413%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (12 samples, 0.02%)</title><rect x="72.9769%" y="1813" width="0.0156%" height="15" fill="rgb(212,71,20)" fg:x="56201" fg:w="12"/><text x="73.2269%" y="1823.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="72.9769%" y="1797" width="0.0156%" height="15" fill="rgb(206,85,3)" fg:x="56201" fg:w="12"/><text x="73.2269%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="73.1380%" y="1653" width="0.0195%" height="15" fill="rgb(244,180,11)" fg:x="56325" fg:w="15"/><text x="73.3880%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="73.1380%" y="1637" width="0.0195%" height="15" fill="rgb(223,16,21)" fg:x="56325" fg:w="15"/><text x="73.3880%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.02%)</title><rect x="73.1380%" y="1621" width="0.0195%" height="15" fill="rgb(238,85,42)" fg:x="56325" fg:w="15"/><text x="73.3880%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="73.1418%" y="1605" width="0.0156%" height="15" fill="rgb(205,85,8)" fg:x="56328" fg:w="12"/><text x="73.3918%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="73.1418%" y="1589" width="0.0156%" height="15" fill="rgb(217,190,15)" fg:x="56328" fg:w="12"/><text x="73.3918%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="73.1418%" y="1573" width="0.0156%" height="15" fill="rgb(243,192,23)" fg:x="56328" fg:w="12"/><text x="73.3918%" y="1583.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (63 samples, 0.08%)</title><rect x="73.0990%" y="1733" width="0.0818%" height="15" fill="rgb(223,220,37)" fg:x="56295" fg:w="63"/><text x="73.3490%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 0.06%)</title><rect x="73.1237%" y="1717" width="0.0571%" height="15" fill="rgb(208,41,17)" fg:x="56314" fg:w="44"/><text x="73.3737%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.05%)</title><rect x="73.1315%" y="1701" width="0.0493%" height="15" fill="rgb(224,188,7)" fg:x="56320" fg:w="38"/><text x="73.3815%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.05%)</title><rect x="73.1315%" y="1685" width="0.0493%" height="15" fill="rgb(236,16,50)" fg:x="56320" fg:w="38"/><text x="73.3815%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.05%)</title><rect x="73.1315%" y="1669" width="0.0493%" height="15" fill="rgb(238,6,24)" fg:x="56320" fg:w="38"/><text x="73.3815%" y="1679.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18 samples, 0.02%)</title><rect x="73.1574%" y="1653" width="0.0234%" height="15" fill="rgb(253,67,45)" fg:x="56340" fg:w="18"/><text x="73.4074%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="73.1808%" y="1733" width="0.0234%" height="15" fill="rgb(210,89,32)" fg:x="56358" fg:w="18"/><text x="73.4308%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="73.1821%" y="1717" width="0.0221%" height="15" fill="rgb(208,89,9)" fg:x="56359" fg:w="17"/><text x="73.4321%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="73.1821%" y="1701" width="0.0221%" height="15" fill="rgb(222,180,44)" fg:x="56359" fg:w="17"/><text x="73.4321%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="73.1860%" y="1685" width="0.0182%" height="15" fill="rgb(250,181,46)" fg:x="56362" fg:w="14"/><text x="73.4360%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="73.1860%" y="1669" width="0.0182%" height="15" fill="rgb(210,190,26)" fg:x="56362" fg:w="14"/><text x="73.4360%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="73.1860%" y="1653" width="0.0182%" height="15" fill="rgb(253,49,13)" fg:x="56362" fg:w="14"/><text x="73.4360%" y="1663.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="73.1912%" y="1637" width="0.0130%" height="15" fill="rgb(240,184,42)" fg:x="56366" fg:w="10"/><text x="73.4412%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (114 samples, 0.15%)</title><rect x="73.0847%" y="1797" width="0.1480%" height="15" fill="rgb(246,59,37)" fg:x="56284" fg:w="114"/><text x="73.3347%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.14%)</title><rect x="73.0951%" y="1781" width="0.1376%" height="15" fill="rgb(207,134,54)" fg:x="56292" fg:w="106"/><text x="73.3451%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.14%)</title><rect x="73.0951%" y="1765" width="0.1376%" height="15" fill="rgb(250,122,24)" fg:x="56292" fg:w="106"/><text x="73.3451%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.14%)</title><rect x="73.0951%" y="1749" width="0.1376%" height="15" fill="rgb(239,206,3)" fg:x="56292" fg:w="106"/><text x="73.3451%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (22 samples, 0.03%)</title><rect x="73.2042%" y="1733" width="0.0286%" height="15" fill="rgb(253,220,32)" fg:x="56376" fg:w="22"/><text x="73.4542%" y="1743.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (21 samples, 0.03%)</title><rect x="73.2535%" y="1717" width="0.0273%" height="15" fill="rgb(209,217,48)" fg:x="56414" fg:w="21"/><text x="73.5035%" y="1727.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (21 samples, 0.03%)</title><rect x="73.2535%" y="1701" width="0.0273%" height="15" fill="rgb(242,91,39)" fg:x="56414" fg:w="21"/><text x="73.5035%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (21 samples, 0.03%)</title><rect x="73.2535%" y="1685" width="0.0273%" height="15" fill="rgb(228,4,13)" fg:x="56414" fg:w="21"/><text x="73.5035%" y="1695.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (21 samples, 0.03%)</title><rect x="73.2535%" y="1669" width="0.0273%" height="15" fill="rgb(223,133,4)" fg:x="56414" fg:w="21"/><text x="73.5035%" y="1679.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (21 samples, 0.03%)</title><rect x="73.2535%" y="1653" width="0.0273%" height="15" fill="rgb(215,105,30)" fg:x="56414" fg:w="21"/><text x="73.5035%" y="1663.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (28 samples, 0.04%)</title><rect x="73.2470%" y="1733" width="0.0364%" height="15" fill="rgb(230,9,4)" fg:x="56409" fg:w="28"/><text x="73.4970%" y="1743.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="73.2951%" y="1717" width="0.0195%" height="15" fill="rgb(248,15,2)" fg:x="56446" fg:w="15"/><text x="73.5451%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="73.2951%" y="1701" width="0.0195%" height="15" fill="rgb(208,210,22)" fg:x="56446" fg:w="15"/><text x="73.5451%" y="1711.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="73.2951%" y="1685" width="0.0195%" height="15" fill="rgb(208,112,41)" fg:x="56446" fg:w="15"/><text x="73.5451%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (14 samples, 0.02%)</title><rect x="73.2964%" y="1669" width="0.0182%" height="15" fill="rgb(232,83,14)" fg:x="56447" fg:w="14"/><text x="73.5464%" y="1679.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeVisitor::finish (9 samples, 0.01%)</title><rect x="73.3145%" y="1717" width="0.0117%" height="15" fill="rgb(229,65,11)" fg:x="56461" fg:w="9"/><text x="73.5645%" y="1727.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (43 samples, 0.06%)</title><rect x="73.2834%" y="1733" width="0.0558%" height="15" fill="rgb(228,126,24)" fg:x="56437" fg:w="43"/><text x="73.5334%" y="1743.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeVisitor::new (10 samples, 0.01%)</title><rect x="73.3262%" y="1717" width="0.0130%" height="15" fill="rgb(218,66,33)" fg:x="56470" fg:w="10"/><text x="73.5762%" y="1727.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function::{{closure}} (73 samples, 0.09%)</title><rect x="73.2457%" y="1765" width="0.0948%" height="15" fill="rgb(251,49,52)" fg:x="56408" fg:w="73"/><text x="73.4957%" y="1775.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (72 samples, 0.09%)</title><rect x="73.2470%" y="1749" width="0.0935%" height="15" fill="rgb(219,46,37)" fg:x="56409" fg:w="72"/><text x="73.4970%" y="1759.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function (91 samples, 0.12%)</title><rect x="73.2327%" y="1797" width="0.1182%" height="15" fill="rgb(213,53,49)" fg:x="56398" fg:w="91"/><text x="73.4827%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (81 samples, 0.11%)</title><rect x="73.2457%" y="1781" width="0.1052%" height="15" fill="rgb(214,134,1)" fg:x="56408" fg:w="81"/><text x="73.4957%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="73.3405%" y="1765" width="0.0104%" height="15" fill="rgb(208,139,43)" fg:x="56481" fg:w="8"/><text x="73.5905%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (66 samples, 0.09%)</title><rect x="73.3509%" y="1797" width="0.0857%" height="15" fill="rgb(231,105,35)" fg:x="56489" fg:w="66"/><text x="73.6009%" y="1807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="73.4366%" y="1797" width="0.0169%" height="15" fill="rgb(247,189,9)" fg:x="56555" fg:w="13"/><text x="73.6866%" y="1807.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (21 samples, 0.03%)</title><rect x="73.4691%" y="1781" width="0.0273%" height="15" fill="rgb(252,48,51)" fg:x="56580" fg:w="21"/><text x="73.7191%" y="1791.50"></text></g><g><title>core::ptr::write (21 samples, 0.03%)</title><rect x="73.4691%" y="1765" width="0.0273%" height="15" fill="rgb(209,121,1)" fg:x="56580" fg:w="21"/><text x="73.7191%" y="1775.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (22 samples, 0.03%)</title><rect x="73.4691%" y="1797" width="0.0286%" height="15" fill="rgb(231,40,26)" fg:x="56580" fg:w="22"/><text x="73.7191%" y="1807.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="73.4976%" y="1797" width="0.0156%" height="15" fill="rgb(251,8,13)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1807.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (12 samples, 0.02%)</title><rect x="73.4976%" y="1781" width="0.0156%" height="15" fill="rgb(231,110,2)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1791.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="73.4976%" y="1765" width="0.0156%" height="15" fill="rgb(216,153,22)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="73.4976%" y="1749" width="0.0156%" height="15" fill="rgb(249,116,49)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="73.4976%" y="1733" width="0.0156%" height="15" fill="rgb(230,89,2)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="73.4976%" y="1717" width="0.0156%" height="15" fill="rgb(231,125,23)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="73.4976%" y="1701" width="0.0156%" height="15" fill="rgb(212,217,18)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="73.4976%" y="1685" width="0.0156%" height="15" fill="rgb(210,21,33)" fg:x="56602" fg:w="12"/><text x="73.7476%" y="1695.50"></text></g><g><title>cfree (23 samples, 0.03%)</title><rect x="73.5132%" y="1797" width="0.0299%" height="15" fill="rgb(241,97,9)" fg:x="56614" fg:w="23"/><text x="73.7632%" y="1807.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="73.5262%" y="1781" width="0.0169%" height="15" fill="rgb(221,35,31)" fg:x="56624" fg:w="13"/><text x="73.7762%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (8 samples, 0.01%)</title><rect x="73.5470%" y="1797" width="0.0104%" height="15" fill="rgb(251,23,23)" fg:x="56640" fg:w="8"/><text x="73.7970%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="73.5470%" y="1781" width="0.0104%" height="15" fill="rgb(227,165,2)" fg:x="56640" fg:w="8"/><text x="73.7970%" y="1791.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="73.5781%" y="1733" width="0.0130%" height="15" fill="rgb(242,24,2)" fg:x="56664" fg:w="10"/><text x="73.8281%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="73.5911%" y="1717" width="0.0169%" height="15" fill="rgb(242,138,51)" fg:x="56674" fg:w="13"/><text x="73.8411%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (10 samples, 0.01%)</title><rect x="73.5950%" y="1701" width="0.0130%" height="15" fill="rgb(220,219,5)" fg:x="56677" fg:w="10"/><text x="73.8450%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (8 samples, 0.01%)</title><rect x="73.5976%" y="1685" width="0.0104%" height="15" fill="rgb(247,53,29)" fg:x="56679" fg:w="8"/><text x="73.8476%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="73.5574%" y="1781" width="0.0532%" height="15" fill="rgb(233,43,39)" fg:x="56648" fg:w="41"/><text x="73.8074%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (40 samples, 0.05%)</title><rect x="73.5587%" y="1765" width="0.0519%" height="15" fill="rgb(230,128,54)" fg:x="56649" fg:w="40"/><text x="73.8087%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (35 samples, 0.05%)</title><rect x="73.5652%" y="1749" width="0.0454%" height="15" fill="rgb(218,20,12)" fg:x="56654" fg:w="35"/><text x="73.8152%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (15 samples, 0.02%)</title><rect x="73.5911%" y="1733" width="0.0195%" height="15" fill="rgb(206,51,14)" fg:x="56674" fg:w="15"/><text x="73.8411%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="73.6106%" y="1749" width="0.0221%" height="15" fill="rgb(223,16,35)" fg:x="56689" fg:w="17"/><text x="73.8606%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="73.6106%" y="1733" width="0.0221%" height="15" fill="rgb(226,165,37)" fg:x="56689" fg:w="17"/><text x="73.8606%" y="1743.50"></text></g><g><title>cfree (16 samples, 0.02%)</title><rect x="73.6119%" y="1717" width="0.0208%" height="15" fill="rgb(240,26,21)" fg:x="56690" fg:w="16"/><text x="73.8619%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (59 samples, 0.08%)</title><rect x="73.5574%" y="1797" width="0.0766%" height="15" fill="rgb(240,72,46)" fg:x="56648" fg:w="59"/><text x="73.8074%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (18 samples, 0.02%)</title><rect x="73.6106%" y="1781" width="0.0234%" height="15" fill="rgb(211,33,41)" fg:x="56689" fg:w="18"/><text x="73.8606%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="73.6106%" y="1765" width="0.0234%" height="15" fill="rgb(224,157,46)" fg:x="56689" fg:w="18"/><text x="73.8606%" y="1775.50"></text></g><g><title>cfree (40 samples, 0.05%)</title><rect x="73.6587%" y="1765" width="0.0519%" height="15" fill="rgb(223,59,19)" fg:x="56726" fg:w="40"/><text x="73.9087%" y="1775.50"></text></g><g><title>[libc.so.6] (29 samples, 0.04%)</title><rect x="73.6729%" y="1749" width="0.0377%" height="15" fill="rgb(239,187,1)" fg:x="56737" fg:w="29"/><text x="73.9229%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="73.7249%" y="1733" width="0.0130%" height="15" fill="rgb(226,95,9)" fg:x="56777" fg:w="10"/><text x="73.9749%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (9 samples, 0.01%)</title><rect x="73.7262%" y="1717" width="0.0117%" height="15" fill="rgb(234,61,54)" fg:x="56778" fg:w="9"/><text x="73.9762%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (81 samples, 0.11%)</title><rect x="73.6340%" y="1797" width="0.1052%" height="15" fill="rgb(205,209,47)" fg:x="56707" fg:w="81"/><text x="73.8840%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (63 samples, 0.08%)</title><rect x="73.6574%" y="1781" width="0.0818%" height="15" fill="rgb(228,7,43)" fg:x="56725" fg:w="63"/><text x="73.9074%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (22 samples, 0.03%)</title><rect x="73.7106%" y="1765" width="0.0286%" height="15" fill="rgb(240,217,52)" fg:x="56766" fg:w="22"/><text x="73.9606%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (11 samples, 0.01%)</title><rect x="73.7249%" y="1749" width="0.0143%" height="15" fill="rgb(211,178,21)" fg:x="56777" fg:w="11"/><text x="73.9749%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[move_vm_types::values::values_impl::Value: 1]&gt;&gt; (11 samples, 0.01%)</title><rect x="73.7392%" y="1797" width="0.0143%" height="15" fill="rgb(205,25,34)" fg:x="56788" fg:w="11"/><text x="73.9892%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[move_vm_types::values::values_impl::Value: 1]&gt;&gt; (8 samples, 0.01%)</title><rect x="73.7431%" y="1781" width="0.0104%" height="15" fill="rgb(209,57,11)" fg:x="56791" fg:w="8"/><text x="73.9931%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="73.7937%" y="1749" width="0.0117%" height="15" fill="rgb(221,99,2)" fg:x="56830" fg:w="9"/><text x="74.0437%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="73.7937%" y="1733" width="0.0117%" height="15" fill="rgb(232,79,22)" fg:x="56830" fg:w="9"/><text x="74.0437%" y="1743.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="73.7950%" y="1717" width="0.0104%" height="15" fill="rgb(221,145,32)" fg:x="56831" fg:w="8"/><text x="74.0450%" y="1727.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="73.7950%" y="1701" width="0.0104%" height="15" fill="rgb(236,133,36)" fg:x="56831" fg:w="8"/><text x="74.0450%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="73.7937%" y="1765" width="0.0130%" height="15" fill="rgb(208,224,44)" fg:x="56830" fg:w="10"/><text x="74.0437%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="73.8145%" y="1765" width="0.0234%" height="15" fill="rgb(235,143,15)" fg:x="56846" fg:w="18"/><text x="74.0645%" y="1775.50"></text></g><g><title>move_table_extension::native_borrow_box::{{closure}} (16 samples, 0.02%)</title><rect x="73.8171%" y="1749" width="0.0208%" height="15" fill="rgb(249,83,27)" fg:x="56848" fg:w="16"/><text x="74.0671%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (16 samples, 0.02%)</title><rect x="73.8171%" y="1733" width="0.0208%" height="15" fill="rgb(238,226,19)" fg:x="56848" fg:w="16"/><text x="74.0671%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (16 samples, 0.02%)</title><rect x="73.8171%" y="1717" width="0.0208%" height="15" fill="rgb(226,206,27)" fg:x="56848" fg:w="16"/><text x="74.0671%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (13 samples, 0.02%)</title><rect x="73.8378%" y="1765" width="0.0169%" height="15" fill="rgb(251,182,9)" fg:x="56864" fg:w="13"/><text x="74.0878%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;move_vm_types::values::values_impl::Value&gt;&gt; (11 samples, 0.01%)</title><rect x="73.8547%" y="1765" width="0.0143%" height="15" fill="rgb(212,140,41)" fg:x="56877" fg:w="11"/><text x="74.1047%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (18 samples, 0.02%)</title><rect x="73.8690%" y="1765" width="0.0234%" height="15" fill="rgb(220,106,18)" fg:x="56888" fg:w="18"/><text x="74.1190%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="73.8690%" y="1749" width="0.0234%" height="15" fill="rgb(252,46,41)" fg:x="56888" fg:w="18"/><text x="74.1190%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (16 samples, 0.02%)</title><rect x="73.8716%" y="1733" width="0.0208%" height="15" fill="rgb(209,222,15)" fg:x="56890" fg:w="16"/><text x="74.1216%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (10 samples, 0.01%)</title><rect x="73.8794%" y="1717" width="0.0130%" height="15" fill="rgb(233,83,50)" fg:x="56896" fg:w="10"/><text x="74.1294%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::StructRef&gt; (9 samples, 0.01%)</title><rect x="73.8924%" y="1765" width="0.0117%" height="15" fill="rgb(205,212,0)" fg:x="56906" fg:w="9"/><text x="74.1424%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (9 samples, 0.01%)</title><rect x="73.8924%" y="1749" width="0.0117%" height="15" fill="rgb(235,117,51)" fg:x="56906" fg:w="9"/><text x="74.1424%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (10 samples, 0.01%)</title><rect x="73.9093%" y="1685" width="0.0130%" height="15" fill="rgb(233,133,48)" fg:x="56919" fg:w="10"/><text x="74.1593%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (10 samples, 0.01%)</title><rect x="73.9093%" y="1669" width="0.0130%" height="15" fill="rgb(219,3,2)" fg:x="56919" fg:w="10"/><text x="74.1593%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (10 samples, 0.01%)</title><rect x="73.9093%" y="1653" width="0.0130%" height="15" fill="rgb(225,80,52)" fg:x="56919" fg:w="10"/><text x="74.1593%" y="1663.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="73.9093%" y="1637" width="0.0130%" height="15" fill="rgb(235,195,42)" fg:x="56919" fg:w="10"/><text x="74.1593%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.02%)</title><rect x="73.9080%" y="1733" width="0.0182%" height="15" fill="rgb(240,207,46)" fg:x="56918" fg:w="14"/><text x="74.1580%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.02%)</title><rect x="73.9080%" y="1717" width="0.0182%" height="15" fill="rgb(236,112,50)" fg:x="56918" fg:w="14"/><text x="74.1580%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.02%)</title><rect x="73.9080%" y="1701" width="0.0182%" height="15" fill="rgb(249,151,27)" fg:x="56918" fg:w="14"/><text x="74.1580%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="73.9261%" y="1685" width="0.0143%" height="15" fill="rgb(253,223,52)" fg:x="56932" fg:w="11"/><text x="74.1761%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="73.9261%" y="1669" width="0.0143%" height="15" fill="rgb(215,55,33)" fg:x="56932" fg:w="11"/><text x="74.1761%" y="1679.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="73.9274%" y="1653" width="0.0130%" height="15" fill="rgb(207,24,17)" fg:x="56933" fg:w="10"/><text x="74.1774%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (29 samples, 0.04%)</title><rect x="73.9080%" y="1749" width="0.0377%" height="15" fill="rgb(218,169,32)" fg:x="56918" fg:w="29"/><text x="74.1580%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.02%)</title><rect x="73.9261%" y="1733" width="0.0195%" height="15" fill="rgb(209,210,6)" fg:x="56932" fg:w="15"/><text x="74.1761%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.02%)</title><rect x="73.9261%" y="1717" width="0.0195%" height="15" fill="rgb(225,208,8)" fg:x="56932" fg:w="15"/><text x="74.1761%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="73.9261%" y="1701" width="0.0195%" height="15" fill="rgb(238,14,32)" fg:x="56932" fg:w="15"/><text x="74.1761%" y="1711.50"></text></g><g><title>move_table_extension::Table::get_or_create_global_value (31 samples, 0.04%)</title><rect x="73.9080%" y="1765" width="0.0403%" height="15" fill="rgb(211,137,3)" fg:x="56918" fg:w="31"/><text x="74.1580%" y="1775.50"></text></g><g><title>move_table_extension::TableData::get_or_create_table (28 samples, 0.04%)</title><rect x="73.9482%" y="1765" width="0.0364%" height="15" fill="rgb(207,171,19)" fg:x="56949" fg:w="28"/><text x="74.1982%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (9 samples, 0.01%)</title><rect x="73.9729%" y="1749" width="0.0117%" height="15" fill="rgb(250,80,8)" fg:x="56968" fg:w="9"/><text x="74.2229%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="73.9729%" y="1733" width="0.0117%" height="15" fill="rgb(209,103,53)" fg:x="56968" fg:w="9"/><text x="74.2229%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.01%)</title><rect x="73.9729%" y="1717" width="0.0117%" height="15" fill="rgb(233,198,10)" fg:x="56968" fg:w="9"/><text x="74.2229%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.01%)</title><rect x="73.9729%" y="1701" width="0.0117%" height="15" fill="rgb(236,125,25)" fg:x="56968" fg:w="9"/><text x="74.2229%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="73.9846%" y="1749" width="0.0156%" height="15" fill="rgb(254,182,48)" fg:x="56977" fg:w="12"/><text x="74.2346%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="74.0118%" y="1701" width="0.0156%" height="15" fill="rgb(216,108,44)" fg:x="56998" fg:w="12"/><text x="74.2618%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (35 samples, 0.05%)</title><rect x="74.0002%" y="1749" width="0.0454%" height="15" fill="rgb(222,72,39)" fg:x="56989" fg:w="35"/><text x="74.2502%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (32 samples, 0.04%)</title><rect x="74.0041%" y="1733" width="0.0416%" height="15" fill="rgb(252,70,39)" fg:x="56992" fg:w="32"/><text x="74.2541%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (30 samples, 0.04%)</title><rect x="74.0066%" y="1717" width="0.0390%" height="15" fill="rgb(243,99,34)" fg:x="56994" fg:w="30"/><text x="74.2566%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="74.0495%" y="1733" width="0.0104%" height="15" fill="rgb(252,109,12)" fg:x="57027" fg:w="8"/><text x="74.2995%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (32 samples, 0.04%)</title><rect x="74.0456%" y="1749" width="0.0416%" height="15" fill="rgb(211,186,10)" fg:x="57024" fg:w="32"/><text x="74.2956%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (21 samples, 0.03%)</title><rect x="74.0599%" y="1733" width="0.0273%" height="15" fill="rgb(246,90,8)" fg:x="57035" fg:w="21"/><text x="74.3099%" y="1743.50"></text></g><g><title>move_table_extension::get_table_handle (99 samples, 0.13%)</title><rect x="73.9846%" y="1765" width="0.1286%" height="15" fill="rgb(226,91,24)" fg:x="56977" fg:w="99"/><text x="74.2346%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (20 samples, 0.03%)</title><rect x="74.0872%" y="1749" width="0.0260%" height="15" fill="rgb(216,28,44)" fg:x="57056" fg:w="20"/><text x="74.3372%" y="1759.50"></text></g><g><title>move_table_extension::serialize (37 samples, 0.05%)</title><rect x="74.1131%" y="1765" width="0.0480%" height="15" fill="rgb(229,36,0)" fg:x="57076" fg:w="37"/><text x="74.3631%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (35 samples, 0.05%)</title><rect x="74.1157%" y="1749" width="0.0454%" height="15" fill="rgb(245,97,18)" fg:x="57078" fg:w="35"/><text x="74.3657%" y="1759.50"></text></g><g><title>bcs::ser::to_bytes (30 samples, 0.04%)</title><rect x="74.1222%" y="1733" width="0.0390%" height="15" fill="rgb(241,97,54)" fg:x="57083" fg:w="30"/><text x="74.3722%" y="1743.50"></text></g><g><title>bcs::ser::serialize_into (28 samples, 0.04%)</title><rect x="74.1248%" y="1717" width="0.0364%" height="15" fill="rgb(234,125,17)" fg:x="57085" fg:w="28"/><text x="74.3748%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (28 samples, 0.04%)</title><rect x="74.1248%" y="1701" width="0.0364%" height="15" fill="rgb(228,172,39)" fg:x="57085" fg:w="28"/><text x="74.3748%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (14 samples, 0.02%)</title><rect x="74.1430%" y="1685" width="0.0182%" height="15" fill="rgb(227,169,1)" fg:x="57099" fg:w="14"/><text x="74.3930%" y="1695.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (14 samples, 0.02%)</title><rect x="74.1430%" y="1669" width="0.0182%" height="15" fill="rgb(206,13,35)" fg:x="57099" fg:w="14"/><text x="74.3930%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.02%)</title><rect x="74.1430%" y="1653" width="0.0182%" height="15" fill="rgb(211,117,30)" fg:x="57099" fg:w="14"/><text x="74.3930%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="74.1430%" y="1637" width="0.0182%" height="15" fill="rgb(230,198,4)" fg:x="57099" fg:w="14"/><text x="74.3930%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.02%)</title><rect x="74.1430%" y="1621" width="0.0182%" height="15" fill="rgb(213,87,54)" fg:x="57099" fg:w="14"/><text x="74.3930%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="74.1482%" y="1605" width="0.0130%" height="15" fill="rgb(248,43,22)" fg:x="57103" fg:w="10"/><text x="74.3982%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="74.1482%" y="1589" width="0.0130%" height="15" fill="rgb(213,175,48)" fg:x="57103" fg:w="10"/><text x="74.3982%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="74.1495%" y="1573" width="0.0117%" height="15" fill="rgb(252,55,9)" fg:x="57104" fg:w="9"/><text x="74.3995%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="74.1495%" y="1557" width="0.0117%" height="15" fill="rgb(231,72,33)" fg:x="57104" fg:w="9"/><text x="74.3995%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="74.1508%" y="1541" width="0.0104%" height="15" fill="rgb(213,2,54)" fg:x="57105" fg:w="8"/><text x="74.4008%" y="1551.50"></text></g><g><title>&lt;X as better_any::TidExt&gt;::downcast_ref (9 samples, 0.01%)</title><rect x="74.1638%" y="1749" width="0.0117%" height="15" fill="rgb(208,88,25)" fg:x="57115" fg:w="9"/><text x="74.4138%" y="1759.50"></text></g><g><title>&lt;T as better_any::Tid&gt;::self_id (9 samples, 0.01%)</title><rect x="74.1638%" y="1733" width="0.0117%" height="15" fill="rgb(215,117,13)" fg:x="57115" fg:w="9"/><text x="74.4138%" y="1743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="74.1806%" y="1669" width="0.0169%" height="15" fill="rgb(243,147,21)" fg:x="57128" fg:w="13"/><text x="74.4306%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="74.1806%" y="1653" width="0.0169%" height="15" fill="rgb(208,215,36)" fg:x="57128" fg:w="13"/><text x="74.4306%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="74.1806%" y="1637" width="0.0169%" height="15" fill="rgb(238,187,24)" fg:x="57128" fg:w="13"/><text x="74.4306%" y="1647.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.03%)</title><rect x="74.1793%" y="1701" width="0.0299%" height="15" fill="rgb(214,173,11)" fg:x="57127" fg:w="23"/><text x="74.4293%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.03%)</title><rect x="74.1793%" y="1685" width="0.0299%" height="15" fill="rgb(222,71,20)" fg:x="57127" fg:w="23"/><text x="74.4293%" y="1695.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get (58 samples, 0.08%)</title><rect x="74.1612%" y="1765" width="0.0753%" height="15" fill="rgb(242,125,4)" fg:x="57113" fg:w="58"/><text x="74.4112%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (46 samples, 0.06%)</title><rect x="74.1768%" y="1749" width="0.0597%" height="15" fill="rgb(217,101,52)" fg:x="57125" fg:w="46"/><text x="74.4268%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (46 samples, 0.06%)</title><rect x="74.1768%" y="1733" width="0.0597%" height="15" fill="rgb(223,2,50)" fg:x="57125" fg:w="46"/><text x="74.4268%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (46 samples, 0.06%)</title><rect x="74.1768%" y="1717" width="0.0597%" height="15" fill="rgb(225,197,9)" fg:x="57125" fg:w="46"/><text x="74.4268%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.03%)</title><rect x="74.2092%" y="1701" width="0.0273%" height="15" fill="rgb(234,76,27)" fg:x="57150" fg:w="21"/><text x="74.4592%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.03%)</title><rect x="74.2092%" y="1685" width="0.0273%" height="15" fill="rgb(213,161,26)" fg:x="57150" fg:w="21"/><text x="74.4592%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.03%)</title><rect x="74.2092%" y="1669" width="0.0273%" height="15" fill="rgb(210,228,2)" fg:x="57150" fg:w="21"/><text x="74.4592%" y="1679.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.01%)</title><rect x="74.2235%" y="1653" width="0.0130%" height="15" fill="rgb(235,4,16)" fg:x="57161" fg:w="10"/><text x="74.4735%" y="1663.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.01%)</title><rect x="74.2235%" y="1637" width="0.0130%" height="15" fill="rgb(235,83,42)" fg:x="57161" fg:w="10"/><text x="74.4735%" y="1647.50"></text></g><g><title>move_table_extension::make_native_borrow_box::{{closure}} (381 samples, 0.49%)</title><rect x="73.7586%" y="1797" width="0.4947%" height="15" fill="rgb(207,116,39)" fg:x="56803" fg:w="381"/><text x="74.0086%" y="1807.50"></text></g><g><title>move_table_extension::native_borrow_box (371 samples, 0.48%)</title><rect x="73.7716%" y="1781" width="0.4817%" height="15" fill="rgb(253,206,9)" fg:x="56813" fg:w="371"/><text x="74.0216%" y="1791.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (8 samples, 0.01%)</title><rect x="74.2430%" y="1765" width="0.0104%" height="15" fill="rgb(234,32,47)" fg:x="57176" fg:w="8"/><text x="74.4930%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="74.2975%" y="1765" width="0.0104%" height="15" fill="rgb(247,40,39)" fg:x="57218" fg:w="8"/><text x="74.5475%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="74.2975%" y="1749" width="0.0104%" height="15" fill="rgb(236,199,13)" fg:x="57218" fg:w="8"/><text x="74.5475%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="74.2975%" y="1733" width="0.0104%" height="15" fill="rgb(240,127,44)" fg:x="57218" fg:w="8"/><text x="74.5475%" y="1743.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="74.2975%" y="1717" width="0.0104%" height="15" fill="rgb(248,220,47)" fg:x="57218" fg:w="8"/><text x="74.5475%" y="1727.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="74.3079%" y="1765" width="0.0104%" height="15" fill="rgb(240,78,9)" fg:x="57226" fg:w="8"/><text x="74.5579%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.02%)</title><rect x="74.3235%" y="1765" width="0.0169%" height="15" fill="rgb(245,119,5)" fg:x="57238" fg:w="13"/><text x="74.5735%" y="1775.50"></text></g><g><title>move_table_extension::native_contains_box::{{closure}} (12 samples, 0.02%)</title><rect x="74.3248%" y="1749" width="0.0156%" height="15" fill="rgb(238,175,31)" fg:x="57239" fg:w="12"/><text x="74.5748%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (12 samples, 0.02%)</title><rect x="74.3248%" y="1733" width="0.0156%" height="15" fill="rgb(232,140,42)" fg:x="57239" fg:w="12"/><text x="74.5748%" y="1743.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (12 samples, 0.02%)</title><rect x="74.3248%" y="1717" width="0.0156%" height="15" fill="rgb(218,179,7)" fg:x="57239" fg:w="12"/><text x="74.5748%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (10 samples, 0.01%)</title><rect x="74.3404%" y="1765" width="0.0130%" height="15" fill="rgb(232,79,27)" fg:x="57251" fg:w="10"/><text x="74.5904%" y="1775.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="74.3533%" y="1749" width="0.0130%" height="15" fill="rgb(247,11,19)" fg:x="57261" fg:w="10"/><text x="74.6033%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;move_vm_types::values::values_impl::Value&gt;&gt; (27 samples, 0.04%)</title><rect x="74.3533%" y="1765" width="0.0351%" height="15" fill="rgb(216,171,54)" fg:x="57261" fg:w="27"/><text x="74.6033%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::Value&gt;&gt; (17 samples, 0.02%)</title><rect x="74.3663%" y="1749" width="0.0221%" height="15" fill="rgb(233,158,36)" fg:x="57271" fg:w="17"/><text x="74.6163%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="74.3663%" y="1733" width="0.0221%" height="15" fill="rgb(215,48,47)" fg:x="57271" fg:w="17"/><text x="74.6163%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="74.3663%" y="1717" width="0.0221%" height="15" fill="rgb(230,223,15)" fg:x="57271" fg:w="17"/><text x="74.6163%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="74.3663%" y="1701" width="0.0221%" height="15" fill="rgb(234,49,19)" fg:x="57271" fg:w="17"/><text x="74.6163%" y="1711.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="74.3702%" y="1685" width="0.0182%" height="15" fill="rgb(232,89,25)" fg:x="57274" fg:w="14"/><text x="74.6202%" y="1695.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="74.3923%" y="1717" width="0.0143%" height="15" fill="rgb(237,206,28)" fg:x="57291" fg:w="11"/><text x="74.6423%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (41 samples, 0.05%)</title><rect x="74.3884%" y="1765" width="0.0532%" height="15" fill="rgb(249,68,37)" fg:x="57288" fg:w="41"/><text x="74.6384%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="74.3884%" y="1749" width="0.0532%" height="15" fill="rgb(226,99,43)" fg:x="57288" fg:w="41"/><text x="74.6384%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (39 samples, 0.05%)</title><rect x="74.3910%" y="1733" width="0.0506%" height="15" fill="rgb(216,46,28)" fg:x="57290" fg:w="39"/><text x="74.6410%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (27 samples, 0.04%)</title><rect x="74.4066%" y="1717" width="0.0351%" height="15" fill="rgb(216,33,9)" fg:x="57302" fg:w="27"/><text x="74.6566%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::StructRef&gt; (9 samples, 0.01%)</title><rect x="74.4442%" y="1765" width="0.0117%" height="15" fill="rgb(216,129,4)" fg:x="57331" fg:w="9"/><text x="74.6942%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (9 samples, 0.01%)</title><rect x="74.4442%" y="1749" width="0.0117%" height="15" fill="rgb(216,106,3)" fg:x="57331" fg:w="9"/><text x="74.6942%" y="1759.50"></text></g><g><title>move_table_extension::CommonGasParameters::calculate_load_cost (8 samples, 0.01%)</title><rect x="74.4572%" y="1765" width="0.0104%" height="15" fill="rgb(217,79,45)" fg:x="57341" fg:w="8"/><text x="74.7072%" y="1775.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.02%)</title><rect x="74.4923%" y="1717" width="0.0156%" height="15" fill="rgb(239,98,13)" fg:x="57368" fg:w="12"/><text x="74.7423%" y="1727.50"></text></g><g><title>&lt;aptos_types::state_store::table::TableHandle as core::convert::From&lt;move_table_extension::TableHandle&gt;&gt;::from (8 samples, 0.01%)</title><rect x="74.4975%" y="1701" width="0.0104%" height="15" fill="rgb(221,115,4)" fg:x="57372" fg:w="8"/><text x="74.7475%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.01%)</title><rect x="74.5079%" y="1717" width="0.0104%" height="15" fill="rgb(215,85,0)" fg:x="57380" fg:w="8"/><text x="74.7579%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="74.5079%" y="1701" width="0.0104%" height="15" fill="rgb(230,62,15)" fg:x="57380" fg:w="8"/><text x="74.7579%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="74.5079%" y="1685" width="0.0104%" height="15" fill="rgb(247,162,2)" fg:x="57380" fg:w="8"/><text x="74.7579%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="74.5079%" y="1669" width="0.0104%" height="15" fill="rgb(212,112,32)" fg:x="57380" fg:w="8"/><text x="74.7579%" y="1679.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.02%)</title><rect x="74.5299%" y="1685" width="0.0169%" height="15" fill="rgb(216,137,9)" fg:x="57397" fg:w="13"/><text x="74.7799%" y="1695.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.01%)</title><rect x="74.5351%" y="1669" width="0.0117%" height="15" fill="rgb(250,149,33)" fg:x="57401" fg:w="9"/><text x="74.7851%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.01%)</title><rect x="74.5351%" y="1653" width="0.0117%" height="15" fill="rgb(246,124,31)" fg:x="57401" fg:w="9"/><text x="74.7851%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.01%)</title><rect x="74.5351%" y="1637" width="0.0117%" height="15" fill="rgb(216,210,22)" fg:x="57401" fg:w="9"/><text x="74.7851%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.01%)</title><rect x="74.5351%" y="1621" width="0.0117%" height="15" fill="rgb(228,128,36)" fg:x="57401" fg:w="9"/><text x="74.7851%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.01%)</title><rect x="74.5351%" y="1605" width="0.0117%" height="15" fill="rgb(231,41,0)" fg:x="57401" fg:w="9"/><text x="74.7851%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.01%)</title><rect x="74.5351%" y="1589" width="0.0117%" height="15" fill="rgb(232,61,26)" fg:x="57401" fg:w="9"/><text x="74.7851%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="74.5611%" y="1605" width="0.0117%" height="15" fill="rgb(217,60,9)" fg:x="57421" fg:w="9"/><text x="74.8111%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="74.5611%" y="1589" width="0.0117%" height="15" fill="rgb(233,41,35)" fg:x="57421" fg:w="9"/><text x="74.8111%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="74.5611%" y="1573" width="0.0117%" height="15" fill="rgb(253,139,43)" fg:x="57421" fg:w="9"/><text x="74.8111%" y="1583.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as aptos_types::write_set::TransactionWrite&gt;::extract_raw_bytes (30 samples, 0.04%)</title><rect x="74.5468%" y="1685" width="0.0390%" height="15" fill="rgb(245,100,51)" fg:x="57410" fg:w="30"/><text x="74.7968%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="74.5611%" y="1669" width="0.0247%" height="15" fill="rgb(250,208,18)" fg:x="57421" fg:w="19"/><text x="74.8111%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="74.5611%" y="1653" width="0.0247%" height="15" fill="rgb(245,33,2)" fg:x="57421" fg:w="19"/><text x="74.8111%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="74.5611%" y="1637" width="0.0247%" height="15" fill="rgb(244,171,31)" fg:x="57421" fg:w="19"/><text x="74.8111%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="74.5611%" y="1621" width="0.0247%" height="15" fill="rgb(229,1,43)" fg:x="57421" fg:w="19"/><text x="74.8111%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (10 samples, 0.01%)</title><rect x="74.5728%" y="1605" width="0.0130%" height="15" fill="rgb(223,153,28)" fg:x="57430" fg:w="10"/><text x="74.8228%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="74.5728%" y="1589" width="0.0130%" height="15" fill="rgb(241,4,46)" fg:x="57430" fg:w="10"/><text x="74.8228%" y="1599.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="74.5728%" y="1573" width="0.0130%" height="15" fill="rgb(230,81,11)" fg:x="57430" fg:w="10"/><text x="74.8228%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="74.5936%" y="1669" width="0.0156%" height="15" fill="rgb(253,204,39)" fg:x="57446" fg:w="12"/><text x="74.8436%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.02%)</title><rect x="74.6325%" y="1653" width="0.0208%" height="15" fill="rgb(250,96,8)" fg:x="57476" fg:w="16"/><text x="74.8825%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.02%)</title><rect x="74.6364%" y="1637" width="0.0169%" height="15" fill="rgb(219,89,54)" fg:x="57479" fg:w="13"/><text x="74.8864%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.02%)</title><rect x="74.6377%" y="1621" width="0.0156%" height="15" fill="rgb(235,136,39)" fg:x="57480" fg:w="12"/><text x="74.8877%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="74.6403%" y="1605" width="0.0130%" height="15" fill="rgb(230,155,37)" fg:x="57482" fg:w="10"/><text x="74.8903%" y="1615.50"></text></g><g><title>aptos_block_executor::scheduler::Scheduler::wait_for_dependency (49 samples, 0.06%)</title><rect x="74.6156%" y="1669" width="0.0636%" height="15" fill="rgb(235,199,50)" fg:x="57463" fg:w="49"/><text x="74.8656%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (8 samples, 0.01%)</title><rect x="74.7442%" y="1653" width="0.0104%" height="15" fill="rgb(227,81,32)" fg:x="57562" fg:w="8"/><text x="74.9942%" y="1663.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_back_checked (8 samples, 0.01%)</title><rect x="74.7442%" y="1637" width="0.0104%" height="15" fill="rgb(225,6,28)" fg:x="57562" fg:w="8"/><text x="74.9942%" y="1647.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_back_checked (8 samples, 0.01%)</title><rect x="74.7442%" y="1621" width="0.0104%" height="15" fill="rgb(207,211,17)" fg:x="57562" fg:w="8"/><text x="74.9942%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_lower_bound_edge (31 samples, 0.04%)</title><rect x="74.7715%" y="1605" width="0.0403%" height="15" fill="rgb(228,31,49)" fg:x="57583" fg:w="31"/><text x="75.0215%" y="1615.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (31 samples, 0.04%)</title><rect x="74.7715%" y="1589" width="0.0403%" height="15" fill="rgb(230,185,3)" fg:x="57583" fg:w="31"/><text x="75.0215%" y="1599.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (31 samples, 0.04%)</title><rect x="74.7715%" y="1573" width="0.0403%" height="15" fill="rgb(206,167,15)" fg:x="57583" fg:w="31"/><text x="75.0215%" y="1583.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (36 samples, 0.05%)</title><rect x="74.8117%" y="1605" width="0.0467%" height="15" fill="rgb(234,2,36)" fg:x="57614" fg:w="36"/><text x="75.0617%" y="1615.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (36 samples, 0.05%)</title><rect x="74.8117%" y="1589" width="0.0467%" height="15" fill="rgb(239,160,29)" fg:x="57614" fg:w="36"/><text x="75.0617%" y="1599.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (35 samples, 0.05%)</title><rect x="74.8130%" y="1573" width="0.0454%" height="15" fill="rgb(236,117,2)" fg:x="57615" fg:w="35"/><text x="75.0630%" y="1583.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (8 samples, 0.01%)</title><rect x="74.8481%" y="1557" width="0.0104%" height="15" fill="rgb(215,117,37)" fg:x="57642" fg:w="8"/><text x="75.0981%" y="1567.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (20 samples, 0.03%)</title><rect x="74.8585%" y="1589" width="0.0260%" height="15" fill="rgb(244,48,36)" fg:x="57650" fg:w="20"/><text x="75.1085%" y="1599.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.03%)</title><rect x="74.8585%" y="1573" width="0.0260%" height="15" fill="rgb(223,101,37)" fg:x="57650" fg:w="20"/><text x="75.1085%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range (103 samples, 0.13%)</title><rect x="74.7546%" y="1653" width="0.1337%" height="15" fill="rgb(205,200,1)" fg:x="57570" fg:w="103"/><text x="75.0046%" y="1663.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (99 samples, 0.13%)</title><rect x="74.7598%" y="1637" width="0.1286%" height="15" fill="rgb(209,193,20)" fg:x="57574" fg:w="99"/><text x="75.0098%" y="1647.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (99 samples, 0.13%)</title><rect x="74.7598%" y="1621" width="0.1286%" height="15" fill="rgb(214,63,13)" fg:x="57574" fg:w="99"/><text x="75.0098%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (23 samples, 0.03%)</title><rect x="74.8585%" y="1605" width="0.0299%" height="15" fill="rgb(253,113,46)" fg:x="57650" fg:w="23"/><text x="75.1085%" y="1615.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (23 samples, 0.03%)</title><rect x="74.9078%" y="1557" width="0.0299%" height="15" fill="rgb(237,103,34)" fg:x="57688" fg:w="23"/><text x="75.1578%" y="1567.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (23 samples, 0.03%)</title><rect x="74.9078%" y="1541" width="0.0299%" height="15" fill="rgb(223,38,25)" fg:x="57688" fg:w="23"/><text x="75.1578%" y="1551.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (29 samples, 0.04%)</title><rect x="74.9026%" y="1621" width="0.0377%" height="15" fill="rgb(251,32,32)" fg:x="57684" fg:w="29"/><text x="75.1526%" y="1631.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (28 samples, 0.04%)</title><rect x="74.9039%" y="1605" width="0.0364%" height="15" fill="rgb(228,65,22)" fg:x="57685" fg:w="28"/><text x="75.1539%" y="1615.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (28 samples, 0.04%)</title><rect x="74.9039%" y="1589" width="0.0364%" height="15" fill="rgb(205,11,46)" fg:x="57685" fg:w="28"/><text x="75.1539%" y="1599.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (25 samples, 0.03%)</title><rect x="74.9078%" y="1573" width="0.0325%" height="15" fill="rgb(220,35,2)" fg:x="57688" fg:w="25"/><text x="75.1578%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="74.9429%" y="1605" width="0.0104%" height="15" fill="rgb(217,151,17)" fg:x="57715" fg:w="8"/><text x="75.1929%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="74.9429%" y="1589" width="0.0104%" height="15" fill="rgb(243,227,35)" fg:x="57715" fg:w="8"/><text x="75.1929%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="74.9429%" y="1573" width="0.0104%" height="15" fill="rgb(214,0,34)" fg:x="57715" fg:w="8"/><text x="75.1929%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="74.9727%" y="1429" width="0.0104%" height="15" fill="rgb(209,42,37)" fg:x="57738" fg:w="8"/><text x="75.2227%" y="1439.50"></text></g><g><title>&lt;aptos_types::state_store::table::TableHandle as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="74.9610%" y="1557" width="0.0234%" height="15" fill="rgb(251,176,30)" fg:x="57729" fg:w="18"/><text x="75.2110%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="74.9610%" y="1541" width="0.0234%" height="15" fill="rgb(223,64,40)" fg:x="57729" fg:w="18"/><text x="75.2110%" y="1551.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (18 samples, 0.02%)</title><rect x="74.9610%" y="1525" width="0.0234%" height="15" fill="rgb(227,180,23)" fg:x="57729" fg:w="18"/><text x="75.2110%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (18 samples, 0.02%)</title><rect x="74.9610%" y="1509" width="0.0234%" height="15" fill="rgb(220,137,31)" fg:x="57729" fg:w="18"/><text x="75.2110%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.02%)</title><rect x="74.9662%" y="1493" width="0.0182%" height="15" fill="rgb(245,124,25)" fg:x="57733" fg:w="14"/><text x="75.2162%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="74.9675%" y="1477" width="0.0169%" height="15" fill="rgb(217,157,5)" fg:x="57734" fg:w="13"/><text x="75.2175%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="74.9701%" y="1461" width="0.0143%" height="15" fill="rgb(225,59,2)" fg:x="57736" fg:w="11"/><text x="75.2201%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="74.9701%" y="1445" width="0.0143%" height="15" fill="rgb(220,182,9)" fg:x="57736" fg:w="11"/><text x="75.2201%" y="1455.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (32 samples, 0.04%)</title><rect x="74.9559%" y="1589" width="0.0416%" height="15" fill="rgb(249,54,24)" fg:x="57725" fg:w="32"/><text x="75.2059%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (31 samples, 0.04%)</title><rect x="74.9571%" y="1573" width="0.0403%" height="15" fill="rgb(216,89,17)" fg:x="57726" fg:w="31"/><text x="75.2071%" y="1583.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (57 samples, 0.07%)</title><rect x="74.9403%" y="1621" width="0.0740%" height="15" fill="rgb(245,20,45)" fg:x="57713" fg:w="57"/><text x="75.1903%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.06%)</title><rect x="74.9559%" y="1605" width="0.0584%" height="15" fill="rgb(230,83,14)" fg:x="57725" fg:w="45"/><text x="75.2059%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="74.9974%" y="1589" width="0.0169%" height="15" fill="rgb(246,109,11)" fg:x="57757" fg:w="13"/><text x="75.2474%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="74.9974%" y="1573" width="0.0169%" height="15" fill="rgb(235,85,23)" fg:x="57757" fg:w="13"/><text x="75.2474%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="74.9974%" y="1557" width="0.0169%" height="15" fill="rgb(215,101,36)" fg:x="57757" fg:w="13"/><text x="75.2474%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="74.9987%" y="1541" width="0.0156%" height="15" fill="rgb(228,140,31)" fg:x="57758" fg:w="12"/><text x="75.2487%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="75.0182%" y="1573" width="0.0143%" height="15" fill="rgb(234,162,37)" fg:x="57773" fg:w="11"/><text x="75.2682%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="75.0182%" y="1557" width="0.0143%" height="15" fill="rgb(221,0,24)" fg:x="57773" fg:w="11"/><text x="75.2682%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="75.0325%" y="1573" width="0.0104%" height="15" fill="rgb(230,161,41)" fg:x="57784" fg:w="8"/><text x="75.2825%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="75.0325%" y="1557" width="0.0104%" height="15" fill="rgb(224,46,24)" fg:x="57784" fg:w="8"/><text x="75.2825%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="75.0325%" y="1541" width="0.0104%" height="15" fill="rgb(205,59,32)" fg:x="57784" fg:w="8"/><text x="75.2825%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.03%)</title><rect x="75.0182%" y="1589" width="0.0286%" height="15" fill="rgb(239,31,20)" fg:x="57773" fg:w="22"/><text x="75.2682%" y="1599.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="75.0727%" y="1461" width="0.0247%" height="15" fill="rgb(233,149,44)" fg:x="57815" fg:w="19"/><text x="75.3227%" y="1471.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (39 samples, 0.05%)</title><rect x="75.0480%" y="1525" width="0.0506%" height="15" fill="rgb(243,47,26)" fg:x="57796" fg:w="39"/><text x="75.2980%" y="1535.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (39 samples, 0.05%)</title><rect x="75.0480%" y="1509" width="0.0506%" height="15" fill="rgb(233,107,5)" fg:x="57796" fg:w="39"/><text x="75.2980%" y="1519.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (39 samples, 0.05%)</title><rect x="75.0480%" y="1493" width="0.0506%" height="15" fill="rgb(248,140,33)" fg:x="57796" fg:w="39"/><text x="75.2980%" y="1503.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (39 samples, 0.05%)</title><rect x="75.0480%" y="1477" width="0.0506%" height="15" fill="rgb(228,178,19)" fg:x="57796" fg:w="39"/><text x="75.2980%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (40 samples, 0.05%)</title><rect x="75.0480%" y="1541" width="0.0519%" height="15" fill="rgb(224,39,49)" fg:x="57796" fg:w="40"/><text x="75.2980%" y="1551.50"></text></g><g><title>aptos_mvhashmap::MVHashMap&lt;K,V&gt;::read (339 samples, 0.44%)</title><rect x="74.6858%" y="1669" width="0.4402%" height="15" fill="rgb(246,56,47)" fg:x="57517" fg:w="339"/><text x="74.9358%" y="1679.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (178 samples, 0.23%)</title><rect x="74.8948%" y="1653" width="0.2311%" height="15" fill="rgb(220,73,27)" fg:x="57678" fg:w="178"/><text x="75.1448%" y="1663.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (176 samples, 0.23%)</title><rect x="74.8974%" y="1637" width="0.2285%" height="15" fill="rgb(239,112,21)" fg:x="57680" fg:w="176"/><text x="75.1474%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (86 samples, 0.11%)</title><rect x="75.0143%" y="1621" width="0.1117%" height="15" fill="rgb(253,14,51)" fg:x="57770" fg:w="86"/><text x="75.2643%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (86 samples, 0.11%)</title><rect x="75.0143%" y="1605" width="0.1117%" height="15" fill="rgb(215,58,12)" fg:x="57770" fg:w="86"/><text x="75.2643%" y="1615.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (61 samples, 0.08%)</title><rect x="75.0467%" y="1589" width="0.0792%" height="15" fill="rgb(207,181,19)" fg:x="57795" fg:w="61"/><text x="75.2967%" y="1599.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (61 samples, 0.08%)</title><rect x="75.0467%" y="1573" width="0.0792%" height="15" fill="rgb(211,214,34)" fg:x="57795" fg:w="61"/><text x="75.2967%" y="1583.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (61 samples, 0.08%)</title><rect x="75.0467%" y="1557" width="0.0792%" height="15" fill="rgb(243,124,39)" fg:x="57795" fg:w="61"/><text x="75.2967%" y="1567.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (17 samples, 0.02%)</title><rect x="75.1039%" y="1541" width="0.0221%" height="15" fill="rgb(248,135,21)" fg:x="57839" fg:w="17"/><text x="75.3539%" y="1551.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (17 samples, 0.02%)</title><rect x="75.1039%" y="1525" width="0.0221%" height="15" fill="rgb(245,218,3)" fg:x="57839" fg:w="17"/><text x="75.3539%" y="1535.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="75.1039%" y="1509" width="0.0221%" height="15" fill="rgb(225,144,22)" fg:x="57839" fg:w="17"/><text x="75.3539%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;(aptos_infallible::mutex::Mutex&lt;bool&gt;,std::sync::condvar::Condvar)&gt;&gt; (31 samples, 0.04%)</title><rect x="75.1260%" y="1669" width="0.0403%" height="15" fill="rgb(250,90,15)" fg:x="57856" fg:w="31"/><text x="75.3760%" y="1679.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="75.1260%" y="1653" width="0.0403%" height="15" fill="rgb(224,64,29)" fg:x="57856" fg:w="31"/><text x="75.3760%" y="1663.50"></text></g><g><title>cfree (24 samples, 0.03%)</title><rect x="75.1350%" y="1637" width="0.0312%" height="15" fill="rgb(217,50,47)" fg:x="57863" fg:w="24"/><text x="75.3850%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (21 samples, 0.03%)</title><rect x="75.2454%" y="1525" width="0.0273%" height="15" fill="rgb(231,159,47)" fg:x="57948" fg:w="21"/><text x="75.4954%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (21 samples, 0.03%)</title><rect x="75.2454%" y="1509" width="0.0273%" height="15" fill="rgb(213,89,29)" fg:x="57948" fg:w="21"/><text x="75.4954%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.03%)</title><rect x="75.2454%" y="1493" width="0.0273%" height="15" fill="rgb(243,90,23)" fg:x="57948" fg:w="21"/><text x="75.4954%" y="1503.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe::{{closure}} (21 samples, 0.03%)</title><rect x="75.2454%" y="1477" width="0.0273%" height="15" fill="rgb(213,21,6)" fg:x="57948" fg:w="21"/><text x="75.4954%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="75.2415%" y="1589" width="0.0338%" height="15" fill="rgb(237,139,17)" fg:x="57945" fg:w="26"/><text x="75.4915%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (26 samples, 0.03%)</title><rect x="75.2415%" y="1573" width="0.0338%" height="15" fill="rgb(250,147,17)" fg:x="57945" fg:w="26"/><text x="75.4915%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="75.2415%" y="1557" width="0.0338%" height="15" fill="rgb(212,208,42)" fg:x="57945" fg:w="26"/><text x="75.4915%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.03%)</title><rect x="75.2415%" y="1541" width="0.0338%" height="15" fill="rgb(215,229,40)" fg:x="57945" fg:w="26"/><text x="75.4915%" y="1551.50"></text></g><g><title>prometheus::histogram::Histogram::observe (59 samples, 0.08%)</title><rect x="75.2026%" y="1621" width="0.0766%" height="15" fill="rgb(206,204,1)" fg:x="57915" fg:w="59"/><text x="75.4526%" y="1631.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (59 samples, 0.08%)</title><rect x="75.2026%" y="1605" width="0.0766%" height="15" fill="rgb(230,62,32)" fg:x="57915" fg:w="59"/><text x="75.4526%" y="1615.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (77 samples, 0.10%)</title><rect x="75.2805%" y="1589" width="0.1000%" height="15" fill="rgb(223,22,42)" fg:x="57975" fg:w="77"/><text x="75.5305%" y="1599.50"></text></g><g><title>clock_gettime (73 samples, 0.09%)</title><rect x="75.2857%" y="1573" width="0.0948%" height="15" fill="rgb(244,6,23)" fg:x="57979" fg:w="73"/><text x="75.5357%" y="1583.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.03%)</title><rect x="75.3467%" y="1557" width="0.0338%" height="15" fill="rgb(240,221,42)" fg:x="58026" fg:w="26"/><text x="75.5967%" y="1567.50"></text></g><g><title>[[vdso]] (8 samples, 0.01%)</title><rect x="75.3701%" y="1541" width="0.0104%" height="15" fill="rgb(222,74,7)" fg:x="58044" fg:w="8"/><text x="75.6201%" y="1551.50"></text></g><g><title>std::time::Instant::duration_since (10 samples, 0.01%)</title><rect x="75.3805%" y="1589" width="0.0130%" height="15" fill="rgb(227,191,38)" fg:x="58052" fg:w="10"/><text x="75.6305%" y="1599.50"></text></g><g><title>std::time::Instant::checked_duration_since (8 samples, 0.01%)</title><rect x="75.3831%" y="1573" width="0.0104%" height="15" fill="rgb(227,89,34)" fg:x="58054" fg:w="8"/><text x="75.6331%" y="1583.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (8 samples, 0.01%)</title><rect x="75.3831%" y="1557" width="0.0104%" height="15" fill="rgb(215,153,25)" fg:x="58054" fg:w="8"/><text x="75.6331%" y="1567.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (101 samples, 0.13%)</title><rect x="75.2792%" y="1605" width="0.1311%" height="15" fill="rgb(215,153,46)" fg:x="57974" fg:w="101"/><text x="75.5292%" y="1615.50"></text></g><g><title>std::time::Instant::now (13 samples, 0.02%)</title><rect x="75.3934%" y="1589" width="0.0169%" height="15" fill="rgb(242,38,52)" fg:x="58062" fg:w="13"/><text x="75.6434%" y="1599.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (13 samples, 0.02%)</title><rect x="75.3934%" y="1573" width="0.0169%" height="15" fill="rgb(218,112,4)" fg:x="58062" fg:w="13"/><text x="75.6434%" y="1583.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (206 samples, 0.27%)</title><rect x="75.1675%" y="1653" width="0.2675%" height="15" fill="rgb(231,210,31)" fg:x="57888" fg:w="206"/><text x="75.4175%" y="1663.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (179 samples, 0.23%)</title><rect x="75.2026%" y="1637" width="0.2324%" height="15" fill="rgb(245,223,36)" fg:x="57915" fg:w="179"/><text x="75.4526%" y="1647.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (120 samples, 0.16%)</title><rect x="75.2792%" y="1621" width="0.1558%" height="15" fill="rgb(246,41,2)" fg:x="57974" fg:w="120"/><text x="75.5292%" y="1631.50"></text></g><g><title>prometheus::histogram::duration_to_seconds (19 samples, 0.02%)</title><rect x="75.4103%" y="1605" width="0.0247%" height="15" fill="rgb(227,51,31)" fg:x="58075" fg:w="19"/><text x="75.6603%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (209 samples, 0.27%)</title><rect x="75.1662%" y="1669" width="0.2714%" height="15" fill="rgb(222,95,26)" fg:x="57887" fg:w="209"/><text x="75.4162%" y="1679.50"></text></g><g><title>std::sync::poison::Flag::done (37 samples, 0.05%)</title><rect x="75.4376%" y="1637" width="0.0480%" height="15" fill="rgb(224,190,1)" fg:x="58096" fg:w="37"/><text x="75.6876%" y="1647.50"></text></g><g><title>std::thread::panicking (29 samples, 0.04%)</title><rect x="75.4480%" y="1621" width="0.0377%" height="15" fill="rgb(209,90,42)" fg:x="58104" fg:w="29"/><text x="75.6980%" y="1631.50"></text></g><g><title>std::panicking::panicking (29 samples, 0.04%)</title><rect x="75.4480%" y="1605" width="0.0377%" height="15" fill="rgb(232,225,50)" fg:x="58104" fg:w="29"/><text x="75.6980%" y="1615.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (29 samples, 0.04%)</title><rect x="75.4480%" y="1589" width="0.0377%" height="15" fill="rgb(239,89,47)" fg:x="58104" fg:w="29"/><text x="75.6980%" y="1599.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.02%)</title><rect x="75.4662%" y="1573" width="0.0195%" height="15" fill="rgb(230,212,50)" fg:x="58118" fg:w="15"/><text x="75.7162%" y="1583.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.02%)</title><rect x="75.4662%" y="1557" width="0.0195%" height="15" fill="rgb(252,1,27)" fg:x="58118" fg:w="15"/><text x="75.7162%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (48 samples, 0.06%)</title><rect x="75.4376%" y="1669" width="0.0623%" height="15" fill="rgb(237,179,41)" fg:x="58096" fg:w="48"/><text x="75.6876%" y="1679.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.06%)</title><rect x="75.4376%" y="1653" width="0.0623%" height="15" fill="rgb(214,151,37)" fg:x="58096" fg:w="48"/><text x="75.6876%" y="1663.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="75.4856%" y="1637" width="0.0143%" height="15" fill="rgb(211,74,11)" fg:x="58133" fg:w="11"/><text x="75.7356%" y="1647.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="75.4856%" y="1621" width="0.0143%" height="15" fill="rgb(242,21,21)" fg:x="58133" fg:w="11"/><text x="75.7356%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (9 samples, 0.01%)</title><rect x="75.4882%" y="1605" width="0.0117%" height="15" fill="rgb(226,106,43)" fg:x="58135" fg:w="9"/><text x="75.7382%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_swap (9 samples, 0.01%)</title><rect x="75.4882%" y="1589" width="0.0117%" height="15" fill="rgb(229,162,39)" fg:x="58135" fg:w="9"/><text x="75.7382%" y="1599.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (10 samples, 0.01%)</title><rect x="75.5116%" y="1621" width="0.0130%" height="15" fill="rgb(228,159,25)" fg:x="58153" fg:w="10"/><text x="75.7616%" y="1631.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (21 samples, 0.03%)</title><rect x="75.4999%" y="1669" width="0.0273%" height="15" fill="rgb(237,32,23)" fg:x="58144" fg:w="21"/><text x="75.7499%" y="1679.50"></text></g><g><title>prometheus::histogram::HistogramTimer::new (12 samples, 0.02%)</title><rect x="75.5116%" y="1653" width="0.0156%" height="15" fill="rgb(212,35,32)" fg:x="58153" fg:w="12"/><text x="75.7616%" y="1663.50"></text></g><g><title>prometheus::histogram::Instant::now (12 samples, 0.02%)</title><rect x="75.5116%" y="1637" width="0.0156%" height="15" fill="rgb(215,199,1)" fg:x="58153" fg:w="12"/><text x="75.7616%" y="1647.50"></text></g><g><title>std::sys::unix::futex::futex_wait (46 samples, 0.06%)</title><rect x="75.5415%" y="1605" width="0.0597%" height="15" fill="rgb(215,67,13)" fg:x="58176" fg:w="46"/><text x="75.7915%" y="1615.50"></text></g><g><title>syscall (44 samples, 0.06%)</title><rect x="75.5441%" y="1589" width="0.0571%" height="15" fill="rgb(216,20,47)" fg:x="58178" fg:w="44"/><text x="75.7941%" y="1599.50"></text></g><g><title>[unknown] (38 samples, 0.05%)</title><rect x="75.5519%" y="1573" width="0.0493%" height="15" fill="rgb(249,183,48)" fg:x="58184" fg:w="38"/><text x="75.8019%" y="1583.50"></text></g><g><title>[unknown] (31 samples, 0.04%)</title><rect x="75.5610%" y="1557" width="0.0403%" height="15" fill="rgb(208,86,37)" fg:x="58191" fg:w="31"/><text x="75.8110%" y="1567.50"></text></g><g><title>[unknown] (29 samples, 0.04%)</title><rect x="75.5635%" y="1541" width="0.0377%" height="15" fill="rgb(251,192,7)" fg:x="58193" fg:w="29"/><text x="75.8135%" y="1551.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="75.5726%" y="1525" width="0.0286%" height="15" fill="rgb(234,196,3)" fg:x="58200" fg:w="22"/><text x="75.8226%" y="1535.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="75.5817%" y="1509" width="0.0195%" height="15" fill="rgb(229,150,39)" fg:x="58207" fg:w="15"/><text x="75.8317%" y="1519.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="75.6012%" y="1605" width="0.0143%" height="15" fill="rgb(226,19,29)" fg:x="58222" fg:w="11"/><text x="75.8512%" y="1615.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (64 samples, 0.08%)</title><rect x="75.5337%" y="1637" width="0.0831%" height="15" fill="rgb(226,222,2)" fg:x="58170" fg:w="64"/><text x="75.7837%" y="1647.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (58 samples, 0.08%)</title><rect x="75.5415%" y="1621" width="0.0753%" height="15" fill="rgb(235,85,29)" fg:x="58176" fg:w="58"/><text x="75.7915%" y="1631.50"></text></g><g><title>aptos_block_executor::view::MVHashMapView&lt;K,V&gt;::read (796 samples, 1.03%)</title><rect x="74.5858%" y="1685" width="1.0336%" height="15" fill="rgb(237,194,43)" fg:x="57440" fg:w="796"/><text x="74.8358%" y="1695.50"></text></g><g><title>std::sync::condvar::Condvar::wait (71 samples, 0.09%)</title><rect x="75.5272%" y="1669" width="0.0922%" height="15" fill="rgb(211,4,42)" fg:x="58165" fg:w="71"/><text x="75.7772%" y="1679.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (71 samples, 0.09%)</title><rect x="75.5272%" y="1653" width="0.0922%" height="15" fill="rgb(221,80,37)" fg:x="58165" fg:w="71"/><text x="75.7772%" y="1663.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (132 samples, 0.17%)</title><rect x="75.6480%" y="1541" width="0.1714%" height="15" fill="rgb(222,47,31)" fg:x="58258" fg:w="132"/><text x="75.8980%" y="1551.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (132 samples, 0.17%)</title><rect x="75.6480%" y="1525" width="0.1714%" height="15" fill="rgb(249,82,52)" fg:x="58258" fg:w="132"/><text x="75.8980%" y="1535.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (132 samples, 0.17%)</title><rect x="75.6480%" y="1509" width="0.1714%" height="15" fill="rgb(218,203,2)" fg:x="58258" fg:w="132"/><text x="75.8980%" y="1519.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (131 samples, 0.17%)</title><rect x="75.6492%" y="1493" width="0.1701%" height="15" fill="rgb(210,175,14)" fg:x="58259" fg:w="131"/><text x="75.8992%" y="1503.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.03%)</title><rect x="75.7934%" y="1477" width="0.0260%" height="15" fill="rgb(216,210,12)" fg:x="58370" fg:w="20"/><text x="76.0434%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (152 samples, 0.20%)</title><rect x="75.6246%" y="1621" width="0.1974%" height="15" fill="rgb(229,120,18)" fg:x="58240" fg:w="152"/><text x="75.8746%" y="1631.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (150 samples, 0.19%)</title><rect x="75.6272%" y="1605" width="0.1948%" height="15" fill="rgb(231,174,12)" fg:x="58242" fg:w="150"/><text x="75.8772%" y="1615.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (144 samples, 0.19%)</title><rect x="75.6350%" y="1589" width="0.1870%" height="15" fill="rgb(214,101,53)" fg:x="58248" fg:w="144"/><text x="75.8850%" y="1599.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (140 samples, 0.18%)</title><rect x="75.6402%" y="1573" width="0.1818%" height="15" fill="rgb(246,89,43)" fg:x="58252" fg:w="140"/><text x="75.8902%" y="1583.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (139 samples, 0.18%)</title><rect x="75.6415%" y="1557" width="0.1805%" height="15" fill="rgb(222,9,51)" fg:x="58253" fg:w="139"/><text x="75.8915%" y="1567.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (9 samples, 0.01%)</title><rect x="75.8232%" y="1557" width="0.0117%" height="15" fill="rgb(252,221,9)" fg:x="58393" fg:w="9"/><text x="76.0732%" y="1567.50"></text></g><g><title>serde_bytes::serialize (9 samples, 0.01%)</title><rect x="75.8232%" y="1541" width="0.0117%" height="15" fill="rgb(248,28,15)" fg:x="58393" fg:w="9"/><text x="76.0732%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (9 samples, 0.01%)</title><rect x="75.8232%" y="1525" width="0.0117%" height="15" fill="rgb(213,54,52)" fg:x="58393" fg:w="9"/><text x="76.0732%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (9 samples, 0.01%)</title><rect x="75.8232%" y="1509" width="0.0117%" height="15" fill="rgb(240,3,45)" fg:x="58393" fg:w="9"/><text x="76.0732%" y="1519.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (1,018 samples, 1.32%)</title><rect x="74.5196%" y="1701" width="1.3219%" height="15" fill="rgb(239,138,24)" fg:x="57389" fg:w="1018"/><text x="74.7696%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (171 samples, 0.22%)</title><rect x="75.6194%" y="1685" width="0.2220%" height="15" fill="rgb(233,45,54)" fg:x="58236" fg:w="171"/><text x="75.8694%" y="1695.50"></text></g><g><title>core::ops::function::FnOnce::call_once (170 samples, 0.22%)</title><rect x="75.6207%" y="1669" width="0.2207%" height="15" fill="rgb(220,131,2)" fg:x="58237" fg:w="170"/><text x="75.8707%" y="1679.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (170 samples, 0.22%)</title><rect x="75.6207%" y="1653" width="0.2207%" height="15" fill="rgb(240,154,36)" fg:x="58237" fg:w="170"/><text x="75.8707%" y="1663.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (169 samples, 0.22%)</title><rect x="75.6220%" y="1637" width="0.2194%" height="15" fill="rgb(251,221,1)" fg:x="58238" fg:w="169"/><text x="75.8720%" y="1647.50"></text></g><g><title>bcs::ser::serialize_into (14 samples, 0.02%)</title><rect x="75.8232%" y="1621" width="0.0182%" height="15" fill="rgb(225,217,1)" fg:x="58393" fg:w="14"/><text x="76.0732%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 0.02%)</title><rect x="75.8232%" y="1605" width="0.0182%" height="15" fill="rgb(241,105,49)" fg:x="58393" fg:w="14"/><text x="76.0732%" y="1615.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (14 samples, 0.02%)</title><rect x="75.8232%" y="1589" width="0.0182%" height="15" fill="rgb(215,44,32)" fg:x="58393" fg:w="14"/><text x="76.0732%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (14 samples, 0.02%)</title><rect x="75.8232%" y="1573" width="0.0182%" height="15" fill="rgb(213,222,14)" fg:x="58393" fg:w="14"/><text x="76.0732%" y="1583.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (1,022 samples, 1.33%)</title><rect x="74.5183%" y="1717" width="1.3271%" height="15" fill="rgb(207,99,52)" fg:x="57388" fg:w="1022"/><text x="74.7683%" y="1727.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::table_item (8 samples, 0.01%)</title><rect x="75.8453%" y="1717" width="0.0104%" height="15" fill="rgb(214,208,52)" fg:x="58410" fg:w="8"/><text x="76.0953%" y="1727.50"></text></g><g><title>&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;S&gt; as move_table_extension::TableResolver&gt;::resolve_table_entry (1,067 samples, 1.39%)</title><rect x="74.4819%" y="1749" width="1.3855%" height="15" fill="rgb(244,169,0)" fg:x="57360" fg:w="1067"/><text x="74.7319%" y="1759.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_table_extension::TableResolver&gt;::resolve_table_entry (1,059 samples, 1.38%)</title><rect x="74.4923%" y="1733" width="1.3751%" height="15" fill="rgb(216,193,37)" fg:x="57368" fg:w="1059"/><text x="74.7423%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (9 samples, 0.01%)</title><rect x="75.8557%" y="1717" width="0.0117%" height="15" fill="rgb(212,158,10)" fg:x="58418" fg:w="9"/><text x="76.1057%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (9 samples, 0.01%)</title><rect x="75.8557%" y="1701" width="0.0117%" height="15" fill="rgb(213,110,20)" fg:x="58418" fg:w="9"/><text x="76.1057%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="75.8557%" y="1685" width="0.0117%" height="15" fill="rgb(226,5,42)" fg:x="58418" fg:w="9"/><text x="76.1057%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="75.8557%" y="1669" width="0.0117%" height="15" fill="rgb(211,93,8)" fg:x="58418" fg:w="9"/><text x="76.1057%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="75.8557%" y="1653" width="0.0117%" height="15" fill="rgb(240,208,12)" fg:x="58418" fg:w="9"/><text x="76.1057%" y="1663.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="75.8570%" y="1637" width="0.0104%" height="15" fill="rgb(233,127,50)" fg:x="58419" fg:w="8"/><text x="76.1070%" y="1647.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="75.8713%" y="1637" width="0.0156%" height="15" fill="rgb(227,199,53)" fg:x="58430" fg:w="12"/><text x="76.1213%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.02%)</title><rect x="75.8700%" y="1733" width="0.0208%" height="15" fill="rgb(235,199,10)" fg:x="58429" fg:w="16"/><text x="76.1200%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.02%)</title><rect x="75.8700%" y="1717" width="0.0208%" height="15" fill="rgb(228,148,35)" fg:x="58429" fg:w="16"/><text x="76.1200%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.02%)</title><rect x="75.8700%" y="1701" width="0.0208%" height="15" fill="rgb(217,87,19)" fg:x="58429" fg:w="16"/><text x="76.1200%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (15 samples, 0.02%)</title><rect x="75.8713%" y="1685" width="0.0195%" height="15" fill="rgb(239,9,32)" fg:x="58430" fg:w="15"/><text x="76.1213%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (15 samples, 0.02%)</title><rect x="75.8713%" y="1669" width="0.0195%" height="15" fill="rgb(229,101,29)" fg:x="58430" fg:w="15"/><text x="76.1213%" y="1679.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (15 samples, 0.02%)</title><rect x="75.8713%" y="1653" width="0.0195%" height="15" fill="rgb(208,143,26)" fg:x="58430" fg:w="15"/><text x="76.1213%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (21 samples, 0.03%)</title><rect x="75.8687%" y="1749" width="0.0273%" height="15" fill="rgb(214,10,2)" fg:x="58428" fg:w="21"/><text x="76.1187%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (20 samples, 0.03%)</title><rect x="75.8960%" y="1749" width="0.0260%" height="15" fill="rgb(254,203,30)" fg:x="58449" fg:w="20"/><text x="76.1460%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (12 samples, 0.02%)</title><rect x="75.9064%" y="1733" width="0.0156%" height="15" fill="rgb(242,45,3)" fg:x="58457" fg:w="12"/><text x="76.1564%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (12 samples, 0.02%)</title><rect x="75.9064%" y="1717" width="0.0156%" height="15" fill="rgb(209,146,51)" fg:x="58457" fg:w="12"/><text x="76.1564%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.02%)</title><rect x="75.9064%" y="1701" width="0.0156%" height="15" fill="rgb(222,80,5)" fg:x="58457" fg:w="12"/><text x="76.1564%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.02%)</title><rect x="75.9064%" y="1685" width="0.0156%" height="15" fill="rgb(252,80,35)" fg:x="58457" fg:w="12"/><text x="76.1564%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="75.9064%" y="1669" width="0.0156%" height="15" fill="rgb(246,125,28)" fg:x="58457" fg:w="12"/><text x="76.1564%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="75.9064%" y="1653" width="0.0156%" height="15" fill="rgb(224,143,51)" fg:x="58457" fg:w="12"/><text x="76.1564%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="75.9064%" y="1637" width="0.0156%" height="15" fill="rgb(205,24,17)" fg:x="58457" fg:w="12"/><text x="76.1564%" y="1647.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="75.9102%" y="1621" width="0.0117%" height="15" fill="rgb(253,128,30)" fg:x="58460" fg:w="9"/><text x="76.1602%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="75.9219%" y="1701" width="0.0169%" height="15" fill="rgb(214,153,25)" fg:x="58469" fg:w="13"/><text x="76.1719%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="75.9219%" y="1685" width="0.0169%" height="15" fill="rgb(214,4,28)" fg:x="58469" fg:w="13"/><text x="76.1719%" y="1695.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="75.9245%" y="1669" width="0.0143%" height="15" fill="rgb(235,179,52)" fg:x="58471" fg:w="11"/><text x="76.1745%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.02%)</title><rect x="75.9219%" y="1749" width="0.0195%" height="15" fill="rgb(233,27,42)" fg:x="58469" fg:w="15"/><text x="76.1719%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.02%)</title><rect x="75.9219%" y="1733" width="0.0195%" height="15" fill="rgb(238,35,25)" fg:x="58469" fg:w="15"/><text x="76.1719%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="75.9219%" y="1717" width="0.0195%" height="15" fill="rgb(227,44,31)" fg:x="58469" fg:w="15"/><text x="76.1719%" y="1727.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.01%)</title><rect x="75.9414%" y="1749" width="0.0104%" height="15" fill="rgb(232,201,13)" fg:x="58484" fg:w="8"/><text x="76.1914%" y="1759.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (16 samples, 0.02%)</title><rect x="75.9869%" y="1669" width="0.0208%" height="15" fill="rgb(224,172,52)" fg:x="58519" fg:w="16"/><text x="76.2369%" y="1679.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (16 samples, 0.02%)</title><rect x="75.9869%" y="1653" width="0.0208%" height="15" fill="rgb(214,27,26)" fg:x="58519" fg:w="16"/><text x="76.2369%" y="1663.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 0.04%)</title><rect x="75.9843%" y="1685" width="0.0364%" height="15" fill="rgb(210,185,52)" fg:x="58517" fg:w="28"/><text x="76.2343%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (8 samples, 0.01%)</title><rect x="76.0102%" y="1669" width="0.0104%" height="15" fill="rgb(249,59,32)" fg:x="58537" fg:w="8"/><text x="76.2602%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="76.0102%" y="1653" width="0.0104%" height="15" fill="rgb(242,209,18)" fg:x="58537" fg:w="8"/><text x="76.2602%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="76.0102%" y="1637" width="0.0104%" height="15" fill="rgb(229,0,18)" fg:x="58537" fg:w="8"/><text x="76.2602%" y="1647.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="76.0102%" y="1621" width="0.0104%" height="15" fill="rgb(217,138,29)" fg:x="58537" fg:w="8"/><text x="76.2602%" y="1631.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (32 samples, 0.04%)</title><rect x="75.9804%" y="1701" width="0.0416%" height="15" fill="rgb(215,72,42)" fg:x="58514" fg:w="32"/><text x="76.2304%" y="1711.50"></text></g><g><title>bcs::de::from_bytes_seed (45 samples, 0.06%)</title><rect x="75.9648%" y="1717" width="0.0584%" height="15" fill="rgb(254,115,11)" fg:x="58502" fg:w="45"/><text x="76.2148%" y="1727.50"></text></g><g><title>move_table_extension::deserialize (56 samples, 0.07%)</title><rect x="75.9518%" y="1749" width="0.0727%" height="15" fill="rgb(205,133,39)" fg:x="58492" fg:w="56"/><text x="76.2018%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (55 samples, 0.07%)</title><rect x="75.9531%" y="1733" width="0.0714%" height="15" fill="rgb(211,36,27)" fg:x="58493" fg:w="55"/><text x="76.2031%" y="1743.50"></text></g><g><title>move_table_extension::Table::get_or_create_global_value (1,205 samples, 1.56%)</title><rect x="74.4676%" y="1765" width="1.5647%" height="15" fill="rgb(221,48,10)" fg:x="57349" fg:w="1205"/><text x="74.7176%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (10 samples, 0.01%)</title><rect x="76.0518%" y="1749" width="0.0130%" height="15" fill="rgb(230,172,50)" fg:x="58569" fg:w="10"/><text x="76.3018%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="76.0531%" y="1733" width="0.0117%" height="15" fill="rgb(249,72,18)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.01%)</title><rect x="76.0531%" y="1717" width="0.0117%" height="15" fill="rgb(237,58,48)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.01%)</title><rect x="76.0531%" y="1701" width="0.0117%" height="15" fill="rgb(242,123,3)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1711.50"></text></g><g><title>&lt;move_table_extension::TableHandle as core::cmp::Ord&gt;::cmp (9 samples, 0.01%)</title><rect x="76.0531%" y="1685" width="0.0117%" height="15" fill="rgb(232,111,32)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1695.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (9 samples, 0.01%)</title><rect x="76.0531%" y="1669" width="0.0117%" height="15" fill="rgb(229,108,3)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1679.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (9 samples, 0.01%)</title><rect x="76.0531%" y="1653" width="0.0117%" height="15" fill="rgb(222,158,10)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (9 samples, 0.01%)</title><rect x="76.0531%" y="1637" width="0.0117%" height="15" fill="rgb(205,34,49)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (9 samples, 0.01%)</title><rect x="76.0531%" y="1621" width="0.0117%" height="15" fill="rgb(232,21,14)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1631.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (9 samples, 0.01%)</title><rect x="76.0531%" y="1605" width="0.0117%" height="15" fill="rgb(229,127,44)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1615.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="76.0531%" y="1589" width="0.0117%" height="15" fill="rgb(232,171,4)" fg:x="58570" fg:w="9"/><text x="76.3031%" y="1599.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="76.0842%" y="1733" width="0.0104%" height="15" fill="rgb(250,92,16)" fg:x="58594" fg:w="8"/><text x="76.3342%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (54 samples, 0.07%)</title><rect x="76.0648%" y="1749" width="0.0701%" height="15" fill="rgb(230,103,38)" fg:x="58579" fg:w="54"/><text x="76.3148%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (31 samples, 0.04%)</title><rect x="76.0946%" y="1733" width="0.0403%" height="15" fill="rgb(253,167,9)" fg:x="58602" fg:w="31"/><text x="76.3446%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (31 samples, 0.04%)</title><rect x="76.0946%" y="1717" width="0.0403%" height="15" fill="rgb(222,118,11)" fg:x="58602" fg:w="31"/><text x="76.3446%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (31 samples, 0.04%)</title><rect x="76.0946%" y="1701" width="0.0403%" height="15" fill="rgb(240,202,0)" fg:x="58602" fg:w="31"/><text x="76.3446%" y="1711.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (31 samples, 0.04%)</title><rect x="76.0946%" y="1685" width="0.0403%" height="15" fill="rgb(236,124,4)" fg:x="58602" fg:w="31"/><text x="76.3446%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.04%)</title><rect x="76.0946%" y="1669" width="0.0403%" height="15" fill="rgb(244,128,18)" fg:x="58602" fg:w="31"/><text x="76.3446%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.04%)</title><rect x="76.0946%" y="1653" width="0.0403%" height="15" fill="rgb(231,206,5)" fg:x="58602" fg:w="31"/><text x="76.3446%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.04%)</title><rect x="76.0946%" y="1637" width="0.0403%" height="15" fill="rgb(237,111,8)" fg:x="58602" fg:w="31"/><text x="76.3446%" y="1647.50"></text></g><g><title>malloc (28 samples, 0.04%)</title><rect x="76.0985%" y="1621" width="0.0364%" height="15" fill="rgb(225,127,3)" fg:x="58605" fg:w="28"/><text x="76.3485%" y="1631.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="76.1089%" y="1605" width="0.0260%" height="15" fill="rgb(222,85,48)" fg:x="58613" fg:w="20"/><text x="76.3589%" y="1615.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="76.1803%" y="1653" width="0.0117%" height="15" fill="rgb(221,108,37)" fg:x="58668" fg:w="9"/><text x="76.4303%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="76.1803%" y="1637" width="0.0117%" height="15" fill="rgb(226,169,36)" fg:x="58668" fg:w="9"/><text x="76.4303%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.02%)</title><rect x="76.2089%" y="1557" width="0.0169%" height="15" fill="rgb(237,76,12)" fg:x="58690" fg:w="13"/><text x="76.4589%" y="1567.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.02%)</title><rect x="76.2089%" y="1541" width="0.0169%" height="15" fill="rgb(210,227,32)" fg:x="58690" fg:w="13"/><text x="76.4589%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.02%)</title><rect x="76.2089%" y="1525" width="0.0169%" height="15" fill="rgb(214,117,20)" fg:x="58690" fg:w="13"/><text x="76.4589%" y="1535.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.02%)</title><rect x="76.2089%" y="1509" width="0.0169%" height="15" fill="rgb(234,119,41)" fg:x="58690" fg:w="13"/><text x="76.4589%" y="1519.50"></text></g><g><title>move_table_extension::TableData::get_or_create_table (158 samples, 0.21%)</title><rect x="76.0323%" y="1765" width="0.2052%" height="15" fill="rgb(230,130,47)" fg:x="58554" fg:w="158"/><text x="76.2823%" y="1775.50"></text></g><g><title>move_table_extension::get_type_layout (79 samples, 0.10%)</title><rect x="76.1349%" y="1749" width="0.1026%" height="15" fill="rgb(215,21,41)" fg:x="58633" fg:w="79"/><text x="76.3849%" y="1759.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_layout (69 samples, 0.09%)</title><rect x="76.1479%" y="1733" width="0.0896%" height="15" fill="rgb(226,26,53)" fg:x="58643" fg:w="69"/><text x="76.3979%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Resolver::type_to_type_layout (55 samples, 0.07%)</title><rect x="76.1661%" y="1717" width="0.0714%" height="15" fill="rgb(221,92,23)" fg:x="58657" fg:w="55"/><text x="76.4161%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (55 samples, 0.07%)</title><rect x="76.1661%" y="1701" width="0.0714%" height="15" fill="rgb(213,156,21)" fg:x="58657" fg:w="55"/><text x="76.4161%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (55 samples, 0.07%)</title><rect x="76.1661%" y="1685" width="0.0714%" height="15" fill="rgb(254,166,29)" fg:x="58657" fg:w="55"/><text x="76.4161%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (48 samples, 0.06%)</title><rect x="76.1751%" y="1669" width="0.0623%" height="15" fill="rgb(213,71,1)" fg:x="58664" fg:w="48"/><text x="76.4251%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.04%)</title><rect x="76.1933%" y="1653" width="0.0441%" height="15" fill="rgb(245,8,13)" fg:x="58678" fg:w="34"/><text x="76.4433%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.04%)</title><rect x="76.1933%" y="1637" width="0.0441%" height="15" fill="rgb(213,32,32)" fg:x="58678" fg:w="34"/><text x="76.4433%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.04%)</title><rect x="76.1933%" y="1621" width="0.0441%" height="15" fill="rgb(251,86,50)" fg:x="58678" fg:w="34"/><text x="76.4433%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.03%)</title><rect x="76.2037%" y="1605" width="0.0338%" height="15" fill="rgb(252,92,41)" fg:x="58686" fg:w="26"/><text x="76.4537%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.03%)</title><rect x="76.2037%" y="1589" width="0.0338%" height="15" fill="rgb(234,70,35)" fg:x="58686" fg:w="26"/><text x="76.4537%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (26 samples, 0.03%)</title><rect x="76.2037%" y="1573" width="0.0338%" height="15" fill="rgb(210,157,19)" fg:x="58686" fg:w="26"/><text x="76.4537%" y="1583.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.03%)</title><rect x="76.2466%" y="1749" width="0.0338%" height="15" fill="rgb(206,20,45)" fg:x="58719" fg:w="26"/><text x="76.4966%" y="1759.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="76.3037%" y="1701" width="0.0104%" height="15" fill="rgb(207,34,7)" fg:x="58763" fg:w="8"/><text x="76.5537%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::container (11 samples, 0.01%)</title><rect x="76.3154%" y="1701" width="0.0143%" height="15" fill="rgb(253,151,14)" fg:x="58772" fg:w="11"/><text x="76.5654%" y="1711.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (40 samples, 0.05%)</title><rect x="76.2803%" y="1749" width="0.0519%" height="15" fill="rgb(252,1,18)" fg:x="58745" fg:w="40"/><text x="76.5303%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (36 samples, 0.05%)</title><rect x="76.2855%" y="1733" width="0.0467%" height="15" fill="rgb(214,77,52)" fg:x="58749" fg:w="36"/><text x="76.5355%" y="1743.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (29 samples, 0.04%)</title><rect x="76.2946%" y="1717" width="0.0377%" height="15" fill="rgb(254,106,35)" fg:x="58756" fg:w="29"/><text x="76.5446%" y="1727.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (26 samples, 0.03%)</title><rect x="76.3323%" y="1749" width="0.0338%" height="15" fill="rgb(212,67,40)" fg:x="58785" fg:w="26"/><text x="76.5823%" y="1759.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (18 samples, 0.02%)</title><rect x="76.3426%" y="1733" width="0.0234%" height="15" fill="rgb(228,76,23)" fg:x="58793" fg:w="18"/><text x="76.5926%" y="1743.50"></text></g><g><title>move_table_extension::get_table_handle (131 samples, 0.17%)</title><rect x="76.2375%" y="1765" width="0.1701%" height="15" fill="rgb(250,198,5)" fg:x="58712" fg:w="131"/><text x="76.4875%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (32 samples, 0.04%)</title><rect x="76.3660%" y="1749" width="0.0416%" height="15" fill="rgb(209,20,25)" fg:x="58811" fg:w="32"/><text x="76.6160%" y="1759.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (8 samples, 0.01%)</title><rect x="76.3972%" y="1733" width="0.0104%" height="15" fill="rgb(236,32,4)" fg:x="58835" fg:w="8"/><text x="76.6472%" y="1743.50"></text></g><g><title>move_table_extension::serialize (50 samples, 0.06%)</title><rect x="76.4076%" y="1765" width="0.0649%" height="15" fill="rgb(215,31,6)" fg:x="58843" fg:w="50"/><text x="76.6576%" y="1775.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (45 samples, 0.06%)</title><rect x="76.4141%" y="1749" width="0.0584%" height="15" fill="rgb(207,186,49)" fg:x="58848" fg:w="45"/><text x="76.6641%" y="1759.50"></text></g><g><title>bcs::ser::to_bytes (37 samples, 0.05%)</title><rect x="76.4245%" y="1733" width="0.0480%" height="15" fill="rgb(211,212,49)" fg:x="58856" fg:w="37"/><text x="76.6745%" y="1743.50"></text></g><g><title>bcs::ser::serialize_into (34 samples, 0.04%)</title><rect x="76.4283%" y="1717" width="0.0441%" height="15" fill="rgb(229,51,41)" fg:x="58859" fg:w="34"/><text x="76.6783%" y="1727.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (34 samples, 0.04%)</title><rect x="76.4283%" y="1701" width="0.0441%" height="15" fill="rgb(205,225,36)" fg:x="58859" fg:w="34"/><text x="76.6783%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (20 samples, 0.03%)</title><rect x="76.4465%" y="1685" width="0.0260%" height="15" fill="rgb(209,213,45)" fg:x="58873" fg:w="20"/><text x="76.6965%" y="1695.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (20 samples, 0.03%)</title><rect x="76.4465%" y="1669" width="0.0260%" height="15" fill="rgb(219,35,49)" fg:x="58873" fg:w="20"/><text x="76.6965%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.03%)</title><rect x="76.4465%" y="1653" width="0.0260%" height="15" fill="rgb(215,205,22)" fg:x="58873" fg:w="20"/><text x="76.6965%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.03%)</title><rect x="76.4465%" y="1637" width="0.0260%" height="15" fill="rgb(248,204,34)" fg:x="58873" fg:w="20"/><text x="76.6965%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.03%)</title><rect x="76.4465%" y="1621" width="0.0260%" height="15" fill="rgb(219,223,31)" fg:x="58873" fg:w="20"/><text x="76.6965%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="76.4517%" y="1605" width="0.0208%" height="15" fill="rgb(236,14,8)" fg:x="58877" fg:w="16"/><text x="76.7017%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.02%)</title><rect x="76.4530%" y="1589" width="0.0195%" height="15" fill="rgb(243,129,23)" fg:x="58878" fg:w="15"/><text x="76.7030%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.02%)</title><rect x="76.4543%" y="1573" width="0.0182%" height="15" fill="rgb(205,204,5)" fg:x="58879" fg:w="14"/><text x="76.7043%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="76.4595%" y="1557" width="0.0130%" height="15" fill="rgb(244,115,32)" fg:x="58883" fg:w="10"/><text x="76.7095%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="76.4608%" y="1541" width="0.0117%" height="15" fill="rgb(229,123,14)" fg:x="58884" fg:w="9"/><text x="76.7108%" y="1551.50"></text></g><g><title>&lt;X as better_any::TidExt&gt;::downcast_ref (12 samples, 0.02%)</title><rect x="76.4777%" y="1749" width="0.0156%" height="15" fill="rgb(250,85,1)" fg:x="58897" fg:w="12"/><text x="76.7277%" y="1759.50"></text></g><g><title>&lt;T as better_any::Tid&gt;::self_id (11 samples, 0.01%)</title><rect x="76.4790%" y="1733" width="0.0143%" height="15" fill="rgb(209,141,54)" fg:x="58898" fg:w="11"/><text x="76.7290%" y="1743.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.03%)</title><rect x="76.4946%" y="1701" width="0.0286%" height="15" fill="rgb(244,107,39)" fg:x="58910" fg:w="22"/><text x="76.7446%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.03%)</title><rect x="76.4946%" y="1685" width="0.0286%" height="15" fill="rgb(230,68,26)" fg:x="58910" fg:w="22"/><text x="76.7446%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.02%)</title><rect x="76.5076%" y="1669" width="0.0156%" height="15" fill="rgb(220,178,33)" fg:x="58920" fg:w="12"/><text x="76.7576%" y="1679.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="76.5089%" y="1653" width="0.0143%" height="15" fill="rgb(220,77,53)" fg:x="58921" fg:w="11"/><text x="76.7589%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (11 samples, 0.01%)</title><rect x="76.5089%" y="1637" width="0.0143%" height="15" fill="rgb(224,108,19)" fg:x="58921" fg:w="11"/><text x="76.7589%" y="1647.50"></text></g><g><title>core::hash::Hasher::write_u64 (11 samples, 0.01%)</title><rect x="76.5089%" y="1621" width="0.0143%" height="15" fill="rgb(223,203,27)" fg:x="58921" fg:w="11"/><text x="76.7589%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="76.5089%" y="1605" width="0.0143%" height="15" fill="rgb(211,32,46)" fg:x="58921" fg:w="11"/><text x="76.7589%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="76.5089%" y="1589" width="0.0143%" height="15" fill="rgb(240,101,27)" fg:x="58921" fg:w="11"/><text x="76.7589%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="76.5089%" y="1573" width="0.0143%" height="15" fill="rgb(217,210,11)" fg:x="58921" fg:w="11"/><text x="76.7589%" y="1583.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get (49 samples, 0.06%)</title><rect x="76.4725%" y="1765" width="0.0636%" height="15" fill="rgb(236,130,21)" fg:x="58893" fg:w="49"/><text x="76.7225%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 0.04%)</title><rect x="76.4933%" y="1749" width="0.0429%" height="15" fill="rgb(250,136,8)" fg:x="58909" fg:w="33"/><text x="76.7433%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 0.04%)</title><rect x="76.4933%" y="1733" width="0.0429%" height="15" fill="rgb(243,223,36)" fg:x="58909" fg:w="33"/><text x="76.7433%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.04%)</title><rect x="76.4933%" y="1717" width="0.0429%" height="15" fill="rgb(246,184,8)" fg:x="58909" fg:w="33"/><text x="76.7433%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="76.5231%" y="1701" width="0.0130%" height="15" fill="rgb(222,158,36)" fg:x="58932" fg:w="10"/><text x="76.7731%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="76.5231%" y="1685" width="0.0130%" height="15" fill="rgb(210,220,19)" fg:x="58932" fg:w="10"/><text x="76.7731%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.01%)</title><rect x="76.5231%" y="1669" width="0.0130%" height="15" fill="rgb(246,44,38)" fg:x="58932" fg:w="10"/><text x="76.7731%" y="1679.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::extensions (8 samples, 0.01%)</title><rect x="76.5361%" y="1765" width="0.0104%" height="15" fill="rgb(246,186,14)" fg:x="58942" fg:w="8"/><text x="76.7861%" y="1775.50"></text></g><g><title>move_table_extension::make_native_contains_box::{{closure}} (1,784 samples, 2.32%)</title><rect x="74.2534%" y="1797" width="2.3165%" height="15" fill="rgb(233,193,20)" fg:x="57184" fg:w="1784"/><text x="74.5034%" y="1807.50">m..</text></g><g><title>move_table_extension::native_contains_box (1,776 samples, 2.31%)</title><rect x="74.2638%" y="1781" width="2.3061%" height="15" fill="rgb(215,60,5)" fg:x="57192" fg:w="1776"/><text x="74.5138%" y="1791.50">m..</text></g><g><title>move_vm_types::values::values_impl::Value::bool (8 samples, 0.01%)</title><rect x="76.5595%" y="1765" width="0.0104%" height="15" fill="rgb(207,128,10)" fg:x="58960" fg:w="8"/><text x="76.8095%" y="1775.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (38 samples, 0.05%)</title><rect x="76.5699%" y="1797" width="0.0493%" height="15" fill="rgb(238,84,54)" fg:x="58968" fg:w="38"/><text x="76.8199%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (32 samples, 0.04%)</title><rect x="76.5777%" y="1781" width="0.0416%" height="15" fill="rgb(213,130,11)" fg:x="58974" fg:w="32"/><text x="76.8277%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (36 samples, 0.05%)</title><rect x="76.6192%" y="1797" width="0.0467%" height="15" fill="rgb(235,62,9)" fg:x="59006" fg:w="36"/><text x="76.8692%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (29 samples, 0.04%)</title><rect x="76.6283%" y="1781" width="0.0377%" height="15" fill="rgb(222,64,24)" fg:x="59013" fg:w="29"/><text x="76.8783%" y="1791.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (27 samples, 0.04%)</title><rect x="76.6660%" y="1797" width="0.0351%" height="15" fill="rgb(238,193,42)" fg:x="59042" fg:w="27"/><text x="76.9160%" y="1807.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (15 samples, 0.02%)</title><rect x="76.7010%" y="1797" width="0.0195%" height="15" fill="rgb(243,204,46)" fg:x="59069" fg:w="15"/><text x="76.9510%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.02%)</title><rect x="76.7270%" y="1765" width="0.0195%" height="15" fill="rgb(243,196,11)" fg:x="59089" fg:w="15"/><text x="76.9770%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Function::get_native (17 samples, 0.02%)</title><rect x="76.7257%" y="1797" width="0.0221%" height="15" fill="rgb(232,77,22)" fg:x="59088" fg:w="17"/><text x="76.9757%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (16 samples, 0.02%)</title><rect x="76.7270%" y="1781" width="0.0208%" height="15" fill="rgb(215,80,25)" fg:x="59089" fg:w="16"/><text x="76.9770%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::Function::return_types (11 samples, 0.01%)</title><rect x="76.7569%" y="1797" width="0.0143%" height="15" fill="rgb(210,173,7)" fg:x="59112" fg:w="11"/><text x="77.0069%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="76.8932%" y="1733" width="0.0104%" height="15" fill="rgb(207,101,10)" fg:x="59217" fg:w="8"/><text x="77.1432%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (24 samples, 0.03%)</title><rect x="76.9036%" y="1733" width="0.0312%" height="15" fill="rgb(246,57,48)" fg:x="59225" fg:w="24"/><text x="77.1536%" y="1743.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.02%)</title><rect x="76.9179%" y="1717" width="0.0169%" height="15" fill="rgb(236,184,40)" fg:x="59236" fg:w="13"/><text x="77.1679%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="76.9179%" y="1701" width="0.0169%" height="15" fill="rgb(210,205,13)" fg:x="59236" fg:w="13"/><text x="77.1679%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="76.9179%" y="1685" width="0.0169%" height="15" fill="rgb(231,129,42)" fg:x="59236" fg:w="13"/><text x="77.1679%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="76.9179%" y="1669" width="0.0169%" height="15" fill="rgb(220,229,54)" fg:x="59236" fg:w="13"/><text x="77.1679%" y="1679.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="76.9205%" y="1653" width="0.0143%" height="15" fill="rgb(230,192,26)" fg:x="59238" fg:w="11"/><text x="77.1705%" y="1663.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="76.9854%" y="1717" width="0.0117%" height="15" fill="rgb(253,18,30)" fg:x="59288" fg:w="9"/><text x="77.2354%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 0.09%)</title><rect x="77.0231%" y="1669" width="0.0922%" height="15" fill="rgb(216,62,53)" fg:x="59317" fg:w="71"/><text x="77.2731%" y="1679.50"></text></g><g><title>malloc (62 samples, 0.08%)</title><rect x="77.0347%" y="1653" width="0.0805%" height="15" fill="rgb(230,79,29)" fg:x="59326" fg:w="62"/><text x="77.2847%" y="1663.50"></text></g><g><title>[libc.so.6] (36 samples, 0.05%)</title><rect x="77.0685%" y="1637" width="0.0467%" height="15" fill="rgb(242,26,26)" fg:x="59352" fg:w="36"/><text x="77.3185%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (80 samples, 0.10%)</title><rect x="77.0127%" y="1701" width="0.1039%" height="15" fill="rgb(227,125,21)" fg:x="59309" fg:w="80"/><text x="77.2627%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (79 samples, 0.10%)</title><rect x="77.0140%" y="1685" width="0.1026%" height="15" fill="rgb(229,93,26)" fg:x="59310" fg:w="79"/><text x="77.2640%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (104 samples, 0.14%)</title><rect x="77.0062%" y="1717" width="0.1350%" height="15" fill="rgb(227,228,8)" fg:x="59304" fg:w="104"/><text x="77.2562%" y="1727.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="77.1179%" y="1701" width="0.0234%" height="15" fill="rgb(233,56,0)" fg:x="59390" fg:w="18"/><text x="77.3679%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (210 samples, 0.27%)</title><rect x="76.9348%" y="1733" width="0.2727%" height="15" fill="rgb(225,185,17)" fg:x="59249" fg:w="210"/><text x="77.1848%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (51 samples, 0.07%)</title><rect x="77.1412%" y="1717" width="0.0662%" height="15" fill="rgb(238,202,30)" fg:x="59408" fg:w="51"/><text x="77.3912%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (15 samples, 0.02%)</title><rect x="77.1880%" y="1701" width="0.0195%" height="15" fill="rgb(236,60,13)" fg:x="59444" fg:w="15"/><text x="77.4380%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (14 samples, 0.02%)</title><rect x="77.1893%" y="1685" width="0.0182%" height="15" fill="rgb(244,92,0)" fg:x="59445" fg:w="14"/><text x="77.4393%" y="1695.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (14 samples, 0.02%)</title><rect x="77.1893%" y="1669" width="0.0182%" height="15" fill="rgb(225,57,15)" fg:x="59445" fg:w="14"/><text x="77.4393%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (340 samples, 0.44%)</title><rect x="76.7712%" y="1797" width="0.4415%" height="15" fill="rgb(228,5,28)" fg:x="59123" fg:w="340"/><text x="77.0212%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (326 samples, 0.42%)</title><rect x="76.7893%" y="1781" width="0.4233%" height="15" fill="rgb(252,34,51)" fg:x="59137" fg:w="326"/><text x="77.0393%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (304 samples, 0.39%)</title><rect x="76.8179%" y="1765" width="0.3947%" height="15" fill="rgb(235,58,7)" fg:x="59159" fg:w="304"/><text x="77.0679%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (296 samples, 0.38%)</title><rect x="76.8283%" y="1749" width="0.3844%" height="15" fill="rgb(250,132,20)" fg:x="59167" fg:w="296"/><text x="77.0783%" y="1759.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::new (8 samples, 0.01%)</title><rect x="77.2126%" y="1797" width="0.0104%" height="15" fill="rgb(217,164,0)" fg:x="59463" fg:w="8"/><text x="77.4626%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (19 samples, 0.02%)</title><rect x="77.2230%" y="1797" width="0.0247%" height="15" fill="rgb(208,220,35)" fg:x="59471" fg:w="19"/><text x="77.4730%" y="1807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (16 samples, 0.02%)</title><rect x="77.2269%" y="1781" width="0.0208%" height="15" fill="rgb(227,42,51)" fg:x="59474" fg:w="16"/><text x="77.4769%" y="1791.50"></text></g><g><title>core::cmp::PartialEq::ne (16 samples, 0.02%)</title><rect x="77.2269%" y="1765" width="0.0208%" height="15" fill="rgb(225,146,38)" fg:x="59474" fg:w="16"/><text x="77.4769%" y="1775.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (16 samples, 0.02%)</title><rect x="77.2269%" y="1749" width="0.0208%" height="15" fill="rgb(252,108,37)" fg:x="59474" fg:w="16"/><text x="77.4769%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (3,307 samples, 4.29%)</title><rect x="72.9614%" y="1829" width="4.2941%" height="15" fill="rgb(244,101,24)" fg:x="56189" fg:w="3307"/><text x="73.2114%" y="1839.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (3,283 samples, 4.26%)</title><rect x="72.9925%" y="1813" width="4.2630%" height="15" fill="rgb(213,161,50)" fg:x="56213" fg:w="3283"/><text x="73.2425%" y="1823.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (18 samples, 0.02%)</title><rect x="77.2555%" y="1829" width="0.0234%" height="15" fill="rgb(248,159,19)" fg:x="59496" fg:w="18"/><text x="77.5055%" y="1839.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="77.3074%" y="1813" width="0.0104%" height="15" fill="rgb(233,179,15)" fg:x="59536" fg:w="8"/><text x="77.5574%" y="1823.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="77.3191%" y="1813" width="0.0286%" height="15" fill="rgb(248,178,3)" fg:x="59545" fg:w="22"/><text x="77.5691%" y="1823.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="77.3308%" y="1797" width="0.0169%" height="15" fill="rgb(245,190,41)" fg:x="59554" fg:w="13"/><text x="77.5808%" y="1807.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="77.3711%" y="1781" width="0.0286%" height="15" fill="rgb(218,151,19)" fg:x="59585" fg:w="22"/><text x="77.6211%" y="1791.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="77.3853%" y="1765" width="0.0143%" height="15" fill="rgb(245,25,44)" fg:x="59596" fg:w="11"/><text x="77.6353%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="77.4217%" y="1749" width="0.0234%" height="15" fill="rgb(235,172,47)" fg:x="59624" fg:w="18"/><text x="77.6717%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (8 samples, 0.01%)</title><rect x="77.4347%" y="1733" width="0.0104%" height="15" fill="rgb(246,33,12)" fg:x="59634" fg:w="8"/><text x="77.6847%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (8 samples, 0.01%)</title><rect x="77.4347%" y="1717" width="0.0104%" height="15" fill="rgb(214,124,7)" fg:x="59634" fg:w="8"/><text x="77.6847%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (71 samples, 0.09%)</title><rect x="77.3555%" y="1813" width="0.0922%" height="15" fill="rgb(246,186,18)" fg:x="59573" fg:w="71"/><text x="77.6055%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (60 samples, 0.08%)</title><rect x="77.3698%" y="1797" width="0.0779%" height="15" fill="rgb(231,94,1)" fg:x="59584" fg:w="60"/><text x="77.6198%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (37 samples, 0.05%)</title><rect x="77.3996%" y="1781" width="0.0480%" height="15" fill="rgb(208,33,48)" fg:x="59607" fg:w="37"/><text x="77.6496%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (21 samples, 0.03%)</title><rect x="77.4204%" y="1765" width="0.0273%" height="15" fill="rgb(208,195,44)" fg:x="59623" fg:w="21"/><text x="77.6704%" y="1775.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="77.5217%" y="1557" width="0.0104%" height="15" fill="rgb(226,13,52)" fg:x="59701" fg:w="8"/><text x="77.7717%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (34 samples, 0.04%)</title><rect x="77.5217%" y="1621" width="0.0441%" height="15" fill="rgb(217,219,45)" fg:x="59701" fg:w="34"/><text x="77.7717%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.04%)</title><rect x="77.5217%" y="1605" width="0.0441%" height="15" fill="rgb(223,45,25)" fg:x="59701" fg:w="34"/><text x="77.7717%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.04%)</title><rect x="77.5217%" y="1589" width="0.0441%" height="15" fill="rgb(241,163,0)" fg:x="59701" fg:w="34"/><text x="77.7717%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.04%)</title><rect x="77.5217%" y="1573" width="0.0441%" height="15" fill="rgb(216,68,47)" fg:x="59701" fg:w="34"/><text x="77.7717%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (26 samples, 0.03%)</title><rect x="77.5321%" y="1557" width="0.0338%" height="15" fill="rgb(236,119,45)" fg:x="59709" fg:w="26"/><text x="77.7821%" y="1567.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (23 samples, 0.03%)</title><rect x="77.5360%" y="1541" width="0.0299%" height="15" fill="rgb(209,188,24)" fg:x="59712" fg:w="23"/><text x="77.7860%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (23 samples, 0.03%)</title><rect x="77.5360%" y="1525" width="0.0299%" height="15" fill="rgb(221,118,7)" fg:x="59712" fg:w="23"/><text x="77.7860%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (23 samples, 0.03%)</title><rect x="77.5360%" y="1509" width="0.0299%" height="15" fill="rgb(213,148,43)" fg:x="59712" fg:w="23"/><text x="77.7860%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (22 samples, 0.03%)</title><rect x="77.5373%" y="1493" width="0.0286%" height="15" fill="rgb(231,21,43)" fg:x="59713" fg:w="22"/><text x="77.7873%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (20 samples, 0.03%)</title><rect x="77.5399%" y="1477" width="0.0260%" height="15" fill="rgb(232,213,43)" fg:x="59715" fg:w="20"/><text x="77.7899%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.05%)</title><rect x="77.5204%" y="1637" width="0.0467%" height="15" fill="rgb(239,145,50)" fg:x="59700" fg:w="36"/><text x="77.7704%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (48 samples, 0.06%)</title><rect x="77.5113%" y="1669" width="0.0623%" height="15" fill="rgb(222,131,18)" fg:x="59693" fg:w="48"/><text x="77.7613%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (48 samples, 0.06%)</title><rect x="77.5113%" y="1653" width="0.0623%" height="15" fill="rgb(243,181,13)" fg:x="59693" fg:w="48"/><text x="77.7613%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.02%)</title><rect x="77.6126%" y="1493" width="0.0182%" height="15" fill="rgb(212,74,41)" fg:x="59771" fg:w="14"/><text x="77.8626%" y="1503.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="77.6827%" y="1429" width="0.0169%" height="15" fill="rgb(237,143,34)" fg:x="59825" fg:w="13"/><text x="77.9327%" y="1439.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="77.6879%" y="1413" width="0.0117%" height="15" fill="rgb(228,139,0)" fg:x="59829" fg:w="9"/><text x="77.9379%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.02%)</title><rect x="77.6775%" y="1461" width="0.0234%" height="15" fill="rgb(227,214,11)" fg:x="59821" fg:w="18"/><text x="77.9275%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="77.6788%" y="1445" width="0.0221%" height="15" fill="rgb(228,118,39)" fg:x="59822" fg:w="17"/><text x="77.9288%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.04%)</title><rect x="77.6762%" y="1477" width="0.0416%" height="15" fill="rgb(207,117,22)" fg:x="59820" fg:w="32"/><text x="77.9262%" y="1487.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="77.7048%" y="1461" width="0.0130%" height="15" fill="rgb(225,91,8)" fg:x="59842" fg:w="10"/><text x="77.9548%" y="1471.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="77.7398%" y="1461" width="0.0104%" height="15" fill="rgb(230,219,48)" fg:x="59869" fg:w="8"/><text x="77.9898%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (152 samples, 0.20%)</title><rect x="77.5762%" y="1653" width="0.1974%" height="15" fill="rgb(244,0,23)" fg:x="59743" fg:w="152"/><text x="77.8262%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (152 samples, 0.20%)</title><rect x="77.5762%" y="1637" width="0.1974%" height="15" fill="rgb(206,212,23)" fg:x="59743" fg:w="152"/><text x="77.8262%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (152 samples, 0.20%)</title><rect x="77.5762%" y="1621" width="0.1974%" height="15" fill="rgb(254,62,10)" fg:x="59743" fg:w="152"/><text x="77.8262%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (152 samples, 0.20%)</title><rect x="77.5762%" y="1605" width="0.1974%" height="15" fill="rgb(236,58,8)" fg:x="59743" fg:w="152"/><text x="77.8262%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (145 samples, 0.19%)</title><rect x="77.5853%" y="1589" width="0.1883%" height="15" fill="rgb(232,212,17)" fg:x="59750" fg:w="145"/><text x="77.8353%" y="1599.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (145 samples, 0.19%)</title><rect x="77.5853%" y="1573" width="0.1883%" height="15" fill="rgb(206,132,9)" fg:x="59750" fg:w="145"/><text x="77.8353%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (138 samples, 0.18%)</title><rect x="77.5944%" y="1557" width="0.1792%" height="15" fill="rgb(234,97,28)" fg:x="59757" fg:w="138"/><text x="77.8444%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (138 samples, 0.18%)</title><rect x="77.5944%" y="1541" width="0.1792%" height="15" fill="rgb(254,144,9)" fg:x="59757" fg:w="138"/><text x="77.8444%" y="1551.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (137 samples, 0.18%)</title><rect x="77.5957%" y="1525" width="0.1779%" height="15" fill="rgb(244,204,43)" fg:x="59758" fg:w="137"/><text x="77.8457%" y="1535.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (136 samples, 0.18%)</title><rect x="77.5970%" y="1509" width="0.1766%" height="15" fill="rgb(248,177,16)" fg:x="59759" fg:w="136"/><text x="77.8470%" y="1519.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (110 samples, 0.14%)</title><rect x="77.6308%" y="1493" width="0.1428%" height="15" fill="rgb(219,110,15)" fg:x="59785" fg:w="110"/><text x="77.8808%" y="1503.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (43 samples, 0.06%)</title><rect x="77.7178%" y="1477" width="0.0558%" height="15" fill="rgb(212,203,25)" fg:x="59852" fg:w="43"/><text x="77.9678%" y="1487.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (18 samples, 0.02%)</title><rect x="77.7502%" y="1461" width="0.0234%" height="15" fill="rgb(205,50,1)" fg:x="59877" fg:w="18"/><text x="78.0002%" y="1471.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (15 samples, 0.02%)</title><rect x="77.7541%" y="1445" width="0.0195%" height="15" fill="rgb(222,152,41)" fg:x="59880" fg:w="15"/><text x="78.0041%" y="1455.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (15 samples, 0.02%)</title><rect x="77.7541%" y="1429" width="0.0195%" height="15" fill="rgb(236,83,3)" fg:x="59880" fg:w="15"/><text x="78.0041%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.20%)</title><rect x="77.5736%" y="1669" width="0.2013%" height="15" fill="rgb(214,30,54)" fg:x="59741" fg:w="155"/><text x="77.8236%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (239 samples, 0.31%)</title><rect x="77.4723%" y="1797" width="0.3103%" height="15" fill="rgb(250,117,31)" fg:x="59663" fg:w="239"/><text x="77.7223%" y="1807.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (239 samples, 0.31%)</title><rect x="77.4723%" y="1781" width="0.3103%" height="15" fill="rgb(228,77,14)" fg:x="59663" fg:w="239"/><text x="77.7223%" y="1791.50"></text></g><g><title>core::iter::adapters::try_process (239 samples, 0.31%)</title><rect x="77.4723%" y="1765" width="0.3103%" height="15" fill="rgb(241,3,28)" fg:x="59663" fg:w="239"/><text x="77.7223%" y="1775.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (232 samples, 0.30%)</title><rect x="77.4814%" y="1749" width="0.3013%" height="15" fill="rgb(221,175,52)" fg:x="59670" fg:w="232"/><text x="77.7314%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (232 samples, 0.30%)</title><rect x="77.4814%" y="1733" width="0.3013%" height="15" fill="rgb(237,91,6)" fg:x="59670" fg:w="232"/><text x="77.7314%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (232 samples, 0.30%)</title><rect x="77.4814%" y="1717" width="0.3013%" height="15" fill="rgb(246,46,42)" fg:x="59670" fg:w="232"/><text x="77.7314%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (228 samples, 0.30%)</title><rect x="77.4866%" y="1701" width="0.2961%" height="15" fill="rgb(235,199,0)" fg:x="59674" fg:w="228"/><text x="77.7366%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (222 samples, 0.29%)</title><rect x="77.4944%" y="1685" width="0.2883%" height="15" fill="rgb(224,44,40)" fg:x="59680" fg:w="222"/><text x="77.7444%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.01%)</title><rect x="77.8307%" y="1621" width="0.0130%" height="15" fill="rgb(209,24,35)" fg:x="59939" fg:w="10"/><text x="78.0807%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.04%)</title><rect x="77.8255%" y="1669" width="0.0364%" height="15" fill="rgb(244,46,22)" fg:x="59935" fg:w="28"/><text x="78.0755%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (28 samples, 0.04%)</title><rect x="77.8255%" y="1653" width="0.0364%" height="15" fill="rgb(235,99,8)" fg:x="59935" fg:w="28"/><text x="78.0755%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (28 samples, 0.04%)</title><rect x="77.8255%" y="1637" width="0.0364%" height="15" fill="rgb(218,127,36)" fg:x="59935" fg:w="28"/><text x="78.0755%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.02%)</title><rect x="77.8437%" y="1621" width="0.0182%" height="15" fill="rgb(238,47,46)" fg:x="59949" fg:w="14"/><text x="78.0937%" y="1631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.01%)</title><rect x="77.8918%" y="1509" width="0.0143%" height="15" fill="rgb(233,65,17)" fg:x="59986" fg:w="11"/><text x="78.1418%" y="1519.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (33 samples, 0.04%)</title><rect x="77.8684%" y="1637" width="0.0429%" height="15" fill="rgb(239,22,33)" fg:x="59968" fg:w="33"/><text x="78.1184%" y="1647.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (33 samples, 0.04%)</title><rect x="77.8684%" y="1621" width="0.0429%" height="15" fill="rgb(243,66,43)" fg:x="59968" fg:w="33"/><text x="78.1184%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (33 samples, 0.04%)</title><rect x="77.8684%" y="1605" width="0.0429%" height="15" fill="rgb(235,210,28)" fg:x="59968" fg:w="33"/><text x="78.1184%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (27 samples, 0.04%)</title><rect x="77.8762%" y="1589" width="0.0351%" height="15" fill="rgb(205,191,50)" fg:x="59974" fg:w="27"/><text x="78.1262%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.04%)</title><rect x="77.8762%" y="1573" width="0.0351%" height="15" fill="rgb(251,217,19)" fg:x="59974" fg:w="27"/><text x="78.1262%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.04%)</title><rect x="77.8762%" y="1557" width="0.0351%" height="15" fill="rgb(205,174,37)" fg:x="59974" fg:w="27"/><text x="78.1262%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.03%)</title><rect x="77.8788%" y="1541" width="0.0325%" height="15" fill="rgb(212,158,42)" fg:x="59976" fg:w="25"/><text x="78.1288%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.02%)</title><rect x="77.8905%" y="1525" width="0.0208%" height="15" fill="rgb(212,208,51)" fg:x="59985" fg:w="16"/><text x="78.1405%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="77.9112%" y="1541" width="0.0104%" height="15" fill="rgb(225,198,20)" fg:x="60001" fg:w="8"/><text x="78.1612%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (87 samples, 0.11%)</title><rect x="77.8177%" y="1701" width="0.1130%" height="15" fill="rgb(247,41,44)" fg:x="59929" fg:w="87"/><text x="78.0677%" y="1711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (86 samples, 0.11%)</title><rect x="77.8190%" y="1685" width="0.1117%" height="15" fill="rgb(228,33,41)" fg:x="59930" fg:w="86"/><text x="78.0690%" y="1695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (49 samples, 0.06%)</title><rect x="77.8671%" y="1669" width="0.0636%" height="15" fill="rgb(215,47,52)" fg:x="59967" fg:w="49"/><text x="78.1171%" y="1679.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (49 samples, 0.06%)</title><rect x="77.8671%" y="1653" width="0.0636%" height="15" fill="rgb(248,106,37)" fg:x="59967" fg:w="49"/><text x="78.1171%" y="1663.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (15 samples, 0.02%)</title><rect x="77.9112%" y="1637" width="0.0195%" height="15" fill="rgb(238,91,29)" fg:x="60001" fg:w="15"/><text x="78.1612%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (15 samples, 0.02%)</title><rect x="77.9112%" y="1621" width="0.0195%" height="15" fill="rgb(226,111,40)" fg:x="60001" fg:w="15"/><text x="78.1612%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15 samples, 0.02%)</title><rect x="77.9112%" y="1605" width="0.0195%" height="15" fill="rgb(229,159,36)" fg:x="60001" fg:w="15"/><text x="78.1612%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (15 samples, 0.02%)</title><rect x="77.9112%" y="1589" width="0.0195%" height="15" fill="rgb(221,109,4)" fg:x="60001" fg:w="15"/><text x="78.1612%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (15 samples, 0.02%)</title><rect x="77.9112%" y="1573" width="0.0195%" height="15" fill="rgb(236,56,25)" fg:x="60001" fg:w="15"/><text x="78.1612%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (15 samples, 0.02%)</title><rect x="77.9112%" y="1557" width="0.0195%" height="15" fill="rgb(244,113,23)" fg:x="60001" fg:w="15"/><text x="78.1612%" y="1567.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="77.9372%" y="1637" width="0.0156%" height="15" fill="rgb(249,132,2)" fg:x="60021" fg:w="12"/><text x="78.1872%" y="1647.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (12 samples, 0.02%)</title><rect x="77.9372%" y="1621" width="0.0156%" height="15" fill="rgb(205,185,21)" fg:x="60021" fg:w="12"/><text x="78.1872%" y="1631.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="77.9424%" y="1605" width="0.0104%" height="15" fill="rgb(245,130,2)" fg:x="60025" fg:w="8"/><text x="78.1924%" y="1615.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="77.9424%" y="1589" width="0.0104%" height="15" fill="rgb(246,71,26)" fg:x="60025" fg:w="8"/><text x="78.1924%" y="1599.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.01%)</title><rect x="77.9424%" y="1573" width="0.0104%" height="15" fill="rgb(234,194,6)" fg:x="60025" fg:w="8"/><text x="78.1924%" y="1583.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.01%)</title><rect x="77.9424%" y="1557" width="0.0104%" height="15" fill="rgb(206,24,32)" fg:x="60025" fg:w="8"/><text x="78.1924%" y="1567.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.01%)</title><rect x="77.9424%" y="1541" width="0.0104%" height="15" fill="rgb(233,7,54)" fg:x="60025" fg:w="8"/><text x="78.1924%" y="1551.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.01%)</title><rect x="77.9424%" y="1525" width="0.0104%" height="15" fill="rgb(252,46,1)" fg:x="60025" fg:w="8"/><text x="78.1924%" y="1535.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="77.9424%" y="1509" width="0.0104%" height="15" fill="rgb(216,113,53)" fg:x="60025" fg:w="8"/><text x="78.1924%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.02%)</title><rect x="77.9359%" y="1653" width="0.0182%" height="15" fill="rgb(215,40,24)" fg:x="60020" fg:w="14"/><text x="78.1859%" y="1663.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (402 samples, 0.52%)</title><rect x="77.4477%" y="1813" width="0.5220%" height="15" fill="rgb(233,222,8)" fg:x="59644" fg:w="402"/><text x="77.6977%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (137 samples, 0.18%)</title><rect x="77.7918%" y="1797" width="0.1779%" height="15" fill="rgb(248,73,28)" fg:x="59909" fg:w="137"/><text x="78.0418%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (126 samples, 0.16%)</title><rect x="77.8061%" y="1781" width="0.1636%" height="15" fill="rgb(247,126,28)" fg:x="59920" fg:w="126"/><text x="78.0561%" y="1791.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (120 samples, 0.16%)</title><rect x="77.8138%" y="1765" width="0.1558%" height="15" fill="rgb(242,173,54)" fg:x="59926" fg:w="120"/><text x="78.0638%" y="1775.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (119 samples, 0.15%)</title><rect x="77.8151%" y="1749" width="0.1545%" height="15" fill="rgb(244,186,22)" fg:x="59927" fg:w="119"/><text x="78.0651%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (119 samples, 0.15%)</title><rect x="77.8151%" y="1733" width="0.1545%" height="15" fill="rgb(231,187,4)" fg:x="59927" fg:w="119"/><text x="78.0651%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (119 samples, 0.15%)</title><rect x="77.8151%" y="1717" width="0.1545%" height="15" fill="rgb(252,66,47)" fg:x="59927" fg:w="119"/><text x="78.0651%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (30 samples, 0.04%)</title><rect x="77.9307%" y="1701" width="0.0390%" height="15" fill="rgb(240,228,28)" fg:x="60016" fg:w="30"/><text x="78.1807%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.04%)</title><rect x="77.9307%" y="1685" width="0.0390%" height="15" fill="rgb(237,63,43)" fg:x="60016" fg:w="30"/><text x="78.1807%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (30 samples, 0.04%)</title><rect x="77.9307%" y="1669" width="0.0390%" height="15" fill="rgb(214,1,44)" fg:x="60016" fg:w="30"/><text x="78.1807%" y="1679.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%)</title><rect x="77.9593%" y="1653" width="0.0104%" height="15" fill="rgb(212,2,46)" fg:x="60038" fg:w="8"/><text x="78.2093%" y="1663.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.01%)</title><rect x="77.9593%" y="1637" width="0.0104%" height="15" fill="rgb(213,142,5)" fg:x="60038" fg:w="8"/><text x="78.2093%" y="1647.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="77.9593%" y="1621" width="0.0104%" height="15" fill="rgb(229,135,1)" fg:x="60038" fg:w="8"/><text x="78.2093%" y="1631.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (9 samples, 0.01%)</title><rect x="77.9697%" y="1813" width="0.0117%" height="15" fill="rgb(252,98,38)" fg:x="60046" fg:w="9"/><text x="78.2197%" y="1823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="78.0424%" y="1621" width="0.0117%" height="15" fill="rgb(206,89,40)" fg:x="60102" fg:w="9"/><text x="78.2924%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.04%)</title><rect x="78.0164%" y="1685" width="0.0429%" height="15" fill="rgb(219,73,36)" fg:x="60082" fg:w="33"/><text x="78.2664%" y="1695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.04%)</title><rect x="78.0164%" y="1669" width="0.0429%" height="15" fill="rgb(207,168,32)" fg:x="60082" fg:w="33"/><text x="78.2664%" y="1679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.04%)</title><rect x="78.0164%" y="1653" width="0.0429%" height="15" fill="rgb(215,113,21)" fg:x="60082" fg:w="33"/><text x="78.2664%" y="1663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.02%)</title><rect x="78.0372%" y="1637" width="0.0221%" height="15" fill="rgb(217,144,43)" fg:x="60098" fg:w="17"/><text x="78.2872%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (18 samples, 0.02%)</title><rect x="78.0593%" y="1685" width="0.0234%" height="15" fill="rgb(249,48,50)" fg:x="60115" fg:w="18"/><text x="78.3093%" y="1695.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (11 samples, 0.01%)</title><rect x="78.0826%" y="1605" width="0.0143%" height="15" fill="rgb(242,1,26)" fg:x="60133" fg:w="11"/><text x="78.3326%" y="1615.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.01%)</title><rect x="78.0826%" y="1589" width="0.0143%" height="15" fill="rgb(231,167,42)" fg:x="60133" fg:w="11"/><text x="78.3326%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="78.0826%" y="1573" width="0.0143%" height="15" fill="rgb(242,177,45)" fg:x="60133" fg:w="11"/><text x="78.3326%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="78.0826%" y="1557" width="0.0143%" height="15" fill="rgb(232,121,42)" fg:x="60133" fg:w="11"/><text x="78.3326%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="78.0852%" y="1541" width="0.0117%" height="15" fill="rgb(205,8,42)" fg:x="60135" fg:w="9"/><text x="78.3352%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="78.1190%" y="1525" width="0.0130%" height="15" fill="rgb(238,199,24)" fg:x="60161" fg:w="10"/><text x="78.3690%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.02%)</title><rect x="78.1112%" y="1541" width="0.0234%" height="15" fill="rgb(228,112,2)" fg:x="60155" fg:w="18"/><text x="78.3612%" y="1551.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (42 samples, 0.05%)</title><rect x="78.0826%" y="1653" width="0.0545%" height="15" fill="rgb(215,115,33)" fg:x="60133" fg:w="42"/><text x="78.3326%" y="1663.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (42 samples, 0.05%)</title><rect x="78.0826%" y="1637" width="0.0545%" height="15" fill="rgb(230,209,34)" fg:x="60133" fg:w="42"/><text x="78.3326%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (42 samples, 0.05%)</title><rect x="78.0826%" y="1621" width="0.0545%" height="15" fill="rgb(246,76,12)" fg:x="60133" fg:w="42"/><text x="78.3326%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (31 samples, 0.04%)</title><rect x="78.0969%" y="1605" width="0.0403%" height="15" fill="rgb(240,110,9)" fg:x="60144" fg:w="31"/><text x="78.3469%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.04%)</title><rect x="78.0969%" y="1589" width="0.0403%" height="15" fill="rgb(224,94,46)" fg:x="60144" fg:w="31"/><text x="78.3469%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.04%)</title><rect x="78.0969%" y="1573" width="0.0403%" height="15" fill="rgb(247,150,22)" fg:x="60144" fg:w="31"/><text x="78.3469%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="78.0982%" y="1557" width="0.0390%" height="15" fill="rgb(249,85,13)" fg:x="60145" fg:w="30"/><text x="78.3482%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="78.1398%" y="1557" width="0.0208%" height="15" fill="rgb(208,77,41)" fg:x="60177" fg:w="16"/><text x="78.3898%" y="1567.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.01%)</title><rect x="78.1463%" y="1541" width="0.0143%" height="15" fill="rgb(240,42,44)" fg:x="60182" fg:w="11"/><text x="78.3963%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (123 samples, 0.16%)</title><rect x="78.0125%" y="1717" width="0.1597%" height="15" fill="rgb(222,10,51)" fg:x="60079" fg:w="123"/><text x="78.2625%" y="1727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (123 samples, 0.16%)</title><rect x="78.0125%" y="1701" width="0.1597%" height="15" fill="rgb(208,146,53)" fg:x="60079" fg:w="123"/><text x="78.2625%" y="1711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (69 samples, 0.09%)</title><rect x="78.0826%" y="1685" width="0.0896%" height="15" fill="rgb(236,162,23)" fg:x="60133" fg:w="69"/><text x="78.3326%" y="1695.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (69 samples, 0.09%)</title><rect x="78.0826%" y="1669" width="0.0896%" height="15" fill="rgb(218,66,21)" fg:x="60133" fg:w="69"/><text x="78.3326%" y="1679.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (27 samples, 0.04%)</title><rect x="78.1372%" y="1653" width="0.0351%" height="15" fill="rgb(233,6,47)" fg:x="60175" fg:w="27"/><text x="78.3872%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (27 samples, 0.04%)</title><rect x="78.1372%" y="1637" width="0.0351%" height="15" fill="rgb(236,59,51)" fg:x="60175" fg:w="27"/><text x="78.3872%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (27 samples, 0.04%)</title><rect x="78.1372%" y="1621" width="0.0351%" height="15" fill="rgb(242,12,46)" fg:x="60175" fg:w="27"/><text x="78.3872%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (27 samples, 0.04%)</title><rect x="78.1372%" y="1605" width="0.0351%" height="15" fill="rgb(243,142,19)" fg:x="60175" fg:w="27"/><text x="78.3872%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (27 samples, 0.04%)</title><rect x="78.1372%" y="1589" width="0.0351%" height="15" fill="rgb(217,28,17)" fg:x="60175" fg:w="27"/><text x="78.3872%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (27 samples, 0.04%)</title><rect x="78.1372%" y="1573" width="0.0351%" height="15" fill="rgb(228,2,27)" fg:x="60175" fg:w="27"/><text x="78.3872%" y="1583.50"></text></g><g><title>core::hash::Hasher::write_u8 (9 samples, 0.01%)</title><rect x="78.1605%" y="1557" width="0.0117%" height="15" fill="rgb(214,221,4)" fg:x="60193" fg:w="9"/><text x="78.4105%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="78.1618%" y="1541" width="0.0104%" height="15" fill="rgb(224,69,26)" fg:x="60194" fg:w="8"/><text x="78.4118%" y="1551.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="78.1774%" y="1669" width="0.0130%" height="15" fill="rgb(219,70,4)" fg:x="60206" fg:w="10"/><text x="78.4274%" y="1679.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (10 samples, 0.01%)</title><rect x="78.1774%" y="1653" width="0.0130%" height="15" fill="rgb(218,157,39)" fg:x="60206" fg:w="10"/><text x="78.4274%" y="1663.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="78.1969%" y="1621" width="0.0221%" height="15" fill="rgb(238,36,28)" fg:x="60221" fg:w="17"/><text x="78.4469%" y="1631.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (17 samples, 0.02%)</title><rect x="78.1969%" y="1605" width="0.0221%" height="15" fill="rgb(232,29,0)" fg:x="60221" fg:w="17"/><text x="78.4469%" y="1615.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (17 samples, 0.02%)</title><rect x="78.1969%" y="1589" width="0.0221%" height="15" fill="rgb(243,138,46)" fg:x="60221" fg:w="17"/><text x="78.4469%" y="1599.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (41 samples, 0.05%)</title><rect x="78.1956%" y="1653" width="0.0532%" height="15" fill="rgb(232,186,41)" fg:x="60220" fg:w="41"/><text x="78.4456%" y="1663.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (41 samples, 0.05%)</title><rect x="78.1956%" y="1637" width="0.0532%" height="15" fill="rgb(252,166,17)" fg:x="60220" fg:w="41"/><text x="78.4456%" y="1647.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (23 samples, 0.03%)</title><rect x="78.2190%" y="1621" width="0.0299%" height="15" fill="rgb(228,179,12)" fg:x="60238" fg:w="23"/><text x="78.4690%" y="1631.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (23 samples, 0.03%)</title><rect x="78.2190%" y="1605" width="0.0299%" height="15" fill="rgb(254,205,53)" fg:x="60238" fg:w="23"/><text x="78.4690%" y="1615.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (23 samples, 0.03%)</title><rect x="78.2190%" y="1589" width="0.0299%" height="15" fill="rgb(224,163,47)" fg:x="60238" fg:w="23"/><text x="78.4690%" y="1599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.03%)</title><rect x="78.2190%" y="1573" width="0.0299%" height="15" fill="rgb(208,43,47)" fg:x="60238" fg:w="23"/><text x="78.4690%" y="1583.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (23 samples, 0.03%)</title><rect x="78.2190%" y="1557" width="0.0299%" height="15" fill="rgb(224,198,38)" fg:x="60238" fg:w="23"/><text x="78.4690%" y="1567.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (23 samples, 0.03%)</title><rect x="78.2190%" y="1541" width="0.0299%" height="15" fill="rgb(234,12,40)" fg:x="60238" fg:w="23"/><text x="78.4690%" y="1551.50"></text></g><g><title>[libc.so.6] (23 samples, 0.03%)</title><rect x="78.2190%" y="1525" width="0.0299%" height="15" fill="rgb(237,212,39)" fg:x="60238" fg:w="23"/><text x="78.4690%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (48 samples, 0.06%)</title><rect x="78.1904%" y="1669" width="0.0623%" height="15" fill="rgb(253,2,33)" fg:x="60216" fg:w="48"/><text x="78.4404%" y="1679.50"></text></g><g><title>hashbrown::raw::h2 (8 samples, 0.01%)</title><rect x="78.2527%" y="1669" width="0.0104%" height="15" fill="rgb(251,29,16)" fg:x="60264" fg:w="8"/><text x="78.5027%" y="1679.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (14 samples, 0.02%)</title><rect x="78.2631%" y="1669" width="0.0182%" height="15" fill="rgb(214,38,29)" fg:x="60272" fg:w="14"/><text x="78.5131%" y="1679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (14 samples, 0.02%)</title><rect x="78.2631%" y="1653" width="0.0182%" height="15" fill="rgb(226,226,29)" fg:x="60272" fg:w="14"/><text x="78.5131%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%)</title><rect x="78.2631%" y="1637" width="0.0182%" height="15" fill="rgb(236,79,42)" fg:x="60272" fg:w="14"/><text x="78.5131%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (229 samples, 0.30%)</title><rect x="77.9852%" y="1813" width="0.2974%" height="15" fill="rgb(222,12,36)" fg:x="60058" fg:w="229"/><text x="78.2352%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (229 samples, 0.30%)</title><rect x="77.9852%" y="1797" width="0.2974%" height="15" fill="rgb(232,123,44)" fg:x="60058" fg:w="229"/><text x="78.2352%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (211 samples, 0.27%)</title><rect x="78.0086%" y="1781" width="0.2740%" height="15" fill="rgb(234,93,50)" fg:x="60076" fg:w="211"/><text x="78.2586%" y="1791.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (209 samples, 0.27%)</title><rect x="78.0112%" y="1765" width="0.2714%" height="15" fill="rgb(210,86,49)" fg:x="60078" fg:w="209"/><text x="78.2612%" y="1775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (209 samples, 0.27%)</title><rect x="78.0112%" y="1749" width="0.2714%" height="15" fill="rgb(224,91,54)" fg:x="60078" fg:w="209"/><text x="78.2612%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (209 samples, 0.27%)</title><rect x="78.0112%" y="1733" width="0.2714%" height="15" fill="rgb(239,169,9)" fg:x="60078" fg:w="209"/><text x="78.2612%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (85 samples, 0.11%)</title><rect x="78.1722%" y="1717" width="0.1104%" height="15" fill="rgb(238,29,17)" fg:x="60202" fg:w="85"/><text x="78.4222%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (85 samples, 0.11%)</title><rect x="78.1722%" y="1701" width="0.1104%" height="15" fill="rgb(227,160,22)" fg:x="60202" fg:w="85"/><text x="78.4222%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (85 samples, 0.11%)</title><rect x="78.1722%" y="1685" width="0.1104%" height="15" fill="rgb(231,129,52)" fg:x="60202" fg:w="85"/><text x="78.4222%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="78.3255%" y="1749" width="0.0195%" height="15" fill="rgb(241,184,9)" fg:x="60320" fg:w="15"/><text x="78.5755%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.02%)</title><rect x="78.4008%" y="1717" width="0.0208%" height="15" fill="rgb(217,43,48)" fg:x="60378" fg:w="16"/><text x="78.6508%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="78.4008%" y="1701" width="0.0208%" height="15" fill="rgb(213,49,1)" fg:x="60378" fg:w="16"/><text x="78.6508%" y="1711.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="78.4021%" y="1685" width="0.0195%" height="15" fill="rgb(223,79,39)" fg:x="60379" fg:w="15"/><text x="78.6521%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.04%)</title><rect x="78.3956%" y="1733" width="0.0416%" height="15" fill="rgb(228,227,46)" fg:x="60374" fg:w="32"/><text x="78.6456%" y="1743.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="78.4228%" y="1717" width="0.0143%" height="15" fill="rgb(245,89,41)" fg:x="60395" fg:w="11"/><text x="78.6728%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (120 samples, 0.16%)</title><rect x="78.3449%" y="1749" width="0.1558%" height="15" fill="rgb(253,83,21)" fg:x="60335" fg:w="120"/><text x="78.5949%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (48 samples, 0.06%)</title><rect x="78.4384%" y="1733" width="0.0623%" height="15" fill="rgb(229,116,51)" fg:x="60407" fg:w="48"/><text x="78.6884%" y="1743.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (14 samples, 0.02%)</title><rect x="78.4826%" y="1717" width="0.0182%" height="15" fill="rgb(246,67,26)" fg:x="60441" fg:w="14"/><text x="78.7326%" y="1727.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (13 samples, 0.02%)</title><rect x="78.4839%" y="1701" width="0.0169%" height="15" fill="rgb(250,117,20)" fg:x="60442" fg:w="13"/><text x="78.7339%" y="1711.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (13 samples, 0.02%)</title><rect x="78.4839%" y="1685" width="0.0169%" height="15" fill="rgb(207,88,17)" fg:x="60442" fg:w="13"/><text x="78.7339%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (174 samples, 0.23%)</title><rect x="78.2839%" y="1813" width="0.2259%" height="15" fill="rgb(212,98,36)" fg:x="60288" fg:w="174"/><text x="78.5339%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (174 samples, 0.23%)</title><rect x="78.2839%" y="1797" width="0.2259%" height="15" fill="rgb(221,72,6)" fg:x="60288" fg:w="174"/><text x="78.5339%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (171 samples, 0.22%)</title><rect x="78.2878%" y="1781" width="0.2220%" height="15" fill="rgb(235,129,19)" fg:x="60291" fg:w="171"/><text x="78.5378%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (169 samples, 0.22%)</title><rect x="78.2904%" y="1765" width="0.2194%" height="15" fill="rgb(237,200,6)" fg:x="60293" fg:w="169"/><text x="78.5404%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (28 samples, 0.04%)</title><rect x="78.5098%" y="1813" width="0.0364%" height="15" fill="rgb(239,69,54)" fg:x="60462" fg:w="28"/><text x="78.7598%" y="1823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (21 samples, 0.03%)</title><rect x="78.5189%" y="1797" width="0.0273%" height="15" fill="rgb(214,68,45)" fg:x="60469" fg:w="21"/><text x="78.7689%" y="1807.50"></text></g><g><title>core::cmp::PartialEq::ne (21 samples, 0.03%)</title><rect x="78.5189%" y="1781" width="0.0273%" height="15" fill="rgb(254,160,8)" fg:x="60469" fg:w="21"/><text x="78.7689%" y="1791.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (21 samples, 0.03%)</title><rect x="78.5189%" y="1765" width="0.0273%" height="15" fill="rgb(215,226,31)" fg:x="60469" fg:w="21"/><text x="78.7689%" y="1775.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (10 samples, 0.01%)</title><rect x="78.5332%" y="1749" width="0.0130%" height="15" fill="rgb(253,6,35)" fg:x="60480" fg:w="10"/><text x="78.7832%" y="1759.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.01%)</title><rect x="78.5332%" y="1733" width="0.0130%" height="15" fill="rgb(219,96,42)" fg:x="60480" fg:w="10"/><text x="78.7832%" y="1743.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.01%)</title><rect x="78.5332%" y="1717" width="0.0130%" height="15" fill="rgb(207,170,13)" fg:x="60480" fg:w="10"/><text x="78.7832%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.01%)</title><rect x="78.5332%" y="1701" width="0.0130%" height="15" fill="rgb(239,101,5)" fg:x="60480" fg:w="10"/><text x="78.7832%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.01%)</title><rect x="78.5332%" y="1685" width="0.0130%" height="15" fill="rgb(228,183,34)" fg:x="60480" fg:w="10"/><text x="78.7832%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (8 samples, 0.01%)</title><rect x="78.5358%" y="1669" width="0.0104%" height="15" fill="rgb(205,28,31)" fg:x="60482" fg:w="8"/><text x="78.7858%" y="1679.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (8 samples, 0.01%)</title><rect x="78.5358%" y="1653" width="0.0104%" height="15" fill="rgb(214,118,50)" fg:x="60482" fg:w="8"/><text x="78.7858%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.01%)</title><rect x="78.5358%" y="1637" width="0.0104%" height="15" fill="rgb(213,108,51)" fg:x="60482" fg:w="8"/><text x="78.7858%" y="1647.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (31 samples, 0.04%)</title><rect x="78.5540%" y="1797" width="0.0403%" height="15" fill="rgb(238,56,37)" fg:x="60496" fg:w="31"/><text x="78.8040%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (29 samples, 0.04%)</title><rect x="78.5566%" y="1781" width="0.0377%" height="15" fill="rgb(214,136,28)" fg:x="60498" fg:w="29"/><text x="78.8066%" y="1791.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.03%)</title><rect x="78.5605%" y="1765" width="0.0338%" height="15" fill="rgb(221,201,54)" fg:x="60501" fg:w="26"/><text x="78.8105%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="78.5605%" y="1749" width="0.0338%" height="15" fill="rgb(228,216,39)" fg:x="60501" fg:w="26"/><text x="78.8105%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="78.5605%" y="1733" width="0.0338%" height="15" fill="rgb(207,229,49)" fg:x="60501" fg:w="26"/><text x="78.8105%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="78.5605%" y="1717" width="0.0338%" height="15" fill="rgb(224,23,43)" fg:x="60501" fg:w="26"/><text x="78.8105%" y="1727.50"></text></g><g><title>malloc (21 samples, 0.03%)</title><rect x="78.5670%" y="1701" width="0.0273%" height="15" fill="rgb(247,97,18)" fg:x="60506" fg:w="21"/><text x="78.8170%" y="1711.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="78.5774%" y="1685" width="0.0169%" height="15" fill="rgb(232,53,32)" fg:x="60514" fg:w="13"/><text x="78.8274%" y="1695.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (57 samples, 0.07%)</title><rect x="78.5462%" y="1813" width="0.0740%" height="15" fill="rgb(247,38,23)" fg:x="60490" fg:w="57"/><text x="78.7962%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="78.5942%" y="1797" width="0.0260%" height="15" fill="rgb(228,101,52)" fg:x="60527" fg:w="20"/><text x="78.8442%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="78.5942%" y="1781" width="0.0260%" height="15" fill="rgb(231,45,36)" fg:x="60527" fg:w="20"/><text x="78.8442%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="78.5942%" y="1765" width="0.0260%" height="15" fill="rgb(221,183,50)" fg:x="60527" fg:w="20"/><text x="78.8442%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="78.5942%" y="1749" width="0.0260%" height="15" fill="rgb(251,132,12)" fg:x="60527" fg:w="20"/><text x="78.8442%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 0.02%)</title><rect x="78.5981%" y="1733" width="0.0221%" height="15" fill="rgb(252,50,16)" fg:x="60530" fg:w="17"/><text x="78.8481%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="78.5981%" y="1717" width="0.0221%" height="15" fill="rgb(224,60,15)" fg:x="60530" fg:w="17"/><text x="78.8481%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="78.5981%" y="1701" width="0.0221%" height="15" fill="rgb(254,2,34)" fg:x="60530" fg:w="17"/><text x="78.8481%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="78.5981%" y="1685" width="0.0221%" height="15" fill="rgb(232,154,8)" fg:x="60530" fg:w="17"/><text x="78.8481%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="78.5994%" y="1669" width="0.0208%" height="15" fill="rgb(235,190,52)" fg:x="60531" fg:w="16"/><text x="78.8494%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="78.5994%" y="1653" width="0.0208%" height="15" fill="rgb(213,218,38)" fg:x="60531" fg:w="16"/><text x="78.8494%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="78.5994%" y="1637" width="0.0208%" height="15" fill="rgb(237,50,37)" fg:x="60531" fg:w="16"/><text x="78.8494%" y="1647.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="78.6072%" y="1621" width="0.0130%" height="15" fill="rgb(235,51,35)" fg:x="60537" fg:w="10"/><text x="78.8572%" y="1631.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (1,084 samples, 1.41%)</title><rect x="77.2789%" y="1829" width="1.4076%" height="15" fill="rgb(244,40,52)" fg:x="59514" fg:w="1084"/><text x="77.5289%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (51 samples, 0.07%)</title><rect x="78.6202%" y="1813" width="0.0662%" height="15" fill="rgb(217,225,45)" fg:x="60547" fg:w="51"/><text x="78.8702%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (14 samples, 0.02%)</title><rect x="78.6683%" y="1797" width="0.0182%" height="15" fill="rgb(247,191,36)" fg:x="60584" fg:w="14"/><text x="78.9183%" y="1807.50"></text></g><g><title>core::mem::replace (10 samples, 0.01%)</title><rect x="78.6735%" y="1781" width="0.0130%" height="15" fill="rgb(251,144,31)" fg:x="60588" fg:w="10"/><text x="78.9235%" y="1791.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="78.7215%" y="1621" width="0.0195%" height="15" fill="rgb(227,155,41)" fg:x="60625" fg:w="15"/><text x="78.9715%" y="1631.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (38 samples, 0.05%)</title><rect x="78.6994%" y="1701" width="0.0493%" height="15" fill="rgb(236,121,36)" fg:x="60608" fg:w="38"/><text x="78.9494%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.04%)</title><rect x="78.7124%" y="1685" width="0.0364%" height="15" fill="rgb(221,128,28)" fg:x="60618" fg:w="28"/><text x="78.9624%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.03%)</title><rect x="78.7215%" y="1669" width="0.0273%" height="15" fill="rgb(249,67,50)" fg:x="60625" fg:w="21"/><text x="78.9715%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.03%)</title><rect x="78.7215%" y="1653" width="0.0273%" height="15" fill="rgb(241,126,38)" fg:x="60625" fg:w="21"/><text x="78.9715%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.03%)</title><rect x="78.7215%" y="1637" width="0.0273%" height="15" fill="rgb(239,33,14)" fg:x="60625" fg:w="21"/><text x="78.9715%" y="1647.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (43 samples, 0.06%)</title><rect x="78.6994%" y="1717" width="0.0558%" height="15" fill="rgb(207,221,54)" fg:x="60608" fg:w="43"/><text x="78.9494%" y="1727.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (58 samples, 0.08%)</title><rect x="78.6942%" y="1749" width="0.0753%" height="15" fill="rgb(242,138,43)" fg:x="60604" fg:w="58"/><text x="78.9442%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="78.6994%" y="1733" width="0.0701%" height="15" fill="rgb(231,118,19)" fg:x="60608" fg:w="54"/><text x="78.9494%" y="1743.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="78.7553%" y="1717" width="0.0143%" height="15" fill="rgb(214,128,54)" fg:x="60651" fg:w="11"/><text x="79.0053%" y="1727.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="78.7566%" y="1701" width="0.0130%" height="15" fill="rgb(236,136,6)" fg:x="60652" fg:w="10"/><text x="79.0066%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="78.7566%" y="1685" width="0.0130%" height="15" fill="rgb(247,30,38)" fg:x="60652" fg:w="10"/><text x="79.0066%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="78.7566%" y="1669" width="0.0130%" height="15" fill="rgb(249,189,40)" fg:x="60652" fg:w="10"/><text x="79.0066%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="78.7566%" y="1653" width="0.0130%" height="15" fill="rgb(247,179,7)" fg:x="60652" fg:w="10"/><text x="79.0066%" y="1663.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (82 samples, 0.11%)</title><rect x="78.6864%" y="1829" width="0.1065%" height="15" fill="rgb(239,46,52)" fg:x="60598" fg:w="82"/><text x="78.9364%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (76 samples, 0.10%)</title><rect x="78.6942%" y="1813" width="0.0987%" height="15" fill="rgb(225,28,52)" fg:x="60604" fg:w="76"/><text x="78.9442%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76 samples, 0.10%)</title><rect x="78.6942%" y="1797" width="0.0987%" height="15" fill="rgb(217,208,44)" fg:x="60604" fg:w="76"/><text x="78.9442%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (76 samples, 0.10%)</title><rect x="78.6942%" y="1781" width="0.0987%" height="15" fill="rgb(224,11,34)" fg:x="60604" fg:w="76"/><text x="78.9442%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (76 samples, 0.10%)</title><rect x="78.6942%" y="1765" width="0.0987%" height="15" fill="rgb(205,134,17)" fg:x="60604" fg:w="76"/><text x="78.9442%" y="1775.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.02%)</title><rect x="78.7760%" y="1749" width="0.0169%" height="15" fill="rgb(237,125,9)" fg:x="60667" fg:w="13"/><text x="79.0260%" y="1759.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (17 samples, 0.02%)</title><rect x="78.7929%" y="1829" width="0.0221%" height="15" fill="rgb(208,139,47)" fg:x="60680" fg:w="17"/><text x="79.0429%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::module_id (11 samples, 0.01%)</title><rect x="78.8358%" y="1829" width="0.0143%" height="15" fill="rgb(242,5,5)" fg:x="60713" fg:w="11"/><text x="79.0858%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Function::name (20 samples, 0.03%)</title><rect x="78.8500%" y="1829" width="0.0260%" height="15" fill="rgb(218,78,2)" fg:x="60724" fg:w="20"/><text x="79.1000%" y="1839.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="78.8617%" y="1813" width="0.0143%" height="15" fill="rgb(217,75,16)" fg:x="60733" fg:w="11"/><text x="79.1117%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (12 samples, 0.02%)</title><rect x="78.8773%" y="1813" width="0.0156%" height="15" fill="rgb(212,56,17)" fg:x="60745" fg:w="12"/><text x="79.1273%" y="1823.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="78.8773%" y="1797" width="0.0156%" height="15" fill="rgb(228,61,29)" fg:x="60745" fg:w="12"/><text x="79.1273%" y="1807.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (12 samples, 0.02%)</title><rect x="78.8773%" y="1781" width="0.0156%" height="15" fill="rgb(247,202,38)" fg:x="60745" fg:w="12"/><text x="79.1273%" y="1791.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (11 samples, 0.01%)</title><rect x="78.8929%" y="1813" width="0.0143%" height="15" fill="rgb(211,216,43)" fg:x="60757" fg:w="11"/><text x="79.1429%" y="1823.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (11 samples, 0.01%)</title><rect x="78.8929%" y="1797" width="0.0143%" height="15" fill="rgb(220,7,49)" fg:x="60757" fg:w="11"/><text x="79.1429%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 0.08%)</title><rect x="78.9072%" y="1797" width="0.0818%" height="15" fill="rgb(219,158,7)" fg:x="60768" fg:w="63"/><text x="79.1572%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.03%)</title><rect x="78.9617%" y="1781" width="0.0273%" height="15" fill="rgb(206,127,9)" fg:x="60810" fg:w="21"/><text x="79.2117%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.03%)</title><rect x="78.9617%" y="1765" width="0.0273%" height="15" fill="rgb(206,103,43)" fg:x="60810" fg:w="21"/><text x="79.2117%" y="1775.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (89 samples, 0.12%)</title><rect x="78.8760%" y="1829" width="0.1156%" height="15" fill="rgb(240,108,41)" fg:x="60744" fg:w="89"/><text x="79.1260%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (65 samples, 0.08%)</title><rect x="78.9072%" y="1813" width="0.0844%" height="15" fill="rgb(252,212,6)" fg:x="60768" fg:w="65"/><text x="79.1572%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_instantiation (23 samples, 0.03%)</title><rect x="78.9916%" y="1829" width="0.0299%" height="15" fill="rgb(248,105,31)" fg:x="60833" fg:w="23"/><text x="79.2416%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="79.0955%" y="1813" width="0.0117%" height="15" fill="rgb(241,123,4)" fg:x="60913" fg:w="9"/><text x="79.3455%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="79.1072%" y="1813" width="0.0156%" height="15" fill="rgb(223,74,37)" fg:x="60922" fg:w="12"/><text x="79.3572%" y="1823.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.05%)</title><rect x="79.1227%" y="1813" width="0.0454%" height="15" fill="rgb(251,219,28)" fg:x="60934" fg:w="35"/><text x="79.3727%" y="1823.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.04%)</title><rect x="79.1825%" y="1765" width="0.0377%" height="15" fill="rgb(218,36,31)" fg:x="60980" fg:w="29"/><text x="79.4325%" y="1775.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="79.2097%" y="1749" width="0.0104%" height="15" fill="rgb(229,40,15)" fg:x="61001" fg:w="8"/><text x="79.4597%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.05%)</title><rect x="79.1760%" y="1797" width="0.0493%" height="15" fill="rgb(208,138,37)" fg:x="60975" fg:w="38"/><text x="79.4260%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.05%)</title><rect x="79.1786%" y="1781" width="0.0467%" height="15" fill="rgb(208,40,52)" fg:x="60977" fg:w="36"/><text x="79.4286%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (93 samples, 0.12%)</title><rect x="79.1682%" y="1813" width="0.1208%" height="15" fill="rgb(246,181,48)" fg:x="60969" fg:w="93"/><text x="79.4182%" y="1823.50"></text></g><g><title>core::ptr::write (45 samples, 0.06%)</title><rect x="79.2305%" y="1797" width="0.0584%" height="15" fill="rgb(253,178,36)" fg:x="61017" fg:w="45"/><text x="79.4805%" y="1807.50"></text></g><g><title>__rdl_alloc (12 samples, 0.02%)</title><rect x="79.3746%" y="1733" width="0.0156%" height="15" fill="rgb(210,170,6)" fg:x="61128" fg:w="12"/><text x="79.6246%" y="1743.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.01%)</title><rect x="79.3772%" y="1717" width="0.0130%" height="15" fill="rgb(243,62,22)" fg:x="61130" fg:w="10"/><text x="79.6272%" y="1727.50"></text></g><g><title>alloc::alloc::exchange_malloc (53 samples, 0.07%)</title><rect x="79.3707%" y="1797" width="0.0688%" height="15" fill="rgb(213,145,26)" fg:x="61125" fg:w="53"/><text x="79.6207%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.07%)</title><rect x="79.3733%" y="1781" width="0.0662%" height="15" fill="rgb(237,177,23)" fg:x="61127" fg:w="51"/><text x="79.6233%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.07%)</title><rect x="79.3733%" y="1765" width="0.0662%" height="15" fill="rgb(252,5,24)" fg:x="61127" fg:w="51"/><text x="79.6233%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.07%)</title><rect x="79.3733%" y="1749" width="0.0662%" height="15" fill="rgb(230,108,54)" fg:x="61127" fg:w="51"/><text x="79.6233%" y="1759.50"></text></g><g><title>malloc (33 samples, 0.04%)</title><rect x="79.3967%" y="1733" width="0.0429%" height="15" fill="rgb(252,192,41)" fg:x="61145" fg:w="33"/><text x="79.6467%" y="1743.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.01%)</title><rect x="79.4461%" y="1717" width="0.0117%" height="15" fill="rgb(218,125,20)" fg:x="61183" fg:w="9"/><text x="79.6961%" y="1727.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.01%)</title><rect x="79.4461%" y="1701" width="0.0117%" height="15" fill="rgb(230,223,15)" fg:x="61183" fg:w="9"/><text x="79.6961%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (71 samples, 0.09%)</title><rect x="79.4448%" y="1749" width="0.0922%" height="15" fill="rgb(239,99,47)" fg:x="61182" fg:w="71"/><text x="79.6948%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (71 samples, 0.09%)</title><rect x="79.4448%" y="1733" width="0.0922%" height="15" fill="rgb(222,214,23)" fg:x="61182" fg:w="71"/><text x="79.6948%" y="1743.50"></text></g><g><title>cfree (60 samples, 0.08%)</title><rect x="79.4590%" y="1717" width="0.0779%" height="15" fill="rgb(250,98,43)" fg:x="61193" fg:w="60"/><text x="79.7090%" y="1727.50"></text></g><g><title>[libc.so.6] (36 samples, 0.05%)</title><rect x="79.4902%" y="1701" width="0.0467%" height="15" fill="rgb(226,140,11)" fg:x="61217" fg:w="36"/><text x="79.7402%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (191 samples, 0.25%)</title><rect x="79.2928%" y="1813" width="0.2480%" height="15" fill="rgb(239,2,22)" fg:x="61065" fg:w="191"/><text x="79.5428%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (74 samples, 0.10%)</title><rect x="79.4448%" y="1797" width="0.0961%" height="15" fill="rgb(209,106,26)" fg:x="61182" fg:w="74"/><text x="79.6948%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (74 samples, 0.10%)</title><rect x="79.4448%" y="1781" width="0.0961%" height="15" fill="rgb(209,135,11)" fg:x="61182" fg:w="74"/><text x="79.6948%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.10%)</title><rect x="79.4448%" y="1765" width="0.0961%" height="15" fill="rgb(241,58,6)" fg:x="61182" fg:w="74"/><text x="79.6948%" y="1775.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (8 samples, 0.01%)</title><rect x="79.6019%" y="1765" width="0.0104%" height="15" fill="rgb(214,78,1)" fg:x="61303" fg:w="8"/><text x="79.8519%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="79.6006%" y="1781" width="0.0182%" height="15" fill="rgb(229,135,33)" fg:x="61302" fg:w="14"/><text x="79.8506%" y="1791.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.03%)</title><rect x="79.6577%" y="1765" width="0.0338%" height="15" fill="rgb(245,87,50)" fg:x="61346" fg:w="26"/><text x="79.9077%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="79.6577%" y="1749" width="0.0338%" height="15" fill="rgb(222,222,8)" fg:x="61346" fg:w="26"/><text x="79.9077%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="79.6577%" y="1733" width="0.0338%" height="15" fill="rgb(214,97,50)" fg:x="61346" fg:w="26"/><text x="79.9077%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="79.6577%" y="1717" width="0.0338%" height="15" fill="rgb(244,161,51)" fg:x="61346" fg:w="26"/><text x="79.9077%" y="1727.50"></text></g><g><title>malloc (19 samples, 0.02%)</title><rect x="79.6668%" y="1701" width="0.0247%" height="15" fill="rgb(225,17,4)" fg:x="61353" fg:w="19"/><text x="79.9168%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.04%)</title><rect x="79.6967%" y="1717" width="0.0441%" height="15" fill="rgb(238,10,13)" fg:x="61376" fg:w="34"/><text x="79.9467%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.04%)</title><rect x="79.6967%" y="1701" width="0.0441%" height="15" fill="rgb(239,169,14)" fg:x="61376" fg:w="34"/><text x="79.9467%" y="1711.50"></text></g><g><title>cfree (30 samples, 0.04%)</title><rect x="79.7019%" y="1685" width="0.0390%" height="15" fill="rgb(213,105,25)" fg:x="61380" fg:w="30"/><text x="79.9519%" y="1695.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="79.7136%" y="1669" width="0.0273%" height="15" fill="rgb(233,4,17)" fg:x="61389" fg:w="21"/><text x="79.9636%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (92 samples, 0.12%)</title><rect x="79.6227%" y="1781" width="0.1195%" height="15" fill="rgb(212,5,35)" fg:x="61319" fg:w="92"/><text x="79.8727%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (35 samples, 0.05%)</title><rect x="79.6967%" y="1765" width="0.0454%" height="15" fill="rgb(216,3,14)" fg:x="61376" fg:w="35"/><text x="79.9467%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (35 samples, 0.05%)</title><rect x="79.6967%" y="1749" width="0.0454%" height="15" fill="rgb(240,105,33)" fg:x="61376" fg:w="35"/><text x="79.9467%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.05%)</title><rect x="79.6967%" y="1733" width="0.0454%" height="15" fill="rgb(216,73,0)" fg:x="61376" fg:w="35"/><text x="79.9467%" y="1743.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.03%)</title><rect x="79.8382%" y="1701" width="0.0286%" height="15" fill="rgb(217,153,48)" fg:x="61485" fg:w="22"/><text x="80.0882%" y="1711.50"></text></g><g><title>malloc (15 samples, 0.02%)</title><rect x="79.8473%" y="1685" width="0.0195%" height="15" fill="rgb(218,180,8)" fg:x="61492" fg:w="15"/><text x="80.0973%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.04%)</title><rect x="79.8330%" y="1733" width="0.0364%" height="15" fill="rgb(252,168,2)" fg:x="61481" fg:w="28"/><text x="80.0830%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.03%)</title><rect x="79.8356%" y="1717" width="0.0338%" height="15" fill="rgb(224,116,33)" fg:x="61483" fg:w="26"/><text x="80.0856%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.04%)</title><rect x="79.8330%" y="1749" width="0.0403%" height="15" fill="rgb(229,205,17)" fg:x="61481" fg:w="31"/><text x="80.0830%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (22 samples, 0.03%)</title><rect x="79.8746%" y="1749" width="0.0286%" height="15" fill="rgb(234,1,41)" fg:x="61513" fg:w="22"/><text x="80.1246%" y="1759.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (688 samples, 0.89%)</title><rect x="79.0215%" y="1829" width="0.8934%" height="15" fill="rgb(244,185,8)" fg:x="60856" fg:w="688"/><text x="79.2715%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Resolver::subst (283 samples, 0.37%)</title><rect x="79.5473%" y="1813" width="0.3675%" height="15" fill="rgb(248,51,21)" fg:x="61261" fg:w="283"/><text x="79.7973%" y="1823.50"></text></g><g><title>move_vm_runtime::loader::Loader::subst (283 samples, 0.37%)</title><rect x="79.5473%" y="1797" width="0.3675%" height="15" fill="rgb(248,157,31)" fg:x="61261" fg:w="283"/><text x="79.7973%" y="1807.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (133 samples, 0.17%)</title><rect x="79.7421%" y="1781" width="0.1727%" height="15" fill="rgb(210,34,47)" fg:x="61411" fg:w="133"/><text x="79.9921%" y="1791.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (127 samples, 0.16%)</title><rect x="79.7499%" y="1765" width="0.1649%" height="15" fill="rgb(227,139,53)" fg:x="61417" fg:w="127"/><text x="79.9999%" y="1775.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (9 samples, 0.01%)</title><rect x="79.9031%" y="1749" width="0.0117%" height="15" fill="rgb(232,211,37)" fg:x="61535" fg:w="9"/><text x="80.1531%" y="1759.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (8 samples, 0.01%)</title><rect x="79.9044%" y="1733" width="0.0104%" height="15" fill="rgb(236,133,10)" fg:x="61536" fg:w="8"/><text x="80.1544%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.02%)</title><rect x="79.9603%" y="1813" width="0.0156%" height="15" fill="rgb(243,202,25)" fg:x="61579" fg:w="12"/><text x="80.2103%" y="1823.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (59 samples, 0.08%)</title><rect x="79.9148%" y="1829" width="0.0766%" height="15" fill="rgb(224,59,9)" fg:x="61544" fg:w="59"/><text x="80.1648%" y="1839.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (13 samples, 0.02%)</title><rect x="79.9914%" y="1829" width="0.0169%" height="15" fill="rgb(206,146,16)" fg:x="61603" fg:w="13"/><text x="80.2414%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="79.9979%" y="1813" width="0.0104%" height="15" fill="rgb(220,47,2)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="79.9979%" y="1797" width="0.0104%" height="15" fill="rgb(225,124,51)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="79.9979%" y="1781" width="0.0104%" height="15" fill="rgb(241,220,50)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="79.9979%" y="1765" width="0.0104%" height="15" fill="rgb(232,168,5)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="79.9979%" y="1749" width="0.0104%" height="15" fill="rgb(243,90,22)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="79.9979%" y="1733" width="0.0104%" height="15" fill="rgb(223,153,32)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="79.9979%" y="1717" width="0.0104%" height="15" fill="rgb(243,124,20)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="79.9979%" y="1701" width="0.0104%" height="15" fill="rgb(246,168,39)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="79.9979%" y="1685" width="0.0104%" height="15" fill="rgb(222,165,54)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="79.9979%" y="1669" width="0.0104%" height="15" fill="rgb(251,142,27)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="79.9979%" y="1653" width="0.0104%" height="15" fill="rgb(207,168,50)" fg:x="61608" fg:w="8"/><text x="80.2479%" y="1663.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (11,568 samples, 15.02%)</title><rect x="65.0055%" y="1845" width="15.0210%" height="15" fill="rgb(250,139,25)" fg:x="50062" fg:w="11568"/><text x="65.2555%" y="1855.50">move_vm_runtime::interp..</text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (14 samples, 0.02%)</title><rect x="80.0083%" y="1829" width="0.0182%" height="15" fill="rgb(214,194,48)" fg:x="61616" fg:w="14"/><text x="80.2583%" y="1839.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (11,578 samples, 15.03%)</title><rect x="64.9977%" y="1861" width="15.0340%" height="15" fill="rgb(227,138,47)" fg:x="50056" fg:w="11578"/><text x="65.2477%" y="1871.50">move_vm_runtime::interp..</text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (24 samples, 0.03%)</title><rect x="80.1044%" y="1477" width="0.0312%" height="15" fill="rgb(250,162,5)" fg:x="61690" fg:w="24"/><text x="80.3544%" y="1487.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (17 samples, 0.02%)</title><rect x="80.1135%" y="1461" width="0.0221%" height="15" fill="rgb(229,74,25)" fg:x="61697" fg:w="17"/><text x="80.3635%" y="1471.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (17 samples, 0.02%)</title><rect x="80.1135%" y="1445" width="0.0221%" height="15" fill="rgb(221,124,34)" fg:x="61697" fg:w="17"/><text x="80.3635%" y="1455.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (16 samples, 0.02%)</title><rect x="80.1148%" y="1429" width="0.0208%" height="15" fill="rgb(225,94,25)" fg:x="61698" fg:w="16"/><text x="80.3648%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (15 samples, 0.02%)</title><rect x="80.1161%" y="1413" width="0.0195%" height="15" fill="rgb(210,100,12)" fg:x="61699" fg:w="15"/><text x="80.3661%" y="1423.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (15 samples, 0.02%)</title><rect x="80.1161%" y="1397" width="0.0195%" height="15" fill="rgb(206,62,48)" fg:x="61699" fg:w="15"/><text x="80.3661%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (15 samples, 0.02%)</title><rect x="80.1161%" y="1381" width="0.0195%" height="15" fill="rgb(222,181,9)" fg:x="61699" fg:w="15"/><text x="80.3661%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (9 samples, 0.01%)</title><rect x="80.1239%" y="1365" width="0.0117%" height="15" fill="rgb(248,42,38)" fg:x="61705" fg:w="9"/><text x="80.3739%" y="1375.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (9 samples, 0.01%)</title><rect x="80.1239%" y="1349" width="0.0117%" height="15" fill="rgb(213,40,6)" fg:x="61705" fg:w="9"/><text x="80.3739%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.01%)</title><rect x="80.1239%" y="1333" width="0.0117%" height="15" fill="rgb(211,108,15)" fg:x="61705" fg:w="9"/><text x="80.3739%" y="1343.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (9 samples, 0.01%)</title><rect x="80.1239%" y="1317" width="0.0117%" height="15" fill="rgb(249,62,9)" fg:x="61705" fg:w="9"/><text x="80.3739%" y="1327.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (9 samples, 0.01%)</title><rect x="80.1239%" y="1301" width="0.0117%" height="15" fill="rgb(233,26,54)" fg:x="61705" fg:w="9"/><text x="80.3739%" y="1311.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (8 samples, 0.01%)</title><rect x="80.1252%" y="1285" width="0.0104%" height="15" fill="rgb(210,175,26)" fg:x="61706" fg:w="8"/><text x="80.3752%" y="1295.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (39 samples, 0.05%)</title><rect x="80.0953%" y="1493" width="0.0506%" height="15" fill="rgb(210,43,33)" fg:x="61683" fg:w="39"/><text x="80.3453%" y="1503.50"></text></g><g><title>bcs::de::from_bytes_seed (55 samples, 0.07%)</title><rect x="80.0784%" y="1509" width="0.0714%" height="15" fill="rgb(224,46,17)" fg:x="61670" fg:w="55"/><text x="80.3284%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (76 samples, 0.10%)</title><rect x="80.0525%" y="1589" width="0.0987%" height="15" fill="rgb(254,24,38)" fg:x="61650" fg:w="76"/><text x="80.3025%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (76 samples, 0.10%)</title><rect x="80.0525%" y="1573" width="0.0987%" height="15" fill="rgb(248,32,0)" fg:x="61650" fg:w="76"/><text x="80.3025%" y="1583.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (76 samples, 0.10%)</title><rect x="80.0525%" y="1557" width="0.0987%" height="15" fill="rgb(224,37,41)" fg:x="61650" fg:w="76"/><text x="80.3025%" y="1567.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (75 samples, 0.10%)</title><rect x="80.0538%" y="1541" width="0.0974%" height="15" fill="rgb(252,70,22)" fg:x="61651" fg:w="75"/><text x="80.3038%" y="1551.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (57 samples, 0.07%)</title><rect x="80.0771%" y="1525" width="0.0740%" height="15" fill="rgb(241,123,50)" fg:x="61669" fg:w="57"/><text x="80.3271%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.11%)</title><rect x="80.0486%" y="1637" width="0.1130%" height="15" fill="rgb(246,138,33)" fg:x="61647" fg:w="87"/><text x="80.2986%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (84 samples, 0.11%)</title><rect x="80.0525%" y="1621" width="0.1091%" height="15" fill="rgb(218,39,32)" fg:x="61650" fg:w="84"/><text x="80.3025%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (84 samples, 0.11%)</title><rect x="80.0525%" y="1605" width="0.1091%" height="15" fill="rgb(241,229,10)" fg:x="61650" fg:w="84"/><text x="80.3025%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (93 samples, 0.12%)</title><rect x="80.0473%" y="1669" width="0.1208%" height="15" fill="rgb(212,160,10)" fg:x="61646" fg:w="93"/><text x="80.2973%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 0.12%)</title><rect x="80.0473%" y="1653" width="0.1208%" height="15" fill="rgb(227,48,51)" fg:x="61646" fg:w="93"/><text x="80.2973%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.13%)</title><rect x="80.0473%" y="1685" width="0.1298%" height="15" fill="rgb(238,159,21)" fg:x="61646" fg:w="100"/><text x="80.2973%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (109 samples, 0.14%)</title><rect x="80.0447%" y="1717" width="0.1415%" height="15" fill="rgb(216,1,10)" fg:x="61644" fg:w="109"/><text x="80.2947%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (108 samples, 0.14%)</title><rect x="80.0460%" y="1701" width="0.1402%" height="15" fill="rgb(209,228,25)" fg:x="61645" fg:w="108"/><text x="80.2960%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (13 samples, 0.02%)</title><rect x="80.2057%" y="1557" width="0.0169%" height="15" fill="rgb(234,160,10)" fg:x="61768" fg:w="13"/><text x="80.4557%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (11 samples, 0.01%)</title><rect x="80.2083%" y="1541" width="0.0143%" height="15" fill="rgb(212,66,25)" fg:x="61770" fg:w="11"/><text x="80.4583%" y="1551.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (32 samples, 0.04%)</title><rect x="80.2485%" y="1461" width="0.0416%" height="15" fill="rgb(254,121,18)" fg:x="61801" fg:w="32"/><text x="80.4985%" y="1471.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 32]&gt;::deserialize (26 samples, 0.03%)</title><rect x="80.2563%" y="1445" width="0.0338%" height="15" fill="rgb(219,127,1)" fg:x="61807" fg:w="26"/><text x="80.5063%" y="1455.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (26 samples, 0.03%)</title><rect x="80.2563%" y="1429" width="0.0338%" height="15" fill="rgb(219,224,42)" fg:x="61807" fg:w="26"/><text x="80.5063%" y="1439.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 32]&gt; as serde::de::Visitor&gt;::visit_seq (26 samples, 0.03%)</title><rect x="80.2563%" y="1413" width="0.0338%" height="15" fill="rgb(253,130,22)" fg:x="61807" fg:w="26"/><text x="80.5063%" y="1423.50"></text></g><g><title>serde::de::SeqAccess::next_element (20 samples, 0.03%)</title><rect x="80.2641%" y="1397" width="0.0260%" height="15" fill="rgb(253,39,28)" fg:x="61813" fg:w="20"/><text x="80.5141%" y="1407.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.03%)</title><rect x="80.2641%" y="1381" width="0.0260%" height="15" fill="rgb(231,126,37)" fg:x="61813" fg:w="20"/><text x="80.5141%" y="1391.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.03%)</title><rect x="80.2641%" y="1365" width="0.0260%" height="15" fill="rgb(251,145,14)" fg:x="61813" fg:w="20"/><text x="80.5141%" y="1375.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (20 samples, 0.03%)</title><rect x="80.2641%" y="1349" width="0.0260%" height="15" fill="rgb(229,164,30)" fg:x="61813" fg:w="20"/><text x="80.5141%" y="1359.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (20 samples, 0.03%)</title><rect x="80.2641%" y="1333" width="0.0260%" height="15" fill="rgb(233,227,54)" fg:x="61813" fg:w="20"/><text x="80.5141%" y="1343.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (16 samples, 0.02%)</title><rect x="80.2693%" y="1317" width="0.0208%" height="15" fill="rgb(240,94,22)" fg:x="61817" fg:w="16"/><text x="80.5193%" y="1327.50"></text></g><g><title>bcs::de::Deserializer::next (8 samples, 0.01%)</title><rect x="80.2797%" y="1301" width="0.0104%" height="15" fill="rgb(217,56,16)" fg:x="61825" fg:w="8"/><text x="80.5297%" y="1311.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (44 samples, 0.06%)</title><rect x="80.2355%" y="1509" width="0.0571%" height="15" fill="rgb(229,133,38)" fg:x="61791" fg:w="44"/><text x="80.4855%" y="1519.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (37 samples, 0.05%)</title><rect x="80.2446%" y="1493" width="0.0480%" height="15" fill="rgb(225,139,35)" fg:x="61798" fg:w="37"/><text x="80.4946%" y="1503.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (37 samples, 0.05%)</title><rect x="80.2446%" y="1477" width="0.0480%" height="15" fill="rgb(223,100,16)" fg:x="61798" fg:w="37"/><text x="80.4946%" y="1487.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (50 samples, 0.06%)</title><rect x="80.2317%" y="1525" width="0.0649%" height="15" fill="rgb(207,43,50)" fg:x="61788" fg:w="50"/><text x="80.4817%" y="1535.50"></text></g><g><title>bcs::de::from_bytes_seed (58 samples, 0.08%)</title><rect x="80.2239%" y="1541" width="0.0753%" height="15" fill="rgb(237,221,9)" fg:x="61782" fg:w="58"/><text x="80.4739%" y="1551.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (81 samples, 0.11%)</title><rect x="80.1953%" y="1573" width="0.1052%" height="15" fill="rgb(236,134,24)" fg:x="61760" fg:w="81"/><text x="80.4453%" y="1583.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (60 samples, 0.08%)</title><rect x="80.2226%" y="1557" width="0.0779%" height="15" fill="rgb(222,173,4)" fg:x="61781" fg:w="60"/><text x="80.4726%" y="1567.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (19 samples, 0.02%)</title><rect x="80.3005%" y="1573" width="0.0247%" height="15" fill="rgb(234,144,52)" fg:x="61841" fg:w="19"/><text x="80.5505%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (111 samples, 0.14%)</title><rect x="80.1862%" y="1621" width="0.1441%" height="15" fill="rgb(223,41,7)" fg:x="61753" fg:w="111"/><text x="80.4362%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (111 samples, 0.14%)</title><rect x="80.1862%" y="1605" width="0.1441%" height="15" fill="rgb(226,143,9)" fg:x="61753" fg:w="111"/><text x="80.4362%" y="1615.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (110 samples, 0.14%)</title><rect x="80.1875%" y="1589" width="0.1428%" height="15" fill="rgb(234,43,37)" fg:x="61754" fg:w="110"/><text x="80.4375%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (114 samples, 0.15%)</title><rect x="80.1862%" y="1669" width="0.1480%" height="15" fill="rgb(224,188,11)" fg:x="61753" fg:w="114"/><text x="80.4362%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (114 samples, 0.15%)</title><rect x="80.1862%" y="1653" width="0.1480%" height="15" fill="rgb(233,113,28)" fg:x="61753" fg:w="114"/><text x="80.4362%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (114 samples, 0.15%)</title><rect x="80.1862%" y="1637" width="0.1480%" height="15" fill="rgb(215,16,1)" fg:x="61753" fg:w="114"/><text x="80.4362%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (116 samples, 0.15%)</title><rect x="80.1862%" y="1701" width="0.1506%" height="15" fill="rgb(238,74,38)" fg:x="61753" fg:w="116"/><text x="80.4362%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (116 samples, 0.15%)</title><rect x="80.1862%" y="1685" width="0.1506%" height="15" fill="rgb(221,66,35)" fg:x="61753" fg:w="116"/><text x="80.4362%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (237 samples, 0.31%)</title><rect x="80.0330%" y="1845" width="0.3077%" height="15" fill="rgb(251,225,2)" fg:x="61635" fg:w="237"/><text x="80.2830%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (237 samples, 0.31%)</title><rect x="80.0330%" y="1829" width="0.3077%" height="15" fill="rgb(240,169,18)" fg:x="61635" fg:w="237"/><text x="80.2830%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (236 samples, 0.31%)</title><rect x="80.0343%" y="1813" width="0.3064%" height="15" fill="rgb(243,130,50)" fg:x="61636" fg:w="236"/><text x="80.2843%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (231 samples, 0.30%)</title><rect x="80.0408%" y="1797" width="0.3000%" height="15" fill="rgb(228,75,13)" fg:x="61641" fg:w="231"/><text x="80.2908%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (231 samples, 0.30%)</title><rect x="80.0408%" y="1781" width="0.3000%" height="15" fill="rgb(252,95,35)" fg:x="61641" fg:w="231"/><text x="80.2908%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (231 samples, 0.30%)</title><rect x="80.0408%" y="1765" width="0.3000%" height="15" fill="rgb(222,180,54)" fg:x="61641" fg:w="231"/><text x="80.2908%" y="1775.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (230 samples, 0.30%)</title><rect x="80.0421%" y="1749" width="0.2987%" height="15" fill="rgb(250,110,34)" fg:x="61642" fg:w="230"/><text x="80.2921%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (228 samples, 0.30%)</title><rect x="80.0447%" y="1733" width="0.2961%" height="15" fill="rgb(208,100,21)" fg:x="61644" fg:w="228"/><text x="80.2947%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (119 samples, 0.15%)</title><rect x="80.1862%" y="1717" width="0.1545%" height="15" fill="rgb(209,123,47)" fg:x="61753" fg:w="119"/><text x="80.4362%" y="1727.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (248 samples, 0.32%)</title><rect x="80.0317%" y="1861" width="0.3220%" height="15" fill="rgb(237,147,9)" fg:x="61634" fg:w="248"/><text x="80.2817%" y="1871.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (10 samples, 0.01%)</title><rect x="80.3407%" y="1845" width="0.0130%" height="15" fill="rgb(228,206,23)" fg:x="61872" fg:w="10"/><text x="80.5907%" y="1855.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (12,032 samples, 15.62%)</title><rect x="64.7587%" y="1909" width="15.6235%" height="15" fill="rgb(217,174,46)" fg:x="49872" fg:w="12032"/><text x="65.0087%" y="1919.50">move_vm_runtime::session..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (12,032 samples, 15.62%)</title><rect x="64.7587%" y="1893" width="15.6235%" height="15" fill="rgb(231,126,21)" fg:x="49872" fg:w="12032"/><text x="65.0087%" y="1903.50">move_vm_runtime::runtime..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (11,941 samples, 15.51%)</title><rect x="64.8769%" y="1877" width="15.5054%" height="15" fill="rgb(245,26,1)" fg:x="49963" fg:w="11941"/><text x="65.1269%" y="1887.50">move_vm_runtime::runtime..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (22 samples, 0.03%)</title><rect x="80.3537%" y="1861" width="0.0286%" height="15" fill="rgb(224,138,39)" fg:x="61882" fg:w="22"/><text x="80.6037%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.02%)</title><rect x="80.3589%" y="1845" width="0.0234%" height="15" fill="rgb(208,97,3)" fg:x="61886" fg:w="18"/><text x="80.6089%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="80.3589%" y="1829" width="0.0234%" height="15" fill="rgb(222,77,29)" fg:x="61886" fg:w="18"/><text x="80.6089%" y="1839.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 0.02%)</title><rect x="80.3602%" y="1813" width="0.0221%" height="15" fill="rgb(243,188,36)" fg:x="61887" fg:w="17"/><text x="80.6102%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (16 samples, 0.02%)</title><rect x="80.3615%" y="1797" width="0.0208%" height="15" fill="rgb(218,214,3)" fg:x="61888" fg:w="16"/><text x="80.6115%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.02%)</title><rect x="80.3615%" y="1781" width="0.0208%" height="15" fill="rgb(211,183,45)" fg:x="61888" fg:w="16"/><text x="80.6115%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="80.3615%" y="1765" width="0.0208%" height="15" fill="rgb(230,218,25)" fg:x="61888" fg:w="16"/><text x="80.6115%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="80.3641%" y="1749" width="0.0182%" height="15" fill="rgb(233,86,6)" fg:x="61890" fg:w="14"/><text x="80.6141%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="80.3667%" y="1733" width="0.0156%" height="15" fill="rgb(220,59,24)" fg:x="61892" fg:w="12"/><text x="80.6167%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="80.3693%" y="1717" width="0.0130%" height="15" fill="rgb(227,60,1)" fg:x="61894" fg:w="10"/><text x="80.6193%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;,move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}}&gt;&gt; (10 samples, 0.01%)</title><rect x="80.3693%" y="1701" width="0.0130%" height="15" fill="rgb(216,212,54)" fg:x="61894" fg:w="10"/><text x="80.6193%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="80.3693%" y="1685" width="0.0130%" height="15" fill="rgb(227,81,54)" fg:x="61894" fg:w="10"/><text x="80.6193%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::Value&gt;&gt; (10 samples, 0.01%)</title><rect x="80.3693%" y="1669" width="0.0130%" height="15" fill="rgb(206,204,43)" fg:x="61894" fg:w="10"/><text x="80.6193%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.02%)</title><rect x="80.3875%" y="1669" width="0.0169%" height="15" fill="rgb(219,29,26)" fg:x="61908" fg:w="13"/><text x="80.6375%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="80.3875%" y="1653" width="0.0169%" height="15" fill="rgb(252,40,36)" fg:x="61908" fg:w="13"/><text x="80.6375%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10 samples, 0.01%)</title><rect x="80.3914%" y="1637" width="0.0130%" height="15" fill="rgb(224,205,39)" fg:x="61911" fg:w="10"/><text x="80.6414%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (10 samples, 0.01%)</title><rect x="80.3914%" y="1621" width="0.0130%" height="15" fill="rgb(222,13,21)" fg:x="61911" fg:w="10"/><text x="80.6414%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (21 samples, 0.03%)</title><rect x="80.3875%" y="1701" width="0.0273%" height="15" fill="rgb(243,139,6)" fg:x="61908" fg:w="21"/><text x="80.6375%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.03%)</title><rect x="80.3875%" y="1685" width="0.0273%" height="15" fill="rgb(237,101,11)" fg:x="61908" fg:w="21"/><text x="80.6375%" y="1695.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (8 samples, 0.01%)</title><rect x="80.4044%" y="1669" width="0.0104%" height="15" fill="rgb(254,49,28)" fg:x="61921" fg:w="8"/><text x="80.6544%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="80.3875%" y="1717" width="0.0325%" height="15" fill="rgb(223,41,21)" fg:x="61908" fg:w="25"/><text x="80.6375%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.04%)</title><rect x="80.3875%" y="1749" width="0.0377%" height="15" fill="rgb(225,103,29)" fg:x="61908" fg:w="29"/><text x="80.6375%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (29 samples, 0.04%)</title><rect x="80.3875%" y="1733" width="0.0377%" height="15" fill="rgb(244,82,43)" fg:x="61908" fg:w="29"/><text x="80.6375%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="80.4251%" y="1701" width="0.0299%" height="15" fill="rgb(217,39,3)" fg:x="61937" fg:w="23"/><text x="80.6751%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.03%)</title><rect x="80.4264%" y="1685" width="0.0286%" height="15" fill="rgb(239,128,25)" fg:x="61938" fg:w="22"/><text x="80.6764%" y="1695.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.02%)</title><rect x="80.4303%" y="1669" width="0.0247%" height="15" fill="rgb(210,192,37)" fg:x="61941" fg:w="19"/><text x="80.6803%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (19 samples, 0.02%)</title><rect x="80.4303%" y="1653" width="0.0247%" height="15" fill="rgb(219,98,18)" fg:x="61941" fg:w="19"/><text x="80.6803%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (16 samples, 0.02%)</title><rect x="80.4342%" y="1637" width="0.0208%" height="15" fill="rgb(224,228,38)" fg:x="61944" fg:w="16"/><text x="80.6842%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (14 samples, 0.02%)</title><rect x="80.4368%" y="1621" width="0.0182%" height="15" fill="rgb(241,129,43)" fg:x="61946" fg:w="14"/><text x="80.6868%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.03%)</title><rect x="80.4251%" y="1749" width="0.0312%" height="15" fill="rgb(223,8,51)" fg:x="61937" fg:w="24"/><text x="80.6751%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (24 samples, 0.03%)</title><rect x="80.4251%" y="1733" width="0.0312%" height="15" fill="rgb(233,76,24)" fg:x="61937" fg:w="24"/><text x="80.6751%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.03%)</title><rect x="80.4251%" y="1717" width="0.0312%" height="15" fill="rgb(219,115,10)" fg:x="61937" fg:w="24"/><text x="80.6751%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (59 samples, 0.08%)</title><rect x="80.3823%" y="1877" width="0.0766%" height="15" fill="rgb(222,137,12)" fg:x="61904" fg:w="59"/><text x="80.6323%" y="1887.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (59 samples, 0.08%)</title><rect x="80.3823%" y="1861" width="0.0766%" height="15" fill="rgb(216,192,16)" fg:x="61904" fg:w="59"/><text x="80.6323%" y="1871.50"></text></g><g><title>core::iter::adapters::try_process (59 samples, 0.08%)</title><rect x="80.3823%" y="1845" width="0.0766%" height="15" fill="rgb(247,6,27)" fg:x="61904" fg:w="59"/><text x="80.6323%" y="1855.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (59 samples, 0.08%)</title><rect x="80.3823%" y="1829" width="0.0766%" height="15" fill="rgb(254,39,44)" fg:x="61904" fg:w="59"/><text x="80.6323%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (59 samples, 0.08%)</title><rect x="80.3823%" y="1813" width="0.0766%" height="15" fill="rgb(251,116,35)" fg:x="61904" fg:w="59"/><text x="80.6323%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (59 samples, 0.08%)</title><rect x="80.3823%" y="1797" width="0.0766%" height="15" fill="rgb(208,61,44)" fg:x="61904" fg:w="59"/><text x="80.6323%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59 samples, 0.08%)</title><rect x="80.3823%" y="1781" width="0.0766%" height="15" fill="rgb(250,34,5)" fg:x="61904" fg:w="59"/><text x="80.6323%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (56 samples, 0.07%)</title><rect x="80.3862%" y="1765" width="0.0727%" height="15" fill="rgb(241,40,15)" fg:x="61907" fg:w="56"/><text x="80.6362%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.03%)</title><rect x="80.4667%" y="1797" width="0.0273%" height="15" fill="rgb(229,182,2)" fg:x="61969" fg:w="21"/><text x="80.7167%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.03%)</title><rect x="80.4667%" y="1781" width="0.0273%" height="15" fill="rgb(244,148,52)" fg:x="61969" fg:w="21"/><text x="80.7167%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.03%)</title><rect x="80.4667%" y="1765" width="0.0273%" height="15" fill="rgb(225,211,4)" fg:x="61969" fg:w="21"/><text x="80.7167%" y="1775.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (18 samples, 0.02%)</title><rect x="80.4706%" y="1749" width="0.0234%" height="15" fill="rgb(208,222,47)" fg:x="61972" fg:w="18"/><text x="80.7206%" y="1759.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (26 samples, 0.03%)</title><rect x="80.4667%" y="1845" width="0.0338%" height="15" fill="rgb(233,162,0)" fg:x="61969" fg:w="26"/><text x="80.7167%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (26 samples, 0.03%)</title><rect x="80.4667%" y="1829" width="0.0338%" height="15" fill="rgb(241,54,13)" fg:x="61969" fg:w="26"/><text x="80.7167%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (26 samples, 0.03%)</title><rect x="80.4667%" y="1813" width="0.0338%" height="15" fill="rgb(213,89,18)" fg:x="61969" fg:w="26"/><text x="80.7167%" y="1823.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (10 samples, 0.01%)</title><rect x="80.5147%" y="1637" width="0.0130%" height="15" fill="rgb(215,170,37)" fg:x="62006" fg:w="10"/><text x="80.7647%" y="1647.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (11 samples, 0.01%)</title><rect x="80.5147%" y="1653" width="0.0143%" height="15" fill="rgb(216,133,15)" fg:x="62006" fg:w="11"/><text x="80.7647%" y="1663.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (13 samples, 0.02%)</title><rect x="80.5134%" y="1669" width="0.0169%" height="15" fill="rgb(230,42,19)" fg:x="62005" fg:w="13"/><text x="80.7634%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (22 samples, 0.03%)</title><rect x="80.5043%" y="1845" width="0.0286%" height="15" fill="rgb(221,103,41)" fg:x="61998" fg:w="22"/><text x="80.7543%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (22 samples, 0.03%)</title><rect x="80.5043%" y="1829" width="0.0286%" height="15" fill="rgb(220,142,31)" fg:x="61998" fg:w="22"/><text x="80.7543%" y="1839.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (22 samples, 0.03%)</title><rect x="80.5043%" y="1813" width="0.0286%" height="15" fill="rgb(239,218,4)" fg:x="61998" fg:w="22"/><text x="80.7543%" y="1823.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (18 samples, 0.02%)</title><rect x="80.5095%" y="1797" width="0.0234%" height="15" fill="rgb(232,16,4)" fg:x="62002" fg:w="18"/><text x="80.7595%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="80.5095%" y="1781" width="0.0234%" height="15" fill="rgb(226,213,25)" fg:x="62002" fg:w="18"/><text x="80.7595%" y="1791.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="80.5095%" y="1765" width="0.0234%" height="15" fill="rgb(235,135,19)" fg:x="62002" fg:w="18"/><text x="80.7595%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="80.5095%" y="1749" width="0.0234%" height="15" fill="rgb(240,107,29)" fg:x="62002" fg:w="18"/><text x="80.7595%" y="1759.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (18 samples, 0.02%)</title><rect x="80.5095%" y="1733" width="0.0234%" height="15" fill="rgb(206,164,44)" fg:x="62002" fg:w="18"/><text x="80.7595%" y="1743.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (16 samples, 0.02%)</title><rect x="80.5121%" y="1717" width="0.0208%" height="15" fill="rgb(210,23,48)" fg:x="62004" fg:w="16"/><text x="80.7621%" y="1727.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (16 samples, 0.02%)</title><rect x="80.5121%" y="1701" width="0.0208%" height="15" fill="rgb(212,138,25)" fg:x="62004" fg:w="16"/><text x="80.7621%" y="1711.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (15 samples, 0.02%)</title><rect x="80.5134%" y="1685" width="0.0195%" height="15" fill="rgb(224,152,3)" fg:x="62005" fg:w="15"/><text x="80.7634%" y="1695.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="80.5420%" y="1765" width="0.0104%" height="15" fill="rgb(214,38,23)" fg:x="62027" fg:w="8"/><text x="80.7920%" y="1775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="80.5420%" y="1749" width="0.0104%" height="15" fill="rgb(215,161,10)" fg:x="62027" fg:w="8"/><text x="80.7920%" y="1759.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="80.5524%" y="1669" width="0.0104%" height="15" fill="rgb(240,185,7)" fg:x="62035" fg:w="8"/><text x="80.8024%" y="1679.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (8 samples, 0.01%)</title><rect x="80.5524%" y="1653" width="0.0104%" height="15" fill="rgb(244,104,25)" fg:x="62035" fg:w="8"/><text x="80.8024%" y="1663.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (8 samples, 0.01%)</title><rect x="80.5524%" y="1637" width="0.0104%" height="15" fill="rgb(242,140,44)" fg:x="62035" fg:w="8"/><text x="80.8024%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="80.5524%" y="1717" width="0.0156%" height="15" fill="rgb(245,30,19)" fg:x="62035" fg:w="12"/><text x="80.8024%" y="1727.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="80.5524%" y="1701" width="0.0156%" height="15" fill="rgb(219,208,35)" fg:x="62035" fg:w="12"/><text x="80.8024%" y="1711.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (12 samples, 0.02%)</title><rect x="80.5524%" y="1685" width="0.0156%" height="15" fill="rgb(235,200,7)" fg:x="62035" fg:w="12"/><text x="80.8024%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (86 samples, 0.11%)</title><rect x="80.4589%" y="1877" width="0.1117%" height="15" fill="rgb(220,193,10)" fg:x="61963" fg:w="86"/><text x="80.7089%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (81 samples, 0.11%)</title><rect x="80.4654%" y="1861" width="0.1052%" height="15" fill="rgb(212,216,39)" fg:x="61968" fg:w="81"/><text x="80.7154%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (29 samples, 0.04%)</title><rect x="80.5329%" y="1845" width="0.0377%" height="15" fill="rgb(212,134,19)" fg:x="62020" fg:w="29"/><text x="80.7829%" y="1855.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (22 samples, 0.03%)</title><rect x="80.5420%" y="1829" width="0.0286%" height="15" fill="rgb(230,57,24)" fg:x="62027" fg:w="22"/><text x="80.7920%" y="1839.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.03%)</title><rect x="80.5420%" y="1813" width="0.0286%" height="15" fill="rgb(238,209,37)" fg:x="62027" fg:w="22"/><text x="80.7920%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.03%)</title><rect x="80.5420%" y="1797" width="0.0286%" height="15" fill="rgb(247,11,45)" fg:x="62027" fg:w="22"/><text x="80.7920%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.03%)</title><rect x="80.5420%" y="1781" width="0.0286%" height="15" fill="rgb(222,126,6)" fg:x="62027" fg:w="22"/><text x="80.7920%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.02%)</title><rect x="80.5524%" y="1765" width="0.0182%" height="15" fill="rgb(245,77,24)" fg:x="62035" fg:w="14"/><text x="80.8024%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="80.5524%" y="1749" width="0.0182%" height="15" fill="rgb(227,14,24)" fg:x="62035" fg:w="14"/><text x="80.8024%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.02%)</title><rect x="80.5524%" y="1733" width="0.0182%" height="15" fill="rgb(211,112,42)" fg:x="62035" fg:w="14"/><text x="80.8024%" y="1743.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="80.5745%" y="1781" width="0.0104%" height="15" fill="rgb(230,103,42)" fg:x="62052" fg:w="8"/><text x="80.8245%" y="1791.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="80.5745%" y="1765" width="0.0104%" height="15" fill="rgb(228,125,42)" fg:x="62052" fg:w="8"/><text x="80.8245%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (20 samples, 0.03%)</title><rect x="80.5706%" y="1861" width="0.0260%" height="15" fill="rgb(243,33,6)" fg:x="62049" fg:w="20"/><text x="80.8206%" y="1871.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (20 samples, 0.03%)</title><rect x="80.5706%" y="1845" width="0.0260%" height="15" fill="rgb(231,2,40)" fg:x="62049" fg:w="20"/><text x="80.8206%" y="1855.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.03%)</title><rect x="80.5706%" y="1829" width="0.0260%" height="15" fill="rgb(224,200,53)" fg:x="62049" fg:w="20"/><text x="80.8206%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.03%)</title><rect x="80.5706%" y="1813" width="0.0260%" height="15" fill="rgb(215,116,36)" fg:x="62049" fg:w="20"/><text x="80.8206%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.03%)</title><rect x="80.5706%" y="1797" width="0.0260%" height="15" fill="rgb(240,23,51)" fg:x="62049" fg:w="20"/><text x="80.8206%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.01%)</title><rect x="80.5848%" y="1781" width="0.0117%" height="15" fill="rgb(221,72,5)" fg:x="62060" fg:w="9"/><text x="80.8348%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.01%)</title><rect x="80.5848%" y="1765" width="0.0117%" height="15" fill="rgb(245,142,9)" fg:x="62060" fg:w="9"/><text x="80.8348%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.01%)</title><rect x="80.5848%" y="1749" width="0.0117%" height="15" fill="rgb(207,34,16)" fg:x="62060" fg:w="9"/><text x="80.8348%" y="1759.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="80.5978%" y="1797" width="0.0104%" height="15" fill="rgb(252,101,12)" fg:x="62070" fg:w="8"/><text x="80.8478%" y="1807.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="80.5978%" y="1781" width="0.0104%" height="15" fill="rgb(239,89,37)" fg:x="62070" fg:w="8"/><text x="80.8478%" y="1791.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (27,449 samples, 35.64%)</title><rect x="44.9709%" y="1925" width="35.6425%" height="15" fill="rgb(252,227,37)" fg:x="34633" fg:w="27449"/><text x="45.2209%" y="1935.50">aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_funct..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (178 samples, 0.23%)</title><rect x="80.3823%" y="1909" width="0.2311%" height="15" fill="rgb(212,164,17)" fg:x="61904" fg:w="178"/><text x="80.6323%" y="1919.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (178 samples, 0.23%)</title><rect x="80.3823%" y="1893" width="0.2311%" height="15" fill="rgb(240,86,13)" fg:x="61904" fg:w="178"/><text x="80.6323%" y="1903.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (33 samples, 0.04%)</title><rect x="80.5706%" y="1877" width="0.0429%" height="15" fill="rgb(233,183,32)" fg:x="62049" fg:w="33"/><text x="80.8206%" y="1887.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (13 samples, 0.02%)</title><rect x="80.5965%" y="1861" width="0.0169%" height="15" fill="rgb(205,201,38)" fg:x="62069" fg:w="13"/><text x="80.8465%" y="1871.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.02%)</title><rect x="80.5965%" y="1845" width="0.0169%" height="15" fill="rgb(210,122,38)" fg:x="62069" fg:w="13"/><text x="80.8465%" y="1855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.02%)</title><rect x="80.5965%" y="1829" width="0.0169%" height="15" fill="rgb(241,174,26)" fg:x="62069" fg:w="13"/><text x="80.8465%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.02%)</title><rect x="80.5965%" y="1813" width="0.0169%" height="15" fill="rgb(219,89,7)" fg:x="62069" fg:w="13"/><text x="80.8465%" y="1823.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (251 samples, 0.33%)</title><rect x="80.6329%" y="1781" width="0.3259%" height="15" fill="rgb(246,9,24)" fg:x="62097" fg:w="251"/><text x="80.8829%" y="1791.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (251 samples, 0.33%)</title><rect x="80.6329%" y="1765" width="0.3259%" height="15" fill="rgb(205,132,21)" fg:x="62097" fg:w="251"/><text x="80.8829%" y="1775.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (251 samples, 0.33%)</title><rect x="80.6329%" y="1749" width="0.3259%" height="15" fill="rgb(210,11,17)" fg:x="62097" fg:w="251"/><text x="80.8829%" y="1759.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (250 samples, 0.32%)</title><rect x="80.6342%" y="1733" width="0.3246%" height="15" fill="rgb(226,138,14)" fg:x="62098" fg:w="250"/><text x="80.8842%" y="1743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43 samples, 0.06%)</title><rect x="80.9030%" y="1717" width="0.0558%" height="15" fill="rgb(224,108,44)" fg:x="62305" fg:w="43"/><text x="81.1530%" y="1727.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (267 samples, 0.35%)</title><rect x="80.6134%" y="1829" width="0.3467%" height="15" fill="rgb(247,114,36)" fg:x="62082" fg:w="267"/><text x="80.8634%" y="1839.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (263 samples, 0.34%)</title><rect x="80.6186%" y="1813" width="0.3415%" height="15" fill="rgb(231,183,14)" fg:x="62086" fg:w="263"/><text x="80.8686%" y="1823.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (262 samples, 0.34%)</title><rect x="80.6199%" y="1797" width="0.3402%" height="15" fill="rgb(218,168,4)" fg:x="62087" fg:w="262"/><text x="80.8699%" y="1807.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (270 samples, 0.35%)</title><rect x="80.6134%" y="1861" width="0.3506%" height="15" fill="rgb(210,8,3)" fg:x="62082" fg:w="270"/><text x="80.8634%" y="1871.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (270 samples, 0.35%)</title><rect x="80.6134%" y="1845" width="0.3506%" height="15" fill="rgb(216,165,0)" fg:x="62082" fg:w="270"/><text x="80.8634%" y="1855.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (32 samples, 0.04%)</title><rect x="80.9861%" y="1669" width="0.0416%" height="15" fill="rgb(245,120,5)" fg:x="62369" fg:w="32"/><text x="81.2361%" y="1679.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (24 samples, 0.03%)</title><rect x="81.0718%" y="1621" width="0.0312%" height="15" fill="rgb(249,121,32)" fg:x="62435" fg:w="24"/><text x="81.3218%" y="1631.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (24 samples, 0.03%)</title><rect x="81.0718%" y="1605" width="0.0312%" height="15" fill="rgb(211,55,33)" fg:x="62435" fg:w="24"/><text x="81.3218%" y="1615.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (24 samples, 0.03%)</title><rect x="81.0718%" y="1589" width="0.0312%" height="15" fill="rgb(254,46,35)" fg:x="62435" fg:w="24"/><text x="81.3218%" y="1599.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (118 samples, 0.15%)</title><rect x="80.9757%" y="1797" width="0.1532%" height="15" fill="rgb(213,213,19)" fg:x="62361" fg:w="118"/><text x="81.2257%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (118 samples, 0.15%)</title><rect x="80.9757%" y="1781" width="0.1532%" height="15" fill="rgb(207,152,44)" fg:x="62361" fg:w="118"/><text x="81.2257%" y="1791.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (114 samples, 0.15%)</title><rect x="80.9809%" y="1765" width="0.1480%" height="15" fill="rgb(227,195,36)" fg:x="62365" fg:w="114"/><text x="81.2309%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (112 samples, 0.15%)</title><rect x="80.9835%" y="1749" width="0.1454%" height="15" fill="rgb(210,137,36)" fg:x="62367" fg:w="112"/><text x="81.2335%" y="1759.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (112 samples, 0.15%)</title><rect x="80.9835%" y="1733" width="0.1454%" height="15" fill="rgb(253,47,47)" fg:x="62367" fg:w="112"/><text x="81.2335%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (112 samples, 0.15%)</title><rect x="80.9835%" y="1717" width="0.1454%" height="15" fill="rgb(230,147,18)" fg:x="62367" fg:w="112"/><text x="81.2335%" y="1727.50"></text></g><g><title>std::io::Write::write_all (111 samples, 0.14%)</title><rect x="80.9848%" y="1701" width="0.1441%" height="15" fill="rgb(247,33,49)" fg:x="62368" fg:w="111"/><text x="81.2348%" y="1711.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (111 samples, 0.14%)</title><rect x="80.9848%" y="1685" width="0.1441%" height="15" fill="rgb(239,26,29)" fg:x="62368" fg:w="111"/><text x="81.2348%" y="1695.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (78 samples, 0.10%)</title><rect x="81.0276%" y="1669" width="0.1013%" height="15" fill="rgb(245,145,52)" fg:x="62401" fg:w="78"/><text x="81.2776%" y="1679.50"></text></g><g><title>tiny_keccak::Buffer::xorin (44 samples, 0.06%)</title><rect x="81.0718%" y="1653" width="0.0571%" height="15" fill="rgb(224,139,32)" fg:x="62435" fg:w="44"/><text x="81.3218%" y="1663.50"></text></g><g><title>tiny_keccak::Buffer::execute (44 samples, 0.06%)</title><rect x="81.0718%" y="1637" width="0.0571%" height="15" fill="rgb(238,202,19)" fg:x="62435" fg:w="44"/><text x="81.3218%" y="1647.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (20 samples, 0.03%)</title><rect x="81.1029%" y="1621" width="0.0260%" height="15" fill="rgb(249,211,53)" fg:x="62459" fg:w="20"/><text x="81.3529%" y="1631.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.02%)</title><rect x="81.1055%" y="1605" width="0.0234%" height="15" fill="rgb(237,229,33)" fg:x="62461" fg:w="18"/><text x="81.3555%" y="1615.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.02%)</title><rect x="81.1055%" y="1589" width="0.0234%" height="15" fill="rgb(208,97,40)" fg:x="62461" fg:w="18"/><text x="81.3555%" y="1599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11 samples, 0.01%)</title><rect x="81.1146%" y="1573" width="0.0143%" height="15" fill="rgb(254,36,16)" fg:x="62468" fg:w="11"/><text x="81.3646%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (11 samples, 0.01%)</title><rect x="81.1289%" y="1797" width="0.0143%" height="15" fill="rgb(221,7,12)" fg:x="62479" fg:w="11"/><text x="81.3789%" y="1807.50"></text></g><g><title>serde::ser::Serializer::collect_seq (11 samples, 0.01%)</title><rect x="81.1289%" y="1781" width="0.0143%" height="15" fill="rgb(205,11,12)" fg:x="62479" fg:w="11"/><text x="81.3789%" y="1791.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_seq (9 samples, 0.01%)</title><rect x="81.1315%" y="1765" width="0.0117%" height="15" fill="rgb(227,72,28)" fg:x="62481" fg:w="9"/><text x="81.3815%" y="1775.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (9 samples, 0.01%)</title><rect x="81.1315%" y="1749" width="0.0117%" height="15" fill="rgb(228,7,34)" fg:x="62481" fg:w="9"/><text x="81.3815%" y="1759.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (9 samples, 0.01%)</title><rect x="81.1315%" y="1733" width="0.0117%" height="15" fill="rgb(230,52,42)" fg:x="62481" fg:w="9"/><text x="81.3815%" y="1743.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.01%)</title><rect x="81.1328%" y="1717" width="0.0104%" height="15" fill="rgb(219,177,53)" fg:x="62482" fg:w="8"/><text x="81.3828%" y="1727.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (8 samples, 0.01%)</title><rect x="81.1328%" y="1701" width="0.0104%" height="15" fill="rgb(243,196,34)" fg:x="62482" fg:w="8"/><text x="81.3828%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (136 samples, 0.18%)</title><rect x="80.9744%" y="1813" width="0.1766%" height="15" fill="rgb(213,66,49)" fg:x="62360" fg:w="136"/><text x="81.2244%" y="1823.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (419 samples, 0.54%)</title><rect x="80.6134%" y="1893" width="0.5441%" height="15" fill="rgb(233,11,50)" fg:x="62082" fg:w="419"/><text x="80.8634%" y="1903.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (419 samples, 0.54%)</title><rect x="80.6134%" y="1877" width="0.5441%" height="15" fill="rgb(235,190,6)" fg:x="62082" fg:w="419"/><text x="80.8634%" y="1887.50"></text></g><g><title>bcs::ser::serialize_into (149 samples, 0.19%)</title><rect x="80.9640%" y="1861" width="0.1935%" height="15" fill="rgb(212,64,44)" fg:x="62352" fg:w="149"/><text x="81.2140%" y="1871.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (149 samples, 0.19%)</title><rect x="80.9640%" y="1845" width="0.1935%" height="15" fill="rgb(206,95,44)" fg:x="62352" fg:w="149"/><text x="81.2140%" y="1855.50"></text></g><g><title>aptos_vm::move_vm_ext::session::_::&lt;impl serde::ser::Serialize for aptos_vm::move_vm_ext::session::SessionId&gt;::serialize (149 samples, 0.19%)</title><rect x="80.9640%" y="1829" width="0.1935%" height="15" fill="rgb(227,136,25)" fg:x="62352" fg:w="149"/><text x="81.2140%" y="1839.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (421 samples, 0.55%)</title><rect x="80.6134%" y="1925" width="0.5467%" height="15" fill="rgb(206,178,17)" fg:x="62082" fg:w="421"/><text x="80.8634%" y="1935.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (421 samples, 0.55%)</title><rect x="80.6134%" y="1909" width="0.5467%" height="15" fill="rgb(208,168,35)" fg:x="62082" fg:w="421"/><text x="80.8634%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="81.1925%" y="1701" width="0.0156%" height="15" fill="rgb(213,210,40)" fg:x="62528" fg:w="12"/><text x="81.4425%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="81.1925%" y="1685" width="0.0156%" height="15" fill="rgb(236,60,6)" fg:x="62528" fg:w="12"/><text x="81.4425%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="81.1925%" y="1669" width="0.0156%" height="15" fill="rgb(220,186,36)" fg:x="62528" fg:w="12"/><text x="81.4425%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="81.1964%" y="1653" width="0.0117%" height="15" fill="rgb(225,120,49)" fg:x="62531" fg:w="9"/><text x="81.4464%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="81.1964%" y="1637" width="0.0117%" height="15" fill="rgb(250,115,20)" fg:x="62531" fg:w="9"/><text x="81.4464%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="81.1964%" y="1621" width="0.0117%" height="15" fill="rgb(207,214,23)" fg:x="62531" fg:w="9"/><text x="81.4464%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53 samples, 0.07%)</title><rect x="81.1809%" y="1765" width="0.0688%" height="15" fill="rgb(240,9,18)" fg:x="62519" fg:w="53"/><text x="81.4309%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (44 samples, 0.06%)</title><rect x="81.1925%" y="1749" width="0.0571%" height="15" fill="rgb(232,170,48)" fg:x="62528" fg:w="44"/><text x="81.4425%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (44 samples, 0.06%)</title><rect x="81.1925%" y="1733" width="0.0571%" height="15" fill="rgb(236,149,23)" fg:x="62528" fg:w="44"/><text x="81.4425%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (44 samples, 0.06%)</title><rect x="81.1925%" y="1717" width="0.0571%" height="15" fill="rgb(210,125,42)" fg:x="62528" fg:w="44"/><text x="81.4425%" y="1727.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (32 samples, 0.04%)</title><rect x="81.2081%" y="1701" width="0.0416%" height="15" fill="rgb(207,201,52)" fg:x="62540" fg:w="32"/><text x="81.4581%" y="1711.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.04%)</title><rect x="81.2081%" y="1685" width="0.0416%" height="15" fill="rgb(250,187,37)" fg:x="62540" fg:w="32"/><text x="81.4581%" y="1695.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="81.2081%" y="1669" width="0.0416%" height="15" fill="rgb(214,186,2)" fg:x="62540" fg:w="32"/><text x="81.4581%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79 samples, 0.10%)</title><rect x="81.1666%" y="1829" width="0.1026%" height="15" fill="rgb(207,189,15)" fg:x="62508" fg:w="79"/><text x="81.4166%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (70 samples, 0.09%)</title><rect x="81.1783%" y="1813" width="0.0909%" height="15" fill="rgb(221,99,21)" fg:x="62517" fg:w="70"/><text x="81.4283%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (70 samples, 0.09%)</title><rect x="81.1783%" y="1797" width="0.0909%" height="15" fill="rgb(212,67,18)" fg:x="62517" fg:w="70"/><text x="81.4283%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (70 samples, 0.09%)</title><rect x="81.1783%" y="1781" width="0.0909%" height="15" fill="rgb(226,24,24)" fg:x="62517" fg:w="70"/><text x="81.4283%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="81.2497%" y="1765" width="0.0195%" height="15" fill="rgb(252,123,31)" fg:x="62572" fg:w="15"/><text x="81.4997%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="81.2549%" y="1749" width="0.0143%" height="15" fill="rgb(251,227,47)" fg:x="62576" fg:w="11"/><text x="81.5049%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="81.2549%" y="1733" width="0.0143%" height="15" fill="rgb(233,84,53)" fg:x="62576" fg:w="11"/><text x="81.5049%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="81.2562%" y="1717" width="0.0130%" height="15" fill="rgb(228,57,19)" fg:x="62577" fg:w="10"/><text x="81.5062%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="81.2562%" y="1701" width="0.0130%" height="15" fill="rgb(251,81,5)" fg:x="62577" fg:w="10"/><text x="81.5062%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="81.2562%" y="1685" width="0.0130%" height="15" fill="rgb(236,211,27)" fg:x="62577" fg:w="10"/><text x="81.5062%" y="1695.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (107 samples, 0.14%)</title><rect x="81.1666%" y="1861" width="0.1389%" height="15" fill="rgb(218,21,6)" fg:x="62508" fg:w="107"/><text x="81.4166%" y="1871.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (107 samples, 0.14%)</title><rect x="81.1666%" y="1845" width="0.1389%" height="15" fill="rgb(239,104,19)" fg:x="62508" fg:w="107"/><text x="81.4166%" y="1855.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="81.2782%" y="1829" width="0.0273%" height="15" fill="rgb(234,179,27)" fg:x="62594" fg:w="21"/><text x="81.5282%" y="1839.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="81.2834%" y="1813" width="0.0221%" height="15" fill="rgb(221,154,39)" fg:x="62598" fg:w="17"/><text x="81.5334%" y="1823.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="81.2834%" y="1797" width="0.0221%" height="15" fill="rgb(228,190,1)" fg:x="62598" fg:w="17"/><text x="81.5334%" y="1807.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.02%)</title><rect x="81.2847%" y="1781" width="0.0208%" height="15" fill="rgb(244,122,33)" fg:x="62599" fg:w="16"/><text x="81.5347%" y="1791.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (16 samples, 0.02%)</title><rect x="81.2847%" y="1765" width="0.0208%" height="15" fill="rgb(227,56,37)" fg:x="62599" fg:w="16"/><text x="81.5347%" y="1775.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.02%)</title><rect x="81.2860%" y="1749" width="0.0195%" height="15" fill="rgb(207,158,16)" fg:x="62600" fg:w="15"/><text x="81.5360%" y="1759.50"></text></g><g><title>[libc.so.6] (15 samples, 0.02%)</title><rect x="81.2860%" y="1733" width="0.0195%" height="15" fill="rgb(251,222,30)" fg:x="62600" fg:w="15"/><text x="81.5360%" y="1743.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="81.3055%" y="1861" width="0.0143%" height="15" fill="rgb(240,22,49)" fg:x="62615" fg:w="11"/><text x="81.5555%" y="1871.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (130 samples, 0.17%)</title><rect x="81.1653%" y="1877" width="0.1688%" height="15" fill="rgb(224,207,37)" fg:x="62507" fg:w="130"/><text x="81.4153%" y="1887.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (11 samples, 0.01%)</title><rect x="81.3198%" y="1861" width="0.0143%" height="15" fill="rgb(249,188,40)" fg:x="62626" fg:w="11"/><text x="81.5698%" y="1871.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="81.3354%" y="1861" width="0.0182%" height="15" fill="rgb(254,141,11)" fg:x="62638" fg:w="14"/><text x="81.5854%" y="1871.50"></text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="81.3354%" y="1845" width="0.0182%" height="15" fill="rgb(231,177,6)" fg:x="62638" fg:w="14"/><text x="81.5854%" y="1855.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="81.3380%" y="1829" width="0.0156%" height="15" fill="rgb(241,6,16)" fg:x="62640" fg:w="12"/><text x="81.5880%" y="1839.50"></text></g><g><title>&lt;aptos_types::transaction::authenticator::TransactionAuthenticator as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="81.3341%" y="1877" width="0.0312%" height="15" fill="rgb(230,50,14)" fg:x="62637" fg:w="24"/><text x="81.5841%" y="1887.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="81.3536%" y="1861" width="0.0117%" height="15" fill="rgb(254,36,3)" fg:x="62652" fg:w="9"/><text x="81.6036%" y="1871.50"></text></g><g><title>&lt;ed25519::Signature as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="81.3536%" y="1845" width="0.0117%" height="15" fill="rgb(226,149,37)" fg:x="62652" fg:w="9"/><text x="81.6036%" y="1855.50"></text></g><g><title>&lt;once_cell::sync::OnceCell&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="81.3652%" y="1877" width="0.0143%" height="15" fill="rgb(253,49,27)" fg:x="62661" fg:w="11"/><text x="81.6152%" y="1887.50"></text></g><g><title>&lt;aptos_types::transaction::SignatureCheckedTransaction as core::clone::Clone&gt;::clone (175 samples, 0.23%)</title><rect x="81.1614%" y="1909" width="0.2272%" height="15" fill="rgb(249,182,52)" fg:x="62504" fg:w="175"/><text x="81.4114%" y="1919.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (175 samples, 0.23%)</title><rect x="81.1614%" y="1893" width="0.2272%" height="15" fill="rgb(223,42,15)" fg:x="62504" fg:w="175"/><text x="81.4114%" y="1903.50"></text></g><g><title>aptos_types::transaction::SignatureCheckedTransaction::into_inner (15 samples, 0.02%)</title><rect x="81.3886%" y="1909" width="0.0195%" height="15" fill="rgb(232,31,42)" fg:x="62679" fg:w="15"/><text x="81.6386%" y="1919.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="81.3964%" y="1893" width="0.0117%" height="15" fill="rgb(233,56,46)" fg:x="62685" fg:w="9"/><text x="81.6464%" y="1903.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn_meta (12 samples, 0.02%)</title><rect x="81.4081%" y="1909" width="0.0156%" height="15" fill="rgb(241,143,21)" fg:x="62694" fg:w="12"/><text x="81.6581%" y="1919.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="81.4730%" y="1861" width="0.0130%" height="15" fill="rgb(251,222,15)" fg:x="62744" fg:w="10"/><text x="81.7230%" y="1871.50"></text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="81.4730%" y="1845" width="0.0130%" height="15" fill="rgb(242,101,40)" fg:x="62744" fg:w="10"/><text x="81.7230%" y="1855.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="81.4730%" y="1829" width="0.0130%" height="15" fill="rgb(247,60,44)" fg:x="62744" fg:w="10"/><text x="81.7230%" y="1839.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::authenticator (30 samples, 0.04%)</title><rect x="81.4496%" y="1893" width="0.0390%" height="15" fill="rgb(254,48,47)" fg:x="62726" fg:w="30"/><text x="81.6996%" y="1903.50"></text></g><g><title>&lt;aptos_types::transaction::authenticator::TransactionAuthenticator as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="81.4665%" y="1877" width="0.0221%" height="15" fill="rgb(253,30,33)" fg:x="62739" fg:w="17"/><text x="81.7165%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 0.04%)</title><rect x="81.5418%" y="1525" width="0.0377%" height="15" fill="rgb(253,214,47)" fg:x="62797" fg:w="29"/><text x="81.7918%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.04%)</title><rect x="81.5418%" y="1509" width="0.0377%" height="15" fill="rgb(241,108,29)" fg:x="62797" fg:w="29"/><text x="81.7918%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.03%)</title><rect x="81.5470%" y="1493" width="0.0325%" height="15" fill="rgb(240,36,2)" fg:x="62801" fg:w="25"/><text x="81.7970%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.03%)</title><rect x="81.5509%" y="1477" width="0.0286%" height="15" fill="rgb(243,198,24)" fg:x="62804" fg:w="22"/><text x="81.8009%" y="1487.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.03%)</title><rect x="81.5509%" y="1461" width="0.0286%" height="15" fill="rgb(225,98,27)" fg:x="62804" fg:w="22"/><text x="81.8009%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.02%)</title><rect x="81.5548%" y="1445" width="0.0247%" height="15" fill="rgb(208,86,30)" fg:x="62807" fg:w="19"/><text x="81.8048%" y="1455.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.02%)</title><rect x="81.5548%" y="1429" width="0.0247%" height="15" fill="rgb(242,157,11)" fg:x="62807" fg:w="19"/><text x="81.8048%" y="1439.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.02%)</title><rect x="81.5548%" y="1413" width="0.0247%" height="15" fill="rgb(244,84,16)" fg:x="62807" fg:w="19"/><text x="81.8048%" y="1423.50"></text></g><g><title>realloc (16 samples, 0.02%)</title><rect x="81.5587%" y="1397" width="0.0208%" height="15" fill="rgb(247,20,46)" fg:x="62810" fg:w="16"/><text x="81.8087%" y="1407.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="81.5613%" y="1381" width="0.0182%" height="15" fill="rgb(240,157,20)" fg:x="62812" fg:w="14"/><text x="81.8113%" y="1391.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="81.5639%" y="1365" width="0.0156%" height="15" fill="rgb(212,151,38)" fg:x="62814" fg:w="12"/><text x="81.8139%" y="1375.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (34 samples, 0.04%)</title><rect x="81.5379%" y="1685" width="0.0441%" height="15" fill="rgb(233,197,14)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (34 samples, 0.04%)</title><rect x="81.5379%" y="1669" width="0.0441%" height="15" fill="rgb(226,148,28)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1679.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (34 samples, 0.04%)</title><rect x="81.5379%" y="1653" width="0.0441%" height="15" fill="rgb(244,141,30)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (34 samples, 0.04%)</title><rect x="81.5379%" y="1637" width="0.0441%" height="15" fill="rgb(215,73,38)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1647.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (34 samples, 0.04%)</title><rect x="81.5379%" y="1621" width="0.0441%" height="15" fill="rgb(230,148,29)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (34 samples, 0.04%)</title><rect x="81.5379%" y="1605" width="0.0441%" height="15" fill="rgb(250,41,52)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1615.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.04%)</title><rect x="81.5379%" y="1589" width="0.0441%" height="15" fill="rgb(215,48,1)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.04%)</title><rect x="81.5379%" y="1573" width="0.0441%" height="15" fill="rgb(205,223,38)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.04%)</title><rect x="81.5379%" y="1557" width="0.0441%" height="15" fill="rgb(213,51,8)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.04%)</title><rect x="81.5379%" y="1541" width="0.0441%" height="15" fill="rgb(248,53,11)" fg:x="62794" fg:w="34"/><text x="81.7879%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 0.03%)</title><rect x="81.6094%" y="1477" width="0.0325%" height="15" fill="rgb(218,140,4)" fg:x="62849" fg:w="25"/><text x="81.8594%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.03%)</title><rect x="81.6094%" y="1461" width="0.0325%" height="15" fill="rgb(248,161,31)" fg:x="62849" fg:w="25"/><text x="81.8594%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.03%)</title><rect x="81.6094%" y="1445" width="0.0325%" height="15" fill="rgb(239,88,32)" fg:x="62849" fg:w="25"/><text x="81.8594%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.03%)</title><rect x="81.6107%" y="1429" width="0.0312%" height="15" fill="rgb(234,14,28)" fg:x="62850" fg:w="24"/><text x="81.8607%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.03%)</title><rect x="81.6107%" y="1413" width="0.0312%" height="15" fill="rgb(235,173,11)" fg:x="62850" fg:w="24"/><text x="81.8607%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.03%)</title><rect x="81.6133%" y="1397" width="0.0286%" height="15" fill="rgb(222,70,2)" fg:x="62852" fg:w="22"/><text x="81.8633%" y="1407.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.03%)</title><rect x="81.6133%" y="1381" width="0.0286%" height="15" fill="rgb(228,196,41)" fg:x="62852" fg:w="22"/><text x="81.8633%" y="1391.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.03%)</title><rect x="81.6133%" y="1365" width="0.0286%" height="15" fill="rgb(249,19,9)" fg:x="62852" fg:w="22"/><text x="81.8633%" y="1375.50"></text></g><g><title>realloc (20 samples, 0.03%)</title><rect x="81.6159%" y="1349" width="0.0260%" height="15" fill="rgb(221,16,43)" fg:x="62854" fg:w="20"/><text x="81.8659%" y="1359.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="81.6184%" y="1333" width="0.0234%" height="15" fill="rgb(225,207,6)" fg:x="62856" fg:w="18"/><text x="81.8684%" y="1343.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="81.6197%" y="1317" width="0.0221%" height="15" fill="rgb(249,32,32)" fg:x="62857" fg:w="17"/><text x="81.8697%" y="1327.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (33 samples, 0.04%)</title><rect x="81.6016%" y="1589" width="0.0429%" height="15" fill="rgb(232,163,43)" fg:x="62843" fg:w="33"/><text x="81.8516%" y="1599.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (33 samples, 0.04%)</title><rect x="81.6016%" y="1573" width="0.0429%" height="15" fill="rgb(236,158,54)" fg:x="62843" fg:w="33"/><text x="81.8516%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (33 samples, 0.04%)</title><rect x="81.6016%" y="1557" width="0.0429%" height="15" fill="rgb(205,126,44)" fg:x="62843" fg:w="33"/><text x="81.8516%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (27 samples, 0.04%)</title><rect x="81.6094%" y="1541" width="0.0351%" height="15" fill="rgb(210,162,12)" fg:x="62849" fg:w="27"/><text x="81.8594%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.04%)</title><rect x="81.6094%" y="1525" width="0.0351%" height="15" fill="rgb(218,156,48)" fg:x="62849" fg:w="27"/><text x="81.8594%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.04%)</title><rect x="81.6094%" y="1509" width="0.0351%" height="15" fill="rgb(248,210,3)" fg:x="62849" fg:w="27"/><text x="81.8594%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.04%)</title><rect x="81.6094%" y="1493" width="0.0351%" height="15" fill="rgb(212,43,27)" fg:x="62849" fg:w="27"/><text x="81.8594%" y="1503.50"></text></g><g><title>&lt;aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (44 samples, 0.06%)</title><rect x="81.5951%" y="1621" width="0.0571%" height="15" fill="rgb(241,52,6)" fg:x="62838" fg:w="44"/><text x="81.8451%" y="1631.50"></text></g><g><title>aptos_types::serde_helper::vec_bytes::serialize (44 samples, 0.06%)</title><rect x="81.5951%" y="1605" width="0.0571%" height="15" fill="rgb(222,178,35)" fg:x="62838" fg:w="44"/><text x="81.8451%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="81.6561%" y="1429" width="0.0247%" height="15" fill="rgb(205,121,46)" fg:x="62885" fg:w="19"/><text x="81.9061%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="81.6561%" y="1413" width="0.0247%" height="15" fill="rgb(249,67,1)" fg:x="62885" fg:w="19"/><text x="81.9061%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="81.6587%" y="1397" width="0.0221%" height="15" fill="rgb(238,168,42)" fg:x="62887" fg:w="17"/><text x="81.9087%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="81.6587%" y="1381" width="0.0221%" height="15" fill="rgb(205,36,48)" fg:x="62887" fg:w="17"/><text x="81.9087%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="81.6600%" y="1365" width="0.0208%" height="15" fill="rgb(240,85,12)" fg:x="62888" fg:w="16"/><text x="81.9100%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.02%)</title><rect x="81.6600%" y="1349" width="0.0208%" height="15" fill="rgb(245,27,39)" fg:x="62888" fg:w="16"/><text x="81.9100%" y="1359.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.02%)</title><rect x="81.6600%" y="1333" width="0.0208%" height="15" fill="rgb(218,129,34)" fg:x="62888" fg:w="16"/><text x="81.9100%" y="1343.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.02%)</title><rect x="81.6600%" y="1317" width="0.0208%" height="15" fill="rgb(221,157,12)" fg:x="62888" fg:w="16"/><text x="81.9100%" y="1327.50"></text></g><g><title>realloc (16 samples, 0.02%)</title><rect x="81.6600%" y="1301" width="0.0208%" height="15" fill="rgb(213,206,20)" fg:x="62888" fg:w="16"/><text x="81.9100%" y="1311.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="81.6639%" y="1285" width="0.0169%" height="15" fill="rgb(227,115,30)" fg:x="62891" fg:w="13"/><text x="81.9139%" y="1295.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="81.6678%" y="1269" width="0.0130%" height="15" fill="rgb(221,40,47)" fg:x="62894" fg:w="10"/><text x="81.9178%" y="1279.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (24 samples, 0.03%)</title><rect x="81.6522%" y="1589" width="0.0312%" height="15" fill="rgb(239,96,49)" fg:x="62882" fg:w="24"/><text x="81.9022%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (24 samples, 0.03%)</title><rect x="81.6522%" y="1573" width="0.0312%" height="15" fill="rgb(223,24,38)" fg:x="62882" fg:w="24"/><text x="81.9022%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (23 samples, 0.03%)</title><rect x="81.6535%" y="1557" width="0.0299%" height="15" fill="rgb(242,35,45)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (23 samples, 0.03%)</title><rect x="81.6535%" y="1541" width="0.0299%" height="15" fill="rgb(236,20,9)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (23 samples, 0.03%)</title><rect x="81.6535%" y="1525" width="0.0299%" height="15" fill="rgb(239,124,8)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (23 samples, 0.03%)</title><rect x="81.6535%" y="1509" width="0.0299%" height="15" fill="rgb(228,92,29)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.03%)</title><rect x="81.6535%" y="1493" width="0.0299%" height="15" fill="rgb(251,53,39)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.03%)</title><rect x="81.6535%" y="1477" width="0.0299%" height="15" fill="rgb(224,44,10)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.03%)</title><rect x="81.6535%" y="1461" width="0.0299%" height="15" fill="rgb(254,10,15)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.03%)</title><rect x="81.6535%" y="1445" width="0.0299%" height="15" fill="rgb(245,173,6)" fg:x="62883" fg:w="23"/><text x="81.9035%" y="1455.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (80 samples, 0.10%)</title><rect x="81.5847%" y="1653" width="0.1039%" height="15" fill="rgb(228,74,0)" fg:x="62830" fg:w="80"/><text x="81.8347%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (77 samples, 0.10%)</title><rect x="81.5886%" y="1637" width="0.1000%" height="15" fill="rgb(206,138,29)" fg:x="62833" fg:w="77"/><text x="81.8386%" y="1647.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::ModuleId&gt;::serialize (28 samples, 0.04%)</title><rect x="81.6522%" y="1621" width="0.0364%" height="15" fill="rgb(253,27,43)" fg:x="62882" fg:w="28"/><text x="81.9022%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 0.04%)</title><rect x="81.6522%" y="1605" width="0.0364%" height="15" fill="rgb(231,73,0)" fg:x="62882" fg:w="28"/><text x="81.9022%" y="1615.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (84 samples, 0.11%)</title><rect x="81.5834%" y="1685" width="0.1091%" height="15" fill="rgb(218,9,23)" fg:x="62829" fg:w="84"/><text x="81.8334%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (83 samples, 0.11%)</title><rect x="81.5847%" y="1669" width="0.1078%" height="15" fill="rgb(251,55,29)" fg:x="62830" fg:w="83"/><text x="81.8347%" y="1679.50"></text></g><g><title>bcs::ser::to_bytes (140 samples, 0.18%)</title><rect x="81.5276%" y="1749" width="0.1818%" height="15" fill="rgb(223,180,22)" fg:x="62786" fg:w="140"/><text x="81.7776%" y="1759.50"></text></g><g><title>bcs::ser::serialize_into (140 samples, 0.18%)</title><rect x="81.5276%" y="1733" width="0.1818%" height="15" fill="rgb(223,29,21)" fg:x="62786" fg:w="140"/><text x="81.7776%" y="1743.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (140 samples, 0.18%)</title><rect x="81.5276%" y="1717" width="0.1818%" height="15" fill="rgb(251,103,37)" fg:x="62786" fg:w="140"/><text x="81.7776%" y="1727.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (133 samples, 0.17%)</title><rect x="81.5366%" y="1701" width="0.1727%" height="15" fill="rgb(214,11,21)" fg:x="62793" fg:w="133"/><text x="81.7866%" y="1711.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (13 samples, 0.02%)</title><rect x="81.6925%" y="1685" width="0.0169%" height="15" fill="rgb(205,137,13)" fg:x="62913" fg:w="13"/><text x="81.9425%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (13 samples, 0.02%)</title><rect x="81.6925%" y="1669" width="0.0169%" height="15" fill="rgb(225,58,47)" fg:x="62913" fg:w="13"/><text x="81.9425%" y="1679.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="81.6938%" y="1653" width="0.0156%" height="15" fill="rgb(222,197,14)" fg:x="62914" fg:w="12"/><text x="81.9438%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="81.6938%" y="1637" width="0.0156%" height="15" fill="rgb(215,210,33)" fg:x="62914" fg:w="12"/><text x="81.9438%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="81.6938%" y="1621" width="0.0156%" height="15" fill="rgb(242,13,9)" fg:x="62914" fg:w="12"/><text x="81.9438%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="81.6938%" y="1605" width="0.0156%" height="15" fill="rgb(218,31,39)" fg:x="62914" fg:w="12"/><text x="81.9438%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="81.6938%" y="1589" width="0.0156%" height="15" fill="rgb(211,214,23)" fg:x="62914" fg:w="12"/><text x="81.9438%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="81.6938%" y="1573" width="0.0156%" height="15" fill="rgb(237,92,14)" fg:x="62914" fg:w="12"/><text x="81.9438%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="81.6977%" y="1557" width="0.0117%" height="15" fill="rgb(220,78,5)" fg:x="62917" fg:w="9"/><text x="81.9477%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="81.6990%" y="1541" width="0.0104%" height="15" fill="rgb(237,23,21)" fg:x="62918" fg:w="8"/><text x="81.9490%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="81.6990%" y="1525" width="0.0104%" height="15" fill="rgb(251,207,51)" fg:x="62918" fg:w="8"/><text x="81.9490%" y="1535.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (149 samples, 0.19%)</title><rect x="81.5224%" y="1813" width="0.1935%" height="15" fill="rgb(249,206,18)" fg:x="62782" fg:w="149"/><text x="81.7724%" y="1823.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (149 samples, 0.19%)</title><rect x="81.5224%" y="1797" width="0.1935%" height="15" fill="rgb(236,20,19)" fg:x="62782" fg:w="149"/><text x="81.7724%" y="1807.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (145 samples, 0.19%)</title><rect x="81.5276%" y="1781" width="0.1883%" height="15" fill="rgb(214,227,29)" fg:x="62786" fg:w="145"/><text x="81.7776%" y="1791.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len::{{closure}} (145 samples, 0.19%)</title><rect x="81.5276%" y="1765" width="0.1883%" height="15" fill="rgb(209,183,4)" fg:x="62786" fg:w="145"/><text x="81.7776%" y="1775.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len (168 samples, 0.22%)</title><rect x="81.5068%" y="1893" width="0.2181%" height="15" fill="rgb(233,111,23)" fg:x="62770" fg:w="168"/><text x="81.7568%" y="1903.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (165 samples, 0.21%)</title><rect x="81.5107%" y="1877" width="0.2143%" height="15" fill="rgb(238,121,27)" fg:x="62773" fg:w="165"/><text x="81.7607%" y="1887.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (165 samples, 0.21%)</title><rect x="81.5107%" y="1861" width="0.2143%" height="15" fill="rgb(236,120,41)" fg:x="62773" fg:w="165"/><text x="81.7607%" y="1871.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (163 samples, 0.21%)</title><rect x="81.5133%" y="1845" width="0.2117%" height="15" fill="rgb(241,143,10)" fg:x="62775" fg:w="163"/><text x="81.7633%" y="1855.50"></text></g><g><title>once_cell::imp::initialize_or_wait (160 samples, 0.21%)</title><rect x="81.5172%" y="1829" width="0.2078%" height="15" fill="rgb(224,86,31)" fg:x="62778" fg:w="160"/><text x="81.7672%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.02%)</title><rect x="81.7535%" y="1845" width="0.0156%" height="15" fill="rgb(236,212,27)" fg:x="62960" fg:w="12"/><text x="82.0035%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.02%)</title><rect x="81.7535%" y="1829" width="0.0156%" height="15" fill="rgb(219,43,51)" fg:x="62960" fg:w="12"/><text x="82.0035%" y="1839.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.02%)</title><rect x="81.7535%" y="1813" width="0.0156%" height="15" fill="rgb(232,216,8)" fg:x="62960" fg:w="12"/><text x="82.0035%" y="1823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.02%)</title><rect x="81.7535%" y="1797" width="0.0156%" height="15" fill="rgb(206,222,39)" fg:x="62960" fg:w="12"/><text x="82.0035%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="81.7535%" y="1781" width="0.0156%" height="15" fill="rgb(209,149,48)" fg:x="62960" fg:w="12"/><text x="82.0035%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="81.7574%" y="1765" width="0.0117%" height="15" fill="rgb(229,155,21)" fg:x="62963" fg:w="9"/><text x="82.0074%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="81.7574%" y="1749" width="0.0117%" height="15" fill="rgb(246,152,26)" fg:x="62963" fg:w="9"/><text x="82.0074%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="81.7574%" y="1733" width="0.0117%" height="15" fill="rgb(206,70,42)" fg:x="62963" fg:w="9"/><text x="82.0074%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="81.7574%" y="1717" width="0.0117%" height="15" fill="rgb(236,9,11)" fg:x="62963" fg:w="9"/><text x="82.0074%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="81.7574%" y="1701" width="0.0117%" height="15" fill="rgb(238,145,47)" fg:x="62963" fg:w="9"/><text x="82.0074%" y="1711.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="81.7587%" y="1685" width="0.0104%" height="15" fill="rgb(252,189,7)" fg:x="62964" fg:w="8"/><text x="82.0087%" y="1695.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::public_key_bytes (39 samples, 0.05%)</title><rect x="81.7418%" y="1861" width="0.0506%" height="15" fill="rgb(254,168,51)" fg:x="62951" fg:w="39"/><text x="81.9918%" y="1871.50"></text></g><g><title>aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey::to_bytes (18 samples, 0.02%)</title><rect x="81.7691%" y="1845" width="0.0234%" height="15" fill="rgb(227,105,46)" fg:x="62972" fg:w="18"/><text x="82.0191%" y="1855.50"></text></g><g><title>ed25519_dalek::public::PublicKey::to_bytes (9 samples, 0.01%)</title><rect x="81.7808%" y="1829" width="0.0117%" height="15" fill="rgb(227,74,30)" fg:x="62981" fg:w="9"/><text x="82.0308%" y="1839.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::to_bytes (9 samples, 0.01%)</title><rect x="81.7808%" y="1813" width="0.0117%" height="15" fill="rgb(206,212,44)" fg:x="62981" fg:w="9"/><text x="82.0308%" y="1823.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key_preimage (81 samples, 0.11%)</title><rect x="81.7418%" y="1877" width="0.1052%" height="15" fill="rgb(252,69,11)" fg:x="62951" fg:w="81"/><text x="81.9918%" y="1887.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (42 samples, 0.05%)</title><rect x="81.7924%" y="1861" width="0.0545%" height="15" fill="rgb(239,116,0)" fg:x="62990" fg:w="42"/><text x="82.0424%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.05%)</title><rect x="81.7963%" y="1845" width="0.0506%" height="15" fill="rgb(246,189,23)" fg:x="62993" fg:w="39"/><text x="82.0463%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (39 samples, 0.05%)</title><rect x="81.7963%" y="1829" width="0.0506%" height="15" fill="rgb(229,50,41)" fg:x="62993" fg:w="39"/><text x="82.0463%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.05%)</title><rect x="81.7963%" y="1813" width="0.0506%" height="15" fill="rgb(214,66,37)" fg:x="62993" fg:w="39"/><text x="82.0463%" y="1823.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.05%)</title><rect x="81.7976%" y="1797" width="0.0493%" height="15" fill="rgb(226,28,6)" fg:x="62994" fg:w="38"/><text x="82.0476%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (37 samples, 0.05%)</title><rect x="81.7989%" y="1781" width="0.0480%" height="15" fill="rgb(239,154,0)" fg:x="62995" fg:w="37"/><text x="82.0489%" y="1791.50"></text></g><g><title>alloc::alloc::Global::grow_impl (37 samples, 0.05%)</title><rect x="81.7989%" y="1765" width="0.0480%" height="15" fill="rgb(233,97,11)" fg:x="62995" fg:w="37"/><text x="82.0489%" y="1775.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.05%)</title><rect x="81.7989%" y="1749" width="0.0480%" height="15" fill="rgb(236,215,16)" fg:x="62995" fg:w="37"/><text x="82.0489%" y="1759.50"></text></g><g><title>realloc (35 samples, 0.05%)</title><rect x="81.8015%" y="1733" width="0.0454%" height="15" fill="rgb(246,188,29)" fg:x="62997" fg:w="35"/><text x="82.0515%" y="1743.50"></text></g><g><title>[libc.so.6] (31 samples, 0.04%)</title><rect x="81.8067%" y="1717" width="0.0403%" height="15" fill="rgb(207,7,29)" fg:x="63001" fg:w="31"/><text x="82.0567%" y="1727.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="81.8145%" y="1701" width="0.0325%" height="15" fill="rgb(238,112,43)" fg:x="63007" fg:w="25"/><text x="82.0645%" y="1711.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (216 samples, 0.28%)</title><rect x="81.8937%" y="1781" width="0.2805%" height="15" fill="rgb(230,110,32)" fg:x="63068" fg:w="216"/><text x="82.1437%" y="1791.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (216 samples, 0.28%)</title><rect x="81.8937%" y="1765" width="0.2805%" height="15" fill="rgb(218,197,32)" fg:x="63068" fg:w="216"/><text x="82.1437%" y="1775.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (216 samples, 0.28%)</title><rect x="81.8937%" y="1749" width="0.2805%" height="15" fill="rgb(252,61,9)" fg:x="63068" fg:w="216"/><text x="82.1437%" y="1759.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (214 samples, 0.28%)</title><rect x="81.8963%" y="1733" width="0.2779%" height="15" fill="rgb(244,140,14)" fg:x="63070" fg:w="214"/><text x="82.1463%" y="1743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (40 samples, 0.05%)</title><rect x="82.1223%" y="1717" width="0.0519%" height="15" fill="rgb(216,14,47)" fg:x="63244" fg:w="40"/><text x="82.3723%" y="1727.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (232 samples, 0.30%)</title><rect x="81.8743%" y="1829" width="0.3013%" height="15" fill="rgb(224,130,52)" fg:x="63053" fg:w="232"/><text x="82.1243%" y="1839.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (223 samples, 0.29%)</title><rect x="81.8859%" y="1813" width="0.2896%" height="15" fill="rgb(210,229,51)" fg:x="63062" fg:w="223"/><text x="82.1359%" y="1823.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (223 samples, 0.29%)</title><rect x="81.8859%" y="1797" width="0.2896%" height="15" fill="rgb(242,13,9)" fg:x="63062" fg:w="223"/><text x="82.1359%" y="1807.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (241 samples, 0.31%)</title><rect x="81.8730%" y="1845" width="0.3129%" height="15" fill="rgb(252,71,50)" fg:x="63052" fg:w="241"/><text x="82.1230%" y="1855.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="82.1755%" y="1829" width="0.0104%" height="15" fill="rgb(218,225,6)" fg:x="63285" fg:w="8"/><text x="82.4255%" y="1839.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (14 samples, 0.02%)</title><rect x="82.1859%" y="1845" width="0.0182%" height="15" fill="rgb(219,27,35)" fg:x="63293" fg:w="14"/><text x="82.4359%" y="1855.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (293 samples, 0.38%)</title><rect x="81.8470%" y="1877" width="0.3805%" height="15" fill="rgb(226,30,1)" fg:x="63032" fg:w="293"/><text x="82.0970%" y="1887.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (284 samples, 0.37%)</title><rect x="81.8587%" y="1861" width="0.3688%" height="15" fill="rgb(227,164,34)" fg:x="63041" fg:w="284"/><text x="82.1087%" y="1871.50"></text></g><g><title>tiny_keccak::sha3::Sha3::v256 (18 samples, 0.02%)</title><rect x="82.2041%" y="1845" width="0.0234%" height="15" fill="rgb(206,103,4)" fg:x="63307" fg:w="18"/><text x="82.4541%" y="1855.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (390 samples, 0.51%)</title><rect x="81.7327%" y="1893" width="0.5064%" height="15" fill="rgb(214,166,19)" fg:x="62944" fg:w="390"/><text x="81.9827%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::authenticator::AuthenticationKeyPreimage&gt; (9 samples, 0.01%)</title><rect x="82.2274%" y="1877" width="0.0117%" height="15" fill="rgb(240,56,20)" fg:x="63325" fg:w="9"/><text x="82.4774%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="82.2274%" y="1861" width="0.0117%" height="15" fill="rgb(224,25,3)" fg:x="63325" fg:w="9"/><text x="82.4774%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="82.2274%" y="1845" width="0.0117%" height="15" fill="rgb(216,206,54)" fg:x="63325" fg:w="9"/><text x="82.4774%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="82.2274%" y="1829" width="0.0117%" height="15" fill="rgb(225,142,10)" fg:x="63325" fg:w="9"/><text x="82.4774%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="82.2274%" y="1813" width="0.0117%" height="15" fill="rgb(246,9,18)" fg:x="63325" fg:w="9"/><text x="82.4774%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="82.2274%" y="1797" width="0.0117%" height="15" fill="rgb(247,140,18)" fg:x="63325" fg:w="9"/><text x="82.4774%" y="1807.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::to_vec (12 samples, 0.02%)</title><rect x="82.2391%" y="1893" width="0.0156%" height="15" fill="rgb(239,184,22)" fg:x="63334" fg:w="12"/><text x="82.4891%" y="1903.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::sender (25 samples, 0.03%)</title><rect x="82.2690%" y="1893" width="0.0325%" height="15" fill="rgb(227,94,44)" fg:x="63357" fg:w="25"/><text x="82.5190%" y="1903.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (697 samples, 0.91%)</title><rect x="81.4237%" y="1909" width="0.9051%" height="15" fill="rgb(219,43,3)" fg:x="62706" fg:w="697"/><text x="81.6737%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::authenticator::TransactionAuthenticator&gt; (16 samples, 0.02%)</title><rect x="82.3080%" y="1893" width="0.0208%" height="15" fill="rgb(210,76,31)" fg:x="63387" fg:w="16"/><text x="82.5580%" y="1903.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="82.3339%" y="1893" width="0.0117%" height="15" fill="rgb(225,85,12)" fg:x="63407" fg:w="9"/><text x="82.5839%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="82.3664%" y="1749" width="0.0208%" height="15" fill="rgb(214,191,28)" fg:x="63432" fg:w="16"/><text x="82.6164%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="82.3664%" y="1733" width="0.0208%" height="15" fill="rgb(214,43,14)" fg:x="63432" fg:w="16"/><text x="82.6164%" y="1743.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="82.3716%" y="1717" width="0.0156%" height="15" fill="rgb(253,117,5)" fg:x="63436" fg:w="12"/><text x="82.6216%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="82.3625%" y="1829" width="0.0286%" height="15" fill="rgb(208,124,26)" fg:x="63429" fg:w="22"/><text x="82.6125%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (21 samples, 0.03%)</title><rect x="82.3638%" y="1813" width="0.0273%" height="15" fill="rgb(228,208,39)" fg:x="63430" fg:w="21"/><text x="82.6138%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="82.3664%" y="1797" width="0.0247%" height="15" fill="rgb(206,180,39)" fg:x="63432" fg:w="19"/><text x="82.6164%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="82.3664%" y="1781" width="0.0247%" height="15" fill="rgb(205,111,37)" fg:x="63432" fg:w="19"/><text x="82.6164%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="82.3664%" y="1765" width="0.0247%" height="15" fill="rgb(208,121,24)" fg:x="63432" fg:w="19"/><text x="82.6164%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (24 samples, 0.03%)</title><rect x="82.3625%" y="1845" width="0.0312%" height="15" fill="rgb(218,215,32)" fg:x="63429" fg:w="24"/><text x="82.6125%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (68 samples, 0.09%)</title><rect x="82.3287%" y="1909" width="0.0883%" height="15" fill="rgb(244,168,53)" fg:x="63403" fg:w="68"/><text x="82.5787%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (55 samples, 0.07%)</title><rect x="82.3456%" y="1893" width="0.0714%" height="15" fill="rgb(214,9,36)" fg:x="63416" fg:w="55"/><text x="82.5956%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (43 samples, 0.06%)</title><rect x="82.3612%" y="1877" width="0.0558%" height="15" fill="rgb(231,4,34)" fg:x="63428" fg:w="43"/><text x="82.6112%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (42 samples, 0.05%)</title><rect x="82.3625%" y="1861" width="0.0545%" height="15" fill="rgb(210,83,51)" fg:x="63429" fg:w="42"/><text x="82.6125%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (11 samples, 0.01%)</title><rect x="82.4027%" y="1845" width="0.0143%" height="15" fill="rgb(224,112,1)" fg:x="63460" fg:w="11"/><text x="82.6527%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (11 samples, 0.01%)</title><rect x="82.4027%" y="1829" width="0.0143%" height="15" fill="rgb(216,33,41)" fg:x="63460" fg:w="11"/><text x="82.6527%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (11 samples, 0.01%)</title><rect x="82.4027%" y="1813" width="0.0143%" height="15" fill="rgb(215,179,42)" fg:x="63460" fg:w="11"/><text x="82.6527%" y="1823.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="82.4027%" y="1797" width="0.0143%" height="15" fill="rgb(205,81,48)" fg:x="63460" fg:w="11"/><text x="82.6527%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="82.4027%" y="1781" width="0.0143%" height="15" fill="rgb(246,17,30)" fg:x="63460" fg:w="11"/><text x="82.6527%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="82.4235%" y="1845" width="0.0195%" height="15" fill="rgb(226,19,16)" fg:x="63476" fg:w="15"/><text x="82.6735%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.02%)</title><rect x="82.4235%" y="1829" width="0.0195%" height="15" fill="rgb(207,3,14)" fg:x="63476" fg:w="15"/><text x="82.6735%" y="1839.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="82.4274%" y="1813" width="0.0156%" height="15" fill="rgb(226,77,12)" fg:x="63479" fg:w="12"/><text x="82.6774%" y="1823.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn (990 samples, 1.29%)</title><rect x="81.1601%" y="1925" width="1.2855%" height="15" fill="rgb(226,76,25)" fg:x="62503" fg:w="990"/><text x="81.4101%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::transaction_metadata::TransactionMetadata&gt; (22 samples, 0.03%)</title><rect x="82.4170%" y="1909" width="0.0286%" height="15" fill="rgb(217,216,25)" fg:x="63471" fg:w="22"/><text x="82.6670%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="82.4235%" y="1893" width="0.0221%" height="15" fill="rgb(247,127,42)" fg:x="63476" fg:w="17"/><text x="82.6735%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="82.4235%" y="1877" width="0.0221%" height="15" fill="rgb(226,10,34)" fg:x="63476" fg:w="17"/><text x="82.6735%" y="1887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="82.4235%" y="1861" width="0.0221%" height="15" fill="rgb(249,78,0)" fg:x="63476" fg:w="17"/><text x="82.6735%" y="1871.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key_preimage (26 samples, 0.03%)</title><rect x="82.4664%" y="1893" width="0.0338%" height="15" fill="rgb(226,218,38)" fg:x="63509" fg:w="26"/><text x="82.7164%" y="1903.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (21 samples, 0.03%)</title><rect x="82.4729%" y="1877" width="0.0273%" height="15" fill="rgb(240,92,1)" fg:x="63514" fg:w="21"/><text x="82.7229%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.03%)</title><rect x="82.4742%" y="1861" width="0.0260%" height="15" fill="rgb(237,224,33)" fg:x="63515" fg:w="20"/><text x="82.7242%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (19 samples, 0.02%)</title><rect x="82.4755%" y="1845" width="0.0247%" height="15" fill="rgb(211,46,1)" fg:x="63516" fg:w="19"/><text x="82.7255%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="82.4755%" y="1829" width="0.0247%" height="15" fill="rgb(239,190,4)" fg:x="63516" fg:w="19"/><text x="82.7255%" y="1839.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="82.4755%" y="1813" width="0.0247%" height="15" fill="rgb(221,50,22)" fg:x="63516" fg:w="19"/><text x="82.7255%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.02%)</title><rect x="82.4755%" y="1797" width="0.0247%" height="15" fill="rgb(207,176,8)" fg:x="63516" fg:w="19"/><text x="82.7255%" y="1807.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.02%)</title><rect x="82.4755%" y="1781" width="0.0247%" height="15" fill="rgb(244,114,50)" fg:x="63516" fg:w="19"/><text x="82.7255%" y="1791.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.02%)</title><rect x="82.4768%" y="1765" width="0.0234%" height="15" fill="rgb(226,206,19)" fg:x="63517" fg:w="18"/><text x="82.7268%" y="1775.50"></text></g><g><title>realloc (18 samples, 0.02%)</title><rect x="82.4768%" y="1749" width="0.0234%" height="15" fill="rgb(208,199,16)" fg:x="63517" fg:w="18"/><text x="82.7268%" y="1759.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="82.4781%" y="1733" width="0.0221%" height="15" fill="rgb(208,38,14)" fg:x="63518" fg:w="17"/><text x="82.7281%" y="1743.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="82.4845%" y="1717" width="0.0156%" height="15" fill="rgb(221,211,49)" fg:x="63523" fg:w="12"/><text x="82.7345%" y="1727.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (120 samples, 0.16%)</title><rect x="82.5092%" y="1797" width="0.1558%" height="15" fill="rgb(227,214,34)" fg:x="63542" fg:w="120"/><text x="82.7592%" y="1807.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (120 samples, 0.16%)</title><rect x="82.5092%" y="1781" width="0.1558%" height="15" fill="rgb(234,5,54)" fg:x="63542" fg:w="120"/><text x="82.7592%" y="1791.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (120 samples, 0.16%)</title><rect x="82.5092%" y="1765" width="0.1558%" height="15" fill="rgb(236,215,22)" fg:x="63542" fg:w="120"/><text x="82.7592%" y="1775.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (120 samples, 0.16%)</title><rect x="82.5092%" y="1749" width="0.1558%" height="15" fill="rgb(244,0,11)" fg:x="63542" fg:w="120"/><text x="82.7592%" y="1759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.04%)</title><rect x="82.6222%" y="1733" width="0.0429%" height="15" fill="rgb(212,140,16)" fg:x="63629" fg:w="33"/><text x="82.8722%" y="1743.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (126 samples, 0.16%)</title><rect x="82.5027%" y="1845" width="0.1636%" height="15" fill="rgb(238,101,37)" fg:x="63537" fg:w="126"/><text x="82.7527%" y="1855.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (122 samples, 0.16%)</title><rect x="82.5079%" y="1829" width="0.1584%" height="15" fill="rgb(247,46,3)" fg:x="63541" fg:w="122"/><text x="82.7579%" y="1839.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (122 samples, 0.16%)</title><rect x="82.5079%" y="1813" width="0.1584%" height="15" fill="rgb(208,106,19)" fg:x="63541" fg:w="122"/><text x="82.7579%" y="1823.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (129 samples, 0.17%)</title><rect x="82.5027%" y="1861" width="0.1675%" height="15" fill="rgb(240,227,15)" fg:x="63537" fg:w="129"/><text x="82.7527%" y="1871.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (133 samples, 0.17%)</title><rect x="82.5001%" y="1893" width="0.1727%" height="15" fill="rgb(226,173,6)" fg:x="63535" fg:w="133"/><text x="82.7501%" y="1903.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (133 samples, 0.17%)</title><rect x="82.5001%" y="1877" width="0.1727%" height="15" fill="rgb(213,191,1)" fg:x="63535" fg:w="133"/><text x="82.7501%" y="1887.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (161 samples, 0.21%)</title><rect x="82.4651%" y="1909" width="0.2091%" height="15" fill="rgb(246,51,36)" fg:x="63508" fg:w="161"/><text x="82.7151%" y="1919.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (41,955 samples, 54.48%)</title><rect x="28.2060%" y="2005" width="54.4785%" height="15" fill="rgb(238,40,32)" fg:x="21722" fg:w="41955"/><text x="28.4560%" y="2015.50">aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (41,076 samples, 53.34%)</title><rect x="29.3474%" y="1989" width="53.3371%" height="15" fill="rgb(208,126,27)" fg:x="22601" fg:w="41076"/><text x="29.5974%" y="1999.50">aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute</text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (41,076 samples, 53.34%)</title><rect x="29.3474%" y="1973" width="53.3371%" height="15" fill="rgb(227,117,38)" fg:x="22601" fg:w="41076"/><text x="29.5974%" y="1983.50">&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::tas..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (41,076 samples, 53.34%)</title><rect x="29.3474%" y="1957" width="53.3371%" height="15" fill="rgb(232,16,1)" fg:x="22601" fg:w="41076"/><text x="29.5974%" y="1967.50">&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_tra..</text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (41,076 samples, 53.34%)</title><rect x="29.3474%" y="1941" width="53.3371%" height="15" fill="rgb(212,111,31)" fg:x="22601" fg:w="41076"/><text x="29.5974%" y="1951.50">aptos_vm::aptos_vm::AptosVM::execute_user_transaction</text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (184 samples, 0.24%)</title><rect x="82.4456%" y="1925" width="0.2389%" height="15" fill="rgb(253,227,2)" fg:x="63493" fg:w="184"/><text x="82.6956%" y="1935.50"></text></g><g><title>move_compiler::command_line::compiler::run (14 samples, 0.02%)</title><rect x="82.7079%" y="1701" width="0.0182%" height="15" fill="rgb(216,122,17)" fg:x="63695" fg:w="14"/><text x="82.9579%" y="1711.50"></text></g><g><title>move_compiler::command_line::compiler::run (9 samples, 0.01%)</title><rect x="82.7144%" y="1685" width="0.0117%" height="15" fill="rgb(227,37,2)" fg:x="63700" fg:w="9"/><text x="82.9644%" y="1695.50"></text></g><g><title>move_compiler::command_line::compiler::run (20 samples, 0.03%)</title><rect x="82.7014%" y="1717" width="0.0260%" height="15" fill="rgb(244,113,40)" fg:x="63690" fg:w="20"/><text x="82.9514%" y="1727.50"></text></g><g><title>move_compiler::command_line::compiler::run (27 samples, 0.04%)</title><rect x="82.6988%" y="1749" width="0.0351%" height="15" fill="rgb(217,193,34)" fg:x="63688" fg:w="27"/><text x="82.9488%" y="1759.50"></text></g><g><title>move_compiler::command_line::compiler::run (26 samples, 0.03%)</title><rect x="82.7001%" y="1733" width="0.0338%" height="15" fill="rgb(212,223,15)" fg:x="63689" fg:w="26"/><text x="82.9501%" y="1743.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (47 samples, 0.06%)</title><rect x="82.6845%" y="1989" width="0.0610%" height="15" fill="rgb(238,143,18)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1999.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (47 samples, 0.06%)</title><rect x="82.6845%" y="1973" width="0.0610%" height="15" fill="rgb(231,18,49)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1983.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (47 samples, 0.06%)</title><rect x="82.6845%" y="1957" width="0.0610%" height="15" fill="rgb(249,122,4)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1967.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (47 samples, 0.06%)</title><rect x="82.6845%" y="1941" width="0.0610%" height="15" fill="rgb(245,138,54)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1951.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (47 samples, 0.06%)</title><rect x="82.6845%" y="1925" width="0.0610%" height="15" fill="rgb(218,130,18)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1935.50"></text></g><g><title>once_cell::imp::initialize_or_wait (47 samples, 0.06%)</title><rect x="82.6845%" y="1909" width="0.0610%" height="15" fill="rgb(235,94,13)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (47 samples, 0.06%)</title><rect x="82.6845%" y="1893" width="0.0610%" height="15" fill="rgb(247,143,5)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1903.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (47 samples, 0.06%)</title><rect x="82.6845%" y="1877" width="0.0610%" height="15" fill="rgb(212,59,54)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1887.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (47 samples, 0.06%)</title><rect x="82.6845%" y="1861" width="0.0610%" height="15" fill="rgb(206,121,24)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1871.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (47 samples, 0.06%)</title><rect x="82.6845%" y="1845" width="0.0610%" height="15" fill="rgb(235,38,8)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1855.50"></text></g><g><title>core::ops::function::FnOnce::call_once (47 samples, 0.06%)</title><rect x="82.6845%" y="1829" width="0.0610%" height="15" fill="rgb(227,102,26)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1839.50"></text></g><g><title>core::ops::function::FnOnce::call_once (47 samples, 0.06%)</title><rect x="82.6845%" y="1813" width="0.0610%" height="15" fill="rgb(240,183,46)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1823.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (47 samples, 0.06%)</title><rect x="82.6845%" y="1797" width="0.0610%" height="15" fill="rgb(208,177,23)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1807.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (47 samples, 0.06%)</title><rect x="82.6845%" y="1781" width="0.0610%" height="15" fill="rgb(216,152,5)" fg:x="63677" fg:w="47"/><text x="82.9345%" y="1791.50"></text></g><g><title>move_compiler::command_line::compiler::run (41 samples, 0.05%)</title><rect x="82.6923%" y="1765" width="0.0532%" height="15" fill="rgb(238,199,2)" fg:x="63683" fg:w="41"/><text x="82.9423%" y="1775.50"></text></g><g><title>aptos_language_e2e_tests::compile::compile_source_module (48 samples, 0.06%)</title><rect x="82.6845%" y="2005" width="0.0623%" height="15" fill="rgb(235,142,28)" fg:x="63677" fg:w="48"/><text x="82.9345%" y="2015.50"></text></g><g><title>move_compiler::command_line::compiler::run (22 samples, 0.03%)</title><rect x="82.7585%" y="1925" width="0.0286%" height="15" fill="rgb(225,97,25)" fg:x="63734" fg:w="22"/><text x="83.0085%" y="1935.50"></text></g><g><title>move_compiler::command_line::compiler::run (22 samples, 0.03%)</title><rect x="82.7585%" y="1909" width="0.0286%" height="15" fill="rgb(208,75,46)" fg:x="63734" fg:w="22"/><text x="83.0085%" y="1919.50"></text></g><g><title>move_compiler::command_line::compiler::run (17 samples, 0.02%)</title><rect x="82.7650%" y="1893" width="0.0221%" height="15" fill="rgb(240,136,15)" fg:x="63739" fg:w="17"/><text x="83.0150%" y="1903.50"></text></g><g><title>move_compiler::command_line::compiler::run (14 samples, 0.02%)</title><rect x="82.7689%" y="1877" width="0.0182%" height="15" fill="rgb(235,36,27)" fg:x="63742" fg:w="14"/><text x="83.0189%" y="1887.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.03%)</title><rect x="82.7559%" y="2005" width="0.0325%" height="15" fill="rgb(231,132,23)" fg:x="63732" fg:w="25"/><text x="83.0059%" y="2015.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (25 samples, 0.03%)</title><rect x="82.7559%" y="1989" width="0.0325%" height="15" fill="rgb(205,208,20)" fg:x="63732" fg:w="25"/><text x="83.0059%" y="1999.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (25 samples, 0.03%)</title><rect x="82.7559%" y="1973" width="0.0325%" height="15" fill="rgb(215,26,40)" fg:x="63732" fg:w="25"/><text x="83.0059%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::run (24 samples, 0.03%)</title><rect x="82.7572%" y="1957" width="0.0312%" height="15" fill="rgb(238,183,34)" fg:x="63733" fg:w="24"/><text x="83.0072%" y="1967.50"></text></g><g><title>move_compiler::command_line::compiler::run (23 samples, 0.03%)</title><rect x="82.7585%" y="1941" width="0.0299%" height="15" fill="rgb(207,96,10)" fg:x="63734" fg:w="23"/><text x="83.0085%" y="1951.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (10 samples, 0.01%)</title><rect x="82.7910%" y="1333" width="0.0130%" height="15" fill="rgb(218,88,6)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1343.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (10 samples, 0.01%)</title><rect x="82.7910%" y="1317" width="0.0130%" height="15" fill="rgb(217,22,49)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1327.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (10 samples, 0.01%)</title><rect x="82.7910%" y="1301" width="0.0130%" height="15" fill="rgb(240,195,14)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1311.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (10 samples, 0.01%)</title><rect x="82.7910%" y="1285" width="0.0130%" height="15" fill="rgb(229,48,27)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1295.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (10 samples, 0.01%)</title><rect x="82.7910%" y="1269" width="0.0130%" height="15" fill="rgb(220,194,45)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.01%)</title><rect x="82.7910%" y="1253" width="0.0130%" height="15" fill="rgb(252,60,20)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.01%)</title><rect x="82.7910%" y="1237" width="0.0130%" height="15" fill="rgb(244,169,33)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1247.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (10 samples, 0.01%)</title><rect x="82.7910%" y="1221" width="0.0130%" height="15" fill="rgb(234,141,34)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1231.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (10 samples, 0.01%)</title><rect x="82.7910%" y="1205" width="0.0130%" height="15" fill="rgb(241,141,9)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1215.50"></text></g><g><title>bcs::ser::serialize_into (10 samples, 0.01%)</title><rect x="82.7910%" y="1189" width="0.0130%" height="15" fill="rgb(246,27,36)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.01%)</title><rect x="82.7910%" y="1173" width="0.0130%" height="15" fill="rgb(216,188,42)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1183.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (10 samples, 0.01%)</title><rect x="82.7910%" y="1157" width="0.0130%" height="15" fill="rgb(234,205,22)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1167.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (10 samples, 0.01%)</title><rect x="82.7910%" y="1141" width="0.0130%" height="15" fill="rgb(210,202,32)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1151.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (10 samples, 0.01%)</title><rect x="82.7910%" y="1125" width="0.0130%" height="15" fill="rgb(217,0,48)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1135.50"></text></g><g><title>serde_bytes::serialize (10 samples, 0.01%)</title><rect x="82.7910%" y="1109" width="0.0130%" height="15" fill="rgb(207,115,37)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (10 samples, 0.01%)</title><rect x="82.7910%" y="1093" width="0.0130%" height="15" fill="rgb(237,221,44)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1103.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (10 samples, 0.01%)</title><rect x="82.7910%" y="1077" width="0.0130%" height="15" fill="rgb(249,78,2)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1087.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.01%)</title><rect x="82.7910%" y="1061" width="0.0130%" height="15" fill="rgb(211,169,23)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1071.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionWithDataHasher as std::io::Write&gt;::write (10 samples, 0.01%)</title><rect x="82.7910%" y="1045" width="0.0130%" height="15" fill="rgb(207,116,29)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1055.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (10 samples, 0.01%)</title><rect x="82.7910%" y="1029" width="0.0130%" height="15" fill="rgb(240,84,33)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1039.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.01%)</title><rect x="82.7910%" y="1013" width="0.0130%" height="15" fill="rgb(229,224,31)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1023.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.01%)</title><rect x="82.7910%" y="997" width="0.0130%" height="15" fill="rgb(227,90,31)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="1007.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (10 samples, 0.01%)</title><rect x="82.7910%" y="981" width="0.0130%" height="15" fill="rgb(249,22,41)" fg:x="63759" fg:w="10"/><text x="83.0410%" y="991.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (17 samples, 0.02%)</title><rect x="82.8118%" y="1173" width="0.0221%" height="15" fill="rgb(239,65,11)" fg:x="63775" fg:w="17"/><text x="83.0618%" y="1183.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (10 samples, 0.01%)</title><rect x="82.8209%" y="1157" width="0.0130%" height="15" fill="rgb(205,5,23)" fg:x="63782" fg:w="10"/><text x="83.0709%" y="1167.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (18 samples, 0.02%)</title><rect x="82.8118%" y="1189" width="0.0234%" height="15" fill="rgb(254,78,52)" fg:x="63775" fg:w="18"/><text x="83.0618%" y="1199.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (26 samples, 0.03%)</title><rect x="82.8118%" y="1205" width="0.0338%" height="15" fill="rgb(214,156,33)" fg:x="63775" fg:w="26"/><text x="83.0618%" y="1215.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (8 samples, 0.01%)</title><rect x="82.8351%" y="1189" width="0.0104%" height="15" fill="rgb(208,20,30)" fg:x="63793" fg:w="8"/><text x="83.0851%" y="1199.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (46 samples, 0.06%)</title><rect x="82.7910%" y="1349" width="0.0597%" height="15" fill="rgb(223,133,18)" fg:x="63759" fg:w="46"/><text x="83.0410%" y="1359.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (30 samples, 0.04%)</title><rect x="82.8118%" y="1333" width="0.0390%" height="15" fill="rgb(222,91,41)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.04%)</title><rect x="82.8118%" y="1317" width="0.0390%" height="15" fill="rgb(247,137,48)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1327.50"></text></g><g><title>std::panicking::try (30 samples, 0.04%)</title><rect x="82.8118%" y="1301" width="0.0390%" height="15" fill="rgb(239,156,11)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.04%)</title><rect x="82.8118%" y="1285" width="0.0390%" height="15" fill="rgb(244,56,26)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1295.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (30 samples, 0.04%)</title><rect x="82.8118%" y="1269" width="0.0390%" height="15" fill="rgb(205,131,49)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1279.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (30 samples, 0.04%)</title><rect x="82.8118%" y="1253" width="0.0390%" height="15" fill="rgb(224,0,2)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (30 samples, 0.04%)</title><rect x="82.8118%" y="1237" width="0.0390%" height="15" fill="rgb(247,59,36)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1247.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (30 samples, 0.04%)</title><rect x="82.8118%" y="1221" width="0.0390%" height="15" fill="rgb(215,4,47)" fg:x="63775" fg:w="30"/><text x="83.0618%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (59 samples, 0.08%)</title><rect x="82.7884%" y="1429" width="0.0766%" height="15" fill="rgb(242,72,42)" fg:x="63757" fg:w="59"/><text x="83.0384%" y="1439.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (59 samples, 0.08%)</title><rect x="82.7884%" y="1413" width="0.0766%" height="15" fill="rgb(232,145,44)" fg:x="63757" fg:w="59"/><text x="83.0384%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (58 samples, 0.08%)</title><rect x="82.7897%" y="1397" width="0.0753%" height="15" fill="rgb(205,108,43)" fg:x="63758" fg:w="58"/><text x="83.0397%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (58 samples, 0.08%)</title><rect x="82.7897%" y="1381" width="0.0753%" height="15" fill="rgb(215,190,17)" fg:x="63758" fg:w="58"/><text x="83.0397%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (58 samples, 0.08%)</title><rect x="82.7897%" y="1365" width="0.0753%" height="15" fill="rgb(223,90,34)" fg:x="63758" fg:w="58"/><text x="83.0397%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (11 samples, 0.01%)</title><rect x="82.8507%" y="1349" width="0.0143%" height="15" fill="rgb(216,25,0)" fg:x="63805" fg:w="11"/><text x="83.1007%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (64 samples, 0.08%)</title><rect x="82.7884%" y="1461" width="0.0831%" height="15" fill="rgb(223,51,28)" fg:x="63757" fg:w="64"/><text x="83.0384%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (64 samples, 0.08%)</title><rect x="82.7884%" y="1445" width="0.0831%" height="15" fill="rgb(227,131,7)" fg:x="63757" fg:w="64"/><text x="83.0384%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (11 samples, 0.01%)</title><rect x="82.8715%" y="1413" width="0.0143%" height="15" fill="rgb(216,72,36)" fg:x="63821" fg:w="11"/><text x="83.1215%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (11 samples, 0.01%)</title><rect x="82.8715%" y="1397" width="0.0143%" height="15" fill="rgb(243,158,40)" fg:x="63821" fg:w="11"/><text x="83.1215%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (8 samples, 0.01%)</title><rect x="82.8754%" y="1381" width="0.0104%" height="15" fill="rgb(218,60,54)" fg:x="63824" fg:w="8"/><text x="83.1254%" y="1391.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (84 samples, 0.11%)</title><rect x="82.7884%" y="1557" width="0.1091%" height="15" fill="rgb(230,15,46)" fg:x="63757" fg:w="84"/><text x="83.0384%" y="1567.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (84 samples, 0.11%)</title><rect x="82.7884%" y="1541" width="0.1091%" height="15" fill="rgb(250,22,26)" fg:x="63757" fg:w="84"/><text x="83.0384%" y="1551.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (84 samples, 0.11%)</title><rect x="82.7884%" y="1525" width="0.1091%" height="15" fill="rgb(239,194,40)" fg:x="63757" fg:w="84"/><text x="83.0384%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (84 samples, 0.11%)</title><rect x="82.7884%" y="1509" width="0.1091%" height="15" fill="rgb(219,62,9)" fg:x="63757" fg:w="84"/><text x="83.0384%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (84 samples, 0.11%)</title><rect x="82.7884%" y="1493" width="0.1091%" height="15" fill="rgb(228,45,21)" fg:x="63757" fg:w="84"/><text x="83.0384%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (84 samples, 0.11%)</title><rect x="82.7884%" y="1477" width="0.1091%" height="15" fill="rgb(242,56,44)" fg:x="63757" fg:w="84"/><text x="83.0384%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (20 samples, 0.03%)</title><rect x="82.8715%" y="1461" width="0.0260%" height="15" fill="rgb(239,170,14)" fg:x="63821" fg:w="20"/><text x="83.1215%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (20 samples, 0.03%)</title><rect x="82.8715%" y="1445" width="0.0260%" height="15" fill="rgb(236,150,13)" fg:x="63821" fg:w="20"/><text x="83.1215%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (20 samples, 0.03%)</title><rect x="82.8715%" y="1429" width="0.0260%" height="15" fill="rgb(228,15,30)" fg:x="63821" fg:w="20"/><text x="83.1215%" y="1439.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (87 samples, 0.11%)</title><rect x="82.7884%" y="1765" width="0.1130%" height="15" fill="rgb(217,43,28)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1775.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (87 samples, 0.11%)</title><rect x="82.7884%" y="1749" width="0.1130%" height="15" fill="rgb(246,223,1)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1759.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (87 samples, 0.11%)</title><rect x="82.7884%" y="1733" width="0.1130%" height="15" fill="rgb(247,103,7)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1743.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (87 samples, 0.11%)</title><rect x="82.7884%" y="1717" width="0.1130%" height="15" fill="rgb(205,105,39)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (87 samples, 0.11%)</title><rect x="82.7884%" y="1701" width="0.1130%" height="15" fill="rgb(216,134,18)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (87 samples, 0.11%)</title><rect x="82.7884%" y="1685" width="0.1130%" height="15" fill="rgb(226,139,50)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1695.50"></text></g><g><title>std::panicking::try (87 samples, 0.11%)</title><rect x="82.7884%" y="1669" width="0.1130%" height="15" fill="rgb(251,152,38)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (87 samples, 0.11%)</title><rect x="82.7884%" y="1653" width="0.1130%" height="15" fill="rgb(222,63,15)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (87 samples, 0.11%)</title><rect x="82.7884%" y="1637" width="0.1130%" height="15" fill="rgb(212,198,28)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1647.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (87 samples, 0.11%)</title><rect x="82.7884%" y="1621" width="0.1130%" height="15" fill="rgb(216,93,38)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1631.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (87 samples, 0.11%)</title><rect x="82.7884%" y="1605" width="0.1130%" height="15" fill="rgb(247,202,44)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1615.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (87 samples, 0.11%)</title><rect x="82.7884%" y="1589" width="0.1130%" height="15" fill="rgb(237,204,46)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1599.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (87 samples, 0.11%)</title><rect x="82.7884%" y="1573" width="0.1130%" height="15" fill="rgb(224,98,48)" fg:x="63757" fg:w="87"/><text x="83.0384%" y="1583.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (94 samples, 0.12%)</title><rect x="82.7884%" y="2005" width="0.1221%" height="15" fill="rgb(247,105,21)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="2015.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (94 samples, 0.12%)</title><rect x="82.7884%" y="1989" width="0.1221%" height="15" fill="rgb(212,137,52)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1999.50"></text></g><g><title>std::panic::catch_unwind (94 samples, 0.12%)</title><rect x="82.7884%" y="1973" width="0.1221%" height="15" fill="rgb(223,76,33)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1983.50"></text></g><g><title>std::panicking::try (94 samples, 0.12%)</title><rect x="82.7884%" y="1957" width="0.1221%" height="15" fill="rgb(209,156,27)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1967.50"></text></g><g><title>std::panicking::try::do_call (94 samples, 0.12%)</title><rect x="82.7884%" y="1941" width="0.1221%" height="15" fill="rgb(249,81,54)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1951.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (94 samples, 0.12%)</title><rect x="82.7884%" y="1925" width="0.1221%" height="15" fill="rgb(241,46,29)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1935.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (94 samples, 0.12%)</title><rect x="82.7884%" y="1909" width="0.1221%" height="15" fill="rgb(213,193,39)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1919.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (94 samples, 0.12%)</title><rect x="82.7884%" y="1893" width="0.1221%" height="15" fill="rgb(214,85,16)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1903.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (94 samples, 0.12%)</title><rect x="82.7884%" y="1877" width="0.1221%" height="15" fill="rgb(216,184,17)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1887.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (94 samples, 0.12%)</title><rect x="82.7884%" y="1861" width="0.1221%" height="15" fill="rgb(254,219,29)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1871.50"></text></g><g><title>rayon_core::registry::main_loop (94 samples, 0.12%)</title><rect x="82.7884%" y="1845" width="0.1221%" height="15" fill="rgb(209,148,34)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (94 samples, 0.12%)</title><rect x="82.7884%" y="1829" width="0.1221%" height="15" fill="rgb(253,215,11)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1839.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (94 samples, 0.12%)</title><rect x="82.7884%" y="1813" width="0.1221%" height="15" fill="rgb(232,126,20)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1823.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (94 samples, 0.12%)</title><rect x="82.7884%" y="1797" width="0.1221%" height="15" fill="rgb(248,118,51)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1807.50"></text></g><g><title>rayon_core::job::JobRef::execute (94 samples, 0.12%)</title><rect x="82.7884%" y="1781" width="0.1221%" height="15" fill="rgb(226,121,21)" fg:x="63757" fg:w="94"/><text x="83.0384%" y="1791.50"></text></g><g><title>move_compiler::cfgir::liveness::analyze (9 samples, 0.01%)</title><rect x="82.9507%" y="1477" width="0.0117%" height="15" fill="rgb(216,128,16)" fg:x="63882" fg:w="9"/><text x="83.2007%" y="1487.50"></text></g><g><title>move_compiler::cfgir::absint::AbstractInterpreter::analyze_function (8 samples, 0.01%)</title><rect x="82.9520%" y="1461" width="0.0104%" height="15" fill="rgb(205,17,9)" fg:x="63883" fg:w="8"/><text x="83.2020%" y="1471.50"></text></g><g><title>move_compiler::cfgir::absint::AbstractInterpreter::execute_block (8 samples, 0.01%)</title><rect x="82.9520%" y="1445" width="0.0104%" height="15" fill="rgb(206,197,21)" fg:x="63883" fg:w="8"/><text x="83.2020%" y="1455.50"></text></g><g><title>move_compiler::cfgir::liveness::last_usage (11 samples, 0.01%)</title><rect x="82.9507%" y="1493" width="0.0143%" height="15" fill="rgb(212,202,9)" fg:x="63882" fg:w="11"/><text x="83.2007%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (31 samples, 0.04%)</title><rect x="82.9325%" y="1653" width="0.0403%" height="15" fill="rgb(241,131,50)" fg:x="63868" fg:w="31"/><text x="83.1825%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (31 samples, 0.04%)</title><rect x="82.9325%" y="1637" width="0.0403%" height="15" fill="rgb(228,115,51)" fg:x="63868" fg:w="31"/><text x="83.1825%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.04%)</title><rect x="82.9325%" y="1621" width="0.0403%" height="15" fill="rgb(237,209,8)" fg:x="63868" fg:w="31"/><text x="83.1825%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 0.04%)</title><rect x="82.9325%" y="1605" width="0.0403%" height="15" fill="rgb(241,121,28)" fg:x="63868" fg:w="31"/><text x="83.1825%" y="1615.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (31 samples, 0.04%)</title><rect x="82.9325%" y="1589" width="0.0403%" height="15" fill="rgb(238,194,51)" fg:x="63868" fg:w="31"/><text x="83.1825%" y="1599.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map::{{closure}} (31 samples, 0.04%)</title><rect x="82.9325%" y="1573" width="0.0403%" height="15" fill="rgb(208,41,39)" fg:x="63868" fg:w="31"/><text x="83.1825%" y="1583.50"></text></g><g><title>move_compiler::cfgir::translate::module::{{closure}} (31 samples, 0.04%)</title><rect x="82.9325%" y="1557" width="0.0403%" height="15" fill="rgb(223,95,44)" fg:x="63868" fg:w="31"/><text x="83.1825%" y="1567.50"></text></g><g><title>move_compiler::cfgir::translate::function (30 samples, 0.04%)</title><rect x="82.9338%" y="1541" width="0.0390%" height="15" fill="rgb(253,98,40)" fg:x="63869" fg:w="30"/><text x="83.1838%" y="1551.50"></text></g><g><title>move_compiler::cfgir::translate::function_body (30 samples, 0.04%)</title><rect x="82.9338%" y="1525" width="0.0390%" height="15" fill="rgb(210,5,12)" fg:x="63869" fg:w="30"/><text x="83.1838%" y="1535.50"></text></g><g><title>move_compiler::cfgir::refine_inference_and_verify (24 samples, 0.03%)</title><rect x="82.9416%" y="1509" width="0.0312%" height="15" fill="rgb(233,201,23)" fg:x="63875" fg:w="24"/><text x="83.1916%" y="1519.50"></text></g><g><title>move_compiler::cfgir::translate::program (34 samples, 0.04%)</title><rect x="82.9325%" y="1893" width="0.0441%" height="15" fill="rgb(251,68,15)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1903.50"></text></g><g><title>move_compiler::cfgir::translate::modules (34 samples, 0.04%)</title><rect x="82.9325%" y="1877" width="0.0441%" height="15" fill="rgb(243,10,46)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1887.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::maybe_from_iter (34 samples, 0.04%)</title><rect x="82.9325%" y="1861" width="0.0441%" height="15" fill="rgb(253,130,44)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.04%)</title><rect x="82.9325%" y="1845" width="0.0441%" height="15" fill="rgb(244,5,26)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.04%)</title><rect x="82.9325%" y="1829" width="0.0441%" height="15" fill="rgb(220,126,20)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1839.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (34 samples, 0.04%)</title><rect x="82.9325%" y="1813" width="0.0441%" height="15" fill="rgb(212,188,29)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1823.50"></text></g><g><title>move_compiler::cfgir::translate::modules::{{closure}} (34 samples, 0.04%)</title><rect x="82.9325%" y="1797" width="0.0441%" height="15" fill="rgb(227,194,48)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1807.50"></text></g><g><title>move_compiler::cfgir::translate::module (34 samples, 0.04%)</title><rect x="82.9325%" y="1781" width="0.0441%" height="15" fill="rgb(245,64,28)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1791.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map (34 samples, 0.04%)</title><rect x="82.9325%" y="1765" width="0.0441%" height="15" fill="rgb(205,44,7)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.04%)</title><rect x="82.9325%" y="1749" width="0.0441%" height="15" fill="rgb(213,193,11)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (34 samples, 0.04%)</title><rect x="82.9325%" y="1733" width="0.0441%" height="15" fill="rgb(238,157,6)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.04%)</title><rect x="82.9325%" y="1717" width="0.0441%" height="15" fill="rgb(222,73,7)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34 samples, 0.04%)</title><rect x="82.9325%" y="1701" width="0.0441%" height="15" fill="rgb(224,78,15)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.04%)</title><rect x="82.9325%" y="1685" width="0.0441%" height="15" fill="rgb(218,149,46)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34 samples, 0.04%)</title><rect x="82.9325%" y="1669" width="0.0441%" height="15" fill="rgb(218,175,44)" fg:x="63868" fg:w="34"/><text x="83.1825%" y="1679.50"></text></g><g><title>move_compiler::command_line::compiler::run (55 samples, 0.07%)</title><rect x="82.9325%" y="1909" width="0.0714%" height="15" fill="rgb(215,183,45)" fg:x="63868" fg:w="55"/><text x="83.1825%" y="1919.50"></text></g><g><title>move_compiler::command_line::compiler::run (16 samples, 0.02%)</title><rect x="82.9832%" y="1893" width="0.0208%" height="15" fill="rgb(226,116,37)" fg:x="63907" fg:w="16"/><text x="83.2332%" y="1903.50"></text></g><g><title>move_compiler::to_bytecode::translate::program (11 samples, 0.01%)</title><rect x="82.9897%" y="1877" width="0.0143%" height="15" fill="rgb(252,224,12)" fg:x="63912" fg:w="11"/><text x="83.2397%" y="1887.50"></text></g><g><title>move_compiler::to_bytecode::translate::module (11 samples, 0.01%)</title><rect x="82.9897%" y="1861" width="0.0143%" height="15" fill="rgb(232,212,21)" fg:x="63912" fg:w="11"/><text x="83.2397%" y="1871.50"></text></g><g><title>move_compiler::command_line::compiler::run (63 samples, 0.08%)</title><rect x="82.9234%" y="1941" width="0.0818%" height="15" fill="rgb(226,191,16)" fg:x="63861" fg:w="63"/><text x="83.1734%" y="1951.50"></text></g><g><title>move_compiler::command_line::compiler::run (60 samples, 0.08%)</title><rect x="82.9273%" y="1925" width="0.0779%" height="15" fill="rgb(231,156,11)" fg:x="63864" fg:w="60"/><text x="83.1773%" y="1935.50"></text></g><g><title>move_compiler::command_line::compiler::run (65 samples, 0.08%)</title><rect x="82.9221%" y="1957" width="0.0844%" height="15" fill="rgb(225,134,49)" fg:x="63860" fg:w="65"/><text x="83.1721%" y="1967.50"></text></g><g><title>move_compiler::command_line::compiler::run (68 samples, 0.09%)</title><rect x="82.9195%" y="1973" width="0.0883%" height="15" fill="rgb(254,55,32)" fg:x="63858" fg:w="68"/><text x="83.1695%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (69 samples, 0.09%)</title><rect x="82.9195%" y="2005" width="0.0896%" height="15" fill="rgb(242,195,29)" fg:x="63858" fg:w="69"/><text x="83.1695%" y="2015.50"></text></g><g><title>move_compiler::command_line::compiler::run (69 samples, 0.09%)</title><rect x="82.9195%" y="1989" width="0.0896%" height="15" fill="rgb(210,155,20)" fg:x="63858" fg:w="69"/><text x="83.1695%" y="1999.50"></text></g><g><title>move_compiler::command_line::compiler::run (16 samples, 0.02%)</title><rect x="83.0364%" y="1925" width="0.0208%" height="15" fill="rgb(243,170,23)" fg:x="63948" fg:w="16"/><text x="83.2864%" y="1935.50"></text></g><g><title>move_compiler::command_line::compiler::run (24 samples, 0.03%)</title><rect x="83.0286%" y="1941" width="0.0312%" height="15" fill="rgb(242,197,51)" fg:x="63942" fg:w="24"/><text x="83.2786%" y="1951.50"></text></g><g><title>move_compiler::command_line::compiler::run (35 samples, 0.05%)</title><rect x="83.0208%" y="1957" width="0.0454%" height="15" fill="rgb(248,48,13)" fg:x="63936" fg:w="35"/><text x="83.2708%" y="1967.50"></text></g><g><title>move_compiler::command_line::compiler::run (42 samples, 0.05%)</title><rect x="83.0143%" y="1973" width="0.0545%" height="15" fill="rgb(221,185,15)" fg:x="63931" fg:w="42"/><text x="83.2643%" y="1983.50"></text></g><g><title>move_compiler::command_line::compiler::run (46 samples, 0.06%)</title><rect x="83.0104%" y="1989" width="0.0597%" height="15" fill="rgb(244,49,7)" fg:x="63928" fg:w="46"/><text x="83.2604%" y="1999.50"></text></g><g><title>move_compiler::command_line::compiler::run (50 samples, 0.06%)</title><rect x="83.0091%" y="2005" width="0.0649%" height="15" fill="rgb(213,182,52)" fg:x="63927" fg:w="50"/><text x="83.2591%" y="2015.50"></text></g><g><title>move_compiler::expansion::translate::definition (8 samples, 0.01%)</title><rect x="83.0741%" y="2005" width="0.0104%" height="15" fill="rgb(209,15,45)" fg:x="63977" fg:w="8"/><text x="83.3241%" y="2015.50"></text></g><g><title>move_compiler::expansion::translate::module (8 samples, 0.01%)</title><rect x="83.0741%" y="1989" width="0.0104%" height="15" fill="rgb(233,23,44)" fg:x="63977" fg:w="8"/><text x="83.3241%" y="1999.50"></text></g><g><title>move_compiler::expansion::translate::module_ (8 samples, 0.01%)</title><rect x="83.0741%" y="1973" width="0.0104%" height="15" fill="rgb(220,182,30)" fg:x="63977" fg:w="8"/><text x="83.3241%" y="1983.50"></text></g><g><title>move_compiler::hlir::translate::exp_::exp_loop (19 samples, 0.02%)</title><rect x="83.0961%" y="2005" width="0.0247%" height="15" fill="rgb(219,116,33)" fg:x="63994" fg:w="19"/><text x="83.3461%" y="2015.50"></text></g><g><title>move_compiler::hlir::translate::exp_impl (19 samples, 0.02%)</title><rect x="83.0961%" y="1989" width="0.0247%" height="15" fill="rgb(231,15,21)" fg:x="63994" fg:w="19"/><text x="83.3461%" y="1999.50"></text></g><g><title>move_compiler::to_bytecode::translate::function_body (17 samples, 0.02%)</title><rect x="83.1624%" y="1797" width="0.0221%" height="15" fill="rgb(238,119,25)" fg:x="64045" fg:w="17"/><text x="83.4124%" y="1807.50"></text></g><g><title>move_compiler::to_bytecode::translate::command (9 samples, 0.01%)</title><rect x="83.1728%" y="1781" width="0.0117%" height="15" fill="rgb(232,30,39)" fg:x="64053" fg:w="9"/><text x="83.4228%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 0.02%)</title><rect x="83.1624%" y="1909" width="0.0234%" height="15" fill="rgb(241,26,30)" fg:x="64045" fg:w="18"/><text x="83.4124%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (18 samples, 0.02%)</title><rect x="83.1624%" y="1893" width="0.0234%" height="15" fill="rgb(234,154,4)" fg:x="64045" fg:w="18"/><text x="83.4124%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="83.1624%" y="1877" width="0.0234%" height="15" fill="rgb(229,199,39)" fg:x="64045" fg:w="18"/><text x="83.4124%" y="1887.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="83.1624%" y="1861" width="0.0234%" height="15" fill="rgb(236,213,10)" fg:x="64045" fg:w="18"/><text x="83.4124%" y="1871.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18 samples, 0.02%)</title><rect x="83.1624%" y="1845" width="0.0234%" height="15" fill="rgb(247,28,19)" fg:x="64045" fg:w="18"/><text x="83.4124%" y="1855.50"></text></g><g><title>move_compiler::to_bytecode::translate::module::{{closure}} (18 samples, 0.02%)</title><rect x="83.1624%" y="1829" width="0.0234%" height="15" fill="rgb(239,199,24)" fg:x="64045" fg:w="18"/><text x="83.4124%" y="1839.50"></text></g><g><title>move_compiler::to_bytecode::translate::function (18 samples, 0.02%)</title><rect x="83.1624%" y="1813" width="0.0234%" height="15" fill="rgb(246,122,13)" fg:x="64045" fg:w="18"/><text x="83.4124%" y="1823.50"></text></g><g><title>move_compiler::to_bytecode::translate::program (21 samples, 0.03%)</title><rect x="83.1611%" y="2005" width="0.0273%" height="15" fill="rgb(210,203,29)" fg:x="64044" fg:w="21"/><text x="83.4111%" y="2015.50"></text></g><g><title>move_compiler::to_bytecode::translate::module (20 samples, 0.03%)</title><rect x="83.1624%" y="1989" width="0.0260%" height="15" fill="rgb(218,4,50)" fg:x="64045" fg:w="20"/><text x="83.4124%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="83.1624%" y="1973" width="0.0260%" height="15" fill="rgb(236,142,48)" fg:x="64045" fg:w="20"/><text x="83.4124%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="83.1624%" y="1957" width="0.0260%" height="15" fill="rgb(245,173,2)" fg:x="64045" fg:w="20"/><text x="83.4124%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="83.1624%" y="1941" width="0.0260%" height="15" fill="rgb(244,196,18)" fg:x="64045" fg:w="20"/><text x="83.4124%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="83.1624%" y="1925" width="0.0260%" height="15" fill="rgb(221,27,33)" fg:x="64045" fg:w="20"/><text x="83.4124%" y="1935.50"></text></g><g><title>move_compiler::typing::translate::exp_inner (12 samples, 0.02%)</title><rect x="83.1922%" y="2005" width="0.0156%" height="15" fill="rgb(210,206,16)" fg:x="64068" fg:w="12"/><text x="83.4422%" y="2015.50"></text></g><g><title>move_compiler::typing::translate::module (8 samples, 0.01%)</title><rect x="83.2156%" y="2005" width="0.0104%" height="15" fill="rgb(238,161,34)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="2015.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map (8 samples, 0.01%)</title><rect x="83.2156%" y="1989" width="0.0104%" height="15" fill="rgb(243,118,39)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="83.2156%" y="1973" width="0.0104%" height="15" fill="rgb(234,126,9)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="83.2156%" y="1957" width="0.0104%" height="15" fill="rgb(234,167,42)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="83.2156%" y="1941" width="0.0104%" height="15" fill="rgb(238,54,48)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="83.2156%" y="1925" width="0.0104%" height="15" fill="rgb(226,105,2)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="83.2156%" y="1909" width="0.0104%" height="15" fill="rgb(223,95,23)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="83.2156%" y="1893" width="0.0104%" height="15" fill="rgb(249,212,19)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="83.2156%" y="1877" width="0.0104%" height="15" fill="rgb(234,158,54)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.01%)</title><rect x="83.2156%" y="1861" width="0.0104%" height="15" fill="rgb(247,114,32)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="83.2156%" y="1845" width="0.0104%" height="15" fill="rgb(250,68,44)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="83.2156%" y="1829" width="0.0104%" height="15" fill="rgb(242,3,15)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1839.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.01%)</title><rect x="83.2156%" y="1813" width="0.0104%" height="15" fill="rgb(223,110,32)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1823.50"></text></g><g><title>move_compiler::shared::unique_map::UniqueMap&lt;K,V&gt;::map::{{closure}} (8 samples, 0.01%)</title><rect x="83.2156%" y="1797" width="0.0104%" height="15" fill="rgb(216,26,54)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1807.50"></text></g><g><title>move_compiler::typing::translate::module::{{closure}} (8 samples, 0.01%)</title><rect x="83.2156%" y="1781" width="0.0104%" height="15" fill="rgb(209,145,42)" fg:x="64086" fg:w="8"/><text x="83.4656%" y="1791.50"></text></g><g><title>move_compiler::typing::translate::sequence (9 samples, 0.01%)</title><rect x="83.2273%" y="2005" width="0.0117%" height="15" fill="rgb(240,111,53)" fg:x="64095" fg:w="9"/><text x="83.4773%" y="2015.50"></text></g><g><title>move_compiler::typing::translate::exp_ (9 samples, 0.01%)</title><rect x="83.2273%" y="1989" width="0.0117%" height="15" fill="rgb(209,101,4)" fg:x="64095" fg:w="9"/><text x="83.4773%" y="1999.50"></text></g><g><title>move_compiler::typing::translate::exp_::exp_loop (9 samples, 0.01%)</title><rect x="83.2273%" y="1973" width="0.0117%" height="15" fill="rgb(231,74,29)" fg:x="64095" fg:w="9"/><text x="83.4773%" y="1983.50"></text></g><g><title>move_compiler::typing::translate::exp_inner (9 samples, 0.01%)</title><rect x="83.2273%" y="1957" width="0.0117%" height="15" fill="rgb(223,12,12)" fg:x="64095" fg:w="9"/><text x="83.4773%" y="1967.50"></text></g><g><title>move_compiler::typing::translate::module_call (8 samples, 0.01%)</title><rect x="83.2286%" y="1941" width="0.0104%" height="15" fill="rgb(207,162,2)" fg:x="64096" fg:w="8"/><text x="83.4786%" y="1951.50"></text></g><g><title>move_compiler::command_line::compiler::run (9 samples, 0.01%)</title><rect x="83.2455%" y="1845" width="0.0117%" height="15" fill="rgb(230,152,0)" fg:x="64109" fg:w="9"/><text x="83.4955%" y="1855.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (14 samples, 0.02%)</title><rect x="83.2403%" y="2005" width="0.0182%" height="15" fill="rgb(254,156,19)" fg:x="64105" fg:w="14"/><text x="83.4903%" y="2015.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (14 samples, 0.02%)</title><rect x="83.2403%" y="1989" width="0.0182%" height="15" fill="rgb(250,28,0)" fg:x="64105" fg:w="14"/><text x="83.4903%" y="1999.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (14 samples, 0.02%)</title><rect x="83.2403%" y="1973" width="0.0182%" height="15" fill="rgb(253,27,5)" fg:x="64105" fg:w="14"/><text x="83.4903%" y="1983.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.02%)</title><rect x="83.2403%" y="1957" width="0.0182%" height="15" fill="rgb(244,154,7)" fg:x="64105" fg:w="14"/><text x="83.4903%" y="1967.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.02%)</title><rect x="83.2403%" y="1941" width="0.0182%" height="15" fill="rgb(242,108,21)" fg:x="64105" fg:w="14"/><text x="83.4903%" y="1951.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (14 samples, 0.02%)</title><rect x="83.2403%" y="1925" width="0.0182%" height="15" fill="rgb(254,200,38)" fg:x="64105" fg:w="14"/><text x="83.4903%" y="1935.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (14 samples, 0.02%)</title><rect x="83.2403%" y="1909" width="0.0182%" height="15" fill="rgb(250,145,41)" fg:x="64105" fg:w="14"/><text x="83.4903%" y="1919.50"></text></g><g><title>move_compiler::command_line::compiler::run (12 samples, 0.02%)</title><rect x="83.2429%" y="1893" width="0.0156%" height="15" fill="rgb(235,136,31)" fg:x="64107" fg:w="12"/><text x="83.4929%" y="1903.50"></text></g><g><title>move_compiler::command_line::compiler::run (11 samples, 0.01%)</title><rect x="83.2442%" y="1877" width="0.0143%" height="15" fill="rgb(215,13,18)" fg:x="64108" fg:w="11"/><text x="83.4942%" y="1887.50"></text></g><g><title>move_compiler::command_line::compiler::run (11 samples, 0.01%)</title><rect x="83.2442%" y="1861" width="0.0143%" height="15" fill="rgb(238,199,12)" fg:x="64108" fg:w="11"/><text x="83.4942%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="83.2948%" y="1381" width="0.0104%" height="15" fill="rgb(242,179,49)" fg:x="64147" fg:w="8"/><text x="83.5448%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (22 samples, 0.03%)</title><rect x="83.2818%" y="1461" width="0.0286%" height="15" fill="rgb(214,10,44)" fg:x="64137" fg:w="22"/><text x="83.5318%" y="1471.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (21 samples, 0.03%)</title><rect x="83.2831%" y="1445" width="0.0273%" height="15" fill="rgb(229,181,11)" fg:x="64138" fg:w="21"/><text x="83.5331%" y="1455.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (21 samples, 0.03%)</title><rect x="83.2831%" y="1429" width="0.0273%" height="15" fill="rgb(244,155,10)" fg:x="64138" fg:w="21"/><text x="83.5331%" y="1439.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (20 samples, 0.03%)</title><rect x="83.2844%" y="1413" width="0.0260%" height="15" fill="rgb(254,13,48)" fg:x="64139" fg:w="20"/><text x="83.5344%" y="1423.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (20 samples, 0.03%)</title><rect x="83.2844%" y="1397" width="0.0260%" height="15" fill="rgb(210,164,6)" fg:x="64139" fg:w="20"/><text x="83.5344%" y="1407.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module (11 samples, 0.01%)</title><rect x="83.3182%" y="1365" width="0.0143%" height="15" fill="rgb(216,187,40)" fg:x="64165" fg:w="11"/><text x="83.5682%" y="1375.50"></text></g><g><title>move_bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (11 samples, 0.01%)</title><rect x="83.3182%" y="1349" width="0.0143%" height="15" fill="rgb(208,143,21)" fg:x="64165" fg:w="11"/><text x="83.5682%" y="1359.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (9 samples, 0.01%)</title><rect x="83.3325%" y="1333" width="0.0117%" height="15" fill="rgb(211,73,41)" fg:x="64176" fg:w="9"/><text x="83.5825%" y="1343.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (10 samples, 0.01%)</title><rect x="83.3325%" y="1365" width="0.0130%" height="15" fill="rgb(244,69,21)" fg:x="64176" fg:w="10"/><text x="83.5825%" y="1375.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (10 samples, 0.01%)</title><rect x="83.3325%" y="1349" width="0.0130%" height="15" fill="rgb(230,152,32)" fg:x="64176" fg:w="10"/><text x="83.5825%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (57 samples, 0.07%)</title><rect x="83.2818%" y="1493" width="0.0740%" height="15" fill="rgb(208,110,18)" fg:x="64137" fg:w="57"/><text x="83.5318%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (57 samples, 0.07%)</title><rect x="83.2818%" y="1477" width="0.0740%" height="15" fill="rgb(214,201,49)" fg:x="64137" fg:w="57"/><text x="83.5318%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (35 samples, 0.05%)</title><rect x="83.3104%" y="1461" width="0.0454%" height="15" fill="rgb(253,153,27)" fg:x="64159" fg:w="35"/><text x="83.5604%" y="1471.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (35 samples, 0.05%)</title><rect x="83.3104%" y="1445" width="0.0454%" height="15" fill="rgb(238,61,11)" fg:x="64159" fg:w="35"/><text x="83.5604%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.05%)</title><rect x="83.3104%" y="1429" width="0.0454%" height="15" fill="rgb(227,84,2)" fg:x="64159" fg:w="35"/><text x="83.5604%" y="1439.50"></text></g><g><title>std::panicking::try (35 samples, 0.05%)</title><rect x="83.3104%" y="1413" width="0.0454%" height="15" fill="rgb(233,52,8)" fg:x="64159" fg:w="35"/><text x="83.5604%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.05%)</title><rect x="83.3104%" y="1397" width="0.0454%" height="15" fill="rgb(209,136,13)" fg:x="64159" fg:w="35"/><text x="83.5604%" y="1407.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (35 samples, 0.05%)</title><rect x="83.3104%" y="1381" width="0.0454%" height="15" fill="rgb(229,86,25)" fg:x="64159" fg:w="35"/><text x="83.5604%" y="1391.50"></text></g><g><title>move_binary_format::deserializer::load_identifiers (8 samples, 0.01%)</title><rect x="83.3623%" y="1349" width="0.0104%" height="15" fill="rgb(235,47,16)" fg:x="64199" fg:w="8"/><text x="83.6123%" y="1359.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (19 samples, 0.02%)</title><rect x="83.3558%" y="1365" width="0.0247%" height="15" fill="rgb(231,186,4)" fg:x="64194" fg:w="19"/><text x="83.6058%" y="1375.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (13 samples, 0.02%)</title><rect x="83.3805%" y="1349" width="0.0169%" height="15" fill="rgb(209,213,23)" fg:x="64213" fg:w="13"/><text x="83.6305%" y="1359.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (13 samples, 0.02%)</title><rect x="83.3805%" y="1333" width="0.0169%" height="15" fill="rgb(212,142,47)" fg:x="64213" fg:w="13"/><text x="83.6305%" y="1343.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (13 samples, 0.02%)</title><rect x="83.3805%" y="1317" width="0.0169%" height="15" fill="rgb(251,86,24)" fg:x="64213" fg:w="13"/><text x="83.6305%" y="1327.50"></text></g><g><title>move_binary_format::deserializer::load_code (13 samples, 0.02%)</title><rect x="83.3805%" y="1301" width="0.0169%" height="15" fill="rgb(206,217,17)" fg:x="64213" fg:w="13"/><text x="83.6305%" y="1311.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (33 samples, 0.04%)</title><rect x="83.3558%" y="1381" width="0.0429%" height="15" fill="rgb(248,92,38)" fg:x="64194" fg:w="33"/><text x="83.6058%" y="1391.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (14 samples, 0.02%)</title><rect x="83.3805%" y="1365" width="0.0182%" height="15" fill="rgb(214,25,29)" fg:x="64213" fg:w="14"/><text x="83.6305%" y="1375.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (34 samples, 0.04%)</title><rect x="83.3558%" y="1477" width="0.0441%" height="15" fill="rgb(245,117,13)" fg:x="64194" fg:w="34"/><text x="83.6058%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.04%)</title><rect x="83.3558%" y="1461" width="0.0441%" height="15" fill="rgb(205,169,9)" fg:x="64194" fg:w="34"/><text x="83.6058%" y="1471.50"></text></g><g><title>std::panicking::try (34 samples, 0.04%)</title><rect x="83.3558%" y="1445" width="0.0441%" height="15" fill="rgb(223,134,38)" fg:x="64194" fg:w="34"/><text x="83.6058%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.04%)</title><rect x="83.3558%" y="1429" width="0.0441%" height="15" fill="rgb(249,129,49)" fg:x="64194" fg:w="34"/><text x="83.6058%" y="1439.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version::{{closure}} (34 samples, 0.04%)</title><rect x="83.3558%" y="1413" width="0.0441%" height="15" fill="rgb(229,157,45)" fg:x="64194" fg:w="34"/><text x="83.6058%" y="1423.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (34 samples, 0.04%)</title><rect x="83.3558%" y="1397" width="0.0441%" height="15" fill="rgb(232,159,11)" fg:x="64194" fg:w="34"/><text x="83.6058%" y="1407.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (22 samples, 0.03%)</title><rect x="83.4052%" y="1269" width="0.0286%" height="15" fill="rgb(230,134,26)" fg:x="64232" fg:w="22"/><text x="83.6552%" y="1279.50"></text></g><g><title>move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (9 samples, 0.01%)</title><rect x="83.4221%" y="1253" width="0.0117%" height="15" fill="rgb(234,149,40)" fg:x="64245" fg:w="9"/><text x="83.6721%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="83.4221%" y="1237" width="0.0117%" height="15" fill="rgb(221,122,15)" fg:x="64245" fg:w="9"/><text x="83.6721%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="83.4221%" y="1221" width="0.0117%" height="15" fill="rgb(228,127,0)" fg:x="64245" fg:w="9"/><text x="83.6721%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (85 samples, 0.11%)</title><rect x="83.3558%" y="1493" width="0.1104%" height="15" fill="rgb(248,37,7)" fg:x="64194" fg:w="85"/><text x="83.6058%" y="1503.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (51 samples, 0.07%)</title><rect x="83.4000%" y="1477" width="0.0662%" height="15" fill="rgb(215,140,49)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.07%)</title><rect x="83.4000%" y="1461" width="0.0662%" height="15" fill="rgb(236,65,39)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1471.50"></text></g><g><title>std::panicking::try (51 samples, 0.07%)</title><rect x="83.4000%" y="1445" width="0.0662%" height="15" fill="rgb(253,102,38)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.07%)</title><rect x="83.4000%" y="1429" width="0.0662%" height="15" fill="rgb(244,100,34)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1439.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (51 samples, 0.07%)</title><rect x="83.4000%" y="1413" width="0.0662%" height="15" fill="rgb(210,179,47)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1423.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (51 samples, 0.07%)</title><rect x="83.4000%" y="1397" width="0.0662%" height="15" fill="rgb(231,41,37)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1407.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (51 samples, 0.07%)</title><rect x="83.4000%" y="1381" width="0.0662%" height="15" fill="rgb(226,209,17)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1391.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (51 samples, 0.07%)</title><rect x="83.4000%" y="1365" width="0.0662%" height="15" fill="rgb(231,154,20)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1375.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (51 samples, 0.07%)</title><rect x="83.4000%" y="1349" width="0.0662%" height="15" fill="rgb(216,134,24)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1359.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (51 samples, 0.07%)</title><rect x="83.4000%" y="1333" width="0.0662%" height="15" fill="rgb(224,71,42)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1343.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (51 samples, 0.07%)</title><rect x="83.4000%" y="1317" width="0.0662%" height="15" fill="rgb(250,65,23)" fg:x="64228" fg:w="51"/><text x="83.6500%" y="1327.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (47 samples, 0.06%)</title><rect x="83.4052%" y="1301" width="0.0610%" height="15" fill="rgb(209,160,35)" fg:x="64232" fg:w="47"/><text x="83.6552%" y="1311.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (47 samples, 0.06%)</title><rect x="83.4052%" y="1285" width="0.0610%" height="15" fill="rgb(215,8,11)" fg:x="64232" fg:w="47"/><text x="83.6552%" y="1295.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (21 samples, 0.03%)</title><rect x="83.4389%" y="1269" width="0.0273%" height="15" fill="rgb(227,27,12)" fg:x="64258" fg:w="21"/><text x="83.6889%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="83.4714%" y="1333" width="0.0104%" height="15" fill="rgb(226,111,41)" fg:x="64283" fg:w="8"/><text x="83.7214%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.01%)</title><rect x="83.4714%" y="1317" width="0.0104%" height="15" fill="rgb(212,195,15)" fg:x="64283" fg:w="8"/><text x="83.7214%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="83.4714%" y="1461" width="0.0169%" height="15" fill="rgb(216,191,17)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1471.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="83.4714%" y="1445" width="0.0169%" height="15" fill="rgb(215,57,44)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1455.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 0.02%)</title><rect x="83.4714%" y="1429" width="0.0169%" height="15" fill="rgb(209,38,4)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1439.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (13 samples, 0.02%)</title><rect x="83.4714%" y="1413" width="0.0169%" height="15" fill="rgb(238,49,31)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="83.4714%" y="1397" width="0.0169%" height="15" fill="rgb(219,48,39)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="83.4714%" y="1381" width="0.0169%" height="15" fill="rgb(252,223,43)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="83.4714%" y="1365" width="0.0169%" height="15" fill="rgb(247,205,46)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="83.4714%" y="1349" width="0.0169%" height="15" fill="rgb(231,16,40)" fg:x="64283" fg:w="13"/><text x="83.7214%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (166 samples, 0.22%)</title><rect x="83.2805%" y="1573" width="0.2156%" height="15" fill="rgb(231,115,5)" fg:x="64136" fg:w="166"/><text x="83.5305%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (166 samples, 0.22%)</title><rect x="83.2805%" y="1557" width="0.2156%" height="15" fill="rgb(206,127,43)" fg:x="64136" fg:w="166"/><text x="83.5305%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (165 samples, 0.21%)</title><rect x="83.2818%" y="1541" width="0.2143%" height="15" fill="rgb(218,101,9)" fg:x="64137" fg:w="165"/><text x="83.5318%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (165 samples, 0.21%)</title><rect x="83.2818%" y="1525" width="0.2143%" height="15" fill="rgb(235,138,50)" fg:x="64137" fg:w="165"/><text x="83.5318%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (165 samples, 0.21%)</title><rect x="83.2818%" y="1509" width="0.2143%" height="15" fill="rgb(214,197,52)" fg:x="64137" fg:w="165"/><text x="83.5318%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (23 samples, 0.03%)</title><rect x="83.4662%" y="1493" width="0.0299%" height="15" fill="rgb(230,80,19)" fg:x="64279" fg:w="23"/><text x="83.7162%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (19 samples, 0.02%)</title><rect x="83.4714%" y="1477" width="0.0247%" height="15" fill="rgb(224,77,16)" fg:x="64283" fg:w="19"/><text x="83.7214%" y="1487.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (10 samples, 0.01%)</title><rect x="83.4974%" y="1445" width="0.0130%" height="15" fill="rgb(246,4,13)" fg:x="64303" fg:w="10"/><text x="83.7474%" y="1455.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (10 samples, 0.01%)</title><rect x="83.4974%" y="1429" width="0.0130%" height="15" fill="rgb(220,177,26)" fg:x="64303" fg:w="10"/><text x="83.7474%" y="1439.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="83.5000%" y="1413" width="0.0104%" height="15" fill="rgb(215,114,45)" fg:x="64305" fg:w="8"/><text x="83.7500%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (12 samples, 0.02%)</title><rect x="83.4961%" y="1493" width="0.0156%" height="15" fill="rgb(215,71,54)" fg:x="64302" fg:w="12"/><text x="83.7461%" y="1503.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (12 samples, 0.02%)</title><rect x="83.4961%" y="1477" width="0.0156%" height="15" fill="rgb(211,155,22)" fg:x="64302" fg:w="12"/><text x="83.7461%" y="1487.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (12 samples, 0.02%)</title><rect x="83.4961%" y="1461" width="0.0156%" height="15" fill="rgb(245,206,18)" fg:x="64302" fg:w="12"/><text x="83.7461%" y="1471.50"></text></g><g><title>move_bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (9 samples, 0.01%)</title><rect x="83.5156%" y="1349" width="0.0117%" height="15" fill="rgb(248,216,48)" fg:x="64317" fg:w="9"/><text x="83.7656%" y="1359.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.01%)</title><rect x="83.5156%" y="1333" width="0.0117%" height="15" fill="rgb(244,84,45)" fg:x="64317" fg:w="9"/><text x="83.7656%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.01%)</title><rect x="83.5156%" y="1317" width="0.0117%" height="15" fill="rgb(245,13,45)" fg:x="64317" fg:w="9"/><text x="83.7656%" y="1327.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (18 samples, 0.02%)</title><rect x="83.5143%" y="1397" width="0.0234%" height="15" fill="rgb(247,163,2)" fg:x="64316" fg:w="18"/><text x="83.7643%" y="1407.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (18 samples, 0.02%)</title><rect x="83.5143%" y="1381" width="0.0234%" height="15" fill="rgb(211,175,10)" fg:x="64316" fg:w="18"/><text x="83.7643%" y="1391.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (18 samples, 0.02%)</title><rect x="83.5143%" y="1365" width="0.0234%" height="15" fill="rgb(215,186,31)" fg:x="64316" fg:w="18"/><text x="83.7643%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (33 samples, 0.04%)</title><rect x="83.4961%" y="1525" width="0.0429%" height="15" fill="rgb(207,42,11)" fg:x="64302" fg:w="33"/><text x="83.7461%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (33 samples, 0.04%)</title><rect x="83.4961%" y="1509" width="0.0429%" height="15" fill="rgb(224,197,20)" fg:x="64302" fg:w="33"/><text x="83.7461%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (21 samples, 0.03%)</title><rect x="83.5117%" y="1493" width="0.0273%" height="15" fill="rgb(244,119,36)" fg:x="64314" fg:w="21"/><text x="83.7617%" y="1503.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (21 samples, 0.03%)</title><rect x="83.5117%" y="1477" width="0.0273%" height="15" fill="rgb(250,60,27)" fg:x="64314" fg:w="21"/><text x="83.7617%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.03%)</title><rect x="83.5117%" y="1461" width="0.0273%" height="15" fill="rgb(252,202,1)" fg:x="64314" fg:w="21"/><text x="83.7617%" y="1471.50"></text></g><g><title>std::panicking::try (21 samples, 0.03%)</title><rect x="83.5117%" y="1445" width="0.0273%" height="15" fill="rgb(206,53,25)" fg:x="64314" fg:w="21"/><text x="83.7617%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.03%)</title><rect x="83.5117%" y="1429" width="0.0273%" height="15" fill="rgb(210,88,4)" fg:x="64314" fg:w="21"/><text x="83.7617%" y="1439.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (21 samples, 0.03%)</title><rect x="83.5117%" y="1413" width="0.0273%" height="15" fill="rgb(211,144,28)" fg:x="64314" fg:w="21"/><text x="83.7617%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (205 samples, 0.27%)</title><rect x="83.2805%" y="1605" width="0.2662%" height="15" fill="rgb(247,81,32)" fg:x="64136" fg:w="205"/><text x="83.5305%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (205 samples, 0.27%)</title><rect x="83.2805%" y="1589" width="0.2662%" height="15" fill="rgb(225,192,11)" fg:x="64136" fg:w="205"/><text x="83.5305%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (39 samples, 0.05%)</title><rect x="83.4961%" y="1573" width="0.0506%" height="15" fill="rgb(232,212,27)" fg:x="64302" fg:w="39"/><text x="83.7461%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (39 samples, 0.05%)</title><rect x="83.4961%" y="1557" width="0.0506%" height="15" fill="rgb(239,3,29)" fg:x="64302" fg:w="39"/><text x="83.7461%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (39 samples, 0.05%)</title><rect x="83.4961%" y="1541" width="0.0506%" height="15" fill="rgb(252,225,29)" fg:x="64302" fg:w="39"/><text x="83.7461%" y="1551.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (12 samples, 0.02%)</title><rect x="83.5519%" y="1381" width="0.0156%" height="15" fill="rgb(205,151,9)" fg:x="64345" fg:w="12"/><text x="83.8019%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (21 samples, 0.03%)</title><rect x="83.5480%" y="1525" width="0.0273%" height="15" fill="rgb(216,171,47)" fg:x="64342" fg:w="21"/><text x="83.7980%" y="1535.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (19 samples, 0.02%)</title><rect x="83.5506%" y="1509" width="0.0247%" height="15" fill="rgb(206,181,1)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1519.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="83.5506%" y="1493" width="0.0247%" height="15" fill="rgb(232,218,10)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1503.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="83.5506%" y="1477" width="0.0247%" height="15" fill="rgb(244,222,51)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1487.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="83.5506%" y="1461" width="0.0247%" height="15" fill="rgb(252,215,16)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1471.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (19 samples, 0.02%)</title><rect x="83.5506%" y="1445" width="0.0247%" height="15" fill="rgb(212,130,13)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1455.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (19 samples, 0.02%)</title><rect x="83.5506%" y="1429" width="0.0247%" height="15" fill="rgb(227,103,37)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1439.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (19 samples, 0.02%)</title><rect x="83.5506%" y="1413" width="0.0247%" height="15" fill="rgb(249,48,15)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1423.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (19 samples, 0.02%)</title><rect x="83.5506%" y="1397" width="0.0247%" height="15" fill="rgb(225,96,9)" fg:x="64344" fg:w="19"/><text x="83.8006%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (27 samples, 0.04%)</title><rect x="83.5467%" y="1557" width="0.0351%" height="15" fill="rgb(213,81,41)" fg:x="64341" fg:w="27"/><text x="83.7967%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (27 samples, 0.04%)</title><rect x="83.5467%" y="1541" width="0.0351%" height="15" fill="rgb(230,15,12)" fg:x="64341" fg:w="27"/><text x="83.7967%" y="1551.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (240 samples, 0.31%)</title><rect x="83.2805%" y="1701" width="0.3116%" height="15" fill="rgb(218,106,37)" fg:x="64136" fg:w="240"/><text x="83.5305%" y="1711.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (240 samples, 0.31%)</title><rect x="83.2805%" y="1685" width="0.3116%" height="15" fill="rgb(223,172,47)" fg:x="64136" fg:w="240"/><text x="83.5305%" y="1695.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (240 samples, 0.31%)</title><rect x="83.2805%" y="1669" width="0.3116%" height="15" fill="rgb(246,180,49)" fg:x="64136" fg:w="240"/><text x="83.5305%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (240 samples, 0.31%)</title><rect x="83.2805%" y="1653" width="0.3116%" height="15" fill="rgb(231,63,37)" fg:x="64136" fg:w="240"/><text x="83.5305%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (240 samples, 0.31%)</title><rect x="83.2805%" y="1637" width="0.3116%" height="15" fill="rgb(235,70,40)" fg:x="64136" fg:w="240"/><text x="83.5305%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (240 samples, 0.31%)</title><rect x="83.2805%" y="1621" width="0.3116%" height="15" fill="rgb(250,54,26)" fg:x="64136" fg:w="240"/><text x="83.5305%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (35 samples, 0.05%)</title><rect x="83.5467%" y="1605" width="0.0454%" height="15" fill="rgb(214,190,1)" fg:x="64341" fg:w="35"/><text x="83.7967%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (35 samples, 0.05%)</title><rect x="83.5467%" y="1589" width="0.0454%" height="15" fill="rgb(212,40,35)" fg:x="64341" fg:w="35"/><text x="83.7967%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (35 samples, 0.05%)</title><rect x="83.5467%" y="1573" width="0.0454%" height="15" fill="rgb(239,183,47)" fg:x="64341" fg:w="35"/><text x="83.7967%" y="1583.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (95 samples, 0.12%)</title><rect x="83.5922%" y="1589" width="0.1234%" height="15" fill="rgb(211,171,49)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (95 samples, 0.12%)</title><rect x="83.5922%" y="1573" width="0.1234%" height="15" fill="rgb(249,186,27)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (95 samples, 0.12%)</title><rect x="83.5922%" y="1557" width="0.1234%" height="15" fill="rgb(223,23,48)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (95 samples, 0.12%)</title><rect x="83.5922%" y="1541" width="0.1234%" height="15" fill="rgb(209,203,21)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (95 samples, 0.12%)</title><rect x="83.5922%" y="1525" width="0.1234%" height="15" fill="rgb(229,33,27)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (95 samples, 0.12%)</title><rect x="83.5922%" y="1509" width="0.1234%" height="15" fill="rgb(207,8,53)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95 samples, 0.12%)</title><rect x="83.5922%" y="1493" width="0.1234%" height="15" fill="rgb(221,42,0)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.12%)</title><rect x="83.5922%" y="1477" width="0.1234%" height="15" fill="rgb(223,115,3)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.12%)</title><rect x="83.5922%" y="1461" width="0.1234%" height="15" fill="rgb(239,35,26)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.12%)</title><rect x="83.5922%" y="1445" width="0.1234%" height="15" fill="rgb(233,22,9)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (95 samples, 0.12%)</title><rect x="83.5922%" y="1429" width="0.1234%" height="15" fill="rgb(236,221,48)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1439.50"></text></g><g><title>malloc (95 samples, 0.12%)</title><rect x="83.5922%" y="1413" width="0.1234%" height="15" fill="rgb(235,52,30)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1423.50"></text></g><g><title>[libc.so.6] (95 samples, 0.12%)</title><rect x="83.5922%" y="1397" width="0.1234%" height="15" fill="rgb(238,133,51)" fg:x="64376" fg:w="95"/><text x="83.8422%" y="1407.50"></text></g><g><title>[libc.so.6] (89 samples, 0.12%)</title><rect x="83.6000%" y="1381" width="0.1156%" height="15" fill="rgb(213,122,23)" fg:x="64382" fg:w="89"/><text x="83.8500%" y="1391.50"></text></g><g><title>[libc.so.6] (24 samples, 0.03%)</title><rect x="83.6844%" y="1365" width="0.0312%" height="15" fill="rgb(225,8,15)" fg:x="64447" fg:w="24"/><text x="83.9344%" y="1375.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as aptos_types::on_chain_config::ConfigStorage&gt;::fetch_config (96 samples, 0.12%)</title><rect x="83.5922%" y="1653" width="0.1247%" height="15" fill="rgb(219,126,35)" fg:x="64376" fg:w="96"/><text x="83.8422%" y="1663.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (96 samples, 0.12%)</title><rect x="83.5922%" y="1637" width="0.1247%" height="15" fill="rgb(246,113,21)" fg:x="64376" fg:w="96"/><text x="83.8422%" y="1647.50"></text></g><g><title>aptos_state_view::TStateView::get_state_value_bytes (96 samples, 0.12%)</title><rect x="83.5922%" y="1621" width="0.1247%" height="15" fill="rgb(241,193,32)" fg:x="64376" fg:w="96"/><text x="83.8422%" y="1631.50"></text></g><g><title>&lt;aptos_language_e2e_tests::data_store::FakeDataStore as aptos_state_view::TStateView&gt;::get_state_value (96 samples, 0.12%)</title><rect x="83.5922%" y="1605" width="0.1247%" height="15" fill="rgb(218,99,18)" fg:x="64376" fg:w="96"/><text x="83.8422%" y="1615.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (339 samples, 0.44%)</title><rect x="83.2805%" y="1717" width="0.4402%" height="15" fill="rgb(225,114,4)" fg:x="64136" fg:w="339"/><text x="83.5305%" y="1727.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::new (99 samples, 0.13%)</title><rect x="83.5922%" y="1701" width="0.1286%" height="15" fill="rgb(235,0,15)" fg:x="64376" fg:w="99"/><text x="83.8422%" y="1711.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new (99 samples, 0.13%)</title><rect x="83.5922%" y="1685" width="0.1286%" height="15" fill="rgb(247,45,27)" fg:x="64376" fg:w="99"/><text x="83.8422%" y="1695.50"></text></g><g><title>aptos_types::on_chain_config::OnChainConfig::fetch_config (99 samples, 0.13%)</title><rect x="83.5922%" y="1669" width="0.1286%" height="15" fill="rgb(249,88,53)" fg:x="64376" fg:w="99"/><text x="83.8422%" y="1679.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasParameters as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="83.7584%" y="1653" width="0.0247%" height="15" fill="rgb(207,58,45)" fg:x="64504" fg:w="19"/><text x="84.0084%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="83.7947%" y="1557" width="0.0299%" height="15" fill="rgb(216,7,11)" fg:x="64532" fg:w="23"/><text x="84.0447%" y="1567.50"></text></g><g><title>alloc::alloc::box_free (21 samples, 0.03%)</title><rect x="83.8246%" y="1557" width="0.0273%" height="15" fill="rgb(230,40,33)" fg:x="64555" fg:w="21"/><text x="84.0746%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.03%)</title><rect x="83.8246%" y="1541" width="0.0273%" height="15" fill="rgb(232,24,46)" fg:x="64555" fg:w="21"/><text x="84.0746%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.03%)</title><rect x="83.8259%" y="1525" width="0.0260%" height="15" fill="rgb(219,222,45)" fg:x="64556" fg:w="20"/><text x="84.0759%" y="1535.50"></text></g><g><title>cfree (18 samples, 0.02%)</title><rect x="83.8285%" y="1509" width="0.0234%" height="15" fill="rgb(229,85,44)" fg:x="64558" fg:w="18"/><text x="84.0785%" y="1519.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="83.8402%" y="1493" width="0.0117%" height="15" fill="rgb(243,71,36)" fg:x="64567" fg:w="9"/><text x="84.0902%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext&gt; (13 samples, 0.02%)</title><rect x="83.8519%" y="1557" width="0.0169%" height="15" fill="rgb(230,203,45)" fg:x="64576" fg:w="13"/><text x="84.1019%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;aptos_aggregator::aggregator_extension::AggregatorData&gt;&gt; (11 samples, 0.01%)</title><rect x="83.8545%" y="1541" width="0.0143%" height="15" fill="rgb(224,77,49)" fg:x="64578" fg:w="11"/><text x="84.1045%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;aptos_aggregator::aggregator_extension::AggregatorData&gt;&gt; (11 samples, 0.01%)</title><rect x="83.8545%" y="1525" width="0.0143%" height="15" fill="rgb(210,186,47)" fg:x="64578" fg:w="11"/><text x="84.1045%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_aggregator::aggregator_extension::AggregatorData&gt; (11 samples, 0.01%)</title><rect x="83.8545%" y="1509" width="0.0143%" height="15" fill="rgb(232,146,10)" fg:x="64578" fg:w="11"/><text x="84.1045%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;aptos_aggregator::aggregator_extension::AggregatorID&gt;&gt; (11 samples, 0.01%)</title><rect x="83.8545%" y="1493" width="0.0143%" height="15" fill="rgb(236,185,51)" fg:x="64578" fg:w="11"/><text x="84.1045%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_aggregator::aggregator_extension::AggregatorID,alloc::collections::btree::set_val::SetValZST&gt;&gt; (11 samples, 0.01%)</title><rect x="83.8545%" y="1477" width="0.0143%" height="15" fill="rgb(223,206,43)" fg:x="64578" fg:w="11"/><text x="84.1045%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="83.8545%" y="1461" width="0.0143%" height="15" fill="rgb(227,212,9)" fg:x="64578" fg:w="11"/><text x="84.1045%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_table_extension::NativeTableContext&gt; (11 samples, 0.01%)</title><rect x="83.8908%" y="1557" width="0.0143%" height="15" fill="rgb(205,82,3)" fg:x="64606" fg:w="11"/><text x="84.1408%" y="1567.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (92 samples, 0.12%)</title><rect x="83.7895%" y="1621" width="0.1195%" height="15" fill="rgb(214,2,27)" fg:x="64528" fg:w="92"/><text x="84.0395%" y="1631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (92 samples, 0.12%)</title><rect x="83.7895%" y="1605" width="0.1195%" height="15" fill="rgb(241,37,22)" fg:x="64528" fg:w="92"/><text x="84.0395%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (92 samples, 0.12%)</title><rect x="83.7895%" y="1589" width="0.1195%" height="15" fill="rgb(219,182,1)" fg:x="64528" fg:w="92"/><text x="84.0395%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (92 samples, 0.12%)</title><rect x="83.7895%" y="1573" width="0.1195%" height="15" fill="rgb(208,224,23)" fg:x="64528" fg:w="92"/><text x="84.0395%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (96 samples, 0.12%)</title><rect x="83.7856%" y="1637" width="0.1247%" height="15" fill="rgb(219,121,32)" fg:x="64525" fg:w="96"/><text x="84.0356%" y="1647.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.13%)</title><rect x="83.7843%" y="1653" width="0.1324%" height="15" fill="rgb(253,13,40)" fg:x="64524" fg:w="102"/><text x="84.0343%" y="1663.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="83.9194%" y="1653" width="0.0104%" height="15" fill="rgb(233,6,28)" fg:x="64628" fg:w="8"/><text x="84.1694%" y="1663.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="83.9324%" y="1637" width="0.0182%" height="15" fill="rgb(233,73,8)" fg:x="64638" fg:w="14"/><text x="84.1824%" y="1647.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::new (17 samples, 0.02%)</title><rect x="83.9324%" y="1653" width="0.0221%" height="15" fill="rgb(223,48,27)" fg:x="64638" fg:w="17"/><text x="84.1824%" y="1663.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (8 samples, 0.01%)</title><rect x="83.9856%" y="1605" width="0.0104%" height="15" fill="rgb(231,98,37)" fg:x="64679" fg:w="8"/><text x="84.2356%" y="1615.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::contains_duplicate_signers::{{closure}} (8 samples, 0.01%)</title><rect x="83.9856%" y="1589" width="0.0104%" height="15" fill="rgb(249,43,32)" fg:x="64679" fg:w="8"/><text x="84.2356%" y="1599.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (8 samples, 0.01%)</title><rect x="83.9856%" y="1573" width="0.0104%" height="15" fill="rgb(246,184,20)" fg:x="64679" fg:w="8"/><text x="84.2356%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="83.9856%" y="1557" width="0.0104%" height="15" fill="rgb(251,216,0)" fg:x="64679" fg:w="8"/><text x="84.2356%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="84.0051%" y="1557" width="0.0117%" height="15" fill="rgb(238,41,42)" fg:x="64694" fg:w="9"/><text x="84.2551%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="83.9973%" y="1605" width="0.0221%" height="15" fill="rgb(227,224,50)" fg:x="64688" fg:w="17"/><text x="84.2473%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="83.9973%" y="1589" width="0.0221%" height="15" fill="rgb(237,189,18)" fg:x="64688" fg:w="17"/><text x="84.2473%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="84.0025%" y="1573" width="0.0169%" height="15" fill="rgb(238,108,6)" fg:x="64692" fg:w="13"/><text x="84.2525%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_core_types::account_address::AccountAddress&gt;&gt; (18 samples, 0.02%)</title><rect x="84.0233%" y="1605" width="0.0234%" height="15" fill="rgb(214,197,53)" fg:x="64708" fg:w="18"/><text x="84.2733%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,alloc::collections::btree::set_val::SetValZST&gt;&gt; (18 samples, 0.02%)</title><rect x="84.0233%" y="1589" width="0.0234%" height="15" fill="rgb(206,183,15)" fg:x="64708" fg:w="18"/><text x="84.2733%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="84.0233%" y="1573" width="0.0234%" height="15" fill="rgb(208,130,32)" fg:x="64708" fg:w="18"/><text x="84.2733%" y="1583.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="84.0246%" y="1557" width="0.0221%" height="15" fill="rgb(226,128,52)" fg:x="64709" fg:w="17"/><text x="84.2746%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,alloc::collections::btree::set_val::SetValZST&gt;&gt; (17 samples, 0.02%)</title><rect x="84.0246%" y="1541" width="0.0221%" height="15" fill="rgb(231,183,21)" fg:x="64709" fg:w="17"/><text x="84.2746%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="84.0246%" y="1525" width="0.0221%" height="15" fill="rgb(216,8,35)" fg:x="64709" fg:w="17"/><text x="84.2746%" y="1535.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.02%)</title><rect x="84.0246%" y="1509" width="0.0221%" height="15" fill="rgb(224,221,8)" fg:x="64709" fg:w="17"/><text x="84.2746%" y="1519.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (11 samples, 0.01%)</title><rect x="84.0324%" y="1493" width="0.0143%" height="15" fill="rgb(210,111,33)" fg:x="64715" fg:w="11"/><text x="84.2824%" y="1503.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_transaction_format (63 samples, 0.08%)</title><rect x="83.9687%" y="1637" width="0.0818%" height="15" fill="rgb(232,211,38)" fg:x="64666" fg:w="63"/><text x="84.2187%" y="1647.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::contains_duplicate_signers (53 samples, 0.07%)</title><rect x="83.9817%" y="1621" width="0.0688%" height="15" fill="rgb(216,190,27)" fg:x="64676" fg:w="53"/><text x="84.2317%" y="1631.50"></text></g><g><title>aptos_gas::transaction::TransactionGasParameters::calculate_intrinsic_gas (8 samples, 0.01%)</title><rect x="84.0700%" y="1589" width="0.0104%" height="15" fill="rgb(237,215,27)" fg:x="64744" fg:w="8"/><text x="84.3200%" y="1599.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::get_gas_parameters (15 samples, 0.02%)</title><rect x="84.0804%" y="1589" width="0.0195%" height="15" fill="rgb(251,121,39)" fg:x="64752" fg:w="15"/><text x="84.3304%" y="1599.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::max_gas_amount (9 samples, 0.01%)</title><rect x="84.1025%" y="1589" width="0.0117%" height="15" fill="rgb(244,21,14)" fg:x="64769" fg:w="9"/><text x="84.3525%" y="1599.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::check_gas (52 samples, 0.07%)</title><rect x="84.0609%" y="1605" width="0.0675%" height="15" fill="rgb(221,192,22)" fg:x="64737" fg:w="52"/><text x="84.3109%" y="1615.50"></text></g><g><title>move_core_types::gas_algebra::GasQuantity&lt;U&gt;::to_unit_round_up_with_params (11 samples, 0.01%)</title><rect x="84.1142%" y="1589" width="0.0143%" height="15" fill="rgb(251,190,28)" fg:x="64778" fg:w="11"/><text x="84.3642%" y="1599.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (58 samples, 0.08%)</title><rect x="84.0557%" y="1621" width="0.0753%" height="15" fill="rgb(217,4,51)" fg:x="64733" fg:w="58"/><text x="84.3057%" y="1631.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (79 samples, 0.10%)</title><rect x="84.0505%" y="1637" width="0.1026%" height="15" fill="rgb(215,183,49)" fg:x="64729" fg:w="79"/><text x="84.3005%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::transaction_metadata::TransactionMetadata&gt; (16 samples, 0.02%)</title><rect x="84.1323%" y="1621" width="0.0208%" height="15" fill="rgb(249,28,49)" fg:x="64792" fg:w="16"/><text x="84.3823%" y="1631.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (151 samples, 0.20%)</title><rect x="83.9596%" y="1653" width="0.1961%" height="15" fill="rgb(214,42,20)" fg:x="64659" fg:w="151"/><text x="84.2096%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.02%)</title><rect x="84.1713%" y="1621" width="0.0195%" height="15" fill="rgb(222,77,27)" fg:x="64822" fg:w="15"/><text x="84.4213%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (17 samples, 0.02%)</title><rect x="84.1713%" y="1637" width="0.0221%" height="15" fill="rgb(252,198,32)" fg:x="64822" fg:w="17"/><text x="84.4213%" y="1647.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="84.1934%" y="1637" width="0.0104%" height="15" fill="rgb(207,140,50)" fg:x="64839" fg:w="8"/><text x="84.4434%" y="1647.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.02%)</title><rect x="84.2064%" y="1637" width="0.0169%" height="15" fill="rgb(251,170,16)" fg:x="64849" fg:w="13"/><text x="84.4564%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="84.2064%" y="1621" width="0.0169%" height="15" fill="rgb(249,111,45)" fg:x="64849" fg:w="13"/><text x="84.4564%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="84.2064%" y="1605" width="0.0169%" height="15" fill="rgb(241,99,35)" fg:x="64849" fg:w="13"/><text x="84.4564%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="84.2064%" y="1589" width="0.0169%" height="15" fill="rgb(216,188,17)" fg:x="64849" fg:w="13"/><text x="84.4564%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="84.2284%" y="1509" width="0.0130%" height="15" fill="rgb(254,209,53)" fg:x="64866" fg:w="10"/><text x="84.4784%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="84.2284%" y="1493" width="0.0130%" height="15" fill="rgb(231,105,41)" fg:x="64866" fg:w="10"/><text x="84.4784%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.01%)</title><rect x="84.2284%" y="1477" width="0.0130%" height="15" fill="rgb(242,93,23)" fg:x="64866" fg:w="10"/><text x="84.4784%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="84.2297%" y="1461" width="0.0117%" height="15" fill="rgb(218,159,11)" fg:x="64867" fg:w="9"/><text x="84.4797%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="84.2297%" y="1445" width="0.0117%" height="15" fill="rgb(209,90,32)" fg:x="64867" fg:w="9"/><text x="84.4797%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="84.2297%" y="1429" width="0.0117%" height="15" fill="rgb(253,118,46)" fg:x="64867" fg:w="9"/><text x="84.4797%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="84.2284%" y="1573" width="0.0221%" height="15" fill="rgb(219,121,2)" fg:x="64866" fg:w="17"/><text x="84.4784%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="84.2284%" y="1557" width="0.0221%" height="15" fill="rgb(207,57,47)" fg:x="64866" fg:w="17"/><text x="84.4784%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="84.2284%" y="1541" width="0.0221%" height="15" fill="rgb(235,113,43)" fg:x="64866" fg:w="17"/><text x="84.4784%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="84.2284%" y="1525" width="0.0221%" height="15" fill="rgb(238,30,50)" fg:x="64866" fg:w="17"/><text x="84.4784%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.04%)</title><rect x="84.2245%" y="1637" width="0.0351%" height="15" fill="rgb(237,47,29)" fg:x="64863" fg:w="27"/><text x="84.4745%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.04%)</title><rect x="84.2245%" y="1621" width="0.0351%" height="15" fill="rgb(245,102,24)" fg:x="64863" fg:w="27"/><text x="84.4745%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.04%)</title><rect x="84.2245%" y="1605" width="0.0351%" height="15" fill="rgb(245,152,9)" fg:x="64863" fg:w="27"/><text x="84.4745%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.04%)</title><rect x="84.2245%" y="1589" width="0.0351%" height="15" fill="rgb(223,213,17)" fg:x="64863" fg:w="27"/><text x="84.4745%" y="1599.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge_intrinsic_gas_for_transaction (8 samples, 0.01%)</title><rect x="84.2596%" y="1637" width="0.0104%" height="15" fill="rgb(241,164,4)" fg:x="64890" fg:w="8"/><text x="84.5096%" y="1647.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="84.3206%" y="1541" width="0.0195%" height="15" fill="rgb(205,209,31)" fg:x="64937" fg:w="15"/><text x="84.5706%" y="1551.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.02%)</title><rect x="84.3206%" y="1525" width="0.0195%" height="15" fill="rgb(248,173,2)" fg:x="64937" fg:w="15"/><text x="84.5706%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.01%)</title><rect x="84.3284%" y="1509" width="0.0117%" height="15" fill="rgb(207,67,32)" fg:x="64943" fg:w="9"/><text x="84.5784%" y="1519.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="84.3284%" y="1493" width="0.0117%" height="15" fill="rgb(239,109,13)" fg:x="64943" fg:w="9"/><text x="84.5784%" y="1503.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::resolve_pending_code_publish (39 samples, 0.05%)</title><rect x="84.2934%" y="1637" width="0.0506%" height="15" fill="rgb(233,123,24)" fg:x="64916" fg:w="39"/><text x="84.5434%" y="1647.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::extract_publish_request (39 samples, 0.05%)</title><rect x="84.2934%" y="1621" width="0.0506%" height="15" fill="rgb(232,120,19)" fg:x="64916" fg:w="39"/><text x="84.5434%" y="1631.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get_mut (32 samples, 0.04%)</title><rect x="84.3024%" y="1605" width="0.0416%" height="15" fill="rgb(225,17,50)" fg:x="64923" fg:w="32"/><text x="84.5524%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (22 samples, 0.03%)</title><rect x="84.3154%" y="1589" width="0.0286%" height="15" fill="rgb(239,216,13)" fg:x="64933" fg:w="22"/><text x="84.5654%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (22 samples, 0.03%)</title><rect x="84.3154%" y="1573" width="0.0286%" height="15" fill="rgb(232,213,26)" fg:x="64933" fg:w="22"/><text x="84.5654%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (22 samples, 0.03%)</title><rect x="84.3154%" y="1557" width="0.0286%" height="15" fill="rgb(244,59,39)" fg:x="64933" fg:w="22"/><text x="84.5654%" y="1567.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::secondary_signers (10 samples, 0.01%)</title><rect x="84.3440%" y="1637" width="0.0130%" height="15" fill="rgb(234,61,35)" fg:x="64955" fg:w="10"/><text x="84.5940%" y="1647.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (9 samples, 0.01%)</title><rect x="84.3453%" y="1621" width="0.0117%" height="15" fill="rgb(245,94,24)" fg:x="64956" fg:w="9"/><text x="84.5953%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="84.3453%" y="1605" width="0.0117%" height="15" fill="rgb(238,190,44)" fg:x="64956" fg:w="9"/><text x="84.5953%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="84.3453%" y="1589" width="0.0117%" height="15" fill="rgb(205,145,25)" fg:x="64956" fg:w="9"/><text x="84.5953%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="84.3453%" y="1573" width="0.0117%" height="15" fill="rgb(229,158,41)" fg:x="64956" fg:w="9"/><text x="84.5953%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="84.3453%" y="1557" width="0.0117%" height="15" fill="rgb(224,121,5)" fg:x="64956" fg:w="9"/><text x="84.5953%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="84.4206%" y="1557" width="0.0104%" height="15" fill="rgb(238,168,35)" fg:x="65014" fg:w="8"/><text x="84.6706%" y="1567.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args (51 samples, 0.07%)</title><rect x="84.3687%" y="1637" width="0.0662%" height="15" fill="rgb(231,11,42)" fg:x="64974" fg:w="51"/><text x="84.6187%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.02%)</title><rect x="84.4141%" y="1621" width="0.0208%" height="15" fill="rgb(241,105,19)" fg:x="65009" fg:w="16"/><text x="84.6641%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="84.4141%" y="1605" width="0.0208%" height="15" fill="rgb(253,210,20)" fg:x="65009" fg:w="16"/><text x="84.6641%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="84.4154%" y="1589" width="0.0195%" height="15" fill="rgb(215,72,52)" fg:x="65010" fg:w="15"/><text x="84.6654%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="84.4206%" y="1573" width="0.0143%" height="15" fill="rgb(223,225,30)" fg:x="65014" fg:w="11"/><text x="84.6706%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="84.4401%" y="1605" width="0.0234%" height="15" fill="rgb(220,138,44)" fg:x="65029" fg:w="18"/><text x="84.6901%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (12 samples, 0.02%)</title><rect x="84.4479%" y="1589" width="0.0156%" height="15" fill="rgb(206,128,12)" fg:x="65035" fg:w="12"/><text x="84.6979%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (11 samples, 0.01%)</title><rect x="84.4492%" y="1573" width="0.0143%" height="15" fill="rgb(245,194,0)" fg:x="65036" fg:w="11"/><text x="84.6992%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::LoadedFunctionInstantiation&gt; (30 samples, 0.04%)</title><rect x="84.4349%" y="1637" width="0.0390%" height="15" fill="rgb(235,175,41)" fg:x="65025" fg:w="30"/><text x="84.6849%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (26 samples, 0.03%)</title><rect x="84.4401%" y="1621" width="0.0338%" height="15" fill="rgb(216,15,48)" fg:x="65029" fg:w="26"/><text x="84.6901%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.01%)</title><rect x="84.4635%" y="1605" width="0.0104%" height="15" fill="rgb(223,179,5)" fg:x="65047" fg:w="8"/><text x="84.7135%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="84.4635%" y="1589" width="0.0104%" height="15" fill="rgb(220,80,15)" fg:x="65047" fg:w="8"/><text x="84.7135%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="84.4635%" y="1573" width="0.0104%" height="15" fill="rgb(228,20,30)" fg:x="65047" fg:w="8"/><text x="84.7135%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="84.4635%" y="1557" width="0.0104%" height="15" fill="rgb(229,194,27)" fg:x="65047" fg:w="8"/><text x="84.7135%" y="1567.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="84.4635%" y="1541" width="0.0104%" height="15" fill="rgb(238,202,32)" fg:x="65047" fg:w="8"/><text x="84.7135%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::SerializedReturnValues&gt; (8 samples, 0.01%)</title><rect x="84.4738%" y="1637" width="0.0104%" height="15" fill="rgb(207,82,27)" fg:x="65055" fg:w="8"/><text x="84.7238%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.03%)</title><rect x="84.5310%" y="1589" width="0.0312%" height="15" fill="rgb(246,122,46)" fg:x="65099" fg:w="24"/><text x="84.7810%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.03%)</title><rect x="84.5310%" y="1573" width="0.0312%" height="15" fill="rgb(220,101,26)" fg:x="65099" fg:w="24"/><text x="84.7810%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.03%)</title><rect x="84.5310%" y="1557" width="0.0312%" height="15" fill="rgb(251,63,9)" fg:x="65099" fg:w="24"/><text x="84.7810%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (24 samples, 0.03%)</title><rect x="84.5310%" y="1541" width="0.0312%" height="15" fill="rgb(235,186,5)" fg:x="65099" fg:w="24"/><text x="84.7810%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (24 samples, 0.03%)</title><rect x="84.5310%" y="1525" width="0.0312%" height="15" fill="rgb(241,139,37)" fg:x="65099" fg:w="24"/><text x="84.7810%" y="1535.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (24 samples, 0.03%)</title><rect x="84.5310%" y="1509" width="0.0312%" height="15" fill="rgb(252,177,51)" fg:x="65099" fg:w="24"/><text x="84.7810%" y="1519.50"></text></g><g><title>move_binary_format::access::ModuleAccess::identifier_at (9 samples, 0.01%)</title><rect x="84.5505%" y="1493" width="0.0117%" height="15" fill="rgb(214,131,22)" fg:x="65114" fg:w="9"/><text x="84.8005%" y="1503.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (28 samples, 0.04%)</title><rect x="84.5284%" y="1605" width="0.0364%" height="15" fill="rgb(246,53,19)" fg:x="65097" fg:w="28"/><text x="84.7784%" y="1615.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (63 samples, 0.08%)</title><rect x="84.4855%" y="1637" width="0.0818%" height="15" fill="rgb(231,158,27)" fg:x="65064" fg:w="63"/><text x="84.7355%" y="1647.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (56 samples, 0.07%)</title><rect x="84.4946%" y="1621" width="0.0727%" height="15" fill="rgb(226,166,46)" fg:x="65071" fg:w="56"/><text x="84.7446%" y="1631.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (324 samples, 0.42%)</title><rect x="84.1557%" y="1653" width="0.4207%" height="15" fill="rgb(218,178,26)" fg:x="64810" fg:w="324"/><text x="84.4057%" y="1663.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::get_gas_feature_version (12 samples, 0.02%)</title><rect x="84.5764%" y="1653" width="0.0156%" height="15" fill="rgb(206,25,39)" fg:x="65134" fg:w="12"/><text x="84.8264%" y="1663.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::get_storage_gas_parameters (11 samples, 0.01%)</title><rect x="84.5972%" y="1653" width="0.0143%" height="15" fill="rgb(232,218,41)" fg:x="65150" fg:w="11"/><text x="84.8472%" y="1663.50"></text></g><g><title>aptos_crypto::hash::HashValue::to_vec (12 samples, 0.02%)</title><rect x="84.6453%" y="1621" width="0.0156%" height="15" fill="rgb(212,151,15)" fg:x="65187" fg:w="12"/><text x="84.8953%" y="1631.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::new (12 samples, 0.02%)</title><rect x="84.6608%" y="1621" width="0.0156%" height="15" fill="rgb(213,49,22)" fg:x="65199" fg:w="12"/><text x="84.9108%" y="1631.50"></text></g><g><title>&lt;core::cell::RefCell&lt;T&gt; as core::default::Default&gt;::default (8 samples, 0.01%)</title><rect x="84.6660%" y="1605" width="0.0104%" height="15" fill="rgb(247,116,21)" fg:x="65203" fg:w="8"/><text x="84.9160%" y="1615.50"></text></g><g><title>&lt;aptos_aggregator::aggregator_extension::AggregatorData as core::default::Default&gt;::default (8 samples, 0.01%)</title><rect x="84.6660%" y="1589" width="0.0104%" height="15" fill="rgb(248,98,14)" fg:x="65203" fg:w="8"/><text x="84.9160%" y="1599.50"></text></g><g><title>aptos_framework::natives::state_storage::NativeStateStorageContext::new (8 samples, 0.01%)</title><rect x="84.6816%" y="1621" width="0.0104%" height="15" fill="rgb(247,72,6)" fg:x="65215" fg:w="8"/><text x="84.9316%" y="1631.50"></text></g><g><title>move_table_extension::NativeTableContext::new (14 samples, 0.02%)</title><rect x="84.7115%" y="1621" width="0.0182%" height="15" fill="rgb(213,9,22)" fg:x="65238" fg:w="14"/><text x="84.9615%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,bool&gt;&gt; (8 samples, 0.01%)</title><rect x="84.7310%" y="1605" width="0.0104%" height="15" fill="rgb(213,122,30)" fg:x="65253" fg:w="8"/><text x="84.9810%" y="1615.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="84.7310%" y="1589" width="0.0104%" height="15" fill="rgb(244,11,30)" fg:x="65253" fg:w="8"/><text x="84.9810%" y="1599.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (8 samples, 0.01%)</title><rect x="84.7310%" y="1573" width="0.0104%" height="15" fill="rgb(236,102,26)" fg:x="65253" fg:w="8"/><text x="84.9810%" y="1583.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.01%)</title><rect x="84.7310%" y="1557" width="0.0104%" height="15" fill="rgb(231,166,37)" fg:x="65253" fg:w="8"/><text x="84.9810%" y="1567.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.01%)</title><rect x="84.7310%" y="1541" width="0.0104%" height="15" fill="rgb(220,224,29)" fg:x="65253" fg:w="8"/><text x="84.9810%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::flush_if_invalidated (13 samples, 0.02%)</title><rect x="84.7297%" y="1621" width="0.0169%" height="15" fill="rgb(227,30,40)" fg:x="65252" fg:w="13"/><text x="84.9797%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.03%)</title><rect x="84.7790%" y="1605" width="0.0325%" height="15" fill="rgb(235,8,36)" fg:x="65290" fg:w="25"/><text x="85.0290%" y="1615.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.03%)</title><rect x="84.7816%" y="1589" width="0.0299%" height="15" fill="rgb(232,175,19)" fg:x="65292" fg:w="23"/><text x="85.0316%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.03%)</title><rect x="84.7816%" y="1573" width="0.0299%" height="15" fill="rgb(217,114,10)" fg:x="65292" fg:w="23"/><text x="85.0316%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.03%)</title><rect x="84.7816%" y="1557" width="0.0299%" height="15" fill="rgb(214,112,41)" fg:x="65292" fg:w="23"/><text x="85.0316%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.03%)</title><rect x="84.7816%" y="1541" width="0.0299%" height="15" fill="rgb(226,69,34)" fg:x="65292" fg:w="23"/><text x="85.0316%" y="1551.50"></text></g><g><title>malloc (12 samples, 0.02%)</title><rect x="84.7959%" y="1525" width="0.0156%" height="15" fill="rgb(219,23,46)" fg:x="65303" fg:w="12"/><text x="85.0459%" y="1535.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="84.8400%" y="1477" width="0.0104%" height="15" fill="rgb(233,3,8)" fg:x="65337" fg:w="8"/><text x="85.0900%" y="1487.50"></text></g><g><title>hashbrown::map::make_insert_hash (20 samples, 0.03%)</title><rect x="84.8257%" y="1573" width="0.0260%" height="15" fill="rgb(251,34,42)" fg:x="65326" fg:w="20"/><text x="85.0757%" y="1583.50"></text></g><g><title>core::hash::BuildHasher::hash_one (19 samples, 0.02%)</title><rect x="84.8270%" y="1557" width="0.0247%" height="15" fill="rgb(215,84,9)" fg:x="65327" fg:w="19"/><text x="85.0770%" y="1567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="84.8322%" y="1541" width="0.0195%" height="15" fill="rgb(231,75,52)" fg:x="65331" fg:w="15"/><text x="85.0822%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="84.8322%" y="1525" width="0.0195%" height="15" fill="rgb(247,201,31)" fg:x="65331" fg:w="15"/><text x="85.0822%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="84.8322%" y="1509" width="0.0195%" height="15" fill="rgb(215,171,37)" fg:x="65331" fg:w="15"/><text x="85.0822%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.01%)</title><rect x="84.8387%" y="1493" width="0.0130%" height="15" fill="rgb(208,208,44)" fg:x="65336" fg:w="10"/><text x="85.0887%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (13 samples, 0.02%)</title><rect x="84.8517%" y="1573" width="0.0169%" height="15" fill="rgb(247,146,54)" fg:x="65346" fg:w="13"/><text x="85.1017%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="84.8517%" y="1557" width="0.0169%" height="15" fill="rgb(209,0,40)" fg:x="65346" fg:w="13"/><text x="85.1017%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.02%)</title><rect x="84.8517%" y="1541" width="0.0169%" height="15" fill="rgb(221,59,4)" fg:x="65346" fg:w="13"/><text x="85.1017%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 0.01%)</title><rect x="84.8829%" y="1557" width="0.0104%" height="15" fill="rgb(227,153,47)" fg:x="65370" fg:w="8"/><text x="85.1329%" y="1567.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (216 samples, 0.28%)</title><rect x="84.6154%" y="1653" width="0.2805%" height="15" fill="rgb(253,225,10)" fg:x="65164" fg:w="216"/><text x="84.8654%" y="1663.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (213 samples, 0.28%)</title><rect x="84.6193%" y="1637" width="0.2766%" height="15" fill="rgb(237,201,24)" fg:x="65167" fg:w="213"/><text x="84.8693%" y="1647.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (114 samples, 0.15%)</title><rect x="84.7478%" y="1621" width="0.1480%" height="15" fill="rgb(238,23,27)" fg:x="65266" fg:w="114"/><text x="84.9978%" y="1631.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (64 samples, 0.08%)</title><rect x="84.8128%" y="1605" width="0.0831%" height="15" fill="rgb(236,54,50)" fg:x="65316" fg:w="64"/><text x="85.0628%" y="1615.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (63 samples, 0.08%)</title><rect x="84.8141%" y="1589" width="0.0818%" height="15" fill="rgb(216,106,0)" fg:x="65317" fg:w="63"/><text x="85.0641%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (21 samples, 0.03%)</title><rect x="84.8686%" y="1573" width="0.0273%" height="15" fill="rgb(234,179,35)" fg:x="65359" fg:w="21"/><text x="85.1186%" y="1583.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn (14 samples, 0.02%)</title><rect x="84.8959%" y="1653" width="0.0182%" height="15" fill="rgb(210,35,8)" fg:x="65380" fg:w="14"/><text x="85.1459%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (14 samples, 0.02%)</title><rect x="84.9335%" y="1525" width="0.0182%" height="15" fill="rgb(238,144,16)" fg:x="65409" fg:w="14"/><text x="85.1835%" y="1535.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (8 samples, 0.01%)</title><rect x="84.9413%" y="1509" width="0.0104%" height="15" fill="rgb(244,54,7)" fg:x="65415" fg:w="8"/><text x="85.1913%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::identifier::Identifier,(alloc::vec::Vec&lt;u8&gt;,bool)&gt;&gt; (8 samples, 0.01%)</title><rect x="84.9595%" y="1477" width="0.0104%" height="15" fill="rgb(233,225,40)" fg:x="65429" fg:w="8"/><text x="85.2095%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="84.9595%" y="1461" width="0.0104%" height="15" fill="rgb(249,227,23)" fg:x="65429" fg:w="8"/><text x="85.2095%" y="1471.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="84.9803%" y="1381" width="0.0247%" height="15" fill="rgb(215,42,44)" fg:x="65445" fg:w="19"/><text x="85.2303%" y="1391.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (18 samples, 0.02%)</title><rect x="84.9816%" y="1365" width="0.0234%" height="15" fill="rgb(220,145,40)" fg:x="65446" fg:w="18"/><text x="85.2316%" y="1375.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (18 samples, 0.02%)</title><rect x="84.9816%" y="1349" width="0.0234%" height="15" fill="rgb(228,218,40)" fg:x="65446" fg:w="18"/><text x="85.2316%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="84.9816%" y="1333" width="0.0234%" height="15" fill="rgb(217,52,54)" fg:x="65446" fg:w="18"/><text x="85.2316%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="84.9816%" y="1317" width="0.0234%" height="15" fill="rgb(223,90,22)" fg:x="65446" fg:w="18"/><text x="85.2316%" y="1327.50"></text></g><g><title>cfree (16 samples, 0.02%)</title><rect x="84.9842%" y="1301" width="0.0208%" height="15" fill="rgb(232,114,35)" fg:x="65448" fg:w="16"/><text x="85.2342%" y="1311.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="84.9894%" y="1285" width="0.0156%" height="15" fill="rgb(227,223,50)" fg:x="65452" fg:w="12"/><text x="85.2394%" y="1295.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (33 samples, 0.04%)</title><rect x="84.9777%" y="1397" width="0.0429%" height="15" fill="rgb(249,175,7)" fg:x="65443" fg:w="33"/><text x="85.2277%" y="1407.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (12 samples, 0.02%)</title><rect x="85.0049%" y="1381" width="0.0156%" height="15" fill="rgb(249,173,15)" fg:x="65464" fg:w="12"/><text x="85.2549%" y="1391.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="85.0244%" y="1381" width="0.0104%" height="15" fill="rgb(240,131,6)" fg:x="65479" fg:w="8"/><text x="85.2744%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="85.0764%" y="1301" width="0.0364%" height="15" fill="rgb(246,117,16)" fg:x="65519" fg:w="28"/><text x="85.3264%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (28 samples, 0.04%)</title><rect x="85.0764%" y="1285" width="0.0364%" height="15" fill="rgb(209,32,16)" fg:x="65519" fg:w="28"/><text x="85.3264%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (21 samples, 0.03%)</title><rect x="85.0854%" y="1269" width="0.0273%" height="15" fill="rgb(207,45,44)" fg:x="65526" fg:w="21"/><text x="85.3354%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (48 samples, 0.06%)</title><rect x="85.0543%" y="1349" width="0.0623%" height="15" fill="rgb(210,66,3)" fg:x="65502" fg:w="48"/><text x="85.3043%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (31 samples, 0.04%)</title><rect x="85.0764%" y="1333" width="0.0403%" height="15" fill="rgb(246,133,30)" fg:x="65519" fg:w="31"/><text x="85.3264%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (31 samples, 0.04%)</title><rect x="85.0764%" y="1317" width="0.0403%" height="15" fill="rgb(224,37,17)" fg:x="65519" fg:w="31"/><text x="85.3264%" y="1327.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="85.1400%" y="1205" width="0.0169%" height="15" fill="rgb(237,218,18)" fg:x="65568" fg:w="13"/><text x="85.3900%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (36 samples, 0.05%)</title><rect x="85.1569%" y="1205" width="0.0467%" height="15" fill="rgb(240,57,8)" fg:x="65581" fg:w="36"/><text x="85.4069%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (22 samples, 0.03%)</title><rect x="85.1750%" y="1189" width="0.0286%" height="15" fill="rgb(231,51,38)" fg:x="65595" fg:w="22"/><text x="85.4250%" y="1199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="85.1750%" y="1173" width="0.0286%" height="15" fill="rgb(230,89,50)" fg:x="65595" fg:w="22"/><text x="85.4250%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="85.1828%" y="1157" width="0.0208%" height="15" fill="rgb(234,103,34)" fg:x="65601" fg:w="16"/><text x="85.4328%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="85.1828%" y="1141" width="0.0208%" height="15" fill="rgb(220,45,48)" fg:x="65601" fg:w="16"/><text x="85.4328%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (16 samples, 0.02%)</title><rect x="85.1828%" y="1125" width="0.0208%" height="15" fill="rgb(250,210,3)" fg:x="65601" fg:w="16"/><text x="85.4328%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="85.1828%" y="1109" width="0.0208%" height="15" fill="rgb(210,118,12)" fg:x="65601" fg:w="16"/><text x="85.4328%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (15 samples, 0.02%)</title><rect x="85.1841%" y="1093" width="0.0195%" height="15" fill="rgb(238,154,21)" fg:x="65602" fg:w="15"/><text x="85.4341%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (13 samples, 0.02%)</title><rect x="85.1867%" y="1077" width="0.0169%" height="15" fill="rgb(227,220,4)" fg:x="65604" fg:w="13"/><text x="85.4367%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.08%)</title><rect x="85.1322%" y="1237" width="0.0792%" height="15" fill="rgb(207,179,27)" fg:x="65562" fg:w="61"/><text x="85.3822%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (61 samples, 0.08%)</title><rect x="85.1322%" y="1221" width="0.0792%" height="15" fill="rgb(240,111,30)" fg:x="65562" fg:w="61"/><text x="85.3822%" y="1231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.09%)</title><rect x="85.1244%" y="1301" width="0.0922%" height="15" fill="rgb(251,29,1)" fg:x="65556" fg:w="71"/><text x="85.3744%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (65 samples, 0.08%)</title><rect x="85.1322%" y="1285" width="0.0844%" height="15" fill="rgb(224,141,39)" fg:x="65562" fg:w="65"/><text x="85.3822%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (65 samples, 0.08%)</title><rect x="85.1322%" y="1269" width="0.0844%" height="15" fill="rgb(207,98,26)" fg:x="65562" fg:w="65"/><text x="85.3822%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (65 samples, 0.08%)</title><rect x="85.1322%" y="1253" width="0.0844%" height="15" fill="rgb(221,37,6)" fg:x="65562" fg:w="65"/><text x="85.3822%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (84 samples, 0.11%)</title><rect x="85.1205%" y="1317" width="0.1091%" height="15" fill="rgb(217,32,44)" fg:x="65553" fg:w="84"/><text x="85.3705%" y="1327.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="85.2166%" y="1301" width="0.0130%" height="15" fill="rgb(253,149,2)" fg:x="65627" fg:w="10"/><text x="85.4666%" y="1311.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="85.2179%" y="1285" width="0.0117%" height="15" fill="rgb(220,165,39)" fg:x="65628" fg:w="9"/><text x="85.4679%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (153 samples, 0.20%)</title><rect x="85.0452%" y="1365" width="0.1987%" height="15" fill="rgb(235,33,48)" fg:x="65495" fg:w="153"/><text x="85.2952%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (98 samples, 0.13%)</title><rect x="85.1166%" y="1349" width="0.1273%" height="15" fill="rgb(221,89,6)" fg:x="65550" fg:w="98"/><text x="85.3666%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (98 samples, 0.13%)</title><rect x="85.1166%" y="1333" width="0.1273%" height="15" fill="rgb(215,214,6)" fg:x="65550" fg:w="98"/><text x="85.3666%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;move_vm_types::values::values_impl::GlobalDataStatus&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="85.2296%" y="1317" width="0.0143%" height="15" fill="rgb(241,1,30)" fg:x="65637" fg:w="11"/><text x="85.4796%" y="1327.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="85.2296%" y="1301" width="0.0143%" height="15" fill="rgb(211,140,32)" fg:x="65637" fg:w="11"/><text x="85.4796%" y="1311.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (174 samples, 0.23%)</title><rect x="85.0348%" y="1381" width="0.2259%" height="15" fill="rgb(232,48,21)" fg:x="65487" fg:w="174"/><text x="85.2848%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (13 samples, 0.02%)</title><rect x="85.2439%" y="1365" width="0.0169%" height="15" fill="rgb(252,217,9)" fg:x="65648" fg:w="13"/><text x="85.4939%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (258 samples, 0.34%)</title><rect x="84.9283%" y="1605" width="0.3350%" height="15" fill="rgb(206,123,34)" fg:x="65405" fg:w="258"/><text x="85.1783%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (258 samples, 0.34%)</title><rect x="84.9283%" y="1589" width="0.3350%" height="15" fill="rgb(245,161,38)" fg:x="65405" fg:w="258"/><text x="85.1783%" y="1599.50"></text></g><g><title>core::mem::drop (258 samples, 0.34%)</title><rect x="84.9283%" y="1573" width="0.3350%" height="15" fill="rgb(233,205,7)" fg:x="65405" fg:w="258"/><text x="85.1783%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (258 samples, 0.34%)</title><rect x="84.9283%" y="1557" width="0.3350%" height="15" fill="rgb(217,119,18)" fg:x="65405" fg:w="258"/><text x="85.1783%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (258 samples, 0.34%)</title><rect x="84.9283%" y="1541" width="0.3350%" height="15" fill="rgb(252,126,3)" fg:x="65405" fg:w="258"/><text x="85.1783%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (240 samples, 0.31%)</title><rect x="84.9517%" y="1525" width="0.3116%" height="15" fill="rgb(252,188,15)" fg:x="65423" fg:w="240"/><text x="85.2017%" y="1535.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (240 samples, 0.31%)</title><rect x="84.9517%" y="1509" width="0.3116%" height="15" fill="rgb(228,1,48)" fg:x="65423" fg:w="240"/><text x="85.2017%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (234 samples, 0.30%)</title><rect x="84.9595%" y="1493" width="0.3038%" height="15" fill="rgb(205,187,8)" fg:x="65429" fg:w="234"/><text x="85.2095%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (226 samples, 0.29%)</title><rect x="84.9699%" y="1477" width="0.2935%" height="15" fill="rgb(205,105,50)" fg:x="65437" fg:w="226"/><text x="85.2199%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (226 samples, 0.29%)</title><rect x="84.9699%" y="1461" width="0.2935%" height="15" fill="rgb(211,31,46)" fg:x="65437" fg:w="226"/><text x="85.2199%" y="1471.50"></text></g><g><title>core::mem::drop (225 samples, 0.29%)</title><rect x="84.9712%" y="1445" width="0.2922%" height="15" fill="rgb(213,126,5)" fg:x="65438" fg:w="225"/><text x="85.2212%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (225 samples, 0.29%)</title><rect x="84.9712%" y="1429" width="0.2922%" height="15" fill="rgb(231,87,9)" fg:x="65438" fg:w="225"/><text x="85.2212%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (225 samples, 0.29%)</title><rect x="84.9712%" y="1413" width="0.2922%" height="15" fill="rgb(219,224,20)" fg:x="65438" fg:w="225"/><text x="85.2212%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (187 samples, 0.24%)</title><rect x="85.0205%" y="1397" width="0.2428%" height="15" fill="rgb(230,84,21)" fg:x="65476" fg:w="187"/><text x="85.2705%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (260 samples, 0.34%)</title><rect x="84.9270%" y="1621" width="0.3376%" height="15" fill="rgb(224,169,42)" fg:x="65404" fg:w="260"/><text x="85.1770%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (262 samples, 0.34%)</title><rect x="84.9257%" y="1653" width="0.3402%" height="15" fill="rgb(227,182,13)" fg:x="65403" fg:w="262"/><text x="85.1757%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (261 samples, 0.34%)</title><rect x="84.9270%" y="1637" width="0.3389%" height="15" fill="rgb(249,57,41)" fg:x="65404" fg:w="261"/><text x="85.1770%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::transaction_metadata::TransactionMetadata&gt; (15 samples, 0.02%)</title><rect x="85.2659%" y="1653" width="0.0195%" height="15" fill="rgb(214,93,52)" fg:x="65665" fg:w="15"/><text x="85.5159%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="85.2737%" y="1637" width="0.0117%" height="15" fill="rgb(229,161,34)" fg:x="65671" fg:w="9"/><text x="85.5237%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="85.2737%" y="1621" width="0.0117%" height="15" fill="rgb(227,193,17)" fg:x="65671" fg:w="9"/><text x="85.5237%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="85.2737%" y="1605" width="0.0117%" height="15" fill="rgb(242,164,46)" fg:x="65671" fg:w="9"/><text x="85.5237%" y="1615.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1909" width="2.0309%" height="15" fill="rgb(242,142,47)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1919.50">&lt;..</text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1893" width="2.0309%" height="15" fill="rgb(208,23,18)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1903.50">r..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1877" width="2.0309%" height="15" fill="rgb(219,54,38)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1887.50">r..</text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1861" width="2.0309%" height="15" fill="rgb(206,97,35)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1871.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1845" width="2.0309%" height="15" fill="rgb(208,76,8)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1855.50">r..</text></g><g><title>std::panic::catch_unwind (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1829" width="2.0309%" height="15" fill="rgb(220,92,28)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1839.50">s..</text></g><g><title>std::panicking::try (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1813" width="2.0309%" height="15" fill="rgb(209,158,39)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1823.50">s..</text></g><g><title>std::panicking::try::do_call (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1797" width="2.0309%" height="15" fill="rgb(238,175,9)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1807.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1781" width="2.0309%" height="15" fill="rgb(240,116,17)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1791.50">&lt;..</text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1765" width="2.0309%" height="15" fill="rgb(208,7,2)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1775.50">r..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1749" width="2.0309%" height="15" fill="rgb(252,52,4)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1759.50">a..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (1,564 samples, 2.03%)</title><rect x="83.2805%" y="1733" width="2.0309%" height="15" fill="rgb(222,68,34)" fg:x="64136" fg:w="1564"/><text x="83.5305%" y="1743.50">a..</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (1,225 samples, 1.59%)</title><rect x="83.7207%" y="1717" width="1.5907%" height="15" fill="rgb(242,154,35)" fg:x="64475" fg:w="1225"/><text x="83.9707%" y="1727.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (1,225 samples, 1.59%)</title><rect x="83.7207%" y="1701" width="1.5907%" height="15" fill="rgb(210,125,54)" fg:x="64475" fg:w="1225"/><text x="83.9707%" y="1711.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (1,225 samples, 1.59%)</title><rect x="83.7207%" y="1685" width="1.5907%" height="15" fill="rgb(247,121,18)" fg:x="64475" fg:w="1225"/><text x="83.9707%" y="1695.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (1,225 samples, 1.59%)</title><rect x="83.7207%" y="1669" width="1.5907%" height="15" fill="rgb(223,48,51)" fg:x="64475" fg:w="1225"/><text x="83.9707%" y="1679.50"></text></g><g><title>prometheus::histogram::Histogram::observe (20 samples, 0.03%)</title><rect x="85.2854%" y="1653" width="0.0260%" height="15" fill="rgb(211,156,48)" fg:x="65680" fg:w="20"/><text x="85.5354%" y="1663.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (17 samples, 0.02%)</title><rect x="85.2893%" y="1637" width="0.0221%" height="15" fill="rgb(236,56,31)" fg:x="65683" fg:w="17"/><text x="85.5393%" y="1647.50"></text></g><g><title>prometheus::histogram::&lt;impl core::convert::From&lt;prometheus::histogram::ShardIndex&gt; for usize&gt;::from (9 samples, 0.01%)</title><rect x="85.2997%" y="1621" width="0.0117%" height="15" fill="rgb(247,157,52)" fg:x="65691" fg:w="9"/><text x="85.5497%" y="1631.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="85.3231%" y="1109" width="0.0143%" height="15" fill="rgb(244,121,39)" fg:x="65709" fg:w="11"/><text x="85.5731%" y="1119.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="85.3231%" y="1093" width="0.0143%" height="15" fill="rgb(239,4,40)" fg:x="65709" fg:w="11"/><text x="85.5731%" y="1103.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="85.3231%" y="1077" width="0.0143%" height="15" fill="rgb(213,204,45)" fg:x="65709" fg:w="11"/><text x="85.5731%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (16 samples, 0.02%)</title><rect x="85.3192%" y="1205" width="0.0208%" height="15" fill="rgb(242,107,0)" fg:x="65706" fg:w="16"/><text x="85.5692%" y="1215.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (13 samples, 0.02%)</title><rect x="85.3231%" y="1189" width="0.0169%" height="15" fill="rgb(215,152,25)" fg:x="65709" fg:w="13"/><text x="85.5731%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="85.3231%" y="1173" width="0.0169%" height="15" fill="rgb(233,151,6)" fg:x="65709" fg:w="13"/><text x="85.5731%" y="1183.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="85.3231%" y="1157" width="0.0169%" height="15" fill="rgb(206,126,44)" fg:x="65709" fg:w="13"/><text x="85.5731%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="85.3231%" y="1141" width="0.0169%" height="15" fill="rgb(209,145,15)" fg:x="65709" fg:w="13"/><text x="85.5731%" y="1151.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (13 samples, 0.02%)</title><rect x="85.3231%" y="1125" width="0.0169%" height="15" fill="rgb(235,214,8)" fg:x="65709" fg:w="13"/><text x="85.5731%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (20 samples, 0.03%)</title><rect x="85.3166%" y="1285" width="0.0260%" height="15" fill="rgb(216,140,51)" fg:x="65704" fg:w="20"/><text x="85.5666%" y="1295.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (20 samples, 0.03%)</title><rect x="85.3166%" y="1269" width="0.0260%" height="15" fill="rgb(213,83,34)" fg:x="65704" fg:w="20"/><text x="85.5666%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (19 samples, 0.02%)</title><rect x="85.3179%" y="1253" width="0.0247%" height="15" fill="rgb(218,186,44)" fg:x="65705" fg:w="19"/><text x="85.5679%" y="1263.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (19 samples, 0.02%)</title><rect x="85.3179%" y="1237" width="0.0247%" height="15" fill="rgb(225,147,10)" fg:x="65705" fg:w="19"/><text x="85.5679%" y="1247.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (19 samples, 0.02%)</title><rect x="85.3179%" y="1221" width="0.0247%" height="15" fill="rgb(209,214,20)" fg:x="65705" fg:w="19"/><text x="85.5679%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (22 samples, 0.03%)</title><rect x="85.3166%" y="1317" width="0.0286%" height="15" fill="rgb(252,61,32)" fg:x="65704" fg:w="22"/><text x="85.5666%" y="1327.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (22 samples, 0.03%)</title><rect x="85.3166%" y="1301" width="0.0286%" height="15" fill="rgb(237,204,10)" fg:x="65704" fg:w="22"/><text x="85.5666%" y="1311.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (1,594 samples, 2.07%)</title><rect x="83.2805%" y="2005" width="2.0698%" height="15" fill="rgb(246,118,16)" fg:x="64136" fg:w="1594"/><text x="83.5305%" y="2015.50">r..</text></g><g><title>rayon_core::registry::main_loop (1,594 samples, 2.07%)</title><rect x="83.2805%" y="1989" width="2.0698%" height="15" fill="rgb(214,50,9)" fg:x="64136" fg:w="1594"/><text x="83.5305%" y="1999.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1,594 samples, 2.07%)</title><rect x="83.2805%" y="1973" width="2.0698%" height="15" fill="rgb(212,41,1)" fg:x="64136" fg:w="1594"/><text x="83.5305%" y="1983.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,594 samples, 2.07%)</title><rect x="83.2805%" y="1957" width="2.0698%" height="15" fill="rgb(228,172,32)" fg:x="64136" fg:w="1594"/><text x="83.5305%" y="1967.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::execute (1,594 samples, 2.07%)</title><rect x="83.2805%" y="1941" width="2.0698%" height="15" fill="rgb(231,85,38)" fg:x="64136" fg:w="1594"/><text x="83.5305%" y="1951.50">r..</text></g><g><title>rayon_core::job::JobRef::execute (1,594 samples, 2.07%)</title><rect x="83.2805%" y="1925" width="2.0698%" height="15" fill="rgb(223,120,31)" fg:x="64136" fg:w="1594"/><text x="83.5305%" y="1935.50">r..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (30 samples, 0.04%)</title><rect x="85.3114%" y="1909" width="0.0390%" height="15" fill="rgb(254,174,9)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1919.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (30 samples, 0.04%)</title><rect x="85.3114%" y="1893" width="0.0390%" height="15" fill="rgb(243,197,0)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (30 samples, 0.04%)</title><rect x="85.3114%" y="1877" width="0.0390%" height="15" fill="rgb(226,186,17)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.04%)</title><rect x="85.3114%" y="1861" width="0.0390%" height="15" fill="rgb(229,38,38)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1871.50"></text></g><g><title>std::panicking::try (30 samples, 0.04%)</title><rect x="85.3114%" y="1845" width="0.0390%" height="15" fill="rgb(238,82,14)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.04%)</title><rect x="85.3114%" y="1829" width="0.0390%" height="15" fill="rgb(230,154,54)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 0.04%)</title><rect x="85.3114%" y="1813" width="0.0390%" height="15" fill="rgb(243,84,17)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1823.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (30 samples, 0.04%)</title><rect x="85.3114%" y="1797" width="0.0390%" height="15" fill="rgb(226,41,37)" fg:x="65700" fg:w="30"/><text x="85.5614%" y="1807.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (28 samples, 0.04%)</title><rect x="85.3140%" y="1781" width="0.0364%" height="15" fill="rgb(219,20,18)" fg:x="65702" fg:w="28"/><text x="85.5640%" y="1791.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (27 samples, 0.04%)</title><rect x="85.3153%" y="1765" width="0.0351%" height="15" fill="rgb(243,173,39)" fg:x="65703" fg:w="27"/><text x="85.5653%" y="1775.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (26 samples, 0.03%)</title><rect x="85.3166%" y="1749" width="0.0338%" height="15" fill="rgb(245,79,20)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1759.50"></text></g><g><title>rayon_core::scope::scope (26 samples, 0.03%)</title><rect x="85.3166%" y="1733" width="0.0338%" height="15" fill="rgb(229,101,45)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1743.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.03%)</title><rect x="85.3166%" y="1717" width="0.0338%" height="15" fill="rgb(215,123,52)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1727.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (26 samples, 0.03%)</title><rect x="85.3166%" y="1701" width="0.0338%" height="15" fill="rgb(215,11,33)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1711.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (26 samples, 0.03%)</title><rect x="85.3166%" y="1685" width="0.0338%" height="15" fill="rgb(245,105,20)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1695.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.03%)</title><rect x="85.3166%" y="1669" width="0.0338%" height="15" fill="rgb(231,132,30)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1679.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (26 samples, 0.03%)</title><rect x="85.3166%" y="1653" width="0.0338%" height="15" fill="rgb(224,62,21)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1663.50"></text></g><g><title>rayon_core::job::JobRef::execute (26 samples, 0.03%)</title><rect x="85.3166%" y="1637" width="0.0338%" height="15" fill="rgb(209,221,38)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1647.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.03%)</title><rect x="85.3166%" y="1621" width="0.0338%" height="15" fill="rgb(229,200,30)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1631.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (26 samples, 0.03%)</title><rect x="85.3166%" y="1605" width="0.0338%" height="15" fill="rgb(237,142,41)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1615.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (26 samples, 0.03%)</title><rect x="85.3166%" y="1589" width="0.0338%" height="15" fill="rgb(238,37,22)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1599.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (26 samples, 0.03%)</title><rect x="85.3166%" y="1573" width="0.0338%" height="15" fill="rgb(234,182,17)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1583.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.03%)</title><rect x="85.3166%" y="1557" width="0.0338%" height="15" fill="rgb(237,58,48)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.03%)</title><rect x="85.3166%" y="1541" width="0.0338%" height="15" fill="rgb(226,112,37)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1551.50"></text></g><g><title>std::panicking::try (26 samples, 0.03%)</title><rect x="85.3166%" y="1525" width="0.0338%" height="15" fill="rgb(230,201,20)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="85.3166%" y="1509" width="0.0338%" height="15" fill="rgb(252,95,39)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1519.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="85.3166%" y="1493" width="0.0338%" height="15" fill="rgb(240,150,33)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1503.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="85.3166%" y="1477" width="0.0338%" height="15" fill="rgb(208,202,37)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1487.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="85.3166%" y="1461" width="0.0338%" height="15" fill="rgb(251,37,12)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1471.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (26 samples, 0.03%)</title><rect x="85.3166%" y="1445" width="0.0338%" height="15" fill="rgb(247,150,26)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1455.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (26 samples, 0.03%)</title><rect x="85.3166%" y="1429" width="0.0338%" height="15" fill="rgb(232,28,8)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1439.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (26 samples, 0.03%)</title><rect x="85.3166%" y="1413" width="0.0338%" height="15" fill="rgb(226,121,34)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1423.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (26 samples, 0.03%)</title><rect x="85.3166%" y="1397" width="0.0338%" height="15" fill="rgb(237,23,13)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1407.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (26 samples, 0.03%)</title><rect x="85.3166%" y="1381" width="0.0338%" height="15" fill="rgb(214,42,29)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (26 samples, 0.03%)</title><rect x="85.3166%" y="1365" width="0.0338%" height="15" fill="rgb(246,204,29)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (26 samples, 0.03%)</title><rect x="85.3166%" y="1349" width="0.0338%" height="15" fill="rgb(242,28,40)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (26 samples, 0.03%)</title><rect x="85.3166%" y="1333" width="0.0338%" height="15" fill="rgb(243,64,49)" fg:x="65704" fg:w="26"/><text x="85.5666%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (19 samples, 0.02%)</title><rect x="85.3503%" y="1621" width="0.0247%" height="15" fill="rgb(226,93,13)" fg:x="65730" fg:w="19"/><text x="85.6003%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (19 samples, 0.02%)</title><rect x="85.3503%" y="1605" width="0.0247%" height="15" fill="rgb(241,113,26)" fg:x="65730" fg:w="19"/><text x="85.6003%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (19 samples, 0.02%)</title><rect x="85.3503%" y="1589" width="0.0247%" height="15" fill="rgb(209,209,0)" fg:x="65730" fg:w="19"/><text x="85.6003%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (19 samples, 0.02%)</title><rect x="85.3503%" y="1573" width="0.0247%" height="15" fill="rgb(251,183,50)" fg:x="65730" fg:w="19"/><text x="85.6003%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (19 samples, 0.02%)</title><rect x="85.3503%" y="1557" width="0.0247%" height="15" fill="rgb(248,24,43)" fg:x="65730" fg:w="19"/><text x="85.6003%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (16 samples, 0.02%)</title><rect x="85.3542%" y="1541" width="0.0208%" height="15" fill="rgb(218,102,9)" fg:x="65733" fg:w="16"/><text x="85.6042%" y="1551.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (10 samples, 0.01%)</title><rect x="85.3620%" y="1525" width="0.0130%" height="15" fill="rgb(249,209,39)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="85.3620%" y="1509" width="0.0130%" height="15" fill="rgb(210,37,6)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1519.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="85.3620%" y="1493" width="0.0130%" height="15" fill="rgb(212,99,4)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="85.3620%" y="1477" width="0.0130%" height="15" fill="rgb(253,59,46)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1487.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (10 samples, 0.01%)</title><rect x="85.3620%" y="1461" width="0.0130%" height="15" fill="rgb(229,96,9)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1471.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (10 samples, 0.01%)</title><rect x="85.3620%" y="1445" width="0.0130%" height="15" fill="rgb(207,103,49)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1455.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (10 samples, 0.01%)</title><rect x="85.3620%" y="1429" width="0.0130%" height="15" fill="rgb(250,226,20)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1439.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (10 samples, 0.01%)</title><rect x="85.3620%" y="1413" width="0.0130%" height="15" fill="rgb(238,220,11)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1423.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (10 samples, 0.01%)</title><rect x="85.3620%" y="1397" width="0.0130%" height="15" fill="rgb(236,74,15)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1407.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (10 samples, 0.01%)</title><rect x="85.3620%" y="1381" width="0.0130%" height="15" fill="rgb(218,43,40)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1391.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (10 samples, 0.01%)</title><rect x="85.3620%" y="1365" width="0.0130%" height="15" fill="rgb(245,206,37)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1375.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (10 samples, 0.01%)</title><rect x="85.3620%" y="1349" width="0.0130%" height="15" fill="rgb(206,30,3)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1359.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (10 samples, 0.01%)</title><rect x="85.3620%" y="1333" width="0.0130%" height="15" fill="rgb(211,29,35)" fg:x="65739" fg:w="10"/><text x="85.6120%" y="1343.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (9 samples, 0.01%)</title><rect x="85.3633%" y="1317" width="0.0117%" height="15" fill="rgb(218,49,50)" fg:x="65740" fg:w="9"/><text x="85.6133%" y="1327.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field (9 samples, 0.01%)</title><rect x="85.3633%" y="1301" width="0.0117%" height="15" fill="rgb(211,114,30)" fg:x="65740" fg:w="9"/><text x="85.6133%" y="1311.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::release (9 samples, 0.01%)</title><rect x="85.3633%" y="1285" width="0.0117%" height="15" fill="rgb(238,70,33)" fg:x="65740" fg:w="9"/><text x="85.6133%" y="1295.50"></text></g><g><title>move_borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (9 samples, 0.01%)</title><rect x="85.3633%" y="1269" width="0.0117%" height="15" fill="rgb(238,141,50)" fg:x="65740" fg:w="9"/><text x="85.6133%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (26 samples, 0.03%)</title><rect x="85.3503%" y="1653" width="0.0338%" height="15" fill="rgb(205,69,6)" fg:x="65730" fg:w="26"/><text x="85.6003%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (26 samples, 0.03%)</title><rect x="85.3503%" y="1637" width="0.0338%" height="15" fill="rgb(229,65,0)" fg:x="65730" fg:w="26"/><text x="85.6003%" y="1647.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (28 samples, 0.04%)</title><rect x="85.3503%" y="1765" width="0.0364%" height="15" fill="rgb(211,3,37)" fg:x="65730" fg:w="28"/><text x="85.6003%" y="1775.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (28 samples, 0.04%)</title><rect x="85.3503%" y="1749" width="0.0364%" height="15" fill="rgb(223,196,42)" fg:x="65730" fg:w="28"/><text x="85.6003%" y="1759.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (28 samples, 0.04%)</title><rect x="85.3503%" y="1733" width="0.0364%" height="15" fill="rgb(227,191,15)" fg:x="65730" fg:w="28"/><text x="85.6003%" y="1743.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (28 samples, 0.04%)</title><rect x="85.3503%" y="1717" width="0.0364%" height="15" fill="rgb(229,210,53)" fg:x="65730" fg:w="28"/><text x="85.6003%" y="1727.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (28 samples, 0.04%)</title><rect x="85.3503%" y="1701" width="0.0364%" height="15" fill="rgb(250,203,10)" fg:x="65730" fg:w="28"/><text x="85.6003%" y="1711.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (28 samples, 0.04%)</title><rect x="85.3503%" y="1685" width="0.0364%" height="15" fill="rgb(247,8,37)" fg:x="65730" fg:w="28"/><text x="85.6003%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (28 samples, 0.04%)</title><rect x="85.3503%" y="1669" width="0.0364%" height="15" fill="rgb(240,52,9)" fg:x="65730" fg:w="28"/><text x="85.6003%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (11 samples, 0.01%)</title><rect x="85.3867%" y="1701" width="0.0143%" height="15" fill="rgb(243,100,52)" fg:x="65758" fg:w="11"/><text x="85.6367%" y="1711.50"></text></g><g><title>hashbrown::map::make_insert_hash (24 samples, 0.03%)</title><rect x="85.4010%" y="1621" width="0.0312%" height="15" fill="rgb(224,149,30)" fg:x="65769" fg:w="24"/><text x="85.6510%" y="1631.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.03%)</title><rect x="85.4010%" y="1605" width="0.0312%" height="15" fill="rgb(232,27,45)" fg:x="65769" fg:w="24"/><text x="85.6510%" y="1615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14 samples, 0.02%)</title><rect x="85.4140%" y="1589" width="0.0182%" height="15" fill="rgb(242,161,36)" fg:x="65779" fg:w="14"/><text x="85.6640%" y="1599.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="85.4140%" y="1573" width="0.0182%" height="15" fill="rgb(235,223,32)" fg:x="65779" fg:w="14"/><text x="85.6640%" y="1583.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (14 samples, 0.02%)</title><rect x="85.4140%" y="1557" width="0.0182%" height="15" fill="rgb(242,78,19)" fg:x="65779" fg:w="14"/><text x="85.6640%" y="1567.50"></text></g><g><title>core::hash::Hasher::write_u64 (13 samples, 0.02%)</title><rect x="85.4153%" y="1541" width="0.0169%" height="15" fill="rgb(233,157,47)" fg:x="65780" fg:w="13"/><text x="85.6653%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="85.4153%" y="1525" width="0.0169%" height="15" fill="rgb(251,213,5)" fg:x="65780" fg:w="13"/><text x="85.6653%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="85.4153%" y="1509" width="0.0169%" height="15" fill="rgb(215,223,5)" fg:x="65780" fg:w="13"/><text x="85.6653%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="85.4153%" y="1493" width="0.0169%" height="15" fill="rgb(230,14,7)" fg:x="65780" fg:w="13"/><text x="85.6653%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 0.01%)</title><rect x="85.4464%" y="1605" width="0.0104%" height="15" fill="rgb(249,179,20)" fg:x="65804" fg:w="8"/><text x="85.6964%" y="1615.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (44 samples, 0.06%)</title><rect x="85.4010%" y="1701" width="0.0571%" height="15" fill="rgb(230,204,44)" fg:x="65769" fg:w="44"/><text x="85.6510%" y="1711.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (44 samples, 0.06%)</title><rect x="85.4010%" y="1685" width="0.0571%" height="15" fill="rgb(233,229,46)" fg:x="65769" fg:w="44"/><text x="85.6510%" y="1695.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (44 samples, 0.06%)</title><rect x="85.4010%" y="1669" width="0.0571%" height="15" fill="rgb(210,154,35)" fg:x="65769" fg:w="44"/><text x="85.6510%" y="1679.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (44 samples, 0.06%)</title><rect x="85.4010%" y="1653" width="0.0571%" height="15" fill="rgb(220,178,16)" fg:x="65769" fg:w="44"/><text x="85.6510%" y="1663.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44 samples, 0.06%)</title><rect x="85.4010%" y="1637" width="0.0571%" height="15" fill="rgb(243,0,53)" fg:x="65769" fg:w="44"/><text x="85.6510%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (20 samples, 0.03%)</title><rect x="85.4321%" y="1621" width="0.0260%" height="15" fill="rgb(223,221,47)" fg:x="65793" fg:w="20"/><text x="85.6821%" y="1631.50"></text></g><g><title>cfree (25 samples, 0.03%)</title><rect x="85.4633%" y="1317" width="0.0325%" height="15" fill="rgb(233,82,15)" fg:x="65817" fg:w="25"/><text x="85.7133%" y="1327.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="85.4633%" y="1301" width="0.0325%" height="15" fill="rgb(222,8,38)" fg:x="65817" fg:w="25"/><text x="85.7133%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (58 samples, 0.08%)</title><rect x="85.4633%" y="1397" width="0.0753%" height="15" fill="rgb(241,28,48)" fg:x="65817" fg:w="58"/><text x="85.7133%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (58 samples, 0.08%)</title><rect x="85.4633%" y="1381" width="0.0753%" height="15" fill="rgb(209,227,15)" fg:x="65817" fg:w="58"/><text x="85.7133%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (58 samples, 0.08%)</title><rect x="85.4633%" y="1365" width="0.0753%" height="15" fill="rgb(234,189,48)" fg:x="65817" fg:w="58"/><text x="85.7133%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.08%)</title><rect x="85.4633%" y="1349" width="0.0753%" height="15" fill="rgb(212,27,44)" fg:x="65817" fg:w="58"/><text x="85.7133%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (58 samples, 0.08%)</title><rect x="85.4633%" y="1333" width="0.0753%" height="15" fill="rgb(249,55,42)" fg:x="65817" fg:w="58"/><text x="85.7133%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (33 samples, 0.04%)</title><rect x="85.4958%" y="1317" width="0.0429%" height="15" fill="rgb(215,211,28)" fg:x="65842" fg:w="33"/><text x="85.7458%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (32 samples, 0.04%)</title><rect x="85.4971%" y="1301" width="0.0416%" height="15" fill="rgb(221,155,16)" fg:x="65843" fg:w="32"/><text x="85.7471%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (32 samples, 0.04%)</title><rect x="85.4971%" y="1285" width="0.0416%" height="15" fill="rgb(247,106,30)" fg:x="65843" fg:w="32"/><text x="85.7471%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.04%)</title><rect x="85.4971%" y="1269" width="0.0416%" height="15" fill="rgb(230,76,31)" fg:x="65843" fg:w="32"/><text x="85.7471%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (32 samples, 0.04%)</title><rect x="85.4971%" y="1253" width="0.0416%" height="15" fill="rgb(222,6,48)" fg:x="65843" fg:w="32"/><text x="85.7471%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (25 samples, 0.03%)</title><rect x="85.5062%" y="1237" width="0.0325%" height="15" fill="rgb(228,82,3)" fg:x="65850" fg:w="25"/><text x="85.7562%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (8 samples, 0.01%)</title><rect x="85.5282%" y="1221" width="0.0104%" height="15" fill="rgb(245,208,52)" fg:x="65867" fg:w="8"/><text x="85.7782%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (8 samples, 0.01%)</title><rect x="85.5282%" y="1205" width="0.0104%" height="15" fill="rgb(218,65,17)" fg:x="65867" fg:w="8"/><text x="85.7782%" y="1215.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="85.5386%" y="1253" width="0.0143%" height="15" fill="rgb(242,63,26)" fg:x="65875" fg:w="11"/><text x="85.7886%" y="1263.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="85.5386%" y="1237" width="0.0143%" height="15" fill="rgb(224,119,39)" fg:x="65875" fg:w="11"/><text x="85.7886%" y="1247.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="85.5529%" y="1237" width="0.0156%" height="15" fill="rgb(229,106,3)" fg:x="65886" fg:w="12"/><text x="85.8029%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (14 samples, 0.02%)</title><rect x="85.5945%" y="997" width="0.0182%" height="15" fill="rgb(248,6,33)" fg:x="65918" fg:w="14"/><text x="85.8445%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="85.6022%" y="981" width="0.0104%" height="15" fill="rgb(226,3,49)" fg:x="65924" fg:w="8"/><text x="85.8522%" y="991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="85.6022%" y="965" width="0.0104%" height="15" fill="rgb(228,142,14)" fg:x="65924" fg:w="8"/><text x="85.8522%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.08%)</title><rect x="85.5386%" y="1285" width="0.0831%" height="15" fill="rgb(241,141,54)" fg:x="65875" fg:w="64"/><text x="85.7886%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (64 samples, 0.08%)</title><rect x="85.5386%" y="1269" width="0.0831%" height="15" fill="rgb(252,17,50)" fg:x="65875" fg:w="64"/><text x="85.7886%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (53 samples, 0.07%)</title><rect x="85.5529%" y="1253" width="0.0688%" height="15" fill="rgb(221,120,48)" fg:x="65886" fg:w="53"/><text x="85.8029%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (41 samples, 0.05%)</title><rect x="85.5685%" y="1237" width="0.0532%" height="15" fill="rgb(229,171,33)" fg:x="65898" fg:w="41"/><text x="85.8185%" y="1247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="85.5685%" y="1221" width="0.0532%" height="15" fill="rgb(236,207,21)" fg:x="65898" fg:w="41"/><text x="85.8185%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (41 samples, 0.05%)</title><rect x="85.5685%" y="1205" width="0.0532%" height="15" fill="rgb(218,93,35)" fg:x="65898" fg:w="41"/><text x="85.8185%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (41 samples, 0.05%)</title><rect x="85.5685%" y="1189" width="0.0532%" height="15" fill="rgb(207,101,8)" fg:x="65898" fg:w="41"/><text x="85.8185%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (41 samples, 0.05%)</title><rect x="85.5685%" y="1173" width="0.0532%" height="15" fill="rgb(237,67,44)" fg:x="65898" fg:w="41"/><text x="85.8185%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="85.5685%" y="1157" width="0.0532%" height="15" fill="rgb(236,218,7)" fg:x="65898" fg:w="41"/><text x="85.8185%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (41 samples, 0.05%)</title><rect x="85.5685%" y="1141" width="0.0532%" height="15" fill="rgb(252,207,10)" fg:x="65898" fg:w="41"/><text x="85.8185%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (34 samples, 0.04%)</title><rect x="85.5776%" y="1125" width="0.0441%" height="15" fill="rgb(221,175,6)" fg:x="65905" fg:w="34"/><text x="85.8276%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (28 samples, 0.04%)</title><rect x="85.5854%" y="1109" width="0.0364%" height="15" fill="rgb(230,105,53)" fg:x="65911" fg:w="28"/><text x="85.8354%" y="1119.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="85.5854%" y="1093" width="0.0364%" height="15" fill="rgb(253,83,6)" fg:x="65911" fg:w="28"/><text x="85.8354%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (22 samples, 0.03%)</title><rect x="85.5932%" y="1077" width="0.0286%" height="15" fill="rgb(206,198,44)" fg:x="65917" fg:w="22"/><text x="85.8432%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (22 samples, 0.03%)</title><rect x="85.5932%" y="1061" width="0.0286%" height="15" fill="rgb(206,164,29)" fg:x="65917" fg:w="22"/><text x="85.8432%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (22 samples, 0.03%)</title><rect x="85.5932%" y="1045" width="0.0286%" height="15" fill="rgb(215,2,50)" fg:x="65917" fg:w="22"/><text x="85.8432%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="85.5932%" y="1029" width="0.0286%" height="15" fill="rgb(246,127,18)" fg:x="65917" fg:w="22"/><text x="85.8432%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (22 samples, 0.03%)</title><rect x="85.5932%" y="1013" width="0.0286%" height="15" fill="rgb(232,6,21)" fg:x="65917" fg:w="22"/><text x="85.8432%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (215 samples, 0.28%)</title><rect x="85.3503%" y="1957" width="0.2792%" height="15" fill="rgb(224,154,1)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1967.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (215 samples, 0.28%)</title><rect x="85.3503%" y="1941" width="0.2792%" height="15" fill="rgb(248,135,32)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1951.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (215 samples, 0.28%)</title><rect x="85.3503%" y="1925" width="0.2792%" height="15" fill="rgb(253,129,38)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1935.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (215 samples, 0.28%)</title><rect x="85.3503%" y="1909" width="0.2792%" height="15" fill="rgb(214,110,11)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1919.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (215 samples, 0.28%)</title><rect x="85.3503%" y="1893" width="0.2792%" height="15" fill="rgb(246,150,22)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (215 samples, 0.28%)</title><rect x="85.3503%" y="1877" width="0.2792%" height="15" fill="rgb(219,170,39)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1887.50"></text></g><g><title>std::panicking::try (215 samples, 0.28%)</title><rect x="85.3503%" y="1861" width="0.2792%" height="15" fill="rgb(221,143,52)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (215 samples, 0.28%)</title><rect x="85.3503%" y="1845" width="0.2792%" height="15" fill="rgb(237,122,11)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1855.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (215 samples, 0.28%)</title><rect x="85.3503%" y="1829" width="0.2792%" height="15" fill="rgb(217,114,13)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1839.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (215 samples, 0.28%)</title><rect x="85.3503%" y="1813" width="0.2792%" height="15" fill="rgb(218,184,28)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1823.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (215 samples, 0.28%)</title><rect x="85.3503%" y="1797" width="0.2792%" height="15" fill="rgb(237,33,22)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1807.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (215 samples, 0.28%)</title><rect x="85.3503%" y="1781" width="0.2792%" height="15" fill="rgb(224,56,42)" fg:x="65730" fg:w="215"/><text x="85.6003%" y="1791.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (187 samples, 0.24%)</title><rect x="85.3867%" y="1765" width="0.2428%" height="15" fill="rgb(216,138,53)" fg:x="65758" fg:w="187"/><text x="85.6367%" y="1775.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (187 samples, 0.24%)</title><rect x="85.3867%" y="1749" width="0.2428%" height="15" fill="rgb(233,229,40)" fg:x="65758" fg:w="187"/><text x="85.6367%" y="1759.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (187 samples, 0.24%)</title><rect x="85.3867%" y="1733" width="0.2428%" height="15" fill="rgb(252,105,0)" fg:x="65758" fg:w="187"/><text x="85.6367%" y="1743.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (187 samples, 0.24%)</title><rect x="85.3867%" y="1717" width="0.2428%" height="15" fill="rgb(212,75,24)" fg:x="65758" fg:w="187"/><text x="85.6367%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1701" width="0.1714%" height="15" fill="rgb(235,168,50)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1685" width="0.1714%" height="15" fill="rgb(247,204,12)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1669" width="0.1714%" height="15" fill="rgb(250,203,27)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1653" width="0.1714%" height="15" fill="rgb(221,215,2)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.17%)</title><rect x="85.4581%" y="1637" width="0.1714%" height="15" fill="rgb(242,163,47)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1647.50"></text></g><g><title>core::mem::drop (132 samples, 0.17%)</title><rect x="85.4581%" y="1621" width="0.1714%" height="15" fill="rgb(237,136,50)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1605" width="0.1714%" height="15" fill="rgb(217,201,47)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.17%)</title><rect x="85.4581%" y="1589" width="0.1714%" height="15" fill="rgb(212,38,47)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (132 samples, 0.17%)</title><rect x="85.4581%" y="1573" width="0.1714%" height="15" fill="rgb(254,113,41)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (132 samples, 0.17%)</title><rect x="85.4581%" y="1557" width="0.1714%" height="15" fill="rgb(236,7,22)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1541" width="0.1714%" height="15" fill="rgb(235,81,25)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1525" width="0.1714%" height="15" fill="rgb(216,41,31)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.17%)</title><rect x="85.4581%" y="1509" width="0.1714%" height="15" fill="rgb(249,219,15)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1519.50"></text></g><g><title>core::mem::drop (132 samples, 0.17%)</title><rect x="85.4581%" y="1493" width="0.1714%" height="15" fill="rgb(248,201,3)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (132 samples, 0.17%)</title><rect x="85.4581%" y="1477" width="0.1714%" height="15" fill="rgb(249,141,18)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.17%)</title><rect x="85.4581%" y="1461" width="0.1714%" height="15" fill="rgb(222,32,39)" fg:x="65813" fg:w="132"/><text x="85.7081%" y="1471.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (128 samples, 0.17%)</title><rect x="85.4633%" y="1445" width="0.1662%" height="15" fill="rgb(237,139,51)" fg:x="65817" fg:w="128"/><text x="85.7133%" y="1455.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (128 samples, 0.17%)</title><rect x="85.4633%" y="1429" width="0.1662%" height="15" fill="rgb(218,210,4)" fg:x="65817" fg:w="128"/><text x="85.7133%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (128 samples, 0.17%)</title><rect x="85.4633%" y="1413" width="0.1662%" height="15" fill="rgb(217,199,13)" fg:x="65817" fg:w="128"/><text x="85.7133%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (70 samples, 0.09%)</title><rect x="85.5386%" y="1397" width="0.0909%" height="15" fill="rgb(222,118,25)" fg:x="65875" fg:w="70"/><text x="85.7886%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (70 samples, 0.09%)</title><rect x="85.5386%" y="1381" width="0.0909%" height="15" fill="rgb(241,70,28)" fg:x="65875" fg:w="70"/><text x="85.7886%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (70 samples, 0.09%)</title><rect x="85.5386%" y="1365" width="0.0909%" height="15" fill="rgb(205,51,41)" fg:x="65875" fg:w="70"/><text x="85.7886%" y="1375.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.09%)</title><rect x="85.5386%" y="1349" width="0.0909%" height="15" fill="rgb(237,165,49)" fg:x="65875" fg:w="70"/><text x="85.7886%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (70 samples, 0.09%)</title><rect x="85.5386%" y="1333" width="0.0909%" height="15" fill="rgb(213,10,51)" fg:x="65875" fg:w="70"/><text x="85.7886%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (70 samples, 0.09%)</title><rect x="85.5386%" y="1317" width="0.0909%" height="15" fill="rgb(245,89,32)" fg:x="65875" fg:w="70"/><text x="85.7886%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (70 samples, 0.09%)</title><rect x="85.5386%" y="1301" width="0.0909%" height="15" fill="rgb(249,81,54)" fg:x="65875" fg:w="70"/><text x="85.7886%" y="1311.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (9 samples, 0.01%)</title><rect x="85.6529%" y="1413" width="0.0117%" height="15" fill="rgb(223,134,14)" fg:x="65963" fg:w="9"/><text x="85.9029%" y="1423.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (31 samples, 0.04%)</title><rect x="85.6646%" y="1413" width="0.0403%" height="15" fill="rgb(233,62,37)" fg:x="65972" fg:w="31"/><text x="85.9146%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (285 samples, 0.37%)</title><rect x="85.3503%" y="2005" width="0.3701%" height="15" fill="rgb(219,117,42)" fg:x="65730" fg:w="285"/><text x="85.6003%" y="2015.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (285 samples, 0.37%)</title><rect x="85.3503%" y="1989" width="0.3701%" height="15" fill="rgb(248,40,28)" fg:x="65730" fg:w="285"/><text x="85.6003%" y="1999.50"></text></g><g><title>rayon_core::job::JobRef::execute (285 samples, 0.37%)</title><rect x="85.3503%" y="1973" width="0.3701%" height="15" fill="rgb(246,66,35)" fg:x="65730" fg:w="285"/><text x="85.6003%" y="1983.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (70 samples, 0.09%)</title><rect x="85.6295%" y="1957" width="0.0909%" height="15" fill="rgb(250,229,22)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1967.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (70 samples, 0.09%)</title><rect x="85.6295%" y="1941" width="0.0909%" height="15" fill="rgb(213,89,18)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1951.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (70 samples, 0.09%)</title><rect x="85.6295%" y="1925" width="0.0909%" height="15" fill="rgb(213,122,9)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (70 samples, 0.09%)</title><rect x="85.6295%" y="1909" width="0.0909%" height="15" fill="rgb(220,213,48)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1919.50"></text></g><g><title>std::panicking::try (70 samples, 0.09%)</title><rect x="85.6295%" y="1893" width="0.0909%" height="15" fill="rgb(244,109,54)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (70 samples, 0.09%)</title><rect x="85.6295%" y="1877" width="0.0909%" height="15" fill="rgb(254,104,49)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1887.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (70 samples, 0.09%)</title><rect x="85.6295%" y="1861" width="0.0909%" height="15" fill="rgb(219,28,32)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1871.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (70 samples, 0.09%)</title><rect x="85.6295%" y="1845" width="0.0909%" height="15" fill="rgb(249,153,33)" fg:x="65945" fg:w="70"/><text x="85.8795%" y="1855.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (69 samples, 0.09%)</title><rect x="85.6308%" y="1829" width="0.0896%" height="15" fill="rgb(230,116,21)" fg:x="65946" fg:w="69"/><text x="85.8808%" y="1839.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (69 samples, 0.09%)</title><rect x="85.6308%" y="1813" width="0.0896%" height="15" fill="rgb(247,110,3)" fg:x="65946" fg:w="69"/><text x="85.8808%" y="1823.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::scope::{{closure}} (68 samples, 0.09%)</title><rect x="85.6321%" y="1797" width="0.0883%" height="15" fill="rgb(227,128,3)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1807.50"></text></g><g><title>rayon_core::scope::scope (68 samples, 0.09%)</title><rect x="85.6321%" y="1781" width="0.0883%" height="15" fill="rgb(208,21,1)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1791.50"></text></g><g><title>rayon_core::registry::in_worker (68 samples, 0.09%)</title><rect x="85.6321%" y="1765" width="0.0883%" height="15" fill="rgb(225,24,20)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1775.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (68 samples, 0.09%)</title><rect x="85.6321%" y="1749" width="0.0883%" height="15" fill="rgb(250,159,24)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1759.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (68 samples, 0.09%)</title><rect x="85.6321%" y="1733" width="0.0883%" height="15" fill="rgb(214,30,53)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1743.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (68 samples, 0.09%)</title><rect x="85.6321%" y="1717" width="0.0883%" height="15" fill="rgb(243,198,11)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (68 samples, 0.09%)</title><rect x="85.6321%" y="1701" width="0.0883%" height="15" fill="rgb(232,33,1)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1711.50"></text></g><g><title>rayon_core::job::JobRef::execute (68 samples, 0.09%)</title><rect x="85.6321%" y="1685" width="0.0883%" height="15" fill="rgb(242,60,11)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1695.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (68 samples, 0.09%)</title><rect x="85.6321%" y="1669" width="0.0883%" height="15" fill="rgb(241,229,34)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1679.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (68 samples, 0.09%)</title><rect x="85.6321%" y="1653" width="0.0883%" height="15" fill="rgb(230,92,51)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1663.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (68 samples, 0.09%)</title><rect x="85.6321%" y="1637" width="0.0883%" height="15" fill="rgb(212,209,8)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1647.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (68 samples, 0.09%)</title><rect x="85.6321%" y="1621" width="0.0883%" height="15" fill="rgb(241,55,35)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1631.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (68 samples, 0.09%)</title><rect x="85.6321%" y="1605" width="0.0883%" height="15" fill="rgb(208,187,52)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (68 samples, 0.09%)</title><rect x="85.6321%" y="1589" width="0.0883%" height="15" fill="rgb(251,110,17)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1599.50"></text></g><g><title>std::panicking::try (68 samples, 0.09%)</title><rect x="85.6321%" y="1573" width="0.0883%" height="15" fill="rgb(246,225,54)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (68 samples, 0.09%)</title><rect x="85.6321%" y="1557" width="0.0883%" height="15" fill="rgb(220,109,6)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1567.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68 samples, 0.09%)</title><rect x="85.6321%" y="1541" width="0.0883%" height="15" fill="rgb(228,56,50)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1551.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (68 samples, 0.09%)</title><rect x="85.6321%" y="1525" width="0.0883%" height="15" fill="rgb(230,34,30)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1535.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (68 samples, 0.09%)</title><rect x="85.6321%" y="1509" width="0.0883%" height="15" fill="rgb(205,28,42)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1519.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (68 samples, 0.09%)</title><rect x="85.6321%" y="1493" width="0.0883%" height="15" fill="rgb(215,68,0)" fg:x="65947" fg:w="68"/><text x="85.8821%" y="1503.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (61 samples, 0.08%)</title><rect x="85.6412%" y="1477" width="0.0792%" height="15" fill="rgb(206,91,47)" fg:x="65954" fg:w="61"/><text x="85.8912%" y="1487.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (61 samples, 0.08%)</title><rect x="85.6412%" y="1461" width="0.0792%" height="15" fill="rgb(241,159,43)" fg:x="65954" fg:w="61"/><text x="85.8912%" y="1471.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (61 samples, 0.08%)</title><rect x="85.6412%" y="1445" width="0.0792%" height="15" fill="rgb(232,191,38)" fg:x="65954" fg:w="61"/><text x="85.8912%" y="1455.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (61 samples, 0.08%)</title><rect x="85.6412%" y="1429" width="0.0792%" height="15" fill="rgb(212,180,41)" fg:x="65954" fg:w="61"/><text x="85.8912%" y="1439.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (15 samples, 0.02%)</title><rect x="85.7334%" y="1685" width="0.0195%" height="15" fill="rgb(236,134,49)" fg:x="66025" fg:w="15"/><text x="85.9834%" y="1695.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (15 samples, 0.02%)</title><rect x="85.7334%" y="1669" width="0.0195%" height="15" fill="rgb(221,83,26)" fg:x="66025" fg:w="15"/><text x="85.9834%" y="1679.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (15 samples, 0.02%)</title><rect x="85.7334%" y="1653" width="0.0195%" height="15" fill="rgb(215,87,39)" fg:x="66025" fg:w="15"/><text x="85.9834%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.02%)</title><rect x="85.7334%" y="1637" width="0.0195%" height="15" fill="rgb(242,28,29)" fg:x="66025" fg:w="15"/><text x="85.9834%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.02%)</title><rect x="85.7334%" y="1621" width="0.0195%" height="15" fill="rgb(212,219,47)" fg:x="66025" fg:w="15"/><text x="85.9834%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.01%)</title><rect x="85.7425%" y="1605" width="0.0104%" height="15" fill="rgb(221,35,20)" fg:x="66032" fg:w="8"/><text x="85.9925%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (10 samples, 0.01%)</title><rect x="85.7555%" y="1381" width="0.0130%" height="15" fill="rgb(234,144,13)" fg:x="66042" fg:w="10"/><text x="86.0055%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (10 samples, 0.01%)</title><rect x="85.7555%" y="1365" width="0.0130%" height="15" fill="rgb(237,41,27)" fg:x="66042" fg:w="10"/><text x="86.0055%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (10 samples, 0.01%)</title><rect x="85.7555%" y="1349" width="0.0130%" height="15" fill="rgb(253,175,5)" fg:x="66042" fg:w="10"/><text x="86.0055%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="85.7555%" y="1333" width="0.0130%" height="15" fill="rgb(235,210,51)" fg:x="66042" fg:w="10"/><text x="86.0055%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (10 samples, 0.01%)</title><rect x="85.7555%" y="1317" width="0.0130%" height="15" fill="rgb(241,180,35)" fg:x="66042" fg:w="10"/><text x="86.0055%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="85.7685%" y="1269" width="0.0195%" height="15" fill="rgb(219,45,16)" fg:x="66052" fg:w="15"/><text x="86.0185%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (15 samples, 0.02%)</title><rect x="85.7685%" y="1253" width="0.0195%" height="15" fill="rgb(247,212,4)" fg:x="66052" fg:w="15"/><text x="86.0185%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (13 samples, 0.02%)</title><rect x="85.7710%" y="1237" width="0.0169%" height="15" fill="rgb(224,211,1)" fg:x="66054" fg:w="13"/><text x="86.0210%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="85.7775%" y="1221" width="0.0104%" height="15" fill="rgb(210,193,36)" fg:x="66059" fg:w="8"/><text x="86.0275%" y="1231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="85.7775%" y="1205" width="0.0104%" height="15" fill="rgb(215,121,20)" fg:x="66059" fg:w="8"/><text x="86.0275%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="85.7775%" y="1189" width="0.0104%" height="15" fill="rgb(238,146,2)" fg:x="66059" fg:w="8"/><text x="86.0275%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="85.7775%" y="1173" width="0.0104%" height="15" fill="rgb(254,123,45)" fg:x="66059" fg:w="8"/><text x="86.0275%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (8 samples, 0.01%)</title><rect x="85.7775%" y="1157" width="0.0104%" height="15" fill="rgb(225,126,11)" fg:x="66059" fg:w="8"/><text x="86.0275%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="85.7775%" y="1141" width="0.0104%" height="15" fill="rgb(239,12,5)" fg:x="66059" fg:w="8"/><text x="86.0275%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (8 samples, 0.01%)</title><rect x="85.7775%" y="1125" width="0.0104%" height="15" fill="rgb(241,207,14)" fg:x="66059" fg:w="8"/><text x="86.0275%" y="1135.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="85.7685%" y="1333" width="0.0234%" height="15" fill="rgb(227,134,33)" fg:x="66052" fg:w="18"/><text x="86.0185%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="85.7685%" y="1317" width="0.0234%" height="15" fill="rgb(221,40,52)" fg:x="66052" fg:w="18"/><text x="86.0185%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="85.7685%" y="1301" width="0.0234%" height="15" fill="rgb(206,93,8)" fg:x="66052" fg:w="18"/><text x="86.0185%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (18 samples, 0.02%)</title><rect x="85.7685%" y="1285" width="0.0234%" height="15" fill="rgb(242,160,22)" fg:x="66052" fg:w="18"/><text x="86.0185%" y="1295.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (54 samples, 0.07%)</title><rect x="85.7230%" y="2005" width="0.0701%" height="15" fill="rgb(232,204,40)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="2015.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (54 samples, 0.07%)</title><rect x="85.7230%" y="1989" width="0.0701%" height="15" fill="rgb(247,210,47)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1999.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (54 samples, 0.07%)</title><rect x="85.7230%" y="1973" width="0.0701%" height="15" fill="rgb(211,91,7)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1983.50"></text></g><g><title>rayon_core::job::JobRef::execute (54 samples, 0.07%)</title><rect x="85.7230%" y="1957" width="0.0701%" height="15" fill="rgb(252,160,34)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1967.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (54 samples, 0.07%)</title><rect x="85.7230%" y="1941" width="0.0701%" height="15" fill="rgb(220,34,39)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1951.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (54 samples, 0.07%)</title><rect x="85.7230%" y="1925" width="0.0701%" height="15" fill="rgb(247,49,38)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1935.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (54 samples, 0.07%)</title><rect x="85.7230%" y="1909" width="0.0701%" height="15" fill="rgb(228,175,44)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1919.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (54 samples, 0.07%)</title><rect x="85.7230%" y="1893" width="0.0701%" height="15" fill="rgb(218,214,32)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (54 samples, 0.07%)</title><rect x="85.7230%" y="1877" width="0.0701%" height="15" fill="rgb(213,50,12)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.07%)</title><rect x="85.7230%" y="1861" width="0.0701%" height="15" fill="rgb(219,35,41)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1871.50"></text></g><g><title>std::panicking::try (54 samples, 0.07%)</title><rect x="85.7230%" y="1845" width="0.0701%" height="15" fill="rgb(219,18,38)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (54 samples, 0.07%)</title><rect x="85.7230%" y="1829" width="0.0701%" height="15" fill="rgb(223,217,6)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 0.07%)</title><rect x="85.7230%" y="1813" width="0.0701%" height="15" fill="rgb(208,193,35)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1823.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (54 samples, 0.07%)</title><rect x="85.7230%" y="1797" width="0.0701%" height="15" fill="rgb(254,212,54)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1807.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (54 samples, 0.07%)</title><rect x="85.7230%" y="1781" width="0.0701%" height="15" fill="rgb(205,10,2)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1791.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (54 samples, 0.07%)</title><rect x="85.7230%" y="1765" width="0.0701%" height="15" fill="rgb(230,133,29)" fg:x="66017" fg:w="54"/><text x="85.9730%" y="1775.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (50 samples, 0.06%)</title><rect x="85.7282%" y="1749" width="0.0649%" height="15" fill="rgb(226,14,15)" fg:x="66021" fg:w="50"/><text x="85.9782%" y="1759.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (50 samples, 0.06%)</title><rect x="85.7282%" y="1733" width="0.0649%" height="15" fill="rgb(226,140,54)" fg:x="66021" fg:w="50"/><text x="85.9782%" y="1743.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (50 samples, 0.06%)</title><rect x="85.7282%" y="1717" width="0.0649%" height="15" fill="rgb(250,47,41)" fg:x="66021" fg:w="50"/><text x="85.9782%" y="1727.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (50 samples, 0.06%)</title><rect x="85.7282%" y="1701" width="0.0649%" height="15" fill="rgb(227,218,41)" fg:x="66021" fg:w="50"/><text x="85.9782%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1685" width="0.0403%" height="15" fill="rgb(254,183,7)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1669" width="0.0403%" height="15" fill="rgb(206,84,53)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1653" width="0.0403%" height="15" fill="rgb(213,177,2)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1637" width="0.0403%" height="15" fill="rgb(234,28,29)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="85.7529%" y="1621" width="0.0403%" height="15" fill="rgb(248,211,38)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1631.50"></text></g><g><title>core::mem::drop (31 samples, 0.04%)</title><rect x="85.7529%" y="1605" width="0.0403%" height="15" fill="rgb(246,30,0)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1589" width="0.0403%" height="15" fill="rgb(244,115,24)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="85.7529%" y="1573" width="0.0403%" height="15" fill="rgb(226,193,14)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (31 samples, 0.04%)</title><rect x="85.7529%" y="1557" width="0.0403%" height="15" fill="rgb(211,196,48)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1567.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (31 samples, 0.04%)</title><rect x="85.7529%" y="1541" width="0.0403%" height="15" fill="rgb(235,32,20)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1525" width="0.0403%" height="15" fill="rgb(251,151,49)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1509" width="0.0403%" height="15" fill="rgb(254,141,38)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="85.7529%" y="1493" width="0.0403%" height="15" fill="rgb(209,118,44)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1503.50"></text></g><g><title>core::mem::drop (31 samples, 0.04%)</title><rect x="85.7529%" y="1477" width="0.0403%" height="15" fill="rgb(205,81,4)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (31 samples, 0.04%)</title><rect x="85.7529%" y="1461" width="0.0403%" height="15" fill="rgb(241,25,6)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.04%)</title><rect x="85.7529%" y="1445" width="0.0403%" height="15" fill="rgb(212,179,29)" fg:x="66040" fg:w="31"/><text x="86.0029%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (30 samples, 0.04%)</title><rect x="85.7542%" y="1429" width="0.0390%" height="15" fill="rgb(241,40,32)" fg:x="66041" fg:w="30"/><text x="86.0042%" y="1439.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (29 samples, 0.04%)</title><rect x="85.7555%" y="1413" width="0.0377%" height="15" fill="rgb(223,35,2)" fg:x="66042" fg:w="29"/><text x="86.0055%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (29 samples, 0.04%)</title><rect x="85.7555%" y="1397" width="0.0377%" height="15" fill="rgb(221,125,54)" fg:x="66042" fg:w="29"/><text x="86.0055%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (19 samples, 0.02%)</title><rect x="85.7685%" y="1381" width="0.0247%" height="15" fill="rgb(230,5,49)" fg:x="66052" fg:w="19"/><text x="86.0185%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (19 samples, 0.02%)</title><rect x="85.7685%" y="1365" width="0.0247%" height="15" fill="rgb(221,157,7)" fg:x="66052" fg:w="19"/><text x="86.0185%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="85.7685%" y="1349" width="0.0247%" height="15" fill="rgb(242,163,10)" fg:x="66052" fg:w="19"/><text x="86.0185%" y="1359.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (8 samples, 0.01%)</title><rect x="85.7931%" y="1733" width="0.0104%" height="15" fill="rgb(232,30,2)" fg:x="66071" fg:w="8"/><text x="86.0431%" y="1743.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (8 samples, 0.01%)</title><rect x="85.7931%" y="1717" width="0.0104%" height="15" fill="rgb(245,102,40)" fg:x="66071" fg:w="8"/><text x="86.0431%" y="1727.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (8 samples, 0.01%)</title><rect x="85.7931%" y="1701" width="0.0104%" height="15" fill="rgb(242,10,41)" fg:x="66071" fg:w="8"/><text x="86.0431%" y="1711.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (8 samples, 0.01%)</title><rect x="85.7931%" y="1685" width="0.0104%" height="15" fill="rgb(236,184,36)" fg:x="66071" fg:w="8"/><text x="86.0431%" y="1695.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (8 samples, 0.01%)</title><rect x="85.7931%" y="1669" width="0.0104%" height="15" fill="rgb(247,147,48)" fg:x="66071" fg:w="8"/><text x="86.0431%" y="1679.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (8 samples, 0.01%)</title><rect x="85.7931%" y="1653" width="0.0104%" height="15" fill="rgb(226,166,2)" fg:x="66071" fg:w="8"/><text x="86.0431%" y="1663.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (8 samples, 0.01%)</title><rect x="85.7931%" y="1637" width="0.0104%" height="15" fill="rgb(251,196,7)" fg:x="66071" fg:w="8"/><text x="86.0431%" y="1647.50"></text></g><g><title>aptos_vm::adapter_common::VMAdapter::validate_signature_checked_transaction (9 samples, 0.01%)</title><rect x="85.8035%" y="1669" width="0.0117%" height="15" fill="rgb(241,40,13)" fg:x="66079" fg:w="9"/><text x="86.0535%" y="1679.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (8 samples, 0.01%)</title><rect x="85.8048%" y="1653" width="0.0104%" height="15" fill="rgb(254,4,12)" fg:x="66080" fg:w="8"/><text x="86.0548%" y="1663.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (8 samples, 0.01%)</title><rect x="85.8048%" y="1637" width="0.0104%" height="15" fill="rgb(244,139,49)" fg:x="66080" fg:w="8"/><text x="86.0548%" y="1647.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::check_gas (8 samples, 0.01%)</title><rect x="85.8048%" y="1621" width="0.0104%" height="15" fill="rgb(227,28,42)" fg:x="66080" fg:w="8"/><text x="86.0548%" y="1631.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (9 samples, 0.01%)</title><rect x="85.8152%" y="1669" width="0.0117%" height="15" fill="rgb(231,135,32)" fg:x="66088" fg:w="9"/><text x="86.0652%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (19 samples, 0.02%)</title><rect x="85.8269%" y="1669" width="0.0247%" height="15" fill="rgb(244,182,3)" fg:x="66097" fg:w="19"/><text x="86.0769%" y="1679.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (19 samples, 0.02%)</title><rect x="85.8269%" y="1653" width="0.0247%" height="15" fill="rgb(247,46,19)" fg:x="66097" fg:w="19"/><text x="86.0769%" y="1663.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (12 samples, 0.02%)</title><rect x="85.8360%" y="1637" width="0.0156%" height="15" fill="rgb(251,179,10)" fg:x="66104" fg:w="12"/><text x="86.0860%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (11 samples, 0.01%)</title><rect x="85.8555%" y="1381" width="0.0143%" height="15" fill="rgb(229,222,18)" fg:x="66119" fg:w="11"/><text x="86.1055%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (9 samples, 0.01%)</title><rect x="85.8580%" y="1365" width="0.0117%" height="15" fill="rgb(251,107,20)" fg:x="66121" fg:w="9"/><text x="86.1080%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (9 samples, 0.01%)</title><rect x="85.8580%" y="1349" width="0.0117%" height="15" fill="rgb(233,193,19)" fg:x="66121" fg:w="9"/><text x="86.1080%" y="1359.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (62 samples, 0.08%)</title><rect x="85.7931%" y="2005" width="0.0805%" height="15" fill="rgb(229,146,53)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="2015.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (62 samples, 0.08%)</title><rect x="85.7931%" y="1989" width="0.0805%" height="15" fill="rgb(244,52,11)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1999.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (62 samples, 0.08%)</title><rect x="85.7931%" y="1973" width="0.0805%" height="15" fill="rgb(245,211,46)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (62 samples, 0.08%)</title><rect x="85.7931%" y="1957" width="0.0805%" height="15" fill="rgb(213,8,31)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1967.50"></text></g><g><title>rayon_core::job::JobRef::execute (62 samples, 0.08%)</title><rect x="85.7931%" y="1941" width="0.0805%" height="15" fill="rgb(205,101,39)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1951.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (62 samples, 0.08%)</title><rect x="85.7931%" y="1925" width="0.0805%" height="15" fill="rgb(212,157,1)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1935.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (62 samples, 0.08%)</title><rect x="85.7931%" y="1909" width="0.0805%" height="15" fill="rgb(232,30,46)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1919.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (62 samples, 0.08%)</title><rect x="85.7931%" y="1893" width="0.0805%" height="15" fill="rgb(216,201,6)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1903.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (62 samples, 0.08%)</title><rect x="85.7931%" y="1877" width="0.0805%" height="15" fill="rgb(209,18,6)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1887.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (62 samples, 0.08%)</title><rect x="85.7931%" y="1861" width="0.0805%" height="15" fill="rgb(219,138,3)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1871.50"></text></g><g><title>std::panic::catch_unwind (62 samples, 0.08%)</title><rect x="85.7931%" y="1845" width="0.0805%" height="15" fill="rgb(210,91,46)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1855.50"></text></g><g><title>std::panicking::try (62 samples, 0.08%)</title><rect x="85.7931%" y="1829" width="0.0805%" height="15" fill="rgb(241,80,44)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1839.50"></text></g><g><title>std::panicking::try::do_call (62 samples, 0.08%)</title><rect x="85.7931%" y="1813" width="0.0805%" height="15" fill="rgb(236,205,36)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1823.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.08%)</title><rect x="85.7931%" y="1797" width="0.0805%" height="15" fill="rgb(205,59,37)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1807.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (62 samples, 0.08%)</title><rect x="85.7931%" y="1781" width="0.0805%" height="15" fill="rgb(239,166,39)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1791.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (62 samples, 0.08%)</title><rect x="85.7931%" y="1765" width="0.0805%" height="15" fill="rgb(239,146,40)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1775.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (62 samples, 0.08%)</title><rect x="85.7931%" y="1749" width="0.0805%" height="15" fill="rgb(231,11,52)" fg:x="66071" fg:w="62"/><text x="86.0431%" y="1759.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (54 samples, 0.07%)</title><rect x="85.8035%" y="1733" width="0.0701%" height="15" fill="rgb(253,21,37)" fg:x="66079" fg:w="54"/><text x="86.0535%" y="1743.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (54 samples, 0.07%)</title><rect x="85.8035%" y="1717" width="0.0701%" height="15" fill="rgb(224,87,39)" fg:x="66079" fg:w="54"/><text x="86.0535%" y="1727.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (54 samples, 0.07%)</title><rect x="85.8035%" y="1701" width="0.0701%" height="15" fill="rgb(249,15,46)" fg:x="66079" fg:w="54"/><text x="86.0535%" y="1711.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (54 samples, 0.07%)</title><rect x="85.8035%" y="1685" width="0.0701%" height="15" fill="rgb(250,37,51)" fg:x="66079" fg:w="54"/><text x="86.0535%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="85.8516%" y="1669" width="0.0221%" height="15" fill="rgb(205,185,43)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="85.8516%" y="1653" width="0.0221%" height="15" fill="rgb(206,65,41)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::MoveResolverWithVMMetadata&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_language_e2e_tests::data_store::FakeDataStore&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="85.8516%" y="1637" width="0.0221%" height="15" fill="rgb(236,159,32)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (17 samples, 0.02%)</title><rect x="85.8516%" y="1621" width="0.0221%" height="15" fill="rgb(228,199,27)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="85.8516%" y="1605" width="0.0221%" height="15" fill="rgb(212,0,37)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1615.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="85.8516%" y="1589" width="0.0221%" height="15" fill="rgb(248,50,11)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (17 samples, 0.02%)</title><rect x="85.8516%" y="1573" width="0.0221%" height="15" fill="rgb(231,164,25)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="85.8516%" y="1557" width="0.0221%" height="15" fill="rgb(238,38,39)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (17 samples, 0.02%)</title><rect x="85.8516%" y="1541" width="0.0221%" height="15" fill="rgb(210,15,50)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1551.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (17 samples, 0.02%)</title><rect x="85.8516%" y="1525" width="0.0221%" height="15" fill="rgb(251,126,36)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (17 samples, 0.02%)</title><rect x="85.8516%" y="1509" width="0.0221%" height="15" fill="rgb(243,59,26)" fg:x="66116" fg:w="17"/><text x="86.1016%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (16 samples, 0.02%)</title><rect x="85.8529%" y="1493" width="0.0208%" height="15" fill="rgb(215,24,30)" fg:x="66117" fg:w="16"/><text x="86.1029%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="85.8529%" y="1477" width="0.0208%" height="15" fill="rgb(253,50,51)" fg:x="66117" fg:w="16"/><text x="86.1029%" y="1487.50"></text></g><g><title>core::mem::drop (16 samples, 0.02%)</title><rect x="85.8529%" y="1461" width="0.0208%" height="15" fill="rgb(252,2,16)" fg:x="66117" fg:w="16"/><text x="86.1029%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (16 samples, 0.02%)</title><rect x="85.8529%" y="1445" width="0.0208%" height="15" fill="rgb(209,123,36)" fg:x="66117" fg:w="16"/><text x="86.1029%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="85.8529%" y="1429" width="0.0208%" height="15" fill="rgb(245,60,15)" fg:x="66117" fg:w="16"/><text x="86.1029%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (15 samples, 0.02%)</title><rect x="85.8542%" y="1413" width="0.0195%" height="15" fill="rgb(246,4,13)" fg:x="66118" fg:w="15"/><text x="86.1042%" y="1423.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (14 samples, 0.02%)</title><rect x="85.8555%" y="1397" width="0.0182%" height="15" fill="rgb(210,223,46)" fg:x="66119" fg:w="14"/><text x="86.1055%" y="1407.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (11 samples, 0.01%)</title><rect x="85.8931%" y="1637" width="0.0143%" height="15" fill="rgb(248,1,9)" fg:x="66148" fg:w="11"/><text x="86.1431%" y="1647.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (11 samples, 0.01%)</title><rect x="85.8931%" y="1621" width="0.0143%" height="15" fill="rgb(254,2,34)" fg:x="66148" fg:w="11"/><text x="86.1431%" y="1631.50"></text></g><g><title>rayon_core::scope::scope (34 samples, 0.04%)</title><rect x="85.8736%" y="2005" width="0.0441%" height="15" fill="rgb(239,176,1)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="2015.50"></text></g><g><title>rayon_core::registry::in_worker (34 samples, 0.04%)</title><rect x="85.8736%" y="1989" width="0.0441%" height="15" fill="rgb(250,25,32)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1999.50"></text></g><g><title>rayon_core::scope::scope::{{closure}} (34 samples, 0.04%)</title><rect x="85.8736%" y="1973" width="0.0441%" height="15" fill="rgb(225,28,39)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1983.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (34 samples, 0.04%)</title><rect x="85.8736%" y="1957" width="0.0441%" height="15" fill="rgb(230,166,37)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (34 samples, 0.04%)</title><rect x="85.8736%" y="1941" width="0.0441%" height="15" fill="rgb(246,220,4)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (34 samples, 0.04%)</title><rect x="85.8736%" y="1925" width="0.0441%" height="15" fill="rgb(219,119,33)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1935.50"></text></g><g><title>rayon_core::job::JobRef::execute (34 samples, 0.04%)</title><rect x="85.8736%" y="1909" width="0.0441%" height="15" fill="rgb(221,207,38)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1919.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (34 samples, 0.04%)</title><rect x="85.8736%" y="1893" width="0.0441%" height="15" fill="rgb(214,153,5)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1903.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (34 samples, 0.04%)</title><rect x="85.8736%" y="1877" width="0.0441%" height="15" fill="rgb(223,50,16)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1887.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (34 samples, 0.04%)</title><rect x="85.8736%" y="1861" width="0.0441%" height="15" fill="rgb(209,207,12)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1871.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (34 samples, 0.04%)</title><rect x="85.8736%" y="1845" width="0.0441%" height="15" fill="rgb(207,3,46)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1855.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.04%)</title><rect x="85.8736%" y="1829" width="0.0441%" height="15" fill="rgb(232,45,53)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.04%)</title><rect x="85.8736%" y="1813" width="0.0441%" height="15" fill="rgb(206,140,15)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1823.50"></text></g><g><title>std::panicking::try (34 samples, 0.04%)</title><rect x="85.8736%" y="1797" width="0.0441%" height="15" fill="rgb(245,66,17)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.04%)</title><rect x="85.8736%" y="1781" width="0.0441%" height="15" fill="rgb(221,25,37)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.04%)</title><rect x="85.8736%" y="1765" width="0.0441%" height="15" fill="rgb(215,99,47)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1775.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (34 samples, 0.04%)</title><rect x="85.8736%" y="1749" width="0.0441%" height="15" fill="rgb(219,154,44)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1759.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (34 samples, 0.04%)</title><rect x="85.8736%" y="1733" width="0.0441%" height="15" fill="rgb(210,197,36)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1743.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (34 samples, 0.04%)</title><rect x="85.8736%" y="1717" width="0.0441%" height="15" fill="rgb(217,137,10)" fg:x="66133" fg:w="34"/><text x="86.1236%" y="1727.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute (29 samples, 0.04%)</title><rect x="85.8801%" y="1701" width="0.0377%" height="15" fill="rgb(240,216,26)" fg:x="66138" fg:w="29"/><text x="86.1301%" y="1711.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (29 samples, 0.04%)</title><rect x="85.8801%" y="1685" width="0.0377%" height="15" fill="rgb(242,76,17)" fg:x="66138" fg:w="29"/><text x="86.1301%" y="1695.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (29 samples, 0.04%)</title><rect x="85.8801%" y="1669" width="0.0377%" height="15" fill="rgb(243,142,51)" fg:x="66138" fg:w="29"/><text x="86.1301%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (29 samples, 0.04%)</title><rect x="85.8801%" y="1653" width="0.0377%" height="15" fill="rgb(233,109,46)" fg:x="66138" fg:w="29"/><text x="86.1301%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="85.9282%" y="1845" width="0.0130%" height="15" fill="rgb(252,45,32)" fg:x="66175" fg:w="10"/><text x="86.1782%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="85.9282%" y="1829" width="0.0130%" height="15" fill="rgb(210,69,52)" fg:x="66175" fg:w="10"/><text x="86.1782%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.01%)</title><rect x="85.9282%" y="1813" width="0.0130%" height="15" fill="rgb(242,30,2)" fg:x="66175" fg:w="10"/><text x="86.1782%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="85.9282%" y="1797" width="0.0130%" height="15" fill="rgb(246,137,1)" fg:x="66175" fg:w="10"/><text x="86.1782%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="85.9282%" y="1781" width="0.0130%" height="15" fill="rgb(221,205,25)" fg:x="66175" fg:w="10"/><text x="86.1782%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="85.9282%" y="1765" width="0.0130%" height="15" fill="rgb(224,44,43)" fg:x="66175" fg:w="10"/><text x="86.1782%" y="1775.50"></text></g><g><title>malloc (9 samples, 0.01%)</title><rect x="85.9295%" y="1749" width="0.0117%" height="15" fill="rgb(209,81,13)" fg:x="66176" fg:w="9"/><text x="86.1795%" y="1759.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="85.9308%" y="1733" width="0.0104%" height="15" fill="rgb(227,88,4)" fg:x="66177" fg:w="8"/><text x="86.1808%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="85.9282%" y="1909" width="0.0143%" height="15" fill="rgb(228,118,49)" fg:x="66175" fg:w="11"/><text x="86.1782%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="85.9282%" y="1893" width="0.0143%" height="15" fill="rgb(225,215,27)" fg:x="66175" fg:w="11"/><text x="86.1782%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="85.9282%" y="1877" width="0.0143%" height="15" fill="rgb(235,226,1)" fg:x="66175" fg:w="11"/><text x="86.1782%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="85.9282%" y="1861" width="0.0143%" height="15" fill="rgb(205,107,17)" fg:x="66175" fg:w="11"/><text x="86.1782%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="85.9282%" y="1973" width="0.0247%" height="15" fill="rgb(247,85,8)" fg:x="66175" fg:w="19"/><text x="86.1782%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="85.9282%" y="1957" width="0.0247%" height="15" fill="rgb(230,220,20)" fg:x="66175" fg:w="19"/><text x="86.1782%" y="1967.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="85.9282%" y="1941" width="0.0247%" height="15" fill="rgb(237,22,6)" fg:x="66175" fg:w="19"/><text x="86.1782%" y="1951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="85.9282%" y="1925" width="0.0247%" height="15" fill="rgb(253,39,1)" fg:x="66175" fg:w="19"/><text x="86.1782%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="85.9425%" y="1909" width="0.0104%" height="15" fill="rgb(251,206,50)" fg:x="66186" fg:w="8"/><text x="86.1925%" y="1919.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="85.9528%" y="1973" width="0.0104%" height="15" fill="rgb(239,162,11)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="85.9528%" y="1957" width="0.0104%" height="15" fill="rgb(234,164,6)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1967.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="85.9528%" y="1941" width="0.0104%" height="15" fill="rgb(238,112,10)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (8 samples, 0.01%)</title><rect x="85.9528%" y="1925" width="0.0104%" height="15" fill="rgb(232,78,29)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="85.9528%" y="1909" width="0.0104%" height="15" fill="rgb(232,20,13)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="85.9528%" y="1893" width="0.0104%" height="15" fill="rgb(222,175,9)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="85.9528%" y="1877" width="0.0104%" height="15" fill="rgb(233,61,14)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="85.9528%" y="1861" width="0.0104%" height="15" fill="rgb(224,152,29)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="85.9528%" y="1845" width="0.0104%" height="15" fill="rgb(232,26,6)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="85.9528%" y="1829" width="0.0104%" height="15" fill="rgb(210,116,11)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1839.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="85.9528%" y="1813" width="0.0104%" height="15" fill="rgb(238,213,15)" fg:x="66194" fg:w="8"/><text x="86.2028%" y="1823.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="85.9269%" y="1989" width="0.0416%" height="15" fill="rgb(236,177,32)" fg:x="66174" fg:w="32"/><text x="86.1769%" y="1999.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (54 samples, 0.07%)</title><rect x="85.9736%" y="1989" width="0.0701%" height="15" fill="rgb(230,36,43)" fg:x="66210" fg:w="54"/><text x="86.2236%" y="1999.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (54 samples, 0.07%)</title><rect x="85.9736%" y="1973" width="0.0701%" height="15" fill="rgb(212,76,23)" fg:x="66210" fg:w="54"/><text x="86.2236%" y="1983.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (54 samples, 0.07%)</title><rect x="85.9736%" y="1957" width="0.0701%" height="15" fill="rgb(225,168,24)" fg:x="66210" fg:w="54"/><text x="86.2236%" y="1967.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (54 samples, 0.07%)</title><rect x="85.9736%" y="1941" width="0.0701%" height="15" fill="rgb(206,40,44)" fg:x="66210" fg:w="54"/><text x="86.2236%" y="1951.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (50 samples, 0.06%)</title><rect x="85.9788%" y="1925" width="0.0649%" height="15" fill="rgb(251,213,6)" fg:x="66214" fg:w="50"/><text x="86.2288%" y="1935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50 samples, 0.06%)</title><rect x="85.9788%" y="1909" width="0.0649%" height="15" fill="rgb(220,7,47)" fg:x="66214" fg:w="50"/><text x="86.2288%" y="1919.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (50 samples, 0.06%)</title><rect x="85.9788%" y="1893" width="0.0649%" height="15" fill="rgb(254,130,53)" fg:x="66214" fg:w="50"/><text x="86.2288%" y="1903.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (31 samples, 0.04%)</title><rect x="86.0035%" y="1877" width="0.0403%" height="15" fill="rgb(240,2,46)" fg:x="66233" fg:w="31"/><text x="86.2535%" y="1887.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (31 samples, 0.04%)</title><rect x="86.0035%" y="1861" width="0.0403%" height="15" fill="rgb(252,144,40)" fg:x="66233" fg:w="31"/><text x="86.2535%" y="1871.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (17 samples, 0.02%)</title><rect x="86.0450%" y="1989" width="0.0221%" height="15" fill="rgb(226,23,10)" fg:x="66265" fg:w="17"/><text x="86.2950%" y="1999.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (13 samples, 0.02%)</title><rect x="86.0502%" y="1973" width="0.0169%" height="15" fill="rgb(212,204,35)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (13 samples, 0.02%)</title><rect x="86.0502%" y="1957" width="0.0169%" height="15" fill="rgb(218,201,15)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (13 samples, 0.02%)</title><rect x="86.0502%" y="1941" width="0.0169%" height="15" fill="rgb(224,197,5)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (13 samples, 0.02%)</title><rect x="86.0502%" y="1925" width="0.0169%" height="15" fill="rgb(224,185,18)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1935.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="86.0502%" y="1909" width="0.0169%" height="15" fill="rgb(251,71,45)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.02%)</title><rect x="86.0502%" y="1893" width="0.0169%" height="15" fill="rgb(216,74,24)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1903.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.02%)</title><rect x="86.0502%" y="1877" width="0.0169%" height="15" fill="rgb(250,36,51)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1887.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.02%)</title><rect x="86.0502%" y="1861" width="0.0169%" height="15" fill="rgb(209,224,28)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1871.50"></text></g><g><title>realloc (13 samples, 0.02%)</title><rect x="86.0502%" y="1845" width="0.0169%" height="15" fill="rgb(228,5,10)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1855.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="86.0502%" y="1829" width="0.0169%" height="15" fill="rgb(250,57,40)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1839.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="86.0502%" y="1813" width="0.0169%" height="15" fill="rgb(228,194,41)" fg:x="66269" fg:w="13"/><text x="86.3002%" y="1823.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (9 samples, 0.01%)</title><rect x="86.0931%" y="1669" width="0.0117%" height="15" fill="rgb(206,68,23)" fg:x="66302" fg:w="9"/><text x="86.3431%" y="1679.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (19 samples, 0.02%)</title><rect x="86.0905%" y="1685" width="0.0247%" height="15" fill="rgb(230,33,29)" fg:x="66300" fg:w="19"/><text x="86.3405%" y="1695.50"></text></g><g><title>sha2::sha512::x86::sha_round (8 samples, 0.01%)</title><rect x="86.1048%" y="1669" width="0.0104%" height="15" fill="rgb(210,39,32)" fg:x="66311" fg:w="8"/><text x="86.3548%" y="1679.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (27 samples, 0.04%)</title><rect x="86.0827%" y="1829" width="0.0351%" height="15" fill="rgb(236,89,23)" fg:x="66294" fg:w="27"/><text x="86.3327%" y="1839.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (27 samples, 0.04%)</title><rect x="86.0827%" y="1813" width="0.0351%" height="15" fill="rgb(218,52,52)" fg:x="66294" fg:w="27"/><text x="86.3327%" y="1823.50"></text></g><g><title>sha2::sha512::Engine512::finish (27 samples, 0.04%)</title><rect x="86.0827%" y="1797" width="0.0351%" height="15" fill="rgb(235,154,5)" fg:x="66294" fg:w="27"/><text x="86.3327%" y="1807.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (27 samples, 0.04%)</title><rect x="86.0827%" y="1781" width="0.0351%" height="15" fill="rgb(223,168,9)" fg:x="66294" fg:w="27"/><text x="86.3327%" y="1791.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (25 samples, 0.03%)</title><rect x="86.0853%" y="1765" width="0.0325%" height="15" fill="rgb(220,8,33)" fg:x="66296" fg:w="25"/><text x="86.3353%" y="1775.50"></text></g><g><title>sha2::sha512::compress512 (25 samples, 0.03%)</title><rect x="86.0853%" y="1749" width="0.0325%" height="15" fill="rgb(216,176,3)" fg:x="66296" fg:w="25"/><text x="86.3353%" y="1759.50"></text></g><g><title>sha2::sha512::x86::compress (25 samples, 0.03%)</title><rect x="86.0853%" y="1733" width="0.0325%" height="15" fill="rgb(254,150,22)" fg:x="66296" fg:w="25"/><text x="86.3353%" y="1743.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (25 samples, 0.03%)</title><rect x="86.0853%" y="1717" width="0.0325%" height="15" fill="rgb(231,61,53)" fg:x="66296" fg:w="25"/><text x="86.3353%" y="1727.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (24 samples, 0.03%)</title><rect x="86.0866%" y="1701" width="0.0312%" height="15" fill="rgb(249,177,41)" fg:x="66297" fg:w="24"/><text x="86.3366%" y="1711.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (28 samples, 0.04%)</title><rect x="86.0827%" y="1861" width="0.0364%" height="15" fill="rgb(221,122,7)" fg:x="66294" fg:w="28"/><text x="86.3327%" y="1871.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (28 samples, 0.04%)</title><rect x="86.0827%" y="1845" width="0.0364%" height="15" fill="rgb(215,115,7)" fg:x="66294" fg:w="28"/><text x="86.3327%" y="1855.50"></text></g><g><title>[libc.so.6] (41 samples, 0.05%)</title><rect x="86.1450%" y="1797" width="0.0532%" height="15" fill="rgb(218,108,33)" fg:x="66342" fg:w="41"/><text x="86.3950%" y="1807.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (23 samples, 0.03%)</title><rect x="86.2632%" y="1781" width="0.0299%" height="15" fill="rgb(221,205,39)" fg:x="66433" fg:w="23"/><text x="86.5132%" y="1791.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (19 samples, 0.02%)</title><rect x="86.2684%" y="1765" width="0.0247%" height="15" fill="rgb(220,171,18)" fg:x="66437" fg:w="19"/><text x="86.5184%" y="1775.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (321 samples, 0.42%)</title><rect x="86.2930%" y="1781" width="0.4168%" height="15" fill="rgb(236,188,29)" fg:x="66456" fg:w="321"/><text x="86.5430%" y="1791.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (52 samples, 0.07%)</title><rect x="86.6423%" y="1765" width="0.0675%" height="15" fill="rgb(239,29,5)" fg:x="66725" fg:w="52"/><text x="86.8923%" y="1775.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (462 samples, 0.60%)</title><rect x="86.1983%" y="1797" width="0.5999%" height="15" fill="rgb(236,114,44)" fg:x="66383" fg:w="462"/><text x="86.4483%" y="1807.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (68 samples, 0.09%)</title><rect x="86.7099%" y="1781" width="0.0883%" height="15" fill="rgb(239,214,48)" fg:x="66777" fg:w="68"/><text x="86.9599%" y="1791.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (21 samples, 0.03%)</title><rect x="86.7709%" y="1765" width="0.0273%" height="15" fill="rgb(241,56,8)" fg:x="66824" fg:w="21"/><text x="87.0209%" y="1775.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (450 samples, 0.58%)</title><rect x="86.7982%" y="1797" width="0.5843%" height="15" fill="rgb(228,201,0)" fg:x="66845" fg:w="450"/><text x="87.0482%" y="1807.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (449 samples, 0.58%)</title><rect x="86.7995%" y="1781" width="0.5830%" height="15" fill="rgb(226,219,34)" fg:x="66846" fg:w="449"/><text x="87.0495%" y="1791.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (83 samples, 0.11%)</title><rect x="87.2747%" y="1765" width="0.1078%" height="15" fill="rgb(209,204,54)" fg:x="67212" fg:w="83"/><text x="87.5247%" y="1775.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (18 samples, 0.02%)</title><rect x="87.3942%" y="1781" width="0.0234%" height="15" fill="rgb(251,160,17)" fg:x="67304" fg:w="18"/><text x="87.6442%" y="1791.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (18 samples, 0.02%)</title><rect x="87.3942%" y="1765" width="0.0234%" height="15" fill="rgb(235,15,25)" fg:x="67304" fg:w="18"/><text x="87.6442%" y="1775.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (60 samples, 0.08%)</title><rect x="87.3825%" y="1797" width="0.0779%" height="15" fill="rgb(216,209,28)" fg:x="67295" fg:w="60"/><text x="87.6325%" y="1807.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (33 samples, 0.04%)</title><rect x="87.4175%" y="1781" width="0.0429%" height="15" fill="rgb(248,123,21)" fg:x="67322" fg:w="33"/><text x="87.6675%" y="1791.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (16 samples, 0.02%)</title><rect x="87.4396%" y="1765" width="0.0208%" height="15" fill="rgb(226,138,44)" fg:x="67339" fg:w="16"/><text x="87.6896%" y="1775.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (16 samples, 0.02%)</title><rect x="87.4396%" y="1749" width="0.0208%" height="15" fill="rgb(211,104,54)" fg:x="67339" fg:w="16"/><text x="87.6896%" y="1759.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (12 samples, 0.02%)</title><rect x="87.4604%" y="1797" width="0.0156%" height="15" fill="rgb(241,198,15)" fg:x="67355" fg:w="12"/><text x="87.7104%" y="1807.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as core::ops::arith::Neg&gt;::neg (74 samples, 0.10%)</title><rect x="87.5149%" y="1765" width="0.0961%" height="15" fill="rgb(227,155,54)" fg:x="67397" fg:w="74"/><text x="87.7649%" y="1775.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (40 samples, 0.05%)</title><rect x="87.5591%" y="1749" width="0.0519%" height="15" fill="rgb(225,131,31)" fg:x="67431" fg:w="40"/><text x="87.8091%" y="1759.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (26 samples, 0.03%)</title><rect x="87.5773%" y="1733" width="0.0338%" height="15" fill="rgb(242,40,17)" fg:x="67445" fg:w="26"/><text x="87.8273%" y="1743.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (92 samples, 0.12%)</title><rect x="87.5149%" y="1781" width="0.1195%" height="15" fill="rgb(254,57,35)" fg:x="67397" fg:w="92"/><text x="87.7649%" y="1791.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (18 samples, 0.02%)</title><rect x="87.6110%" y="1765" width="0.0234%" height="15" fill="rgb(240,64,32)" fg:x="67471" fg:w="18"/><text x="87.8610%" y="1775.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (18 samples, 0.02%)</title><rect x="87.6110%" y="1749" width="0.0234%" height="15" fill="rgb(251,136,26)" fg:x="67471" fg:w="18"/><text x="87.8610%" y="1759.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (18 samples, 0.02%)</title><rect x="87.6110%" y="1733" width="0.0234%" height="15" fill="rgb(208,60,54)" fg:x="67471" fg:w="18"/><text x="87.8610%" y="1743.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (244 samples, 0.32%)</title><rect x="87.6383%" y="1781" width="0.3168%" height="15" fill="rgb(220,13,12)" fg:x="67492" fg:w="244"/><text x="87.8883%" y="1791.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (222 samples, 0.29%)</title><rect x="87.6669%" y="1765" width="0.2883%" height="15" fill="rgb(213,149,1)" fg:x="67514" fg:w="222"/><text x="87.9169%" y="1775.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (222 samples, 0.29%)</title><rect x="87.6669%" y="1749" width="0.2883%" height="15" fill="rgb(212,191,39)" fg:x="67514" fg:w="222"/><text x="87.9169%" y="1759.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (8 samples, 0.01%)</title><rect x="87.9551%" y="1781" width="0.0104%" height="15" fill="rgb(215,221,42)" fg:x="67736" fg:w="8"/><text x="88.2051%" y="1791.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1,457 samples, 1.89%)</title><rect x="86.1307%" y="1845" width="1.8919%" height="15" fill="rgb(244,79,23)" fg:x="66331" fg:w="1457"/><text x="86.3807%" y="1855.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1,457 samples, 1.89%)</title><rect x="86.1307%" y="1829" width="1.8919%" height="15" fill="rgb(247,17,29)" fg:x="66331" fg:w="1457"/><text x="86.3807%" y="1839.50">&lt;..</text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (1,457 samples, 1.89%)</title><rect x="86.1307%" y="1813" width="1.8919%" height="15" fill="rgb(251,221,21)" fg:x="66331" fg:w="1457"/><text x="86.3807%" y="1823.50">c..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (421 samples, 0.55%)</title><rect x="87.4760%" y="1797" width="0.5467%" height="15" fill="rgb(207,202,34)" fg:x="67367" fg:w="421"/><text x="87.7260%" y="1807.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (44 samples, 0.06%)</title><rect x="87.9655%" y="1781" width="0.0571%" height="15" fill="rgb(217,4,34)" fg:x="67744" fg:w="44"/><text x="88.2155%" y="1791.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (44 samples, 0.06%)</title><rect x="87.9655%" y="1765" width="0.0571%" height="15" fill="rgb(253,17,16)" fg:x="67744" fg:w="44"/><text x="88.2155%" y="1775.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (44 samples, 0.06%)</title><rect x="87.9655%" y="1749" width="0.0571%" height="15" fill="rgb(223,91,48)" fg:x="67744" fg:w="44"/><text x="88.2155%" y="1759.50"></text></g><g><title>subtle::black_box (36 samples, 0.05%)</title><rect x="87.9759%" y="1733" width="0.0467%" height="15" fill="rgb(244,191,22)" fg:x="67752" fg:w="36"/><text x="88.2259%" y="1743.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (9 samples, 0.01%)</title><rect x="88.0304%" y="1813" width="0.0117%" height="15" fill="rgb(211,107,14)" fg:x="67794" fg:w="9"/><text x="88.2804%" y="1823.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (19 samples, 0.02%)</title><rect x="88.0434%" y="1797" width="0.0247%" height="15" fill="rgb(232,81,23)" fg:x="67804" fg:w="19"/><text x="88.2934%" y="1807.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (373 samples, 0.48%)</title><rect x="88.0681%" y="1797" width="0.4843%" height="15" fill="rgb(237,126,14)" fg:x="67823" fg:w="373"/><text x="88.3181%" y="1807.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (29 samples, 0.04%)</title><rect x="88.5148%" y="1781" width="0.0377%" height="15" fill="rgb(230,65,39)" fg:x="68167" fg:w="29"/><text x="88.7648%" y="1791.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (410 samples, 0.53%)</title><rect x="88.0265%" y="1829" width="0.5324%" height="15" fill="rgb(208,106,41)" fg:x="67791" fg:w="410"/><text x="88.2765%" y="1839.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (398 samples, 0.52%)</title><rect x="88.0421%" y="1813" width="0.5168%" height="15" fill="rgb(206,125,25)" fg:x="67803" fg:w="398"/><text x="88.2921%" y="1823.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (415 samples, 0.54%)</title><rect x="88.0226%" y="1845" width="0.5389%" height="15" fill="rgb(250,24,29)" fg:x="67788" fg:w="415"/><text x="88.2726%" y="1855.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,910 samples, 2.48%)</title><rect x="86.0827%" y="1925" width="2.4801%" height="15" fill="rgb(226,49,32)" fg:x="66294" fg:w="1910"/><text x="86.3327%" y="1935.50">&lt;T..</text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::convert::From&lt;&amp;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey&gt;&gt;::from (1,910 samples, 2.48%)</title><rect x="86.0827%" y="1909" width="2.4801%" height="15" fill="rgb(217,110,16)" fg:x="66294" fg:w="1910"/><text x="86.3327%" y="1919.50">&lt;a..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,910 samples, 2.48%)</title><rect x="86.0827%" y="1893" width="2.4801%" height="15" fill="rgb(252,16,53)" fg:x="66294" fg:w="1910"/><text x="86.3327%" y="1903.50">&lt;T..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (1,910 samples, 2.48%)</title><rect x="86.0827%" y="1877" width="2.4801%" height="15" fill="rgb(238,163,11)" fg:x="66294" fg:w="1910"/><text x="86.3327%" y="1887.50">&lt;e..</text></g><g><title>ed25519_dalek::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (1,878 samples, 2.44%)</title><rect x="86.1242%" y="1861" width="2.4386%" height="15" fill="rgb(206,210,1)" fg:x="66326" fg:w="1878"/><text x="86.3742%" y="1871.50">ed..</text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (16 samples, 0.02%)</title><rect x="88.5706%" y="1733" width="0.0208%" height="15" fill="rgb(229,8,25)" fg:x="68210" fg:w="16"/><text x="88.8206%" y="1743.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (24 samples, 0.03%)</title><rect x="88.5641%" y="1909" width="0.0312%" height="15" fill="rgb(247,155,23)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1919.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (24 samples, 0.03%)</title><rect x="88.5641%" y="1893" width="0.0312%" height="15" fill="rgb(207,26,7)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1903.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (24 samples, 0.03%)</title><rect x="88.5641%" y="1877" width="0.0312%" height="15" fill="rgb(215,179,12)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1887.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (24 samples, 0.03%)</title><rect x="88.5641%" y="1861" width="0.0312%" height="15" fill="rgb(238,208,11)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1871.50"></text></g><g><title>sha2::sha512::Engine512::finish (24 samples, 0.03%)</title><rect x="88.5641%" y="1845" width="0.0312%" height="15" fill="rgb(238,102,42)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1855.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (24 samples, 0.03%)</title><rect x="88.5641%" y="1829" width="0.0312%" height="15" fill="rgb(239,35,9)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1839.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (24 samples, 0.03%)</title><rect x="88.5641%" y="1813" width="0.0312%" height="15" fill="rgb(244,182,30)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1823.50"></text></g><g><title>sha2::sha512::compress512 (24 samples, 0.03%)</title><rect x="88.5641%" y="1797" width="0.0312%" height="15" fill="rgb(232,181,23)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1807.50"></text></g><g><title>sha2::sha512::x86::compress (24 samples, 0.03%)</title><rect x="88.5641%" y="1781" width="0.0312%" height="15" fill="rgb(242,154,29)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1791.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (24 samples, 0.03%)</title><rect x="88.5641%" y="1765" width="0.0312%" height="15" fill="rgb(219,23,2)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1775.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (24 samples, 0.03%)</title><rect x="88.5641%" y="1749" width="0.0312%" height="15" fill="rgb(234,94,43)" fg:x="68205" fg:w="24"/><text x="88.8141%" y="1759.50"></text></g><g><title>&lt;ed25519_dalek::secret::ExpandedSecretKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (27 samples, 0.04%)</title><rect x="88.5628%" y="1925" width="0.0351%" height="15" fill="rgb(223,55,45)" fg:x="68204" fg:w="27"/><text x="88.8128%" y="1935.50"></text></g><g><title>&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Add&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::add (8 samples, 0.01%)</title><rect x="88.5979%" y="1909" width="0.0104%" height="15" fill="rgb(241,215,54)" fg:x="68231" fg:w="8"/><text x="88.8479%" y="1919.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::mul (8 samples, 0.01%)</title><rect x="88.6083%" y="1893" width="0.0104%" height="15" fill="rgb(247,63,53)" fg:x="68239" fg:w="8"/><text x="88.8583%" y="1903.50"></text></g><g><title>&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (11 samples, 0.01%)</title><rect x="88.6083%" y="1909" width="0.0143%" height="15" fill="rgb(220,166,7)" fg:x="68239" fg:w="11"/><text x="88.8583%" y="1919.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (10 samples, 0.01%)</title><rect x="88.6576%" y="1733" width="0.0130%" height="15" fill="rgb(248,53,45)" fg:x="68277" fg:w="10"/><text x="88.9076%" y="1743.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (26 samples, 0.03%)</title><rect x="88.6576%" y="1749" width="0.0338%" height="15" fill="rgb(224,207,20)" fg:x="68277" fg:w="26"/><text x="88.9076%" y="1759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (8 samples, 0.01%)</title><rect x="88.6810%" y="1733" width="0.0104%" height="15" fill="rgb(244,185,11)" fg:x="68295" fg:w="8"/><text x="88.9310%" y="1743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (16 samples, 0.02%)</title><rect x="88.7005%" y="1733" width="0.0208%" height="15" fill="rgb(230,13,42)" fg:x="68310" fg:w="16"/><text x="88.9505%" y="1743.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (70 samples, 0.09%)</title><rect x="88.6433%" y="1765" width="0.0909%" height="15" fill="rgb(243,191,18)" fg:x="68266" fg:w="70"/><text x="88.8933%" y="1775.50"></text></g><g><title>sha2::sha512::x86::sha_round (33 samples, 0.04%)</title><rect x="88.6914%" y="1749" width="0.0429%" height="15" fill="rgb(249,135,15)" fg:x="68303" fg:w="33"/><text x="88.9414%" y="1759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.01%)</title><rect x="88.7212%" y="1733" width="0.0130%" height="15" fill="rgb(229,26,35)" fg:x="68326" fg:w="10"/><text x="88.9712%" y="1743.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (91 samples, 0.12%)</title><rect x="88.6251%" y="1909" width="0.1182%" height="15" fill="rgb(216,191,16)" fg:x="68252" fg:w="91"/><text x="88.8751%" y="1919.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::Update&gt;::update (91 samples, 0.12%)</title><rect x="88.6251%" y="1893" width="0.1182%" height="15" fill="rgb(242,18,7)" fg:x="68252" fg:w="91"/><text x="88.8751%" y="1903.50"></text></g><g><title>sha2::sha512::Engine512::update (91 samples, 0.12%)</title><rect x="88.6251%" y="1877" width="0.1182%" height="15" fill="rgb(205,128,17)" fg:x="68252" fg:w="91"/><text x="88.8751%" y="1887.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (91 samples, 0.12%)</title><rect x="88.6251%" y="1861" width="0.1182%" height="15" fill="rgb(229,199,44)" fg:x="68252" fg:w="91"/><text x="88.8751%" y="1871.50"></text></g><g><title>sha2::sha512::Engine512::update::{{closure}} (87 samples, 0.11%)</title><rect x="88.6303%" y="1845" width="0.1130%" height="15" fill="rgb(234,222,3)" fg:x="68256" fg:w="87"/><text x="88.8803%" y="1855.50"></text></g><g><title>sha2::sha512::compress512 (87 samples, 0.11%)</title><rect x="88.6303%" y="1829" width="0.1130%" height="15" fill="rgb(220,170,20)" fg:x="68256" fg:w="87"/><text x="88.8803%" y="1839.50"></text></g><g><title>sha2::sha512::x86::compress (87 samples, 0.11%)</title><rect x="88.6303%" y="1813" width="0.1130%" height="15" fill="rgb(207,138,8)" fg:x="68256" fg:w="87"/><text x="88.8803%" y="1823.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (86 samples, 0.11%)</title><rect x="88.6316%" y="1797" width="0.1117%" height="15" fill="rgb(244,130,36)" fg:x="68257" fg:w="86"/><text x="88.8816%" y="1807.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (83 samples, 0.11%)</title><rect x="88.6355%" y="1781" width="0.1078%" height="15" fill="rgb(207,197,52)" fg:x="68260" fg:w="83"/><text x="88.8855%" y="1791.50"></text></g><g><title>[libc.so.6] (42 samples, 0.05%)</title><rect x="88.7576%" y="1861" width="0.0545%" height="15" fill="rgb(206,9,21)" fg:x="68354" fg:w="42"/><text x="89.0076%" y="1871.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (16 samples, 0.02%)</title><rect x="88.8641%" y="1845" width="0.0208%" height="15" fill="rgb(250,15,47)" fg:x="68436" fg:w="16"/><text x="89.1141%" y="1855.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (13 samples, 0.02%)</title><rect x="88.8680%" y="1829" width="0.0169%" height="15" fill="rgb(235,202,14)" fg:x="68439" fg:w="13"/><text x="89.1180%" y="1839.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (340 samples, 0.44%)</title><rect x="88.8848%" y="1845" width="0.4415%" height="15" fill="rgb(211,180,47)" fg:x="68452" fg:w="340"/><text x="89.1348%" y="1855.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (49 samples, 0.06%)</title><rect x="89.2627%" y="1829" width="0.0636%" height="15" fill="rgb(209,61,11)" fg:x="68743" fg:w="49"/><text x="89.5127%" y="1839.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (483 samples, 0.63%)</title><rect x="88.8121%" y="1861" width="0.6272%" height="15" fill="rgb(243,197,29)" fg:x="68396" fg:w="483"/><text x="89.0621%" y="1871.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (87 samples, 0.11%)</title><rect x="89.3263%" y="1845" width="0.1130%" height="15" fill="rgb(216,185,16)" fg:x="68792" fg:w="87"/><text x="89.5763%" y="1855.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (26 samples, 0.03%)</title><rect x="89.4055%" y="1829" width="0.0338%" height="15" fill="rgb(248,5,15)" fg:x="68853" fg:w="26"/><text x="89.6555%" y="1839.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (471 samples, 0.61%)</title><rect x="89.4393%" y="1861" width="0.6116%" height="15" fill="rgb(240,39,41)" fg:x="68879" fg:w="471"/><text x="89.6893%" y="1871.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (466 samples, 0.61%)</title><rect x="89.4458%" y="1845" width="0.6051%" height="15" fill="rgb(224,220,43)" fg:x="68884" fg:w="466"/><text x="89.6958%" y="1855.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (72 samples, 0.09%)</title><rect x="89.9574%" y="1829" width="0.0935%" height="15" fill="rgb(215,21,24)" fg:x="69278" fg:w="72"/><text x="90.2074%" y="1839.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (15 samples, 0.02%)</title><rect x="90.0574%" y="1845" width="0.0195%" height="15" fill="rgb(220,102,8)" fg:x="69355" fg:w="15"/><text x="90.3074%" y="1855.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (14 samples, 0.02%)</title><rect x="90.0587%" y="1829" width="0.0182%" height="15" fill="rgb(225,185,10)" fg:x="69356" fg:w="14"/><text x="90.3087%" y="1839.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (60 samples, 0.08%)</title><rect x="90.0509%" y="1861" width="0.0779%" height="15" fill="rgb(212,108,24)" fg:x="69350" fg:w="60"/><text x="90.3009%" y="1871.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (40 samples, 0.05%)</title><rect x="90.0769%" y="1845" width="0.0519%" height="15" fill="rgb(237,27,0)" fg:x="69370" fg:w="40"/><text x="90.3269%" y="1855.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (20 samples, 0.03%)</title><rect x="90.1028%" y="1829" width="0.0260%" height="15" fill="rgb(212,106,38)" fg:x="69390" fg:w="20"/><text x="90.3528%" y="1839.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (20 samples, 0.03%)</title><rect x="90.1028%" y="1813" width="0.0260%" height="15" fill="rgb(210,125,30)" fg:x="69390" fg:w="20"/><text x="90.3528%" y="1823.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as core::ops::arith::Neg&gt;::neg (69 samples, 0.09%)</title><rect x="90.1665%" y="1829" width="0.0896%" height="15" fill="rgb(215,219,1)" fg:x="69439" fg:w="69"/><text x="90.4165%" y="1839.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (37 samples, 0.05%)</title><rect x="90.2080%" y="1813" width="0.0480%" height="15" fill="rgb(223,10,12)" fg:x="69471" fg:w="37"/><text x="90.4580%" y="1823.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (30 samples, 0.04%)</title><rect x="90.2171%" y="1797" width="0.0390%" height="15" fill="rgb(245,40,34)" fg:x="69478" fg:w="30"/><text x="90.4671%" y="1807.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (86 samples, 0.11%)</title><rect x="90.1665%" y="1845" width="0.1117%" height="15" fill="rgb(211,185,19)" fg:x="69439" fg:w="86"/><text x="90.4165%" y="1855.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (17 samples, 0.02%)</title><rect x="90.2561%" y="1829" width="0.0221%" height="15" fill="rgb(243,190,43)" fg:x="69508" fg:w="17"/><text x="90.5061%" y="1839.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (17 samples, 0.02%)</title><rect x="90.2561%" y="1813" width="0.0221%" height="15" fill="rgb(232,208,29)" fg:x="69508" fg:w="17"/><text x="90.5061%" y="1823.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (17 samples, 0.02%)</title><rect x="90.2561%" y="1797" width="0.0221%" height="15" fill="rgb(234,134,27)" fg:x="69508" fg:w="17"/><text x="90.5061%" y="1807.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (241 samples, 0.31%)</title><rect x="90.2807%" y="1845" width="0.3129%" height="15" fill="rgb(225,41,29)" fg:x="69527" fg:w="241"/><text x="90.5307%" y="1855.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (219 samples, 0.28%)</title><rect x="90.3093%" y="1829" width="0.2844%" height="15" fill="rgb(241,214,44)" fg:x="69549" fg:w="219"/><text x="90.5593%" y="1839.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (219 samples, 0.28%)</title><rect x="90.3093%" y="1813" width="0.2844%" height="15" fill="rgb(205,219,41)" fg:x="69549" fg:w="219"/><text x="90.5593%" y="1823.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1,472 samples, 1.91%)</title><rect x="88.7472%" y="1909" width="1.9114%" height="15" fill="rgb(226,15,26)" fg:x="68346" fg:w="1472"/><text x="88.9972%" y="1919.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1,471 samples, 1.91%)</title><rect x="88.7485%" y="1893" width="1.9101%" height="15" fill="rgb(210,83,41)" fg:x="68347" fg:w="1471"/><text x="88.9985%" y="1903.50">&lt;..</text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (1,471 samples, 1.91%)</title><rect x="88.7485%" y="1877" width="1.9101%" height="15" fill="rgb(247,9,39)" fg:x="68347" fg:w="1471"/><text x="88.9985%" y="1887.50">c..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (403 samples, 0.52%)</title><rect x="90.1353%" y="1861" width="0.5233%" height="15" fill="rgb(209,37,30)" fg:x="69415" fg:w="403"/><text x="90.3853%" y="1871.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (45 samples, 0.06%)</title><rect x="90.6002%" y="1845" width="0.0584%" height="15" fill="rgb(248,170,46)" fg:x="69773" fg:w="45"/><text x="90.8502%" y="1855.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (45 samples, 0.06%)</title><rect x="90.6002%" y="1829" width="0.0584%" height="15" fill="rgb(237,129,44)" fg:x="69773" fg:w="45"/><text x="90.8502%" y="1839.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (45 samples, 0.06%)</title><rect x="90.6002%" y="1813" width="0.0584%" height="15" fill="rgb(225,117,51)" fg:x="69773" fg:w="45"/><text x="90.8502%" y="1823.50"></text></g><g><title>subtle::black_box (40 samples, 0.05%)</title><rect x="90.6067%" y="1797" width="0.0519%" height="15" fill="rgb(212,165,2)" fg:x="69778" fg:w="40"/><text x="90.8567%" y="1807.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (16 samples, 0.02%)</title><rect x="90.6703%" y="1877" width="0.0208%" height="15" fill="rgb(213,53,45)" fg:x="69827" fg:w="16"/><text x="90.9203%" y="1887.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (22 samples, 0.03%)</title><rect x="90.6924%" y="1861" width="0.0286%" height="15" fill="rgb(220,148,3)" fg:x="69844" fg:w="22"/><text x="90.9424%" y="1871.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (343 samples, 0.45%)</title><rect x="90.7209%" y="1861" width="0.4454%" height="15" fill="rgb(228,37,29)" fg:x="69866" fg:w="343"/><text x="90.9709%" y="1871.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (38 samples, 0.05%)</title><rect x="91.1170%" y="1845" width="0.0493%" height="15" fill="rgb(209,76,29)" fg:x="70171" fg:w="38"/><text x="91.3670%" y="1855.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (390 samples, 0.51%)</title><rect x="90.6677%" y="1893" width="0.5064%" height="15" fill="rgb(215,90,5)" fg:x="69825" fg:w="390"/><text x="90.9177%" y="1903.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (372 samples, 0.48%)</title><rect x="90.6911%" y="1877" width="0.4830%" height="15" fill="rgb(227,207,32)" fg:x="69843" fg:w="372"/><text x="90.9411%" y="1887.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (399 samples, 0.52%)</title><rect x="90.6586%" y="1909" width="0.5181%" height="15" fill="rgb(251,218,44)" fg:x="69818" fg:w="399"/><text x="90.9086%" y="1919.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (25 samples, 0.03%)</title><rect x="91.1936%" y="1701" width="0.0325%" height="15" fill="rgb(211,44,16)" fg:x="70230" fg:w="25"/><text x="91.4436%" y="1711.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (10 samples, 0.01%)</title><rect x="91.2131%" y="1685" width="0.0130%" height="15" fill="rgb(242,170,37)" fg:x="70245" fg:w="10"/><text x="91.4631%" y="1695.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (45 samples, 0.06%)</title><rect x="91.1884%" y="1717" width="0.0584%" height="15" fill="rgb(205,181,22)" fg:x="70226" fg:w="45"/><text x="91.4384%" y="1727.50"></text></g><g><title>sha2::sha512::x86::sha_round (16 samples, 0.02%)</title><rect x="91.2260%" y="1701" width="0.0208%" height="15" fill="rgb(228,130,19)" fg:x="70255" fg:w="16"/><text x="91.4760%" y="1711.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (60 samples, 0.08%)</title><rect x="91.1767%" y="1861" width="0.0779%" height="15" fill="rgb(228,9,15)" fg:x="70217" fg:w="60"/><text x="91.4267%" y="1871.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (60 samples, 0.08%)</title><rect x="91.1767%" y="1845" width="0.0779%" height="15" fill="rgb(219,66,48)" fg:x="70217" fg:w="60"/><text x="91.4267%" y="1855.50"></text></g><g><title>sha2::sha512::Engine512::finish (59 samples, 0.08%)</title><rect x="91.1780%" y="1829" width="0.0766%" height="15" fill="rgb(234,203,10)" fg:x="70218" fg:w="59"/><text x="91.4280%" y="1839.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (59 samples, 0.08%)</title><rect x="91.1780%" y="1813" width="0.0766%" height="15" fill="rgb(219,209,1)" fg:x="70218" fg:w="59"/><text x="91.4280%" y="1823.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (57 samples, 0.07%)</title><rect x="91.1806%" y="1797" width="0.0740%" height="15" fill="rgb(206,167,9)" fg:x="70220" fg:w="57"/><text x="91.4306%" y="1807.50"></text></g><g><title>sha2::sha512::compress512 (57 samples, 0.07%)</title><rect x="91.1806%" y="1781" width="0.0740%" height="15" fill="rgb(210,11,39)" fg:x="70220" fg:w="57"/><text x="91.4306%" y="1791.50"></text></g><g><title>sha2::sha512::x86::compress (57 samples, 0.07%)</title><rect x="91.1806%" y="1765" width="0.0740%" height="15" fill="rgb(251,90,47)" fg:x="70220" fg:w="57"/><text x="91.4306%" y="1775.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (57 samples, 0.07%)</title><rect x="91.1806%" y="1749" width="0.0740%" height="15" fill="rgb(237,7,4)" fg:x="70220" fg:w="57"/><text x="91.4306%" y="1759.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (57 samples, 0.07%)</title><rect x="91.1806%" y="1733" width="0.0740%" height="15" fill="rgb(232,205,47)" fg:x="70220" fg:w="57"/><text x="91.4306%" y="1743.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (63 samples, 0.08%)</title><rect x="91.1767%" y="1893" width="0.0818%" height="15" fill="rgb(215,86,48)" fg:x="70217" fg:w="63"/><text x="91.4267%" y="1903.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (63 samples, 0.08%)</title><rect x="91.1767%" y="1877" width="0.0818%" height="15" fill="rgb(232,14,47)" fg:x="70217" fg:w="63"/><text x="91.4267%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce (14 samples, 0.02%)</title><rect x="91.2702%" y="1845" width="0.0182%" height="15" fill="rgb(240,28,46)" fg:x="70289" fg:w="14"/><text x="91.5202%" y="1855.50"></text></g><g><title>aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey::sign_arbitrary_message (4,014 samples, 5.21%)</title><rect x="86.0827%" y="1941" width="5.2122%" height="15" fill="rgb(224,85,5)" fg:x="66294" fg:w="4014"/><text x="86.3327%" y="1951.50">aptos_..</text></g><g><title>ed25519_dalek::secret::ExpandedSecretKey::sign (2,077 samples, 2.70%)</title><rect x="88.5979%" y="1925" width="2.6970%" height="15" fill="rgb(219,34,25)" fg:x="68231" fg:w="2077"/><text x="88.8479%" y="1935.50">ed..</text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (91 samples, 0.12%)</title><rect x="91.1767%" y="1909" width="0.1182%" height="15" fill="rgb(247,137,45)" fg:x="70217" fg:w="91"/><text x="91.4267%" y="1919.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (28 samples, 0.04%)</title><rect x="91.2585%" y="1893" width="0.0364%" height="15" fill="rgb(237,121,47)" fg:x="70280" fg:w="28"/><text x="91.5085%" y="1903.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (27 samples, 0.04%)</title><rect x="91.2598%" y="1877" width="0.0351%" height="15" fill="rgb(247,148,27)" fg:x="70281" fg:w="27"/><text x="91.5098%" y="1887.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (19 samples, 0.02%)</title><rect x="91.2702%" y="1861" width="0.0247%" height="15" fill="rgb(220,44,0)" fg:x="70289" fg:w="19"/><text x="91.5202%" y="1871.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (12 samples, 0.02%)</title><rect x="91.3014%" y="1813" width="0.0156%" height="15" fill="rgb(236,61,29)" fg:x="70313" fg:w="12"/><text x="91.5514%" y="1823.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (12 samples, 0.02%)</title><rect x="91.3014%" y="1797" width="0.0156%" height="15" fill="rgb(244,180,35)" fg:x="70313" fg:w="12"/><text x="91.5514%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (12 samples, 0.02%)</title><rect x="91.3014%" y="1781" width="0.0156%" height="15" fill="rgb(242,14,54)" fg:x="70313" fg:w="12"/><text x="91.5514%" y="1791.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="91.3014%" y="1765" width="0.0156%" height="15" fill="rgb(206,24,45)" fg:x="70313" fg:w="12"/><text x="91.5514%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="91.3014%" y="1749" width="0.0156%" height="15" fill="rgb(215,211,6)" fg:x="70313" fg:w="12"/><text x="91.5514%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="91.3014%" y="1733" width="0.0156%" height="15" fill="rgb(207,56,2)" fg:x="70313" fg:w="12"/><text x="91.5514%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="91.3014%" y="1717" width="0.0156%" height="15" fill="rgb(220,135,9)" fg:x="70313" fg:w="12"/><text x="91.5514%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="91.3065%" y="1701" width="0.0104%" height="15" fill="rgb(214,145,52)" fg:x="70317" fg:w="8"/><text x="91.5565%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="91.3065%" y="1685" width="0.0104%" height="15" fill="rgb(241,83,53)" fg:x="70317" fg:w="8"/><text x="91.5565%" y="1695.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.02%)</title><rect x="91.3014%" y="1861" width="0.0169%" height="15" fill="rgb(222,66,13)" fg:x="70313" fg:w="13"/><text x="91.5514%" y="1871.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.02%)</title><rect x="91.3014%" y="1845" width="0.0169%" height="15" fill="rgb(239,164,54)" fg:x="70313" fg:w="13"/><text x="91.5514%" y="1855.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (13 samples, 0.02%)</title><rect x="91.3014%" y="1829" width="0.0169%" height="15" fill="rgb(216,189,13)" fg:x="70313" fg:w="13"/><text x="91.5514%" y="1839.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="91.3195%" y="1589" width="0.0156%" height="15" fill="rgb(228,212,51)" fg:x="70327" fg:w="12"/><text x="91.5695%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.02%)</title><rect x="91.3195%" y="1573" width="0.0156%" height="15" fill="rgb(207,190,21)" fg:x="70327" fg:w="12"/><text x="91.5695%" y="1583.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.02%)</title><rect x="91.3195%" y="1557" width="0.0156%" height="15" fill="rgb(245,28,35)" fg:x="70327" fg:w="12"/><text x="91.5695%" y="1567.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.02%)</title><rect x="91.3195%" y="1541" width="0.0156%" height="15" fill="rgb(239,23,40)" fg:x="70327" fg:w="12"/><text x="91.5695%" y="1551.50"></text></g><g><title>realloc (12 samples, 0.02%)</title><rect x="91.3195%" y="1525" width="0.0156%" height="15" fill="rgb(242,10,51)" fg:x="70327" fg:w="12"/><text x="91.5695%" y="1535.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="91.3195%" y="1509" width="0.0156%" height="15" fill="rgb(207,186,5)" fg:x="70327" fg:w="12"/><text x="91.5695%" y="1519.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="91.3221%" y="1493" width="0.0130%" height="15" fill="rgb(242,21,16)" fg:x="70329" fg:w="10"/><text x="91.5721%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="91.3195%" y="1765" width="0.0169%" height="15" fill="rgb(237,0,53)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1775.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (13 samples, 0.02%)</title><rect x="91.3195%" y="1749" width="0.0169%" height="15" fill="rgb(215,8,52)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (13 samples, 0.02%)</title><rect x="91.3195%" y="1733" width="0.0169%" height="15" fill="rgb(248,62,44)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1743.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.02%)</title><rect x="91.3195%" y="1717" width="0.0169%" height="15" fill="rgb(224,83,15)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.02%)</title><rect x="91.3195%" y="1701" width="0.0169%" height="15" fill="rgb(249,100,46)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.02%)</title><rect x="91.3195%" y="1685" width="0.0169%" height="15" fill="rgb(213,35,48)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.02%)</title><rect x="91.3195%" y="1669" width="0.0169%" height="15" fill="rgb(251,2,13)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="91.3195%" y="1653" width="0.0169%" height="15" fill="rgb(212,132,21)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="91.3195%" y="1637" width="0.0169%" height="15" fill="rgb(247,17,21)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.02%)</title><rect x="91.3195%" y="1621" width="0.0169%" height="15" fill="rgb(220,177,38)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="91.3195%" y="1605" width="0.0169%" height="15" fill="rgb(233,219,21)" fg:x="70327" fg:w="13"/><text x="91.5695%" y="1615.50"></text></g><g><title>&lt;aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (14 samples, 0.02%)</title><rect x="91.3195%" y="1797" width="0.0182%" height="15" fill="rgb(246,17,7)" fg:x="70327" fg:w="14"/><text x="91.5695%" y="1807.50"></text></g><g><title>aptos_types::serde_helper::vec_bytes::serialize (14 samples, 0.02%)</title><rect x="91.3195%" y="1781" width="0.0182%" height="15" fill="rgb(212,4,22)" fg:x="70327" fg:w="14"/><text x="91.5695%" y="1791.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (23 samples, 0.03%)</title><rect x="91.3182%" y="1861" width="0.0299%" height="15" fill="rgb(243,85,21)" fg:x="70326" fg:w="23"/><text x="91.5682%" y="1871.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (22 samples, 0.03%)</title><rect x="91.3195%" y="1845" width="0.0286%" height="15" fill="rgb(232,218,2)" fg:x="70327" fg:w="22"/><text x="91.5695%" y="1855.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (22 samples, 0.03%)</title><rect x="91.3195%" y="1829" width="0.0286%" height="15" fill="rgb(253,168,47)" fg:x="70327" fg:w="22"/><text x="91.5695%" y="1839.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.03%)</title><rect x="91.3195%" y="1813" width="0.0286%" height="15" fill="rgb(238,101,25)" fg:x="70327" fg:w="22"/><text x="91.5695%" y="1823.50"></text></g><g><title>aptos_crypto::traits::signing_message (54 samples, 0.07%)</title><rect x="91.2949%" y="1941" width="0.0701%" height="15" fill="rgb(251,86,12)" fg:x="70308" fg:w="54"/><text x="91.5449%" y="1951.50"></text></g><g><title>bcs::ser::serialize_into (49 samples, 0.06%)</title><rect x="91.3014%" y="1925" width="0.0636%" height="15" fill="rgb(241,112,44)" fg:x="70313" fg:w="49"/><text x="91.5514%" y="1935.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (49 samples, 0.06%)</title><rect x="91.3014%" y="1909" width="0.0636%" height="15" fill="rgb(224,28,25)" fg:x="70313" fg:w="49"/><text x="91.5514%" y="1919.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (49 samples, 0.06%)</title><rect x="91.3014%" y="1893" width="0.0636%" height="15" fill="rgb(209,201,1)" fg:x="70313" fg:w="49"/><text x="91.5514%" y="1903.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (49 samples, 0.06%)</title><rect x="91.3014%" y="1877" width="0.0636%" height="15" fill="rgb(231,30,22)" fg:x="70313" fg:w="49"/><text x="91.5514%" y="1887.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (13 samples, 0.02%)</title><rect x="91.3481%" y="1861" width="0.0169%" height="15" fill="rgb(247,96,31)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1871.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (13 samples, 0.02%)</title><rect x="91.3481%" y="1845" width="0.0169%" height="15" fill="rgb(251,100,12)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1855.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.02%)</title><rect x="91.3481%" y="1829" width="0.0169%" height="15" fill="rgb(224,174,7)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.02%)</title><rect x="91.3481%" y="1813" width="0.0169%" height="15" fill="rgb(231,168,19)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.02%)</title><rect x="91.3481%" y="1797" width="0.0169%" height="15" fill="rgb(226,85,5)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.02%)</title><rect x="91.3481%" y="1781" width="0.0169%" height="15" fill="rgb(210,215,5)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="91.3481%" y="1765" width="0.0169%" height="15" fill="rgb(233,70,8)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="91.3481%" y="1749" width="0.0169%" height="15" fill="rgb(229,109,53)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.02%)</title><rect x="91.3481%" y="1733" width="0.0169%" height="15" fill="rgb(213,125,35)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="91.3481%" y="1717" width="0.0169%" height="15" fill="rgb(215,12,48)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="91.3481%" y="1701" width="0.0169%" height="15" fill="rgb(207,12,38)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.02%)</title><rect x="91.3481%" y="1685" width="0.0169%" height="15" fill="rgb(216,229,2)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1695.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.02%)</title><rect x="91.3481%" y="1669" width="0.0169%" height="15" fill="rgb(229,209,31)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1679.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.02%)</title><rect x="91.3481%" y="1653" width="0.0169%" height="15" fill="rgb(239,57,22)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1663.50"></text></g><g><title>realloc (13 samples, 0.02%)</title><rect x="91.3481%" y="1637" width="0.0169%" height="15" fill="rgb(239,119,54)" fg:x="70349" fg:w="13"/><text x="91.5981%" y="1647.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="91.3494%" y="1621" width="0.0156%" height="15" fill="rgb(231,80,45)" fg:x="70350" fg:w="12"/><text x="91.5994%" y="1631.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="91.3507%" y="1605" width="0.0143%" height="15" fill="rgb(219,138,19)" fg:x="70351" fg:w="11"/><text x="91.6007%" y="1615.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey as aptos_crypto::traits::SigningKey&gt;::sign (4,070 samples, 5.28%)</title><rect x="86.0827%" y="1957" width="5.2849%" height="15" fill="rgb(216,53,26)" fg:x="66294" fg:w="4070"/><text x="86.3327%" y="1967.50">&lt;aptos..</text></g><g><title>aptos_types::transaction::RawTransaction::sign (4,072 samples, 5.29%)</title><rect x="86.0827%" y="1973" width="5.2875%" height="15" fill="rgb(224,30,16)" fg:x="66294" fg:w="4072"/><text x="86.3327%" y="1983.50">aptos_..</text></g><g><title>aptos_language_e2e_tests::account::TransactionBuilder::sign (4,075 samples, 5.29%)</title><rect x="86.0827%" y="1989" width="5.2914%" height="15" fill="rgb(224,151,24)" fg:x="66294" fg:w="4075"/><text x="86.3327%" y="1999.50">aptos_..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.02%)</title><rect x="91.3845%" y="1717" width="0.0182%" height="15" fill="rgb(236,75,7)" fg:x="70377" fg:w="14"/><text x="91.6345%" y="1727.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.02%)</title><rect x="91.3845%" y="1701" width="0.0182%" height="15" fill="rgb(248,106,42)" fg:x="70377" fg:w="14"/><text x="91.6345%" y="1711.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.02%)</title><rect x="91.3845%" y="1685" width="0.0182%" height="15" fill="rgb(222,217,11)" fg:x="70377" fg:w="14"/><text x="91.6345%" y="1695.50"></text></g><g><title>realloc (14 samples, 0.02%)</title><rect x="91.3845%" y="1669" width="0.0182%" height="15" fill="rgb(234,143,31)" fg:x="70377" fg:w="14"/><text x="91.6345%" y="1679.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="91.3884%" y="1653" width="0.0143%" height="15" fill="rgb(237,148,28)" fg:x="70380" fg:w="11"/><text x="91.6384%" y="1663.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="91.3884%" y="1637" width="0.0143%" height="15" fill="rgb(241,151,6)" fg:x="70380" fg:w="11"/><text x="91.6384%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (20 samples, 0.03%)</title><rect x="91.3780%" y="1909" width="0.0260%" height="15" fill="rgb(226,55,18)" fg:x="70372" fg:w="20"/><text x="91.6280%" y="1919.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (20 samples, 0.03%)</title><rect x="91.3780%" y="1893" width="0.0260%" height="15" fill="rgb(226,196,6)" fg:x="70372" fg:w="20"/><text x="91.6280%" y="1903.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (20 samples, 0.03%)</title><rect x="91.3780%" y="1877" width="0.0260%" height="15" fill="rgb(251,228,11)" fg:x="70372" fg:w="20"/><text x="91.6280%" y="1887.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (20 samples, 0.03%)</title><rect x="91.3780%" y="1861" width="0.0260%" height="15" fill="rgb(219,197,15)" fg:x="70372" fg:w="20"/><text x="91.6280%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.03%)</title><rect x="91.3780%" y="1845" width="0.0260%" height="15" fill="rgb(243,105,44)" fg:x="70372" fg:w="20"/><text x="91.6280%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.03%)</title><rect x="91.3780%" y="1829" width="0.0260%" height="15" fill="rgb(205,183,40)" fg:x="70372" fg:w="20"/><text x="91.6280%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.03%)</title><rect x="91.3780%" y="1813" width="0.0260%" height="15" fill="rgb(232,138,46)" fg:x="70372" fg:w="20"/><text x="91.6280%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="91.3806%" y="1797" width="0.0234%" height="15" fill="rgb(234,161,14)" fg:x="70374" fg:w="18"/><text x="91.6306%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="91.3806%" y="1781" width="0.0234%" height="15" fill="rgb(238,211,18)" fg:x="70374" fg:w="18"/><text x="91.6306%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="91.3832%" y="1765" width="0.0208%" height="15" fill="rgb(217,130,2)" fg:x="70376" fg:w="16"/><text x="91.6332%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="91.3832%" y="1749" width="0.0208%" height="15" fill="rgb(251,17,29)" fg:x="70376" fg:w="16"/><text x="91.6332%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="91.3832%" y="1733" width="0.0208%" height="15" fill="rgb(243,18,0)" fg:x="70376" fg:w="16"/><text x="91.6332%" y="1743.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (21 samples, 0.03%)</title><rect x="91.3780%" y="1957" width="0.0273%" height="15" fill="rgb(227,220,45)" fg:x="70372" fg:w="21"/><text x="91.6280%" y="1967.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 0.03%)</title><rect x="91.3780%" y="1941" width="0.0273%" height="15" fill="rgb(212,34,2)" fg:x="70372" fg:w="21"/><text x="91.6280%" y="1951.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (21 samples, 0.03%)</title><rect x="91.3780%" y="1925" width="0.0273%" height="15" fill="rgb(236,23,8)" fg:x="70372" fg:w="21"/><text x="91.6280%" y="1935.50"></text></g><g><title>bcs::ser::to_bytes (26 samples, 0.03%)</title><rect x="91.3754%" y="1989" width="0.0338%" height="15" fill="rgb(210,113,39)" fg:x="70370" fg:w="26"/><text x="91.6254%" y="1999.50"></text></g><g><title>bcs::ser::serialize_into (24 samples, 0.03%)</title><rect x="91.3780%" y="1973" width="0.0312%" height="15" fill="rgb(243,123,48)" fg:x="70372" fg:w="24"/><text x="91.6280%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_language_e2e_tests::account::Account&gt;&gt; (72 samples, 0.09%)</title><rect x="91.4091%" y="1989" width="0.0935%" height="15" fill="rgb(223,175,36)" fg:x="70396" fg:w="72"/><text x="91.6591%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.09%)</title><rect x="91.4091%" y="1973" width="0.0935%" height="15" fill="rgb(226,100,30)" fg:x="70396" fg:w="72"/><text x="91.6591%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_language_e2e_tests::account::Account]&gt; (72 samples, 0.09%)</title><rect x="91.4091%" y="1957" width="0.0935%" height="15" fill="rgb(221,225,39)" fg:x="70396" fg:w="72"/><text x="91.6591%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_language_e2e_tests::account::Account&gt; (72 samples, 0.09%)</title><rect x="91.4091%" y="1941" width="0.0935%" height="15" fill="rgb(224,222,42)" fg:x="70396" fg:w="72"/><text x="91.6591%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey&gt; (72 samples, 0.09%)</title><rect x="91.4091%" y="1925" width="0.0935%" height="15" fill="rgb(221,53,1)" fg:x="70396" fg:w="72"/><text x="91.6591%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;ed25519_dalek::secret::SecretKey&gt; (72 samples, 0.09%)</title><rect x="91.4091%" y="1909" width="0.0935%" height="15" fill="rgb(216,187,48)" fg:x="70396" fg:w="72"/><text x="91.6591%" y="1919.50"></text></g><g><title>&lt;ed25519_dalek::secret::SecretKey as core::ops::drop::Drop&gt;::drop (71 samples, 0.09%)</title><rect x="91.4104%" y="1893" width="0.0922%" height="15" fill="rgb(220,108,2)" fg:x="70397" fg:w="71"/><text x="91.6604%" y="1903.50"></text></g><g><title>&lt;ed25519_dalek::secret::SecretKey as zeroize::Zeroize&gt;::zeroize (60 samples, 0.08%)</title><rect x="91.4247%" y="1877" width="0.0779%" height="15" fill="rgb(216,13,42)" fg:x="70408" fg:w="60"/><text x="91.6747%" y="1887.50"></text></g><g><title>&lt;[Z: 32] as zeroize::Zeroize&gt;::zeroize (60 samples, 0.08%)</title><rect x="91.4247%" y="1861" width="0.0779%" height="15" fill="rgb(205,14,29)" fg:x="70408" fg:w="60"/><text x="91.6747%" y="1871.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (60 samples, 0.08%)</title><rect x="91.4247%" y="1845" width="0.0779%" height="15" fill="rgb(217,168,30)" fg:x="70408" fg:w="60"/><text x="91.6747%" y="1855.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (60 samples, 0.08%)</title><rect x="91.4247%" y="1829" width="0.0779%" height="15" fill="rgb(246,173,54)" fg:x="70408" fg:w="60"/><text x="91.6747%" y="1839.50"></text></g><g><title>zeroize::volatile_write (60 samples, 0.08%)</title><rect x="91.4247%" y="1813" width="0.0779%" height="15" fill="rgb(227,177,11)" fg:x="70408" fg:w="60"/><text x="91.6747%" y="1823.50"></text></g><g><title>core::ptr::write_volatile (60 samples, 0.08%)</title><rect x="91.4247%" y="1797" width="0.0779%" height="15" fill="rgb(223,215,51)" fg:x="70408" fg:w="60"/><text x="91.6747%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (11 samples, 0.01%)</title><rect x="91.5026%" y="1989" width="0.0143%" height="15" fill="rgb(253,4,17)" fg:x="70468" fg:w="11"/><text x="91.7526%" y="1999.50"></text></g><g><title>run_benchmark::create_block (4,314 samples, 5.60%)</title><rect x="85.9204%" y="2005" width="5.6017%" height="15" fill="rgb(206,150,43)" fg:x="66169" fg:w="4314"/><text x="86.1704%" y="2015.50">run_ben..</text></g><g><title>move_vm_runtime::loader::Loader::load_function (8 samples, 0.01%)</title><rect x="91.5234%" y="1637" width="0.0104%" height="15" fill="rgb(241,100,52)" fg:x="70484" fg:w="8"/><text x="91.7734%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (8 samples, 0.01%)</title><rect x="91.5234%" y="1621" width="0.0104%" height="15" fill="rgb(234,120,21)" fg:x="70484" fg:w="8"/><text x="91.7734%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (8 samples, 0.01%)</title><rect x="91.5234%" y="1605" width="0.0104%" height="15" fill="rgb(231,60,11)" fg:x="70484" fg:w="8"/><text x="91.7734%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (8 samples, 0.01%)</title><rect x="91.5234%" y="1589" width="0.0104%" height="15" fill="rgb(247,77,50)" fg:x="70484" fg:w="8"/><text x="91.7734%" y="1599.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (8 samples, 0.01%)</title><rect x="91.5234%" y="1573" width="0.0104%" height="15" fill="rgb(251,199,54)" fg:x="70484" fg:w="8"/><text x="91.7734%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (8 samples, 0.01%)</title><rect x="91.5234%" y="1557" width="0.0104%" height="15" fill="rgb(212,120,38)" fg:x="70484" fg:w="8"/><text x="91.7734%" y="1567.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (8 samples, 0.01%)</title><rect x="91.5234%" y="1541" width="0.0104%" height="15" fill="rgb(250,161,37)" fg:x="70484" fg:w="8"/><text x="91.7734%" y="1551.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::from_head_genesis (10 samples, 0.01%)</title><rect x="91.5221%" y="1989" width="0.0130%" height="15" fill="rgb(232,158,45)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1999.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.01%)</title><rect x="91.5221%" y="1973" width="0.0130%" height="15" fill="rgb(233,114,2)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1983.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (10 samples, 0.01%)</title><rect x="91.5221%" y="1957" width="0.0130%" height="15" fill="rgb(248,139,0)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1967.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (10 samples, 0.01%)</title><rect x="91.5221%" y="1941" width="0.0130%" height="15" fill="rgb(222,164,18)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1951.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (10 samples, 0.01%)</title><rect x="91.5221%" y="1925" width="0.0130%" height="15" fill="rgb(221,140,42)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1935.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (10 samples, 0.01%)</title><rect x="91.5221%" y="1909" width="0.0130%" height="15" fill="rgb(209,186,11)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1919.50"></text></g><g><title>once_cell::imp::initialize_or_wait (10 samples, 0.01%)</title><rect x="91.5221%" y="1893" width="0.0130%" height="15" fill="rgb(254,212,38)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.01%)</title><rect x="91.5221%" y="1877" width="0.0130%" height="15" fill="rgb(219,156,31)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1887.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (10 samples, 0.01%)</title><rect x="91.5221%" y="1861" width="0.0130%" height="15" fill="rgb(222,148,42)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1871.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (10 samples, 0.01%)</title><rect x="91.5221%" y="1845" width="0.0130%" height="15" fill="rgb(225,65,5)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1855.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (10 samples, 0.01%)</title><rect x="91.5221%" y="1829" width="0.0130%" height="15" fill="rgb(235,28,12)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1839.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.01%)</title><rect x="91.5221%" y="1813" width="0.0130%" height="15" fill="rgb(245,58,4)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1823.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.01%)</title><rect x="91.5221%" y="1797" width="0.0130%" height="15" fill="rgb(235,118,5)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1807.50"></text></g><g><title>aptos_language_e2e_tests::data_store::GENESIS_CHANGE_SET_HEAD::{{closure}} (10 samples, 0.01%)</title><rect x="91.5221%" y="1781" width="0.0130%" height="15" fill="rgb(253,196,3)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1791.50"></text></g><g><title>aptos_vm_genesis::generate_genesis_change_set_for_testing (10 samples, 0.01%)</title><rect x="91.5221%" y="1765" width="0.0130%" height="15" fill="rgb(238,90,28)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1775.50"></text></g><g><title>aptos_vm_genesis::generate_genesis_change_set_for_testing_with_count (10 samples, 0.01%)</title><rect x="91.5221%" y="1749" width="0.0130%" height="15" fill="rgb(254,227,4)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1759.50"></text></g><g><title>aptos_vm_genesis::generate_test_genesis (10 samples, 0.01%)</title><rect x="91.5221%" y="1733" width="0.0130%" height="15" fill="rgb(237,114,35)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1743.50"></text></g><g><title>aptos_vm_genesis::encode_genesis_change_set (10 samples, 0.01%)</title><rect x="91.5221%" y="1717" width="0.0130%" height="15" fill="rgb(221,147,29)" fg:x="70483" fg:w="10"/><text x="91.7721%" y="1727.50"></text></g><g><title>aptos_vm_genesis::initialize (9 samples, 0.01%)</title><rect x="91.5234%" y="1701" width="0.0117%" height="15" fill="rgb(216,201,17)" fg:x="70484" fg:w="9"/><text x="91.7734%" y="1711.50"></text></g><g><title>aptos_vm_genesis::exec_function (9 samples, 0.01%)</title><rect x="91.5234%" y="1685" width="0.0117%" height="15" fill="rgb(251,46,50)" fg:x="70484" fg:w="9"/><text x="91.7734%" y="1695.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (9 samples, 0.01%)</title><rect x="91.5234%" y="1669" width="0.0117%" height="15" fill="rgb(216,143,48)" fg:x="70484" fg:w="9"/><text x="91.7734%" y="1679.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (9 samples, 0.01%)</title><rect x="91.5234%" y="1653" width="0.0117%" height="15" fill="rgb(224,62,51)" fg:x="70484" fg:w="9"/><text x="91.7734%" y="1663.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib::{{closure}} (8 samples, 0.01%)</title><rect x="91.5364%" y="1717" width="0.0104%" height="15" fill="rgb(232,152,20)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1727.50"></text></g><g><title>&lt;move_compiler::parser::ast::Program as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1701" width="0.0104%" height="15" fill="rgb(233,194,7)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1685" width="0.0104%" height="15" fill="rgb(207,33,22)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="91.5364%" y="1669" width="0.0104%" height="15" fill="rgb(226,54,34)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="91.5364%" y="1653" width="0.0104%" height="15" fill="rgb(227,161,47)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="91.5364%" y="1637" width="0.0104%" height="15" fill="rgb(218,58,37)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1647.50"></text></g><g><title>&lt;move_compiler::parser::ast::PackageDefinition as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1621" width="0.0104%" height="15" fill="rgb(208,173,18)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1631.50"></text></g><g><title>&lt;move_compiler::parser::ast::Definition as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1605" width="0.0104%" height="15" fill="rgb(230,159,11)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1615.50"></text></g><g><title>&lt;move_compiler::parser::ast::ModuleDefinition as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1589" width="0.0104%" height="15" fill="rgb(238,90,51)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1573" width="0.0104%" height="15" fill="rgb(225,97,36)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="91.5364%" y="1557" width="0.0104%" height="15" fill="rgb(211,205,42)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="91.5364%" y="1541" width="0.0104%" height="15" fill="rgb(219,152,7)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="91.5364%" y="1525" width="0.0104%" height="15" fill="rgb(222,79,10)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1535.50"></text></g><g><title>&lt;move_compiler::parser::ast::ModuleMember as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1509" width="0.0104%" height="15" fill="rgb(242,13,11)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1519.50"></text></g><g><title>&lt;move_compiler::parser::ast::Function as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.5364%" y="1493" width="0.0104%" height="15" fill="rgb(231,143,41)" fg:x="70494" fg:w="8"/><text x="91.7864%" y="1503.50"></text></g><g><title>move_compiler::command_line::compiler::run (8 samples, 0.01%)</title><rect x="91.5507%" y="1685" width="0.0104%" height="15" fill="rgb(222,147,19)" fg:x="70505" fg:w="8"/><text x="91.8007%" y="1695.50"></text></g><g><title>move_compiler::command_line::compiler::run (16 samples, 0.02%)</title><rect x="91.5468%" y="1717" width="0.0208%" height="15" fill="rgb(235,5,39)" fg:x="70502" fg:w="16"/><text x="91.7968%" y="1727.50"></text></g><g><title>move_compiler::command_line::compiler::run (13 samples, 0.02%)</title><rect x="91.5507%" y="1701" width="0.0169%" height="15" fill="rgb(246,155,51)" fg:x="70505" fg:w="13"/><text x="91.8007%" y="1711.50"></text></g><g><title>aptos_language_e2e_tests::compile::compile_source_module (27 samples, 0.04%)</title><rect x="91.5351%" y="1973" width="0.0351%" height="15" fill="rgb(218,157,4)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1983.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.04%)</title><rect x="91.5351%" y="1957" width="0.0351%" height="15" fill="rgb(226,184,4)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1967.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (27 samples, 0.04%)</title><rect x="91.5351%" y="1941" width="0.0351%" height="15" fill="rgb(210,103,26)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1951.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (27 samples, 0.04%)</title><rect x="91.5351%" y="1925" width="0.0351%" height="15" fill="rgb(228,23,31)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1935.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (27 samples, 0.04%)</title><rect x="91.5351%" y="1909" width="0.0351%" height="15" fill="rgb(205,176,34)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1919.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (27 samples, 0.04%)</title><rect x="91.5351%" y="1893" width="0.0351%" height="15" fill="rgb(246,213,37)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1903.50"></text></g><g><title>once_cell::imp::initialize_or_wait (27 samples, 0.04%)</title><rect x="91.5351%" y="1877" width="0.0351%" height="15" fill="rgb(213,52,45)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1887.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.04%)</title><rect x="91.5351%" y="1861" width="0.0351%" height="15" fill="rgb(249,9,52)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1871.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (27 samples, 0.04%)</title><rect x="91.5351%" y="1845" width="0.0351%" height="15" fill="rgb(205,97,16)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1855.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (27 samples, 0.04%)</title><rect x="91.5351%" y="1829" width="0.0351%" height="15" fill="rgb(214,11,46)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1839.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (27 samples, 0.04%)</title><rect x="91.5351%" y="1813" width="0.0351%" height="15" fill="rgb(221,66,18)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1823.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.04%)</title><rect x="91.5351%" y="1797" width="0.0351%" height="15" fill="rgb(213,49,1)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1807.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.04%)</title><rect x="91.5351%" y="1781" width="0.0351%" height="15" fill="rgb(232,75,51)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1791.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (27 samples, 0.04%)</title><rect x="91.5351%" y="1765" width="0.0351%" height="15" fill="rgb(208,218,40)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1775.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (27 samples, 0.04%)</title><rect x="91.5351%" y="1749" width="0.0351%" height="15" fill="rgb(206,144,50)" fg:x="70493" fg:w="27"/><text x="91.7851%" y="1759.50"></text></g><g><title>move_compiler::command_line::compiler::run (26 samples, 0.03%)</title><rect x="91.5364%" y="1733" width="0.0338%" height="15" fill="rgb(216,9,51)" fg:x="70494" fg:w="26"/><text x="91.7864%" y="1743.50"></text></g><g><title>run_benchmark::main (40 samples, 0.05%)</title><rect x="91.5221%" y="2005" width="0.0519%" height="15" fill="rgb(226,6,53)" fg:x="70483" fg:w="40"/><text x="91.7721%" y="2015.50"></text></g><g><title>run_benchmark::create_module (30 samples, 0.04%)</title><rect x="91.5351%" y="1989" width="0.0390%" height="15" fill="rgb(216,9,50)" fg:x="70493" fg:w="30"/><text x="91.7851%" y="1999.50"></text></g><g><title>std::rt::lang_start_internal (9 samples, 0.01%)</title><rect x="91.5753%" y="2005" width="0.0117%" height="15" fill="rgb(214,101,31)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="2015.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="91.5753%" y="1989" width="0.0117%" height="15" fill="rgb(247,85,17)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1999.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="91.5753%" y="1973" width="0.0117%" height="15" fill="rgb(248,138,25)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="91.5753%" y="1957" width="0.0117%" height="15" fill="rgb(225,146,20)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1967.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (9 samples, 0.01%)</title><rect x="91.5753%" y="1941" width="0.0117%" height="15" fill="rgb(224,184,17)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="91.5753%" y="1925" width="0.0117%" height="15" fill="rgb(231,10,20)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1935.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="91.5753%" y="1909" width="0.0117%" height="15" fill="rgb(210,93,37)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="91.5753%" y="1893" width="0.0117%" height="15" fill="rgb(226,84,42)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9 samples, 0.01%)</title><rect x="91.5753%" y="1877" width="0.0117%" height="15" fill="rgb(253,192,7)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1887.50"></text></g><g><title>std::rt::lang_start::{{closure}} (9 samples, 0.01%)</title><rect x="91.5753%" y="1861" width="0.0117%" height="15" fill="rgb(214,107,27)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1871.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.01%)</title><rect x="91.5753%" y="1845" width="0.0117%" height="15" fill="rgb(238,146,21)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1855.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.01%)</title><rect x="91.5753%" y="1829" width="0.0117%" height="15" fill="rgb(209,136,30)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1839.50"></text></g><g><title>run_benchmark::main (9 samples, 0.01%)</title><rect x="91.5753%" y="1813" width="0.0117%" height="15" fill="rgb(226,60,22)" fg:x="70524" fg:w="9"/><text x="91.8253%" y="1823.50"></text></g><g><title>run_benchmark::create_module (8 samples, 0.01%)</title><rect x="91.5766%" y="1797" width="0.0104%" height="15" fill="rgb(243,92,26)" fg:x="70525" fg:w="8"/><text x="91.8266%" y="1807.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (8 samples, 0.01%)</title><rect x="91.5870%" y="1301" width="0.0104%" height="15" fill="rgb(211,85,33)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1311.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (8 samples, 0.01%)</title><rect x="91.5870%" y="1285" width="0.0104%" height="15" fill="rgb(243,187,44)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1295.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (8 samples, 0.01%)</title><rect x="91.5870%" y="1269" width="0.0104%" height="15" fill="rgb(251,172,23)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1279.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (8 samples, 0.01%)</title><rect x="91.5870%" y="1253" width="0.0104%" height="15" fill="rgb(254,162,50)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1263.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (8 samples, 0.01%)</title><rect x="91.5870%" y="1237" width="0.0104%" height="15" fill="rgb(239,14,53)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="91.5870%" y="1221" width="0.0104%" height="15" fill="rgb(242,208,8)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1231.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="91.5870%" y="1205" width="0.0104%" height="15" fill="rgb(225,61,41)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1215.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.01%)</title><rect x="91.5870%" y="1189" width="0.0104%" height="15" fill="rgb(219,154,6)" fg:x="70533" fg:w="8"/><text x="91.8370%" y="1199.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (11 samples, 0.01%)</title><rect x="91.5870%" y="1413" width="0.0143%" height="15" fill="rgb(227,223,44)" fg:x="70533" fg:w="11"/><text x="91.8370%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (11 samples, 0.01%)</title><rect x="91.5870%" y="1397" width="0.0143%" height="15" fill="rgb(220,188,6)" fg:x="70533" fg:w="11"/><text x="91.8370%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (11 samples, 0.01%)</title><rect x="91.5870%" y="1381" width="0.0143%" height="15" fill="rgb(216,65,22)" fg:x="70533" fg:w="11"/><text x="91.8370%" y="1391.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (11 samples, 0.01%)</title><rect x="91.5870%" y="1365" width="0.0143%" height="15" fill="rgb(236,66,46)" fg:x="70533" fg:w="11"/><text x="91.8370%" y="1375.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (11 samples, 0.01%)</title><rect x="91.5870%" y="1349" width="0.0143%" height="15" fill="rgb(211,150,52)" fg:x="70533" fg:w="11"/><text x="91.8370%" y="1359.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (11 samples, 0.01%)</title><rect x="91.5870%" y="1333" width="0.0143%" height="15" fill="rgb(253,89,19)" fg:x="70533" fg:w="11"/><text x="91.8370%" y="1343.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (11 samples, 0.01%)</title><rect x="91.5870%" y="1317" width="0.0143%" height="15" fill="rgb(245,4,1)" fg:x="70533" fg:w="11"/><text x="91.8370%" y="1327.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (12 samples, 0.02%)</title><rect x="91.5870%" y="1717" width="0.0156%" height="15" fill="rgb(230,109,16)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1727.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (12 samples, 0.02%)</title><rect x="91.5870%" y="1701" width="0.0156%" height="15" fill="rgb(213,7,47)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1711.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (12 samples, 0.02%)</title><rect x="91.5870%" y="1685" width="0.0156%" height="15" fill="rgb(242,148,14)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1695.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (12 samples, 0.02%)</title><rect x="91.5870%" y="1669" width="0.0156%" height="15" fill="rgb(238,51,34)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1679.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.02%)</title><rect x="91.5870%" y="1653" width="0.0156%" height="15" fill="rgb(222,49,22)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="91.5870%" y="1637" width="0.0156%" height="15" fill="rgb(237,102,50)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1647.50"></text></g><g><title>std::panicking::try (12 samples, 0.02%)</title><rect x="91.5870%" y="1621" width="0.0156%" height="15" fill="rgb(237,195,8)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="91.5870%" y="1605" width="0.0156%" height="15" fill="rgb(245,60,18)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.02%)</title><rect x="91.5870%" y="1589" width="0.0156%" height="15" fill="rgb(253,74,32)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1599.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (12 samples, 0.02%)</title><rect x="91.5870%" y="1573" width="0.0156%" height="15" fill="rgb(240,91,39)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1583.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (12 samples, 0.02%)</title><rect x="91.5870%" y="1557" width="0.0156%" height="15" fill="rgb(221,162,34)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1567.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (12 samples, 0.02%)</title><rect x="91.5870%" y="1541" width="0.0156%" height="15" fill="rgb(223,32,2)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1551.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (12 samples, 0.02%)</title><rect x="91.5870%" y="1525" width="0.0156%" height="15" fill="rgb(245,220,46)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1535.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (12 samples, 0.02%)</title><rect x="91.5870%" y="1509" width="0.0156%" height="15" fill="rgb(216,38,33)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1519.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (12 samples, 0.02%)</title><rect x="91.5870%" y="1493" width="0.0156%" height="15" fill="rgb(210,123,14)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1503.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (12 samples, 0.02%)</title><rect x="91.5870%" y="1477" width="0.0156%" height="15" fill="rgb(214,38,47)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (12 samples, 0.02%)</title><rect x="91.5870%" y="1461" width="0.0156%" height="15" fill="rgb(244,180,16)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1471.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (12 samples, 0.02%)</title><rect x="91.5870%" y="1445" width="0.0156%" height="15" fill="rgb(252,21,32)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1455.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (12 samples, 0.02%)</title><rect x="91.5870%" y="1429" width="0.0156%" height="15" fill="rgb(245,218,31)" fg:x="70533" fg:w="12"/><text x="91.8370%" y="1439.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.02%)</title><rect x="91.5870%" y="2005" width="0.0195%" height="15" fill="rgb(247,81,18)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="2015.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.02%)</title><rect x="91.5870%" y="1989" width="0.0195%" height="15" fill="rgb(220,151,1)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1999.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.02%)</title><rect x="91.5870%" y="1973" width="0.0195%" height="15" fill="rgb(211,157,11)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1983.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 0.02%)</title><rect x="91.5870%" y="1957" width="0.0195%" height="15" fill="rgb(239,46,30)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1967.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (15 samples, 0.02%)</title><rect x="91.5870%" y="1941" width="0.0195%" height="15" fill="rgb(236,144,43)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.02%)</title><rect x="91.5870%" y="1925" width="0.0195%" height="15" fill="rgb(206,71,45)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1935.50"></text></g><g><title>std::panicking::try (15 samples, 0.02%)</title><rect x="91.5870%" y="1909" width="0.0195%" height="15" fill="rgb(240,85,31)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.02%)</title><rect x="91.5870%" y="1893" width="0.0195%" height="15" fill="rgb(221,43,52)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.02%)</title><rect x="91.5870%" y="1877" width="0.0195%" height="15" fill="rgb(243,106,22)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1887.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (15 samples, 0.02%)</title><rect x="91.5870%" y="1861" width="0.0195%" height="15" fill="rgb(209,138,38)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1871.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.02%)</title><rect x="91.5870%" y="1845" width="0.0195%" height="15" fill="rgb(216,63,40)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1855.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (15 samples, 0.02%)</title><rect x="91.5870%" y="1829" width="0.0195%" height="15" fill="rgb(206,115,21)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1839.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (15 samples, 0.02%)</title><rect x="91.5870%" y="1813" width="0.0195%" height="15" fill="rgb(235,53,44)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1823.50"></text></g><g><title>rayon_core::registry::main_loop (15 samples, 0.02%)</title><rect x="91.5870%" y="1797" width="0.0195%" height="15" fill="rgb(244,160,14)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1807.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (15 samples, 0.02%)</title><rect x="91.5870%" y="1781" width="0.0195%" height="15" fill="rgb(223,16,19)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.02%)</title><rect x="91.5870%" y="1765" width="0.0195%" height="15" fill="rgb(242,63,42)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (15 samples, 0.02%)</title><rect x="91.5870%" y="1749" width="0.0195%" height="15" fill="rgb(209,66,49)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1759.50"></text></g><g><title>rayon_core::job::JobRef::execute (15 samples, 0.02%)</title><rect x="91.5870%" y="1733" width="0.0195%" height="15" fill="rgb(207,126,46)" fg:x="70533" fg:w="15"/><text x="91.8370%" y="1743.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (13 samples, 0.02%)</title><rect x="91.6117%" y="1461" width="0.0169%" height="15" fill="rgb(218,160,41)" fg:x="70552" fg:w="13"/><text x="91.8617%" y="1471.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (12 samples, 0.02%)</title><rect x="91.6130%" y="1445" width="0.0156%" height="15" fill="rgb(234,125,46)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="91.6130%" y="1429" width="0.0156%" height="15" fill="rgb(205,66,36)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1439.50"></text></g><g><title>std::panicking::try (12 samples, 0.02%)</title><rect x="91.6130%" y="1413" width="0.0156%" height="15" fill="rgb(220,135,16)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="91.6130%" y="1397" width="0.0156%" height="15" fill="rgb(214,217,54)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1407.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (12 samples, 0.02%)</title><rect x="91.6130%" y="1381" width="0.0156%" height="15" fill="rgb(206,30,9)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1391.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (12 samples, 0.02%)</title><rect x="91.6130%" y="1365" width="0.0156%" height="15" fill="rgb(207,196,5)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1375.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (12 samples, 0.02%)</title><rect x="91.6130%" y="1349" width="0.0156%" height="15" fill="rgb(227,116,12)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1359.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (12 samples, 0.02%)</title><rect x="91.6130%" y="1333" width="0.0156%" height="15" fill="rgb(235,227,13)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1343.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (12 samples, 0.02%)</title><rect x="91.6130%" y="1317" width="0.0156%" height="15" fill="rgb(238,212,29)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1327.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (12 samples, 0.02%)</title><rect x="91.6130%" y="1301" width="0.0156%" height="15" fill="rgb(230,152,17)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1311.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (12 samples, 0.02%)</title><rect x="91.6130%" y="1285" width="0.0156%" height="15" fill="rgb(220,197,1)" fg:x="70553" fg:w="12"/><text x="91.8630%" y="1295.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (8 samples, 0.01%)</title><rect x="91.6182%" y="1269" width="0.0104%" height="15" fill="rgb(229,227,40)" fg:x="70557" fg:w="8"/><text x="91.8682%" y="1279.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (20 samples, 0.03%)</title><rect x="91.6065%" y="1541" width="0.0260%" height="15" fill="rgb(227,179,16)" fg:x="70548" fg:w="20"/><text x="91.8565%" y="1551.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (20 samples, 0.03%)</title><rect x="91.6065%" y="1525" width="0.0260%" height="15" fill="rgb(246,116,44)" fg:x="70548" fg:w="20"/><text x="91.8565%" y="1535.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (16 samples, 0.02%)</title><rect x="91.6117%" y="1509" width="0.0208%" height="15" fill="rgb(205,191,4)" fg:x="70552" fg:w="16"/><text x="91.8617%" y="1519.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (16 samples, 0.02%)</title><rect x="91.6117%" y="1493" width="0.0208%" height="15" fill="rgb(245,69,19)" fg:x="70552" fg:w="16"/><text x="91.8617%" y="1503.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (16 samples, 0.02%)</title><rect x="91.6117%" y="1477" width="0.0208%" height="15" fill="rgb(230,29,26)" fg:x="70552" fg:w="16"/><text x="91.8617%" y="1487.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (22 samples, 0.03%)</title><rect x="91.6065%" y="1573" width="0.0286%" height="15" fill="rgb(239,192,26)" fg:x="70548" fg:w="22"/><text x="91.8565%" y="1583.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (22 samples, 0.03%)</title><rect x="91.6065%" y="1557" width="0.0286%" height="15" fill="rgb(219,92,16)" fg:x="70548" fg:w="22"/><text x="91.8565%" y="1567.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.03%)</title><rect x="91.6065%" y="1877" width="0.0325%" height="15" fill="rgb(246,147,43)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1887.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}} (25 samples, 0.03%)</title><rect x="91.6065%" y="1861" width="0.0325%" height="15" fill="rgb(222,147,11)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1871.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (25 samples, 0.03%)</title><rect x="91.6065%" y="1845" width="0.0325%" height="15" fill="rgb(243,71,8)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1855.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (25 samples, 0.03%)</title><rect x="91.6065%" y="1829" width="0.0325%" height="15" fill="rgb(250,36,12)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1839.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.03%)</title><rect x="91.6065%" y="1813" width="0.0325%" height="15" fill="rgb(207,168,14)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1823.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="91.6065%" y="1797" width="0.0325%" height="15" fill="rgb(254,210,51)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1807.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="91.6065%" y="1781" width="0.0325%" height="15" fill="rgb(236,152,38)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1791.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="91.6065%" y="1765" width="0.0325%" height="15" fill="rgb(240,164,36)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1775.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="91.6065%" y="1749" width="0.0325%" height="15" fill="rgb(210,171,36)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1759.50"></text></g><g><title>rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (25 samples, 0.03%)</title><rect x="91.6065%" y="1733" width="0.0325%" height="15" fill="rgb(254,156,34)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1743.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel::{{closure}}::{{closure}} (25 samples, 0.03%)</title><rect x="91.6065%" y="1717" width="0.0325%" height="15" fill="rgb(216,204,23)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1727.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::work_task_with_scope (25 samples, 0.03%)</title><rect x="91.6065%" y="1701" width="0.0325%" height="15" fill="rgb(230,75,38)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1711.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (25 samples, 0.03%)</title><rect x="91.6065%" y="1685" width="0.0325%" height="15" fill="rgb(248,197,25)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1695.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (25 samples, 0.03%)</title><rect x="91.6065%" y="1669" width="0.0325%" height="15" fill="rgb(234,121,26)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1679.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (25 samples, 0.03%)</title><rect x="91.6065%" y="1653" width="0.0325%" height="15" fill="rgb(220,41,36)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1663.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (25 samples, 0.03%)</title><rect x="91.6065%" y="1637" width="0.0325%" height="15" fill="rgb(227,33,32)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1647.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (25 samples, 0.03%)</title><rect x="91.6065%" y="1621" width="0.0325%" height="15" fill="rgb(208,214,54)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1631.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (25 samples, 0.03%)</title><rect x="91.6065%" y="1605" width="0.0325%" height="15" fill="rgb(205,37,38)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1615.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (25 samples, 0.03%)</title><rect x="91.6065%" y="1589" width="0.0325%" height="15" fill="rgb(252,2,0)" fg:x="70548" fg:w="25"/><text x="91.8565%" y="1599.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 0.04%)</title><rect x="91.6065%" y="2005" width="0.0377%" height="15" fill="rgb(212,171,10)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="2015.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (29 samples, 0.04%)</title><rect x="91.6065%" y="1989" width="0.0377%" height="15" fill="rgb(239,35,46)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="1999.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (29 samples, 0.04%)</title><rect x="91.6065%" y="1973" width="0.0377%" height="15" fill="rgb(209,34,42)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="1983.50"></text></g><g><title>rayon_core::registry::main_loop (29 samples, 0.04%)</title><rect x="91.6065%" y="1957" width="0.0377%" height="15" fill="rgb(237,9,4)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (29 samples, 0.04%)</title><rect x="91.6065%" y="1941" width="0.0377%" height="15" fill="rgb(254,55,38)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (29 samples, 0.04%)</title><rect x="91.6065%" y="1925" width="0.0377%" height="15" fill="rgb(222,95,29)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="1935.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (29 samples, 0.04%)</title><rect x="91.6065%" y="1909" width="0.0377%" height="15" fill="rgb(241,218,37)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="1919.50"></text></g><g><title>rayon_core::job::JobRef::execute (29 samples, 0.04%)</title><rect x="91.6065%" y="1893" width="0.0377%" height="15" fill="rgb(225,89,28)" fg:x="70548" fg:w="29"/><text x="91.8565%" y="1903.50"></text></g><g><title>[unknown] (59,796 samples, 77.65%)</title><rect x="14.0082%" y="2021" width="77.6450%" height="15" fill="rgb(231,17,25)" fg:x="10788" fg:w="59796"/><text x="14.2582%" y="2031.50">[unknown]</text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.6545%" y="1525" width="0.0104%" height="15" fill="rgb(206,216,48)" fg:x="70585" fg:w="8"/><text x="91.9045%" y="1535.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.6545%" y="1509" width="0.0104%" height="15" fill="rgb(247,190,28)" fg:x="70585" fg:w="8"/><text x="91.9045%" y="1519.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.6545%" y="1493" width="0.0104%" height="15" fill="rgb(216,196,12)" fg:x="70585" fg:w="8"/><text x="91.9045%" y="1503.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="91.6545%" y="1477" width="0.0104%" height="15" fill="rgb(232,114,19)" fg:x="70585" fg:w="8"/><text x="91.9045%" y="1487.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="91.6545%" y="1749" width="0.0117%" height="15" fill="rgb(240,60,14)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1759.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.01%)</title><rect x="91.6545%" y="1733" width="0.0117%" height="15" fill="rgb(250,108,9)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1743.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="91.6545%" y="1717" width="0.0117%" height="15" fill="rgb(227,228,21)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1727.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (9 samples, 0.01%)</title><rect x="91.6545%" y="1701" width="0.0117%" height="15" fill="rgb(254,16,52)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.01%)</title><rect x="91.6545%" y="1685" width="0.0117%" height="15" fill="rgb(222,58,2)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="91.6545%" y="1669" width="0.0117%" height="15" fill="rgb(253,68,14)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="91.6545%" y="1653" width="0.0117%" height="15" fill="rgb(226,96,17)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="91.6545%" y="1637" width="0.0117%" height="15" fill="rgb(227,199,2)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="91.6545%" y="1621" width="0.0117%" height="15" fill="rgb(228,227,48)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="91.6545%" y="1605" width="0.0117%" height="15" fill="rgb(249,183,0)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1615.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="91.6545%" y="1589" width="0.0117%" height="15" fill="rgb(250,89,38)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="91.6545%" y="1573" width="0.0117%" height="15" fill="rgb(240,227,8)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1583.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.01%)</title><rect x="91.6545%" y="1557" width="0.0117%" height="15" fill="rgb(242,197,35)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1567.50"></text></g><g><title>core::iter::adapters::cloned::clone_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="91.6545%" y="1541" width="0.0117%" height="15" fill="rgb(224,37,41)" fg:x="70585" fg:w="9"/><text x="91.9045%" y="1551.50"></text></g><g><title>&lt;aptos_language_e2e_tests::account::Account as core::clone::Clone&gt;::clone (22 samples, 0.03%)</title><rect x="91.6662%" y="1685" width="0.0286%" height="15" fill="rgb(236,127,7)" fg:x="70594" fg:w="22"/><text x="91.9162%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="91.6662%" y="1749" width="0.0351%" height="15" fill="rgb(230,62,52)" fg:x="70594" fg:w="27"/><text x="91.9162%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.04%)</title><rect x="91.6662%" y="1733" width="0.0351%" height="15" fill="rgb(235,114,23)" fg:x="70594" fg:w="27"/><text x="91.9162%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.04%)</title><rect x="91.6662%" y="1717" width="0.0351%" height="15" fill="rgb(211,55,40)" fg:x="70594" fg:w="27"/><text x="91.9162%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.04%)</title><rect x="91.6662%" y="1701" width="0.0351%" height="15" fill="rgb(228,123,1)" fg:x="70594" fg:w="27"/><text x="91.9162%" y="1711.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="91.7273%" y="1733" width="0.0143%" height="15" fill="rgb(244,208,8)" fg:x="70641" fg:w="11"/><text x="91.9773%" y="1743.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="91.7286%" y="1717" width="0.0130%" height="15" fill="rgb(237,118,14)" fg:x="70642" fg:w="10"/><text x="91.9786%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (18 samples, 0.02%)</title><rect x="91.7493%" y="1637" width="0.0234%" height="15" fill="rgb(219,170,13)" fg:x="70658" fg:w="18"/><text x="91.9993%" y="1647.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (18 samples, 0.02%)</title><rect x="91.7493%" y="1621" width="0.0234%" height="15" fill="rgb(212,39,43)" fg:x="70658" fg:w="18"/><text x="91.9993%" y="1631.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="91.7493%" y="1605" width="0.0234%" height="15" fill="rgb(244,191,2)" fg:x="70658" fg:w="18"/><text x="91.9993%" y="1615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.02%)</title><rect x="91.7493%" y="1589" width="0.0234%" height="15" fill="rgb(219,201,46)" fg:x="70658" fg:w="18"/><text x="91.9993%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="91.7493%" y="1573" width="0.0234%" height="15" fill="rgb(218,82,7)" fg:x="70658" fg:w="18"/><text x="91.9993%" y="1583.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="91.7623%" y="1557" width="0.0104%" height="15" fill="rgb(208,192,8)" fg:x="70668" fg:w="8"/><text x="92.0123%" y="1567.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::set (29 samples, 0.04%)</title><rect x="91.7415%" y="1733" width="0.0377%" height="15" fill="rgb(244,54,32)" fg:x="70652" fg:w="29"/><text x="91.9915%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (29 samples, 0.04%)</title><rect x="91.7415%" y="1717" width="0.0377%" height="15" fill="rgb(240,43,52)" fg:x="70652" fg:w="29"/><text x="91.9915%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.04%)</title><rect x="91.7428%" y="1701" width="0.0364%" height="15" fill="rgb(233,134,29)" fg:x="70653" fg:w="28"/><text x="91.9928%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (23 samples, 0.03%)</title><rect x="91.7493%" y="1685" width="0.0299%" height="15" fill="rgb(236,128,10)" fg:x="70658" fg:w="23"/><text x="91.9993%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.03%)</title><rect x="91.7493%" y="1669" width="0.0299%" height="15" fill="rgb(207,46,54)" fg:x="70658" fg:w="23"/><text x="91.9993%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.03%)</title><rect x="91.7493%" y="1653" width="0.0299%" height="15" fill="rgb(248,140,35)" fg:x="70658" fg:w="23"/><text x="91.9993%" y="1663.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_write_set (57 samples, 0.07%)</title><rect x="91.7117%" y="1749" width="0.0740%" height="15" fill="rgb(241,103,35)" fg:x="70629" fg:w="57"/><text x="91.9617%" y="1759.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (17 samples, 0.02%)</title><rect x="91.8143%" y="1413" width="0.0221%" height="15" fill="rgb(223,19,48)" fg:x="70708" fg:w="17"/><text x="92.0643%" y="1423.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (46 samples, 0.06%)</title><rect x="91.8026%" y="1429" width="0.0597%" height="15" fill="rgb(238,177,46)" fg:x="70699" fg:w="46"/><text x="92.0526%" y="1439.50"></text></g><g><title>sha2::sha512::x86::sha_round (20 samples, 0.03%)</title><rect x="91.8363%" y="1413" width="0.0260%" height="15" fill="rgb(213,102,15)" fg:x="70725" fg:w="20"/><text x="92.0863%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.01%)</title><rect x="91.8519%" y="1397" width="0.0104%" height="15" fill="rgb(254,135,52)" fg:x="70737" fg:w="8"/><text x="92.1019%" y="1407.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (60 samples, 0.08%)</title><rect x="91.7974%" y="1573" width="0.0779%" height="15" fill="rgb(240,59,6)" fg:x="70695" fg:w="60"/><text x="92.0474%" y="1583.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (60 samples, 0.08%)</title><rect x="91.7974%" y="1557" width="0.0779%" height="15" fill="rgb(207,226,5)" fg:x="70695" fg:w="60"/><text x="92.0474%" y="1567.50"></text></g><g><title>sha2::sha512::Engine512::finish (60 samples, 0.08%)</title><rect x="91.7974%" y="1541" width="0.0779%" height="15" fill="rgb(208,167,17)" fg:x="70695" fg:w="60"/><text x="92.0474%" y="1551.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (60 samples, 0.08%)</title><rect x="91.7974%" y="1525" width="0.0779%" height="15" fill="rgb(254,94,10)" fg:x="70695" fg:w="60"/><text x="92.0474%" y="1535.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (59 samples, 0.08%)</title><rect x="91.7987%" y="1509" width="0.0766%" height="15" fill="rgb(229,33,11)" fg:x="70696" fg:w="59"/><text x="92.0487%" y="1519.50"></text></g><g><title>sha2::sha512::compress512 (59 samples, 0.08%)</title><rect x="91.7987%" y="1493" width="0.0766%" height="15" fill="rgb(249,145,48)" fg:x="70696" fg:w="59"/><text x="92.0487%" y="1503.50"></text></g><g><title>sha2::sha512::x86::compress (59 samples, 0.08%)</title><rect x="91.7987%" y="1477" width="0.0766%" height="15" fill="rgb(253,68,54)" fg:x="70696" fg:w="59"/><text x="92.0487%" y="1487.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (59 samples, 0.08%)</title><rect x="91.7987%" y="1461" width="0.0766%" height="15" fill="rgb(223,27,42)" fg:x="70696" fg:w="59"/><text x="92.0487%" y="1471.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (59 samples, 0.08%)</title><rect x="91.7987%" y="1445" width="0.0766%" height="15" fill="rgb(235,123,13)" fg:x="70696" fg:w="59"/><text x="92.0487%" y="1455.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (10 samples, 0.01%)</title><rect x="91.8623%" y="1429" width="0.0130%" height="15" fill="rgb(244,154,7)" fg:x="70745" fg:w="10"/><text x="92.1123%" y="1439.50"></text></g><g><title>sha2::sha512::x86::sha_round (10 samples, 0.01%)</title><rect x="91.8623%" y="1413" width="0.0130%" height="15" fill="rgb(214,30,25)" fg:x="70745" fg:w="10"/><text x="92.1123%" y="1423.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (61 samples, 0.08%)</title><rect x="91.7974%" y="1605" width="0.0792%" height="15" fill="rgb(252,189,13)" fg:x="70695" fg:w="61"/><text x="92.0474%" y="1615.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (61 samples, 0.08%)</title><rect x="91.7974%" y="1589" width="0.0792%" height="15" fill="rgb(234,27,40)" fg:x="70695" fg:w="61"/><text x="92.0474%" y="1599.50"></text></g><g><title>[libc.so.6] (75 samples, 0.10%)</title><rect x="91.9039%" y="1541" width="0.0974%" height="15" fill="rgb(252,199,25)" fg:x="70777" fg:w="75"/><text x="92.1539%" y="1551.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (51 samples, 0.07%)</title><rect x="92.0856%" y="1525" width="0.0662%" height="15" fill="rgb(234,207,20)" fg:x="70917" fg:w="51"/><text x="92.3356%" y="1535.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (37 samples, 0.05%)</title><rect x="92.1038%" y="1509" width="0.0480%" height="15" fill="rgb(244,220,10)" fg:x="70931" fg:w="37"/><text x="92.3538%" y="1519.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (680 samples, 0.88%)</title><rect x="92.1519%" y="1525" width="0.8830%" height="15" fill="rgb(247,68,23)" fg:x="70968" fg:w="680"/><text x="92.4019%" y="1535.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (94 samples, 0.12%)</title><rect x="92.9128%" y="1509" width="0.1221%" height="15" fill="rgb(254,61,4)" fg:x="71554" fg:w="94"/><text x="93.1628%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (966 samples, 1.25%)</title><rect x="92.0012%" y="1541" width="1.2543%" height="15" fill="rgb(245,208,35)" fg:x="70852" fg:w="966"/><text x="92.2512%" y="1551.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (170 samples, 0.22%)</title><rect x="93.0349%" y="1525" width="0.2207%" height="15" fill="rgb(235,90,11)" fg:x="71648" fg:w="170"/><text x="93.2849%" y="1535.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (62 samples, 0.08%)</title><rect x="93.1751%" y="1509" width="0.0805%" height="15" fill="rgb(239,139,43)" fg:x="71756" fg:w="62"/><text x="93.4251%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (996 samples, 1.29%)</title><rect x="93.2556%" y="1541" width="1.2933%" height="15" fill="rgb(209,187,9)" fg:x="71818" fg:w="996"/><text x="93.5056%" y="1551.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (986 samples, 1.28%)</title><rect x="93.2686%" y="1525" width="1.2803%" height="15" fill="rgb(241,30,6)" fg:x="71828" fg:w="986"/><text x="93.5186%" y="1535.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (166 samples, 0.22%)</title><rect x="94.3334%" y="1509" width="0.2156%" height="15" fill="rgb(216,104,1)" fg:x="72648" fg:w="166"/><text x="94.5834%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (14 samples, 0.02%)</title><rect x="94.5658%" y="1525" width="0.0182%" height="15" fill="rgb(238,55,39)" fg:x="72827" fg:w="14"/><text x="94.8158%" y="1535.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (14 samples, 0.02%)</title><rect x="94.5658%" y="1509" width="0.0182%" height="15" fill="rgb(226,151,41)" fg:x="72827" fg:w="14"/><text x="94.8158%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (29 samples, 0.04%)</title><rect x="94.5840%" y="1525" width="0.0377%" height="15" fill="rgb(228,73,40)" fg:x="72841" fg:w="29"/><text x="94.8340%" y="1535.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (29 samples, 0.04%)</title><rect x="94.5840%" y="1509" width="0.0377%" height="15" fill="rgb(215,81,0)" fg:x="72841" fg:w="29"/><text x="94.8340%" y="1519.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (8 samples, 0.01%)</title><rect x="94.6359%" y="1509" width="0.0104%" height="15" fill="rgb(209,52,39)" fg:x="72881" fg:w="8"/><text x="94.8859%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (16 samples, 0.02%)</title><rect x="94.6463%" y="1509" width="0.0208%" height="15" fill="rgb(221,127,5)" fg:x="72889" fg:w="16"/><text x="94.8963%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (14 samples, 0.02%)</title><rect x="94.6489%" y="1493" width="0.0182%" height="15" fill="rgb(213,215,6)" fg:x="72891" fg:w="14"/><text x="94.8989%" y="1503.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (69 samples, 0.09%)</title><rect x="94.6216%" y="1525" width="0.0896%" height="15" fill="rgb(214,118,13)" fg:x="72870" fg:w="69"/><text x="94.8716%" y="1535.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (34 samples, 0.04%)</title><rect x="94.6671%" y="1509" width="0.0441%" height="15" fill="rgb(207,205,41)" fg:x="72905" fg:w="34"/><text x="94.9171%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (34 samples, 0.04%)</title><rect x="94.6671%" y="1493" width="0.0441%" height="15" fill="rgb(218,208,45)" fg:x="72905" fg:w="34"/><text x="94.9171%" y="1503.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (126 samples, 0.16%)</title><rect x="94.5489%" y="1541" width="0.1636%" height="15" fill="rgb(244,81,54)" fg:x="72814" fg:w="126"/><text x="94.7989%" y="1551.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (21 samples, 0.03%)</title><rect x="94.7125%" y="1541" width="0.0273%" height="15" fill="rgb(244,175,1)" fg:x="72940" fg:w="21"/><text x="94.9625%" y="1551.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as core::ops::arith::Neg&gt;::neg (152 samples, 0.20%)</title><rect x="94.8164%" y="1509" width="0.1974%" height="15" fill="rgb(232,128,28)" fg:x="73020" fg:w="152"/><text x="95.0664%" y="1519.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (89 samples, 0.12%)</title><rect x="94.8982%" y="1493" width="0.1156%" height="15" fill="rgb(234,83,13)" fg:x="73083" fg:w="89"/><text x="95.1482%" y="1503.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (68 samples, 0.09%)</title><rect x="94.9255%" y="1477" width="0.0883%" height="15" fill="rgb(233,222,35)" fg:x="73104" fg:w="68"/><text x="95.1755%" y="1487.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (23 samples, 0.03%)</title><rect x="94.9839%" y="1461" width="0.0299%" height="15" fill="rgb(244,204,21)" fg:x="73149" fg:w="23"/><text x="95.2339%" y="1471.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (186 samples, 0.24%)</title><rect x="94.8164%" y="1525" width="0.2415%" height="15" fill="rgb(225,121,40)" fg:x="73020" fg:w="186"/><text x="95.0664%" y="1535.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (34 samples, 0.04%)</title><rect x="95.0138%" y="1509" width="0.0441%" height="15" fill="rgb(231,89,18)" fg:x="73172" fg:w="34"/><text x="95.2638%" y="1519.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (34 samples, 0.04%)</title><rect x="95.0138%" y="1493" width="0.0441%" height="15" fill="rgb(205,41,50)" fg:x="73172" fg:w="34"/><text x="95.2638%" y="1503.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (34 samples, 0.04%)</title><rect x="95.0138%" y="1477" width="0.0441%" height="15" fill="rgb(254,25,22)" fg:x="73172" fg:w="34"/><text x="95.2638%" y="1487.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as curve25519_dalek::traits::Identity&gt;::identity (15 samples, 0.02%)</title><rect x="95.0579%" y="1525" width="0.0195%" height="15" fill="rgb(208,44,21)" fg:x="73206" fg:w="15"/><text x="95.3079%" y="1535.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::one (9 samples, 0.01%)</title><rect x="95.0657%" y="1509" width="0.0117%" height="15" fill="rgb(237,59,53)" fg:x="73212" fg:w="9"/><text x="95.3157%" y="1519.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (484 samples, 0.63%)</title><rect x="95.0774%" y="1525" width="0.6285%" height="15" fill="rgb(233,24,36)" fg:x="73221" fg:w="484"/><text x="95.3274%" y="1535.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (440 samples, 0.57%)</title><rect x="95.1345%" y="1509" width="0.5713%" height="15" fill="rgb(216,92,41)" fg:x="73265" fg:w="440"/><text x="95.3845%" y="1519.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (440 samples, 0.57%)</title><rect x="95.1345%" y="1493" width="0.5713%" height="15" fill="rgb(225,158,49)" fg:x="73265" fg:w="440"/><text x="95.3845%" y="1503.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (3,022 samples, 3.92%)</title><rect x="91.8896%" y="1589" width="3.9241%" height="15" fill="rgb(244,11,16)" fg:x="70766" fg:w="3022"/><text x="92.1396%" y="1599.50">curv..</text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (3,022 samples, 3.92%)</title><rect x="91.8896%" y="1573" width="3.9241%" height="15" fill="rgb(208,215,38)" fg:x="70766" fg:w="3022"/><text x="92.1396%" y="1583.50">&lt;&amp;cu..</text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (3,022 samples, 3.92%)</title><rect x="91.8896%" y="1557" width="3.9241%" height="15" fill="rgb(250,69,53)" fg:x="70766" fg:w="3022"/><text x="92.1396%" y="1567.50">curv..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (827 samples, 1.07%)</title><rect x="94.7398%" y="1541" width="1.0739%" height="15" fill="rgb(240,187,52)" fg:x="72961" fg:w="827"/><text x="94.9898%" y="1551.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (78 samples, 0.10%)</title><rect x="95.7124%" y="1525" width="0.1013%" height="15" fill="rgb(235,22,25)" fg:x="73710" fg:w="78"/><text x="95.9624%" y="1535.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (78 samples, 0.10%)</title><rect x="95.7124%" y="1509" width="0.1013%" height="15" fill="rgb(213,173,22)" fg:x="73710" fg:w="78"/><text x="95.9624%" y="1519.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (78 samples, 0.10%)</title><rect x="95.7124%" y="1493" width="0.1013%" height="15" fill="rgb(218,47,0)" fg:x="73710" fg:w="78"/><text x="95.9624%" y="1503.50"></text></g><g><title>subtle::black_box (68 samples, 0.09%)</title><rect x="95.7253%" y="1477" width="0.0883%" height="15" fill="rgb(254,157,11)" fg:x="73720" fg:w="68"/><text x="95.9753%" y="1487.50"></text></g><g><title>core::ptr::read_volatile (12 samples, 0.02%)</title><rect x="95.7981%" y="1461" width="0.0156%" height="15" fill="rgb(233,154,6)" fg:x="73776" fg:w="12"/><text x="96.0481%" y="1471.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (16 samples, 0.02%)</title><rect x="95.8266%" y="1557" width="0.0208%" height="15" fill="rgb(233,207,47)" fg:x="73798" fg:w="16"/><text x="96.0766%" y="1567.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (39 samples, 0.05%)</title><rect x="95.8513%" y="1541" width="0.0506%" height="15" fill="rgb(249,128,18)" fg:x="73817" fg:w="39"/><text x="96.1013%" y="1551.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (806 samples, 1.05%)</title><rect x="95.9019%" y="1541" width="1.0466%" height="15" fill="rgb(211,27,42)" fg:x="73856" fg:w="806"/><text x="96.1519%" y="1551.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (88 samples, 0.11%)</title><rect x="96.8343%" y="1525" width="0.1143%" height="15" fill="rgb(240,163,26)" fg:x="74574" fg:w="88"/><text x="97.0843%" y="1535.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (885 samples, 1.15%)</title><rect x="95.8240%" y="1573" width="1.1492%" height="15" fill="rgb(232,118,46)" fg:x="73796" fg:w="885"/><text x="96.0740%" y="1583.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (867 samples, 1.13%)</title><rect x="95.8474%" y="1557" width="1.1258%" height="15" fill="rgb(238,158,34)" fg:x="73814" fg:w="867"/><text x="96.0974%" y="1567.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (19 samples, 0.02%)</title><rect x="96.9485%" y="1541" width="0.0247%" height="15" fill="rgb(254,99,45)" fg:x="74662" fg:w="19"/><text x="97.1985%" y="1551.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (18 samples, 0.02%)</title><rect x="96.9498%" y="1525" width="0.0234%" height="15" fill="rgb(247,205,20)" fg:x="74663" fg:w="18"/><text x="97.1998%" y="1535.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (894 samples, 1.16%)</title><rect x="95.8136%" y="1589" width="1.1609%" height="15" fill="rgb(240,20,41)" fg:x="73788" fg:w="894"/><text x="96.0636%" y="1599.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,990 samples, 5.18%)</title><rect x="91.7974%" y="1637" width="5.1810%" height="15" fill="rgb(231,22,43)" fg:x="70695" fg:w="3990"/><text x="92.0474%" y="1647.50">&lt;T as ..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (3,990 samples, 5.18%)</title><rect x="91.7974%" y="1621" width="5.1810%" height="15" fill="rgb(207,86,33)" fg:x="70695" fg:w="3990"/><text x="92.0474%" y="1631.50">&lt;ed255..</text></g><g><title>ed25519_dalek::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (3,921 samples, 5.09%)</title><rect x="91.8870%" y="1605" width="5.0914%" height="15" fill="rgb(231,148,5)" fg:x="70764" fg:w="3921"/><text x="92.1370%" y="1615.50">ed2551..</text></g><g><title>aptos_crypto::traits::PrivateKey::public_key (3,993 samples, 5.18%)</title><rect x="91.7974%" y="1685" width="5.1849%" height="15" fill="rgb(253,77,28)" fg:x="70695" fg:w="3993"/><text x="92.0474%" y="1695.50">aptos_..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,993 samples, 5.18%)</title><rect x="91.7974%" y="1669" width="5.1849%" height="15" fill="rgb(253,227,9)" fg:x="70695" fg:w="3993"/><text x="92.0474%" y="1679.50">&lt;T as ..</text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::convert::From&lt;&amp;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey&gt;&gt;::from (3,993 samples, 5.18%)</title><rect x="91.7974%" y="1653" width="5.1849%" height="15" fill="rgb(235,4,18)" fg:x="70695" fg:w="3993"/><text x="92.0474%" y="1663.50">&lt;aptos..</text></g><g><title>aptos_keygen::KeyGen::generate_ed25519_keypair (3,999 samples, 5.19%)</title><rect x="91.7948%" y="1701" width="5.1927%" height="15" fill="rgb(205,206,45)" fg:x="70693" fg:w="3999"/><text x="92.0448%" y="1711.50">aptos_..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (76 samples, 0.10%)</title><rect x="96.9992%" y="1557" width="0.0987%" height="15" fill="rgb(252,34,0)" fg:x="74701" fg:w="76"/><text x="97.2492%" y="1567.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (76 samples, 0.10%)</title><rect x="96.9992%" y="1541" width="0.0987%" height="15" fill="rgb(213,56,7)" fg:x="74701" fg:w="76"/><text x="97.2492%" y="1551.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (76 samples, 0.10%)</title><rect x="96.9992%" y="1525" width="0.0987%" height="15" fill="rgb(227,74,29)" fg:x="74701" fg:w="76"/><text x="97.2492%" y="1535.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (74 samples, 0.10%)</title><rect x="97.0018%" y="1509" width="0.0961%" height="15" fill="rgb(221,32,48)" fg:x="74703" fg:w="74"/><text x="97.2518%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="97.0823%" y="1493" width="0.0156%" height="15" fill="rgb(230,205,25)" fg:x="74765" fg:w="12"/><text x="97.3323%" y="1503.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (80 samples, 0.10%)</title><rect x="96.9953%" y="1605" width="0.1039%" height="15" fill="rgb(215,110,9)" fg:x="74698" fg:w="80"/><text x="97.2453%" y="1615.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (78 samples, 0.10%)</title><rect x="96.9979%" y="1589" width="0.1013%" height="15" fill="rgb(245,220,47)" fg:x="74700" fg:w="78"/><text x="97.2479%" y="1599.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (78 samples, 0.10%)</title><rect x="96.9979%" y="1573" width="0.1013%" height="15" fill="rgb(224,117,5)" fg:x="74700" fg:w="78"/><text x="97.2479%" y="1583.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (82 samples, 0.11%)</title><rect x="96.9953%" y="1621" width="0.1065%" height="15" fill="rgb(242,208,25)" fg:x="74698" fg:w="82"/><text x="97.2453%" y="1631.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (89 samples, 0.12%)</title><rect x="96.9888%" y="1653" width="0.1156%" height="15" fill="rgb(226,12,37)" fg:x="74693" fg:w="89"/><text x="97.2388%" y="1663.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (86 samples, 0.11%)</title><rect x="96.9927%" y="1637" width="0.1117%" height="15" fill="rgb(224,221,22)" fg:x="74696" fg:w="86"/><text x="97.2427%" y="1647.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::ed25519 (13 samples, 0.02%)</title><rect x="97.1043%" y="1653" width="0.0169%" height="15" fill="rgb(239,38,44)" fg:x="74782" fg:w="13"/><text x="97.3543%" y="1663.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (11 samples, 0.01%)</title><rect x="97.1069%" y="1637" width="0.0143%" height="15" fill="rgb(218,25,46)" fg:x="74784" fg:w="11"/><text x="97.3569%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="97.1069%" y="1621" width="0.0143%" height="15" fill="rgb(206,137,51)" fg:x="74784" fg:w="11"/><text x="97.3569%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.01%)</title><rect x="97.1069%" y="1605" width="0.0143%" height="15" fill="rgb(233,174,3)" fg:x="74784" fg:w="11"/><text x="97.3569%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="97.1069%" y="1589" width="0.0143%" height="15" fill="rgb(207,224,43)" fg:x="74784" fg:w="11"/><text x="97.3569%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="97.1095%" y="1573" width="0.0117%" height="15" fill="rgb(230,46,27)" fg:x="74786" fg:w="9"/><text x="97.3595%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="97.1108%" y="1557" width="0.0104%" height="15" fill="rgb(251,215,32)" fg:x="74787" fg:w="8"/><text x="97.3608%" y="1567.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="97.1108%" y="1541" width="0.0104%" height="15" fill="rgb(244,219,19)" fg:x="74787" fg:w="8"/><text x="97.3608%" y="1551.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="97.1108%" y="1525" width="0.0104%" height="15" fill="rgb(242,125,36)" fg:x="74787" fg:w="8"/><text x="97.3608%" y="1535.50"></text></g><g><title>realloc (8 samples, 0.01%)</title><rect x="97.1108%" y="1509" width="0.0104%" height="15" fill="rgb(251,211,12)" fg:x="74787" fg:w="8"/><text x="97.3608%" y="1519.50"></text></g><g><title>aptos_language_e2e_tests::account::Account::new_from_seed (4,107 samples, 5.33%)</title><rect x="91.7922%" y="1717" width="5.3329%" height="15" fill="rgb(209,179,33)" fg:x="70691" fg:w="4107"/><text x="92.0422%" y="1727.50">aptos_l..</text></g><g><title>aptos_language_e2e_tests::account::Account::with_keypair (106 samples, 0.14%)</title><rect x="96.9875%" y="1701" width="0.1376%" height="15" fill="rgb(205,161,48)" fg:x="74692" fg:w="106"/><text x="97.2375%" y="1711.50"></text></g><g><title>aptos_types::account_address::from_public_key (106 samples, 0.14%)</title><rect x="96.9875%" y="1685" width="0.1376%" height="15" fill="rgb(241,139,8)" fg:x="74692" fg:w="106"/><text x="97.2375%" y="1695.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::ed25519 (106 samples, 0.14%)</title><rect x="96.9875%" y="1669" width="0.1376%" height="15" fill="rgb(246,159,53)" fg:x="74692" fg:w="106"/><text x="97.2375%" y="1679.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::new_from_seed (4,122 samples, 5.35%)</title><rect x="91.7922%" y="1733" width="5.3524%" height="15" fill="rgb(212,62,27)" fg:x="70691" fg:w="4122"/><text x="92.0422%" y="1743.50">aptos_l..</text></g><g><title>aptos_language_e2e_tests::account::AccountData::with_account (15 samples, 0.02%)</title><rect x="97.1251%" y="1717" width="0.0195%" height="15" fill="rgb(216,168,18)" fg:x="74798" fg:w="15"/><text x="97.3751%" y="1727.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::with_account_and_event_counts (10 samples, 0.01%)</title><rect x="97.1316%" y="1701" width="0.0130%" height="15" fill="rgb(228,136,50)" fg:x="74803" fg:w="10"/><text x="97.3816%" y="1711.50"></text></g><g><title>aptos_language_e2e_tests::account::new_event_handle (8 samples, 0.01%)</title><rect x="97.1342%" y="1685" width="0.0104%" height="15" fill="rgb(237,19,45)" fg:x="74805" fg:w="8"/><text x="97.3842%" y="1695.50"></text></g><g><title>aptos_types::event::EventHandle::new (8 samples, 0.01%)</title><rect x="97.1342%" y="1669" width="0.0104%" height="15" fill="rgb(249,150,28)" fg:x="74805" fg:w="8"/><text x="97.3842%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="97.1667%" y="1317" width="0.0195%" height="15" fill="rgb(236,179,39)" fg:x="74830" fg:w="15"/><text x="97.4167%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.02%)</title><rect x="97.1680%" y="1301" width="0.0182%" height="15" fill="rgb(250,113,27)" fg:x="74831" fg:w="14"/><text x="97.4180%" y="1311.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.02%)</title><rect x="97.1680%" y="1285" width="0.0182%" height="15" fill="rgb(223,13,14)" fg:x="74831" fg:w="14"/><text x="97.4180%" y="1295.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.02%)</title><rect x="97.1680%" y="1269" width="0.0182%" height="15" fill="rgb(226,68,24)" fg:x="74831" fg:w="14"/><text x="97.4180%" y="1279.50"></text></g><g><title>realloc (12 samples, 0.02%)</title><rect x="97.1706%" y="1253" width="0.0156%" height="15" fill="rgb(239,40,50)" fg:x="74833" fg:w="12"/><text x="97.4206%" y="1263.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="97.1732%" y="1237" width="0.0130%" height="15" fill="rgb(209,187,0)" fg:x="74835" fg:w="10"/><text x="97.4232%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="97.1641%" y="1381" width="0.0247%" height="15" fill="rgb(240,61,8)" fg:x="74828" fg:w="19"/><text x="97.4141%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="97.1641%" y="1365" width="0.0247%" height="15" fill="rgb(236,137,5)" fg:x="74828" fg:w="19"/><text x="97.4141%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="97.1654%" y="1349" width="0.0234%" height="15" fill="rgb(247,214,21)" fg:x="74829" fg:w="18"/><text x="97.4154%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="97.1654%" y="1333" width="0.0234%" height="15" fill="rgb(244,115,25)" fg:x="74829" fg:w="18"/><text x="97.4154%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (26 samples, 0.03%)</title><rect x="97.1576%" y="1493" width="0.0338%" height="15" fill="rgb(230,58,38)" fg:x="74823" fg:w="26"/><text x="97.4076%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (26 samples, 0.03%)</title><rect x="97.1576%" y="1477" width="0.0338%" height="15" fill="rgb(206,122,6)" fg:x="74823" fg:w="26"/><text x="97.4076%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (26 samples, 0.03%)</title><rect x="97.1576%" y="1461" width="0.0338%" height="15" fill="rgb(217,135,53)" fg:x="74823" fg:w="26"/><text x="97.4076%" y="1471.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (26 samples, 0.03%)</title><rect x="97.1576%" y="1445" width="0.0338%" height="15" fill="rgb(225,120,8)" fg:x="74823" fg:w="26"/><text x="97.4076%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.03%)</title><rect x="97.1576%" y="1429" width="0.0338%" height="15" fill="rgb(226,3,30)" fg:x="74823" fg:w="26"/><text x="97.4076%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.03%)</title><rect x="97.1576%" y="1413" width="0.0338%" height="15" fill="rgb(214,159,38)" fg:x="74823" fg:w="26"/><text x="97.4076%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.03%)</title><rect x="97.1576%" y="1397" width="0.0338%" height="15" fill="rgb(242,182,47)" fg:x="74823" fg:w="26"/><text x="97.4076%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (28 samples, 0.04%)</title><rect x="97.1576%" y="1541" width="0.0364%" height="15" fill="rgb(245,202,26)" fg:x="74823" fg:w="28"/><text x="97.4076%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 0.04%)</title><rect x="97.1576%" y="1525" width="0.0364%" height="15" fill="rgb(226,163,3)" fg:x="74823" fg:w="28"/><text x="97.4076%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (28 samples, 0.04%)</title><rect x="97.1576%" y="1509" width="0.0364%" height="15" fill="rgb(219,4,4)" fg:x="74823" fg:w="28"/><text x="97.4076%" y="1519.50"></text></g><g><title>bcs::ser::to_bytes (34 samples, 0.04%)</title><rect x="97.1537%" y="1621" width="0.0441%" height="15" fill="rgb(223,85,4)" fg:x="74820" fg:w="34"/><text x="97.4037%" y="1631.50"></text></g><g><title>bcs::ser::serialize_into (33 samples, 0.04%)</title><rect x="97.1550%" y="1605" width="0.0429%" height="15" fill="rgb(242,170,11)" fg:x="74821" fg:w="33"/><text x="97.4050%" y="1615.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (33 samples, 0.04%)</title><rect x="97.1550%" y="1589" width="0.0429%" height="15" fill="rgb(221,97,42)" fg:x="74821" fg:w="33"/><text x="97.4050%" y="1599.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (32 samples, 0.04%)</title><rect x="97.1563%" y="1573" width="0.0416%" height="15" fill="rgb(231,206,45)" fg:x="74822" fg:w="32"/><text x="97.4063%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 0.04%)</title><rect x="97.1576%" y="1557" width="0.0403%" height="15" fill="rgb(216,23,48)" fg:x="74823" fg:w="31"/><text x="97.4076%" y="1567.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (37 samples, 0.05%)</title><rect x="97.1524%" y="1653" width="0.0480%" height="15" fill="rgb(225,49,9)" fg:x="74819" fg:w="37"/><text x="97.4024%" y="1663.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (36 samples, 0.05%)</title><rect x="97.1537%" y="1637" width="0.0467%" height="15" fill="rgb(247,24,47)" fg:x="74820" fg:w="36"/><text x="97.4037%" y="1647.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::make_account_access_path (38 samples, 0.05%)</title><rect x="97.1524%" y="1685" width="0.0493%" height="15" fill="rgb(253,145,10)" fg:x="74819" fg:w="38"/><text x="97.4024%" y="1695.50"></text></g><g><title>aptos_language_e2e_tests::account::Account::make_account_access_path (38 samples, 0.05%)</title><rect x="97.1524%" y="1669" width="0.0493%" height="15" fill="rgb(206,62,10)" fg:x="74819" fg:w="38"/><text x="97.4024%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="97.2225%" y="1317" width="0.0130%" height="15" fill="rgb(224,159,31)" fg:x="74873" fg:w="10"/><text x="97.4725%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="97.2238%" y="1301" width="0.0117%" height="15" fill="rgb(234,184,15)" fg:x="74874" fg:w="9"/><text x="97.4738%" y="1311.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="97.2238%" y="1285" width="0.0117%" height="15" fill="rgb(237,101,1)" fg:x="74874" fg:w="9"/><text x="97.4738%" y="1295.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="97.2238%" y="1269" width="0.0117%" height="15" fill="rgb(211,99,29)" fg:x="74874" fg:w="9"/><text x="97.4738%" y="1279.50"></text></g><g><title>realloc (8 samples, 0.01%)</title><rect x="97.2251%" y="1253" width="0.0104%" height="15" fill="rgb(250,167,3)" fg:x="74875" fg:w="8"/><text x="97.4751%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="97.2147%" y="1381" width="0.0234%" height="15" fill="rgb(225,58,6)" fg:x="74867" fg:w="18"/><text x="97.4647%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="97.2147%" y="1365" width="0.0234%" height="15" fill="rgb(251,161,21)" fg:x="74867" fg:w="18"/><text x="97.4647%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.02%)</title><rect x="97.2199%" y="1349" width="0.0182%" height="15" fill="rgb(253,203,35)" fg:x="74871" fg:w="14"/><text x="97.4699%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="97.2212%" y="1333" width="0.0169%" height="15" fill="rgb(214,220,52)" fg:x="74872" fg:w="13"/><text x="97.4712%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (23 samples, 0.03%)</title><rect x="97.2095%" y="1493" width="0.0299%" height="15" fill="rgb(235,216,33)" fg:x="74863" fg:w="23"/><text x="97.4595%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (23 samples, 0.03%)</title><rect x="97.2095%" y="1477" width="0.0299%" height="15" fill="rgb(231,79,26)" fg:x="74863" fg:w="23"/><text x="97.4595%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (23 samples, 0.03%)</title><rect x="97.2095%" y="1461" width="0.0299%" height="15" fill="rgb(244,218,10)" fg:x="74863" fg:w="23"/><text x="97.4595%" y="1471.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.03%)</title><rect x="97.2095%" y="1445" width="0.0299%" height="15" fill="rgb(238,15,9)" fg:x="74863" fg:w="23"/><text x="97.4595%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.03%)</title><rect x="97.2095%" y="1429" width="0.0299%" height="15" fill="rgb(235,112,15)" fg:x="74863" fg:w="23"/><text x="97.4595%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.03%)</title><rect x="97.2095%" y="1413" width="0.0299%" height="15" fill="rgb(239,126,18)" fg:x="74863" fg:w="23"/><text x="97.4595%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.03%)</title><rect x="97.2095%" y="1397" width="0.0299%" height="15" fill="rgb(253,171,19)" fg:x="74863" fg:w="23"/><text x="97.4595%" y="1407.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (24 samples, 0.03%)</title><rect x="97.2095%" y="1541" width="0.0312%" height="15" fill="rgb(237,218,25)" fg:x="74863" fg:w="24"/><text x="97.4595%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (24 samples, 0.03%)</title><rect x="97.2095%" y="1525" width="0.0312%" height="15" fill="rgb(213,88,46)" fg:x="74863" fg:w="24"/><text x="97.4595%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (24 samples, 0.03%)</title><rect x="97.2095%" y="1509" width="0.0312%" height="15" fill="rgb(222,124,54)" fg:x="74863" fg:w="24"/><text x="97.4595%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="97.2563%" y="1141" width="0.0117%" height="15" fill="rgb(209,206,42)" fg:x="74899" fg:w="9"/><text x="97.5063%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="97.2563%" y="1125" width="0.0117%" height="15" fill="rgb(219,25,49)" fg:x="74899" fg:w="9"/><text x="97.5063%" y="1135.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (12 samples, 0.02%)</title><rect x="97.2537%" y="1253" width="0.0156%" height="15" fill="rgb(228,207,53)" fg:x="74897" fg:w="12"/><text x="97.5037%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (12 samples, 0.02%)</title><rect x="97.2537%" y="1237" width="0.0156%" height="15" fill="rgb(224,3,4)" fg:x="74897" fg:w="12"/><text x="97.5037%" y="1247.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (12 samples, 0.02%)</title><rect x="97.2537%" y="1221" width="0.0156%" height="15" fill="rgb(254,206,26)" fg:x="74897" fg:w="12"/><text x="97.5037%" y="1231.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="97.2537%" y="1205" width="0.0156%" height="15" fill="rgb(209,4,26)" fg:x="74897" fg:w="12"/><text x="97.5037%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="97.2537%" y="1189" width="0.0156%" height="15" fill="rgb(243,193,32)" fg:x="74897" fg:w="12"/><text x="97.5037%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="97.2537%" y="1173" width="0.0156%" height="15" fill="rgb(225,150,36)" fg:x="74897" fg:w="12"/><text x="97.5037%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="97.2537%" y="1157" width="0.0156%" height="15" fill="rgb(225,131,26)" fg:x="74897" fg:w="12"/><text x="97.5037%" y="1167.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.02%)</title><rect x="97.2537%" y="1301" width="0.0169%" height="15" fill="rgb(236,126,12)" fg:x="74897" fg:w="13"/><text x="97.5037%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.02%)</title><rect x="97.2537%" y="1285" width="0.0169%" height="15" fill="rgb(238,167,44)" fg:x="74897" fg:w="13"/><text x="97.5037%" y="1295.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (13 samples, 0.02%)</title><rect x="97.2537%" y="1269" width="0.0169%" height="15" fill="rgb(238,153,31)" fg:x="74897" fg:w="13"/><text x="97.5037%" y="1279.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (22 samples, 0.03%)</title><rect x="97.2511%" y="1349" width="0.0286%" height="15" fill="rgb(254,41,51)" fg:x="74895" fg:w="22"/><text x="97.5011%" y="1359.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (22 samples, 0.03%)</title><rect x="97.2511%" y="1333" width="0.0286%" height="15" fill="rgb(224,100,52)" fg:x="74895" fg:w="22"/><text x="97.5011%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 0.03%)</title><rect x="97.2537%" y="1317" width="0.0260%" height="15" fill="rgb(246,226,38)" fg:x="74897" fg:w="20"/><text x="97.5037%" y="1327.50"></text></g><g><title>bcs::ser::to_bytes (57 samples, 0.07%)</title><rect x="97.2069%" y="1621" width="0.0740%" height="15" fill="rgb(252,21,43)" fg:x="74861" fg:w="57"/><text x="97.4569%" y="1631.50"></text></g><g><title>bcs::ser::serialize_into (57 samples, 0.07%)</title><rect x="97.2069%" y="1605" width="0.0740%" height="15" fill="rgb(250,44,8)" fg:x="74861" fg:w="57"/><text x="97.4569%" y="1615.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (57 samples, 0.07%)</title><rect x="97.2069%" y="1589" width="0.0740%" height="15" fill="rgb(224,200,45)" fg:x="74861" fg:w="57"/><text x="97.4569%" y="1599.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (56 samples, 0.07%)</title><rect x="97.2082%" y="1573" width="0.0727%" height="15" fill="rgb(208,75,52)" fg:x="74862" fg:w="56"/><text x="97.4582%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (55 samples, 0.07%)</title><rect x="97.2095%" y="1557" width="0.0714%" height="15" fill="rgb(213,167,20)" fg:x="74863" fg:w="55"/><text x="97.4595%" y="1567.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (29 samples, 0.04%)</title><rect x="97.2433%" y="1541" width="0.0377%" height="15" fill="rgb(236,163,42)" fg:x="74889" fg:w="29"/><text x="97.4933%" y="1551.50"></text></g><g><title>serde::ser::Serializer::collect_seq (29 samples, 0.04%)</title><rect x="97.2433%" y="1525" width="0.0377%" height="15" fill="rgb(210,98,31)" fg:x="74889" fg:w="29"/><text x="97.4933%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (28 samples, 0.04%)</title><rect x="97.2446%" y="1509" width="0.0364%" height="15" fill="rgb(246,166,15)" fg:x="74890" fg:w="28"/><text x="97.4946%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (28 samples, 0.04%)</title><rect x="97.2446%" y="1493" width="0.0364%" height="15" fill="rgb(214,114,7)" fg:x="74890" fg:w="28"/><text x="97.4946%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (28 samples, 0.04%)</title><rect x="97.2446%" y="1477" width="0.0364%" height="15" fill="rgb(217,202,34)" fg:x="74890" fg:w="28"/><text x="97.4946%" y="1487.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (28 samples, 0.04%)</title><rect x="97.2446%" y="1461" width="0.0364%" height="15" fill="rgb(227,226,29)" fg:x="74890" fg:w="28"/><text x="97.4946%" y="1471.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (28 samples, 0.04%)</title><rect x="97.2446%" y="1445" width="0.0364%" height="15" fill="rgb(254,65,44)" fg:x="74890" fg:w="28"/><text x="97.4946%" y="1455.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (28 samples, 0.04%)</title><rect x="97.2446%" y="1429" width="0.0364%" height="15" fill="rgb(213,150,32)" fg:x="74890" fg:w="28"/><text x="97.4946%" y="1439.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (28 samples, 0.04%)</title><rect x="97.2446%" y="1413" width="0.0364%" height="15" fill="rgb(208,86,46)" fg:x="74890" fg:w="28"/><text x="97.4946%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (23 samples, 0.03%)</title><rect x="97.2511%" y="1397" width="0.0299%" height="15" fill="rgb(222,75,3)" fg:x="74895" fg:w="23"/><text x="97.5011%" y="1407.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (23 samples, 0.03%)</title><rect x="97.2511%" y="1381" width="0.0299%" height="15" fill="rgb(225,213,9)" fg:x="74895" fg:w="23"/><text x="97.5011%" y="1391.50"></text></g><g><title>move_core_types::safe_serialize::type_tag_recursive_serialize (23 samples, 0.03%)</title><rect x="97.2511%" y="1365" width="0.0299%" height="15" fill="rgb(209,199,10)" fg:x="74895" fg:w="23"/><text x="97.5011%" y="1375.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (65 samples, 0.08%)</title><rect x="97.2017%" y="1653" width="0.0844%" height="15" fill="rgb(213,18,17)" fg:x="74857" fg:w="65"/><text x="97.4517%" y="1663.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (63 samples, 0.08%)</title><rect x="97.2043%" y="1637" width="0.0818%" height="15" fill="rgb(243,79,44)" fg:x="74859" fg:w="63"/><text x="97.4543%" y="1647.50"></text></g><g><title>&lt;aptos_types::account_config::resources::coin_store::CoinStoreResource as move_core_types::move_resource::MoveStructType&gt;::type_params (8 samples, 0.01%)</title><rect x="97.2887%" y="1637" width="0.0104%" height="15" fill="rgb(226,20,5)" fg:x="74924" fg:w="8"/><text x="97.5387%" y="1647.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::make_coin_store_access_path (77 samples, 0.10%)</title><rect x="97.2017%" y="1685" width="0.1000%" height="15" fill="rgb(217,52,31)" fg:x="74857" fg:w="77"/><text x="97.4517%" y="1695.50"></text></g><g><title>aptos_language_e2e_tests::account::Account::make_coin_store_access_path (77 samples, 0.10%)</title><rect x="97.2017%" y="1669" width="0.1000%" height="15" fill="rgb(229,42,7)" fg:x="74857" fg:w="77"/><text x="97.4517%" y="1679.50"></text></g><g><title>move_core_types::move_resource::MoveStructType::struct_tag (12 samples, 0.02%)</title><rect x="97.2861%" y="1653" width="0.0156%" height="15" fill="rgb(206,118,29)" fg:x="74922" fg:w="12"/><text x="97.5361%" y="1663.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (98 samples, 0.13%)</title><rect x="97.3069%" y="1557" width="0.1273%" height="15" fill="rgb(248,132,44)" fg:x="74938" fg:w="98"/><text x="97.5569%" y="1567.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (98 samples, 0.13%)</title><rect x="97.3069%" y="1541" width="0.1273%" height="15" fill="rgb(231,56,33)" fg:x="74938" fg:w="98"/><text x="97.5569%" y="1551.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (98 samples, 0.13%)</title><rect x="97.3069%" y="1525" width="0.1273%" height="15" fill="rgb(208,31,11)" fg:x="74938" fg:w="98"/><text x="97.5569%" y="1535.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (96 samples, 0.12%)</title><rect x="97.3095%" y="1509" width="0.1247%" height="15" fill="rgb(216,56,33)" fg:x="74940" fg:w="96"/><text x="97.5595%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.02%)</title><rect x="97.4160%" y="1493" width="0.0182%" height="15" fill="rgb(213,100,0)" fg:x="75022" fg:w="14"/><text x="97.6660%" y="1503.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (101 samples, 0.13%)</title><rect x="97.3043%" y="1605" width="0.1311%" height="15" fill="rgb(236,166,18)" fg:x="74936" fg:w="101"/><text x="97.5543%" y="1615.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (101 samples, 0.13%)</title><rect x="97.3043%" y="1589" width="0.1311%" height="15" fill="rgb(251,132,12)" fg:x="74936" fg:w="101"/><text x="97.5543%" y="1599.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (101 samples, 0.13%)</title><rect x="97.3043%" y="1573" width="0.1311%" height="15" fill="rgb(216,117,7)" fg:x="74936" fg:w="101"/><text x="97.5543%" y="1583.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (105 samples, 0.14%)</title><rect x="97.3017%" y="1653" width="0.1363%" height="15" fill="rgb(243,184,8)" fg:x="74934" fg:w="105"/><text x="97.5517%" y="1663.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (103 samples, 0.13%)</title><rect x="97.3043%" y="1637" width="0.1337%" height="15" fill="rgb(212,91,32)" fg:x="74936" fg:w="103"/><text x="97.5543%" y="1647.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (103 samples, 0.13%)</title><rect x="97.3043%" y="1621" width="0.1337%" height="15" fill="rgb(224,147,15)" fg:x="74936" fg:w="103"/><text x="97.5543%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.02%)</title><rect x="97.4433%" y="1557" width="0.0195%" height="15" fill="rgb(228,84,10)" fg:x="75043" fg:w="15"/><text x="97.6933%" y="1567.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.02%)</title><rect x="97.4433%" y="1541" width="0.0195%" height="15" fill="rgb(221,161,22)" fg:x="75043" fg:w="15"/><text x="97.6933%" y="1551.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.02%)</title><rect x="97.4433%" y="1525" width="0.0195%" height="15" fill="rgb(250,132,20)" fg:x="75043" fg:w="15"/><text x="97.6933%" y="1535.50"></text></g><g><title>realloc (15 samples, 0.02%)</title><rect x="97.4433%" y="1509" width="0.0195%" height="15" fill="rgb(209,161,12)" fg:x="75043" fg:w="15"/><text x="97.6933%" y="1519.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="97.4459%" y="1493" width="0.0169%" height="15" fill="rgb(232,142,42)" fg:x="75045" fg:w="13"/><text x="97.6959%" y="1503.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="97.4459%" y="1477" width="0.0169%" height="15" fill="rgb(240,228,27)" fg:x="75045" fg:w="13"/><text x="97.6959%" y="1487.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="97.4420%" y="1573" width="0.0221%" height="15" fill="rgb(243,0,31)" fg:x="75042" fg:w="17"/><text x="97.6920%" y="1583.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::ed25519 (21 samples, 0.03%)</title><rect x="97.4381%" y="1653" width="0.0273%" height="15" fill="rgb(237,100,15)" fg:x="75039" fg:w="21"/><text x="97.6881%" y="1663.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKeyPreimage::new (20 samples, 0.03%)</title><rect x="97.4394%" y="1637" width="0.0260%" height="15" fill="rgb(230,26,48)" fg:x="75040" fg:w="20"/><text x="97.6894%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.02%)</title><rect x="97.4420%" y="1621" width="0.0234%" height="15" fill="rgb(215,7,13)" fg:x="75042" fg:w="18"/><text x="97.6920%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.02%)</title><rect x="97.4420%" y="1605" width="0.0234%" height="15" fill="rgb(227,172,5)" fg:x="75042" fg:w="18"/><text x="97.6920%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="97.4420%" y="1589" width="0.0234%" height="15" fill="rgb(248,206,14)" fg:x="75042" fg:w="18"/><text x="97.6920%" y="1599.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::ed25519 (128 samples, 0.17%)</title><rect x="97.3017%" y="1669" width="0.1662%" height="15" fill="rgb(231,62,54)" fg:x="74934" fg:w="128"/><text x="97.5517%" y="1679.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (16 samples, 0.02%)</title><rect x="97.4757%" y="1541" width="0.0208%" height="15" fill="rgb(222,136,26)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 0.02%)</title><rect x="97.4757%" y="1525" width="0.0208%" height="15" fill="rgb(211,115,42)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (16 samples, 0.02%)</title><rect x="97.4757%" y="1509" width="0.0208%" height="15" fill="rgb(234,5,17)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (16 samples, 0.02%)</title><rect x="97.4757%" y="1493" width="0.0208%" height="15" fill="rgb(233,67,14)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (16 samples, 0.02%)</title><rect x="97.4757%" y="1477" width="0.0208%" height="15" fill="rgb(225,133,51)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (16 samples, 0.02%)</title><rect x="97.4757%" y="1461" width="0.0208%" height="15" fill="rgb(206,107,40)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1471.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.02%)</title><rect x="97.4757%" y="1445" width="0.0208%" height="15" fill="rgb(210,56,9)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.02%)</title><rect x="97.4757%" y="1429" width="0.0208%" height="15" fill="rgb(222,204,4)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="97.4757%" y="1413" width="0.0208%" height="15" fill="rgb(210,168,3)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.02%)</title><rect x="97.4757%" y="1397" width="0.0208%" height="15" fill="rgb(246,183,26)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="97.4757%" y="1381" width="0.0208%" height="15" fill="rgb(228,27,31)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="97.4757%" y="1365" width="0.0208%" height="15" fill="rgb(206,8,2)" fg:x="75068" fg:w="16"/><text x="97.7257%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="97.4848%" y="1349" width="0.0117%" height="15" fill="rgb(251,229,16)" fg:x="75075" fg:w="9"/><text x="97.7348%" y="1359.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventHandle&gt;::serialize (21 samples, 0.03%)</title><rect x="97.4731%" y="1605" width="0.0273%" height="15" fill="rgb(208,84,44)" fg:x="75066" fg:w="21"/><text x="97.7231%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 0.03%)</title><rect x="97.4731%" y="1589" width="0.0273%" height="15" fill="rgb(221,228,13)" fg:x="75066" fg:w="21"/><text x="97.7231%" y="1599.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (21 samples, 0.03%)</title><rect x="97.4731%" y="1573" width="0.0273%" height="15" fill="rgb(248,42,47)" fg:x="75066" fg:w="21"/><text x="97.7231%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 0.02%)</title><rect x="97.4757%" y="1557" width="0.0247%" height="15" fill="rgb(222,124,41)" fg:x="75068" fg:w="19"/><text x="97.7257%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="97.5043%" y="1381" width="0.0234%" height="15" fill="rgb(244,191,35)" fg:x="75090" fg:w="18"/><text x="97.7543%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="97.5043%" y="1365" width="0.0234%" height="15" fill="rgb(222,223,54)" fg:x="75090" fg:w="18"/><text x="97.7543%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.02%)</title><rect x="97.5082%" y="1349" width="0.0195%" height="15" fill="rgb(248,178,42)" fg:x="75093" fg:w="15"/><text x="97.7582%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.02%)</title><rect x="97.5095%" y="1333" width="0.0182%" height="15" fill="rgb(238,21,24)" fg:x="75094" fg:w="14"/><text x="97.7595%" y="1343.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="97.5121%" y="1317" width="0.0156%" height="15" fill="rgb(227,134,7)" fg:x="75096" fg:w="12"/><text x="97.7621%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.02%)</title><rect x="97.5121%" y="1301" width="0.0156%" height="15" fill="rgb(205,191,1)" fg:x="75096" fg:w="12"/><text x="97.7621%" y="1311.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.02%)</title><rect x="97.5121%" y="1285" width="0.0156%" height="15" fill="rgb(222,166,30)" fg:x="75096" fg:w="12"/><text x="97.7621%" y="1295.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.02%)</title><rect x="97.5121%" y="1269" width="0.0156%" height="15" fill="rgb(229,94,26)" fg:x="75096" fg:w="12"/><text x="97.7621%" y="1279.50"></text></g><g><title>realloc (10 samples, 0.01%)</title><rect x="97.5147%" y="1253" width="0.0130%" height="15" fill="rgb(246,97,2)" fg:x="75098" fg:w="10"/><text x="97.7647%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (22 samples, 0.03%)</title><rect x="97.5004%" y="1605" width="0.0286%" height="15" fill="rgb(252,112,53)" fg:x="75087" fg:w="22"/><text x="97.7504%" y="1615.50"></text></g><g><title>serde::ser::Serializer::collect_seq (22 samples, 0.03%)</title><rect x="97.5004%" y="1589" width="0.0286%" height="15" fill="rgb(225,52,38)" fg:x="75087" fg:w="22"/><text x="97.7504%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (21 samples, 0.03%)</title><rect x="97.5017%" y="1573" width="0.0273%" height="15" fill="rgb(215,203,24)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.03%)</title><rect x="97.5017%" y="1557" width="0.0273%" height="15" fill="rgb(210,122,52)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (21 samples, 0.03%)</title><rect x="97.5017%" y="1541" width="0.0273%" height="15" fill="rgb(209,161,44)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1551.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (21 samples, 0.03%)</title><rect x="97.5017%" y="1525" width="0.0273%" height="15" fill="rgb(221,97,16)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (21 samples, 0.03%)</title><rect x="97.5017%" y="1509" width="0.0273%" height="15" fill="rgb(209,87,13)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 0.03%)</title><rect x="97.5017%" y="1493" width="0.0273%" height="15" fill="rgb(242,1,21)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (21 samples, 0.03%)</title><rect x="97.5017%" y="1477" width="0.0273%" height="15" fill="rgb(251,170,41)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (21 samples, 0.03%)</title><rect x="97.5017%" y="1461" width="0.0273%" height="15" fill="rgb(227,201,10)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1471.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.03%)</title><rect x="97.5017%" y="1445" width="0.0273%" height="15" fill="rgb(231,100,29)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.03%)</title><rect x="97.5017%" y="1429" width="0.0273%" height="15" fill="rgb(226,31,35)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.03%)</title><rect x="97.5017%" y="1413" width="0.0273%" height="15" fill="rgb(254,99,26)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.03%)</title><rect x="97.5017%" y="1397" width="0.0273%" height="15" fill="rgb(217,228,17)" fg:x="75088" fg:w="21"/><text x="97.7517%" y="1407.50"></text></g><g><title>bcs::ser::to_bytes (49 samples, 0.06%)</title><rect x="97.4679%" y="1669" width="0.0636%" height="15" fill="rgb(226,132,8)" fg:x="75062" fg:w="49"/><text x="97.7179%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (48 samples, 0.06%)</title><rect x="97.4692%" y="1653" width="0.0623%" height="15" fill="rgb(220,202,47)" fg:x="75063" fg:w="48"/><text x="97.7192%" y="1663.50"></text></g><g><title>aptos_types::account_config::resources::core_account::_::&lt;impl serde::ser::Serialize for aptos_types::account_config::resources::core_account::AccountResource&gt;::serialize (48 samples, 0.06%)</title><rect x="97.4692%" y="1637" width="0.0623%" height="15" fill="rgb(245,194,10)" fg:x="75063" fg:w="48"/><text x="97.7192%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 0.06%)</title><rect x="97.4705%" y="1621" width="0.0610%" height="15" fill="rgb(225,44,52)" fg:x="75064" fg:w="47"/><text x="97.7205%" y="1631.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::to_bytes (182 samples, 0.24%)</title><rect x="97.3017%" y="1685" width="0.2363%" height="15" fill="rgb(235,10,4)" fg:x="74934" fg:w="182"/><text x="97.5517%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (19 samples, 0.02%)</title><rect x="97.5445%" y="1493" width="0.0247%" height="15" fill="rgb(244,32,23)" fg:x="75121" fg:w="19"/><text x="97.7945%" y="1503.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (19 samples, 0.02%)</title><rect x="97.5445%" y="1477" width="0.0247%" height="15" fill="rgb(210,115,0)" fg:x="75121" fg:w="19"/><text x="97.7945%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (19 samples, 0.02%)</title><rect x="97.5445%" y="1461" width="0.0247%" height="15" fill="rgb(246,72,16)" fg:x="75121" fg:w="19"/><text x="97.7945%" y="1471.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.02%)</title><rect x="97.5445%" y="1445" width="0.0247%" height="15" fill="rgb(223,32,10)" fg:x="75121" fg:w="19"/><text x="97.7945%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.02%)</title><rect x="97.5445%" y="1429" width="0.0247%" height="15" fill="rgb(223,97,52)" fg:x="75121" fg:w="19"/><text x="97.7945%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.02%)</title><rect x="97.5445%" y="1413" width="0.0247%" height="15" fill="rgb(238,69,38)" fg:x="75121" fg:w="19"/><text x="97.7945%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.02%)</title><rect x="97.5445%" y="1397" width="0.0247%" height="15" fill="rgb(226,61,1)" fg:x="75121" fg:w="19"/><text x="97.7945%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="97.5549%" y="1381" width="0.0143%" height="15" fill="rgb(244,56,14)" fg:x="75129" fg:w="11"/><text x="97.8049%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="97.5549%" y="1365" width="0.0143%" height="15" fill="rgb(242,164,18)" fg:x="75129" fg:w="11"/><text x="97.8049%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="97.5575%" y="1349" width="0.0117%" height="15" fill="rgb(217,130,28)" fg:x="75131" fg:w="9"/><text x="97.8075%" y="1359.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (23 samples, 0.03%)</title><rect x="97.5445%" y="1573" width="0.0299%" height="15" fill="rgb(218,118,52)" fg:x="75121" fg:w="23"/><text x="97.7945%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 0.03%)</title><rect x="97.5445%" y="1557" width="0.0299%" height="15" fill="rgb(251,112,38)" fg:x="75121" fg:w="23"/><text x="97.7945%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (23 samples, 0.03%)</title><rect x="97.5445%" y="1541" width="0.0299%" height="15" fill="rgb(239,14,50)" fg:x="75121" fg:w="23"/><text x="97.7945%" y="1551.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 0.03%)</title><rect x="97.5445%" y="1525" width="0.0299%" height="15" fill="rgb(228,141,54)" fg:x="75121" fg:w="23"/><text x="97.7945%" y="1535.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 32]&gt;::serialize (23 samples, 0.03%)</title><rect x="97.5445%" y="1509" width="0.0299%" height="15" fill="rgb(236,128,15)" fg:x="75121" fg:w="23"/><text x="97.7945%" y="1519.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventHandle&gt;::serialize (35 samples, 0.05%)</title><rect x="97.5432%" y="1605" width="0.0454%" height="15" fill="rgb(206,140,54)" fg:x="75120" fg:w="35"/><text x="97.7932%" y="1615.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (34 samples, 0.04%)</title><rect x="97.5445%" y="1589" width="0.0441%" height="15" fill="rgb(240,0,44)" fg:x="75121" fg:w="34"/><text x="97.7945%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (11 samples, 0.01%)</title><rect x="97.5744%" y="1573" width="0.0143%" height="15" fill="rgb(243,207,23)" fg:x="75144" fg:w="11"/><text x="97.8244%" y="1583.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (11 samples, 0.01%)</title><rect x="97.5744%" y="1557" width="0.0143%" height="15" fill="rgb(247,202,1)" fg:x="75144" fg:w="11"/><text x="97.8244%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="97.5744%" y="1541" width="0.0143%" height="15" fill="rgb(239,83,27)" fg:x="75144" fg:w="11"/><text x="97.8244%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="97.5744%" y="1525" width="0.0143%" height="15" fill="rgb(219,205,7)" fg:x="75144" fg:w="11"/><text x="97.8244%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="97.5744%" y="1509" width="0.0143%" height="15" fill="rgb(249,184,22)" fg:x="75144" fg:w="11"/><text x="97.8244%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="97.5744%" y="1493" width="0.0143%" height="15" fill="rgb(230,150,14)" fg:x="75144" fg:w="11"/><text x="97.8244%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="97.5744%" y="1477" width="0.0143%" height="15" fill="rgb(240,118,34)" fg:x="75144" fg:w="11"/><text x="97.8244%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="97.5757%" y="1461" width="0.0130%" height="15" fill="rgb(227,162,21)" fg:x="75145" fg:w="10"/><text x="97.8257%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="97.5770%" y="1445" width="0.0117%" height="15" fill="rgb(219,14,9)" fg:x="75146" fg:w="9"/><text x="97.8270%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="97.5770%" y="1429" width="0.0117%" height="15" fill="rgb(223,226,16)" fg:x="75146" fg:w="9"/><text x="97.8270%" y="1439.50"></text></g><g><title>aptos_language_e2e_tests::account::CoinStore::to_bytes (42 samples, 0.05%)</title><rect x="97.5380%" y="1685" width="0.0545%" height="15" fill="rgb(246,161,37)" fg:x="75116" fg:w="42"/><text x="97.7880%" y="1695.50"></text></g><g><title>bcs::ser::to_bytes (40 samples, 0.05%)</title><rect x="97.5406%" y="1669" width="0.0519%" height="15" fill="rgb(205,221,43)" fg:x="75118" fg:w="40"/><text x="97.7906%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (40 samples, 0.05%)</title><rect x="97.5406%" y="1653" width="0.0519%" height="15" fill="rgb(228,216,26)" fg:x="75118" fg:w="40"/><text x="97.7906%" y="1663.50"></text></g><g><title>aptos_types::account_config::resources::coin_store::_::&lt;impl serde::ser::Serialize for aptos_types::account_config::resources::coin_store::CoinStoreResource&gt;::serialize (40 samples, 0.05%)</title><rect x="97.5406%" y="1637" width="0.0519%" height="15" fill="rgb(251,33,17)" fg:x="75118" fg:w="40"/><text x="97.7906%" y="1647.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 0.05%)</title><rect x="97.5432%" y="1621" width="0.0493%" height="15" fill="rgb(246,126,36)" fg:x="75120" fg:w="38"/><text x="97.7932%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;K,V,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="97.6108%" y="1605" width="0.0169%" height="15" fill="rgb(217,160,24)" fg:x="75172" fg:w="13"/><text x="97.8608%" y="1615.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (26 samples, 0.03%)</title><rect x="97.6043%" y="1621" width="0.0338%" height="15" fill="rgb(211,64,12)" fg:x="75167" fg:w="26"/><text x="97.8543%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (35 samples, 0.05%)</title><rect x="97.6043%" y="1637" width="0.0454%" height="15" fill="rgb(238,47,36)" fg:x="75167" fg:w="35"/><text x="97.8543%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (9 samples, 0.01%)</title><rect x="97.6380%" y="1621" width="0.0117%" height="15" fill="rgb(210,157,42)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (9 samples, 0.01%)</title><rect x="97.6380%" y="1605" width="0.0117%" height="15" fill="rgb(242,84,39)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (9 samples, 0.01%)</title><rect x="97.6380%" y="1589" width="0.0117%" height="15" fill="rgb(207,65,41)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1599.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.01%)</title><rect x="97.6380%" y="1573" width="0.0117%" height="15" fill="rgb(246,97,27)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.01%)</title><rect x="97.6380%" y="1557" width="0.0117%" height="15" fill="rgb(229,9,43)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="97.6380%" y="1541" width="0.0117%" height="15" fill="rgb(211,82,44)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="97.6380%" y="1525" width="0.0117%" height="15" fill="rgb(253,45,54)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="97.6380%" y="1509" width="0.0117%" height="15" fill="rgb(235,94,32)" fg:x="75193" fg:w="9"/><text x="97.8880%" y="1519.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="97.6393%" y="1493" width="0.0104%" height="15" fill="rgb(252,143,1)" fg:x="75194" fg:w="8"/><text x="97.8893%" y="1503.50"></text></g><g><title>aptos_language_e2e_tests::account::AccountData::to_writeset (398 samples, 0.52%)</title><rect x="97.1446%" y="1701" width="0.5168%" height="15" fill="rgb(239,164,4)" fg:x="74813" fg:w="398"/><text x="97.3946%" y="1711.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (45 samples, 0.06%)</title><rect x="97.6030%" y="1685" width="0.0584%" height="15" fill="rgb(222,25,39)" fg:x="75166" fg:w="45"/><text x="97.8530%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 0.06%)</title><rect x="97.6043%" y="1669" width="0.0571%" height="15" fill="rgb(234,175,9)" fg:x="75167" fg:w="44"/><text x="97.8543%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (44 samples, 0.06%)</title><rect x="97.6043%" y="1653" width="0.0571%" height="15" fill="rgb(247,200,41)" fg:x="75167" fg:w="44"/><text x="97.8543%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="97.6640%" y="1685" width="0.0143%" height="15" fill="rgb(245,101,27)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="97.6640%" y="1669" width="0.0143%" height="15" fill="rgb(221,29,7)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="97.6640%" y="1653" width="0.0143%" height="15" fill="rgb(240,184,10)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="97.6640%" y="1637" width="0.0143%" height="15" fill="rgb(251,85,15)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="97.6640%" y="1621" width="0.0143%" height="15" fill="rgb(252,84,16)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="97.6640%" y="1605" width="0.0143%" height="15" fill="rgb(233,136,6)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="97.6640%" y="1589" width="0.0143%" height="15" fill="rgb(226,169,30)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="97.6640%" y="1573" width="0.0143%" height="15" fill="rgb(241,83,18)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="97.6640%" y="1557" width="0.0143%" height="15" fill="rgb(239,151,5)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="97.6640%" y="1541" width="0.0143%" height="15" fill="rgb(238,56,13)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1551.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="97.6640%" y="1525" width="0.0143%" height="15" fill="rgb(224,100,0)" fg:x="75213" fg:w="11"/><text x="97.9140%" y="1535.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="97.6666%" y="1509" width="0.0117%" height="15" fill="rgb(231,168,26)" fg:x="75215" fg:w="9"/><text x="97.9166%" y="1519.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="97.7484%" y="1445" width="0.0117%" height="15" fill="rgb(238,110,3)" fg:x="75278" fg:w="9"/><text x="97.9984%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (63 samples, 0.08%)</title><rect x="97.6822%" y="1573" width="0.0818%" height="15" fill="rgb(216,190,1)" fg:x="75227" fg:w="63"/><text x="97.9322%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (63 samples, 0.08%)</title><rect x="97.6822%" y="1557" width="0.0818%" height="15" fill="rgb(208,130,52)" fg:x="75227" fg:w="63"/><text x="97.9322%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (63 samples, 0.08%)</title><rect x="97.6822%" y="1541" width="0.0818%" height="15" fill="rgb(233,74,12)" fg:x="75227" fg:w="63"/><text x="97.9322%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.08%)</title><rect x="97.6822%" y="1525" width="0.0818%" height="15" fill="rgb(248,12,15)" fg:x="75227" fg:w="63"/><text x="97.9322%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.08%)</title><rect x="97.6822%" y="1509" width="0.0818%" height="15" fill="rgb(228,18,29)" fg:x="75227" fg:w="63"/><text x="97.9322%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.08%)</title><rect x="97.6822%" y="1493" width="0.0818%" height="15" fill="rgb(206,153,11)" fg:x="75227" fg:w="63"/><text x="97.9322%" y="1503.50"></text></g><g><title>malloc (63 samples, 0.08%)</title><rect x="97.6822%" y="1477" width="0.0818%" height="15" fill="rgb(216,50,30)" fg:x="75227" fg:w="63"/><text x="97.9322%" y="1487.50"></text></g><g><title>[libc.so.6] (45 samples, 0.06%)</title><rect x="97.7056%" y="1461" width="0.0584%" height="15" fill="rgb(217,20,39)" fg:x="75245" fg:w="45"/><text x="97.9556%" y="1471.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (67 samples, 0.09%)</title><rect x="97.6783%" y="1685" width="0.0870%" height="15" fill="rgb(232,130,46)" fg:x="75224" fg:w="67"/><text x="97.9283%" y="1695.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (64 samples, 0.08%)</title><rect x="97.6822%" y="1669" width="0.0831%" height="15" fill="rgb(233,141,43)" fg:x="75227" fg:w="64"/><text x="97.9322%" y="1679.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (64 samples, 0.08%)</title><rect x="97.6822%" y="1653" width="0.0831%" height="15" fill="rgb(240,64,34)" fg:x="75227" fg:w="64"/><text x="97.9322%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (64 samples, 0.08%)</title><rect x="97.6822%" y="1637" width="0.0831%" height="15" fill="rgb(230,28,31)" fg:x="75227" fg:w="64"/><text x="97.9322%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64 samples, 0.08%)</title><rect x="97.6822%" y="1621" width="0.0831%" height="15" fill="rgb(223,56,30)" fg:x="75227" fg:w="64"/><text x="97.9322%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (64 samples, 0.08%)</title><rect x="97.6822%" y="1605" width="0.0831%" height="15" fill="rgb(248,134,16)" fg:x="75227" fg:w="64"/><text x="97.9322%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 0.08%)</title><rect x="97.6822%" y="1589" width="0.0831%" height="15" fill="rgb(206,202,4)" fg:x="75227" fg:w="64"/><text x="97.9322%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="97.7666%" y="1605" width="0.0104%" height="15" fill="rgb(219,116,48)" fg:x="75292" fg:w="8"/><text x="98.0166%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="97.7666%" y="1589" width="0.0104%" height="15" fill="rgb(224,122,46)" fg:x="75292" fg:w="8"/><text x="98.0166%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="97.7666%" y="1573" width="0.0104%" height="15" fill="rgb(219,114,47)" fg:x="75292" fg:w="8"/><text x="98.0166%" y="1583.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (8 samples, 0.01%)</title><rect x="97.7809%" y="1493" width="0.0104%" height="15" fill="rgb(244,60,44)" fg:x="75303" fg:w="8"/><text x="98.0309%" y="1503.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.01%)</title><rect x="97.7809%" y="1477" width="0.0104%" height="15" fill="rgb(243,226,25)" fg:x="75303" fg:w="8"/><text x="98.0309%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="97.7809%" y="1461" width="0.0104%" height="15" fill="rgb(243,101,52)" fg:x="75303" fg:w="8"/><text x="98.0309%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="97.7809%" y="1445" width="0.0104%" height="15" fill="rgb(207,69,25)" fg:x="75303" fg:w="8"/><text x="98.0309%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="97.7809%" y="1429" width="0.0104%" height="15" fill="rgb(222,204,53)" fg:x="75303" fg:w="8"/><text x="98.0309%" y="1439.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (15 samples, 0.02%)</title><rect x="97.7796%" y="1557" width="0.0195%" height="15" fill="rgb(234,84,49)" fg:x="75302" fg:w="15"/><text x="98.0296%" y="1567.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (14 samples, 0.02%)</title><rect x="97.7809%" y="1541" width="0.0182%" height="15" fill="rgb(233,77,41)" fg:x="75303" fg:w="14"/><text x="98.0309%" y="1551.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (14 samples, 0.02%)</title><rect x="97.7809%" y="1525" width="0.0182%" height="15" fill="rgb(221,200,42)" fg:x="75303" fg:w="14"/><text x="98.0309%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.02%)</title><rect x="97.7809%" y="1509" width="0.0182%" height="15" fill="rgb(221,29,35)" fg:x="75303" fg:w="14"/><text x="98.0309%" y="1519.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="97.7783%" y="1589" width="0.0247%" height="15" fill="rgb(221,71,22)" fg:x="75301" fg:w="19"/><text x="98.0283%" y="1599.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="97.7796%" y="1573" width="0.0234%" height="15" fill="rgb(216,162,23)" fg:x="75302" fg:w="18"/><text x="98.0296%" y="1583.50"></text></g><g><title>hashbrown::map::make_insert_hash (37 samples, 0.05%)</title><rect x="97.7666%" y="1637" width="0.0480%" height="15" fill="rgb(248,32,48)" fg:x="75292" fg:w="37"/><text x="98.0166%" y="1647.50"></text></g><g><title>core::hash::BuildHasher::hash_one (37 samples, 0.05%)</title><rect x="97.7666%" y="1621" width="0.0480%" height="15" fill="rgb(241,156,30)" fg:x="75292" fg:w="37"/><text x="98.0166%" y="1631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.04%)</title><rect x="97.7783%" y="1605" width="0.0364%" height="15" fill="rgb(237,196,46)" fg:x="75301" fg:w="28"/><text x="98.0283%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="97.8029%" y="1589" width="0.0117%" height="15" fill="rgb(216,2,6)" fg:x="75320" fg:w="9"/><text x="98.0529%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="97.8029%" y="1573" width="0.0117%" height="15" fill="rgb(214,47,16)" fg:x="75320" fg:w="9"/><text x="98.0529%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="97.8029%" y="1557" width="0.0117%" height="15" fill="rgb(240,123,13)" fg:x="75320" fg:w="9"/><text x="98.0529%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.01%)</title><rect x="97.8159%" y="1589" width="0.0130%" height="15" fill="rgb(206,47,48)" fg:x="75330" fg:w="10"/><text x="98.0659%" y="1599.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.01%)</title><rect x="97.8159%" y="1573" width="0.0130%" height="15" fill="rgb(252,88,27)" fg:x="75330" fg:w="10"/><text x="98.0659%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (10 samples, 0.01%)</title><rect x="97.8159%" y="1557" width="0.0130%" height="15" fill="rgb(218,105,30)" fg:x="75330" fg:w="10"/><text x="98.0659%" y="1567.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.01%)</title><rect x="97.8159%" y="1541" width="0.0130%" height="15" fill="rgb(227,52,46)" fg:x="75330" fg:w="10"/><text x="98.0659%" y="1551.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (10 samples, 0.01%)</title><rect x="97.8159%" y="1525" width="0.0130%" height="15" fill="rgb(222,190,21)" fg:x="75330" fg:w="10"/><text x="98.0659%" y="1535.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (25 samples, 0.03%)</title><rect x="97.8289%" y="1589" width="0.0325%" height="15" fill="rgb(205,86,20)" fg:x="75340" fg:w="25"/><text x="98.0789%" y="1599.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (25 samples, 0.03%)</title><rect x="97.8289%" y="1573" width="0.0325%" height="15" fill="rgb(233,45,1)" fg:x="75340" fg:w="25"/><text x="98.0789%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.03%)</title><rect x="97.8289%" y="1557" width="0.0325%" height="15" fill="rgb(208,39,6)" fg:x="75340" fg:w="25"/><text x="98.0789%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (38 samples, 0.05%)</title><rect x="97.8146%" y="1637" width="0.0493%" height="15" fill="rgb(211,178,22)" fg:x="75329" fg:w="38"/><text x="98.0646%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.05%)</title><rect x="97.8146%" y="1621" width="0.0493%" height="15" fill="rgb(227,112,23)" fg:x="75329" fg:w="38"/><text x="98.0646%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.05%)</title><rect x="97.8146%" y="1605" width="0.0493%" height="15" fill="rgb(214,41,4)" fg:x="75329" fg:w="38"/><text x="98.0646%" y="1615.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (14 samples, 0.02%)</title><rect x="97.8640%" y="1621" width="0.0182%" height="15" fill="rgb(219,144,46)" fg:x="75367" fg:w="14"/><text x="98.1140%" y="1631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (14 samples, 0.02%)</title><rect x="97.8640%" y="1605" width="0.0182%" height="15" fill="rgb(253,176,50)" fg:x="75367" fg:w="14"/><text x="98.1140%" y="1615.50"></text></g><g><title>core::ptr::write (14 samples, 0.02%)</title><rect x="97.8640%" y="1589" width="0.0182%" height="15" fill="rgb(206,123,1)" fg:x="75367" fg:w="14"/><text x="98.1140%" y="1599.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="97.8640%" y="1573" width="0.0182%" height="15" fill="rgb(250,111,32)" fg:x="75367" fg:w="14"/><text x="98.1140%" y="1583.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="97.9003%" y="1445" width="0.0143%" height="15" fill="rgb(229,17,49)" fg:x="75395" fg:w="11"/><text x="98.1503%" y="1455.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="97.9016%" y="1429" width="0.0130%" height="15" fill="rgb(250,123,19)" fg:x="75396" fg:w="10"/><text x="98.1516%" y="1439.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (10 samples, 0.01%)</title><rect x="97.9016%" y="1413" width="0.0130%" height="15" fill="rgb(220,124,20)" fg:x="75396" fg:w="10"/><text x="98.1516%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.01%)</title><rect x="97.9016%" y="1397" width="0.0130%" height="15" fill="rgb(242,85,25)" fg:x="75396" fg:w="10"/><text x="98.1516%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (8 samples, 0.01%)</title><rect x="97.9042%" y="1381" width="0.0104%" height="15" fill="rgb(245,217,7)" fg:x="75398" fg:w="8"/><text x="98.1542%" y="1391.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="97.9003%" y="1477" width="0.0169%" height="15" fill="rgb(242,50,25)" fg:x="75395" fg:w="13"/><text x="98.1503%" y="1487.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="97.9003%" y="1461" width="0.0169%" height="15" fill="rgb(251,210,24)" fg:x="75395" fg:w="13"/><text x="98.1503%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (153 samples, 0.20%)</title><rect x="97.9185%" y="1429" width="0.1987%" height="15" fill="rgb(238,24,8)" fg:x="75409" fg:w="153"/><text x="98.1685%" y="1439.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (175 samples, 0.23%)</title><rect x="97.8912%" y="1541" width="0.2272%" height="15" fill="rgb(211,96,19)" fg:x="75388" fg:w="175"/><text x="98.1412%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (175 samples, 0.23%)</title><rect x="97.8912%" y="1525" width="0.2272%" height="15" fill="rgb(222,186,12)" fg:x="75388" fg:w="175"/><text x="98.1412%" y="1535.50"></text></g><g><title>core::hash::BuildHasher::hash_one (175 samples, 0.23%)</title><rect x="97.8912%" y="1509" width="0.2272%" height="15" fill="rgb(212,70,49)" fg:x="75388" fg:w="175"/><text x="98.1412%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (168 samples, 0.22%)</title><rect x="97.9003%" y="1493" width="0.2181%" height="15" fill="rgb(238,69,49)" fg:x="75395" fg:w="168"/><text x="98.1503%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (155 samples, 0.20%)</title><rect x="97.9172%" y="1477" width="0.2013%" height="15" fill="rgb(225,13,3)" fg:x="75408" fg:w="155"/><text x="98.1672%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (155 samples, 0.20%)</title><rect x="97.9172%" y="1461" width="0.2013%" height="15" fill="rgb(229,188,14)" fg:x="75408" fg:w="155"/><text x="98.1672%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (155 samples, 0.20%)</title><rect x="97.9172%" y="1445" width="0.2013%" height="15" fill="rgb(218,58,16)" fg:x="75408" fg:w="155"/><text x="98.1672%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (176 samples, 0.23%)</title><rect x="97.8912%" y="1557" width="0.2285%" height="15" fill="rgb(206,213,49)" fg:x="75388" fg:w="176"/><text x="98.1412%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (191 samples, 0.25%)</title><rect x="97.8821%" y="1621" width="0.2480%" height="15" fill="rgb(225,152,48)" fg:x="75381" fg:w="191"/><text x="98.1321%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (191 samples, 0.25%)</title><rect x="97.8821%" y="1605" width="0.2480%" height="15" fill="rgb(216,103,42)" fg:x="75381" fg:w="191"/><text x="98.1321%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (191 samples, 0.25%)</title><rect x="97.8821%" y="1589" width="0.2480%" height="15" fill="rgb(212,214,39)" fg:x="75381" fg:w="191"/><text x="98.1321%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (191 samples, 0.25%)</title><rect x="97.8821%" y="1573" width="0.2480%" height="15" fill="rgb(249,52,41)" fg:x="75381" fg:w="191"/><text x="98.1321%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (8 samples, 0.01%)</title><rect x="98.1198%" y="1557" width="0.0104%" height="15" fill="rgb(212,173,53)" fg:x="75564" fg:w="8"/><text x="98.3698%" y="1567.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_write_set (366 samples, 0.48%)</title><rect x="97.6614%" y="1701" width="0.4753%" height="15" fill="rgb(232,222,21)" fg:x="75211" fg:w="366"/><text x="97.9114%" y="1711.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::set (286 samples, 0.37%)</title><rect x="97.7653%" y="1685" width="0.3714%" height="15" fill="rgb(206,228,31)" fg:x="75291" fg:w="286"/><text x="98.0153%" y="1695.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (286 samples, 0.37%)</title><rect x="97.7653%" y="1669" width="0.3714%" height="15" fill="rgb(231,121,16)" fg:x="75291" fg:w="286"/><text x="98.0153%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (286 samples, 0.37%)</title><rect x="97.7653%" y="1653" width="0.3714%" height="15" fill="rgb(241,3,23)" fg:x="75291" fg:w="286"/><text x="98.0153%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (210 samples, 0.27%)</title><rect x="97.8640%" y="1637" width="0.2727%" height="15" fill="rgb(220,68,37)" fg:x="75367" fg:w="210"/><text x="98.1140%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (44 samples, 0.06%)</title><rect x="98.1380%" y="1573" width="0.0571%" height="15" fill="rgb(212,23,49)" fg:x="75578" fg:w="44"/><text x="98.3880%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (41 samples, 0.05%)</title><rect x="98.1418%" y="1557" width="0.0532%" height="15" fill="rgb(231,38,8)" fg:x="75581" fg:w="41"/><text x="98.3918%" y="1567.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (41 samples, 0.05%)</title><rect x="98.1418%" y="1541" width="0.0532%" height="15" fill="rgb(222,137,29)" fg:x="75581" fg:w="41"/><text x="98.3918%" y="1551.50"></text></g><g><title>alloc::collections::btree::mem::replace (38 samples, 0.05%)</title><rect x="98.1457%" y="1525" width="0.0493%" height="15" fill="rgb(239,8,6)" fg:x="75584" fg:w="38"/><text x="98.3957%" y="1535.50"></text></g><g><title>core::ptr::write (15 samples, 0.02%)</title><rect x="98.1756%" y="1509" width="0.0195%" height="15" fill="rgb(224,142,47)" fg:x="75607" fg:w="15"/><text x="98.4256%" y="1519.50"></text></g><g><title>__rust_dealloc (17 samples, 0.02%)</title><rect x="98.1951%" y="1461" width="0.0221%" height="15" fill="rgb(226,67,29)" fg:x="75622" fg:w="17"/><text x="98.4451%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (29 samples, 0.04%)</title><rect x="98.1951%" y="1541" width="0.0377%" height="15" fill="rgb(212,144,29)" fg:x="75622" fg:w="29"/><text x="98.4451%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKeyInner&gt; (29 samples, 0.04%)</title><rect x="98.1951%" y="1525" width="0.0377%" height="15" fill="rgb(252,2,51)" fg:x="75622" fg:w="29"/><text x="98.4451%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.04%)</title><rect x="98.1951%" y="1509" width="0.0377%" height="15" fill="rgb(246,103,52)" fg:x="75622" fg:w="29"/><text x="98.4451%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.04%)</title><rect x="98.1951%" y="1493" width="0.0377%" height="15" fill="rgb(229,229,35)" fg:x="75622" fg:w="29"/><text x="98.4451%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.04%)</title><rect x="98.1951%" y="1477" width="0.0377%" height="15" fill="rgb(209,83,15)" fg:x="75622" fg:w="29"/><text x="98.4451%" y="1487.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="98.2172%" y="1461" width="0.0156%" height="15" fill="rgb(218,54,16)" fg:x="75639" fg:w="12"/><text x="98.4672%" y="1471.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="98.2198%" y="1445" width="0.0130%" height="15" fill="rgb(205,2,26)" fg:x="75641" fg:w="10"/><text x="98.4698%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="98.2327%" y="1509" width="0.0104%" height="15" fill="rgb(248,180,0)" fg:x="75651" fg:w="8"/><text x="98.4827%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="98.2327%" y="1493" width="0.0104%" height="15" fill="rgb(231,136,16)" fg:x="75651" fg:w="8"/><text x="98.4827%" y="1503.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::create_accounts (4,975 samples, 6.46%)</title><rect x="91.7857%" y="1749" width="6.4600%" height="15" fill="rgb(215,90,4)" fg:x="70686" fg:w="4975"/><text x="92.0357%" y="1759.50">aptos_la..</text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::add_account_data (848 samples, 1.10%)</title><rect x="97.1446%" y="1733" width="1.1011%" height="15" fill="rgb(251,131,3)" fg:x="74813" fg:w="848"/><text x="97.3946%" y="1743.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_account_data (848 samples, 1.10%)</title><rect x="97.1446%" y="1717" width="1.1011%" height="15" fill="rgb(244,47,21)" fg:x="74813" fg:w="848"/><text x="97.3946%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (84 samples, 0.11%)</title><rect x="98.1367%" y="1701" width="0.1091%" height="15" fill="rgb(231,115,9)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (84 samples, 0.11%)</title><rect x="98.1367%" y="1685" width="0.1091%" height="15" fill="rgb(241,119,20)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (84 samples, 0.11%)</title><rect x="98.1367%" y="1669" width="0.1091%" height="15" fill="rgb(224,99,0)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (84 samples, 0.11%)</title><rect x="98.1367%" y="1653" width="0.1091%" height="15" fill="rgb(219,213,18)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.11%)</title><rect x="98.1367%" y="1637" width="0.1091%" height="15" fill="rgb(209,71,34)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1647.50"></text></g><g><title>core::mem::drop (84 samples, 0.11%)</title><rect x="98.1367%" y="1621" width="0.1091%" height="15" fill="rgb(245,203,20)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (84 samples, 0.11%)</title><rect x="98.1367%" y="1605" width="0.1091%" height="15" fill="rgb(221,44,20)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.11%)</title><rect x="98.1367%" y="1589" width="0.1091%" height="15" fill="rgb(229,97,0)" fg:x="75577" fg:w="84"/><text x="98.3867%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (39 samples, 0.05%)</title><rect x="98.1951%" y="1573" width="0.0506%" height="15" fill="rgb(206,56,49)" fg:x="75622" fg:w="39"/><text x="98.4451%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (39 samples, 0.05%)</title><rect x="98.1951%" y="1557" width="0.0506%" height="15" fill="rgb(208,216,41)" fg:x="75622" fg:w="39"/><text x="98.4451%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (10 samples, 0.01%)</title><rect x="98.2327%" y="1541" width="0.0130%" height="15" fill="rgb(231,31,6)" fg:x="75651" fg:w="10"/><text x="98.4827%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="98.2327%" y="1525" width="0.0130%" height="15" fill="rgb(239,88,23)" fg:x="75651" fg:w="10"/><text x="98.4827%" y="1535.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_block (12 samples, 0.02%)</title><rect x="98.2483%" y="1717" width="0.0156%" height="15" fill="rgb(227,111,45)" fg:x="75663" fg:w="12"/><text x="98.4983%" y="1727.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel (12 samples, 0.02%)</title><rect x="98.2483%" y="1701" width="0.0156%" height="15" fill="rgb(207,167,18)" fg:x="75663" fg:w="12"/><text x="98.4983%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::Transaction&gt;&gt; (13 samples, 0.02%)</title><rect x="98.2678%" y="1717" width="0.0169%" height="15" fill="rgb(253,127,17)" fg:x="75678" fg:w="13"/><text x="98.5178%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::Transaction&gt;&gt; (13 samples, 0.02%)</title><rect x="98.2678%" y="1701" width="0.0169%" height="15" fill="rgb(211,229,9)" fg:x="75678" fg:w="13"/><text x="98.5178%" y="1711.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_transaction_block_parallel (37 samples, 0.05%)</title><rect x="98.2457%" y="1749" width="0.0480%" height="15" fill="rgb(249,25,14)" fg:x="75661" fg:w="37"/><text x="98.4957%" y="1759.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block (37 samples, 0.05%)</title><rect x="98.2457%" y="1733" width="0.0480%" height="15" fill="rgb(237,177,4)" fg:x="75661" fg:w="37"/><text x="98.4957%" y="1743.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (11 samples, 0.01%)</title><rect x="98.3184%" y="1365" width="0.0143%" height="15" fill="rgb(248,163,50)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.3184%" y="1349" width="0.0143%" height="15" fill="rgb(246,67,42)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1359.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.3184%" y="1333" width="0.0143%" height="15" fill="rgb(228,136,45)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.3184%" y="1317" width="0.0143%" height="15" fill="rgb(218,93,4)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1327.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config::{{closure}} (11 samples, 0.01%)</title><rect x="98.3184%" y="1301" width="0.0143%" height="15" fill="rgb(209,82,29)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1311.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="98.3184%" y="1285" width="0.0143%" height="15" fill="rgb(213,219,38)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1295.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="98.3184%" y="1269" width="0.0143%" height="15" fill="rgb(233,212,17)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1279.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="98.3184%" y="1253" width="0.0143%" height="15" fill="rgb(225,65,3)" fg:x="75717" fg:w="11"/><text x="98.5684%" y="1263.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (8 samples, 0.01%)</title><rect x="98.3223%" y="1237" width="0.0104%" height="15" fill="rgb(226,25,1)" fg:x="75720" fg:w="8"/><text x="98.5723%" y="1247.50"></text></g><g><title>aptos_vm_genesis::publish_framework (23 samples, 0.03%)</title><rect x="98.3094%" y="1461" width="0.0299%" height="15" fill="rgb(229,83,27)" fg:x="75710" fg:w="23"/><text x="98.5594%" y="1471.50"></text></g><g><title>aptos_vm_genesis::publish_package (23 samples, 0.03%)</title><rect x="98.3094%" y="1445" width="0.0299%" height="15" fill="rgb(245,80,47)" fg:x="75710" fg:w="23"/><text x="98.5594%" y="1455.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::publish_module_bundle (20 samples, 0.03%)</title><rect x="98.3132%" y="1429" width="0.0260%" height="15" fill="rgb(213,79,27)" fg:x="75713" fg:w="20"/><text x="98.5632%" y="1439.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::publish_module_bundle (20 samples, 0.03%)</title><rect x="98.3132%" y="1413" width="0.0260%" height="15" fill="rgb(232,38,28)" fg:x="75713" fg:w="20"/><text x="98.5632%" y="1423.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_bundle_for_publication (17 samples, 0.02%)</title><rect x="98.3171%" y="1397" width="0.0221%" height="15" fill="rgb(253,63,39)" fg:x="75716" fg:w="17"/><text x="98.5671%" y="1407.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_for_publication (16 samples, 0.02%)</title><rect x="98.3184%" y="1381" width="0.0208%" height="15" fill="rgb(222,204,17)" fg:x="75717" fg:w="16"/><text x="98.5684%" y="1391.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::from_head_genesis (36 samples, 0.05%)</title><rect x="98.2938%" y="1749" width="0.0467%" height="15" fill="rgb(254,135,49)" fg:x="75698" fg:w="36"/><text x="98.5438%" y="1759.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.05%)</title><rect x="98.2951%" y="1733" width="0.0454%" height="15" fill="rgb(226,203,24)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1743.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (35 samples, 0.05%)</title><rect x="98.2951%" y="1717" width="0.0454%" height="15" fill="rgb(225,2,17)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1727.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (35 samples, 0.05%)</title><rect x="98.2951%" y="1701" width="0.0454%" height="15" fill="rgb(234,135,43)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1711.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (35 samples, 0.05%)</title><rect x="98.2951%" y="1685" width="0.0454%" height="15" fill="rgb(224,14,46)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1695.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (35 samples, 0.05%)</title><rect x="98.2951%" y="1669" width="0.0454%" height="15" fill="rgb(206,42,0)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1679.50"></text></g><g><title>once_cell::imp::initialize_or_wait (35 samples, 0.05%)</title><rect x="98.2951%" y="1653" width="0.0454%" height="15" fill="rgb(244,38,23)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1663.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 0.05%)</title><rect x="98.2951%" y="1637" width="0.0454%" height="15" fill="rgb(230,25,21)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1647.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (35 samples, 0.05%)</title><rect x="98.2951%" y="1621" width="0.0454%" height="15" fill="rgb(252,217,28)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1631.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (35 samples, 0.05%)</title><rect x="98.2951%" y="1605" width="0.0454%" height="15" fill="rgb(251,4,49)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1615.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (35 samples, 0.05%)</title><rect x="98.2951%" y="1589" width="0.0454%" height="15" fill="rgb(217,126,31)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1599.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.05%)</title><rect x="98.2951%" y="1573" width="0.0454%" height="15" fill="rgb(242,181,33)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1583.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.05%)</title><rect x="98.2951%" y="1557" width="0.0454%" height="15" fill="rgb(241,108,6)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1567.50"></text></g><g><title>aptos_language_e2e_tests::data_store::GENESIS_CHANGE_SET_HEAD::{{closure}} (35 samples, 0.05%)</title><rect x="98.2951%" y="1541" width="0.0454%" height="15" fill="rgb(238,87,39)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1551.50"></text></g><g><title>aptos_vm_genesis::generate_genesis_change_set_for_testing (35 samples, 0.05%)</title><rect x="98.2951%" y="1525" width="0.0454%" height="15" fill="rgb(244,101,49)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1535.50"></text></g><g><title>aptos_vm_genesis::generate_genesis_change_set_for_testing_with_count (35 samples, 0.05%)</title><rect x="98.2951%" y="1509" width="0.0454%" height="15" fill="rgb(211,43,42)" fg:x="75699" fg:w="35"/><text x="98.5451%" y="1519.50"></text></g><g><title>aptos_vm_genesis::generate_test_genesis (34 samples, 0.04%)</title><rect x="98.2964%" y="1493" width="0.0441%" height="15" fill="rgb(210,93,2)" fg:x="75700" fg:w="34"/><text x="98.5464%" y="1503.50"></text></g><g><title>aptos_vm_genesis::encode_genesis_change_set (34 samples, 0.04%)</title><rect x="98.2964%" y="1477" width="0.0441%" height="15" fill="rgb(242,149,32)" fg:x="75700" fg:w="34"/><text x="98.5464%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="98.3405%" y="1733" width="0.0104%" height="15" fill="rgb(228,1,6)" fg:x="75734" fg:w="8"/><text x="98.5905%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="98.3405%" y="1717" width="0.0104%" height="15" fill="rgb(221,0,20)" fg:x="75734" fg:w="8"/><text x="98.5905%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="98.3405%" y="1701" width="0.0104%" height="15" fill="rgb(230,39,32)" fg:x="75734" fg:w="8"/><text x="98.5905%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="98.3405%" y="1685" width="0.0104%" height="15" fill="rgb(240,89,38)" fg:x="75734" fg:w="8"/><text x="98.5905%" y="1695.50"></text></g><g><title>aptos_types::transaction::TransactionRegister&lt;T&gt;::map_par_txns (13 samples, 0.02%)</title><rect x="98.3405%" y="1749" width="0.0169%" height="15" fill="rgb(208,221,23)" fg:x="75734" fg:w="13"/><text x="98.5905%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (12 samples, 0.02%)</title><rect x="98.3574%" y="1749" width="0.0156%" height="15" fill="rgb(220,145,29)" fg:x="75747" fg:w="12"/><text x="98.6074%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.01%)</title><rect x="98.3756%" y="1605" width="0.0117%" height="15" fill="rgb(219,146,23)" fg:x="75761" fg:w="9"/><text x="98.6256%" y="1615.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (8 samples, 0.01%)</title><rect x="98.3769%" y="1589" width="0.0104%" height="15" fill="rgb(244,114,49)" fg:x="75762" fg:w="8"/><text x="98.6269%" y="1599.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (8 samples, 0.01%)</title><rect x="98.3769%" y="1573" width="0.0104%" height="15" fill="rgb(221,17,10)" fg:x="75762" fg:w="8"/><text x="98.6269%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (8 samples, 0.01%)</title><rect x="98.3769%" y="1557" width="0.0104%" height="15" fill="rgb(228,133,21)" fg:x="75762" fg:w="8"/><text x="98.6269%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="98.3769%" y="1541" width="0.0104%" height="15" fill="rgb(218,81,30)" fg:x="75762" fg:w="8"/><text x="98.6269%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="98.3769%" y="1525" width="0.0104%" height="15" fill="rgb(240,29,36)" fg:x="75762" fg:w="8"/><text x="98.6269%" y="1535.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="98.3769%" y="1509" width="0.0104%" height="15" fill="rgb(246,0,36)" fg:x="75762" fg:w="8"/><text x="98.6269%" y="1519.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="98.3912%" y="1493" width="0.0117%" height="15" fill="rgb(217,79,8)" fg:x="75773" fg:w="9"/><text x="98.6412%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionOutput&gt; (24 samples, 0.03%)</title><rect x="98.3730%" y="1749" width="0.0312%" height="15" fill="rgb(229,124,44)" fg:x="75759" fg:w="24"/><text x="98.6230%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (23 samples, 0.03%)</title><rect x="98.3743%" y="1733" width="0.0299%" height="15" fill="rgb(210,187,22)" fg:x="75760" fg:w="23"/><text x="98.6243%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (23 samples, 0.03%)</title><rect x="98.3743%" y="1717" width="0.0299%" height="15" fill="rgb(212,115,40)" fg:x="75760" fg:w="23"/><text x="98.6243%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (23 samples, 0.03%)</title><rect x="98.3743%" y="1701" width="0.0299%" height="15" fill="rgb(210,2,54)" fg:x="75760" fg:w="23"/><text x="98.6243%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (23 samples, 0.03%)</title><rect x="98.3743%" y="1685" width="0.0299%" height="15" fill="rgb(227,168,43)" fg:x="75760" fg:w="23"/><text x="98.6243%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="98.3743%" y="1669" width="0.0299%" height="15" fill="rgb(249,92,8)" fg:x="75760" fg:w="23"/><text x="98.6243%" y="1679.50"></text></g><g><title>core::mem::drop (22 samples, 0.03%)</title><rect x="98.3756%" y="1653" width="0.0286%" height="15" fill="rgb(239,111,35)" fg:x="75761" fg:w="22"/><text x="98.6256%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (22 samples, 0.03%)</title><rect x="98.3756%" y="1637" width="0.0286%" height="15" fill="rgb(230,126,13)" fg:x="75761" fg:w="22"/><text x="98.6256%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="98.3756%" y="1621" width="0.0286%" height="15" fill="rgb(243,116,33)" fg:x="75761" fg:w="22"/><text x="98.6256%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (13 samples, 0.02%)</title><rect x="98.3873%" y="1605" width="0.0169%" height="15" fill="rgb(246,103,21)" fg:x="75770" fg:w="13"/><text x="98.6373%" y="1615.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (13 samples, 0.02%)</title><rect x="98.3873%" y="1589" width="0.0169%" height="15" fill="rgb(237,53,26)" fg:x="75770" fg:w="13"/><text x="98.6373%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (11 samples, 0.01%)</title><rect x="98.3899%" y="1573" width="0.0143%" height="15" fill="rgb(213,121,15)" fg:x="75772" fg:w="11"/><text x="98.6399%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="98.3899%" y="1557" width="0.0143%" height="15" fill="rgb(251,83,35)" fg:x="75772" fg:w="11"/><text x="98.6399%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="98.3899%" y="1541" width="0.0143%" height="15" fill="rgb(222,79,8)" fg:x="75772" fg:w="11"/><text x="98.6399%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="98.3899%" y="1525" width="0.0143%" height="15" fill="rgb(217,74,36)" fg:x="75772" fg:w="11"/><text x="98.6399%" y="1535.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="98.3899%" y="1509" width="0.0143%" height="15" fill="rgb(221,14,30)" fg:x="75772" fg:w="11"/><text x="98.6399%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (11 samples, 0.01%)</title><rect x="98.4041%" y="1749" width="0.0143%" height="15" fill="rgb(216,221,5)" fg:x="75783" fg:w="11"/><text x="98.6541%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (11 samples, 0.01%)</title><rect x="98.4041%" y="1733" width="0.0143%" height="15" fill="rgb(236,118,16)" fg:x="75783" fg:w="11"/><text x="98.6541%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::Transaction&gt;&gt; (15 samples, 0.02%)</title><rect x="98.4184%" y="1749" width="0.0195%" height="15" fill="rgb(243,91,43)" fg:x="75794" fg:w="15"/><text x="98.6684%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::Transaction&gt;&gt; (15 samples, 0.02%)</title><rect x="98.4184%" y="1733" width="0.0195%" height="15" fill="rgb(231,110,7)" fg:x="75794" fg:w="15"/><text x="98.6684%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::Transaction&gt;&gt; (12 samples, 0.02%)</title><rect x="98.4223%" y="1717" width="0.0156%" height="15" fill="rgb(217,80,6)" fg:x="75797" fg:w="12"/><text x="98.6723%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="98.4223%" y="1701" width="0.0156%" height="15" fill="rgb(251,116,7)" fg:x="75797" fg:w="12"/><text x="98.6723%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="98.4223%" y="1685" width="0.0156%" height="15" fill="rgb(236,70,22)" fg:x="75797" fg:w="12"/><text x="98.6723%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="98.4223%" y="1669" width="0.0156%" height="15" fill="rgb(245,13,10)" fg:x="75797" fg:w="12"/><text x="98.6723%" y="1679.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="98.4223%" y="1653" width="0.0156%" height="15" fill="rgb(233,146,34)" fg:x="75797" fg:w="12"/><text x="98.6723%" y="1663.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="98.4223%" y="1637" width="0.0156%" height="15" fill="rgb(241,196,34)" fg:x="75797" fg:w="12"/><text x="98.6723%" y="1647.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="98.4223%" y="1621" width="0.0156%" height="15" fill="rgb(207,150,20)" fg:x="75797" fg:w="12"/><text x="98.6723%" y="1631.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.02%)</title><rect x="98.4379%" y="1717" width="0.0169%" height="15" fill="rgb(251,27,52)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1727.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (13 samples, 0.02%)</title><rect x="98.4379%" y="1701" width="0.0169%" height="15" fill="rgb(221,76,2)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1711.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (13 samples, 0.02%)</title><rect x="98.4379%" y="1685" width="0.0169%" height="15" fill="rgb(242,94,41)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1695.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13 samples, 0.02%)</title><rect x="98.4379%" y="1669" width="0.0169%" height="15" fill="rgb(245,9,8)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1679.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13 samples, 0.02%)</title><rect x="98.4379%" y="1653" width="0.0169%" height="15" fill="rgb(236,139,26)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1663.50"></text></g><g><title>once_cell::imp::initialize_or_wait (13 samples, 0.02%)</title><rect x="98.4379%" y="1637" width="0.0169%" height="15" fill="rgb(249,11,18)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1647.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.02%)</title><rect x="98.4379%" y="1621" width="0.0169%" height="15" fill="rgb(206,175,35)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1631.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (13 samples, 0.02%)</title><rect x="98.4379%" y="1605" width="0.0169%" height="15" fill="rgb(231,3,46)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1615.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (13 samples, 0.02%)</title><rect x="98.4379%" y="1589" width="0.0169%" height="15" fill="rgb(243,27,8)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1599.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (13 samples, 0.02%)</title><rect x="98.4379%" y="1573" width="0.0169%" height="15" fill="rgb(223,53,13)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1583.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="98.4379%" y="1557" width="0.0169%" height="15" fill="rgb(248,68,15)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1567.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="98.4379%" y="1541" width="0.0169%" height="15" fill="rgb(216,61,26)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1551.50"></text></g><g><title>aptos_language_e2e_tests::compile::PRECOMPILED_APTOS_FRAMEWORK::{{closure}} (13 samples, 0.02%)</title><rect x="98.4379%" y="1525" width="0.0169%" height="15" fill="rgb(213,201,24)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1535.50"></text></g><g><title>move_compiler::command_line::compiler::construct_pre_compiled_lib (13 samples, 0.02%)</title><rect x="98.4379%" y="1509" width="0.0169%" height="15" fill="rgb(214,20,17)" fg:x="75809" fg:w="13"/><text x="98.6879%" y="1519.50"></text></g><g><title>aptos_language_e2e_tests::compile::compile_source_module (16 samples, 0.02%)</title><rect x="98.4379%" y="1733" width="0.0208%" height="15" fill="rgb(206,21,46)" fg:x="75809" fg:w="16"/><text x="98.6879%" y="1743.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_transaction_block (8 samples, 0.01%)</title><rect x="98.4587%" y="1701" width="0.0104%" height="15" fill="rgb(234,222,24)" fg:x="75825" fg:w="8"/><text x="98.7087%" y="1711.50"></text></g><g><title>run_benchmark::create_module (25 samples, 0.03%)</title><rect x="98.4379%" y="1749" width="0.0325%" height="15" fill="rgb(221,25,26)" fg:x="75809" fg:w="25"/><text x="98.6879%" y="1759.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_and_apply (9 samples, 0.01%)</title><rect x="98.4587%" y="1733" width="0.0117%" height="15" fill="rgb(241,148,26)" fg:x="75825" fg:w="9"/><text x="98.7087%" y="1743.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_block (9 samples, 0.01%)</title><rect x="98.4587%" y="1717" width="0.0117%" height="15" fill="rgb(248,119,35)" fg:x="75825" fg:w="9"/><text x="98.7087%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="98.4808%" y="1381" width="0.0143%" height="15" fill="rgb(239,126,23)" fg:x="75842" fg:w="11"/><text x="98.7308%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.01%)</title><rect x="98.4821%" y="1365" width="0.0130%" height="15" fill="rgb(247,120,25)" fg:x="75843" fg:w="10"/><text x="98.7321%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.01%)</title><rect x="98.4821%" y="1349" width="0.0130%" height="15" fill="rgb(220,93,32)" fg:x="75843" fg:w="10"/><text x="98.7321%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.01%)</title><rect x="98.4821%" y="1333" width="0.0130%" height="15" fill="rgb(236,46,26)" fg:x="75843" fg:w="10"/><text x="98.7321%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="98.4808%" y="1445" width="0.0156%" height="15" fill="rgb(229,20,45)" fg:x="75842" fg:w="12"/><text x="98.7308%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.02%)</title><rect x="98.4808%" y="1429" width="0.0156%" height="15" fill="rgb(225,168,41)" fg:x="75842" fg:w="12"/><text x="98.7308%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.02%)</title><rect x="98.4808%" y="1413" width="0.0156%" height="15" fill="rgb(253,123,20)" fg:x="75842" fg:w="12"/><text x="98.7308%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.02%)</title><rect x="98.4808%" y="1397" width="0.0156%" height="15" fill="rgb(244,17,29)" fg:x="75842" fg:w="12"/><text x="98.7308%" y="1407.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="98.4795%" y="1493" width="0.0390%" height="15" fill="rgb(242,196,24)" fg:x="75841" fg:w="30"/><text x="98.7295%" y="1503.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="98.4795%" y="1477" width="0.0390%" height="15" fill="rgb(210,113,45)" fg:x="75841" fg:w="30"/><text x="98.7295%" y="1487.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="98.4795%" y="1461" width="0.0390%" height="15" fill="rgb(205,129,3)" fg:x="75841" fg:w="30"/><text x="98.7295%" y="1471.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="98.5002%" y="1445" width="0.0182%" height="15" fill="rgb(232,74,10)" fg:x="75857" fg:w="14"/><text x="98.7502%" y="1455.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="98.5002%" y="1429" width="0.0182%" height="15" fill="rgb(251,63,43)" fg:x="75857" fg:w="14"/><text x="98.7502%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="98.5002%" y="1413" width="0.0182%" height="15" fill="rgb(228,215,15)" fg:x="75857" fg:w="14"/><text x="98.7502%" y="1423.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.02%)</title><rect x="98.5002%" y="1397" width="0.0182%" height="15" fill="rgb(233,179,38)" fg:x="75857" fg:w="14"/><text x="98.7502%" y="1407.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (14 samples, 0.02%)</title><rect x="98.5002%" y="1381" width="0.0182%" height="15" fill="rgb(227,187,9)" fg:x="75857" fg:w="14"/><text x="98.7502%" y="1391.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="98.5054%" y="1365" width="0.0130%" height="15" fill="rgb(231,89,27)" fg:x="75861" fg:w="10"/><text x="98.7554%" y="1375.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="98.5054%" y="1349" width="0.0130%" height="15" fill="rgb(225,117,1)" fg:x="75861" fg:w="10"/><text x="98.7554%" y="1359.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="98.4795%" y="1509" width="0.0416%" height="15" fill="rgb(239,120,49)" fg:x="75841" fg:w="32"/><text x="98.7295%" y="1519.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.05%)</title><rect x="98.4782%" y="1733" width="0.0454%" height="15" fill="rgb(236,137,37)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1743.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (35 samples, 0.05%)</title><rect x="98.4782%" y="1717" width="0.0454%" height="15" fill="rgb(239,73,42)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1727.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 0.05%)</title><rect x="98.4782%" y="1701" width="0.0454%" height="15" fill="rgb(207,169,6)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1711.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (35 samples, 0.05%)</title><rect x="98.4782%" y="1685" width="0.0454%" height="15" fill="rgb(228,171,10)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 0.05%)</title><rect x="98.4782%" y="1669" width="0.0454%" height="15" fill="rgb(217,228,47)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.05%)</title><rect x="98.4782%" y="1653" width="0.0454%" height="15" fill="rgb(227,116,17)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.05%)</title><rect x="98.4782%" y="1637" width="0.0454%" height="15" fill="rgb(245,128,36)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.05%)</title><rect x="98.4782%" y="1621" width="0.0454%" height="15" fill="rgb(221,139,3)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.05%)</title><rect x="98.4782%" y="1605" width="0.0454%" height="15" fill="rgb(207,59,54)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.05%)</title><rect x="98.4782%" y="1589" width="0.0454%" height="15" fill="rgb(231,129,12)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1599.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.05%)</title><rect x="98.4782%" y="1573" width="0.0454%" height="15" fill="rgb(235,49,17)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (35 samples, 0.05%)</title><rect x="98.4782%" y="1557" width="0.0454%" height="15" fill="rgb(229,175,11)" fg:x="75840" fg:w="35"/><text x="98.7282%" y="1567.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.04%)</title><rect x="98.4795%" y="1541" width="0.0441%" height="15" fill="rgb(206,187,30)" fg:x="75841" fg:w="34"/><text x="98.7295%" y="1551.50"></text></g><g><title>core::iter::adapters::cloned::clone_try_fold::{{closure}} (34 samples, 0.04%)</title><rect x="98.4795%" y="1525" width="0.0441%" height="15" fill="rgb(214,39,19)" fg:x="75841" fg:w="34"/><text x="98.7295%" y="1535.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PrivateKey as core::clone::Clone&gt;::clone (27 samples, 0.04%)</title><rect x="98.5639%" y="1653" width="0.0351%" height="15" fill="rgb(243,92,46)" fg:x="75906" fg:w="27"/><text x="98.8139%" y="1663.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (25 samples, 0.03%)</title><rect x="98.5665%" y="1637" width="0.0325%" height="15" fill="rgb(240,125,36)" fg:x="75908" fg:w="25"/><text x="98.8165%" y="1647.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_keys::Ed25519PublicKey as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="98.5989%" y="1653" width="0.0182%" height="15" fill="rgb(217,193,45)" fg:x="75933" fg:w="14"/><text x="98.8489%" y="1663.50"></text></g><g><title>&lt;ed25519_dalek::public::PublicKey as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="98.5989%" y="1637" width="0.0182%" height="15" fill="rgb(230,127,16)" fg:x="75933" fg:w="14"/><text x="98.8489%" y="1647.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="98.6015%" y="1621" width="0.0156%" height="15" fill="rgb(208,161,0)" fg:x="75935" fg:w="12"/><text x="98.8515%" y="1631.50"></text></g><g><title>&lt;aptos_language_e2e_tests::account::Account as core::clone::Clone&gt;::clone (89 samples, 0.12%)</title><rect x="98.5236%" y="1669" width="0.1156%" height="15" fill="rgb(251,69,39)" fg:x="75875" fg:w="89"/><text x="98.7736%" y="1679.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="98.6171%" y="1653" width="0.0221%" height="15" fill="rgb(229,86,22)" fg:x="75947" fg:w="17"/><text x="98.8671%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (119 samples, 0.15%)</title><rect x="98.5236%" y="1733" width="0.1545%" height="15" fill="rgb(223,67,43)" fg:x="75875" fg:w="119"/><text x="98.7736%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (119 samples, 0.15%)</title><rect x="98.5236%" y="1717" width="0.1545%" height="15" fill="rgb(254,80,31)" fg:x="75875" fg:w="119"/><text x="98.7736%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (119 samples, 0.15%)</title><rect x="98.5236%" y="1701" width="0.1545%" height="15" fill="rgb(225,149,52)" fg:x="75875" fg:w="119"/><text x="98.7736%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (119 samples, 0.15%)</title><rect x="98.5236%" y="1685" width="0.1545%" height="15" fill="rgb(214,169,18)" fg:x="75875" fg:w="119"/><text x="98.7736%" y="1695.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (25 samples, 0.03%)</title><rect x="98.6457%" y="1669" width="0.0325%" height="15" fill="rgb(236,224,43)" fg:x="75969" fg:w="25"/><text x="98.8957%" y="1679.50"></text></g><g><title>[libc.so.6] (25 samples, 0.03%)</title><rect x="98.6457%" y="1653" width="0.0325%" height="15" fill="rgb(251,125,34)" fg:x="75969" fg:w="25"/><text x="98.8957%" y="1663.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="98.6846%" y="1605" width="0.0195%" height="15" fill="rgb(224,39,44)" fg:x="75999" fg:w="15"/><text x="98.9346%" y="1615.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="98.6846%" y="1589" width="0.0195%" height="15" fill="rgb(206,111,46)" fg:x="75999" fg:w="15"/><text x="98.9346%" y="1599.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="98.6846%" y="1621" width="0.0221%" height="15" fill="rgb(227,147,50)" fg:x="75999" fg:w="17"/><text x="98.9346%" y="1631.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="98.6846%" y="1653" width="0.0247%" height="15" fill="rgb(239,144,36)" fg:x="75999" fg:w="19"/><text x="98.9346%" y="1663.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="98.6846%" y="1637" width="0.0247%" height="15" fill="rgb(216,17,19)" fg:x="75999" fg:w="19"/><text x="98.9346%" y="1647.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionRegister&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="98.6846%" y="1733" width="0.0260%" height="15" fill="rgb(211,192,29)" fg:x="75999" fg:w="20"/><text x="98.9346%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="98.6846%" y="1717" width="0.0260%" height="15" fill="rgb(238,195,20)" fg:x="75999" fg:w="20"/><text x="98.9346%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.03%)</title><rect x="98.6846%" y="1701" width="0.0260%" height="15" fill="rgb(213,210,42)" fg:x="75999" fg:w="20"/><text x="98.9346%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.03%)</title><rect x="98.6846%" y="1685" width="0.0260%" height="15" fill="rgb(244,4,49)" fg:x="75999" fg:w="20"/><text x="98.9346%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.03%)</title><rect x="98.6846%" y="1669" width="0.0260%" height="15" fill="rgb(254,106,42)" fg:x="75999" fg:w="20"/><text x="98.9346%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="98.7171%" y="1717" width="0.0221%" height="15" fill="rgb(222,182,12)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1727.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="98.7171%" y="1701" width="0.0221%" height="15" fill="rgb(228,160,15)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="98.7171%" y="1685" width="0.0221%" height="15" fill="rgb(243,149,43)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1695.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.02%)</title><rect x="98.7171%" y="1669" width="0.0221%" height="15" fill="rgb(245,150,32)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1679.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (17 samples, 0.02%)</title><rect x="98.7171%" y="1653" width="0.0221%" height="15" fill="rgb(205,43,19)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1663.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (17 samples, 0.02%)</title><rect x="98.7171%" y="1637" width="0.0221%" height="15" fill="rgb(249,189,35)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (17 samples, 0.02%)</title><rect x="98.7171%" y="1621" width="0.0221%" height="15" fill="rgb(223,9,0)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (17 samples, 0.02%)</title><rect x="98.7171%" y="1605" width="0.0221%" height="15" fill="rgb(213,142,45)" fg:x="76024" fg:w="17"/><text x="98.9671%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="98.7586%" y="1669" width="0.0104%" height="15" fill="rgb(208,148,2)" fg:x="76056" fg:w="8"/><text x="99.0086%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="98.7586%" y="1653" width="0.0104%" height="15" fill="rgb(207,191,42)" fg:x="76056" fg:w="8"/><text x="99.0086%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="98.7586%" y="1637" width="0.0104%" height="15" fill="rgb(215,218,38)" fg:x="76056" fg:w="8"/><text x="99.0086%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="98.7586%" y="1621" width="0.0104%" height="15" fill="rgb(223,195,24)" fg:x="76056" fg:w="8"/><text x="99.0086%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.01%)</title><rect x="98.7586%" y="1605" width="0.0104%" height="15" fill="rgb(254,60,30)" fg:x="76056" fg:w="8"/><text x="99.0086%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="98.7586%" y="1589" width="0.0104%" height="15" fill="rgb(223,2,9)" fg:x="76056" fg:w="8"/><text x="99.0086%" y="1599.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="98.7586%" y="1573" width="0.0104%" height="15" fill="rgb(253,134,46)" fg:x="76056" fg:w="8"/><text x="99.0086%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="98.7457%" y="1717" width="0.0260%" height="15" fill="rgb(206,209,20)" fg:x="76046" fg:w="20"/><text x="98.9957%" y="1727.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="98.7469%" y="1701" width="0.0247%" height="15" fill="rgb(253,104,42)" fg:x="76047" fg:w="19"/><text x="98.9969%" y="1711.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="98.7586%" y="1685" width="0.0130%" height="15" fill="rgb(223,47,23)" fg:x="76056" fg:w="10"/><text x="99.0086%" y="1695.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (22 samples, 0.03%)</title><rect x="98.7859%" y="1605" width="0.0286%" height="15" fill="rgb(247,148,44)" fg:x="76077" fg:w="22"/><text x="99.0359%" y="1615.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (22 samples, 0.03%)</title><rect x="98.7859%" y="1589" width="0.0286%" height="15" fill="rgb(221,224,16)" fg:x="76077" fg:w="22"/><text x="99.0359%" y="1599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.03%)</title><rect x="98.7859%" y="1573" width="0.0286%" height="15" fill="rgb(252,103,29)" fg:x="76077" fg:w="22"/><text x="99.0359%" y="1583.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKeyInner as core::cmp::PartialEq&gt;::eq (22 samples, 0.03%)</title><rect x="98.7859%" y="1557" width="0.0286%" height="15" fill="rgb(244,185,34)" fg:x="76077" fg:w="22"/><text x="99.0359%" y="1567.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="98.8002%" y="1541" width="0.0143%" height="15" fill="rgb(218,18,50)" fg:x="76088" fg:w="11"/><text x="99.0502%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (24 samples, 0.03%)</title><rect x="98.7859%" y="1621" width="0.0312%" height="15" fill="rgb(234,105,8)" fg:x="76077" fg:w="24"/><text x="99.0359%" y="1631.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::set (48 samples, 0.06%)</title><rect x="98.7716%" y="1717" width="0.0623%" height="15" fill="rgb(249,51,19)" fg:x="76066" fg:w="48"/><text x="99.0216%" y="1727.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (48 samples, 0.06%)</title><rect x="98.7716%" y="1701" width="0.0623%" height="15" fill="rgb(233,132,7)" fg:x="76066" fg:w="48"/><text x="99.0216%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (48 samples, 0.06%)</title><rect x="98.7716%" y="1685" width="0.0623%" height="15" fill="rgb(229,181,43)" fg:x="76066" fg:w="48"/><text x="99.0216%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (37 samples, 0.05%)</title><rect x="98.7859%" y="1669" width="0.0480%" height="15" fill="rgb(223,20,7)" fg:x="76077" fg:w="37"/><text x="99.0359%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (37 samples, 0.05%)</title><rect x="98.7859%" y="1653" width="0.0480%" height="15" fill="rgb(245,13,34)" fg:x="76077" fg:w="37"/><text x="99.0359%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (37 samples, 0.05%)</title><rect x="98.7859%" y="1637" width="0.0480%" height="15" fill="rgb(242,0,53)" fg:x="76077" fg:w="37"/><text x="99.0359%" y="1647.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.02%)</title><rect x="98.8171%" y="1621" width="0.0169%" height="15" fill="rgb(233,115,19)" fg:x="76101" fg:w="13"/><text x="99.0671%" y="1631.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.02%)</title><rect x="98.8171%" y="1605" width="0.0169%" height="15" fill="rgb(216,170,26)" fg:x="76101" fg:w="13"/><text x="99.0671%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="98.8171%" y="1589" width="0.0169%" height="15" fill="rgb(233,13,0)" fg:x="76101" fg:w="13"/><text x="99.0671%" y="1599.50"></text></g><g><title>aptos_language_e2e_tests::data_store::FakeDataStore::add_write_set (96 samples, 0.12%)</title><rect x="98.7106%" y="1733" width="0.1247%" height="15" fill="rgb(228,79,21)" fg:x="76019" fg:w="96"/><text x="98.9606%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.02%)</title><rect x="98.8378%" y="1669" width="0.0182%" height="15" fill="rgb(244,17,41)" fg:x="76117" fg:w="14"/><text x="99.0878%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="98.8378%" y="1653" width="0.0182%" height="15" fill="rgb(253,152,11)" fg:x="76117" fg:w="14"/><text x="99.0878%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.02%)</title><rect x="98.8378%" y="1637" width="0.0182%" height="15" fill="rgb(254,94,47)" fg:x="76117" fg:w="14"/><text x="99.0878%" y="1647.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%)</title><rect x="98.8378%" y="1621" width="0.0182%" height="15" fill="rgb(239,66,43)" fg:x="76117" fg:w="14"/><text x="99.0878%" y="1631.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="98.8378%" y="1605" width="0.0182%" height="15" fill="rgb(251,25,22)" fg:x="76117" fg:w="14"/><text x="99.0878%" y="1615.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_block (40 samples, 0.05%)</title><rect x="98.8378%" y="1701" width="0.0519%" height="15" fill="rgb(227,65,46)" fg:x="76117" fg:w="40"/><text x="99.0878%" y="1711.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_parallel (40 samples, 0.05%)</title><rect x="98.8378%" y="1685" width="0.0519%" height="15" fill="rgb(240,180,32)" fg:x="76117" fg:w="40"/><text x="99.0878%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="98.9002%" y="1461" width="0.0130%" height="15" fill="rgb(242,11,35)" fg:x="76165" fg:w="10"/><text x="99.1502%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="98.9002%" y="1445" width="0.0130%" height="15" fill="rgb(221,41,49)" fg:x="76165" fg:w="10"/><text x="99.1502%" y="1455.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="98.9002%" y="1429" width="0.0130%" height="15" fill="rgb(253,80,52)" fg:x="76165" fg:w="10"/><text x="99.1502%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="98.9002%" y="1557" width="0.0156%" height="15" fill="rgb(232,152,28)" fg:x="76165" fg:w="12"/><text x="99.1502%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="98.9002%" y="1541" width="0.0156%" height="15" fill="rgb(219,110,12)" fg:x="76165" fg:w="12"/><text x="99.1502%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (12 samples, 0.02%)</title><rect x="98.9002%" y="1525" width="0.0156%" height="15" fill="rgb(218,98,43)" fg:x="76165" fg:w="12"/><text x="99.1502%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.02%)</title><rect x="98.9002%" y="1509" width="0.0156%" height="15" fill="rgb(253,96,49)" fg:x="76165" fg:w="12"/><text x="99.1502%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.02%)</title><rect x="98.9002%" y="1493" width="0.0156%" height="15" fill="rgb(238,132,17)" fg:x="76165" fg:w="12"/><text x="99.1502%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="98.9002%" y="1477" width="0.0156%" height="15" fill="rgb(208,82,25)" fg:x="76165" fg:w="12"/><text x="99.1502%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::Transaction&gt; (22 samples, 0.03%)</title><rect x="98.8950%" y="1637" width="0.0286%" height="15" fill="rgb(237,77,13)" fg:x="76161" fg:w="22"/><text x="99.1450%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (19 samples, 0.02%)</title><rect x="98.8989%" y="1621" width="0.0247%" height="15" fill="rgb(230,6,11)" fg:x="76164" fg:w="19"/><text x="99.1489%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (18 samples, 0.02%)</title><rect x="98.9002%" y="1605" width="0.0234%" height="15" fill="rgb(207,29,48)" fg:x="76165" fg:w="18"/><text x="99.1502%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (18 samples, 0.02%)</title><rect x="98.9002%" y="1589" width="0.0234%" height="15" fill="rgb(247,105,22)" fg:x="76165" fg:w="18"/><text x="99.1502%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (18 samples, 0.02%)</title><rect x="98.9002%" y="1573" width="0.0234%" height="15" fill="rgb(223,114,44)" fg:x="76165" fg:w="18"/><text x="99.1502%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="98.8950%" y="1669" width="0.0299%" height="15" fill="rgb(242,3,46)" fg:x="76161" fg:w="23"/><text x="99.1450%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::Transaction]&gt; (23 samples, 0.03%)</title><rect x="98.8950%" y="1653" width="0.0299%" height="15" fill="rgb(243,197,8)" fg:x="76161" fg:w="23"/><text x="99.1450%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::Transaction&gt;&gt; (39 samples, 0.05%)</title><rect x="98.8950%" y="1701" width="0.0506%" height="15" fill="rgb(238,171,27)" fg:x="76161" fg:w="39"/><text x="99.1450%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::Transaction&gt;&gt; (39 samples, 0.05%)</title><rect x="98.8950%" y="1685" width="0.0506%" height="15" fill="rgb(254,144,27)" fg:x="76161" fg:w="39"/><text x="99.1450%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::Transaction&gt;&gt; (16 samples, 0.02%)</title><rect x="98.9248%" y="1669" width="0.0208%" height="15" fill="rgb(216,203,36)" fg:x="76184" fg:w="16"/><text x="99.1748%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="98.9248%" y="1653" width="0.0208%" height="15" fill="rgb(247,27,26)" fg:x="76184" fg:w="16"/><text x="99.1748%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="98.9248%" y="1637" width="0.0208%" height="15" fill="rgb(234,180,24)" fg:x="76184" fg:w="16"/><text x="99.1748%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="98.9248%" y="1621" width="0.0208%" height="15" fill="rgb(221,50,43)" fg:x="76184" fg:w="16"/><text x="99.1748%" y="1631.50"></text></g><g><title>cfree (16 samples, 0.02%)</title><rect x="98.9248%" y="1605" width="0.0208%" height="15" fill="rgb(236,50,6)" fg:x="76184" fg:w="16"/><text x="99.1748%" y="1615.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="98.9248%" y="1589" width="0.0208%" height="15" fill="rgb(245,172,32)" fg:x="76184" fg:w="16"/><text x="99.1748%" y="1599.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="98.9248%" y="1573" width="0.0208%" height="15" fill="rgb(207,54,46)" fg:x="76184" fg:w="16"/><text x="99.1748%" y="1583.50"></text></g><g><title>aptos_language_e2e_tests::executor::FakeExecutor::execute_transaction_block_parallel (92 samples, 0.12%)</title><rect x="98.8365%" y="1733" width="0.1195%" height="15" fill="rgb(218,67,44)" fg:x="76116" fg:w="92"/><text x="99.0865%" y="1743.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block (92 samples, 0.12%)</title><rect x="98.8365%" y="1717" width="0.1195%" height="15" fill="rgb(208,152,22)" fg:x="76116" fg:w="92"/><text x="99.0865%" y="1727.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install (8 samples, 0.01%)</title><rect x="98.9456%" y="1701" width="0.0104%" height="15" fill="rgb(243,177,0)" fg:x="76200" fg:w="8"/><text x="99.1956%" y="1711.50"></text></g><g><title>rayon_core::registry::Registry::in_worker (8 samples, 0.01%)</title><rect x="98.9456%" y="1685" width="0.0104%" height="15" fill="rgb(212,75,12)" fg:x="76200" fg:w="8"/><text x="99.1956%" y="1695.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold (8 samples, 0.01%)</title><rect x="98.9456%" y="1669" width="0.0104%" height="15" fill="rgb(212,129,29)" fg:x="76200" fg:w="8"/><text x="99.1956%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.01%)</title><rect x="98.9456%" y="1653" width="0.0104%" height="15" fill="rgb(241,229,35)" fg:x="76200" fg:w="8"/><text x="99.1956%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.01%)</title><rect x="98.9456%" y="1637" width="0.0104%" height="15" fill="rgb(232,49,32)" fg:x="76200" fg:w="8"/><text x="99.1956%" y="1647.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}} (8 samples, 0.01%)</title><rect x="98.9456%" y="1621" width="0.0104%" height="15" fill="rgb(243,119,48)" fg:x="76200" fg:w="8"/><text x="99.1956%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="98.9586%" y="1525" width="0.0104%" height="15" fill="rgb(212,205,30)" fg:x="76210" fg:w="8"/><text x="99.2086%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="98.9586%" y="1589" width="0.0117%" height="15" fill="rgb(218,175,42)" fg:x="76210" fg:w="9"/><text x="99.2086%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="98.9586%" y="1573" width="0.0117%" height="15" fill="rgb(230,156,27)" fg:x="76210" fg:w="9"/><text x="99.2086%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="98.9586%" y="1557" width="0.0117%" height="15" fill="rgb(254,32,43)" fg:x="76210" fg:w="9"/><text x="99.2086%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="98.9586%" y="1541" width="0.0117%" height="15" fill="rgb(246,89,34)" fg:x="76210" fg:w="9"/><text x="99.2086%" y="1551.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="98.9586%" y="1637" width="0.0221%" height="15" fill="rgb(247,162,17)" fg:x="76210" fg:w="17"/><text x="99.2086%" y="1647.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="98.9586%" y="1621" width="0.0221%" height="15" fill="rgb(219,71,37)" fg:x="76210" fg:w="17"/><text x="99.2086%" y="1631.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="98.9586%" y="1605" width="0.0221%" height="15" fill="rgb(210,184,7)" fg:x="76210" fg:w="17"/><text x="99.2086%" y="1615.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="98.9573%" y="1653" width="0.0260%" height="15" fill="rgb(245,16,32)" fg:x="76209" fg:w="20"/><text x="99.2073%" y="1663.50"></text></g><g><title>aptos_types::transaction::TransactionRegister&lt;T&gt;::map_par_txns (23 samples, 0.03%)</title><rect x="98.9573%" y="1733" width="0.0299%" height="15" fill="rgb(209,62,7)" fg:x="76209" fg:w="23"/><text x="99.2073%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="98.9573%" y="1717" width="0.0299%" height="15" fill="rgb(215,16,15)" fg:x="76209" fg:w="23"/><text x="99.2073%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.03%)</title><rect x="98.9573%" y="1701" width="0.0299%" height="15" fill="rgb(223,60,14)" fg:x="76209" fg:w="23"/><text x="99.2073%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.03%)</title><rect x="98.9573%" y="1685" width="0.0299%" height="15" fill="rgb(244,134,12)" fg:x="76209" fg:w="23"/><text x="99.2073%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.03%)</title><rect x="98.9573%" y="1669" width="0.0299%" height="15" fill="rgb(224,3,41)" fg:x="76209" fg:w="23"/><text x="99.2073%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="98.9911%" y="1621" width="0.0117%" height="15" fill="rgb(213,84,2)" fg:x="76235" fg:w="9"/><text x="99.2411%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="98.9911%" y="1605" width="0.0117%" height="15" fill="rgb(213,216,27)" fg:x="76235" fg:w="9"/><text x="99.2411%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (9 samples, 0.01%)</title><rect x="98.9911%" y="1589" width="0.0117%" height="15" fill="rgb(218,76,35)" fg:x="76235" fg:w="9"/><text x="99.2411%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="98.9911%" y="1573" width="0.0117%" height="15" fill="rgb(253,89,24)" fg:x="76235" fg:w="9"/><text x="99.2411%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="98.9911%" y="1557" width="0.0117%" height="15" fill="rgb(217,188,40)" fg:x="76235" fg:w="9"/><text x="99.2411%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="98.9911%" y="1541" width="0.0117%" height="15" fill="rgb(237,79,38)" fg:x="76235" fg:w="9"/><text x="99.2411%" y="1551.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="98.9872%" y="1717" width="0.0325%" height="15" fill="rgb(215,116,13)" fg:x="76232" fg:w="25"/><text x="99.2372%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::SignedTransaction]&gt; (25 samples, 0.03%)</title><rect x="98.9872%" y="1701" width="0.0325%" height="15" fill="rgb(249,66,35)" fg:x="76232" fg:w="25"/><text x="99.2372%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (25 samples, 0.03%)</title><rect x="98.9872%" y="1685" width="0.0325%" height="15" fill="rgb(253,86,18)" fg:x="76232" fg:w="25"/><text x="99.2372%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (25 samples, 0.03%)</title><rect x="98.9872%" y="1669" width="0.0325%" height="15" fill="rgb(209,175,36)" fg:x="76232" fg:w="25"/><text x="99.2372%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (25 samples, 0.03%)</title><rect x="98.9872%" y="1653" width="0.0325%" height="15" fill="rgb(253,149,3)" fg:x="76232" fg:w="25"/><text x="99.2372%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (22 samples, 0.03%)</title><rect x="98.9911%" y="1637" width="0.0286%" height="15" fill="rgb(242,124,49)" fg:x="76235" fg:w="22"/><text x="99.2411%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (12 samples, 0.02%)</title><rect x="99.0041%" y="1621" width="0.0156%" height="15" fill="rgb(219,171,24)" fg:x="76245" fg:w="12"/><text x="99.2541%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (12 samples, 0.02%)</title><rect x="99.0041%" y="1605" width="0.0156%" height="15" fill="rgb(216,121,30)" fg:x="76245" fg:w="12"/><text x="99.2541%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (12 samples, 0.02%)</title><rect x="99.0041%" y="1589" width="0.0156%" height="15" fill="rgb(234,165,21)" fg:x="76245" fg:w="12"/><text x="99.2541%" y="1599.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.02%)</title><rect x="99.0041%" y="1573" width="0.0156%" height="15" fill="rgb(234,103,40)" fg:x="76245" fg:w="12"/><text x="99.2541%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="99.0041%" y="1557" width="0.0156%" height="15" fill="rgb(250,137,24)" fg:x="76245" fg:w="12"/><text x="99.2541%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="99.0041%" y="1541" width="0.0156%" height="15" fill="rgb(253,22,21)" fg:x="76245" fg:w="12"/><text x="99.2541%" y="1551.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="99.0041%" y="1525" width="0.0156%" height="15" fill="rgb(243,22,5)" fg:x="76245" fg:w="12"/><text x="99.2541%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (42 samples, 0.05%)</title><rect x="98.9872%" y="1733" width="0.0545%" height="15" fill="rgb(212,56,7)" fg:x="76232" fg:w="42"/><text x="99.2372%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (17 samples, 0.02%)</title><rect x="99.0196%" y="1717" width="0.0221%" height="15" fill="rgb(223,190,49)" fg:x="76257" fg:w="17"/><text x="99.2696%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="99.0196%" y="1701" width="0.0221%" height="15" fill="rgb(221,110,35)" fg:x="76257" fg:w="17"/><text x="99.2696%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="99.0196%" y="1685" width="0.0221%" height="15" fill="rgb(212,113,34)" fg:x="76257" fg:w="17"/><text x="99.2696%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="99.0196%" y="1669" width="0.0221%" height="15" fill="rgb(216,125,47)" fg:x="76257" fg:w="17"/><text x="99.2696%" y="1679.50"></text></g><g><title>cfree (17 samples, 0.02%)</title><rect x="99.0196%" y="1653" width="0.0221%" height="15" fill="rgb(251,112,19)" fg:x="76257" fg:w="17"/><text x="99.2696%" y="1663.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="99.0196%" y="1637" width="0.0221%" height="15" fill="rgb(254,200,41)" fg:x="76257" fg:w="17"/><text x="99.2696%" y="1647.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="99.0196%" y="1621" width="0.0221%" height="15" fill="rgb(225,17,42)" fg:x="76257" fg:w="17"/><text x="99.2696%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;aptos_types::transaction::TransactionOutput&gt;&gt; (16 samples, 0.02%)</title><rect x="99.0417%" y="1733" width="0.0208%" height="15" fill="rgb(208,105,35)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1743.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="99.0417%" y="1717" width="0.0208%" height="15" fill="rgb(210,125,51)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;aptos_types::transaction::TransactionOutput,alloc::alloc::Global&gt;&gt; (16 samples, 0.02%)</title><rect x="99.0417%" y="1701" width="0.0208%" height="15" fill="rgb(227,213,18)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1711.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="99.0417%" y="1685" width="0.0208%" height="15" fill="rgb(221,174,32)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::TransactionOutput&gt;&gt; (16 samples, 0.02%)</title><rect x="99.0417%" y="1669" width="0.0208%" height="15" fill="rgb(234,23,1)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="99.0417%" y="1653" width="0.0208%" height="15" fill="rgb(209,65,17)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="99.0417%" y="1637" width="0.0208%" height="15" fill="rgb(206,224,31)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="99.0417%" y="1621" width="0.0208%" height="15" fill="rgb(230,20,38)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1631.50"></text></g><g><title>cfree (16 samples, 0.02%)</title><rect x="99.0417%" y="1605" width="0.0208%" height="15" fill="rgb(211,9,41)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1615.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="99.0417%" y="1589" width="0.0208%" height="15" fill="rgb(233,214,4)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1599.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="99.0417%" y="1573" width="0.0208%" height="15" fill="rgb(225,60,54)" fg:x="76274" fg:w="16"/><text x="99.2917%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (20 samples, 0.03%)</title><rect x="99.0625%" y="1573" width="0.0260%" height="15" fill="rgb(206,228,35)" fg:x="76290" fg:w="20"/><text x="99.3125%" y="1583.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (20 samples, 0.03%)</title><rect x="99.0625%" y="1557" width="0.0260%" height="15" fill="rgb(212,178,50)" fg:x="76290" fg:w="20"/><text x="99.3125%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (20 samples, 0.03%)</title><rect x="99.0625%" y="1541" width="0.0260%" height="15" fill="rgb(206,192,33)" fg:x="76290" fg:w="20"/><text x="99.3125%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="99.0625%" y="1525" width="0.0260%" height="15" fill="rgb(238,210,1)" fg:x="76290" fg:w="20"/><text x="99.3125%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.03%)</title><rect x="99.0625%" y="1509" width="0.0260%" height="15" fill="rgb(205,65,52)" fg:x="76290" fg:w="20"/><text x="99.3125%" y="1519.50"></text></g><g><title>cfree (20 samples, 0.03%)</title><rect x="99.0625%" y="1493" width="0.0260%" height="15" fill="rgb(237,204,51)" fg:x="76290" fg:w="20"/><text x="99.3125%" y="1503.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="99.0664%" y="1477" width="0.0221%" height="15" fill="rgb(213,119,51)" fg:x="76293" fg:w="17"/><text x="99.3164%" y="1487.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="99.0768%" y="1461" width="0.0117%" height="15" fill="rgb(244,156,37)" fg:x="76301" fg:w="9"/><text x="99.3268%" y="1471.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (21 samples, 0.03%)</title><rect x="99.0625%" y="1589" width="0.0273%" height="15" fill="rgb(249,96,18)" fg:x="76290" fg:w="21"/><text x="99.3125%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionOutput&gt; (40 samples, 0.05%)</title><rect x="99.0625%" y="1733" width="0.0519%" height="15" fill="rgb(231,65,11)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (40 samples, 0.05%)</title><rect x="99.0625%" y="1717" width="0.0519%" height="15" fill="rgb(240,187,2)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (40 samples, 0.05%)</title><rect x="99.0625%" y="1701" width="0.0519%" height="15" fill="rgb(242,121,39)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (40 samples, 0.05%)</title><rect x="99.0625%" y="1685" width="0.0519%" height="15" fill="rgb(233,205,18)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (40 samples, 0.05%)</title><rect x="99.0625%" y="1669" width="0.0519%" height="15" fill="rgb(219,67,33)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.05%)</title><rect x="99.0625%" y="1653" width="0.0519%" height="15" fill="rgb(227,84,12)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1663.50"></text></g><g><title>core::mem::drop (40 samples, 0.05%)</title><rect x="99.0625%" y="1637" width="0.0519%" height="15" fill="rgb(227,42,52)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (40 samples, 0.05%)</title><rect x="99.0625%" y="1621" width="0.0519%" height="15" fill="rgb(231,27,28)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.05%)</title><rect x="99.0625%" y="1605" width="0.0519%" height="15" fill="rgb(238,42,2)" fg:x="76290" fg:w="40"/><text x="99.3125%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (19 samples, 0.02%)</title><rect x="99.0898%" y="1589" width="0.0247%" height="15" fill="rgb(215,15,9)" fg:x="76311" fg:w="19"/><text x="99.3398%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (18 samples, 0.02%)</title><rect x="99.0911%" y="1573" width="0.0234%" height="15" fill="rgb(205,195,15)" fg:x="76312" fg:w="18"/><text x="99.3411%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (12 samples, 0.02%)</title><rect x="99.0988%" y="1557" width="0.0156%" height="15" fill="rgb(233,143,2)" fg:x="76318" fg:w="12"/><text x="99.3488%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="99.0988%" y="1541" width="0.0156%" height="15" fill="rgb(207,108,8)" fg:x="76318" fg:w="12"/><text x="99.3488%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="99.0988%" y="1525" width="0.0156%" height="15" fill="rgb(214,53,21)" fg:x="76318" fg:w="12"/><text x="99.3488%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="99.0988%" y="1509" width="0.0156%" height="15" fill="rgb(238,212,36)" fg:x="76318" fg:w="12"/><text x="99.3488%" y="1519.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="99.0988%" y="1493" width="0.0156%" height="15" fill="rgb(218,151,47)" fg:x="76318" fg:w="12"/><text x="99.3488%" y="1503.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="99.0988%" y="1477" width="0.0156%" height="15" fill="rgb(245,160,3)" fg:x="76318" fg:w="12"/><text x="99.3488%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="99.1196%" y="1605" width="0.0104%" height="15" fill="rgb(238,106,19)" fg:x="76334" fg:w="8"/><text x="99.3696%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="99.1196%" y="1589" width="0.0104%" height="15" fill="rgb(207,206,9)" fg:x="76334" fg:w="8"/><text x="99.3696%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (8 samples, 0.01%)</title><rect x="99.1196%" y="1573" width="0.0104%" height="15" fill="rgb(254,40,10)" fg:x="76334" fg:w="8"/><text x="99.3696%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="99.1196%" y="1557" width="0.0104%" height="15" fill="rgb(245,81,8)" fg:x="76334" fg:w="8"/><text x="99.3696%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="99.1196%" y="1541" width="0.0104%" height="15" fill="rgb(214,119,17)" fg:x="76334" fg:w="8"/><text x="99.3696%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="99.1196%" y="1525" width="0.0104%" height="15" fill="rgb(245,100,39)" fg:x="76334" fg:w="8"/><text x="99.3696%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (19 samples, 0.02%)</title><rect x="99.1170%" y="1653" width="0.0247%" height="15" fill="rgb(243,105,16)" fg:x="76332" fg:w="19"/><text x="99.3670%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (19 samples, 0.02%)</title><rect x="99.1170%" y="1637" width="0.0247%" height="15" fill="rgb(214,53,2)" fg:x="76332" fg:w="19"/><text x="99.3670%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (17 samples, 0.02%)</title><rect x="99.1196%" y="1621" width="0.0221%" height="15" fill="rgb(251,54,50)" fg:x="76334" fg:w="17"/><text x="99.3696%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.03%)</title><rect x="99.1144%" y="1701" width="0.0312%" height="15" fill="rgb(244,121,37)" fg:x="76330" fg:w="24"/><text x="99.3644%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::SignedTransaction]&gt; (24 samples, 0.03%)</title><rect x="99.1144%" y="1685" width="0.0312%" height="15" fill="rgb(236,158,39)" fg:x="76330" fg:w="24"/><text x="99.3644%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (24 samples, 0.03%)</title><rect x="99.1144%" y="1669" width="0.0312%" height="15" fill="rgb(226,25,37)" fg:x="76330" fg:w="24"/><text x="99.3644%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (46 samples, 0.06%)</title><rect x="99.1144%" y="1733" width="0.0597%" height="15" fill="rgb(222,71,46)" fg:x="76330" fg:w="46"/><text x="99.3644%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (46 samples, 0.06%)</title><rect x="99.1144%" y="1717" width="0.0597%" height="15" fill="rgb(209,27,29)" fg:x="76330" fg:w="46"/><text x="99.3644%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::SignedTransaction&gt;&gt; (22 samples, 0.03%)</title><rect x="99.1456%" y="1701" width="0.0286%" height="15" fill="rgb(210,196,17)" fg:x="76354" fg:w="22"/><text x="99.3956%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="99.1456%" y="1685" width="0.0286%" height="15" fill="rgb(236,76,23)" fg:x="76354" fg:w="22"/><text x="99.3956%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.03%)</title><rect x="99.1456%" y="1669" width="0.0286%" height="15" fill="rgb(214,33,32)" fg:x="76354" fg:w="22"/><text x="99.3956%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.03%)</title><rect x="99.1456%" y="1653" width="0.0286%" height="15" fill="rgb(243,16,26)" fg:x="76354" fg:w="22"/><text x="99.3956%" y="1663.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="99.1456%" y="1637" width="0.0286%" height="15" fill="rgb(241,30,48)" fg:x="76354" fg:w="22"/><text x="99.3956%" y="1647.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="99.1456%" y="1621" width="0.0286%" height="15" fill="rgb(241,106,1)" fg:x="76354" fg:w="22"/><text x="99.3956%" y="1631.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="99.1456%" y="1605" width="0.0286%" height="15" fill="rgb(230,62,29)" fg:x="76354" fg:w="22"/><text x="99.3956%" y="1615.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="99.1638%" y="1589" width="0.0104%" height="15" fill="rgb(207,166,53)" fg:x="76368" fg:w="8"/><text x="99.4138%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (10 samples, 0.01%)</title><rect x="99.1781%" y="1637" width="0.0130%" height="15" fill="rgb(244,54,13)" fg:x="76379" fg:w="10"/><text x="99.4281%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (10 samples, 0.01%)</title><rect x="99.1781%" y="1621" width="0.0130%" height="15" fill="rgb(205,144,19)" fg:x="76379" fg:w="10"/><text x="99.4281%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (10 samples, 0.01%)</title><rect x="99.1781%" y="1605" width="0.0130%" height="15" fill="rgb(225,165,45)" fg:x="76379" fg:w="10"/><text x="99.4281%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="99.1742%" y="1701" width="0.0195%" height="15" fill="rgb(220,140,6)" fg:x="76376" fg:w="15"/><text x="99.4242%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::Transaction]&gt; (15 samples, 0.02%)</title><rect x="99.1742%" y="1685" width="0.0195%" height="15" fill="rgb(234,69,14)" fg:x="76376" fg:w="15"/><text x="99.4242%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::Transaction&gt; (15 samples, 0.02%)</title><rect x="99.1742%" y="1669" width="0.0195%" height="15" fill="rgb(243,24,33)" fg:x="76376" fg:w="15"/><text x="99.4242%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (12 samples, 0.02%)</title><rect x="99.1781%" y="1653" width="0.0156%" height="15" fill="rgb(253,100,43)" fg:x="76379" fg:w="12"/><text x="99.4281%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionRegister&lt;aptos_types::transaction::Transaction&gt;&gt; (23 samples, 0.03%)</title><rect x="99.1742%" y="1733" width="0.0299%" height="15" fill="rgb(221,168,15)" fg:x="76376" fg:w="23"/><text x="99.4242%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::Transaction&gt;&gt; (23 samples, 0.03%)</title><rect x="99.1742%" y="1717" width="0.0299%" height="15" fill="rgb(237,15,11)" fg:x="76376" fg:w="23"/><text x="99.4242%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aptos_types::transaction::Transaction&gt;&gt; (8 samples, 0.01%)</title><rect x="99.1936%" y="1701" width="0.0104%" height="15" fill="rgb(229,207,40)" fg:x="76391" fg:w="8"/><text x="99.4436%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="99.1936%" y="1685" width="0.0104%" height="15" fill="rgb(246,125,48)" fg:x="76391" fg:w="8"/><text x="99.4436%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="99.1936%" y="1669" width="0.0104%" height="15" fill="rgb(231,65,10)" fg:x="76391" fg:w="8"/><text x="99.4436%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="99.1936%" y="1653" width="0.0104%" height="15" fill="rgb(222,152,40)" fg:x="76391" fg:w="8"/><text x="99.4436%" y="1663.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="99.1936%" y="1637" width="0.0104%" height="15" fill="rgb(214,12,30)" fg:x="76391" fg:w="8"/><text x="99.4436%" y="1647.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="99.1936%" y="1621" width="0.0104%" height="15" fill="rgb(239,80,41)" fg:x="76391" fg:w="8"/><text x="99.4436%" y="1631.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="99.1936%" y="1605" width="0.0104%" height="15" fill="rgb(206,175,27)" fg:x="76391" fg:w="8"/><text x="99.4436%" y="1615.50"></text></g><g><title>run_benchmark::runExperimentWithSetting (575 samples, 0.75%)</title><rect x="98.4743%" y="1749" width="0.7466%" height="15" fill="rgb(222,43,39)" fg:x="75837" fg:w="575"/><text x="98.7243%" y="1759.50"></text></g><g><title>run_benchmark::get_transaction_register (13 samples, 0.02%)</title><rect x="99.2040%" y="1733" width="0.0169%" height="15" fill="rgb(243,47,50)" fg:x="76399" fg:w="13"/><text x="99.4540%" y="1743.50"></text></g><g><title>&lt;aptos_mempool::core_mempool::filler::SimpleFiller as aptos_mempool::core_mempool::filler::BlockFiller&gt;::add_all (13 samples, 0.02%)</title><rect x="99.2040%" y="1717" width="0.0169%" height="15" fill="rgb(243,61,21)" fg:x="76399" fg:w="13"/><text x="99.4540%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="99.2105%" y="1701" width="0.0104%" height="15" fill="rgb(208,172,5)" fg:x="76404" fg:w="8"/><text x="99.4605%" y="1711.50"></text></g><g><title>_start (5,839 samples, 7.58%)</title><rect x="91.6532%" y="2021" width="7.5819%" height="15" fill="rgb(219,24,25)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="2031.50">_start</text></g><g><title>__libc_start_main (5,839 samples, 7.58%)</title><rect x="91.6532%" y="2005" width="7.5819%" height="15" fill="rgb(235,42,41)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="2015.50">__libc_sta..</text></g><g><title>[libc.so.6] (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1989" width="7.5819%" height="15" fill="rgb(226,190,24)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1999.50">[libc.so.6]</text></g><g><title>main (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1973" width="7.5819%" height="15" fill="rgb(216,55,27)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1983.50">main</text></g><g><title>std::rt::lang_start_internal (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1957" width="7.5819%" height="15" fill="rgb(231,77,14)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1967.50">std::rt::l..</text></g><g><title>std::panic::catch_unwind (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1941" width="7.5819%" height="15" fill="rgb(208,108,34)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1951.50">std::panic..</text></g><g><title>std::panicking::try (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1925" width="7.5819%" height="15" fill="rgb(228,183,52)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1935.50">std::panic..</text></g><g><title>std::panicking::try::do_call (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1909" width="7.5819%" height="15" fill="rgb(224,152,1)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1919.50">std::panic..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1893" width="7.5819%" height="15" fill="rgb(246,115,8)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1903.50">std::rt::l..</text></g><g><title>std::panic::catch_unwind (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1877" width="7.5819%" height="15" fill="rgb(211,76,13)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1887.50">std::panic..</text></g><g><title>std::panicking::try (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1861" width="7.5819%" height="15" fill="rgb(233,214,49)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1871.50">std::panic..</text></g><g><title>std::panicking::try::do_call (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1845" width="7.5819%" height="15" fill="rgb(223,44,51)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1855.50">std::panic..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1829" width="7.5819%" height="15" fill="rgb(225,111,51)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1839.50">core::ops:..</text></g><g><title>std::rt::lang_start::{{closure}} (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1813" width="7.5819%" height="15" fill="rgb(231,185,26)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1823.50">std::rt::l..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1797" width="7.5819%" height="15" fill="rgb(233,111,30)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1807.50">std::sys_c..</text></g><g><title>core::ops::function::FnOnce::call_once (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1781" width="7.5819%" height="15" fill="rgb(250,1,47)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1791.50">core::ops:..</text></g><g><title>run_benchmark::main (5,839 samples, 7.58%)</title><rect x="91.6532%" y="1765" width="7.5819%" height="15" fill="rgb(254,210,3)" fg:x="70584" fg:w="5839"/><text x="91.9032%" y="1775.50">run_benchm..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.01%)</title><rect x="99.2209%" y="1749" width="0.0143%" height="15" fill="rgb(234,14,22)" fg:x="76412" fg:w="11"/><text x="99.4709%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="99.2209%" y="1733" width="0.0143%" height="15" fill="rgb(221,117,4)" fg:x="76412" fg:w="11"/><text x="99.4709%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.01%)</title><rect x="99.2248%" y="1717" width="0.0104%" height="15" fill="rgb(251,147,27)" fg:x="76415" fg:w="8"/><text x="99.4748%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="99.2443%" y="2005" width="0.0117%" height="15" fill="rgb(226,52,11)" fg:x="76430" fg:w="9"/><text x="99.4943%" y="2015.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="99.2443%" y="1989" width="0.0117%" height="15" fill="rgb(229,222,5)" fg:x="76430" fg:w="9"/><text x="99.4943%" y="1999.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="99.2443%" y="1973" width="0.0117%" height="15" fill="rgb(232,76,2)" fg:x="76430" fg:w="9"/><text x="99.4943%" y="1983.50"></text></g><g><title>realloc (9 samples, 0.01%)</title><rect x="99.2443%" y="1957" width="0.0117%" height="15" fill="rgb(242,108,2)" fg:x="76430" fg:w="9"/><text x="99.4943%" y="1967.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="99.2443%" y="2021" width="0.0130%" height="15" fill="rgb(213,165,6)" fg:x="76430" fg:w="10"/><text x="99.4943%" y="2031.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (17 samples, 0.02%)</title><rect x="99.2897%" y="2021" width="0.0221%" height="15" fill="rgb(222,24,42)" fg:x="76465" fg:w="17"/><text x="99.5397%" y="2031.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::convert_change_set (8 samples, 0.01%)</title><rect x="99.3261%" y="2005" width="0.0104%" height="15" fill="rgb(242,170,24)" fg:x="76493" fg:w="8"/><text x="99.5761%" y="2015.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::finish (11 samples, 0.01%)</title><rect x="99.3261%" y="2021" width="0.0143%" height="15" fill="rgb(209,110,40)" fg:x="76493" fg:w="11"/><text x="99.5761%" y="2031.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (12 samples, 0.02%)</title><rect x="99.3520%" y="2021" width="0.0156%" height="15" fill="rgb(233,146,36)" fg:x="76513" fg:w="12"/><text x="99.6020%" y="2031.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}} (9 samples, 0.01%)</title><rect x="99.3676%" y="2021" width="0.0117%" height="15" fill="rgb(229,33,32)" fg:x="76525" fg:w="9"/><text x="99.6176%" y="2031.50"></text></g><g><title>arc_swap::debt::list::Node::traverse (9 samples, 0.01%)</title><rect x="99.3676%" y="2005" width="0.0117%" height="15" fill="rgb(225,55,34)" fg:x="76525" fg:w="9"/><text x="99.6176%" y="2015.50"></text></g><g><title>arc_swap::debt::Debt::pay_all::{{closure}}::{{closure}} (9 samples, 0.01%)</title><rect x="99.3676%" y="1989" width="0.0117%" height="15" fill="rgb(217,32,50)" fg:x="76525" fg:w="9"/><text x="99.6176%" y="1999.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="99.4027%" y="2021" width="0.0156%" height="15" fill="rgb(206,110,53)" fg:x="76552" fg:w="12"/><text x="99.6527%" y="2031.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.02%)</title><rect x="99.4027%" y="2005" width="0.0156%" height="15" fill="rgb(247,25,10)" fg:x="76552" fg:w="12"/><text x="99.6527%" y="2015.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (9 samples, 0.01%)</title><rect x="99.4533%" y="2021" width="0.0117%" height="15" fill="rgb(226,67,48)" fg:x="76591" fg:w="9"/><text x="99.7033%" y="2031.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (9 samples, 0.01%)</title><rect x="99.4533%" y="2005" width="0.0117%" height="15" fill="rgb(239,73,28)" fg:x="76591" fg:w="9"/><text x="99.7033%" y="2015.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (11 samples, 0.01%)</title><rect x="99.4676%" y="2005" width="0.0143%" height="15" fill="rgb(234,200,41)" fg:x="76602" fg:w="11"/><text x="99.7176%" y="2015.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (27 samples, 0.04%)</title><rect x="99.4676%" y="2021" width="0.0351%" height="15" fill="rgb(233,76,35)" fg:x="76602" fg:w="27"/><text x="99.7176%" y="2031.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (16 samples, 0.02%)</title><rect x="99.4819%" y="2005" width="0.0208%" height="15" fill="rgb(238,166,31)" fg:x="76613" fg:w="16"/><text x="99.7319%" y="2015.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.02%)</title><rect x="99.4819%" y="1989" width="0.0208%" height="15" fill="rgb(219,218,51)" fg:x="76613" fg:w="16"/><text x="99.7319%" y="1999.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (16 samples, 0.02%)</title><rect x="99.4819%" y="1973" width="0.0208%" height="15" fill="rgb(221,82,53)" fg:x="76613" fg:w="16"/><text x="99.7319%" y="1983.50"></text></g><g><title>subtle::black_box (16 samples, 0.02%)</title><rect x="99.4819%" y="1957" width="0.0208%" height="15" fill="rgb(218,179,13)" fg:x="76613" fg:w="16"/><text x="99.7319%" y="1967.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_simple_instr (56 samples, 0.07%)</title><rect x="99.5546%" y="2005" width="0.0727%" height="15" fill="rgb(210,53,38)" fg:x="76669" fg:w="56"/><text x="99.8046%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (8 samples, 0.01%)</title><rect x="99.6364%" y="2005" width="0.0104%" height="15" fill="rgb(214,167,31)" fg:x="76732" fg:w="8"/><text x="99.8864%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (47 samples, 0.06%)</title><rect x="99.6468%" y="2005" width="0.0610%" height="15" fill="rgb(223,26,5)" fg:x="76740" fg:w="47"/><text x="99.8968%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (11 samples, 0.01%)</title><rect x="99.7091%" y="2005" width="0.0143%" height="15" fill="rgb(218,95,23)" fg:x="76788" fg:w="11"/><text x="99.9591%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (21 samples, 0.03%)</title><rect x="99.7234%" y="2005" width="0.0273%" height="15" fill="rgb(248,205,45)" fg:x="76799" fg:w="21"/><text x="99.9734%" y="2015.50"></text></g><g><title>move_vm_runtime::loader::Resolver::loader (31 samples, 0.04%)</title><rect x="99.7559%" y="2005" width="0.0403%" height="15" fill="rgb(211,76,6)" fg:x="76824" fg:w="31"/><text x="100.0059%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (201 samples, 0.26%)</title><rect x="99.5520%" y="2021" width="0.2610%" height="15" fill="rgb(250,176,29)" fg:x="76667" fg:w="201"/><text x="99.8020%" y="2031.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::has_copy (8 samples, 0.01%)</title><rect x="99.8338%" y="2005" width="0.0104%" height="15" fill="rgb(240,107,31)" fg:x="76884" fg:w="8"/><text x="100.0838%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (34 samples, 0.04%)</title><rect x="99.8130%" y="2021" width="0.0441%" height="15" fill="rgb(229,215,17)" fg:x="76868" fg:w="34"/><text x="100.0630%" y="2031.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (9 samples, 0.01%)</title><rect x="99.8714%" y="2021" width="0.0117%" height="15" fill="rgb(240,79,8)" fg:x="76913" fg:w="9"/><text x="100.1214%" y="2031.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (9 samples, 0.01%)</title><rect x="99.8714%" y="2005" width="0.0117%" height="15" fill="rgb(243,110,48)" fg:x="76913" fg:w="9"/><text x="100.1214%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (27 samples, 0.04%)</title><rect x="99.8844%" y="2005" width="0.0351%" height="15" fill="rgb(236,201,9)" fg:x="76923" fg:w="27"/><text x="100.1344%" y="2015.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (31 samples, 0.04%)</title><rect x="99.8831%" y="2021" width="0.0403%" height="15" fill="rgb(220,87,26)" fg:x="76922" fg:w="31"/><text x="100.1331%" y="2031.50"></text></g><g><title>all (77,012 samples, 100%)</title><rect x="0.0000%" y="2053" width="100.0000%" height="15" fill="rgb(212,118,27)" fg:x="0" fg:w="77012"/><text x="0.2500%" y="2063.50"></text></g><g><title>run_benchmark-b (77,012 samples, 100.00%)</title><rect x="0.0000%" y="2037" width="100.0000%" height="15" fill="rgb(244,178,50)" fg:x="0" fg:w="77012"/><text x="0.2500%" y="2047.50">run_benchmark-b</text></g></svg></svg>